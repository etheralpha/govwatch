{"rss":{"@version":"2.0","@xmlns:discourse":"http://www.discourse.org/","@xmlns:atom":"http://www.w3.org/2005/Atom","@xmlns:dc":"http://purl.org/dc/elements/1.1/","channel":{"title":"Fellowship of Ethereum Magicians - Latest topics","link":"https://ethereum-magicians.org/latest","description":"Latest topics","lastBuildDate":"Sun, 14 Apr 2024 18:24:52 +0000","atom:link":{"@href":"https://ethereum-magicians.org/latest.rss","@rel":"self","@type":"application/rss+xml"},"item":[{"title":"Large Number of Validators for DVT Testing","dc:creator":"AndyGPN","category":"Primordial Soup","description":"<p>Hi everyone,</p>\n<p>We’ve been looking into the new distributed verification solutions, SSV and Obol, specifically. We have build a decent size cluster of nodes to experiment on, but are having trouble getting enough validators or even holETH. Our goal is to eventually move this setup to the mainnet, but we need to thoroughly test everything first.<br>\nWe’d like to have at least a few hundred Holesky validators running on our machines.</p>\n<p>Is there a way to easily obtain at least a couple thousand holETH to create the necessary validators, or better yet, are there any validators already running that we could take over? Given the current queue times, that’d be even better.<br>\nWe’re happy to “return” them after a few months. I’m also happy to verify that I’m human and that this is not for a nefarious purpose. <img src=\"https://ethereum-magicians.org/images/emoji/twitter/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>Thanks,<br>\nAndy</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/large-number-of-validators-for-dvt-testing/19656\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/large-number-of-validators-for-dvt-testing/19656","pubDate":"Sun, 14 Apr 2024 18:24:52 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19656"},"source":{"@url":"https://ethereum-magicians.org/t/large-number-of-validators-for-dvt-testing/19656.rss","#text":"Large Number of Validators for DVT Testing"},"filter":false},{"title":"ePBS Discusion topic","dc:creator":"potuz","category":"Core EIPs","description":"<p>Creating a topic for discussions for a future EIP, full design notes are included  in this document:</p>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://hackmd.io/@potuz/rJ9GCnT1C\">\n  <header class=\"source\">\n      <img src=\"https://ethereum-magicians.org/uploads/default/original/2X/8/8f0a562a90992dd656ced3f9b9b37c942cfbde54.png\" class=\"site-icon\" data-dominant-color=\"696969\" width=\"134\" height=\"134\">\n\n      <a href=\"https://hackmd.io/@potuz/rJ9GCnT1C\" target=\"_blank\" rel=\"noopener nofollow ugc\">HackMD</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:690/394;\"><img src=\"https://ethereum-magicians.org/uploads/default/optimized/2X/6/62d6a99d68e97088bdf157a582a55d8b5cccb38b_2_690x394.jpeg\" class=\"thumbnail\" data-dominant-color=\"5C6962\" width=\"690\" height=\"394\"></div>\n\n<h3><a href=\"https://hackmd.io/@potuz/rJ9GCnT1C\" target=\"_blank\" rel=\"noopener nofollow ugc\">ePBS specification notes - HackMD</a></h3>\n\n  <p>Fully detail specification notes for a minimal implementation of ePBS</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>The Python full specification is included in</p>\n<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/potuz/consensus-specs/pull/2\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/potuz/consensus-specs/pull/2\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/potuz/consensus-specs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/potuz/consensus-specs/pull/2\" target=\"_blank\" rel=\"noopener nofollow ugc\">[WIP] Minimal ePBS without Max EB and 7002</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>potuz:dev</code> ← <code>potuz:epbs_stripped_out</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-04-02\" data-time=\"18:50:18\" data-timezone=\"UTC\">06:50PM - 02 Apr 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/potuz\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"potuz\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/5/57c38e1a2cefa95de639b5fe857cdd332c311c69.jpeg\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"294739\">\n            potuz\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"78 commits changed 7 files with 2076 additions and 0 deletions\">\n          <a href=\"https://github.com/potuz/consensus-specs/pull/2/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+2076</span>\n            <span class=\"removed\">-0</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">Full specification for ePBS\n\nThe full design notes are included in https://hac<span class=\"show-more-container\"><a href=\"https://github.com/potuz/consensus-specs/pull/2\" target=\"_blank\" rel=\"noopener nofollow ugc\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\">kmd.io/@potuz/rJ9GCnT1C\n\nCurrently fully specified documents\n- beacon-chain.md\n- p2p-interface.md\n- validator.md\n- builder.md\n\nMost of the engine API and the forkchoice handlers in forkchoice.md are ready\n\nStill missing is:\n\n- Cleanup of engine API\n- Execution specification\n- forkchoice accounting for (block, slot) voting, IL availability and payload boosts. \n- Builder API changes.</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/epbs-discusion-topic/19634\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/epbs-discusion-topic/19634","pubDate":"Fri, 12 Apr 2024 18:29:34 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19634"},"source":{"@url":"https://ethereum-magicians.org/t/epbs-discusion-topic/19634.rss","#text":"ePBS Discusion topic"},"filter":false},{"title":"EIP-7684: Return deposits for distinct credentials","dc:creator":"dapplion","category":"Core EIPs","description":"<p>Discussion thread for EIP-7684</p>\n<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/ethereum/EIPs/pull/8408\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ethereum/EIPs/pull/8408\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/ethereum/EIPs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/ethereum/EIPs/pull/8408\" target=\"_blank\" rel=\"noopener nofollow ugc\">Add EIP: Return deposits for distinct credentials</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>ethereum:master</code> ← <code>dapplion:deposit-frontrun</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-04-12\" data-time=\"04:30:33\" data-timezone=\"UTC\">04:30AM - 12 Apr 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/dapplion\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"dapplion\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/3/33c85e9176a49904487ac268eba9b47b4768127a.jpeg\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"505176\">\n            dapplion\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"3 commits changed 1 files with 67 additions and 0 deletions\">\n          <a href=\"https://github.com/ethereum/EIPs/pull/8408/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+67</span>\n            <span class=\"removed\">-0</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">Automatically withdraw deposits for existing validator records but with distinct<span class=\"show-more-container\"><a href=\"https://github.com/ethereum/EIPs/pull/8408\" target=\"_blank\" rel=\"noopener nofollow ugc\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\"> execution withdrawal credentials</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7684-return-deposits-for-distinct-credentials/19632\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7684-return-deposits-for-distinct-credentials/19632","pubDate":"Fri, 12 Apr 2024 14:27:28 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19632"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7684-return-deposits-for-distinct-credentials/19632.rss","#text":"EIP-7684: Return deposits for distinct credentials"},"filter":false},{"title":"ERC-7683: Cross Chain Intents Standard","dc:creator":"marktoda","category":"ERCs","description":"<p>The Cross Chain Intents Standard is meant to unify off-chain messages and on-chain settlement smart contracts to enable sharing of infrastructure, filler networks, and orders across cross-chain bridging and trading systems.</p>\n<p>PR:</p><aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/ethereum/ERCs/pull/375\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ethereum/ERCs/pull/375\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/ethereum/ERCs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/ethereum/ERCs/pull/375\" target=\"_blank\" rel=\"noopener nofollow ugc\">Add ERC: Cross Chain Intents</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>ethereum:master</code> ← <code>marktoda:add-cross-chain-standard-erc</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-04-11\" data-time=\"14:24:59\" data-timezone=\"UTC\">02:24PM - 11 Apr 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/marktoda\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"marktoda\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/7/709160b0d2624c1793873f9a4bea6bf221f13d5d.jpeg\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"7F5560\">\n            marktoda\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"14 commits changed 1 files with 178 additions and 0 deletions\">\n          <a href=\"https://github.com/ethereum/ERCs/pull/375/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+178</span>\n            <span class=\"removed\">-0</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">This commit adds an ERC for a Cross Chain Intents Standard which is meant to uni<span class=\"show-more-container\"><a href=\"https://github.com/ethereum/ERCs/pull/375\" target=\"_blank\" rel=\"noopener nofollow ugc\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\">fy off-chain messages and on-chain settlement smart contracts to enable sharing of infrastructure, filler networks, and orders across cross-chain bridging and trading systems.</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>5 posts - 4 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-7683-cross-chain-intents-standard/19619\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-7683-cross-chain-intents-standard/19619","pubDate":"Thu, 11 Apr 2024 14:25:10 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19619"},"source":{"@url":"https://ethereum-magicians.org/t/erc-7683-cross-chain-intents-standard/19619.rss","#text":"ERC-7683: Cross Chain Intents Standard"},"filter":false},{"title":"IDEA for ERC: arbitrary callable contract interface","dc:creator":"zergity","category":"ERCs","description":"<blockquote>\n<p>On Wednesday, 28th of February, Seneca’s Chamber contracts, previously audited by Halborn Security, were affected by a bug approval and users’ funds were compromised. In the attack, Seneca’s Chamber.sol contract was implicated. The attacker exploited Chamber’s <code>performOperations()</code> function, allowing calls to functions in other contracts, and directed a call to <code>.transferFrom()</code> , using the Chamber contracts to send tokens to their address.</p>\n</blockquote>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://mirror.xyz/0x289D0033d536eb3Ff53367f0A8CceA00d4Ac63a0/_VPi_1T8CWsnQctOA4Z8WS8jKc2B6lIV0hPcQ2Kb-c4\">\n  <header class=\"source\">\n      <img src=\"https://ethereum-magicians.org/uploads/default/original/2X/3/3d91042722f574b2be9ea1ae09fbc8ea144b5eee.png\" class=\"site-icon\" data-dominant-color=\"489FFF\" width=\"16\" height=\"16\">\n\n      <a href=\"https://mirror.xyz/0x289D0033d536eb3Ff53367f0A8CceA00d4Ac63a0/_VPi_1T8CWsnQctOA4Z8WS8jKc2B6lIV0hPcQ2Kb-c4\" target=\"_blank\" rel=\"noopener nofollow ugc\">mirror.xyz</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <img width=\"500\" height=\"500\" src=\"https://ethereum-magicians.org/uploads/default/optimized/2X/e/e17d69d597f3174d3e8469cdd64d28a18b19f5d5_2_500x500.png\" class=\"thumbnail onebox-avatar\" data-dominant-color=\"3F3C2B\">\n\n<h3><a href=\"https://mirror.xyz/0x289D0033d536eb3Ff53367f0A8CceA00d4Ac63a0/_VPi_1T8CWsnQctOA4Z8WS8jKc2B6lIV0hPcQ2Kb-c4\" target=\"_blank\" rel=\"noopener nofollow ugc\">Seneca Exploit - Post Mortem</a></h3>\n\n  <p>On Wednesday, 28th of February, Seneca's Chamber contracts, previously audited by Halborn Security, were affected by a bug approval and users' funds were compromised. In the attack, Seneca’s Chamber.sol contract was implicated. The attacker exploited...</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<blockquote>\n<p>The lack of input validation on the contract is still present, but through the blacklist blockage of <code>_transferFrom</code> functions of deposits assets it is now possible to repay debt and withdraw collateral.</p>\n</blockquote>\n<p>Arbitrary calls are often discouraged by Security Audit firms, but in my opinion, they should be properly encouraged with better design, as they represent the trustless nature of smart contract design. If a contract only trusts (or distrusts) certain other contracts, those trusted contracts could become attack vectors, while still limiting the functionality of the applications.</p>\n<p>Blacklisting the <code>transferFrom()</code> function is also not a comprehensive solution, as it overlooks all other <em>transfer-from</em> functions from other token standards (e.g., 721, 1155, etc.), not to mention other non-standard custom functions created by token developers that protocols like Seneca would never have predicted.</p>\n<p>Another approach by ERC-6120 (which is also designed with trust-less arbitrary contract calls) to deal with the attack above is by using a special ERC-165 interface ID <code>0x61206120</code> that token contracts MUST NEVER implement. This way, ERC-6120 (while holding all user token approval) can support arbitrary contract calls without exposing itself to the <code>transferFrom</code> attack. This is based on the fact that legacy and future token contracts would never implement the <code>0x61206120</code> interface ID, and any other non-token contract can implement it as needed.</p>\n<p>The interface ID checking works as intended, but it isn’t perfect. Unlike other ERC-165 interfaces, arbitrary calls emphasize the absence of an interface instead of its presence. Therefore, there’s a risk that a token contract could accidentally signal support for such an interface ID (like 0x61206120) without being aware of the risk.</p>\n<p>I propose using a function with an explicit name and text message to directly warn token developers and auditors. Then, contracts with support for arbitrary calls can verify the absence of the function in ERC-165 style.</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-solidity\">abstract contract NotToken  {\n    function isNotToken() external pure returns (bytes32) {\n        return \"THIS CONTRACT IS NOT A TOKEN\";\n    }\n}\n</code></pre>\n<p>As described by the contract name, function, and literal text, token contracts should never implement it. Any non-token contracts that allow arbitrary calls can implement this function to signal their support.</p>\n<p>What do you think of the proposal? Please discuss and give comments.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/idea-for-erc-arbitrary-callable-contract-interface/19615\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/idea-for-erc-arbitrary-callable-contract-interface/19615","pubDate":"Thu, 11 Apr 2024 11:38:11 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19615"},"source":{"@url":"https://ethereum-magicians.org/t/idea-for-erc-arbitrary-callable-contract-interface/19615.rss","#text":"IDEA for ERC: arbitrary callable contract interface"},"filter":false},{"title":"ERC-7682: Auxiliary Funds Capability","dc:creator":"lsr","category":"ERCs","description":"<h2><a name=\"abstract-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#abstract-1\"></a>Abstract</h2>\n<p>An EIP-5792 compliant capability that allows wallets to indicate to apps that they have access to funds beyond those that can be accounted for by looking up balances onchain given the wallet’s address.</p>\n<h2><a name=\"motivation-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#motivation-2\"></a>Motivation</h2>\n<p>Many applications check users’ balances before letting them complete some action. For example, if a user wants to swap some amount of tokens on a dex, the dex will commonly block the user from doing so if it sees that the user does not have that amount of tokens at their address. However, more advanced wallets have features that let users access funds from other sources. Wallets need a way to tell apps that they have access to additional funds so that users using these more advanced wallets are not blocked by balance checks.</p>\n<h2><a name=\"specification-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#specification-3\"></a>Specification</h2>\n<p>One new EIP-5792 wallet capability is defined.</p>\n<h3><a name=\"wallet-implementation-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#wallet-implementation-4\"></a>Wallet Implementation</h3>\n<p>To conform to this specification, wallets that wish to indicate that they have access to auxiliary funds MUST respond to <code>wallet_getCapabilities</code> calls with an <code>auxiliaryFunds</code> object with a <code>supported</code> field set to <code>true</code> for each chain they have access to auxiliary funds on. This specification does not put any constraints on the source of the auxiliary funds.</p>\n<h4><a name=\"wallet_getcapabilities-response-specification-5\" class=\"anchor\" href=\"https://ethereum-magicians.org#wallet_getcapabilities-response-specification-5\"></a><code>wallet_getCapabilities</code> Response Specification</h4>\n<pre data-code-wrap=\"typescript\"><code class=\"lang-typescript\">type AuxiliaryFundsCapability = {\n  supported: boolean;\n}\n</code></pre>\n<h5><a name=\"wallet_getcapabilities-example-response-6\" class=\"anchor\" href=\"https://ethereum-magicians.org#wallet_getcapabilities-example-response-6\"></a><code>wallet_getCapabilities</code> Example Response</h5>\n<pre data-code-wrap=\"json\"><code class=\"lang-json\">{\n  \"0x2105\": {\n    \"auxiliaryFunds\": {\n      \"supported\": true\n    },\n  },\n  \"0x14A34\": {\n    \"auxiliaryFunds\": {\n      \"supported\": true\n    }\n  }\n}\n</code></pre>\n<h3><a name=\"app-implementation-7\" class=\"anchor\" href=\"https://ethereum-magicians.org#app-implementation-7\"></a>App Implementation</h3>\n<p>When an app sees that a connected wallet has access to auxiliary funds via the <code>auxiliaryFunds</code> capability in a <code>wallet_getCapabilities</code> response, the app SHOULD NOT block users from taking actions on the basis of asset balance checks.</p>\n<h2><a name=\"rationale-8\" class=\"anchor\" href=\"https://ethereum-magicians.org#rationale-8\"></a>Rationale</h2>\n<h3><a name=\"alternatives-9\" class=\"anchor\" href=\"https://ethereum-magicians.org#alternatives-9\"></a>Alternatives</h3>\n<h4><a name=\"advanced-balance-fetching-10\" class=\"anchor\" href=\"https://ethereum-magicians.org#advanced-balance-fetching-10\"></a>Advanced Balance Fetching</h4>\n<p>An alternative we considered is defining a way for apps to fetch available auxiliary balances. This could be done, for example, by providing a URL as part of the <code>auxiliaryFunds</code> capability that apps could use to fetch auxiliary balance information. However, we ultimately decided that a boolean was enough to indicate to apps that they should not block user actions on the basis of balance checks, and it is minimally burdensome for apps to implement.</p>\n<p>The shape of this capability allows for a more advanced extension if apps feel more functionality is needed.</p>\n<h4><a name=\"auxiliary-funds-per-asset-11\" class=\"anchor\" href=\"https://ethereum-magicians.org#auxiliary-funds-per-asset-11\"></a>Auxiliary Funds per Asset</h4>\n<p>We could also specify auxiliary funds support per asset. We decided against this because this list could get quite large if a wallet has auxiliary funds supports for many assets, and a single boolean should be enough for apps to not block users from taking actions.</p>\n<h2><a name=\"security-considerations-12\" class=\"anchor\" href=\"https://ethereum-magicians.org#security-considerations-12\"></a>Security Considerations</h2>\n<p>Apps MUST NOT make any assumptions about the source of auxiliary funds. Apps’ smart contracts SHOULD still, as they would today, make appropriate balance checks onchain when processing a transaction.</p>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-7682-auxiliary-funds-capability/19599\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-7682-auxiliary-funds-capability/19599","pubDate":"Tue, 09 Apr 2024 21:27:11 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19599"},"source":{"@url":"https://ethereum-magicians.org/t/erc-7682-auxiliary-funds-capability/19599.rss","#text":"ERC-7682: Auxiliary Funds Capability"},"filter":false},{"title":"ERC-7681: Dual Nature Multi Token Protocol","dc:creator":"sennett-lau","category":"ERCs","description":"<h1><a name=\"dual-nature-multi-token-protocol-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#dual-nature-multi-token-protocol-1\"></a>Dual Nature Multi Token Protocol</h1>\n<p>requires: ERC-20, ERC1155</p>\n<h2><a name=\"abstract-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#abstract-2\"></a>Abstract</h2>\n<p>This proposal <a href=\"https://ethereum-magicians.org\">ERC-7681</a> delineates the integration of the fungible <a href=\"https://ethereum-magicians.org\">ERC-20</a> token contract with the semi-fungible <a href=\"https://ethereum-magicians.org\">ERC-1155</a> multi-token standard, enabling cohesive operations between both standards within a single contract framework. It defines a mechanism for combining two token contracts and synchronizing operations between them.</p>\n<h2><a name=\"motivation-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#motivation-3\"></a>Motivation</h2>\n<p>Inspired by <a href=\"https://ethereum-magicians.org\">ERC-7631</a> Dual Nature Token Pair, which introduced a concept of interlinkable tokens between ERC-20 and <a href=\"https://ethereum-magicians.org\">ERC-721</a>, a challenge arises due to the duplicated <code>Transfer(address, address, uint256)</code> event, making full compatibility challenging. However, combining ERC-20 and ERC-1155 offers similar benefits of non-fungible token (NFT) fractionalization natively. Here, acquiring ERC-20 tokens could automatically issue ERC-1155 tokens proportionally to the ERC-20 holdings, achieving full compliance with both standards.</p>\n<p>Furthermore, analogous to ERC-7631, this proposal allows users to opt out of ERC-1155 mints and transfers during the ERC-20 to ERC-1155 synchronization process.</p>\n<h2><a name=\"specification-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#specification-4\"></a>Specification</h2>\n<p>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in RFC 2119 and RFC 8174.</p>\n<h3><a name=\"overview-5\" class=\"anchor\" href=\"https://ethereum-magicians.org#overview-5\"></a>Overview</h3>\n<p>Every <code>ERC-7681</code> MUST implement both <code>ERC-20</code> and <code>ERC-1155</code> interface.</p>\n<h3><a name=\"erc-7681-interface-6\" class=\"anchor\" href=\"https://ethereum-magicians.org#erc-7681-interface-6\"></a>ERC-7681 Interface</h3>\n<p>The ERC-20 contract MUST implement the following interface.</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-solidity\">interface IERC7681 /* is IERC20, IERC1155 */ {\n    /// The contract MUST contain the following events\n    /// ERC20 related events\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n    /// The contract MUST contain the following events\n    /// ERC1155 related events\n    event TransferSingle(address indexed _operator, address indexed _from, address indexed _to, uint256 _id, uint256 _value);\n    event TransferBatch(address indexed _operator, address indexed _from, address indexed _to, uint256[] _ids, uint256[] _values);\n    event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\n    event URI(string _value, uint256 indexed _id);\n\n    /// The contract MAY contain the following functions\n    /// ERC20 related functions\n    function name() public view returns (string);\n    function symbol() public view returns (string);\n    function decimals() public view returns (uint8);\n\n    /// The contract MUST contain the following functions\n    /// ERC20 related functions\n    function totalSupply() public view returns (uint256);\n    function balanceOf(address _owner) public view returns (uint256);\n    function transfer(address _to, uint256 _value) public returns (bool);\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool);\n    function approve(address _spender, uint256 _value) public returns (bool);\n    function allowance(address _owner, address _spender) public view returns (uint256);\n\n    /// The contract MUST contain the following functions\n    /// ERC1155 related functions\n    function balanceOf(address _owner, uint256 _id) external view returns (uint256);\n    function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory);\n    function setApprovalForAll(address _operator, bool _approved) external;\n    function isApprovedForAll(address _owner, address _operator) external view returns (bool);\n    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external;\n    function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external;\n}\n</code></pre>\n<h3><a name=\"erc-7681-skippable-interface-7\" class=\"anchor\" href=\"https://ethereum-magicians.org#erc-7681-skippable-interface-7\"></a>ERC-7681 Skippable Interface</h3>\n<p>The ERC-7681 contract MAY implement the following interface.</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-solidity\">interface IERC7681Skippable {\n    /// @dev Emitted when the skip ERC1155 token status of `owner` is changed by any mechanism.\n    ///\n    /// This initial skip ERC1155 token status for `owner` can be dynamically chosen to\n    /// be true or false, but any changes to it MUST emit this event.\n    event SkipTokenSet(address indexed owner, bool status);\n\n    /// @dev Returns true if ERC-1155 mints and transfers to `owner` SHOULD be\n    /// skipped during ERC-20 to ERC-1155 synchronization. Otherwise false.\n    /// \n    /// This method MAY revert\n    ///\n    /// If this method reverts:\n    /// - Interacting code SHOULD interpret `setSkipToken` functionality as\n    ///   unavailable (and hide any functionality to call `setSkipToken`).\n    /// - The skip ERC1155 token status for `owner` SHOULD be interpreted as undefined.\n    ///\n    /// Once a true or false value has been returned for a given `owner`,\n    /// this method MUST NOT revert for the given `owner`.\n    function getSkipToken(address owner) external view returns (bool);\n\n    /// @dev Sets the caller's skip ERC1155 token status.\n    ///\n    /// This method MAY revert\n    /// (e.g. insufficient permissions, method not supported).\n    ///\n    /// Emits a {SkipTokenSet} event.\n    function setSkipToken(bool status) external;\n}\n</code></pre>\n<h2><a name=\"rationale-8\" class=\"anchor\" href=\"https://ethereum-magicians.org#rationale-8\"></a>Rationale</h2>\n<h3><a name=\"implementation-flexibility-9\" class=\"anchor\" href=\"https://ethereum-magicians.org#implementation-flexibility-9\"></a>Implementation Flexibility</h3>\n<p>This proposal intentionally does not prescribe specific token synchronization logic to allow for diverse implementation strategies and novel use cases, such as one-to-one synchronization or fractionalization of ERC-1155 tokens based on ERC-20 holdings. Developers are afforded the flexibility to determine their synchronization approach, provided it remains fully compliant with the specifications of both token standards.</p>\n<h3><a name=\"erc-1155-token-skipping-10\" class=\"anchor\" href=\"https://ethereum-magicians.org#erc-1155-token-skipping-10\"></a>ERC-1155 Token Skipping</h3>\n<p>For instances where the <code>owner</code> is a smart contract, setting the skip status to <code>true</code> by default can prevent unnecessary ERC-1155 minting for interactions with contracts like DEXs and lending protocols, thereby potentially reducing gas costs.</p>\n<h3><a name=\"backwards-compatibility-11\" class=\"anchor\" href=\"https://ethereum-magicians.org#backwards-compatibility-11\"></a>Backwards Compatibility</h3>\n<p>This proposal is fully backward-compatible with the existing ERC-20 and ERC-1155 standards, ensuring that contracts reliant on these standards will continue to function seamlessly.</p>\n<h2><a name=\"security-considerations-12\" class=\"anchor\" href=\"https://ethereum-magicians.org#security-considerations-12\"></a>Security Considerations</h2>\n<h3><a name=\"out-of-gas-denial-of-service-13\" class=\"anchor\" href=\"https://ethereum-magicians.org#out-of-gas-denial-of-service-13\"></a>Out-of-gas Denial of Service</h3>\n<p>When user transfers ERC-20 tokens, it can trigger the automatic minting, transfer, or burning of various ERC-1155 tokens. This process can lead to gas expenses that grow linearly with the number of actions O(n) rather than the fixed cost O(1) usually seen with ERC-20 token transactions. Additionally, the mechanism for choosing ERC-1155 token IDs might increase gas expenses further. Therefore, any synchronization strategy needs to account for the potential rise in ERC-1155 associated gas costs to avoid running out of gas, which could result in denial of service situations.</p>\n            <p><small>2 posts - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-7681-dual-nature-multi-token-protocol/19590\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-7681-dual-nature-multi-token-protocol/19590","pubDate":"Mon, 08 Apr 2024 15:54:54 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19590"},"source":{"@url":"https://ethereum-magicians.org/t/erc-7681-dual-nature-multi-token-protocol/19590.rss","#text":"ERC-7681: Dual Nature Multi Token Protocol"},"filter":false},{"title":"ERC-7680: Embedding Perpetual Value and Liquidity in Tokens","dc:creator":"catiga","category":"ERCs","description":"<h3><a name=\"abstract-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#abstract-1\"></a>Abstract</h3>\n<p>The ERC-7680 standard introduces a innovative token protocol that ensures every token intrinsically maintains a minimum value and liquidity. This is achieved by integrating a Base Liquidity Pool (BLP) within the token’s contract, safeguarding against the token’s devaluation and providing a fail-safe against the withdrawal of third-party liquidity pools, commonly seen in decentralized exchanges (DEX).</p>\n<h3><a name=\"introduction-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#introduction-2\"></a>Introduction</h3>\n<p>In the dynamic world of Ethereum and its diverse token standards, the innovative ERC-7680 proposal emerges as a groundbreaking approach to token economics. Aiming to address the inherent volatility and risks associated with reliance on external liquidity pools (e.g., DEXs), ERC-7680 introduces a novel token protocol that embeds intrinsic value and liquidity within the token itself, effectively preventing the token’s value from plummeting to zero due to liquidity withdrawal or fraudulent schemes.</p>\n<h3><a name=\"motivation-addressing-tokenomics-vulnerabilities-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#motivation-addressing-tokenomics-vulnerabilities-3\"></a>Motivation: Addressing Tokenomics Vulnerabilities</h3>\n<p>ERC-7680 targets the fundamental issues of token devaluation and reliance on external liquidity pools. By embedding a base value and liquidity within the token itself, ERC-7680 sets a new standard for stable and reliable token economics on Ethereum.</p>\n<h3><a name=\"the-core-of-erc-7680-solidvalue-and-inbuilt-liquidity-mechanism-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#the-core-of-erc-7680-solidvalue-and-inbuilt-liquidity-mechanism-4\"></a>The Core of ERC-7680: SolidValue and Inbuilt Liquidity Mechanism</h3>\n<p>At the heart of ERC-7680 is the concept of <strong>SolidValue</strong>, a design principle ensuring that each token maintains a baseline value backed by a fixed amount of Ethereum (ETH) within a Base Liquidity Pool (BLP) integrated into the token contract. This innovative mechanism ensures each token’s value is not solely dependent on external market forces but is instead underpinned by tangible, intrinsic value.</p>\n<h4><a name=\"key-mechanisms-5\" class=\"anchor\" href=\"https://ethereum-magicians.org#key-mechanisms-5\"></a>Key Mechanisms:</h4>\n<ol>\n<li><strong>SolidValue Calculation:</strong></li>\n</ol>\n<ul>\n<li>\n<p>The minimum value of each token (_eachTokenValue) is defined as the total ETH in the BLP (_totalSolidValue) divided by the total token supply (_totalSupply).</p>\n</li>\n<li>\n<p>MathematicalRepresentation:_eachTokenValue=_totalSolidValue/_totalSupply</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li><strong>Value</strong> <strong>Enhancement:</strong></li>\n</ol>\n<ul>\n<li>Token holders can increase the token’s intrinsic value by adding ETH to the BLP, thus raising the _totalSolidValue and, by extension, the _eachTokenValue.</li>\n</ul>\n<ol start=\"3\">\n<li><strong>Value</strong> <strong>Retrieval through Token Burn:</strong></li>\n</ol>\n<ul>\n<li>Holders can burn their tokens to withdraw a proportionate value from the BLP, effectively reducing _totalSupply and potentially increasing the _eachTokenValue for the remaining tokens.</li>\n</ul>\n<p>Solidifying Token Value through Direct Interactions:</p>\n<p>The ERC2510 standard allows for direct actions that impact the token’s value:</p>\n<pre><code class=\"lang-auto\">// Enhance the token's value by adding ETH to the BLP\nfunction enhanceTokenValue() external payable {\n    require(msg.value &gt; 0, \"Contribution must be more than 0 ETH\");\n    emit EnhanceValue(msg.sender, msg.value);\n}\n</code></pre>\n<pre><code class=\"lang-auto\">// Retrieve value from the BLP by burning tokens\nfunction retrieveTokenValue(uint256 _amount) external {\n    uint256 retrieveValue = calculateSolidValue() * _amount;\n    _burn(msg.sender, _amount);\n    payable(msg.sender).transfer(retrieveValue);\n    emit RetrieveValue(msg.sender, retrieveValue);\n}\n</code></pre>\n<p>These operations exemplify the proactive role holders can play in managing the token’s economic model, ensuring stability, and fostering a robust token ecosystem.</p>\n<h3><a name=\"advantages-of-erc-7680-6\" class=\"anchor\" href=\"https://ethereum-magicians.org#advantages-of-erc-7680-6\"></a>Advantages of ERC-7680:</h3>\n<ul>\n<li>\n<p><strong>Mitigation of Devaluation Risks:</strong> By embedding a minimum value within the token itself, ERC-7680 drastically reduces the risk of token value collapse.</p>\n</li>\n<li>\n<p><strong>Decentralization of</strong> <strong>Value</strong> <strong>Management:</strong> Empowers token holders to directly influence the token’s value, democratizing financial outcomes.</p>\n</li>\n<li>\n<p><strong>Enhanced Market Stability:</strong> Offers a buffer against market volatility and speculative trading, contributing to a more stable token economy.</p>\n</li>\n</ul>\n<h3><a name=\"a-call-for-community-engagement-7\" class=\"anchor\" href=\"https://ethereum-magicians.org#a-call-for-community-engagement-7\"></a>A Call for Community Engagement</h3>\n<p>The development of ERC-7680 is a collaborative effort, seeking insights, feedback, and contributions from the Ethereum community. By participating in the discussion and refinement of ERC2510, we can collectively enhance the stability, utility, and trustworthiness of tokens within the Ethereum ecosystem.</p>\n<h3><a name=\"erc-7680-implementation-repo-8\" class=\"anchor\" href=\"https://ethereum-magicians.org#erc-7680-implementation-repo-8\"></a>ERC-7680 Implementation Repo:</h3>\n<p><a href=\"https://github.com/catiga/ERC2510\" rel=\"noopener nofollow ugc\">ERC-7680 Implementation</a></p>\n            <p><small>3 posts - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-7680-embedding-perpetual-value-and-liquidity-in-tokens/19577\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-7680-embedding-perpetual-value-and-liquidity-in-tokens/19577","pubDate":"Sun, 07 Apr 2024 03:49:13 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19577"},"source":{"@url":"https://ethereum-magicians.org/t/erc-7680-embedding-perpetual-value-and-liquidity-in-tokens/19577.rss","#text":"ERC-7680: Embedding Perpetual Value and Liquidity in Tokens"},"filter":false},{"title":"ERC-2333, ERC-2334, ERC-2335: BLS12-381 Key Generation, Deterministic Account Hierarchy, Keystore","dc:creator":"mratsim","category":"ERCs","description":"<p>Discussing 3 EIPs together because they are all interdependent, all same status, impacting the same teams.</p>\n<p><strong>ERC-2333: BLS12-381 Key Generation</strong>: <a href=\"https://eips.ethereum.org/EIPS/eip-2333\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">ERC-2333: BLS12-381 Key Generation</a><br>\nDiscussion thread for <a href=\"https://github.com/ethereum/EIPs/pull/2333\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Draft EIP: BLS12-381 Key Generation by CarlBeek · Pull Request #2333 · ethereum/EIPs · GitHub</a><br>\nPrevious Github discussion thread: <a href=\"https://github.com/ethereum/EIPs/issues/2337\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Draft EIP: BLS12-381 Key Generation · Issue #2337 · ethereum/EIPs · GitHub</a><br>\nReopen to review PR: <a href=\"https://github.com/ethereum/ERCs/pull/362\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Update ERC-2333: Reopen to Review by mratsim · Pull Request #362 · ethereum/ERCs · GitHub</a></p>\n<p><strong>ERC-2334: BLS12-381 Deterministic Account Hierarchy</strong>: <a href=\"https://eips.ethereum.org/EIPS/eip-2334\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">ERC-2334: BLS12-381 Deterministic Account Hierarchy</a><br>\nDiscussion thread for <a href=\"https://github.com/ethereum/EIPs/pull/2334\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Draft EIP: BLS12-381 Deterministic Account Hierarchy by CarlBeek · Pull Request #2334 · ethereum/EIPs · GitHub</a><br>\nPrevious Github discussion thread: <a href=\"https://github.com/ethereum/EIPs/issues/2338\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Draft EIP: BLS12-381 Deterministic Account Hierarchy · Issue #2338 · ethereum/EIPs · GitHub</a><br>\nReopen to review PR: <a href=\"https://github.com/ethereum/ERCs/pull/363\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Update ERC-2334: Reopen to review by mratsim · Pull Request #363 · ethereum/ERCs · GitHub</a></p>\n<p><strong>ERC-2335: BLS12-381 Keystore</strong>: <a href=\"https://eips.ethereum.org/EIPS/eip-2335\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">ERC-2335: BLS12-381 Keystore</a><br>\nDiscussion thread for <a href=\"https://github.com/ethereum/EIPs/pull/2335\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Draft EIP: BLS12-381 Keystore by CarlBeek · Pull Request #2335 · ethereum/EIPs · GitHub</a><br>\nPrevious Github discussion thread: <a href=\"https://github.com/ethereum/EIPs/issues/2339\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Draft EIP: BLS12-381 Keystore · Issue #2339 · ethereum/EIPs · GitHub</a><br>\nReopen to review PR: <a href=\"https://github.com/ethereum/ERCs/pull/364\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Update ERC-2335: Reopen to Review by mratsim · Pull Request #364 · ethereum/ERCs · GitHub</a></p>\n<hr>\n<hr>\n<p>While those EIPs are marked stagnant, they are actually the defacto standard for the consensus layer keys as it is used in the official deposit-cli tool: <a href=\"https://github.com/ethereum/staking-deposit-cli/blob/v2.7.0/staking_deposit/key_handling/key_derivation/tree.py\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">staking-deposit-cli/staking_deposit/key_handling/key_derivation/tree.py at v2.7.0 · ethereum/staking-deposit-cli · GitHub</a></p>\n<p>Consensus client teams use the implementation in BLST: <a href=\"https://github.com/supranational/blst/commit/4e1935eb722289789f5b8f8447415f77b63ff37c\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">keygen.c: add EIP-2333 key derivation procedures. · supranational/blst@4e1935e · GitHub</a></p>\n<p>Both implementations were audited. (By NCC iirc)</p>\n<p><strong>All consensus clients implement them</strong> otherwise they can’t read consensus keys by the official staking tool.</p>\n<ul>\n<li>Lighthouse: <a href=\"https://github.com/sigp/lighthouse/blob/3058b96f2560f1da04ada4f9d8ba8e5651794ff6/book/src/key-management.md#L50-L52\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">lighthouse/book/src/key-management.md at 3058b96f2560f1da04ada4f9d8ba8e5651794ff6 · sigp/lighthouse · GitHub</a></li>\n<li>Lodestar: <a href=\"https://github.com/ChainSafe/lodestar/blob/f2ec0d42365b45495240ce65c27f4c6cdbd2d657/packages/cli/src/cmds/validator/import.ts#L21-L25\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">lodestar/packages/cli/src/cmds/validator/import.ts at f2ec0d42365b45495240ce65c27f4c6cdbd2d657 · ChainSafe/lodestar · GitHub</a></li>\n<li>Nimbus: <a href=\"https://github.com/status-im/nimbus-eth2/blob/dc19b082a9850bf9333e2371ea22230b61c2d501/docs/the_nimbus_book/src/data-dir.md?plain=1#L45\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">nimbus-eth2/docs/the_nimbus_book/src/data-dir.md at dc19b082a9850bf9333e2371ea22230b61c2d501 · status-im/nimbus-eth2 · GitHub</a></li>\n<li>Prysm: <a href=\"https://github.com/prysmaticlabs/prysm/blob/04f231a40083a5c1cf501abc7c46f39e2bf132f1/validator/accounts/doc.go#L1-L5\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">prysm/validator/accounts/doc.go at 04f231a40083a5c1cf501abc7c46f39e2bf132f1 · prysmaticlabs/prysm · GitHub</a></li>\n<li>Teku: <a href=\"https://github.com/Consensys/teku/blob/a11e4c5e0c78be82c68880f74996cc53ce7b6407/infrastructure/bls-keystore/src/main/java/tech/pegasys/teku/bls/keystore/KeyStore.java#L35-L39\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">teku/infrastructure/bls-keystore/src/main/java/tech/pegasys/teku/bls/keystore/KeyStore.java at a11e4c5e0c78be82c68880f74996cc53ce7b6407 · Consensys/teku · GitHub</a></li>\n</ul>\n<p>In the wild there are other implementations or references to EIP/ERC-2333:</p>\n<ul>\n<li><a href=\"https://github.com/ChainSafe/bls-keygen\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - ChainSafe/bls-keygen: Key management for BLS curves written in TypeScript and browser compatible</a></li>\n<li><a href=\"https://github.com/mratsim/constantine/blob/976c8bb/constantine/ethereum_eip2333_bls12381_key_derivation.nim\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">constantine/constantine/ethereum_eip2333_bls12381_key_derivation.nim at 976c8bb215a3f0b21ce3d05f894eb506072a6285 · mratsim/constantine · GitHub</a></li>\n<li><a href=\"https://github.com/paulmillr/bls12-381-keygen\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - paulmillr/bls12-381-keygen: BLS12-381 Key Generation compatible with EIP-2333.</a></li>\n<li><a href=\"https://medium.com/foundry-digital/eth-withdrawals-faq-1e12d0d737f3\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">ETH Withdrawals FAQ | Foundry</a></li>\n<li><a href=\"https://github.com/trezor/trezor-firmware/issues/1556#issuecomment-810865665\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Does Trezor Plan To Implement EIP2333 With A Firmware Update? · Issue #1556 · trezor/trezor-firmware · GitHub</a></li>\n</ul>\n<p>I will reopen all EIPs as <em>Review</em> as per comment <a href=\"https://github.com/ethereum/EIPs/issues/2337#issuecomment-1277480974\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Draft EIP: BLS12-381 Key Generation · Issue #2337 · ethereum/EIPs · GitHub</a><br>\nI suggest they are fast-tracked to <strong>Final (Core)</strong></p>\n<p>cc <a class=\"mention\" href=\"https://ethereum-magicians.org/u/carlbeek\">@CarlBeek</a>, the original author.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-2333-erc-2334-erc-2335-bls12-381-key-generation-deterministic-account-hierarchy-keystore/19566\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-2333-erc-2334-erc-2335-bls12-381-key-generation-deterministic-account-hierarchy-keystore/19566","pubDate":"Sat, 06 Apr 2024 14:13:45 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19566"},"source":{"@url":"https://ethereum-magicians.org/t/erc-2333-erc-2334-erc-2335-bls12-381-key-generation-deterministic-account-hierarchy-keystore/19566.rss","#text":"ERC-2333, ERC-2334, ERC-2335: BLS12-381 Key Generation, Deterministic Account Hierarchy, Keystore"},"filter":false},{"title":"ERC-7679: userOperationBuilder - a common onchain interface for dapps to interact with 4337 wallets","dc:creator":"bumblefudge","category":"ERCs","description":"<p>Opening on behalf of at least two Dereks (Chiang <span class=\"mention\">@derekchiang</span> and Rein <span class=\"mention\">@arein</span>) who are co-authors on this draft ERC:</p><aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/ethereum/ERCs/pull/361/files\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ethereum/ERCs/pull/361/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/ethereum/ERCs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/ethereum/ERCs/pull/361/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">Add ERC: UserOperation Builder</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>ethereum:master</code> ← <code>arein:feat/erc-7777</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-04-05\" data-time=\"02:05:40\" data-timezone=\"UTC\">02:05AM - 05 Apr 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/arein\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"arein\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/d/dda926fc4e9a1ad85aaf57a108b6ca5a9ea630a2.png\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"867665\">\n            arein\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"18 commits changed 1 files with 223 additions and 0 deletions\">\n          <a href=\"https://github.com/ethereum/ERCs/pull/361/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+223</span>\n            <span class=\"removed\">-0</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">When opening a pull request to submit a new EIP, please use the suggested templa<span class=\"show-more-container\"><a href=\"https://github.com/ethereum/ERCs/pull/361\" target=\"_blank\" rel=\"noopener nofollow ugc\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\">te: https://github.com/ethereum/EIPs/blob/master/eip-template.md\n\nWe have a GitHub bot that automatically merges some PRs. It will merge yours immediately if certain criteria are met:\n\n - The PR edits only existing draft PRs.\n - The build passes.\n - Your GitHub username or email address is listed in the 'author' header of all affected PRs, inside &lt;triangular brackets&gt;.\n - If matching on email address, the email address is the one publicly listed on your GitHub profile.</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<h2><a name=\"initial-draft-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#initial-draft-1\"></a>Initial Draft</h2>\n<h2><a name=\"abstract-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#abstract-2\"></a>Abstract</h2>\n<p>Different <a href=\"https://ethereum-magicians.org\">ERC-4337</a> smart account implementations encode their signature, nonce, and calldata differently.  This makes it difficult for DApps, wallets, and smart account toolings to integrate with smart accounts without integrating with account-specific SDKs, which introduces vendor lock-in and hurts smart account adoption.</p>\n<p>We propose a standard way for smart account implementations to put their account-specific encoding logic on-chain.</p>\n<h2><a name=\"motivation-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#motivation-3\"></a>Motivation</h2>\n<p>At the moment, to build a <a href=\"https://ethereum-magicians.org\">ERC-4337</a> UserOperation (UserOp for short) for a smart account requires detailed knowledge of how the smart account implementation works, since each implementation is free to encode its nonce, calldata, and signature differently.</p>\n<p>As a simple example, one account might use an execution function called <code>executeFoo</code>, whereas another account might use an execution function called <code>executeBar</code>.  This will result in the <code>calldata</code> being different between the two accounts, even if they are executing the same call.</p>\n<p>Therefore, someone who wants to send a UserOp for a given smart account needs to:</p>\n<ul>\n<li>Figure out which smart account implementation the account is using.</li>\n<li>Correctly encode signature/nonce/calldata given the smart account implementation, or use an account-specific SDK that knows how to do that.</li>\n</ul>\n<p>In practice, this means that most DApps, wallets, and AA toolings today are tied to a specific smart account implementation, resulting in fragmentation and vendor lock-in.</p>\n<h2><a name=\"specification-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#specification-4\"></a>Specification</h2>\n<p>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in RFC 2119.</p>\n<h3><a name=\"userop-builder-5\" class=\"anchor\" href=\"https://ethereum-magicians.org#userop-builder-5\"></a>UserOp builder</h3>\n<p>To conform to this standard, a smart account implementation must provide a “UserOp builder” contract that implements the IUserOperationBuilder interface, as defined below:</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-solidity\">struct Execution {\n    address target;\n    uint256 value;\n    bytes callData;\n}\ninterface IUserOperationBuilder {\n\t\t/**\n     * @dev Returns the ERC-4337 EntryPoint that the account implementation\n     * supports.\n     */\n    function entryPoint() external view returns (address);\n    \n    /**\n     * @dev Returns the nonce to use for the UserOp, given the context.\n     * @param smartAccount is the address of the UserOp sender.\n     * @param context is the data required for the UserOp builder to\n     * properly compute the requested field for the UserOp.\n     */\n    function getNonce(\n        address smartAccount,\n        bytes calldata context\n    ) external view returns (uint256);\n\t\n    /**\n     * @dev Returns the calldata for the UserOp, given the context and\n     * the executions.\n     * @param smartAccount is the address of the UserOp sender.\n     * @param executions are (destination, value, callData) tuples that\n     * the UserOp wants to execute.  It's an array so the UserOp can\n     * batch executions.\n     * @param context is the data required for the UserOp builder to\n     * properly compute the requested field for the UserOp. \n     */\n    function getCallData(\n        address smartAccount,\n        Execution[] calldata executions,\n        bytes calldata context\n    ) external view returns (bytes memory);\n    \n    /**\n     * @dev Returns the dummy signature for the UserOp, given the context\n     * and the executions.\n     * @param smartAccount is the address of the UserOp sender.\n     * @param executions are (destination, value, callData) tuples that\n     * the UserOp wants to execute.  It's an array so the UserOp can\n     * batch executions.\n     * @param context is the data required for the UserOp builder to\n     * properly compute the requested field for the UserOp.\n     */\n    function getDummySignature(\n        address smartAccount,\n        Execution[] calldata executions,\n        bytes calldata context\n    ) external view returns (bytes memory signature);\n    \n    /**\n     * @dev Returns a correctly encoded signature, given a UserOp that\n     * has been correctly filled out except for the signature field.\n     * @param smartAccount is the address of the UserOp sender.\n     * @param userOperation is the UserOp.  Every field of the UserOp should\n     * be valid except for the signature field.  The \"PackedUserOperation\"\n     * struct is as defined in ERC-4337.\n     * @param context is the data required for the UserOp builder to\n     * properly compute the requested field for the UserOp.\n     */\n    function getSignature(\n        address smartAccount,\n        PackedUserOperation calldata userOperation,\n        bytes calldata context\n    ) external view returns (bytes memory signature);\n}\n</code></pre>\n<h3><a name=\"using-the-userop-builder-6\" class=\"anchor\" href=\"https://ethereum-magicians.org#using-the-userop-builder-6\"></a>Using the UserOp builder</h3>\n<p>To build a UserOp using the UserOp builder, the building party should proceed as follows:</p>\n<ol>\n<li>Obtain the address of <code>UserOpBuilder</code> and a <code>context</code> from the account owner.  The <code>context</code> is an opaque bytes array from the perspective of the building party.  The smart account implementation may need the <code>context</code> in order to properly figure out the UserOp fields.  See the “Rationale” section for more info.</li>\n<li>Execute a multicall (batched <code>eth_call</code>s) of <code>getNonce</code>, <code>getCallData</code>, <code>getDummySignature</code> with the <code>context</code> and executions.  The building party will now have obtained the nonce, calldata, and dummy signature (see “Rationale” for what a dummy signature is).</li>\n<li>Fill out a UserOp with the data obtained previously.  This UserOp must be valid except for the <code>signature</code> field.  Then call (via <code>eth_call</code>) <code>getSignature</code> with the UserOp and <code>context</code> to obtain a completely valid UserOp.\n<ol>\n<li>Note that a UserOp has a lot more fields than <code>nonce</code>, <code>callData</code>, and <code>signature</code>, but how the building party obtains the other fields is outside of the scope of this document, since only these three fields are heavily dependent on the smart account implementation.</li>\n</ol>\n</li>\n</ol>\n<p>At this point, the building party has a completely valid UserOp that they can then submit to a bundler or do whatever it likes with it.</p>\n<h3><a name=\"using-the-userop-builder-when-the-account-hasnt-been-deployed-7\" class=\"anchor\" href=\"https://ethereum-magicians.org#using-the-userop-builder-when-the-account-hasnt-been-deployed-7\"></a>Using the UserOp builder when the account hasn’t been deployed</h3>\n<p>If the account has yet to be deployed, which means that the building party is looking to send the very first UserOp for this account, then the building party may modify the flow above as follows:</p>\n<ul>\n<li>In addition to the <code>UserOpBuilder</code> address and the <code>context</code>, the building party also obtains the <code>factory</code> and <code>factoryData</code> as defined in ERC-4337.</li>\n<li>When calling one of the view functions on the UserOp builder, the building party may use <code>eth_call</code> to deploy the <code>CounterfactualCall</code> contract with <code>factory</code> and <code>factoryData</code> (see below).  The <code>CounterfactualCall</code> contract would deploy the account before calling the view functions on the UserOp builder.</li>\n<li>When filling out the UserOp, the building party includes <code>factory</code> and <code>factoryData</code>.</li>\n</ul>\n<h3><a name=\"counterfactual-call-8\" class=\"anchor\" href=\"https://ethereum-magicians.org#counterfactual-call-8\"></a>Counterfactual call</h3>\n<p>The counterfactual call contract is inspired by <a href=\"https://ethereum-magicians.org\">ERC-6492</a>, which devised a mechanism to execute <code>isValidSignature</code> (see <a href=\"https://ethereum-magicians.org\">ERC-1271</a>) against a pre-deployed (counterfactual) contract.</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-solidity\">contract CounterfactualCall {\n    \n    error CounterfactualDeployFailed(bytes error);\n    constructor(\n        address smartAccount,\n        address create2Factory, \n        bytes memory factoryData,\n        address userOpBuilder, \n        bytes memory userOpBuilderCalldata\n    ) { \n        if (address(smartAccount).code.length == 0) {\n            (bool success, bytes memory ret) = create2Factory.call(factoryData);\n            if (!success || address(smartAccount).code.length == 0) revert CounterfactualDeployFailed(ret);\n        }\n        assembly {\n            let success := call(gas(), userOpBuilder, 0, add(userOpBuilderCalldata, 0x20), mload(userOpBuilderCalldata), 0, 0)\n            let ptr := mload(0x40)\n            returndatacopy(ptr, 0, returndatasize())\n            if iszero(success) {\n                revert(ptr, returndatasize())\n            }\n            return(ptr, returndatasize())\n        }\n    }\n    \n}\n</code></pre>\n<p>Here’s an example of calling this contract using the ethers and viem libraries:</p>\n<pre data-code-wrap=\"javascript\"><code class=\"lang-javascript\">// ethers\nconst nonce = await provider.call({\n  data: ethers.utils.concat([\n    counterfactualCallBytecode,\n    (\n      new ethers.utils.AbiCoder()).encode(['address','address', 'bytes', 'address','bytes'], \n      [smartAccount, userOpBuilder, getNonceCallData, factory, factoryData]\n    )\n  ])\n})\n\n// viem\nconst nonce = await client.call({\n  data: encodeDeployData({\n    abi: parseAbi(['constructor(address, address, bytes, address, bytes)']),\n    args: [smartAccount, userOpBuilder, getNonceCalldata, factory, factoryData],\n    bytecode: counterfactualCallBytecode,\n  })\n})\n</code></pre>\n<h2><a name=\"rationale-9\" class=\"anchor\" href=\"https://ethereum-magicians.org#rationale-9\"></a>Rationale</h2>\n<h3><a name=\"context-10\" class=\"anchor\" href=\"https://ethereum-magicians.org#context-10\"></a>Context</h3>\n<p>The <code>context</code> is an array of bytes that encodes whatever data the UserOp builder needs in order to correctly determine the nonce, calldata, and signature.  Presumably, the <code>context</code> is constructed by the account owner, with the help of a wallet software.</p>\n<p>Here we outline one possible use of <code>context</code>: delegation.  Say the account owner wants to delegate a transaction to be executed by the building party.  The account owner could encode a signature of the public key of the building party inside the <code>context</code>.  Let’s call this signature from the account owner the <code>authorization</code>.</p>\n<p>Then, when the building party fills out the UserOp, it would fill the <code>signature</code> field with a signature generated by its own private key.  When it calls <code>getSignature</code> on the UserOp builder, the UserOp builder would extract the <code>authorization</code> from the <code>context</code> and concatenates it with the building party’s signature.  The smart account would presumably be implemented such that it would recover the building party’s public key from the signature, and check that the public key was in fact signed off by the <code>authorization</code>.  If the check succeeds, the smart account would execute the UserOp, thus allowing the building party to execute a UserOp on the user’s behalf.</p>\n<h3><a name=\"dummy-signature-11\" class=\"anchor\" href=\"https://ethereum-magicians.org#dummy-signature-11\"></a>Dummy signature</h3>\n<p>The “dummy signature” refers to the signature used in a UserOp sent to a bundler for estimating gas (via <code>eth_estimateUserOperationGas</code>).  A dummy signature is needed because, at the time the bundler estimates gas, a valid signature does not exist yet, since the valid signature itself depends on the gas values of the UserOp, creating a circular dependency.  To break the circular dependency, a dummy signature is used.</p>\n<p>However, the dummy signature is not just a fixed value that any smart account can use.  The dummy signature must be constructed such that it would cause the UserOp to use about as much gas as a real signature would.  Therefore, the dummy signature varies based on the specific validation logic that the smart account uses to validate the UserOp, making it dependent on the smart account implementation.</p>\n<h2><a name=\"backwards-compatibility-12\" class=\"anchor\" href=\"https://ethereum-magicians.org#backwards-compatibility-12\"></a>Backwards Compatibility</h2>\n<p>This ERC is intended to be backwards compatible with all ERC-4337 smart accounts as of EntryPoint 0.7.</p>\n<p>For smart accounts deployed against EntryPoint 0.6, the <code>IUserOperationBuilder</code> interface needs to be modified such that the <code>PackedUserOperation</code> struct is replaced with the corresponding struct in EntryPoint 0.6.</p>\n<h2><a name=\"security-considerations-13\" class=\"anchor\" href=\"https://ethereum-magicians.org#security-considerations-13\"></a>Security Considerations</h2>\n<p>TODO</p>\n<h2><a name=\"copyright-14\" class=\"anchor\" href=\"https://ethereum-magicians.org#copyright-14\"></a>Copyright</h2>\n<p>Copyright and related rights waived via <a href=\"https://ethereum-magicians.org\">CC0</a>.</p>\n            <p><small>4 posts - 3 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-7679-useroperationbuilder-a-common-onchain-interface-for-dapps-to-interact-with-4337-wallets/19547\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-7679-useroperationbuilder-a-common-onchain-interface-for-dapps-to-interact-with-4337-wallets/19547","pubDate":"Fri, 05 Apr 2024 02:32:00 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19547"},"source":{"@url":"https://ethereum-magicians.org/t/erc-7679-useroperationbuilder-a-common-onchain-interface-for-dapps-to-interact-with-4337-wallets/19547.rss","#text":"ERC-7679: userOperationBuilder - a common onchain interface for dapps to interact with 4337 wallets"},"filter":false},{"title":"EIP-7675: Retroactively Included EIPs","dc:creator":"timbeiko","category":"EIPs","description":"<p>Discussion thread for <a href=\"https://github.com/ethereum/EIPs/pull/8389\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Add EIP: Retroactively Included EIPs by timbeiko · Pull Request #8389 · ethereum/EIPs · GitHub</a></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7675-retroactively-included-eips/19541\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7675-retroactively-included-eips/19541","pubDate":"Thu, 04 Apr 2024 20:14:06 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19541"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7675-retroactively-included-eips/19541.rss","#text":"EIP-7675: Retroactively Included EIPs"},"filter":false},{"title":"EIP-7676: EOF - Prepare for Address Space Extension","dc:creator":"shemnon","category":"EIPs","description":"<p>A very small change to EOF to allow future extension of the address space.</p>\n<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/ethereum/EIPs/pull/8385\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ethereum/EIPs/pull/8385\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/ethereum/EIPs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/ethereum/EIPs/pull/8385\" target=\"_blank\" rel=\"noopener nofollow ugc\">Add EIP: EOF - Prepare for Address Space Extension</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>ethereum:master</code> ← <code>shemnon:EOF/prepare-for-ase</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-04-04\" data-time=\"00:41:55\" data-timezone=\"UTC\">12:41AM - 04 Apr 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/shemnon\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"shemnon\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/1/10d4d31592860fc2daad80db04d0b789cc97f047.jpeg\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"826F6E\">\n            shemnon\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"1 commits changed 2 files with 97 additions and 8 deletions\">\n          <a href=\"https://github.com/ethereum/EIPs/pull/8385/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+97</span>\n            <span class=\"removed\">-8</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">Update EOF opcodes so addresses are not trimmed during execution,\nreverting with<span class=\"show-more-container\"><a href=\"https://github.com/ethereum/EIPs/pull/8385\" target=\"_blank\" rel=\"noopener nofollow ugc\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\"> an exception if the address is invalid.</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>TL;DR all operations that use an address will not trim the high 12 bytes / 96 bits, and (for now) exceptionally halt if they are not zero.  Only <code>BALANCE</code> is not otherwise spoken for within EOF. Future uses of these high bits would necessarily change this behavior. but they are not defined in this EIP.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7676-eof-prepare-for-address-space-extension/19537\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7676-eof-prepare-for-address-space-extension/19537","pubDate":"Thu, 04 Apr 2024 15:42:11 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19537"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7676-eof-prepare-for-address-space-extension/19537.rss","#text":"EIP-7676: EOF - Prepare for Address Space Extension"},"filter":false},{"title":"ERC-7677: Paymaster Web Service Capability","dc:creator":"lsr","category":"ERCs","description":"<p>Thread to discuss <a href=\"https://github.com/ethereum/ERCs/pull/360/files\" rel=\"noopener nofollow ugc\">ERC-7677</a>.</p>\n            <p><small>6 posts - 3 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-7677-paymaster-web-service-capability/19530\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-7677-paymaster-web-service-capability/19530","pubDate":"Thu, 04 Apr 2024 02:18:56 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19530"},"source":{"@url":"https://ethereum-magicians.org/t/erc-7677-paymaster-web-service-capability/19530.rss","#text":"ERC-7677: Paymaster Web Service Capability"},"filter":false},{"title":"ERC-7674: Temporary Approval Extension for ERC-20","dc:creator":"xshape","category":"ERCs","description":"<p>Among all cases of <code>ERC-20</code> token transactions, a popular one is when smart contracts approve token spending to other contracts. Often tokens are approved for only one transaction.</p>\n<p>Following the <code>ERC-20</code> standard, if a smart contract wants to approve the spending of tokens to another smart contract for only one transaction, this causes the allowance saved in storage to be updated and retrieved.</p>\n<p>Token allowances utilising <code>EIP-1153</code> transient storage are a cheaper alternative to the regular storage allowances.</p>\n<p>We suggest adding a new <code>ERC-7674</code>: <a href=\"https://github.com/ethereum/ERCs/pull/358\" rel=\"noopener nofollow ugc\">GitHub PR</a>.</p>\n<p><a href=\"https://github.com/byshape/transient-token/blob/main/contracts/TransientToken.sol\" rel=\"noopener nofollow ugc\">Proposed implementation</a></p>\n            <p><small>5 posts - 3 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-7674-temporary-approval-extension-for-erc-20/19521\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-7674-temporary-approval-extension-for-erc-20/19521","pubDate":"Wed, 03 Apr 2024 09:37:19 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19521"},"source":{"@url":"https://ethereum-magicians.org/t/erc-7674-temporary-approval-extension-for-erc-20/19521.rss","#text":"ERC-7674: Temporary Approval Extension for ERC-20"},"filter":false},{"title":"Proposal for a New ERC: Token Transfer Validation","dc:creator":"nathanglb","category":"ERCs","description":"<p>ERC20/ERC721/ERC1155 are all token standards that have existed for many years.  The battle over creator royalties has been ongoing for some time now, and Limit Break has built an extension to these standards that allow creators to put custom controls in place for transfers.  The extension, known as Creator Token Standards (or ERC721C) is quickly becoming the standard of record for creators that wish to enforce royalties on their collections, or perhaps to build other cool gamified features for tokens.</p>\n<p>To date, Magic Eden and OpenSea marketplaces have recently adopted use of ERC721C standards for creator earnings/royalty enforcement.  There are many creators who want to adopt ERC721C, so now seems to be an appropriate time to start formalizing an ERC that standardizes this extension to the core token standards for creators who wish to use it.</p>\n            <p><small>4 posts - 3 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/proposal-for-a-new-erc-token-transfer-validation/19506\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/proposal-for-a-new-erc-token-transfer-validation/19506","pubDate":"Tue, 02 Apr 2024 19:59:38 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19506"},"source":{"@url":"https://ethereum-magicians.org/t/proposal-for-a-new-erc-token-transfer-validation/19506.rss","#text":"Proposal for a New ERC: Token Transfer Validation"},"filter":false},{"title":"ERC-2510: Enhanced Liquidity and Value Backing Token Standard","dc:creator":"catiga","category":"Tokens","description":"<h1><a name=\"erc-2510-enhanced-liquidity-and-value-backing-token-standard-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#erc-2510-enhanced-liquidity-and-value-backing-token-standard-1\"></a>ERC-2510: Enhanced Liquidity and Value Backing Token Standard</h1>\n<h2><a name=\"abstract-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#abstract-2\"></a>Abstract</h2>\n<p>ERC-2510 is an innovative extension to the ERC-20 standard, establishing an intrinsic value and liquidity model within token contracts. By integrating a base liquidity pool, ERC-2510 aims to mitigate the risk associated with reliance on external liquidity providers. This ensures token stability and retains value even in the absence of third-party market makers.</p>\n<h2><a name=\"motivation-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#motivation-3\"></a>Motivation</h2>\n<p>In light of recent market events highlighting the vulnerabilities of token valuations dependent on external liquidity pools, there is a clear need for a more resilient token standard that can withstand sudden liquidity withdrawal. ERC-2510 seeks to address this by building a self-sustaining value support mechanism within the token contract itself.</p>\n<h2><a name=\"specification-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#specification-4\"></a>Specification</h2>\n<h3><a name=\"core-components-5\" class=\"anchor\" href=\"https://ethereum-magicians.org#core-components-5\"></a>Core Components</h3>\n<ul>\n<li><strong>Base Liquidity Pool (BLP)</strong>: A permanent reserve within the token contract that provides a minimum value for each token.</li>\n<li><strong>Value Adjustment Function (VAF)</strong>: A mechanism for the token holders to enhance the token’s intrinsic value by contributing additional liquidity to the BLP.</li>\n<li><strong>Token Value Retrieval (TVR)</strong>: Allows token holders to burn their tokens in exchange for a proportional share of the BLP, establishing a redeemable base value.</li>\n</ul>\n<h3><a name=\"interface-6\" class=\"anchor\" href=\"https://ethereum-magicians.org#interface-6\"></a>Interface</h3>\n<p>The ERC2510 interface extends the ERC20 and ERC20Metadata interfaces with additional liquidity management functionalities.</p>\n<p>solidityCopy code</p>\n<pre><code class=\"lang-auto\">pragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\ninterface IERC2510 is IERC20, IERC20Metadata {\n    // Events and Functions declaration\n}\n</code></pre>\n<h3><a name=\"solidity-implementation-7\" class=\"anchor\" href=\"https://ethereum-magicians.org#solidity-implementation-7\"></a>Solidity Implementation</h3>\n<h4><a name=\"erc2510-core-contract-8\" class=\"anchor\" href=\"https://ethereum-magicians.org#erc2510-core-contract-8\"></a>ERC2510 Core Contract</h4>\n<p>solidityCopy code</p>\n<pre><code class=\"lang-auto\">contract ERC2510 is IERC2510 {\n    // Implementation of the ERC2510 functionalities.\n}\n</code></pre>\n<h4><a name=\"liquidity-management-9\" class=\"anchor\" href=\"https://ethereum-magicians.org#liquidity-management-9\"></a>Liquidity Management</h4>\n<p>solidityCopy code</p>\n<pre><code class=\"lang-auto\">contract ERC2510Liquidity {\n    // Liquidity-related functionalities.\n}\n</code></pre>\n<h3><a name=\"implementation-considerations-10\" class=\"anchor\" href=\"https://ethereum-magicians.org#implementation-considerations-10\"></a>Implementation Considerations</h3>\n<ul>\n<li>The base liquidity pool must be designed with security as a priority, implementing safeguards against unauthorized access and ensuring immutability of the pool’s value.</li>\n<li>Smart contract functions will be optimized for gas efficiency and avoid unnecessary complexity.</li>\n<li>Contract will include event logs for all actions for transparency and auditability.</li>\n</ul>\n<h2><a name=\"security-considerations-11\" class=\"anchor\" href=\"https://ethereum-magicians.org#security-considerations-11\"></a>Security Considerations</h2>\n<p>The security analysis section details potential risks, such as reentrancy attacks, and outlines the strategies implemented to mitigate these risks. Additionally, the contract will undergo security audits by reputable third-party auditors before deployment.</p>\n<h2><a name=\"reference-implementation-and-test-cases-12\" class=\"anchor\" href=\"https://ethereum-magicians.org#reference-implementation-and-test-cases-12\"></a>Reference Implementation and Test Cases</h2>\n<p>A reference implementation of ERC2510 will be available in a public GitHub repository, alongside comprehensive test cases covering a wide array of scenarios, including edge cases and potential attack vectors.</p>\n<h2><a name=\"deployment-and-transition-13\" class=\"anchor\" href=\"https://ethereum-magicians.org#deployment-and-transition-13\"></a>Deployment and Transition</h2>\n<p>The document will provide a detailed plan for deploying ERC2510 tokens and outline strategies for transitioning from existing ERC20 tokens if desired.</p>\n<h2><a name=\"real-world-use-cases-14\" class=\"anchor\" href=\"https://ethereum-magicians.org#real-world-use-cases-14\"></a>Real-world Use Cases</h2>\n<p>Case studies will illustrate how ERC2510 can be beneficial in various scenarios, from creating stablecoins to launching new tokens with embedded liquidity features.</p>\n<h2><a name=\"conclusion-15\" class=\"anchor\" href=\"https://ethereum-magicians.org#conclusion-15\"></a>Conclusion</h2>\n<p>ERC-2510 has the potential to revolutionize the token standard by empowering tokens with inherent value and liquidity. This standard is poised to contribute significantly to the DeFi ecosystem, providing a foundation for more stable and reliable token economics.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-2510-enhanced-liquidity-and-value-backing-token-standard/19478\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-2510-enhanced-liquidity-and-value-backing-token-standard/19478","pubDate":"Mon, 01 Apr 2024 15:34:16 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19478"},"source":{"@url":"https://ethereum-magicians.org/t/erc-2510-enhanced-liquidity-and-value-backing-token-standard/19478.rss","#text":"ERC-2510: Enhanced Liquidity and Value Backing Token Standard"},"filter":false},{"title":"EIP-7671: Bitcoin Proof-of-Stake","dc:creator":"etan-status","category":"EIPs","description":"<p>Discussion thread for <a href=\"https://github.com/ethereum/EIPs/pull/8375\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Add EIP: Bitcoin Proof-of-Stake by etan-status · Pull Request #8375 · ethereum/EIPs · GitHub</a></p>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7671-bitcoin-proof-of-stake/19477\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7671-bitcoin-proof-of-stake/19477","pubDate":"Mon, 01 Apr 2024 14:58:00 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19477"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7671-bitcoin-proof-of-stake/19477.rss","#text":"EIP-7671: Bitcoin Proof-of-Stake"},"filter":false},{"title":"EIP-7665: Add `EXTSELFDESTRUCT` instruction","dc:creator":"matt","category":"Core EIPs","description":"<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/ethereum/EIPs/pull/8374\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ethereum/EIPs/pull/8374\" target=\"_blank\" rel=\"noopener\">github.com/ethereum/EIPs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/ethereum/EIPs/pull/8374\" target=\"_blank\" rel=\"noopener\">Add EXTSELFDESTRUCT opcode</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>ethereum:master</code> ← <code>parithosh:add-extselfdestruct-opcode</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-04-01\" data-time=\"12:31:16\" data-timezone=\"UTC\">12:31PM - 01 Apr 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/parithosh\" target=\"_blank\" rel=\"noopener\">\n            <img alt=\"parithosh\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/a/a772d9344f30c34dc3c6017b1a6545b8b3b0ff86.jpeg\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"4D5A69\">\n            parithosh\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"2 commits changed 1 files with 112 additions and 0 deletions\">\n          <a href=\"https://github.com/ethereum/EIPs/pull/8374/files\" target=\"_blank\" rel=\"noopener\">\n            <span class=\"added\">+112</span>\n            <span class=\"removed\">-0</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">**ATTENTION: ERC-RELATED PULL REQUESTS NOW OCCUR IN [ETHEREUM/ERCS](https://gith<span class=\"show-more-container\"><a href=\"https://github.com/ethereum/EIPs/pull/8374\" target=\"_blank\" rel=\"noopener\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\">ub.com/ethereum/ercs)**\n\n--\n\nWhen opening a pull request to submit a new EIP, please use the suggested template: https://github.com/ethereum/EIPs/blob/master/eip-template.md\n\nWe have a GitHub bot that automatically merges some PRs. It will merge yours immediately if certain criteria are met:\n\n - The PR edits only existing draft PRs.\n - The build passes.\n - Your GitHub username or email address is listed in the 'author' header of all affected PRs, inside &lt;triangular brackets&gt;.\n - If matching on email address, the email address is the one publicly listed on your GitHub profile.</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>3 posts - 3 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7665-add-extselfdestruct-instruction/19473\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7665-add-extselfdestruct-instruction/19473","pubDate":"Mon, 01 Apr 2024 13:07:36 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19473"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7665-add-extselfdestruct-instruction/19473.rss","#text":"EIP-7665: Add `EXTSELFDESTRUCT` instruction"},"filter":false},{"title":"Layered smart contract security","dc:creator":"peersky","category":"Primordial Soup","description":"<p>This allows solidity code smart contract security model change, where contracts are completely wrapped into middleware(s) that can provide runtime verification of code for execution.</p>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://github.com/peersky/smart-contract-layers\">\n  <header class=\"source\">\n      <img src=\"https://github.githubassets.com/favicons/favicon.svg\" class=\"site-icon\" width=\"32\" height=\"32\">\n\n      <a href=\"https://github.com/peersky/smart-contract-layers\" target=\"_blank\" rel=\"noopener nofollow ugc\">GitHub</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:690/344;\"><img src=\"https://ethereum-magicians.org/uploads/default/optimized/2X/b/b3842e9091c986e044cda30af516f442b3a48c4f_2_690x345.png\" class=\"thumbnail\" data-dominant-color=\"F1ECE9\" width=\"690\" height=\"345\"></div>\n\n<h3><a href=\"https://github.com/peersky/smart-contract-layers\" target=\"_blank\" rel=\"noopener nofollow ugc\">GitHub - peersky/smart-contract-layers: layered security approach for...</a></h3>\n\n  <p>layered security approach for securing and improving ux  - GitHub - peersky/smart-contract-layers: layered security approach for securing and improving ux</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>Such allows to have multiple independent layers of security that can handle authentication, authorization, intrusion prevention mechanisms etc.</p>\n<p>I was not focusing on particular implementation of such middlewares, using concepts elaborated in <a href=\"https://github.com/peersky/NFT_Access\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - peersky/NFT_Access: Use ERC1155 and ERC721 for RBAC</a> however are possible as well as querying sanctions lists, white/blacklists etc</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/layered-smart-contract-security/19471\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/layered-smart-contract-security/19471","pubDate":"Mon, 01 Apr 2024 11:25:29 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19471"},"source":{"@url":"https://ethereum-magicians.org/t/layered-smart-contract-security/19471.rss","#text":"Layered smart contract security"},"filter":false},{"title":"Hi, I wanna introduce a new ERC FT improvement, which GIT should I pr my request to? EIPs or ERCs?","dc:creator":"catiga","category":"Uncategorized","description":"<p>Hello, Ethereum community!</p>\n<p>I hope this message finds you well. I am reaching out to seek guidance and clarification on the correct process for submitting a new proposal for an ERC (Ethereum Request for Comments) standard improvement, specifically for fungible tokens.</p>\n<p>Over the past few months, I have been working on developing a new ERC standard that aims to introduce significant improvements to the existing fungible token framework. This proposal includes several innovative features designed to enhance token stability, value transparency, and liquidity mechanisms, among other benefits. I believe this improvement has the potential to contribute positively to the Ethereum ecosystem and the broader DeFi community.</p>\n<p>However, as I’m preparing to officially submit my proposal, I’ve encountered a bit of confusion regarding the appropriate GitHub repository for PR (Pull Request) submission. Given the recent discussions and potential changes in the Ethereum improvement proposal process, I’m unsure whether I should submit my PR to the traditional Ethereum EIPs (Ethereum Improvement Proposals) repository or if there’s a separate repository specifically for ERC proposals.</p>\n<p>Could anyone please provide me with the latest guidelines or direct me to the correct repository for submitting an ERC improvement proposal? Your assistance would be greatly appreciated, as I want to ensure that my proposal is reviewed and considered by the community in accordance with the current best practices.</p>\n<p>Additionally, if there are any tips or recommendations you could share about the proposal submission process, they would be incredibly valuable to me and perhaps to others in the community who might be in a similar situation.</p>\n<p>Thank you very much for your time and assistance. I am looking forward to contributing to the Ethereum ecosystem and engaging with the community on this exciting improvement.</p>\n<p>Best regards,<br>\nJC</p>\n            <p><small>6 posts - 2 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/hi-i-wanna-introduce-a-new-erc-ft-improvement-which-git-should-i-pr-my-request-to-eips-or-ercs/19466\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/hi-i-wanna-introduce-a-new-erc-ft-improvement-which-git-should-i-pr-my-request-to-eips-or-ercs/19466","pubDate":"Mon, 01 Apr 2024 03:21:16 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19466"},"source":{"@url":"https://ethereum-magicians.org/t/hi-i-wanna-introduce-a-new-erc-ft-improvement-which-git-should-i-pr-my-request-to-eips-or-ercs/19466.rss","#text":"Hi, I wanna introduce a new ERC FT improvement, which GIT should I pr my request to? EIPs or ERCs?"},"filter":true},{"title":"ERC-7673: Distinguishable Account Addresses","dc:creator":"wjmelements","category":"ERCs","description":"<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/ethereum/ERCs/pull/354\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ethereum/ERCs/pull/354\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/ethereum/ERCs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/ethereum/ERCs/pull/354\" target=\"_blank\" rel=\"noopener nofollow ugc\">Add ERC: Distinguishable Account Addresses</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>ethereum:master</code> ← <code>wjmelements:distinguishable-addresses</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-03-31\" data-time=\"23:43:00\" data-timezone=\"UTC\">11:43PM - 31 Mar 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/wjmelements\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"wjmelements\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/2/2ec0a9961391a073978afe4555db21ceb20b5470.jpeg\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"805944\">\n            wjmelements\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"5 commits changed 1 files with 372 additions and 0 deletions\">\n          <a href=\"https://github.com/ethereum/ERCs/pull/354/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+372</span>\n            <span class=\"removed\">-0</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">When opening a pull request to submit a new EIP, please use the suggested templa<span class=\"show-more-container\"><a href=\"https://github.com/ethereum/ERCs/pull/354\" target=\"_blank\" rel=\"noopener nofollow ugc\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\">te: https://github.com/ethereum/EIPs/blob/master/eip-template.md\n\nWe have a GitHub bot that automatically merges some PRs. It will merge yours immediately if certain criteria are met:\n\n - The PR edits only existing draft PRs.\n - The build passes.\n - Your GitHub username or email address is listed in the 'author' header of all affected PRs, inside &lt;triangular brackets&gt;.\n - If matching on email address, the email address is the one publicly listed on your GitHub profile.</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>Addressing several recurring topics in this forum, this will improve the resiliency of account addresses against spoofing attacks.</p>\n<aside class=\"quote quote-modified\" data-post=\"1\" data-topic=\"16686\">\n  <div class=\"title\">\n    <div class=\"quote-controls\"></div>\n    <img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://ethereum-magicians.org/user_avatar/ethereum-magicians.org/rook/48/10951_2.png\" class=\"avatar\">\n    <a href=\"https://ethereum-magicians.org/t/patch-proposals-for-the-ongoing-wallet-homomoroph-attacks/16686\">Patch Proposals For The Ongoing Wallet Homomoroph Attacks</a> <a class=\"badge-category__wrapper \" href=\"https://ethereum-magicians.org/c/working-groups/security/14\"><span data-category-id=\"14\" style=\"--category-badge-color: #AB9364; --category-badge-text-color: #FFFFFF; --parent-category-badge-color: #FFFF52;\" data-parent-category-id=\"11\" data-drop-close=\"true\" class=\"badge-category --has-parent\" title=\"Initially proposed by @maurelian, the Security working group is planning a Gathering of the Security Community in early September, 2018.\"><span class=\"badge-category__name\">Security Ring</span></span></a>\n  </div>\n  <blockquote>\n    Losses from homomorph walles has suprassed $60m: <a href=\"https://gbhackers.com/create2-bypass-wallet-security-alerts/\" rel=\"noopener nofollow ugc\">https://gbhackers.com/create2-bypass-wallet-security-alerts/</a> \n(edit) The above article is mistaken, this has noting to do with the create2 opcode, and rather a shortcut in wallet germination making it easier to search the wallet keyspace for viable wallets to use in this attack. \nEven today I made a transaction, and noticed that a contract was deployed with a wallet that looks very similar to my own. So, clearly there is some shortcut here that al…\n  </blockquote>\n</aside>\n\n<aside class=\"quote quote-modified\" data-post=\"1\" data-topic=\"17538\">\n  <div class=\"title\">\n    <div class=\"quote-controls\"></div>\n    <img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://ethereum-magicians.org/user_avatar/ethereum-magicians.org/xinbenlv/48/8227_2.png\" class=\"avatar\">\n    <a href=\"https://ethereum-magicians.org/t/erc-short-representation-for-leading-zeros-in-address/17538\">ERC: Short Representation for Leading Zeros in Address</a> <a class=\"badge-category__wrapper \" href=\"https://ethereum-magicians.org/c/ercs/57\"><span data-category-id=\"57\" style=\"--category-badge-color: #0088CC; --category-badge-text-color: #FFFFFF;\" data-drop-close=\"true\" class=\"badge-category \"><span class=\"badge-category__name\">ERCs</span></span></a>\n  </div>\n  <blockquote>\n    Hi, as I presented in previous AllWalletDevs about a proposal to represent leading zeros in address which reduces chance of phishing, I am thinking of starting an ERC. \n<a name=\"motivation-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#motivation-1\"></a>Motivation\n\nreduce phishing\n\n<a name=\"specification-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#specification-2\"></a>Specification\nThe format will be 0{N}xAA..BBBB, where \n\nN is the number of leading zeros in decimal form\nAA is the two hex digits of two digits since first non-zero hex digit\nBBBB is the last four hex digits\n\n<a name=\"rationale-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#rationale-3\"></a>Rationale\n\nWe choose 0{N}x format so it can be easily differentiate from 0x\nWe choose 2 digit…\n  </blockquote>\n</aside>\n\n            <p><small>10 posts - 4 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-7673-distinguishable-account-addresses/19461\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-7673-distinguishable-account-addresses/19461","pubDate":"Sun, 31 Mar 2024 23:47:21 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19461"},"source":{"@url":"https://ethereum-magicians.org/t/erc-7673-distinguishable-account-addresses/19461.rss","#text":"ERC-7673: Distinguishable Account Addresses"},"filter":false},{"title":"EIP-7670: Reduced Attestation Format for gossiping attestations","dc:creator":"Giulio2002","category":"EIPs","description":"<p>At the current state, even after Deneb and the introduction of blobs, Attestations are responsible for 90% of the traffic on the Consensus Layer’s gossip network. Right now, the <code>Attestation</code> propagation format is the same as the one used during internal operation within the Consensus Client. which is as follows:</p>\n<pre data-code-wrap=\"python\"><code class=\"lang-python\">class Attestation(Container):\n    aggregation_bits: Bitlist[MAX_VALIDATORS_PER_COMMITTEE]\n    data: AttestationData\n    signature: BLSSignature\n</code></pre>\n<p>where AttestationData is just:</p>\n<pre data-code-wrap=\"python\"><code class=\"lang-python\">class AttestationData(Container):\n    slot: Slot\n    index: CommitteeIndex\n    # LMD GHOST vote\n    beacon_block_root: Root\n    # FFG vote\n    source: Checkpoint\n    target: Checkpoint\n```.\n\nThis format totals a maximum of 256 bytes for each attestation (assuming that `len(aggregation_bits)=32`).\n\nHowever, it could be possible to reduce this size by at least a 15ish% by defining a different format for `AttestationData`, which could be as follows:\n\n```python\nclass NetworkAttestationData(Container):\n    slot: Slot\n    index: CommitteeIndex\n    # LMD GHOST vote\n    beacon_block_root: Root\n    # FFG vote\n    source_digest: BytesVector8\n    target_digest: BytesVector8\n</code></pre>\n<p>where source_digest = source. HashTreeRoot () [0:8] and target_digest = target. HashTreeRoot () [0:8]. This format requires clients to keep track of an internal map of possible <code>CheckpointDigest</code> (<code>BytesVector8</code>) as they sync, and maps them to their equivalent <code>Checkpoint</code>. This reduction would save 64 bytes per attestation which is equivalent to &gt;25ish% of a single attestation. If this is also applied to <code>aggregates and proofs</code>, it should also decrease the bandwidth for the average node as well. Potentially, bandwidth-wise, something like this can allow for a doubling of the current Blob per block. A consideration to make is that perhaps <code>BytesVector8</code> as a digest size might open up for possible collision attacks. However, an attacker needs to do so in the 12 seconds of slot time to create a collision with 2 recent <code>CheckpointDigests</code>. Probably <code>16</code> is a better size for something like this (but I am not a cryptographer). this would also require that at each block, each consensus client would need to generate some digests for some potential future checkpoints as well, e.g., generates 4 checkpoints for block root <code>0xabcd</code> spanning 4 epochs into the future.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7670-reduced-attestation-format-for-gossiping-attestations/19458\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7670-reduced-attestation-format-for-gossiping-attestations/19458","pubDate":"Sun, 31 Mar 2024 19:24:22 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19458"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7670-reduced-attestation-format-for-gossiping-attestations/19458.rss","#text":"EIP-7670: Reduced Attestation Format for gossiping attestations"},"filter":false},{"title":"ERC-7672: Event-Driven NFT Utilities","dc:creator":"WilliamHong","category":"ERCs","description":"<h2><a name=\"abstract-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#abstract-1\"></a>Abstract</h2>\n<p>This proposal introduces a standard for enabling dynamic <em><strong>status changes</strong></em> of a Non-Fungible Token (NFT) in different applications. There are 2 main features introduced:</p>\n<ol>\n<li>Instead of modifying the NFT metadata directly on-chain, this approach employs an event-driven mechanism that represents <strong>status changes</strong> through the emission of on-chain events.</li>\n<li>Instead of limiting an NFT to a specific application, this approach facilitates distinct utilities of an NFT (even an existing one like a Doodle) across multiple applications.</li>\n</ol>\n<p>Any application following this standard effectively possesses a chain of events where each event corresponds to a distinct application status. Note that such an event contains only <strong>status changes</strong> to the application, which may be a single-bit change of an NFT status like “Health Point +1” for “Doodle <span class=\"hashtag-raw\">#9999</span>” within a specific application.</p>\n<p>Therefore, an NFT will have a distinct representation in each supporting application (e.g. a mighty hero in one game; an ordinary pet in a social app; or a ticket with changing access levels in an event platform), corresponding to its unique NFT utility within this application. This standard supports efficient management of application-NFT statuses and NFT interoperability across various applications, significantly broadening NFT utilities.</p>\n<h2><a name=\"motivation-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#motivation-2\"></a>Motivation</h2>\n<p>The rapid growth of the NFT ecosystem has unveiled a multitude of new opportunities for creators, collectors, and developers. However, this growth has also highlighted significant limitations in the current standards for NFTs, particularly regarding their dynamic interaction with decentralized applications (dApps). Presently, NFTs are often static and confined to the context in which they were created. This lack of flexibility limits the potential use cases and the overall utilities of NFTs within the broader blockchain ecosystem.</p>\n<p>Several key challenges motivate this proposal:</p>\n<ol>\n<li><strong>Static Nature of NFTs:</strong> Once minted, the metadata of most NFTs, including their attributes and utilities, remains unchanged. This rigidity prevents NFTs from evolving over time or interacting dynamically with various dApps.</li>\n<li><strong>Application-Specific Limitations:</strong> NFTs are frequently designed and utilized within specific applications or ecosystems. This approach restricts the NFT’s utility and value to its original context, hindering cross-application interoperability and innovation.</li>\n<li><strong>Efficiency and Scalability Concerns:</strong> Directly modifying NFT metadata on-chain for status updates is inefficient and can lead to increased transaction costs and scalability issues. This approach is not sustainable for applications requiring frequent updates.</li>\n</ol>\n<p>This proposal aims to address these challenges by introducing a standard for dynamic status changes of NFTs in different applications. By leveraging an event-driven mechanism for signaling status updates and facilitating NFT utilities across multiple applications, this proposal seeks to enhance the usability, efficiency, interoperability, and overall utilities of NFTs within the Ethereum ecosystem. The introduction of a flexible and standardized approach for dynamic application-NFT interactions promises to unlock new possibilities for creators, developers, and users, paving the way for innovative applications and use cases that extend beyond the current limitations.</p>\n<h2><a name=\"specification-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#specification-3\"></a>Specification</h2>\n<p>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in RFC 2119 and RFC 8174.</p>\n<h3><a name=\"overview-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#overview-4\"></a>Overview</h3>\n<p>The Event-Driven NFT Utilities Standard streamlines the integration and update process of NFT statuses within diverse applications. This section outlines the key functionalities and flow of the system as follows:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethereum-magicians.org/uploads/default/original/2X/9/94bd14cf869983811b5b2207eb9384c19ba2d590.png\" data-download-href=\"https://ethereum-magicians.org/uploads/default/94bd14cf869983811b5b2207eb9384c19ba2d590\" title=\"diagram\"><img src=\"https://ethereum-magicians.org/uploads/default/optimized/2X/9/94bd14cf869983811b5b2207eb9384c19ba2d590_2_554x500.png\" alt=\"diagram\" data-base62-sha1=\"ldNLLvWaszjQPkaWLdxgwXrZJLi\" width=\"554\" height=\"500\" srcset=\"https://ethereum-magicians.org/uploads/default/optimized/2X/9/94bd14cf869983811b5b2207eb9384c19ba2d590_2_554x500.png, https://ethereum-magicians.org/uploads/default/optimized/2X/9/94bd14cf869983811b5b2207eb9384c19ba2d590_2_831x750.png 1.5x, https://ethereum-magicians.org/uploads/default/optimized/2X/9/94bd14cf869983811b5b2207eb9384c19ba2d590_2_1108x1000.png 2x\" data-dominant-color=\"F2F2F3\"></a></div><p></p>\n<ol>\n<li><strong>Application Registration</strong>: Application owners initiate the process by registering their application with the <em>Event-Driven Utilities Smart Contract</em>. Post-registration, each application is associated with an “Update Module”. The application owner specifies this module by providing a URL pointing to the content of the “Update Module” stored on decentralized storage (e.g., <code>https://ipfs.io/ipfs/QmeSjS...</code>). This module sets out the global attributes for the NFTs and the update mechanisms within the application.</li>\n<li><strong>NFT Collection Registration</strong>: Upon successful application registration, a unique identifier is assigned to the application. The application owner can then proceed to register multiple NFT collections under this application across different blockchains by providing the respective <code>chain ID</code> and <code>NFT smart contract address</code>. This registration is performed via a function call to the smart contract, ensuring the NFT collections are recognized for use and updates within the application environment.</li>\n<li><strong>Status Updates Through Events</strong>: Once the application and NFT collections are registered, the application owner can initiate status updates. This is done by emitting events that signal status changes within the application for the updated tokens. The bottom of the diagram illustrates the independent update processes for different applications, allowing them to update their respective statuses through events. This design ensures efficiency and that while applications MAY share NFT collections, the status of an NFT is managed separately within each application, maintaining autonomy and non-interference across applications. Effectively, each application possesses a chain of events representing the progression of applicaiton statuses.</li>\n</ol>\n<h3><a name=\"smart-contract-interface-5\" class=\"anchor\" href=\"https://ethereum-magicians.org#smart-contract-interface-5\"></a>Smart Contract Interface</h3>\n<p>The interface for our Event-Driven NFT Utilities Standard, which establishes the foundational structure for implementing the proposed standard, is provided below:</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-solidity\">/**\n * @title IEventDrivenUtilities\n * Interface for the Event-Driven NFT Utilities Standard\n */\ninterface IEventDrivenUtilities {\n    /// MUST be emitted upon the registration of an application.\n    event AppRegistered(uint256 indexed appId, address indexed appOwnerAddr, string appInfo);\n    /// MUST be emitted when an NFT collection is registered under an application.\n    event CollectionRegistered(uint256 indexed appId, uint256 indexed chainId, address indexed collectionAddr);\n    /// MUST be emitted when an update module is set for an application\n    event UpdateModuleSet(uint256 indexed appId, string updateModuleUrl);\n    /// MUST be emitted when the ownership of an application is transferred.\n    event OwnerTransferred(uint256 indexed appId, address newOwner);\n    /// MUST be emitted when the information related to an application is changed.\n    event InfoChanged(uint256 indexed appId, string newInfo); \n    /// MUST be emitted for any status updates within an application.\n    event AppStatusUpdated(uint256 indexed appId, string updateUrl);\n    \n    /// Registers an application, initializing it for dynamic NFT status updates.\n    function registerApp(string calldata appInfoUrl) external returns (uint256 newAppId);\n    /// Specifies which NFT collection(s) to support in a registered application.\n    function registerCollections(uint256 appId, uint256[] calldata chainIds, address[] calldata collectionAddrs) external;\n    /// Configures an update module for an application, detailing the update mechanism.\n    function setAppUpdateModule(uint256 appId, string calldata updateModuleUrl) external;\n    /// OPTIONAL: Transfers the ownership of an application to a new owner.\n    function transferAppOwner(uint256 appId, address newOwner) external;\n    /// OPTIONAL: Changes the informational details of an application.\n    function changeAppInfo(uint256 appId, string calldata newInfo) external;\n    /// Facilitates a status update within an application, affecting its NFT statuses and thus the application status.\n    function updateAppStatus(uint256 appId, string calldata updateUrl) external;\n}\n</code></pre>\n<h3><a name=\"sample-json-schema-6\" class=\"anchor\" href=\"https://ethereum-magicians.org#sample-json-schema-6\"></a>Sample JSON Schema</h3>\n<p>To illustrate the kind of content <code>updateModuleUrl</code> MAY point to, below is a sample JSON schema. This schema specifies the update mechanism, known as the update module, showcasing a potential implementation:</p>\n<pre data-code-wrap=\"json\"><code class=\"lang-json\">{\n    \"applicationId\": 1,\n    \"applicationName\": \"GTA V\",\n    \"description\": \"The update module for App 1: GTA V\",\n    \"global_attributes\": [\"HP\", \"MP\", \"EXP\", \"ATK\", \"DEF\", \"SPEED\"],\n    \"collections\": {\n        \"Chain-1_0x0c1AfA2d6D05da2BE8E73CBA2398cf09a530e2B4\": [0,1,2], // i.e. [\"HP\", \"MP\", \"EXP\"]\n        \"Chain-1_0xAADBA53eB120A1f60064aa4443a71BDf81C8Cc34\": [3,5], // i.e. [\"ATK\", \"SPEED\"]\n        \"Chain-42161_0xF0240b006e324D76cC12191DFd22b239927ecC16\": [0,1,2,3,4,5],\n        \"Chain-56_0xC36e927e9a28dfc80AF62019a2890dDaAe038a63\": [0,1],\n        \"Chain-8453_0x812d249854EaaD98E50e6a3Fe4033C575925E4aC\": [2,4,5]\n    }\n}\n</code></pre>\n<p>The schema illustrates key components such as <code>applicationId</code>, <code>applicationName</code>, and a list of <code>global_attributes</code> that an application might want to update (<code>HP</code>, <code>MP</code>, <code>EXP</code>, etc.). It also demonstrates how an NFT collection, identified by its <code>chain ID</code> and <code>contract address</code>, can have collection-specific attributes (subset of the <code>global_attributes</code>) related to status updates. For example, the key-value pair</p>\n<pre data-code-wrap=\"json\"><code class=\"lang-json\">\"Chain-8453_0x812d249854EaaD98E50e6a3Fe4033C575925E4aC\": [2,4,5]\n</code></pre>\n<p>specifies the attributes an NFT collection corresponds to within the application based on the <code>global_attributes</code> array. The <code>8453</code> segment denotes the <code>chain ID</code> of the blockchain network (<strong>Base Mainnet</strong> in this case) where the NFT collection’s smart contract is deployed. The hexadecimal sequence <code>0x0c1AfA2d6D05da2BE8E73CBA2398cf09a530e2B4</code> is the smart contract address for the NFT collection on that specific chain. The array <code>[2,4,5]</code> indicates the indices of the <code>global_attributes</code> array this NFT collection corresponds to, signifying that the NFTs of this collection corresponds to the attributes <code>EXP</code>, <code>DEF</code>, and <code>SPEED</code> for their dynamic status updates.</p>\n<p>This schema is critical for clarifying the expected update mechanism, promoting a consistent and flexible approach to application-NFT status management, and ensuring interoperability within the multi-chain environment.</p>\n<h2><a name=\"rationale-7\" class=\"anchor\" href=\"https://ethereum-magicians.org#rationale-7\"></a>Rationale</h2>\n<h3><a name=\"event-driven-mechanism-8\" class=\"anchor\" href=\"https://ethereum-magicians.org#event-driven-mechanism-8\"></a>Event-Driven Mechanism</h3>\n<p>The decision to implement an event-driven mechanism for signaling status changes of an NFT is rooted in the pursuit of efficiency, scalability, and interoperability across different applications. Traditional methods of updating NFT metadata or attributes directly on-chain not only are costly in terms of transaction fees but also introduce challenges in terms of scalability, especially for applications that require frequent status updates. By leveraging on-chain events to represent status changes, this approach minimizes the need for direct modifications to the NFT’s on-chain metadata, significantly reducing transaction costs and the burden on the blockchain.</p>\n<p>Furthermore, the event-driven architecture enhances the flexibility and interoperability of NFTs. It allows for the dynamic representation of an NFT’s status across multiple applications without altering its inherent properties. This mechanism supports a broad range of use cases, enabling NFTs to serve different roles and functions in various applications. For example, an NFT could represent a character with evolving attributes in a game, or act as a ticket with changing access levels in a decentralized event platform. The adoption of an event-driven model thus represents a strategic move towards a more vibrant, functional, and interconnected ecosystem for NFTs.</p>\n<h3><a name=\"update-module-9\" class=\"anchor\" href=\"https://ethereum-magicians.org#update-module-9\"></a>Update Module</h3>\n<p>The introduction of the Update Module within the Event-Driven NFT Utilities Standard is a strategic choice aimed at maximizing flexibility and specificity in how NFT statuses are updated across applications. This modular approach allows each application to define its own unique set of rules and mechanisms for status updates, encapsulated within a URL pointing to decentralized storage. This design decision was made to ensure that updates are both transparent and verifiable by the community, adhering to the decentralized ethos of the blockchain space. Choosing decentralized storage for hosting the Update Module ensures that the instructions for status changes are immutable and accessible, fostering trust in the update mechanism. It also provides a scalable solution that can accommodate the diverse needs of different applications without congesting the blockchain with extensive data. This method avoids the limitations of a one-size-fits-all approach, enabling applications to tailor the update logic to their specific requirements and dynamics. The Update Module thereby plays a critical role in the standard, ensuring that NFT status updates are conducted in a consistent, secure, and application-specific manner.</p>\n<p>Additionally, for those seeking a more formalized method to implement the update module, <code>ERC-5185</code> offers a structured strategy that enables controlled NFT status updates through specific formulas. This method ensures deterministic and limited updates, which are verifiable through on-chain events, thereby making it suitable for applications that desire a methodical approach to NFT status changes. While <code>ERC-5185</code> provides an option for scenarios that demand a defined and deterministic update process, this EIP fosters dynamic and application-specific updates for NFTs. Application owners are RECOMMENDED to consider <code>ERC-5185</code> for implementing a structured update module.</p>\n<h3><a name=\"storage-module-10\" class=\"anchor\" href=\"https://ethereum-magicians.org#storage-module-10\"></a>Storage Module</h3>\n<p>The Event-Driven NFT Utilities Standard is designed to be agnostic regarding the choice of decentralized storage platforms, thereby granting developers the autonomy to select the one that best suits their application’s requirements. Supported platforms include, but are not limited to, Filecoin, Arweave, ETH Storage, BNB Greenfield, and others that might offer similar decentralized storage solutions. This flexibility ensures that the storage of update modules and related data can be tailored to the specific security, redundancy, and accessibility needs of each application.</p>\n<h3><a name=\"synergies-with-other-eips-11\" class=\"anchor\" href=\"https://ethereum-magicians.org#synergies-with-other-eips-11\"></a>Synergies with Other EIPs</h3>\n<p>This EIP is strategically crafted to complement and enhance existing EIPs, thereby boosting its utility and fostering greater interoperability across the Ethereum ecosystem. With a focus on a generalized approach, we promote the integration with and adaptation to a wide range of applications: games, social media, event platforms, and beyond. We intend for this EIP to serve as a versatile foundational layer, enabling seamless interaction with other EIPs, such as <code>EIP-6551</code>. By highlighting the potential for cooperation and mutual enhancement among EIPs, we demonstrate our dedication to nurturing a unified and expansive ecosystem that capitalizes on the collective progress and innovation within Ethereum.</p>\n<h2><a name=\"backwards-compatibility-12\" class=\"anchor\" href=\"https://ethereum-magicians.org#backwards-compatibility-12\"></a>Backwards Compatibility</h2>\n<p>This proposal seeks to be maximally backward-compatible with existing NFT collections. As such, it does not extend the ERC-721 or ERC-1155 standard.</p>\n<h2><a name=\"reference-implementation-13\" class=\"anchor\" href=\"https://ethereum-magicians.org#reference-implementation-13\"></a>Reference Implementation</h2>\n<p>A fundamental implementation of the EventDrivenUtilities Standard:</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-solidity\">// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./IEventDrivenUtilities.sol\";\n\n/**\n * @title EventDrivenUtilities\n * A fundamental implementation of the Event-Driven NFT Utilities Standard.\n */\ncontract EventDrivenUtilities is IEventDrivenUtilities {\n    /*\n     * STATE VARIABLES\n     */\n\n    // appId iterator\n    uint256 private _appIdIterator = 0;\n\n    // appId =&gt; Application owner address\n    mapping(uint256 =&gt; address) public appOwner;\n    // appId =&gt; Application information URL\n    mapping(uint256 =&gt; string) public appInfo;\n    // appId =&gt; Application update module URL\n    mapping(uint256 =&gt; string) public appUpdateModule;\n    // appId =&gt; NFT collection address array\n    mapping(uint256 =&gt; address[]) public appRegisteredCollections;\n    // appId =&gt; NFT collection address =&gt; bool\n    mapping(uint256 =&gt; mapping(address =&gt; bool)) public appIsCollectionRegistered;\n\n    /*\n     * MODIFIERS\n     */\n\n    // Modifier that checks if the caller is the owner of the application\n    modifier onlyAppOwner(uint256 appId) {\n        require(appOwner[appId] == msg.sender, \"Caller is not the owner of this application.\");\n        _;\n    }\n\n    /*\n     * FUNCTIONS\n     */\n\n    /**\n     * @notice  Registers an application and assigns a unique appId to it.\n     * @dev     appId can be non-sequential through a deterministic collision-free hash to keep its uniqueness.\n     *          We assign the _appIdIterator here as the appId for simplicity.\n     * @param   appInfoUrl : URL containing information about the app.\n     * @return  newAppId : The assigned appId.\n     */\n    function registerApp(string calldata appInfoUrl) external returns (uint256 newAppId) {\n        newAppId = ++_appIdIterator;\n        appOwner[newAppId] = msg.sender;\n        appInfo[newAppId] = appInfoUrl;\n        emit AppRegistered(newAppId, msg.sender, appInfoUrl);\n    }\n\n    /**\n     * @notice  Registers an array of NFT collection(s) for an application.\n     * @param   appId : The unique ID of the application.\n     * @param   chainIds : An array of chain ID(s) of the NFT collection(s).\n     * @param   collectionAddrs : An array of contract address(s) of the NFT collection(s).\n     * @dev     May return the number of NFT collections registered.\n     */\n    function registerCollections(uint256 appId, uint256[] calldata chainIds, address[] calldata collectionAddrs)\n        external\n        onlyAppOwner(appId)\n    {\n        require(chainIds.length == collectionAddrs.length, \"Array lengths of Chain ID and collection address mismatch.\");\n        // Register the array of NFT collection(s) to the application one-by-one\n        for (uint256 i = 0; i &lt; collectionAddrs.length; i++) {\n            if (!appIsCollectionRegistered[appId][collectionAddrs[i]]) {\n                appRegisteredCollections[appId].push(collectionAddrs[i]);\n                appIsCollectionRegistered[appId][collectionAddrs[i]] = true;\n                emit CollectionRegistered(appId, chainIds[i], collectionAddrs[i]);\n            }\n        }\n    }\n\n    /**\n     * @dev transferAppOwner() and changeAppInfo() can be implemented in a similar way with their events\n     * @notice  Sets the update module for an application.\n     * @param   appId : The unique ID of the application.\n     * @param   updateModuleUrl : URL containing information about the update module.\n     */\n    function setAppUpdateModule(uint256 appId, string calldata updateModuleUrl) external onlyAppOwner(appId) {\n        appUpdateModule[appId] = updateModuleUrl;\n        emit UpdateModuleSet(appId, updateModuleUrl);\n    }\n\n    /**\n     * @notice  Emits an update event for an application.\n     * @param   appId : The unique ID of the application.\n     * @param   updateUrl : The URL of the update information.\n     */\n    function updateAppStatus(uint256 appId, string calldata updateUrl) external onlyAppOwner(appId) {\n        require(bytes(appUpdateModule[appId]).length &gt; 0, \"Update module of the application has not been set.\");\n        emit AppStatusUpdated(appId, updateUrl);\n    }\n}\n</code></pre>\n<h2><a name=\"security-considerations-14\" class=\"anchor\" href=\"https://ethereum-magicians.org#security-considerations-14\"></a>Security Considerations</h2>\n<p>Needs discussion.</p>\n<h2><a name=\"copyright-15\" class=\"anchor\" href=\"https://ethereum-magicians.org#copyright-15\"></a>Copyright</h2>\n<p>Copyright and related rights waived via <a href=\"https://ethereum-magicians.org\">CC0</a>.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-7672-event-driven-nft-utilities/19449\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-7672-event-driven-nft-utilities/19449","pubDate":"Sun, 31 Mar 2024 05:39:26 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19449"},"source":{"@url":"https://ethereum-magicians.org/t/erc-7672-event-driven-nft-utilities/19449.rss","#text":"ERC-7672: Event-Driven NFT Utilities"},"filter":false},{"title":"EIP-7669: Linear EVM memory limits","dc:creator":"vbuterin","category":"Core EIPs","description":"<p>Add a hard memory limit equal to the gas limit of the current context. Make the maximum gas cost of a sub-call depend on the memory used in the current context. The two rules together ensure that a transaction with N gas can use at most N bytes of memory.</p>\n            <p><small>5 posts - 3 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7669-linear-evm-memory-limits/19448\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7669-linear-evm-memory-limits/19448","pubDate":"Sun, 31 Mar 2024 05:30:26 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19448"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7669-linear-evm-memory-limits/19448.rss","#text":"EIP-7669: Linear EVM memory limits"},"filter":false},{"title":"EIP-7668: Remove bloom filters","dc:creator":"vbuterin","category":"Core EIPs","description":"<p>Require the bloom filters in an execution block, including at the top level and in the receipt object, to be empty.</p>\n<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/ethereum/EIPs/pull/8368\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ethereum/EIPs/pull/8368\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/ethereum/EIPs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/ethereum/EIPs/pull/8368\" target=\"_blank\" rel=\"noopener nofollow ugc\">Add EIP: Remove bloom filters</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>ethereum:master</code> ← <code>ethereum:vbuterin-patch-3</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-03-31\" data-time=\"05:24:34\" data-timezone=\"UTC\">05:24AM - 31 Mar 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/vbuterin\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"vbuterin\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/8/89ac618501d77ed85e1ea0663718f590291e7737.png\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"BFCEEB\">\n            vbuterin\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"3 commits changed 1 files with 45 additions and 0 deletions\">\n          <a href=\"https://github.com/ethereum/EIPs/pull/8368/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+45</span>\n            <span class=\"removed\">-0</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">Require the bloom filters in an execution block, including at the top level and <span class=\"show-more-container\"><a href=\"https://github.com/ethereum/EIPs/pull/8368\" target=\"_blank\" rel=\"noopener nofollow ugc\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\">in the receipt object, to be empty.</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>13 posts - 7 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7668-remove-bloom-filters/19447\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7668-remove-bloom-filters/19447","pubDate":"Sun, 31 Mar 2024 05:19:37 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19447"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7668-remove-bloom-filters/19447.rss","#text":"EIP-7668: Remove bloom filters"},"filter":false},{"title":"EIP-7667: Raise gas costs of hash functions","dc:creator":"vbuterin","category":"Core EIPs","description":"<p>Raise the gas costs of opcodes and precompiles that involve hash functions.</p>\n<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/ethereum/EIPs/pull/8367\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ethereum/EIPs/pull/8367\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/ethereum/EIPs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/ethereum/EIPs/pull/8367\" target=\"_blank\" rel=\"noopener nofollow ugc\">Add EIP: Raise gas costs of hash functions</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>ethereum:master</code> ← <code>ethereum:vbuterin-patch-2</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-03-31\" data-time=\"05:07:52\" data-timezone=\"UTC\">05:07AM - 31 Mar 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/vbuterin\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"vbuterin\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/8/89ac618501d77ed85e1ea0663718f590291e7737.png\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"BFCEEB\">\n            vbuterin\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"3 commits changed 1 files with 70 additions and 0 deletions\">\n          <a href=\"https://github.com/ethereum/EIPs/pull/8367/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+70</span>\n            <span class=\"removed\">-0</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">Raise the gas costs of opcodes and precompiles that involve hash functions.</p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>6 posts - 3 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7667-raise-gas-costs-of-hash-functions/19446\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7667-raise-gas-costs-of-hash-functions/19446","pubDate":"Sun, 31 Mar 2024 05:08:29 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19446"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7667-raise-gas-costs-of-hash-functions/19446.rss","#text":"EIP-7667: Raise gas costs of hash functions"},"filter":false},{"title":"EIP-7666: EVM-ify the identity precompile","dc:creator":"vbuterin","category":"Core EIPs","description":"<p>Remove the identity precompile at 0x04. At the start of executing the block in which this change activates, put into that contract a short piece of EVM code that has the same functionality.</p>\n<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/ethereum/EIPs/pull/8366\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ethereum/EIPs/pull/8366\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/ethereum/EIPs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/ethereum/EIPs/pull/8366\" target=\"_blank\" rel=\"noopener nofollow ugc\">Add EIP: EVM-ify the identity precompile</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>ethereum:master</code> ← <code>ethereum:vbuterin-patch-1</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-03-31\" data-time=\"04:38:33\" data-timezone=\"UTC\">04:38AM - 31 Mar 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/vbuterin\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"vbuterin\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/8/89ac618501d77ed85e1ea0663718f590291e7737.png\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"BFCEEB\">\n            vbuterin\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"2 commits changed 1 files with 54 additions and 0 deletions\">\n          <a href=\"https://github.com/ethereum/EIPs/pull/8366/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+54</span>\n            <span class=\"removed\">-0</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">Replace the identity precompile with EVM code that has equivalent functionality.</p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7666-evm-ify-the-identity-precompile/19445\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7666-evm-ify-the-identity-precompile/19445","pubDate":"Sun, 31 Mar 2024 04:41:28 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19445"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7666-evm-ify-the-identity-precompile/19445.rss","#text":"EIP-7666: EVM-ify the identity precompile"},"filter":false},{"title":"Improvement Idea for Ethereum Wallet Interaction Restriction Privilege","dc:creator":"kirk_laz","category":"Core EIPs","description":"<p><strong>I’m not confident that this is the most appropriate location for this concept, so if there is somewhere it would better be suited PLEASE let me know.</strong></p>\n<p>Anyway, a little background on why I am here…<br>\nLast weekend I was fortunate enough to be able to withdraw a small chunk of tokens from a project with which I have tokens vested. I had divided them into two portions–one that went to be cashed out, and the other to remain in my MetaMask wallet in order to save them until the due date for a debt I owe in the hopes that their value would continue trending upward (it did). When it came to the day I had planned to withdraw the second chunk, I saw that all of the tokens had been transferred out of my wallet into another. There are <strong>many</strong> reasons why I am not yet confident enough to say that the transfer was not my own doing, but I am leaning towards that belief. However, since I cannot be sure that this was not some sort of unauthorized access to my wallet, I am concerned for what happens next time that I am able to withdraw some of the vested tokens to my address–there is currently no way to alter the controlling address for the vested tokens.</p>\n<p>Being in this situation, I started to wonder why there was not some function through which someone could <em>block</em> or <em>ban</em> specific addresses from interacting with their wallet. If this existed, it would allow me to block the ‘sketchy’ address now holding my tokens from interacting with my wallet, preventing them from being able to have access to any future tokens I am able to receive–even if they had some sort of sweeper bot or whatever geared towards my wallet address.</p>\n<p>All that said, I am here in the hopes that I could get some input on the feasibility of such a privilege, wherein anyone can explicitly block any specific addresses from interacting with their wallet(s). If this is determined to be feasible or practical, then I would love to put it forward as an official EIP &amp; to begin building it myself.</p>\n<p>I appreciate any and all input in advance. Thanks for your time!</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/improvement-idea-for-ethereum-wallet-interaction-restriction-privilege/19444\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/improvement-idea-for-ethereum-wallet-interaction-restriction-privilege/19444","pubDate":"Sun, 31 Mar 2024 02:19:30 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19444"},"source":{"@url":"https://ethereum-magicians.org/t/improvement-idea-for-ethereum-wallet-interaction-restriction-privilege/19444.rss","#text":"Improvement Idea for Ethereum Wallet Interaction Restriction Privilege"},"filter":false},{"title":"AllERCDevs S2E2 next Tuesday","dc:creator":"xinbenlv","category":"ERCs","description":"<pre><code class=\"lang-auto\">The upcoming session highlights \n- Seaport v1.6 and hooks architecture shared by @z0age from @OpenSea\n- ERC-7529 DNS over HTTPS for contract discovery, and eTLD+1 Association @TtheBC01\n- and ERC-7529 and ERC-5169 (Client Script URI) by @Victor928. \nWe are glad to have @optimizoor (#Solady lead dev), @ricmoo (author of #EthersJS), @gnidan (driver of @ethdebug, formerly lead maintainer of @trufflesuite), @frangio_ (formerly lead smart contract developer of @OpenZeppelin) planning to join and help review or discuss. (and we welcome more)\n</code></pre>\n<p>See more details</p>\n<ul>\n<li>tweet: <a href=\"https://twitter.com/ZainanZhou/status/1773839981888622681\" rel=\"noopener nofollow ugc\">https://twitter.com/ZainanZhou/status/1773839981888622681</a></li>\n<li>github issue: <a href=\"https://github.com/ercref/AllERCDevs/issues/19\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">(Future) 2024-04-02 (E2S2) AllERCDevs Agenda Thursday (Asia/US friendly time) · Issue #19 · ercref/AllERCDevs · GitHub</a></li>\n</ul>\n<p>Feel free to share with your builder friends / team or community or whoever cares about open interoperability</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/allercdevs-s2e2-next-tuesday/19427\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/allercdevs-s2e2-next-tuesday/19427","pubDate":"Fri, 29 Mar 2024 22:54:46 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19427"},"source":{"@url":"https://ethereum-magicians.org/t/allercdevs-s2e2-next-tuesday/19427.rss","#text":"AllERCDevs S2E2 next Tuesday"},"filter":false},{"title":"EIP-7664: Access-Key opcode","dc:creator":"protolambda","category":"Core EIPs","description":"<p>Discussion thread for EIP-7664: Access-Key opcode - <a href=\"https://github.com/ethereum/EIPs/pull/8357\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Add EIP: Access-Key opcode by protolambda · Pull Request #8357 · ethereum/EIPs · GitHub</a></p>\n<p>Background:</p>\n<ul>\n<li>See EIP-2930 thread: <a href=\"https://ethereum-magicians.org/t/eip-2930-optional-access-lists/4561/1\" class=\"inline-onebox\">EIP-2930: Optional access lists</a></li>\n</ul>\n<p>Implementation: [work in progress]</p>\n<p>The access-key opcode enables contracts to read inputs that are statically declared in access-lists.</p>\n            <p><small>8 posts - 3 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7664-access-key-opcode/19395\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7664-access-key-opcode/19395","pubDate":"Thu, 28 Mar 2024 00:08:15 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19395"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7664-access-key-opcode/19395.rss","#text":"EIP-7664: Access-Key opcode"},"filter":false}]}}}