{"rss":{"@version":"2.0","@xmlns:discourse":"http://www.discourse.org/","@xmlns:atom":"http://www.w3.org/2005/Atom","@xmlns:dc":"http://purl.org/dc/elements/1.1/","channel":{"title":"Fellowship of Ethereum Magicians - Latest topics","link":"https://ethereum-magicians.org/latest","description":"Latest topics","lastBuildDate":"Fri, 17 May 2024 12:08:19 +0000","atom:link":{"@href":"https://ethereum-magicians.org/latest.rss","@rel":"self","@type":"application/rss+xml"},"item":[{"title":"EIP-7708: ETH transfers emit a log","dc:creator":"vbuterin","category":"Core EIPs","description":"<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/ethereum/EIPs/pull/8575\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ethereum/EIPs/pull/8575\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/ethereum/EIPs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/ethereum/EIPs/pull/8575\" target=\"_blank\" rel=\"noopener nofollow ugc\">New EIP: ETH-transferring calls emit a log</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>ethereum:master</code> ← <code>ethereum:vbuterin-patch-2</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-05-17\" data-time=\"12:10:15\" data-timezone=\"UTC\">12:10PM - 17 May 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/vbuterin\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"vbuterin\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/8/89ac618501d77ed85e1ea0663718f590291e7737.png\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"BFCEEB\">\n            vbuterin\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"1 commits changed 1 files with 49 additions and 0 deletions\">\n          <a href=\"https://github.com/ethereum/EIPs/pull/8575/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+49</span>\n            <span class=\"removed\">-0</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">All ETH-transferring calls emit a log.</p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<h2><a name=\"abstract-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#abstract-1\"></a>Abstract</h2>\n<p>All ETH-transferring calls emit a log.</p>\n<h2><a name=\"motivation-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#motivation-2\"></a>Motivation</h2>\n<p>Logs are often used to track when balance changes of assets on Ethereum. Logs work for <a href=\"https://ethereum-magicians.org\">ERC-20</a> tokens, but they do not work for ETH. ETH transfers from EOAs can be read from the transaction list in the block, but ETH transfers from smart contract wallets are not automatically logged anywhere. This has already led to problems in the past, eg. early exchanges would often not properly support deposits from smart contract wallets, or only support them with a much longer delay. This EIP proposes that we automatically generate a log every time a value-transferring CALL or SELFDESTRUCT happens.</p>\n<p>EIP number TBD.</p>\n            <p><small>4 posts - 2 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7708-eth-transfers-emit-a-log/20034\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7708-eth-transfers-emit-a-log/20034","pubDate":"Fri, 17 May 2024 12:08:19 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20034"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7708-eth-transfers-emit-a-log/20034.rss","#text":"EIP-7708: ETH transfers emit a log"},"filter":false},{"title":"EIP 7707: Align incentives for access list provisioning","dc:creator":"benaadams","category":"Core EIPs","description":"<ins>\n<p>To facilitate future developments of parallel data load, we need to encourage as many transactions as possible that contain as complete and valid access lists. Current access list pricing does not sufficiently incentivize their inclusion, and this EIP aims to address this gap.</p>\n</ins>\n<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/ethereum/EIPs/pull/8563\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ethereum/EIPs/pull/8563\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/ethereum/EIPs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/ethereum/EIPs/pull/8563\" target=\"_blank\" rel=\"noopener nofollow ugc\">Add EIP: Align incentives for access list provisioning</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>ethereum:master</code> ← <code>OlegJakushkin:eip-align_incentives_for_access_list_provisioning</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-05-16\" data-time=\"12:43:05\" data-timezone=\"UTC\">12:43PM - 16 May 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/OlegJakushkin\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"OlegJakushkin\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/1/1372b2a5ef4a54fc0d03d8c9a363801b0b3a09d3.png\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"C6E3EA\">\n            OlegJakushkin\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"4 commits changed 1 files with 146 additions and 0 deletions\">\n          <a href=\"https://github.com/ethereum/EIPs/pull/8563/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+146</span>\n            <span class=\"removed\">-0</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">To facilitate future developments of parallel data load, we need to encourage as<span class=\"show-more-container\"><a href=\"https://github.com/ethereum/EIPs/pull/8563\" target=\"_blank\" rel=\"noopener nofollow ugc\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\"> many transactions as possible that contain as complete and valid access lists. Current access list pricing does not sufficiently incentivize their inclusion, and this EIP aims to address this gap.</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7707-align-incentives-for-access-list-provisioning/20025\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7707-align-incentives-for-access-list-provisioning/20025","pubDate":"Thu, 16 May 2024 13:22:09 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20025"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7707-align-incentives-for-access-list-provisioning/20025.rss","#text":"EIP 7707: Align incentives for access list provisioning"},"filter":false},{"title":"Reflections on Ethereum governance following the 3074 saga","dc:creator":"derek","category":"Process Improvement","description":"<p>I wanted to share my reflections on Ethereum governance following the 3074/7702 saga.  <a class=\"mention\" href=\"https://ethereum-magicians.org/u/vbuterin\">@vbuterin</a> and <a class=\"mention\" href=\"https://ethereum-magicians.org/u/yoavw\">@yoavw</a> kindly reviewed the article, though views are my own: <a href=\"https://docs.zerodev.app/blog/3074-governance\" rel=\"noopener nofollow ugc\">https://docs.zerodev.app/blog/3074-governance</a></p>\n<p>My overall thesis is that Ethereum governance doesn’t work the way people think it does.  There’s the explicit governance power that is the ACD, but there are also other implicit governance powers.  When the powers clash, something like the 3074 saga happens.</p>\n<p>So in this blog, I try to identify the implicit governance powers and propose a mental model for thinking about Ethereum governance.  I also make some suggestions on what we can do better going forward.</p>\n<p>See the twitter thread for a summary, but I highly recommend reading the full blog: <a href=\"https://twitter.com/decentrek/status/1790392200121225577\" rel=\"noopener nofollow ugc\">https://twitter.com/decentrek/status/1790392200121225577</a></p>\n            <p><small>6 posts - 3 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/reflections-on-ethereum-governance-following-the-3074-saga/20004\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/reflections-on-ethereum-governance-following-the-3074-saga/20004","pubDate":"Tue, 14 May 2024 16:57:09 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20004"},"source":{"@url":"https://ethereum-magicians.org/t/reflections-on-ethereum-governance-following-the-3074-saga/20004.rss","#text":"Reflections on Ethereum governance following the 3074 saga"},"filter":false},{"title":"Subdomain for ERCs website?","dc:creator":"PaulRBerg","category":"ERCs","description":"<p>ERCs have recently been extracted out of the EIPs repository, and moved to a separate repo:</p>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://github.com/ethereum/ERCs\">\n  <header class=\"source\">\n      <img src=\"https://github.githubassets.com/favicons/favicon.svg\" class=\"site-icon\" width=\"32\" height=\"32\">\n\n      <a href=\"https://github.com/ethereum/ERCs\" target=\"_blank\" rel=\"noopener nofollow ugc\">GitHub</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:690/344;\"><img src=\"https://ethereum-magicians.org/uploads/default/optimized/2X/d/d54de12b7c8f8b4a9f4c4585825ecf7074dac3bf_2_690x345.png\" class=\"thumbnail\" data-dominant-color=\"F5F4F4\" width=\"690\" height=\"345\"></div>\n\n<h3><a href=\"https://github.com/ethereum/ERCs\" target=\"_blank\" rel=\"noopener nofollow ugc\">GitHub - ethereum/ERCs: The Ethereum Request for Comment repository</a></h3>\n\n  <p>The Ethereum Request for Comment repository . Contribute to ethereum/ERCs development by creating an account on GitHub.</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>But from what I can tell, ERCs are still hosted on the same website:</p>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://eips.ethereum.org/\">\n  <header class=\"source\">\n\n      <a href=\"https://eips.ethereum.org/\" target=\"_blank\" rel=\"noopener nofollow ugc\">Ethereum Improvement Proposals</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    \n\n<h3><a href=\"https://eips.ethereum.org/\" target=\"_blank\" rel=\"noopener nofollow ugc\">Home | Ethereum Improvement Proposals</a></h3>\n\n  <p>Ethereum Improvement Proposals (EIPs) describe standards for the Ethereum platform, such as core protocol specifications.</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>Are there any plans to create an <a href=\"http://ercs.ethereum.org\" rel=\"noopener nofollow ugc\">ercs.ethereum.org</a> subdomain?</p>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/subdomain-for-ercs-website/20002\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/subdomain-for-ercs-website/20002","pubDate":"Tue, 14 May 2024 14:16:51 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20002"},"source":{"@url":"https://ethereum-magicians.org/t/subdomain-for-ercs-website/20002.rss","#text":"Subdomain for ERCs website?"},"filter":false},{"title":"EIP-7706: Create a separate basefee and gaslimit for calldata","dc:creator":"vbuterin","category":"EIPs","description":"<p>Add a new type of gas for transaction calldata. Add a new transaction type that provides <code>max_basefee</code> and <code>priority_fee</code> as a vector, providing values for execution gas, blob gas and calldata gas. Modify EIP-1559 to use the same mechanism for the three types of gas.</p>\n<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/ethereum/EIPs/pull/8552\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ethereum/EIPs/pull/8552\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/ethereum/EIPs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/ethereum/EIPs/pull/8552\" target=\"_blank\" rel=\"noopener nofollow ugc\">Add EIP: Separate gas type for calldata</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>ethereum:master</code> ← <code>ethereum:vbuterin-patch-1</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-05-13\" data-time=\"14:22:47\" data-timezone=\"UTC\">02:22PM - 13 May 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/vbuterin\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"vbuterin\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/8/89ac618501d77ed85e1ea0663718f590291e7737.png\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"BFCEEB\">\n            vbuterin\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"1 commits changed 1 files with 246 additions and 0 deletions\">\n          <a href=\"https://github.com/ethereum/EIPs/pull/8552/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+246</span>\n            <span class=\"removed\">-0</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">Add a new type of gas for transaction calldata. Add a new transaction type that <span class=\"show-more-container\"><a href=\"https://github.com/ethereum/EIPs/pull/8552\" target=\"_blank\" rel=\"noopener nofollow ugc\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\">provides max_basefee and priority_fee as a vector, providing values for execution gas, blob gas and calldata gas. Modify EIP-1559 to use the same mechanism for the three types of gas.</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>6 posts - 3 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7706-create-a-separate-basefee-and-gaslimit-for-calldata/19998\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7706-create-a-separate-basefee-and-gaslimit-for-calldata/19998","pubDate":"Mon, 13 May 2024 14:20:32 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19998"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7706-create-a-separate-basefee-and-gaslimit-for-calldata/19998.rss","#text":"EIP-7706: Create a separate basefee and gaslimit for calldata"},"filter":false},{"title":"EIP-7705: nonreentrant opcodes","dc:creator":"charles-cooper","category":"Core EIPs","description":"<p>discussion for <a href=\"https://github.com/ethereum/EIPs/pull/8543\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">EIP for reentrancy protection opcodes by charles-cooper · Pull Request #8543 · ethereum/EIPs · GitHub</a></p>\n            <p><small>17 posts - 5 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7705-nonreentrant-opcodes/19957\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7705-nonreentrant-opcodes/19957","pubDate":"Thu, 09 May 2024 14:01:08 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19957"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7705-nonreentrant-opcodes/19957.rss","#text":"EIP-7705: nonreentrant opcodes"},"filter":false},{"title":"EIP-7703: Increase Calldata Cost","dc:creator":"wjmelements","category":"Core EIPs","description":"<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/ethereum/EIPs/pull/8529\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ethereum/EIPs/pull/8529\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/ethereum/EIPs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/ethereum/EIPs/pull/8529\" target=\"_blank\" rel=\"noopener nofollow ugc\">Add EIP: Increase calldata cost</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>ethereum:master</code> ← <code>wjmelements:increase-calldata-cost</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-05-08\" data-time=\"01:55:40\" data-timezone=\"UTC\">01:55AM - 08 May 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/wjmelements\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"wjmelements\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/2/2ec0a9961391a073978afe4555db21ceb20b5470.jpeg\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"805944\">\n            wjmelements\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"1 commits changed 1 files with 43 additions and 0 deletions\">\n          <a href=\"https://github.com/ethereum/EIPs/pull/8529/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+43</span>\n            <span class=\"removed\">-0</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">#### Changes\n* Add EIP to increase calldata costs</p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>replaces eip-7623 which is insecure</p>\n            <p><small>5 posts - 2 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7703-increase-calldata-cost/19933\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7703-increase-calldata-cost/19933","pubDate":"Wed, 08 May 2024 01:57:36 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19933"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7703-increase-calldata-cost/19933.rss","#text":"EIP-7703: Increase Calldata Cost"},"filter":false},{"title":"EIP-7702: Set EOA account code for one transaction","dc:creator":"vbuterin","category":"Core EIPs","description":"<p>Add a new transaction type that adds a <code>contract_code</code> field and a signature, and converts the signing account (not necessarily the same as the <code>tx.origin</code>) into a smart contract wallet for the duration of that transaction. Intended to offer similar functionality to EIP-3074.</p>\n<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/ethereum/EIPs/pull/8527\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ethereum/EIPs/pull/8527\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/ethereum/EIPs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/ethereum/EIPs/pull/8527\" target=\"_blank\" rel=\"noopener nofollow ugc\">Add EIP: Set EOA account code for one transaction</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>ethereum:master</code> ← <code>ethereum:vbuterin-patch-1</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-05-07\" data-time=\"12:45:26\" data-timezone=\"UTC\">12:45PM - 07 May 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/vbuterin\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"vbuterin\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/8/89ac618501d77ed85e1ea0663718f590291e7737.png\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"BFCEEB\">\n            vbuterin\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"7 commits changed 1 files with 98 additions and 0 deletions\">\n          <a href=\"https://github.com/ethereum/EIPs/pull/8527/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+98</span>\n            <span class=\"removed\">-0</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">Add a new transaction type that adds a `contract_code` field and a signature, an<span class=\"show-more-container\"><a href=\"https://github.com/ethereum/EIPs/pull/8527\" target=\"_blank\" rel=\"noopener nofollow ugc\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\">d converts the signing account (not necessarily the same as the `tx.origin`) into a smart contract wallet for the duration of that transaction. Intended to offer similar functionality to EIP-3074.</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>151 posts - 36 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7702-set-eoa-account-code-for-one-transaction/19923\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7702-set-eoa-account-code-for-one-transaction/19923","pubDate":"Tue, 07 May 2024 12:44:50 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19923"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7702-set-eoa-account-code-for-one-transaction/19923.rss","#text":"EIP-7702: Set EOA account code for one transaction"},"filter":false},{"title":"Block.header elements should be well known and easy to access","dc:creator":"alexbabits","category":"Primordial Soup","description":"<p>Every major update that effects the block headers should broadcast more clearly the exact current elements of the block header, so block hash verification is always straightforward.</p>\n<p>What are the current block header elements post merge and today in 2024? I’ve searched a lot and tried a lot of things but have come up short, also see this post below:</p>\n<aside class=\"onebox stackexchange\" data-onebox-src=\"https://ethereum.stackexchange.com/questions/163229/how-to-verify-block-hash-post-merge-block-15-5m\">\n  <header class=\"source\">\n\n      <a href=\"https://ethereum.stackexchange.com/questions/163229/how-to-verify-block-hash-post-merge-block-15-5m\" target=\"_blank\" rel=\"noopener nofollow ugc\">ethereum.stackexchange.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n      <a href=\"https://ethereum.stackexchange.com/users/133839/babs\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n    <img alt=\"Babs\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/e/e230e878deb1cd3dfe06a42c2f67add3a153c465.png\" class=\"thumbnail onebox-avatar\" data-dominant-color=\"8AFFC9\" width=\"256\" height=\"256\">\n  </a>\n\n<h4>\n  <a href=\"https://ethereum.stackexchange.com/questions/163229/how-to-verify-block-hash-post-merge-block-15-5m\" target=\"_blank\" rel=\"noopener nofollow ugc\">How to verify block.hash post-merge (block &gt; 15.5M)?</a>\n</h4>\n\n<div class=\"tags\">\n  <strong>rlp, blockhash</strong>\n</div>\n\n<div class=\"date\">\n  asked by\n  \n  <a href=\"https://ethereum.stackexchange.com/users/133839/babs\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n    Babs\n  </a>\n  on <a href=\"https://ethereum.stackexchange.com/questions/163229/how-to-verify-block-hash-post-merge-block-15-5m\" target=\"_blank\" rel=\"noopener nofollow ugc\">04:29AM - 07 May 24 UTC</a>\n</div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>2 posts - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/block-header-elements-should-be-well-known-and-easy-to-access/19921\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/block-header-elements-should-be-well-known-and-easy-to-access/19921","pubDate":"Tue, 07 May 2024 04:32:42 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19921"},"source":{"@url":"https://ethereum-magicians.org/t/block-header-elements-should-be-well-known-and-easy-to-access/19921.rss","#text":"Block.header elements should be well known and easy to access"},"filter":false},{"title":"[Idea Discussion] NFT-Based Flexible Token Locking System for Liquidity and Vested Payments","dc:creator":"njrapidinnovation","category":"Primordial Soup","description":"<p><strong>Abstract:</strong></p>\n<p>We propose a novel NFT-based flexible token locking system that revolutionizes how token locking and liquidity management are approached in the blockchain space. Unlike traditional locking mechanisms, our system represents locked funds as NFTs, enabling seamless transfer of control to another owner by simply transferring the NFT to a new wallet address. This unique approach opens up innovative use cases, such as ‘vested’ payments to third parties like influencers, where tokens are transferred but remain inaccessible for a specified period or until certain conditions are met.</p>\n<p><strong>Key Features:</strong></p>\n<ol>\n<li><strong>Flexible Locking Conditions:</strong> Our system supports a variety of locking conditions, including time periods, token price thresholds (using AMMs or Chainlink price feeds), market capitalization limits, token burn thresholds, multisig unlock conditions, and even custom conditions using EventSig to check specific pre-defined conditions on external contracts. These conditions can be combined using AND, OR operators to create sophisticated locking strategies.</li>\n<li><strong>Liquidity Management:</strong> One of the most significant applications of our system is in locking liquidity. Project developers can now access a portion of their token’s locked liquidity for pre-approved uses, either through community governance voting or by meeting predefined minimum liquidity requirements. This feature introduces a new level of flexibility and control over locked liquidity that was previously unavailable.</li>\n<li><strong>Easy Lock Info Access:</strong> Users can easily check the locking information associated with an NFT by accessing the metadata URL attached to the NFT. This provides transparency and visibility into the locking conditions and status of locked funds.</li>\n</ol>\n<p><strong>Conclusion:</strong></p>\n<p>Our NFT-based flexible token locking system introduces a paradigm shift in token locking and liquidity management, offering unprecedented flexibility and control to token holders and project developers. We believe that this system has the potential to unlock new possibilities in decentralized finance and token economics, and we welcome feedback and collaboration from the community to further refine and develop this innovative concept.</p>\n<p><strong>Discussion Points:</strong></p>\n<ol>\n<li>What are your thoughts on using NFTs to represent locked funds?</li>\n<li>How can flexible token locking systems benefit decentralized finance projects?</li>\n<li>What additional locking conditions or features would you like to see in such a system?</li>\n<li>How can we ensure the security and integrity of locked funds and NFT representations?</li>\n<li>Are there any potential regulatory or compliance challenges associated with this approach?</li>\n</ol>\n            <p><small>5 posts - 2 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/idea-discussion-nft-based-flexible-token-locking-system-for-liquidity-and-vested-payments/19916\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/idea-discussion-nft-based-flexible-token-locking-system-for-liquidity-and-vested-payments/19916","pubDate":"Mon, 06 May 2024 16:49:11 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19916"},"source":{"@url":"https://ethereum-magicians.org/t/idea-discussion-nft-based-flexible-token-locking-system-for-liquidity-and-vested-payments/19916.rss","#text":"[Idea Discussion] NFT-Based Flexible Token Locking System for Liquidity and Vested Payments"},"filter":false},{"title":"Eip-7591: BLS signed transactions","dc:creator":"MariusVanDerWijden","category":"Core EIPs","description":"<p>Discussions for EIP-7591</p>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7591-bls-signed-transactions/19911\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7591-bls-signed-transactions/19911","pubDate":"Mon, 06 May 2024 09:51:09 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19911"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7591-bls-signed-transactions/19911.rss","#text":"Eip-7591: BLS signed transactions"},"filter":false},{"title":"EIP-7701: Native Account Abstraction with EOF","dc:creator":"alex-forshtat-tbk","category":"Core EIPs","description":"<p>One of the issues that arises from enshrining an <a href=\"https://ethereum-magicians.org/t/erc-4337-account-abstraction-via-entry-point-contract-specification/7160\"> ERC-4337: Account Abstraction Using Alt Mempool</a> design in Ethereum is its reliance on Solidity method signatures and ABI-encoding that is not a native part of the EVM.</p>\n<p>This EIP is a variant of <a href=\"https://ethereum-magicians.org/t/rip-7560-native-account-abstraction/16664\">RIP-7560: Native Account Abstraction</a> that solves these issues by the means of extending the EOF format.</p>\n<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/ethereum/EIPs/pull/8516\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ethereum/EIPs/pull/8516\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/ethereum/EIPs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/ethereum/EIPs/pull/8516\" target=\"_blank\" rel=\"noopener nofollow ugc\">Add EIP: Native Account Abstraction with EOF</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>ethereum:master</code> ← <code>eth-infinitism:native_aa_with_eof_sections</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-05-03\" data-time=\"17:15:55\" data-timezone=\"UTC\">05:15PM - 03 May 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/forshtat\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"forshtat\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/5/576f0e8227fc43510e3a1b4aa0e4de88001dca04.jpeg\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"705A4C\">\n            forshtat\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"3 commits changed 1 files with 213 additions and 0 deletions\">\n          <a href=\"https://github.com/ethereum/EIPs/pull/8516/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+213</span>\n            <span class=\"removed\">-0</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">**ATTENTION: ERC-RELATED PULL REQUESTS NOW OCCUR IN [ETHEREUM/ERCS](https://gith<span class=\"show-more-container\"><a href=\"https://github.com/ethereum/EIPs/pull/8516\" target=\"_blank\" rel=\"noopener nofollow ugc\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\">ub.com/ethereum/ercs)**\n\n--\n\nWhen opening a pull request to submit a new EIP, please use the suggested template: https://github.com/ethereum/EIPs/blob/master/eip-template.md\n\nWe have a GitHub bot that automatically merges some PRs. It will merge yours immediately if certain criteria are met:\n\n - The PR edits only existing draft PRs.\n - The build passes.\n - Your GitHub username or email address is listed in the 'author' header of all affected PRs, inside &lt;triangular brackets&gt;.\n - If matching on email address, the email address is the one publicly listed on your GitHub profile.</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7701-native-account-abstraction-with-eof/19893\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7701-native-account-abstraction-with-eof/19893","pubDate":"Fri, 03 May 2024 21:24:04 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19893"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7701-native-account-abstraction-with-eof/19893.rss","#text":"EIP-7701: Native Account Abstraction with EOF"},"filter":false},{"title":"ERC-7700: Cross-chain Storage Router Protocol","dc:creator":"sshmatrix","category":"ERCs","description":"<p>The following proposal is a superior version of <a href=\"https://ethereum-magicians.org/t/eip-5559-cross-chain-write-deferral-protocol/10576\">EIP-5559: Cross-Chain Write Deferral Protocol</a>, aka <em>CCIP-Write</em>, replacing Ethereum L1 storage with L2 chains and cryptographically secure databases with an aim to cut gas costs and further privacy while retaining the secure aspects of on-chain storage. Methods in this document specifically target security and cost-effectiveness of write deferrals in context of databases. The cross-chain data written with these methods can be retrieved by generic EIP-3668-compliant contracts completing the cross-chain data life cycle.</p>\n<p><strong>ERC Link:</strong> <a href=\"https://github.com/namesys-eth/ERCs/blob/ccipWrite/ERCS/erc-7700.md\" rel=\"noopener nofollow ugc\">ERC-7700</a></p>\n<p><strong>PR Link:</strong> <a href=\"https://github.com/ethereum/ERCs/pull/404\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Add ERC: Cross-chain Storage Router Protocol by sshmatrix · Pull Request #404 · ethereum/ERCs · GitHub</a></p>\n<p><strong>Note:</strong> This proposal is a standalone ERC, amended from what was originally intended as a PR to <a href=\"https://ethereum-magicians.org/t/erc-5559-cross-chain-write-deferral-protocol/19664\">EIP-5559</a></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-7700-cross-chain-storage-router-protocol/19853\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-7700-cross-chain-storage-router-protocol/19853","pubDate":"Tue, 30 Apr 2024 01:49:40 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19853"},"source":{"@url":"https://ethereum-magicians.org/t/erc-7700-cross-chain-storage-router-protocol/19853.rss","#text":"ERC-7700: Cross-chain Storage Router Protocol"},"filter":false},{"title":"ERC-7699: ERC20 Payment reference extension","dc:creator":"radek","category":"ERCs","description":"<p>ERC pull request: <a href=\"https://github.com/ethereum/ERCs/pull/399/files\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Add ERC: ERC20 Payment reference extension by radeksvarz · Pull Request #399 · ethereum/ERCs · GitHub</a></p>\n<p>A minimal standard interface for ERC20 tokens allowing users to include a unique identifier (payment reference) for each transaction to help distinguish and associate payments with orders and invoices.</p>\n<p>Requires: EIP-20, EIP-165</p>\n<h1><a name=\"abstract-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#abstract-1\"></a>Abstract</h1>\n<p>The ERC20 token standard has become the most widely used token standard on the Ethereum network. However, it does not provide a built-in mechanism for including a payment reference (message) in token transfers. This proposal extends the existing ERC20 token standard by adding minimal methods to include a payment reference in token transfers and transferFrom operations. The addition of a payment reference can help users, merchants, and service providers to associate and reconcile individual transactions with specific orders or invoices.</p>\n<h1><a name=\"motivation-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#motivation-2\"></a>Motivation</h1>\n<p>The primary motivation for this proposal is to improve the functionality of the ERC20 token standard by providing a mechanism for including a payment reference in token transfers, similar to the traditional finance systems where payment references are commonly used to associate and reconcile transactions with specific orders, invoices or other financial records.</p>\n<p>Currently, users and merchants who want to include a payment reference in their transactions must rely on off chain external systems or custom payment proxy implementations. In traditional finance systems, payment references are often included in wire transfers and other types of electronic payments, making it easy for users and merchants to manage and reconcile their transactions.</p>\n<p>By extending the existing ERC20 token standard with payment reference capabilities, this proposal will help bridge the gap between traditional finance systems and the world of decentralized finance, providing a more seamless experience for users, merchants, and service providers alike.</p>\n<h1><a name=\"specification-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#specification-3\"></a>Specification</h1>\n<p>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in RFC 2119.</p>\n<p>Any contract complying with EIP-20 when extended with this ERC, MUST implement the following interface:</p>\n<pre><code class=\"lang-auto\">// The EIP-165 identifier of this interface is 0xxxxxxx - to be updated once ERC number is assigned\n\ninterface IERCXXXX {\n\nfunction transfer(address to, uint256 amount, bytes calldata paymentReference) external returns (bool);\n\nfunction transferFrom(address from, address to, uint256 amount, bytes calldata paymentReference) external returns (bool);\n\nevent Transfer(address indexed from, address indexed to, uint256 amount, bytes indexed paymentReference);\n\n}\n</code></pre>\n<p>These <code>transfer</code> and <code>transferFrom</code> functions MUST emit <code>Transfer</code> event with paymentReference parameter.</p>\n<p><code>paymentReference</code> parameter MAY be empty - example: <code>emit Transfer(From, To, amount, \"\");</code></p>\n<p><code>paymentReference</code> parameter is not limited in length by design, users are motivated to keep it short by calldata and log data gas costs.</p>\n<p>Transfers of 0 amount MUST be treated as normal transfers and fire the <code>Transfer</code> event.</p>\n<h1><a name=\"rationale-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#rationale-4\"></a>Rationale</h1>\n<h2><a name=\"parameter-name-5\" class=\"anchor\" href=\"https://ethereum-magicians.org#parameter-name-5\"></a>Parameter name</h2>\n<p>The choice to name the added parameter paymentReference was made to align with traditional banking terminology, where payment references are widely used to associate and reconcile transactions with specific orders, invoices or other financial records.</p>\n<p>The paymentReference parameter name also helps to clearly communicate the purpose of the parameter and its role in facilitating the association and reconciliation of transactions. By adopting terminology that is well-established in the financial industry, the proposal aims to foster a greater understanding and adoption of the extended ERC20 token standard.</p>\n<h1><a name=\"backwards-compatibility-6\" class=\"anchor\" href=\"https://ethereum-magicians.org#backwards-compatibility-6\"></a>Backwards Compatibility</h1>\n<p>This extension is fully backwards compatible with the existing ERC20 token standard. The new functions can be used alongside the existing transfer and transferFrom functions. Existing upgradable ERC20 tokens can be upgraded to include the new functionality without impact on the storage layout; new ERC20 tokens can choose to implement the payment reference features based on their specific needs.</p>\n<p>ERC20 requires its <code>Transfer(address indexed _from, address indexed _to, uint256 _value) </code> event to be emitted during transfers, thus there will be duplicitous data logged (from, to, amount) in two events.</p>\n<h1><a name=\"security-considerations-7\" class=\"anchor\" href=\"https://ethereum-magicians.org#security-considerations-7\"></a>Security Considerations</h1>\n<p>Payment reference privacy: Including payment references in token transfers may expose sensitive information about the transaction or the parties involved. Implementers and users SHOULD carefully consider the privacy implications and ensure that payment references do not reveal sensitive information. To mitigate this risk, implementers can consider using encryption or other privacy-enhancing techniques to protect payment reference data.</p>\n<p>Manipulation of payment references: Malicious actors might attempt to manipulate payment references to mislead users, merchants, or service providers. This can lead to:</p>\n<ol>\n<li>\n<p><strong>Legal risks</strong>: The beneficiary may face legal and compliance risks if the attacker uses illicit funds, potentially impersonating or flagging the beneficiary of involvement in money laundering or other illicit activities.</p>\n</li>\n<li>\n<p><strong>Disputes and refunds</strong>: The user might discover they didn’t make the payment, request a refund or raise a dispute, causing additional administrative work for the beneficiary.</p>\n</li>\n</ol>\n<p>To mitigate this risk, implementers can consider using methods to identify proper sender and to generate unique and verifiable related payment references.</p>\n            <p><small>4 posts - 2 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-7699-erc20-payment-reference-extension/19826\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-7699-erc20-payment-reference-extension/19826","pubDate":"Fri, 26 Apr 2024 18:58:47 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19826"},"source":{"@url":"https://ethereum-magicians.org/t/erc-7699-erc20-payment-reference-extension/19826.rss","#text":"ERC-7699: ERC20 Payment reference extension"},"filter":false},{"title":"About the RIPs category","dc:creator":"matt","category":"RIPs","description":"<p>This category is for Rollup Improvement Proposals.</p>\n<p>The goal of the RIP project is to standardize and provide high-quality documentation for Rollups in Ethereum ecosystem. This repository tracks past and ongoing improvements to Ethereum’s Rollup ecosystem in the form of Rollup Improvement Proposals (RIPs).</p>\n<p><strong>All RIPs are optional.</strong> RIPs are and will always remain optional standards for Rollups and participants in the larger EVM ecosystem. RIPs and RollCall are not a governance process.</p>\n<p>More information can be found at <a href=\"https://github.com/ethereum/RIPs\" class=\"inline-onebox\">GitHub - ethereum/RIPs: The Ethereum Rollup Improvement Proposal repository</a></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/about-the-rips-category/19805\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/about-the-rips-category/19805","pubDate":"Thu, 25 Apr 2024 19:11:49 +0000","discourse:topicPinned":"Yes","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19805"},"source":{"@url":"https://ethereum-magicians.org/t/about-the-rips-category/19805.rss","#text":"About the RIPs category"},"filter":false},{"title":"RIP-7696 : generic Double Scalar Multiplication (DSM) for all curves","dc:creator":"rdubois-crypto","category":"RIPs","description":"<p>This proposal creates two precompiled contracts that perform a double point multiplication (DSM) and sum then over any elliptic curve  given <code>p</code>, <code>a</code>,<code>b</code> curve parameters.<br>\nThis operation consists in computing the value uP+vQ, u and v being scalars, P and Q being points.</p>\n<p>We managed to implement generic DSM in full solidity with a lower cost than previous implementations (FCL, Daimo, p256-verifier-huff). Such genericity will enable curves such as Ed25519 and Babyjujub (with the use of isogeny we will describe later), Palla,Vesta, Starkcurve, etc.</p>\n<p>The proposal includes two precompiles, taking curves parameters as calldata.<br>\nThe first one is very comparable to RIP7212 and EIP6565, only taking those extra p,a,b parameters.<br>\nThe second them uses extra values (namely 2^128.P and 2^128Q), to provide a GLV comparable speedup, which is 50% asymptotically (less in full solidity, but ZK version will benefit largely from it).</p>\n<p>As of now there is a huge traction on P256, being the first FIDO curve implemented in WebAuthn. Ed25519 shall follow, and is superior in all ways (Schnorr based, no hidden seed constant,MPC friendly).</p>\n<p>This precompile also solve the ‘hacky’ use of ecrecover (as implemented for Schnorr based Dapps, such as Ambire Wallet, and secure MPC uses relying on Musig2). This cunning use of ecrecover in fact enables DSM.</p>\n<p>Implementing DSM at lower levels (for ZKEVM or nodes) only requires to implement Montgomery multiplications to emulate prime fields. (It is how it is done by Lambda for ZKsync right now). This is how are implemented most generic libraries (OpenSSL, libECC, Bolos, etc.).</p>\n<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/ethereum/RIPs/pull/18/files#diff-1991105bd164aa9e87619fa8426d5978f420c7033b30393f07a3b7afd09df7f3\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ethereum/RIPs/pull/18/files#diff-1991105bd164aa9e87619fa8426d5978f420c7033b30393f07a3b7afd09df7f3\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/ethereum/RIPs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/ethereum/RIPs/pull/18/files#diff-1991105bd164aa9e87619fa8426d5978f420c7033b30393f07a3b7afd09df7f3\" target=\"_blank\" rel=\"noopener nofollow ugc\">adding DSM RIP</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>ethereum:master</code> ← <code>rdubois-crypto:master</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-04-19\" data-time=\"17:12:59\" data-timezone=\"UTC\">05:12PM - 19 Apr 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/rdubois-crypto\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"rdubois-crypto\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/3/3fd3904f3c4dca6da8c87951d28db31afc71eba9.jpeg\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"EBEBE9\">\n            rdubois-crypto\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"4 commits changed 2 files with 155 additions and 0 deletions\">\n          <a href=\"https://github.com/ethereum/RIPs/pull/18/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+155</span>\n            <span class=\"removed\">-0</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">Double Scalar multiplication is the core operation for non-pairing based ECC pro<span class=\"show-more-container\"><a href=\"https://github.com/ethereum/RIPs/pull/18\" target=\"_blank\" rel=\"noopener nofollow ugc\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\">tocols (signature, ciphering, key exchange). This RIP proposes to implement a generic double scalar multiplication for any elliptic curve.</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>10 posts - 4 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/rip-7696-generic-double-scalar-multiplication-dsm-for-all-curves/19798\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/rip-7696-generic-double-scalar-multiplication-dsm-for-all-curves/19798","pubDate":"Thu, 25 Apr 2024 08:05:54 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19798"},"source":{"@url":"https://ethereum-magicians.org/t/rip-7696-generic-double-scalar-multiplication-dsm-for-all-curves/19798.rss","#text":"RIP-7696 : generic Double Scalar Multiplication (DSM) for all curves"},"filter":false},{"title":"#primordialSoup Best Practices","dc:creator":"bumblefudge","category":"Primordial Soup","description":"<p>On today’s EIPIP call, there was a discussion about how best to use this category, and eth-mag generally.  Opening this thread as a placeholder for some central location/URL that gathers over time tips on how to gather feedback for future/potential EIP drafts.</p>\n<p>Eth-Mag tips in general:</p>\n<ul>\n<li>The first message in a thread can be updated over time: add a summary! add links to side-conversations, implementations, and community-call notes/recordings!</li>\n<li>Moderators can do this^ in an emergency, but it’s always best if a thread/EIP driver takes this seriously and does it over time</li>\n</ul>\n<p>Primordial-specific tips:</p>\n<ul>\n<li>Feel free to cross-link or break out separate threads for prior-art review or extended discussion of “analogies” (e.g. how PYP handles X or how non-blockchain DAGs have specific properties that might be useful in ethereum, etc)</li>\n</ul>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/primordialsoup-best-practices/19790\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/primordialsoup-best-practices/19790","pubDate":"Wed, 24 Apr 2024 17:52:34 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19790"},"source":{"@url":"https://ethereum-magicians.org/t/primordialsoup-best-practices/19790.rss","#text":"#primordialSoup Best Practices"},"filter":false},{"title":"EIP-7698: EOF - Creation transaction","dc:creator":"gumb0","category":"Uncategorized","description":"<p>This is the discussion topic for <a href=\"https://github.com/ethereum/EIPs/pull/8498\" rel=\"noopener nofollow ugc\">EIP-7698: EOF - Creation transaction</a></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7698-eof-creation-transaction/19784\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7698-eof-creation-transaction/19784","pubDate":"Wed, 24 Apr 2024 13:32:46 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19784"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7698-eof-creation-transaction/19784.rss","#text":"EIP-7698: EOF - Creation transaction"},"filter":true},{"title":"EIP-7697：AUTHCREATE opcode","dc:creator":"txgyy","category":"Core EIPs","description":"<p><strong>EIP</strong>: <a href=\"https://github.com/ethereum/EIPs/pull/8493/files\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Add EIP: AUTHCREATE opcode by txgyy · Pull Request #8493 · ethereum/EIPs · GitHub</a></p>\n<p><strong>Go-Ethereum</strong>: <a href=\"https://github.com/ethereum/go-ethereum/compare/master...txgyy:go-ethereum:EIP-7697\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Comparing ethereum:master...txgyy:EIP-7697 · ethereum/go-ethereum · GitHub</a></p>\n<p><strong>AA Factory</strong>: <a href=\"https://github.com/eth-infinitism/account-abstraction/compare/develop...txgyy:account-abstraction:AA-EIP-7697\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Comparing eth-infinitism:develop...txgyy:AA-EIP-7697 · eth-infinitism/account-abstraction · GitHub</a></p>\n<h2><a name=\"abstract-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#abstract-1\"></a>Abstract</h2>\n<p>The EIP introduces an EVM instruction <code>AUTHCREATE</code>. It allows a deterministic addresses to migrate to a smart contract.</p>\n<p>Inspiration comes from <a href=\"https://eips.ethereum.org/EIPS/eip-3074\" rel=\"noopener nofollow ugc\">EIP-3074</a> and <a href=\"https://eips.ethereum.org/EIPS/eip-5003\" rel=\"noopener nofollow ugc\">EIP-5003</a>:</p>\n<ul>\n<li>(<a href=\"https://eips.ethereum.org/EIPS/eip-3074\" rel=\"noopener nofollow ugc\">EIP-3074</a>) + <a href=\"https://eips.ethereum.org/EIPS/eip-5003\" rel=\"noopener nofollow ugc\">EIP-5003</a> = (<code>AUTH</code> + <code>AUTHCALL</code>) + <code>AUTHUSURP</code></li>\n<li><a href=\"https://eips.ethereum.org/EIPS/eip-7697\" rel=\"noopener nofollow ugc\">EIP-7697</a> = <code>AUTHCREATE</code> = <code>AUTH</code> + <code>AUTHUSURP</code></li>\n</ul>\n<h2><a name=\"motivation-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#motivation-2\"></a>Motivation</h2>\n<p>For a long time, the EVM ecosystem has been plagued by two issues:</p>\n<ol>\n<li>Difficulty ensuring consistency across addresses on multiple chains, even when using the same bytecode.</li>\n<li>EOAs lack contract capabilities, preventing the realization of account abstraction.\n<ol>\n<li>Authentication - any form of proving one’s identity.</li>\n<li>Authorization - any access policy.</li>\n<li>Replay protection - transaction ordering decoupled from replay protection.</li>\n<li>Gas payment - gas payment decoupled from the account itself.</li>\n<li>Execution - any execution logic.</li>\n</ol>\n</li>\n</ol>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Feature</th>\n<th><a href=\"https://eips.ethereum.org/EIPS/eip-7697\" rel=\"noopener nofollow ugc\">EIP-7697</a></th>\n<th><a href=\"https://eips.ethereum.org/EIPS/eip-3074\" rel=\"noopener nofollow ugc\">EIP-3074</a></th>\n<th><a href=\"https://eips.ethereum.org/EIPS/eip-5003\" rel=\"noopener nofollow ugc\">EIP-5003</a></th>\n<th><a href=\"https://eips.ethereum.org/EIPS/eip-7377\" rel=\"noopener nofollow ugc\">EIP-7377</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Deploy the same address <a href=\"https://eips.ethereum.org/EIPS/eip-2470.md\" rel=\"noopener nofollow ugc\">ERC-2470</a></td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/negative_squared_cross_mark.png?v=12\" title=\":negative_squared_cross_mark:\" class=\"emoji only-emoji\" alt=\":negative_squared_cross_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"> need 3 opcodes</td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"> only EOA</td>\n</tr>\n<tr>\n<td>Help EOA to upgrade to CA</td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/negative_squared_cross_mark.png?v=12\" title=\":negative_squared_cross_mark:\" class=\"emoji only-emoji\" alt=\":negative_squared_cross_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"> need 3 opcodes</td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td>Support <code>secp256r1</code> or more</td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/negative_squared_cross_mark.png?v=12\" title=\":negative_squared_cross_mark:\" class=\"emoji only-emoji\" alt=\":negative_squared_cross_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/negative_squared_cross_mark.png?v=12\" title=\":negative_squared_cross_mark:\" class=\"emoji only-emoji\" alt=\":negative_squared_cross_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td>Reuse existing wallet infrastructure</td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"> adapt the contract</td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/negative_squared_cross_mark.png?v=12\" title=\":negative_squared_cross_mark:\" class=\"emoji only-emoji\" alt=\":negative_squared_cross_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"> adapt the contract</td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/negative_squared_cross_mark.png?v=12\" title=\":negative_squared_cross_mark:\" class=\"emoji\" alt=\":negative_squared_cross_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"> adapt the node rpc</td>\n</tr>\n<tr>\n<td>Integrate easily with <a href=\"https://eips.ethereum.org/EIPS/eip-4337.md\" rel=\"noopener nofollow ugc\">ERC-4337</a> and RIP-7560</td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"> support factory contract</td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/negative_squared_cross_mark.png?v=12\" title=\":negative_squared_cross_mark:\" class=\"emoji only-emoji\" alt=\":negative_squared_cross_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/negative_squared_cross_mark.png?v=12\" title=\":negative_squared_cross_mark:\" class=\"emoji only-emoji\" alt=\":negative_squared_cross_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/negative_squared_cross_mark.png?v=12\" title=\":negative_squared_cross_mark:\" class=\"emoji only-emoji\" alt=\":negative_squared_cross_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td>Grant temporary CA capabilities to EOA</td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/negative_squared_cross_mark.png?v=12\" title=\":negative_squared_cross_mark:\" class=\"emoji only-emoji\" alt=\":negative_squared_cross_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/negative_squared_cross_mark.png?v=12\" title=\":negative_squared_cross_mark:\" class=\"emoji only-emoji\" alt=\":negative_squared_cross_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td><img src=\"https://ethereum-magicians.org/images/emoji/twitter/negative_squared_cross_mark.png?v=12\" title=\":negative_squared_cross_mark:\" class=\"emoji only-emoji\" alt=\":negative_squared_cross_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n</tbody>\n</table>\n</div>\n            <p><small>9 posts - 4 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7697-authcreate-opcode/19780\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7697-authcreate-opcode/19780","pubDate":"Wed, 24 Apr 2024 08:11:32 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19780"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7697-authcreate-opcode/19780.rss","#text":"EIP-7697：AUTHCREATE opcode"},"filter":false},{"title":"BLS keys related ERC discussion: ERC 2333, 2334, 2335","dc:creator":"CarlBeek","category":"ERCs","description":"<p>Posting this for discussions related to ERCs 2333, 2334, 2335. Previous discussions were hosted as GitHub issues:</p>\n<p><a href=\"https://github.com/ethereum/EIPs/issues/2337\" rel=\"noopener nofollow ugc\">ERC 2333 discussion issue</a><br>\n<a href=\"https://github.com/ethereum/EIPs/issues/2338\" rel=\"noopener nofollow ugc\">ERC 2334 discussion issue</a><br>\n<a href=\"https://github.com/ethereum/EIPs/issues/2339\" rel=\"noopener nofollow ugc\">ERC 2335 discussion issue</a></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/bls-keys-related-erc-discussion-erc-2333-2334-2335/19774\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/bls-keys-related-erc-discussion-erc-2333-2334-2335/19774","pubDate":"Tue, 23 Apr 2024 17:55:26 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19774"},"source":{"@url":"https://ethereum-magicians.org/t/bls-keys-related-erc-discussion-erc-2333-2334-2335/19774.rss","#text":"BLS keys related ERC discussion: ERC 2333, 2334, 2335"},"filter":false},{"title":"EIP-7693: Backward-Compatible Post-Quantum Migration","dc:creator":"nixxypQCee","category":"EIPs","description":"<p>Discussion thread for <a href=\"https://github.com/ethereum/EIPs/pull/8454\" rel=\"noopener nofollow ugc\">Add EIP: Backward-Compatible Post-Quantum Migration · Pull Request #8454 · ethereum/EIPs  · GitHub</a>.</p>\n<p>We are excited to share a <a href=\"https://github.com/pqcee/EIPs/blob/master/EIPS/eip-7693.md\" rel=\"noopener nofollow ugc\">draft of an EIP</a> that we have been working on. The proposal aims to present a solution for integrating a post-quantum signature scheme into the Ethereum blockchain while maintaining backward compatibility with existing ECDSA. The PQC signature scheme, targets integration with a quantum-safe zero-knowledge proof system such as zkSTARK or MPC-in-the-Head, to ensure the long-term security of Ethereum transactions against quantum attacks without requiring immediate upgrades to existing infrastructure. Looking forward to your thoughts on the proposal.</p>\n            <p><small>3 posts - 3 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7693-backward-compatible-post-quantum-migration/19769\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7693-backward-compatible-post-quantum-migration/19769","pubDate":"Tue, 23 Apr 2024 10:24:26 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19769"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7693-backward-compatible-post-quantum-migration/19769.rss","#text":"EIP-7693: Backward-Compatible Post-Quantum Migration"},"filter":false},{"title":"Expanding EIP 4399 PREVRANDAO with RANDAO(n)","dc:creator":"alexbabits","category":"EIPs","description":"<p><strong>Do people want a RANDAO(n) Function?</strong></p>\n<p>I am looking to revive the discussion around the potential for a RANDAO(n) function, where n is the <code>block.number</code> or <code>slot</code>. This opcode would return the <code>randao</code> value for a specified block/slot. (It could also be something like PREVRANDAO(n) to keep consistency).</p>\n<p>I read through the EIP, articles, and this discussion here: <a href=\"https://ethereum-magicians.org/t/eip-4399-supplant-difficulty-opcode-with-random/7368\" class=\"inline-onebox\">EIP-4399: Supplant DIFFICULTY opcode with RANDOM</a>. This lead me to think that many people wanted this extended functionality of <code>prevrandao</code> to be able to input a specific block.</p>\n<p><strong>Is this feasible?</strong><br>\nIf so, I think it could serve a purpose for smaller protocols to finally have secure on-chain randomness without any oracle integration. Larger protocols may continue to want off chain oracles, because there does appear to be relatively cheap attacks (block reward opportunity cost) to refuse to publish a block, or get 2^n bits/attempts per proposer that a malicious actor owns.</p>\n<p><strong>Why is it needed</strong><br>\nI’ve written an opinion piece <a href=\"https://medium.com/@alexbabits/why-block-prevrandao-is-a-useless-dangerous-trap-and-how-to-fix-it-5367ed3c6dfc\" rel=\"noopener nofollow ugc\">here</a> discussing the current failure of the <code>prevrandao</code> use case, and a potential fix with <code>RANDAO(n)</code>.</p>\n<p>In short, <code>block.prevrandao</code> has minimal use cases because the value it uses must be from a block that already exists. There is no way to “delay” the request for randomness to a later unknown time in the future when the randomness production should be revealed. The return value it uses must be from a block that already exists, and it’s <code>randao</code> value is determined by the immediate previous block that the transaction was finalized in. Using <code>block.prevrandao</code> can be taken advantage of in a simple manner. A malicious function can call the target protocol’s <code>getRandomness</code> type of function, which uses <code>block.prevrandao</code> as the powerhouse to generate it’s random number for users. This malicious function can revert if the generated random number is unfavorable, and only choose to execute when the number generated is favorable (see medium post).</p>\n<p>In contrast, if we had <code>RANDAO(n)</code>, this appears to be a step forward in achieving more secure on chain randomness. I’ve built a coin flip game to demonstrate the use case for <code>RANDAO(n)</code>.</p>\n<pre data-code-wrap=\"js\"><code class=\"lang-js\">// This doesn't compile because randao(n) doesn't exist.\n// DO NOT USE IN PRODUCTION\n\nmapping(address =&gt; uint256) public usersBlockNumber;\n\nerror FailedEthTransfer();\nerror IncorrectPayment();\nerror AlreadyHasBlockNumber();\nerror NotMatured();\n\nfunction setUsersBlockNumber() public payable {\n    // User must not have a block number.\n    if (usersBlockNumber[msg.sender] != 0) revert AlreadyHasBlockNumber();\n\n    // User must pay in advance (0.01 ETH to play).\n    if (msg.value != 1e16) revert IncorrectPayment();\n\n    // Let the users block number be 4 epochs after this call.\n    usersBlockNumber[msg.sender] = block.number + 128;\n}\n\nfunction generateAndUseRandomness() public payable {\n    // Get user's block number.\n    uint256 usersBlock = usersBlockNumber[msg.sender];\n\n    // Must have a matured and valid block number associated with user.\n    if (usersBlock &lt; block.number) revert NotMatured();\n \n    // Generate random number from the block\n    randomNumber = (block.randao(usersBlock) % 100) + 1;\n\n    // Give user 0.02 ETH if won coinflip \n    // [51, 100] inclusive = 50 numbers = 50%.\n    if (randomNumber &gt; 50) {  \n        (bool success,) = msg.sender.call{value: 2e16}(\"\");\n        if (!success) revert FailedEthTransfer();\n    }\n    \n    // Always set users block back to 0 after using randomness.\n    delete usersBlockNumber[msg.sender];\n}\n</code></pre>\n<p>Notice now the user has no way of manipulating the outcome after they have requested that a block be associated with them. The user cannot create a function that reverts when the randomness is unfavorable, because the randomness is not known at time of request, and can never be, because the request always references a block far into the future. At time of execution, the users block associated with them is always X distance away.</p>\n<p>We have the same security techniques as requesting a random number from Chainlink VRF, disallowing users to re-request randomness, and freezing any function calls for the user while they have a number associated with them but not yet used. Also, the depth of the request should be at least the maximum re-org depth I would guess. I’m unsure if a full 4 epochs of waiting time would be necessary for “lotteries” with less than the block reward value.</p>\n<p>If <code>RANDAO</code> were to use the slot instead of block, and the slot was empty, as mentioned in the original EIP-4399 discussion, it would have to look back further in the past to find a non-empty slot, or have some other technique. For this reason using the block number may be superior, even if the timing is not perfectly consistent, always having a valid number feels better?</p>\n<p>I am interested by what others have to say about the feasibility and impact or lack thereof for this new opcode that would act as an extension of <code>PREVRANDAO</code>.</p>\n            <p><small>12 posts - 3 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/expanding-eip-4399-prevrandao-with-randao-n/19741\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/expanding-eip-4399-prevrandao-with-randao-n/19741","pubDate":"Sun, 21 Apr 2024 21:33:50 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19741"},"source":{"@url":"https://ethereum-magicians.org/t/expanding-eip-4399-prevrandao-with-randao-n/19741.rss","#text":"Expanding EIP 4399 PREVRANDAO with RANDAO(n)"},"filter":false},{"title":"ERC-7695: Ownership Delegation and Context for ERC-721","dc:creator":"ducthotran2010","category":"ERCs","description":"<p>Hi Magicians,</p>\n<p>I’m from the Axie community, currently, we’re currently grappling with scalability issues and want to encourage financial dApps for Axies without changing ownership due to lots of infrastructure and rewarding systems built on top of the ERC721 Axie standard.</p>\n<p>Therefore I would like to propose an extension for ERC-721 tokens to facilitate a broader range of dApps (involving renting, delegating actions, and collateral systems). This proposal is to enhance NFT ownership without transferring to any contracts to perform renting or delegating actions. Furthermore, these extensions aim to support the integration of ERC-721 tokens into collateral systems in different and complex contexts.</p>\n<p>Please read more at <a href=\"https://github.com/ducthotran2010/ERCs/blob/erc/ERCS/erc-7695.md\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">ERCs/ERCS/erc-7695.md at erc · ducthotran2010/ERCs · GitHub</a></p>\n<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/ethereum/ERCs/pull/391\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ethereum/ERCs/pull/391\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/ethereum/ERCs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/ethereum/ERCs/pull/391\" target=\"_blank\" rel=\"noopener nofollow ugc\">Add ERC: Delegation, Context for Non-Fungible Token</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>ethereum:master</code> ← <code>ducthotran2010:erc</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-04-19\" data-time=\"07:27:28\" data-timezone=\"UTC\">07:27AM - 19 Apr 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/ducthotran2010\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"ducthotran2010\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/a/a9ecad9e4b034402bdd6ca932eb26fa99044764c.jpeg\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"6A5F49\">\n            ducthotran2010\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"12 commits changed 4 files with 481 additions and 0 deletions\">\n          <a href=\"https://github.com/ethereum/ERCs/pull/391/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+481</span>\n            <span class=\"removed\">-0</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">This proposal introduces an extension for ERC721 Non-Fungible Tokens (NFTs): spe<span class=\"show-more-container\"><a href=\"https://github.com/ethereum/ERCs/pull/391\" target=\"_blank\" rel=\"noopener nofollow ugc\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\">cifying users for several contexts and differentiating owner and ownership rights for a token to use in several financial use cases for NFT.</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-7695-ownership-delegation-and-context-for-erc-721/19716\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-7695-ownership-delegation-and-context-for-erc-721/19716","pubDate":"Fri, 19 Apr 2024 08:28:17 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19716"},"source":{"@url":"https://ethereum-magicians.org/t/erc-7695-ownership-delegation-and-context-for-erc-721/19716.rss","#text":"ERC-7695: Ownership Delegation and Context for ERC-721"},"filter":false},{"title":"Events Should Be Free","dc:creator":"yulesa","category":"Primordial Soup","description":"<h1><a name=\"events-should-be-free-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#events-should-be-free-1\"></a>Events Should Be Free</h1>\n<h2><a name=\"introduction-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#introduction-2\"></a>Introduction</h2>\n<p>Permissionless access to data is one crucial aspect of social consensus. The motto of blockchains, “Verify, don’t trust!” tells you exactly that. DeFi apps today are not based on faith; they prevail because anyone can validate them. At any point in time, you can evaluate their trust assumptions, see how much liquidity, collateral, and debt they have, and make them accountable.</p>\n<p><em>“Ethereum is the world’s settlement layer not because it has the largest economic security, but because it’s the largest verifiable blockchain”</em><br>\n<a href=\"https://twitter.com/gluk64/status/1770910189572501954\" rel=\"noopener nofollow ugc\">https://twitter.com/gluk64/status/1770910189572501954</a>.</p>\n<p>Events, or Logs, are the primary data source of Ethereum (and other EVM chains). Most analytics websites, Dune dashboards, and crypto reports are created using events as the most basic data primitive. Events are then transformed, combined, and grouped to create a metric in a chart or a table. Events are the building block of crypto data but are at risk of being undermined. To explain why this is happening, we need a good understanding of events’ inner workings.</p>\n<h2><a name=\"how-do-events-work-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#how-do-events-work-3\"></a>How do events work?</h2>\n<p>Skip this part if you have a good understanding of how events work.</p>\n<p>Events or Logs in EVMs are similar to code logs in any language. It’s one line in the code that, when the execution stumbles at it, will write the desired execution information in a ledger. A log record is used to surface information about a smart contract execution, like a token transfer or a change of ownership, so that it can be easily retrieved.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethereum-magicians.org/uploads/default/original/2X/e/ede0a57073bf202d5c5284861c2a5c6eb256e30c.jpeg\" data-download-href=\"https://ethereum-magicians.org/uploads/default/ede0a57073bf202d5c5284861c2a5c6eb256e30c\" title=\"emit\"><img src=\"https://ethereum-magicians.org/uploads/default/optimized/2X/e/ede0a57073bf202d5c5284861c2a5c6eb256e30c_2_690x295.jpeg\" alt=\"emit\" data-base62-sha1=\"xWmsHeM6Zh2HGahqq9cxOrkfBcE\" width=\"690\" height=\"295\" srcset=\"https://ethereum-magicians.org/uploads/default/optimized/2X/e/ede0a57073bf202d5c5284861c2a5c6eb256e30c_2_690x295.jpeg, https://ethereum-magicians.org/uploads/default/optimized/2X/e/ede0a57073bf202d5c5284861c2a5c6eb256e30c_2_1035x442.jpeg 1.5x, https://ethereum-magicians.org/uploads/default/optimized/2X/e/ede0a57073bf202d5c5284861c2a5c6eb256e30c_2_1380x590.jpeg 2x\" data-dominant-color=\"F0F1F0\"></a></div><p></p>\n<p><em>Example of the UniswapV3Factory contract code, which will emit the PoolCreated Event every time a pool is created. You can calculate how many pools Uniswap has by counting how many PoolCreated Events were emitted. Source: <a href=\"https://etherscan.io/address/0x1f98431c8ad98523631ae4a59f267346ea31f984#code\" rel=\"noopener nofollow ugc\">https://etherscan.io/address/0x1f98431c8ad98523631ae4a59f267346ea31f984#code</a></em></p>\n<p>In Ethereum, event outputs are written in the transaction receipts, together with some other information about the transaction outcome. Every node in the blockchain stores transaction receipts in the blocks. The back-end of analytics websites and data providers can then request the transaction receipts from any node and use this information to create the desired metrics.</p>\n<p>The solidity code is not what is stored in the blockchain. The function emit is compiled to a LOG opcode, and the node implementation dictates the contract execution flow when the LOG opcode is called. A block also includes some extra metadata to improve efficiency while querying receipts.</p>\n<p>In conclusion, retrieving data from events is much simpler than sourcing it from the state trie (Ethereum memory) while also allowing the retrieval of historical data, a much more complex task when using other sources since the state trie is constantly updated; you usually only have access to its latest state.</p>\n<p>This blog post from MyCrypto provides an excellent, in-depth explanation of events:</p><aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://medium.com/mycrypto/understanding-event-logs-on-the-ethereum-blockchain-f4ae7ba50378\">\n  <header class=\"source\">\n      <img src=\"https://ethereum-magicians.org/uploads/default/original/2X/3/360db83263e79cba7951e7ba15aa4495131aa0f1.png\" class=\"site-icon\" data-dominant-color=\"585858\" width=\"32\" height=\"32\">\n\n      <a href=\"https://medium.com/mycrypto/understanding-event-logs-on-the-ethereum-blockchain-f4ae7ba50378\" target=\"_blank\" rel=\"noopener nofollow ugc\" title=\"10:10PM - 04 March 2020\">Medium – 4 Mar 20</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:690/307;\"><img src=\"https://ethereum-magicians.org/uploads/default/optimized/2X/d/dd64e2151c9cb47e182b7f9d23757872f0b1d698_2_690x307.png\" class=\"thumbnail\" data-dominant-color=\"F4EFDD\" width=\"690\" height=\"307\"></div>\n\n<h3><a href=\"https://medium.com/mycrypto/understanding-event-logs-on-the-ethereum-blockchain-f4ae7ba50378\" target=\"_blank\" rel=\"noopener nofollow ugc\">Understanding event logs on the Ethereum blockchain</a></h3>\n\n  <p>Every transaction has an event log, but those event logs can be hard to read.</p>\n\n  <p>\n    <span class=\"label1\">Reading time: 6 min read</span>\n  </p>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<h2><a name=\"the-issue-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#the-issue-4\"></a>The issue</h2>\n<p>Events come at a cost. Each event incurs a minimum of 375 gas, with an additional 375 for each topic (32 bytes of indexed data) and eight gas for each byte in data (unindexed data). For instance, a Transfer event adds 1756 gas to the operation, while the entire transfer operation costs between 40,000 and 60,000 gas. The event emission cost is paid by the user when making a transaction.</p>\n<p>Because Ethereum is now expensive, this cost factor has led to discussions about making L1 transactions more affordable. Even though events represent a small fraction of a transaction cost, developers are already considering their removal, so their users don’t bear this cost. This creates a massive issue for data providers, leading them to centralized alternatives.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethereum-magicians.org/uploads/default/original/2X/2/2c936f2231d1d3a551263c8ed2069c8d553848a0.jpeg\" data-download-href=\"https://ethereum-magicians.org/uploads/default/2c936f2231d1d3a551263c8ed2069c8d553848a0\" title=\"hayden\"><img src=\"https://ethereum-magicians.org/uploads/default/optimized/2X/2/2c936f2231d1d3a551263c8ed2069c8d553848a0_2_587x499.jpeg\" alt=\"hayden\" data-base62-sha1=\"6mkSRj3VLhLx25FknzJWkrd9GIE\" width=\"587\" height=\"499\" srcset=\"https://ethereum-magicians.org/uploads/default/optimized/2X/2/2c936f2231d1d3a551263c8ed2069c8d553848a0_2_587x499.jpeg, https://ethereum-magicians.org/uploads/default/optimized/2X/2/2c936f2231d1d3a551263c8ed2069c8d553848a0_2_880x748.jpeg 1.5x, https://ethereum-magicians.org/uploads/default/optimized/2X/2/2c936f2231d1d3a551263c8ed2069c8d553848a0_2_1174x998.jpeg 2x\" data-dominant-color=\"0A0D0E\"></a></div><p></p>\n<p><em>Heyden Adams, CEO of Uniswap, is polling about event removal in the next version of Uniswap. Even though the X poll is not a trustworthy source of truth, the fact that they consider it is troublesome. Uniswap V4 without events could tip the bucket to centralized solutions. Source: <a href=\"https://twitter.com/haydenzadams/status/1775907308372922464\" rel=\"noopener nofollow ugc\">https://twitter.com/haydenzadams/status/1775907308372922464</a></em></p>\n<p>Events solve two different problems. The first is obvious: easy access to execution data. Events store extra information in the receipts, making this data much more accessible. However, a second, often neglected, issue events solve is data curation. Knowing what to store is a challenging task. The blockchain generates an abundance of data, which can become overwhelming and hinder the ability to extract meaningful insights. Data curation is more suitable for those developing the protocol and deeply understanding its inner workings. When devs remove the events, they push this task to everyone further down in the data manipulation process. This is critical.</p>\n<p>Most alternatives to events are burdensome or rely on centralized data providers. Call traces, another outcome from transactions that are also decentralized, provide very limited access to execution data, and the actual state needs to be reconstructed from input parameters. This path is impractical, as any crypto data analyst who has ever tried it can attest, and it won’t be pursued given available centralized alternatives. Events can also be emulated by proprietary customized nodes that modify the deployed contracts and add fictitious events to the code. This approach requires centralized infrastructure to rewrite code, re-execute the blockchain, and deliver indexed events to consumers.</p>\n<h2><a name=\"potential-solutions-5\" class=\"anchor\" href=\"https://ethereum-magicians.org#potential-solutions-5\"></a>Potential Solutions</h2>\n<p>Events should be free. Even though end-users consume dashboards and charts, they shouldn’t bear the cost directly at each transaction. Events cost gas because every node needs to handle and store them in the receipts. Nodes would get bloated with useless events if they were free or much cheaper. We need to make log manipulation and storage optional. With free events, developers don’t need to remove them from their code, still maintaining the curation by protocol engineers and permanently written in the contract. Events are kept decentralized, although optional to anyone who wants to make use of them later.</p>\n<p>How can we do it? It’s time for an open-source node implementation dedicated to data applications. The initial “data node” MVP can be a fork of current execution nodes with some extra functionalities to handle data. In its most straightforward configuration, it will be responsible for treating the current events that exist today. This solution not only addresses the issue of event costs but also provides a platform for developers to freely manage and store crypto data in a format more suitable to their needs.</p>\n<p>The rationale is that if you’re a home-staker, you probably don’t care about storing events since you won’t do much with them and can run the existing node. Conversely, if you run a node to power some UI, you could care only about the events emitted by the protocol’s contracts in the UI. Lastly, if you’re a data provider, you care about most contracts and would store all; ultimately, this is part of your business anyway.</p>\n<p>We would also need to modify the current execution nodes. One alternative is implementing new opcodes for fictional/free events (Mnemonic FLOG) and keeping the current LOG opcode. FLOG would be ignored entirely by regular nodes. Still, on a “data node”, it would act similarly to the regular LOG opcodes, adding their output to some data structure (maybe in the same receipts) and indexing the relevant fields. Solidity compilers must also introduce functions and syntax that would be compiled to the new opcode. This proposal does not affect already deployed contracts, which would still spend gas on transactions. Only new contracts using the new opcode would benefit. Furthermore, it allows the ability to code payable events when necessary (a swap can have a free event, but a set_new_fee function can pay for it, storing it at every node). Alternatively, we can repurpose the current LOG opcodes to be free and ignored by regular nodes and make new opcodes for payable events that would follow the current log implementation.</p>\n<p>Other considerations must be made. Free events could be a potential vector for spammers’ contracts and others to abuse. Data consumers will require extra functionalities, like the ability only to track events from some contracts, some type of contracts ignore lists, or even some additional indexing. The “data node” team would be responsible for making design considerations providing the new customers of this node, data providers.</p>\n<p>One last alternative is to have special comments in solidity for fictional events. It doesn’t require any node change and keeps the curation by protocol developers, but it has the drawback that comments are not compiled to opcodes and, thus, are not deployed at the blockchain. The “data node” would only be able to act on it if it has access to this contract solidity source code, also needing re-execution of the new compiled version of the contract with the free log. Also, there is no guarantee that events are the same, as there is no way to verify comments onchain.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethereum-magicians.org/uploads/default/original/2X/9/9095916513c041989ea6ff2e5574a7e391713738.jpeg\" data-download-href=\"https://ethereum-magicians.org/uploads/default/9095916513c041989ea6ff2e5574a7e391713738\" title=\"standards\"><img src=\"https://ethereum-magicians.org/uploads/default/optimized/2X/9/9095916513c041989ea6ff2e5574a7e391713738_2_690x391.jpeg\" alt=\"standards\" data-base62-sha1=\"kD3cCCLogJQ0UJFg4bE3VRg9eSk\" width=\"690\" height=\"391\" srcset=\"https://ethereum-magicians.org/uploads/default/optimized/2X/9/9095916513c041989ea6ff2e5574a7e391713738_2_690x391.jpeg, https://ethereum-magicians.org/uploads/default/optimized/2X/9/9095916513c041989ea6ff2e5574a7e391713738_2_1035x586.jpeg 1.5x, https://ethereum-magicians.org/uploads/default/optimized/2X/9/9095916513c041989ea6ff2e5574a7e391713738_2_1380x782.jpeg 2x\" data-dominant-color=\"E1E1E1\"></a></div><p></p>\n<h2><a name=\"conclusion-6\" class=\"anchor\" href=\"https://ethereum-magicians.org#conclusion-6\"></a>Conclusion</h2>\n<p>Simply removing events from the code is a terrible decision. It pushes UI development and analytics to proprietary products and platforms, centralizing the data-provider supply chain. Existing alternatives to events, like traces, are limited, burdensome, and onerous. However, protocol developers are also correct in trying to remove costs from their users. The only way to fight this tragedy of the commons situation is for the community to step forward and advocate for open-source, decentralized solutions. The existing data providers could also step forward and sponsor this idea, as their business relies entirely on that.</p>\n            <p><small>9 posts - 5 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/events-should-be-free/19712\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/events-should-be-free/19712","pubDate":"Fri, 19 Apr 2024 01:20:10 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19712"},"source":{"@url":"https://ethereum-magicians.org/t/events-should-be-free/19712.rss","#text":"Events Should Be Free"},"filter":false},{"title":"Increasing contract size limit with increasing gas cost beyond 24.5Kb","dc:creator":"0xTraub","category":"Core EIPs","description":"<p>Vitalik’s <a href=\"https://eips.ethereum.org/EIPS/eip-170\" rel=\"noopener nofollow ugc\">EIP-170</a> which set the current contract size limit at 24.5 Kb was written in 2016, over 8 years ago. Since then a lot has changed about the protocol, including the roadmap decision to include the verge and the purge. I think it is time to reconsider our current contract size limitations. As contracts get bigger and Dapps more complex, this limit becomes a bottleneck for many developers. The restriction has resulted in several design suggestions as well, with the Diamond-Standard being the most popular. However, writing and interacting with Diamond-contracts is a pain point for many developers, and it is not without its own issues. I  want to get started the conversation about how we can increase the contract size-limit without compromising on things like state-growth, decentralization, and security.</p>\n<p>My current idea is fairly simple. The current contract size limit should be doubled from ~24.5Kb to ~49Kb. However, 24.5Kb should remain as target, with additional bytes incurring an increasing gas cost per byte, up to the max limit.</p>\n<p>Current code cost is defined in the EVM as <code>code_deposit_cost = 200 * deployed_code_size </code></p>\n<p>Based on the memory expansion cost, this should put the equation as something like <code>200 * contract_size + floor(size^2 / 24500)</code></p>\n<p>I think that this cost should be defined either as a step-function, or more likely as an exponential increase beyond a floor, similar to the memory-expansion cost. A hard-cap should probably be maintained to guard against the DOS-Vector Vitalik lays out in <a href=\"https://eips.ethereum.org/EIPS/eip-170\" rel=\"noopener nofollow ugc\">EIP-170</a>, but increased nonetheless. However, it could be possible to conceive of a proposal where exponentially increasing cost combined with block-gas-limits prevents against any security issues, and the cap can be removed entirely.</p>\n<p>A second potential proposal could be something akin to multi-dimensional EIP-1559, where a target amount of new code is set per-block and the gas cost of deployment dynamic with a target. However, this would be contingent upon other major consensus changes, and is not suggested in the interim.</p>\n<p>There’s definitely an appetite in the solidity community for increasing the limit, the question is how to do it with minimal consensus changes. Implementation would be fairly simple as its only a question of what the gas equation ought to be, and can be tweaked in the future as hardware requirements and further state-expiry proposals shift as well.</p>\n<p>There must be some reason why nobody has taken this question up? Contract size limitations are a major pain point for solidity developers. The only discussion i’ve seen on this forum is from 2019, pre-merge/1559 and discussion seems to have stalled out.</p>\n            <p><small>8 posts - 3 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/increasing-contract-size-limit-with-increasing-gas-cost-beyond-24-5kb/19708\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/increasing-contract-size-limit-with-increasing-gas-cost-beyond-24-5kb/19708","pubDate":"Thu, 18 Apr 2024 21:37:48 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19708"},"source":{"@url":"https://ethereum-magicians.org/t/increasing-contract-size-limit-with-increasing-gas-cost-beyond-24-5kb/19708.rss","#text":"Increasing contract size limit with increasing gas cost beyond 24.5Kb"},"filter":false},{"title":"ERC-7694: Solana Storage Router","dc:creator":"sshmatrix","category":"ERCs","description":"<p>This standard is an extension to <a href=\"https://ethereum-magicians.org/t/erc-7700-cross-chain-storage-router-protocol/19853\">EIP-7700</a> introducing storage router for Solana. EIP-7700 introduces three external routers for deferring storage to L1, L2s and databases. This document extends that specification by introducing a fourth storage router targeting Solana as the storage provider.</p>\n<p>Solana is a cheap L1 solution that is fairly popular among Ethereum community and is widely supported alongside Ethereum by almost all wallet providers. There are several chain-agnostic protocols on Ethereum which could benefit from direct access to Solana blockspace; ENS is one such example where it can serve users of Solana via its chain-agnostic properties while also using Solana’s own native storage. This development will surely encourage more cross-chain functionalities between Ethereum and Solana at core.</p>\n<p>ERC Link: <a href=\"https://github.com/namesys-eth/ERCs/blob/solanaHandler/ERCS/erc-7694.md\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">ERCs/ERCS/erc-7694.md at solanaHandler · namesys-eth/ERCs · GitHub</a></p>\n<p>Happy to hear comments &amp; feedback.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-7694-solana-storage-router/19706\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-7694-solana-storage-router/19706","pubDate":"Thu, 18 Apr 2024 15:35:10 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19706"},"source":{"@url":"https://ethereum-magicians.org/t/erc-7694-solana-storage-router/19706.rss","#text":"ERC-7694: Solana Storage Router"},"filter":false},{"title":"EIP-7691: Blob throughput increase","dc:creator":"parithosh","category":"EIPs","description":"<p>Discussion for <a href=\"https://github.com/ethereum/EIPs/pull/8452\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Add EIP: Blob throughput increase by parithosh · Pull Request #8452 · ethereum/EIPs · GitHub</a></p>\n            <p><small>2 posts - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7691-blob-throughput-increase/19694\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7691-blob-throughput-increase/19694","pubDate":"Wed, 17 Apr 2024 21:27:30 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19694"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7691-blob-throughput-increase/19694.rss","#text":"EIP-7691: Blob throughput increase"},"filter":false},{"title":"EIP-7692: EVM Object Format (EOF) Meta","dc:creator":"pdobacz","category":"EIPs","description":"<p>Discussion thread for <a href=\"https://github.com/ethereum/EIPs/pull/8448\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Add EIP: EVM Object Format (EOF) Meta by pdobacz · Pull Request #8448 · ethereum/EIPs · GitHub</a>, which is only a list of EOF EIPs</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7692-evm-object-format-eof-meta/19686\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7692-evm-object-format-eof-meta/19686","pubDate":"Wed, 17 Apr 2024 07:01:35 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19686"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7692-evm-object-format-eof-meta/19686.rss","#text":"EIP-7692: EVM Object Format (EOF) Meta"},"filter":false},{"title":"ERC1271 versioning to maintain signature validity","dc:creator":"kylekaplan","category":"Primordial Soup","description":"<h2><a name=\"intro-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#intro-1\"></a>Intro</h2>\n<p>Off-chain ERC1271 Signatures are not guaranteed to be valid in the future, because the <code>isValidSignature</code> function can be changed.</p>\n<h2><a name=\"problem-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#problem-2\"></a>Problem</h2>\n<p>This creates a problem for any application that would like to use signatures to prove validity of statements and also support smart accounts.</p>\n<p>Simple example of signers changing causing the validity of a signature to change:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethereum-magicians.org/uploads/default/original/2X/c/cdc07f04996e7a9905e86afae5b4b3d85da3a4fa.jpeg\" data-download-href=\"https://ethereum-magicians.org/uploads/default/cdc07f04996e7a9905e86afae5b4b3d85da3a4fa\" title=\"image\"><img src=\"https://ethereum-magicians.org/uploads/default/optimized/2X/c/cdc07f04996e7a9905e86afae5b4b3d85da3a4fa_2_690x297.jpeg\" alt=\"image\" data-base62-sha1=\"tmaiL5bShR8rEVgWpnEab2He7h0\" width=\"690\" height=\"297\" srcset=\"https://ethereum-magicians.org/uploads/default/optimized/2X/c/cdc07f04996e7a9905e86afae5b4b3d85da3a4fa_2_690x297.jpeg, https://ethereum-magicians.org/uploads/default/optimized/2X/c/cdc07f04996e7a9905e86afae5b4b3d85da3a4fa_2_1035x445.jpeg 1.5x, https://ethereum-magicians.org/uploads/default/optimized/2X/c/cdc07f04996e7a9905e86afae5b4b3d85da3a4fa_2_1380x594.jpeg 2x\" data-dominant-color=\"C6C5C5\"></a></div><br>\nFrom <a href=\"https://www.youtube.com/watch?v=p_UG1x53TWc\" rel=\"noopener nofollow ugc\">Peter Robinson’s Ethereum Engineering Group presentation</a><p></p>\n<h2><a name=\"proposal-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#proposal-3\"></a>Proposal</h2>\n<h4><a name=\"standard-way-of-updating-isvalidsignature-function-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#standard-way-of-updating-isvalidsignature-function-4\"></a>Standard way of updating <code>isValidSignature</code> function</h4>\n<p>I propose we create a standard way for updating the <code>isValidSignature</code> function so that we can keep track of previous versions.</p>\n<p>One possible solution is to store in state previous ERC1271 verifiers and timestamps, which can be updated by calling an <code>updateIsValidSignature</code> function. Then a <code>wasValidSignature</code> function can be called and reference previous verifiers, when determining if a signature was valid.</p>\n<p>The way state is stored can be external to this standard, but could look something like this:</p>\n<h3><a name=\"state-5\" class=\"anchor\" href=\"https://ethereum-magicians.org#state-5\"></a>State:</h3>\n<pre><code class=\"lang-auto\">// create a VerifierStruct which includes a timestamp and ERC1271 verifier\n// keep an array of VerifierStructs that updateIsValidSignature will push to\n\nstruct VerifierStruct {\n  timestamp: uint64;\n  verifier: ERC1271; // ERC1271 contract address\n}\n\nVerifierStruct[] public verifiers = [];\n</code></pre>\n<p>OR</p>\n<pre><code class=\"lang-auto\">// Keep a mapping of timestamps and ERC1271 verifiers that updateIsValidSignature will add to\n\nmapping(uint64 =&gt; ERC1271) public verifiers;\n</code></pre>\n<h3><a name=\"functions-6\" class=\"anchor\" href=\"https://ethereum-magicians.org#functions-6\"></a>Functions:</h3>\n<pre><code class=\"lang-auto\">updateIsValidSignature:\n@dev pushes to the array a new contract address with a current timestamp\n@param _contract An ERC1271 contract address\nfunction updateIsValidSignature(address _contract) external;\n</code></pre>\n<pre><code class=\"lang-auto\">wasValidSignature:\n@dev looks up which contract to use based on timestamp, and calls appropriate function\n@return The bytes4 magic value 0x1626ba7e when function passes\n@param _timestamp Timestamp to check for\n@param _hash Hash of the data to be signed\n@param _signature Signature byte array associated with _hash\n@param _data arbitrary extra data used for verification\nfunction wasValidSignature(\n    unit64 _timestamp,\n    bytes32 _hash,\n    bytes memory _signature,\n    bytes _data\n) public view returns(bytes4);\n</code></pre>\n<h3><a name=\"events-7\" class=\"anchor\" href=\"https://ethereum-magicians.org#events-7\"></a>Events:</h3>\n<pre><code class=\"lang-auto\">event ERC1271CheckerUpdated(address indexed newChecker)\n</code></pre>\n<hr>\n<p>I would love feedback and suggestions on this and other possible solutions for this problem. Thanks <a class=\"mention\" href=\"https://ethereum-magicians.org/u/sina\">@sina</a> for your help on this design so far.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc1271-versioning-to-maintain-signature-validity/19681\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc1271-versioning-to-maintain-signature-validity/19681","pubDate":"Tue, 16 Apr 2024 19:03:55 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19681"},"source":{"@url":"https://ethereum-magicians.org/t/erc1271-versioning-to-maintain-signature-validity/19681.rss","#text":"ERC1271 versioning to maintain signature validity"},"filter":false},{"title":"Union Lock based on TSTORE/TLOAD can avoid flash loan attacks","dc:creator":"1999321","category":"EIPs","description":"<p>The feature of Union Lock can query the number of calls of other contracts and the number of calls of other contract functions in the same Ethereum transaction, thereby realizing the cross-contract locking function.</p>\n<p>related link:<br>\neip link: <a href=\"https://github.com/ethereum/EIPs/pull/8442\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Add EIP: Union Lock by 1999321 · Pull Request #8442 · ethereum/EIPs · GitHub</a><br>\ntest cases: <a href=\"https://github.com/1999321/Union-Lock\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - 1999321/Union-Lock</a></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/union-lock-based-on-tstore-tload-can-avoid-flash-loan-attacks/19676\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/union-lock-based-on-tstore-tload-can-avoid-flash-loan-attacks/19676","pubDate":"Tue, 16 Apr 2024 07:57:07 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-19676"},"source":{"@url":"https://ethereum-magicians.org/t/union-lock-based-on-tstore-tload-can-avoid-flash-loan-attacks/19676.rss","#text":"Union Lock based on TSTORE/TLOAD can avoid flash loan attacks"},"filter":false}]}}}