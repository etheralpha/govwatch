{"rss":{"@version":"2.0","@xmlns:discourse":"http://www.discourse.org/","@xmlns:atom":"http://www.w3.org/2005/Atom","@xmlns:dc":"http://purl.org/dc/elements/1.1/","channel":{"title":"Fellowship of Ethereum Magicians - Latest topics","link":"https://ethereum-magicians.org/latest","description":"Latest topics","lastBuildDate":"Thu, 01 Aug 2024 20:44:33 +0000","atom:link":{"@href":"https://ethereum-magicians.org/latest.rss","@rel":"self","@type":"application/rss+xml"},"item":[{"title":"Improving Multisig Wallet Standards","dc:creator":"iamcapote","category":"Wallets","description":"<p>A multisig wallet is a smart contract-based wallet that requires multiple signatures to execute transactions. This mechanism enhances security by distributing control among multiple parties. However, there are areas for improvement to further secure and democratize the governance of multisig wallets, especially within decentralized autonomous organizations (DAOs).</p>\n<h3><a name=\"proposed-improvements-to-the-multisig-standard-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#proposed-improvements-to-the-multisig-standard-1\"></a>Proposed Improvements to the Multisig Standard</h3>\n<h3><a name=\"h-1-time-based-voting-shares-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#h-1-time-based-voting-shares-2\"></a>1. Time-Based Voting Shares</h3>\n<p><strong>Problem Statement:</strong> Many DeFi protocols are managed using multisig wallets, which control the distribution of funds and participate in critical protocol decisions. Currently, there is no effective mechanism to remove bad actors from the core governance of a DAO if they form a majority within the multisig group or a majority within the community</p>\n<p><strong>Solution:</strong> Implement an election-based multisig process to address the issue of entrenched bad actors. This proposal includes the following features:</p>\n<ul>\n<li><strong>Regular Elections</strong>: Members of the multisig wallet are elected by the community every four years. This process ensures that the control of the wallet remains in the hands of trusted and accountable members.</li>\n<li><strong>Presidential Role</strong>: The multisig can have a president or owner, who may be chosen on a different schedule from other members or this role may not be voted on at all. This role provides an additional layer of oversight and leadership.</li>\n<li><strong>Community Involvement</strong>: This standard allows the community to have an equal opportunity to influence the future of their platform through regular elections.</li>\n</ul>\n<p>Not every DAO will require this standard, but it offers a democratic method for those that prioritize community governance.</p>\n<p>This standard can also be incorporated with:</p>\n<h3><a name=\"h-2-time-locked-transactions-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#h-2-time-locked-transactions-3\"></a>2. Time-Locked Transactions</h3>\n<p><strong>Feature:</strong> Allow owners to set time delays on certain transactions.</p>\n<p><strong>Benefit:</strong> Provides a window to cancel potentially malicious transactions, enhancing the security and control over high-value or sensitive transactions.</p>\n<h3><a name=\"h-3-nft-tokenized-shares-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#h-3-nft-tokenized-shares-4\"></a>3. NFT Tokenized Shares</h3>\n<p><strong>Feature:</strong> Represent ownership shares in the multisig wallet as NFTs.</p>\n<p><strong>Benefit:</strong> Facilitates the distribution and transfer of ownership rights, making it easier to manage changes in ownership. Tokenized shares enable seamless transfer and management of ownership stakes, promoting flexibility and liquidity.</p>\n<p>Note: This is an open proposal inviting any developer to create what is described here <img src=\"https://ethereum-magicians.org/images/emoji/twitter/smiley.png?v=12\" title=\":smiley:\" class=\"emoji\" alt=\":smiley:\" loading=\"lazy\" width=\"20\" height=\"20\"> credit would be nice thank you</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/improving-multisig-wallet-standards/20687\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/improving-multisig-wallet-standards/20687","pubDate":"Thu, 01 Aug 2024 20:44:33 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20687"},"source":{"@url":"https://ethereum-magicians.org/t/improving-multisig-wallet-standards/20687.rss","#text":"Improving Multisig Wallet Standards"},"filter":false},{"title":"Krypton - P2P solution for accessing mobile wallets from desktop applications","dc:creator":"per1odical","category":"Tooling","description":"<p>Krypton is an open-source solution for allowing DApps to have a “wallet connection” but instead of relying on a 3rd party for the whole communication it uses libp2p and WebRTC to have the Wallet connect directly to the DApp.</p>\n<p>There is a basic “protocol” for getting identities, exchanging metadata about both peers and requesting a signature which could really become a community EIP for methods that a wallet should support for an open standard.</p>\n<p>Please feel free to give any feedback you have and contributions are more than welcome <img src=\"https://ethereum-magicians.org/images/emoji/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://github.com/per1odical/krypton\">\n  <header class=\"source\">\n      <img src=\"https://github.githubassets.com/favicons/favicon.svg\" class=\"site-icon\" width=\"32\" height=\"32\">\n\n      <a href=\"https://github.com/per1odical/krypton\" target=\"_blank\" rel=\"noopener nofollow ugc\">GitHub</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:690/344;\"><img src=\"https://ethereum-magicians.org/uploads/default/optimized/2X/b/b86c83fe4f896e9fb616cd4ed5f1eb129ada0ad1_2_690x345.png\" class=\"thumbnail\" data-dominant-color=\"F1F4F6\" width=\"690\" height=\"345\"></div>\n\n<h3><a href=\"https://github.com/per1odical/krypton\" target=\"_blank\" rel=\"noopener nofollow ugc\">GitHub - per1odical/krypton: P2P solution for accessing mobile wallets from...</a></h3>\n\n  <p>P2P solution for accessing mobile wallets from desktop applications. - per1odical/krypton</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/krypton-p2p-solution-for-accessing-mobile-wallets-from-desktop-applications/20675\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/krypton-p2p-solution-for-accessing-mobile-wallets-from-desktop-applications/20675","pubDate":"Wed, 31 Jul 2024 13:44:10 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20675"},"source":{"@url":"https://ethereum-magicians.org/t/krypton-p2p-solution-for-accessing-mobile-wallets-from-desktop-applications/20675.rss","#text":"Krypton - P2P solution for accessing mobile wallets from desktop applications"},"filter":false},{"title":"ePBS breakout #6, August 2 2024","dc:creator":"abcoathup","category":"Working Groups","description":"<h3><a name=\"agenda-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#agenda-1\"></a>Agenda</h3>\n<p><a href=\"https://github.com/ethereum/pm/issues/1120\" class=\"inline-onebox\">EIP-7732 breakout room #6 · Issue #1120 · ethereum/pm · GitHub</a><br>\nModerator: <a class=\"mention\" href=\"https://ethereum-magicians.org/u/potuz\">@potuz</a></p>\n<h3><a name=\"notes-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#notes-2\"></a>Notes</h3>\n<h3><a name=\"recording-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#recording-3\"></a>Recording</h3>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/epbs-breakout-6-august-2-2024/20665\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/epbs-breakout-6-august-2-2024/20665","pubDate":"Tue, 30 Jul 2024 08:52:26 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20665"},"source":{"@url":"https://ethereum-magicians.org/t/epbs-breakout-6-august-2-2024/20665.rss","#text":"ePBS breakout #6, August 2 2024"},"filter":false},{"title":"Verkle implementers call #22, July 29 2024","dc:creator":"abcoathup","category":"Working Groups","description":"<h3><a name=\"agenda-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#agenda-1\"></a>Agenda</h3>\n<p><a href=\"https://github.com/ethereum/pm/issues/1119\" class=\"inline-onebox\">Verkle Implementers Call #22 · Issue #1119 · ethereum/pm · GitHub</a><br>\nModerator: <a class=\"mention\" href=\"https://ethereum-magicians.org/u/rudolf\">@rudolf</a></p>\n<h3><a name=\"notes-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#notes-2\"></a>Notes</h3>\n<p><a href=\"https://notes.ethereum.org/@rudolf/vic-notes#Call-22-July-29-2024\">Notes</a> by <a class=\"mention\" href=\"https://ethereum-magicians.org/u/rudolf\">@rudolf</a></p>\n<h3><a name=\"recording-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#recording-3\"></a>Recording</h3>\n<p><a href=\"https://www.youtube.com/watch?v=W1SLIEQ3a5o\">Verkle Implementers Call #22</a></p>\n\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/verkle-implementers-call-22-july-29-2024/20664\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/verkle-implementers-call-22-july-29-2024/20664","pubDate":"Tue, 30 Jul 2024 08:30:02 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20664"},"source":{"@url":"https://ethereum-magicians.org/t/verkle-implementers-call-22-july-29-2024/20664.rss","#text":"Verkle implementers call #22, July 29 2024"},"filter":false},{"title":"Future of EOA/AA breakout #6, July 31 2024","dc:creator":"abcoathup","category":"Working Groups","description":"<h3><a name=\"agenda-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#agenda-1\"></a>Agenda</h3>\n<p><a href=\"https://github.com/ethereum/pm/issues/1118\" class=\"inline-onebox\">Future of EOA/AA Breakout Room #6 · Issue #1118 · ethereum/pm · GitHub</a></p>\n<h3><a name=\"notes-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#notes-2\"></a>Notes</h3>\n<p><a class=\"mention\" href=\"https://ethereum-magicians.org/u/poojaranjan\">@poojaranjan</a>: <a href=\"https://hackmd.io/@poojaranjan/EOA-AA-Breakout#-Future-of-EOAAA-Breakout-Room-6\" class=\"inline-onebox\">EOA/AA Breakout Room - HackMD</a></p>\n<h3><a name=\"recording-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#recording-3\"></a>Recording</h3>\n<p><a href=\"https://www.youtube.com/watch?v=Oct83bBp3Z8\">Future of EOA/AA Breakout Room #6</a></p>\n\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/future-of-eoa-aa-breakout-6-july-31-2024/20654\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/future-of-eoa-aa-breakout-6-july-31-2024/20654","pubDate":"Mon, 29 Jul 2024 08:02:48 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20654"},"source":{"@url":"https://ethereum-magicians.org/t/future-of-eoa-aa-breakout-6-july-31-2024/20654.rss","#text":"Future of EOA/AA breakout #6, July 31 2024"},"filter":false},{"title":"All Core Devs - Execution (ACDE) #193, August 1 2024","dc:creator":"abcoathup","category":"Working Groups","description":"<h4><a name=\"agenda-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#agenda-1\"></a>Agenda</h4>\n<p><a href=\"https://github.com/ethereum/pm/issues/1104\" class=\"inline-onebox\">Execution Layer Meeting 193 · Issue #1104 · ethereum/pm · GitHub</a> moderated by <a class=\"mention\" href=\"https://ethereum-magicians.org/u/timbeiko\">@timbeiko</a></p>\n<h4><a name=\"summary-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#summary-2\"></a>Summary</h4>\n<aside class=\"quote quote-modified\" data-post=\"2\" data-topic=\"20648\">\n  <div class=\"title\">\n    <div class=\"quote-controls\"></div>\n    <img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://ethereum-magicians.org/user_avatar/ethereum-magicians.org/timbeiko/48/1452_2.png\" class=\"avatar\">\n    <a href=\"https://ethereum-magicians.org/t/all-core-devs-execution-acde-193-august-1-2024/20648/2\">All Core Devs - Execution (ACDE) #193, August 1 2024</a> <a class=\"badge-category__wrapper \" href=\"https://ethereum-magicians.org/c/working-groups/11\"><span data-category-id=\"11\" style=\"--category-badge-color: #FFFF52; --category-badge-text-color: #FFFFFF;\" data-drop-close=\"true\" class=\"badge-category \"><span class=\"badge-category__name\">Working Groups</span></span></a>\n  </div>\n  <blockquote>\n    <a name=\"acde-call-summary-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#acde-call-summary-1\"></a>ACDE Call Summary\n<a name=\"highlights-action-items-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#highlights-action-items-2\"></a>Highlights &amp; Action Items\n\n<a href=\"https://notes.ethereum.org/@ethpandaops/pectra-devnet-2\">devnet-2</a> spec stays as-s\ndevnet-3 will contain the <a href=\"https://github.com/ethereum/EIPs/pull/8775\">latest EIP-7702 changes</a>, and possibly other minor tweaks, but no other major feature addition such as EOF\n\nEOF devnet readiness to be discussed on ACDE#194\n\n\nGeneral support for <a href=\"https://github.com/ethereum/execution-apis/pull/559\">engine_getBlobsV1</a>, with the caveat that the honest validator spec should be updated to define the recommended usage. <a class=\"mention\" href=\"https://ethereum-magicians.org/u/tbenr\">@tbenr</a> / Teku will open a PR about this in the next few days and a final decision is expected on next week’s …\n  </blockquote>\n</aside>\n\n<h4><a name=\"recording-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#recording-3\"></a>Recording</h4>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://www.youtube.com/live/vbh9C2_-TIc?t=142s\">\n  <header class=\"source\">\n      <img src=\"https://ethereum-magicians.org/uploads/default/original/2X/7/7db9d6c93ca3d34126a629e98da116b50ada2b12.png\" class=\"site-icon\" data-dominant-color=\"FF1010\" width=\"16\" height=\"16\">\n\n      <a href=\"https://www.youtube.com/live/vbh9C2_-TIc?t=142s\" target=\"_blank\" rel=\"noopener\">YouTube</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:480/360;\"><img src=\"https://ethereum-magicians.org/uploads/default/original/2X/f/f74a00e8f9c61b7ac507624f601d18a3fd72bf55.jpeg\" class=\"thumbnail\" data-dominant-color=\"334040\" width=\"480\" height=\"360\"></div>\n\n<h3><a href=\"https://www.youtube.com/live/vbh9C2_-TIc?t=142s\" target=\"_blank\" rel=\"noopener\">Execution Layer Meeting 193 [2024-08-01]</a></h3>\n\n  <p>https://github.com/ethereum/pm/issues/1104</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<h3><a name=\"additional-info-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#additional-info-4\"></a>Additional info</h3>\n<ul>\n<li><strong>Notes:</strong> <a href=\"https://www.galaxy.com/insights/research/ethereum-all-core-developers-execution-call-193\"></a> by <a class=\"mention\" href=\"https://ethereum-magicians.org/u/christine_dkim\">@Christine_dkim</a></li>\n</ul>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/all-core-devs-execution-acde-193-august-1-2024/20648\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/all-core-devs-execution-acde-193-august-1-2024/20648","pubDate":"Sat, 27 Jul 2024 01:13:08 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20648"},"source":{"@url":"https://ethereum-magicians.org/t/all-core-devs-execution-acde-193-august-1-2024/20648.rss","#text":"All Core Devs - Execution (ACDE) #193, August 1 2024"},"filter":false},{"title":"New EIP: Auditable JSON-RPC Specification","dc:creator":"blockjoe","category":"EIPs","description":"<p>Discussion topic for <a href=\"https://github.com/ethereum/EIPs/pull/8760\" rel=\"noopener nofollow ugc\">EIP-XXXX: Auditable JSON-RPC </a></p>\n<h4><a name=\"update-log-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#update-log-1\"></a>Update Log</h4>\n<ul>\n<li>2024-07-25: initial draft with supporting resources <a href=\"https://github.com/ethereum/EIPs/pull/8760/commits/f036de92a9aff6ba0a78a60c5577dee8ec1df36c\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Add EIP: Auditable JSON-RPC API Specification by blockjoe · Pull Request #8760 · ethereum/EIPs · GitHub</a></li>\n</ul>\n<h4><a name=\"external-reviews-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#external-reviews-2\"></a>External Reviews</h4>\n<p>I will note the bias that anything before 2024-07-25 is seeded from resources from the Author(s). While these should not be taken explicitly as reviews for the proposed specification, they are here to highlight the importance of keeping these API standards changes visible in the EIP process.</p>\n<blockquote>\n<p>This section should list notable reviews the EIP has received from the Ethereum community. These can include specific comments on this forum, timestamped audio/video exchanges, formal audits, or other external resources. This section should be the go-to for readers to understand the community’s current assessment of the EIP. Aim for neutrality, quality &amp; thoroughness over “cherry-picking” the most favorable reviews.</p>\n</blockquote>\n<ul>\n<li>\n<p>2022-12-05: “Unmitigatable exposure to theft of funds, XSS injection, and malware distribution due to the lack of idempotency in core Ethereum Execution JSON-RPC API logic in a compromised provider scenario.”, by Joseph Habel <a href=\"https://github.com/ethereum/EIPs/blob/f036de92a9aff6ba0a78a60c5577dee8ec1df36c/assets/eip-draft_auditable_rpc/rpc-injection-disclosure.pdf\" rel=\"noopener nofollow ugc\">Original Disclosure</a></p>\n</li>\n<li>\n<p>2024-07-08: “Accelerating the Distribution of a Verifiable Web”, by Jessica Daugherty (Presented by Joseph Habel) <a href=\"https://ethcc.io/archive/Accelerating-the-Distribution-of-a-Verifiable-Web\" rel=\"noopener nofollow ugc\">EthCC[7] Presentation</a></p>\n</li>\n</ul>\n<h4><a name=\"outstanding-issues-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#outstanding-issues-3\"></a>Outstanding Issues</h4>\n<ul>\n<li>2024-07-24: These changes belong in the <a href=\"https://github.com/ethereum/EIPs/pull/8760#issuecomment-2250973561\" rel=\"noopener nofollow ugc\">Execution APIs Context</a></li>\n</ul>\n<h4><a name=\"discussing-the-broader-communications-impact-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#discussing-the-broader-communications-impact-4\"></a>Discussing the Broader Communications Impact</h4>\n<p>While I understand for the sake of the Ethereum process that the adoption of these changes happen via the Execution APIs repository, and am happy to submit the test cases and updated OpenRPC specification there, I would like to open a broader discussion of what the process need be for signaling the need for these changes not just to the Execution Client developers, but rather all projects claiming to “Support Ethereum Compatibility”.</p>\n<p>This specification, while I realize on a technical basis is irrelevant to the work of the core dev team, has engrained a set of developer anti-patterns that need to be addressed at a “cultural level” core to the experience of ecosystem and application developers.</p>\n<p>I’m happy to shepard the technical changes through the proper process, but would like to discuss what the avenue here would be for signaling to projects that have inherited these anti-patterns in the goal of “Ethereum Support”. The EIP nomenclature acts as a very effective communication tool when discussing the importance of changes to other development teams outside of the EL client developers, in a way that an unnamable PR to a supporting repository cannot.</p>\n<p>When seeking feedback about these changes in private conversations, the means of effectively communicating the importance comes from demonstrating proof of concept injection attacks. I have chosen not to publicly broadcast these to this point, but I would love feedback about if there’s a stronger middle ground here for herding the branching downstream changes that would need to happen in response.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/new-eip-auditable-json-rpc-specification/20642\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/new-eip-auditable-json-rpc-specification/20642","pubDate":"Thu, 25 Jul 2024 17:13:49 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20642"},"source":{"@url":"https://ethereum-magicians.org/t/new-eip-auditable-json-rpc-specification/20642.rss","#text":"New EIP: Auditable JSON-RPC Specification"},"filter":false},{"title":"Idea and Prototype for an Intent-based Oracle Extending ERC-4337","dc:creator":"tomw1808","category":"Primordial Soup","description":"<p>First time poster on Ethereum magicians, I hope I’m not overstepping here, if so, please let me know…</p>\n<p>I’m looking for some early technical feedback on a new oracle solution my team and I are working on, or interested people who potentially want to give it a try.</p>\n<p>We were working on a novel oracle solution that leverages ERC-4337 account abstraction to provide real-time on-chain price updates. Unlike traditional pull or push-based oracles, our approach uses an intent system leveraging and extending the already existing infrastructure for erc4337 account abstraction.</p>\n<p>Something like this:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethereum-magicians.org/uploads/default/original/2X/6/655c1798e1a56badfe68a10060e4e3659781d9f1.jpeg\" data-download-href=\"https://ethereum-magicians.org/uploads/default/655c1798e1a56badfe68a10060e4e3659781d9f1\" title=\"SCR-20240724-kgpt\"><img src=\"https://ethereum-magicians.org/uploads/default/optimized/2X/6/655c1798e1a56badfe68a10060e4e3659781d9f1_2_690x316.jpeg\" alt=\"SCR-20240724-kgpt\" data-base62-sha1=\"esFwVwtGacmAqwfAH4dJcLOPNND\" width=\"690\" height=\"316\" srcset=\"https://ethereum-magicians.org/uploads/default/optimized/2X/6/655c1798e1a56badfe68a10060e4e3659781d9f1_2_690x316.jpeg, https://ethereum-magicians.org/uploads/default/optimized/2X/6/655c1798e1a56badfe68a10060e4e3659781d9f1_2_1035x474.jpeg 1.5x, https://ethereum-magicians.org/uploads/default/optimized/2X/6/655c1798e1a56badfe68a10060e4e3659781d9f1_2_1380x632.jpeg 2x\" data-dominant-color=\"A4BEC6\"></a></div><p></p>\n<p>The idea we had was to run a slightly modified erc4337 bundler that listens to a new kind of UserOp, or wraps the actual UserOp in a DataRequestOp and injects updated (price/…/?) information before submitting the actual transaction. From a data-consuming contract perspective, it would be usable very much like a push oracle, just like manually triggering an update before read and would basically ensure accurate and up-to-date data being on chain before a contract reads it. On the other end, the bundler (or whoever is providing data) gets compensated for its services through the same mechanism that erc4337 already uses. So, it would create an additional economic incentive to run a bundler.</p>\n<p>We got a prototype for a single bundler and the whole process running on sepolia. It’s of course not decentralized and the end vision is a decentralized network of bundlers or something like aggregated signatures of several bundlers and an open protocol to let anyone run a bundler+dataprovider and potentially a reputation dashboard of some sort.</p>\n<p>Anyways, that’s the idea in a nutshell. Thoughts, concerns? Any projects that work on a tangential system and want to collaborate? Anyone who needs access to real time US Equities, Commodities or Forex and want to give it a try? Anyone who is currently running Bundlers and would be interested in implementing it - or spearhead an ERC together?</p>\n<p>Thanks,<br>\nThomas</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/idea-and-prototype-for-an-intent-based-oracle-extending-erc-4337/20631\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/idea-and-prototype-for-an-intent-based-oracle-extending-erc-4337/20631","pubDate":"Wed, 24 Jul 2024 09:29:45 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20631"},"source":{"@url":"https://ethereum-magicians.org/t/idea-and-prototype-for-an-intent-based-oracle-extending-erc-4337/20631.rss","#text":"Idea and Prototype for an Intent-based Oracle Extending ERC-4337"},"filter":false},{"title":"All Core Devs - Consensus (ACDC) #138, July 25 2024","dc:creator":"abcoathup","category":"Working Groups","description":"<h3><a name=\"agenda-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#agenda-1\"></a>Agenda</h3>\n<p><a href=\"https://github.com/ethereum/pm/issues/1100\" class=\"inline-onebox\">Consensus-layer Call 138 · Issue #1100 · ethereum/pm · GitHub</a><br>\nModerator: <a class=\"mention\" href=\"https://ethereum-magicians.org/u/ralexstokes\">@ralexstokes</a></p>\n<h3><a name=\"summary-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#summary-2\"></a>Summary</h3>\n<p>Recap by <a class=\"mention\" href=\"https://ethereum-magicians.org/u/ralexstokes\">@ralexstokes</a> (<em>from Eth R&amp;D <a href=\"https://discord.com/channels/595666850260713488/745077610685661265/1266221913836097648\" class=\"inline-onebox\">Discord</a></em>)</p>\n<ul>\n<li>Started the call with an update on <code>pectra-devnet-1</code> , which launched this week\n<ul>\n<li>The network is live but participation is low and the chain has forked into 3-4 pieces</li>\n<li>The initial chain split appears to have been caused by an EIP-7702 transaction, and there’s ongoing work to debug</li>\n</ul>\n</li>\n<li>Next, we turned to a proposal to restructure the requests types added in Pectra\n<ul>\n<li>These requests types are data coming from the EL which are required for the CL to process with each block</li>\n<li>Until now, CL clients prune EL data as otherwise the data would be duplicated within one Ethereum node given the dual CL-EL architecture</li>\n<li>The <a href=\"https://github.com/ethereum/consensus-specs/issues/3856\">proposal here</a> suggests moving the requests data outside the block structure CL clients already prune so we can easily have the requests data handy with minimal code change</li>\n<li>We discussed the design space addressing this problem on the call as there are a few different ways to satisfy the problem, but there was broad support for <a class=\"mention\" href=\"https://ethereum-magicians.org/u/potuz\">@potuz</a>’s solution linked above.</li>\n</ul>\n</li>\n<li>Then we had a proposal from <a class=\"mention\" href=\"https://ethereum-magicians.org/u/matt\">@matt</a> to change how these requests types are arranged in the Engine API to facilitate ease of implementation of the EL interfacing with the CL\n<ul>\n<li>There was some back and forth on the details, as a large part of answering this question comes down to finding the best way to share the technical complexity of this feature set between EL and CL implementations.</li>\n<li>This proposal appears to mirror the implementation of these features on the EL which can simply forward them into the Engine API; in turn, the CL then has some additional work to do to map the unified data into the requisite parts.</li>\n<li>Given the fact that CL implementations generally have stronger typing of per-fork types, we landed on this PR making sense and intend to move forward with it.</li>\n<li>CL teams please take a look <a href=\"https://github.com/ethereum/execution-apis/pull/565\">here</a> to chime in further.</li>\n</ul>\n</li>\n<li>After discussing these request types, we turned to an update on the SSZ stable container EIPs.\n<ul>\n<li><a class=\"mention\" href=\"https://ethereum-magicians.org/u/etan-status\">@etan-status</a> gave a great summary of the <a href=\"https://github.com/ethereum/pm/issues/1100#issuecomment-2242842599\">progress here</a> and proposed we include EIP-7688 and EIP-7495 into Pectra devnet-2.</li>\n<li>I clarified that the purpose of the pectra devnets is to reflect the formally included set of EIPs in Pectra, and so rather than simply including these EIPs in devnet-2, we must first agree to inclusion in Pectra.</li>\n<li>We discussed formal inclusion on the call with a variety of viewpoints: while the benefits of these changes are sound in isolation, there was strong pushback that Pectra is already quite large and the testing and security processes around the hard fork development are already quite strained given the size of the fork.</li>\n<li>There was no strong push for inclusion of these SSZ EIPs on the call and especially in light of the instability of the existing Pectra devnet agreed to focus on hardening the existing fork as specified before moving to consider additional features.</li>\n</ul>\n</li>\n<li>PeerDAS was up after the core Pectra discussions\n<ul>\n<li>There hasn’t been much movement on the peerdas-devnet front, as the last network was not stable and clients have been in the process of hardening implementations before attempting another devnet.</li>\n<li>Acknowledging this, I gave an overview of the option to simplify PeerDAS further by dropping the “sampling” phase of the data availability mechanism of PeerDAS so that we can still have something shipped in Pectra without significantly delaying timelines.\n<ul>\n<li>This solution would still have nodes down segments of the blob data and for a small change in some of the PeerDAS parameters still maintains the same security profile as PeerDAS <em>with</em> sampling.</li>\n</ul>\n</li>\n<li>There was interest on further exploring the idea and I’ll write something soon to share more widely beyond the call. Attendees are open to the idea, especially given the broad support for data scaling in Pectra.</li>\n</ul>\n</li>\n<li>This discussion segued into a general discussion of how to arrange PeerDAS alongside the rest of the Pectra features\n<ul>\n<li>The current approach has PeerDAS activated at a separate epoch than the Pectra fork epoch; these two parameters could ultimately be the same but allows for a relatively easy way to “disable” PeerDAS from Pectra in the event development timelines didn’t align with the rest of the Pectra EIP set.</li>\n<li>There were a variety of opinions on the best way to do this so I recommend checking the call for the full color.</li>\n<li>Ultimately, we decided to focus on getting a more stable network around the other Pectra EIPs (cf. devnet-1 stability) and revisit the best way to merge in the PeerDAS work once that is done.</li>\n</ul>\n</li>\n<li>We concluded the call with <a href=\"https://github.com/ethereum/consensus-specs/pull/3845\">a proposal</a> from <a class=\"mention\" href=\"https://ethereum-magicians.org/u/dapplion\">@dapplion</a> to enhance the expressivity of the <code>BeaconBlocksByRange</code> networking method — take a look at that PR and please provide any feedback.</li>\n</ul>\n<h3><a name=\"recording-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#recording-3\"></a>Recording</h3>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://www.youtube.com/live/lmzAUqsIbIE?t=148s\">\n  <header class=\"source\">\n      <img src=\"https://ethereum-magicians.org/uploads/default/original/2X/b/b496f98b7c1d0aa02089225d511fc47656f003f0.png\" class=\"site-icon\" data-dominant-color=\"FF1010\" width=\"16\" height=\"16\">\n\n      <a href=\"https://www.youtube.com/live/lmzAUqsIbIE?t=148s\" target=\"_blank\" rel=\"noopener\">YouTube</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:480/360;\"><img src=\"https://ethereum-magicians.org/uploads/default/original/2X/d/d96fc998480769431bc8968edfc27724d820cebb.jpeg\" class=\"thumbnail\" data-dominant-color=\"A2A5BA\" width=\"480\" height=\"360\"></div>\n\n<h3><a href=\"https://www.youtube.com/live/lmzAUqsIbIE?t=148s\" target=\"_blank\" rel=\"noopener\">Consensus Layer Meeting 138 [2024-7-25]</a></h3>\n\n  <p>https://github.com/ethereum/pm/issues/1100</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<h3><a name=\"additional-info-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#additional-info-4\"></a>Additional info</h3>\n<p>Notes by <a class=\"mention\" href=\"https://ethereum-magicians.org/u/christine_dkim\">@Christine_dkim</a>: <a href=\"https://www.galaxy.com/insights/research/ethereum-all-core-developers-consensus-call-138\" class=\"inline-onebox\">Ethereum All Core Developers Consensus Call #138 Writeup | Galaxy</a></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/all-core-devs-consensus-acdc-138-july-25-2024/20630\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/all-core-devs-consensus-acdc-138-july-25-2024/20630","pubDate":"Wed, 24 Jul 2024 07:12:39 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20630"},"source":{"@url":"https://ethereum-magicians.org/t/all-core-devs-consensus-acdc-138-july-25-2024/20630.rss","#text":"All Core Devs - Consensus (ACDC) #138, July 25 2024"},"filter":false},{"title":"PeerDAS breakout #4, July 23 2024","dc:creator":"abcoathup","category":"Working Groups","description":"<h3><a name=\"agenda-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#agenda-1\"></a>Agenda</h3>\n<p><a href=\"https://github.com/ethereum/pm/issues/1103\" class=\"inline-onebox\">PeerDAS Breakout Room #4 · Issue #1103 · ethereum/pm · GitHub</a></p>\n<h3><a name=\"key-items-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#key-items-2\"></a>Key items</h3>\n<p>by Jimmy Chen <em>(from Eth R&amp;D <a href=\"https://discord.com/channels/595666850260713488/988798065894907934/1265264915770249279\" class=\"inline-onebox\">Discord</a>)</em>:</p>\n<ul>\n<li>Teams are mostly focused on client stability, optimisation and refactoring</li>\n<li><code>devnet-1</code> was shutdown last week and <code>devnet-2</code> hasn’t been scheduled yet as teams are focused on improving stability and refactoring.</li>\n<li>Teams noted the following changes for the next devnet launch\n<ul>\n<li>MetaDataV3 rpc query with custody subnet count</li>\n<li>Clients to make sure initial syncing work and nodes can serve data column rpc methods reliably</li>\n<li>Delay blob spamming to a few epochs after genesis</li>\n</ul>\n</li>\n</ul>\n<h3><a name=\"notes-chat-log-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#notes-chat-log-3\"></a>Notes &amp; chat log</h3>\n<aside class=\"onebox googledocs\" data-onebox-src=\"https://docs.google.com/document/d/1Ng2IrCe28kTt1BnIsjtMlKHq2MHgaja24LhFXSvqfJQ/edit#heading=h.w4n4eovxhcks\">\n  <header class=\"source\">\n\n      <a href=\"https://docs.google.com/document/d/1Ng2IrCe28kTt1BnIsjtMlKHq2MHgaja24LhFXSvqfJQ/edit#heading=h.w4n4eovxhcks\" target=\"_blank\" rel=\"noopener\">docs.google.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <a href=\"https://docs.google.com/document/d/1Ng2IrCe28kTt1BnIsjtMlKHq2MHgaja24LhFXSvqfJQ/edit#heading=h.w4n4eovxhcks\" target=\"_blank\" rel=\"noopener\"><span class=\"googledocs-onebox-logo g-docs-logo\"></span></a>\n\n<h3><a href=\"https://docs.google.com/document/d/1Ng2IrCe28kTt1BnIsjtMlKHq2MHgaja24LhFXSvqfJQ/edit#heading=h.w4n4eovxhcks\" target=\"_blank\" rel=\"noopener\">PeerDAS Breakout Room notes</a></h3>\n\n<p>PeerDAS Breakout Room #4 Date: 2024.07.23 Agenda: https://github.com/ethereum/pm/issues/1103 YouTube Video:   Client updates Prysm Optimized reconstruction to run in parallel across multiple blobs Optimisation to make blob available once 64 columns...</p>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<h3><a name=\"recording-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#recording-4\"></a>Recording</h3>\n<p><a href=\"https://www.youtube.com/watch?v=Rqd_DuPQMvg&amp;t=232s\">PeerDAS Breakout Room #4</a></p>\n\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/peerdas-breakout-4-july-23-2024/20629\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/peerdas-breakout-4-july-23-2024/20629","pubDate":"Wed, 24 Jul 2024 06:59:57 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20629"},"source":{"@url":"https://ethereum-magicians.org/t/peerdas-breakout-4-july-23-2024/20629.rss","#text":"PeerDAS breakout #4, July 23 2024"},"filter":false},{"title":"EIP-7748: State conversion to Verkle Tree","dc:creator":"ihagopian","category":"Core EIPs","description":"<p>This EIP formalizes the currently proposed algorithm to migrate the state from the current MPT to VKT.</p><aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/ethereum/EIPs/pull/8752\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ethereum/EIPs/pull/8752\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/ethereum/EIPs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/ethereum/EIPs/pull/8752\" target=\"_blank\" rel=\"noopener nofollow ugc\">Add EIP: State conversion to Verkle Tree</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>ethereum:master</code> ← <code>jsign:jsign-conversion-eip</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-07-23\" data-time=\"16:28:36\" data-timezone=\"UTC\">04:28PM - 23 Jul 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/jsign\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"jsign\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/e/e366af42e5313db2daa64cd169904932fc98d0f3.png\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"350000\">\n            jsign\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"1 commits changed 1 files with 292 additions and 0 deletions\">\n          <a href=\"https://github.com/ethereum/EIPs/pull/8752/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+292</span>\n            <span class=\"removed\">-0</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">This PR creates a new EIP for the state conversion to Verkle Tree.</p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>Creating this thread to open for discussion!</p>\n<p>Note: I’ll edit the post title when an EIP number gets assigned.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7748-state-conversion-to-verkle-tree/20625\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7748-state-conversion-to-verkle-tree/20625","pubDate":"Tue, 23 Jul 2024 18:00:43 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20625"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7748-state-conversion-to-verkle-tree/20625.rss","#text":"EIP-7748: State conversion to Verkle Tree"},"filter":false},{"title":"EIP-7747: EVM Modular Arithmetic Extensions","dc:creator":"jwasinger","category":"Core EIPs","description":"<p>This is the discussion thread for EIP-7747.  EIP-7747 is a proposal for cost-efficient, expanded-width modular addition/subtraction/multiplication opcodes for the EVM.  The EIP is currently a <a href=\"https://github.com/ethereum/EIPs/pull/8743\" rel=\"noopener nofollow ugc\">PR</a> on the EIPs repo.</p>\n            <p><small>2 posts - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7747-evm-modular-arithmetic-extensions/20608\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7747-evm-modular-arithmetic-extensions/20608","pubDate":"Sun, 21 Jul 2024 07:39:44 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20608"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7747-evm-modular-arithmetic-extensions/20608.rss","#text":"EIP-7747: EVM Modular Arithmetic Extensions"},"filter":false},{"title":"Proposal: Gradually transforming Ethereum Magicians with AI-driven governance and communication","dc:creator":"Snek","category":"Process Improvement","description":"<p>Hello Ethereum Magicians,</p>\n<p>In light of recent discussions around EOF and about protecting the EIP process from special interests, as highlighted in the <a href=\"https://ethereum-magicians.org/t/protecting-the-eip-process-from-special-interests-examples-case-study/6542\">Ethereum Magicians thread</a>, I propose a transformative yet gradual approach to how we conduct discussions, plan, and make decisions within the Ethereum community. This proposal aims to supplement the current Ethereum Magicians platform with an AI-driven mail server that leverages AI to enhance efficiency, inclusivity, and transparency, while keeping every contribution recorded on the Ethereum blockchain.</p>\n<h3><a name=\"vision-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#vision-1\"></a>Vision:</h3>\n<p>Imagine a platform where a Linux server checks <a href=\"http://ethereum-magicians.org\">ethereum-magicians.org</a> for new submissions and a list of mailboxes every 5 minutes, parsing all new content through a preset but configurable LLM (Language Learning Model). This AI would filter and summarize all submitted data to decide the agenda points for the next All Core Dev (ACD) meeting. Here’s how it would work:</p>\n<h3><a name=\"key-components-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#key-components-2\"></a>Key Components:</h3>\n<ol>\n<li>\n<p><strong>Data Submission:</strong></p>\n<ul>\n<li>Participants submit their thoughts, ideas, and concerns here on the forum or via email.</li>\n<li>Each submission could eventually be authenticated via ENS/ETH to prevent spam and ensure only relevant inputs are considered, perhaps even require a minimum gas fee to consider your contribution and prevent spam though I think current AI can sufficiently filter out spam anyway.</li>\n</ul>\n</li>\n<li>\n<p><strong>AI Aggregation and Summarization:</strong></p>\n<ul>\n<li>The AI aggregates and summarizes all inputs, identifying key issues and creating a dynamic agenda based on prioritized topics.</li>\n<li>A local text/data blob file is maintained for every unique submitter and every unique discussion. AI can help people informally connect over similar topics of interest to discuss and guide them towards people also occupied with the same ideas or concerns. acdagenda@ethereum.ai (example) for all submissions around the next agenda eip3074@ethereum.ai (for all discussions around that eip) and of course you can generate new ones on the fly and have AI tell you about / announce to others who have similar enough needs for discussion. let email addresses be channels of communication that anyone can submit whatever to, and set an LLM to moderate away the spam and irrelevance (within that channel)</li>\n</ul>\n</li>\n<li>\n<p><strong>Continuous Updates:</strong></p>\n<ul>\n<li>The proposed agenda is automatically updated with every new email/datablob processed, valuing every voice equally.</li>\n<li>A default agenda item is included to discuss any frustrations or proposals for updating the aggregator AI.</li>\n</ul>\n</li>\n<li>\n<p><strong>Human Control and Selection:</strong></p>\n<ul>\n<li>While the AI assists in creating the agenda and providing solutions, humans retain control over selecting and voting on the final agenda items as AI just like humans, makes mistakes. We must still verify ourselves instead of blindly trusting.</li>\n<li>This ensures that all decisions are made by the community, maintaining the decentralized ethos of Ethereum.</li>\n</ul>\n</li>\n<li>\n<p><strong>Transparency and Traceability:</strong></p>\n<ul>\n<li>All raw text interactions and conversations during the ACD are recorded and stored on the Ethereum blockchain for full transparency.</li>\n<li>Users can query the AI to understand decision histories and how specific agenda points were decided.</li>\n<li>Privacy concerns are minimal as all discussions are technical in nature, focusing solely on improving Ethereum.</li>\n</ul>\n</li>\n<li>\n<p><strong>Technical Focus:</strong></p>\n<ul>\n<li>All conversations should be technical in nature and focused on improving Ethereum for everyone. This strict context window ensures relevant discussions and effective governance.</li>\n</ul>\n</li>\n<li>\n<p><strong>EIP Defense Mechanism:</strong></p>\n<ul>\n<li>Each EIP can defend itself by being automatically included in the ACD agenda once per meeting.</li>\n<li>The AI summarizes the arguments for and against each EIP based on reactions received in advance, ensuring a balanced and comprehensive discussion.</li>\n</ul>\n</li>\n</ol>\n<h3><a name=\"proof-of-concept-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#proof-of-concept-3\"></a>Proof of Concept:</h3>\n<p>To validate this approach, I will set up a web interface displaying the most recent ACD agenda proposal based on recent activity on the Ethereum Magicians forums. This interface will feature:</p>\n<ul>\n<li>An email address for anyone to freely contribute their thoughts and ideas.</li>\n<li>The AI will assess the relevance of each contribution to the ACD call and adjust the agenda accordingly within minutes.</li>\n<li>Users can ask the AI questions about the current knowledge database and ongoing discussions not yet visible on the agenda.</li>\n</ul>\n<p>This initial phase can run on a regular Linux server, storing submissions locally and connecting necessary APIs. Over time, as we build trust and familiarity, we can transition to a fully functional Layer 2 solution, providing the needed scalability and decentralized trust.</p>\n<h3><a name=\"embracing-change-for-true-decentralization-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#embracing-change-for-true-decentralization-4\"></a>Embracing Change for True Decentralization:</h3>\n<p>For the Ethereum community to truly embrace decentralization, we must be willing to automate our own roles, even those of community moderators. Current moderators should see this as an opportunity to enhance their contributions, not as a threat to their positions. By adopting superhuman moderators, we can ensure that every voice is heard, and every relevant concern is addressed, pushing the boundaries of what we can achieve as a decentralized community.</p>\n<h3><a name=\"call-to-action-5\" class=\"anchor\" href=\"https://ethereum-magicians.org#call-to-action-5\"></a>Call to Action:</h3>\n<p>I propose we develop this platform as a proof of concept, initially focusing on ACDE agendas and EIP discussions. By open-sourcing the aggregator AI, we can foster truly decentralized communities moderated by AI. The technology is already here; we just need to update our approach to leverage it fully.</p>\n<p>Let’s discuss this proposal, provide feedback, and explore how we can make this vision a reality. Together, we can set a new standard for collaborative decision-making and take the next step in decentralizing our processes.</p>\n<p>Looking forward to an enlightening discussion!</p>\n<p>Snek 𓆙𓂀</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/proposal-gradually-transforming-ethereum-magicians-with-ai-driven-governance-and-communication/20605\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/proposal-gradually-transforming-ethereum-magicians-with-ai-driven-governance-and-communication/20605","pubDate":"Sat, 20 Jul 2024 11:44:53 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20605"},"source":{"@url":"https://ethereum-magicians.org/t/proposal-gradually-transforming-ethereum-magicians-with-ai-driven-governance-and-communication/20605.rss","#text":"Proposal: Gradually transforming Ethereum Magicians with AI-driven governance and communication"},"filter":false},{"title":"Minimal escrow contract?","dc:creator":"MidnightLightning","category":"Primordial Soup","description":"<p>I’m in the process of searching for possible solutions to a need I think many DAOs/teams/groups have: the ability to provably have a reward/bounty on some action, and have others be able to contribute to it.</p>\n<p>Many groups have “task lists” that they can set up with items they want accomplished. Tools like <a href=\"https://dework.xyz/\" rel=\"noopener nofollow ugc\">Dework</a> or <a href=\"https://charmverse.io/\" rel=\"noopener nofollow ugc\">CharmVerse</a> already exist to have cryptocurrency bounties put on the tasks. However, in both those tools the bounty is not verified/guaranteed. Visitors need to trust the group organizers to properly pay out when the task is complete, and also have to do their independent verification of whether the organizers actually have those funds to pay out (if there’s five tasks posted and each has a reward of 5 ETH, is there really enough in the treasury to pay all them out? Sorting the list of <a href=\"https://app.dework.xyz/bounties\" rel=\"noopener nofollow ugc\">all Dework bounties</a> by largest reward, I’m really skeptical the top listings would actually pay out…). Because systems like that rely on trust of the organizers, it’s hard to have other community members contribute to the bounty.</p>\n<p>I think if there were a lightweight way for community members to pool financial incentives, it would take some of the weight off the community organizers to manage. <strong>The goal is to have a list of tasks that are given rewards by many people contributing a little (grassroots-style, Kickstarter-style), rather than a single sponsor giving a grant (organizers figuring out rewards from community funds).</strong> Being able to do that in a provable way (the funds are put in escrow on-chain in an easily-inspect-able way) would encourage people to apply to do the task, and I think getting community involvement in bounty-funding is helpful because the financial reward intrinsically scales with how popular an item is to be implemented.</p>\n<p>There’s still a level of trust placed in the organizing group to do the reviews of task submissions and fairly trigger the payouts, but I think that’s an acceptable level of trust needed, given the current systems require that too. A more advanced setup could include the ability for a global governance group like <a href=\"https://kleros.io/governance\" rel=\"noopener nofollow ugc\">Kleros Court</a> to allow end-users to appeal if the organizing group turns unresponsive.</p>\n<p><a href=\"https://twitter.com/Bountysource\" rel=\"noopener nofollow ugc\">Bountysource</a> had a system like this, but seems to have gone stagnant. Any other platform already done this?</p>\n<p>My thoughts on how to make a platform to support this functionality:</p>\n<h1><a name=\"individual-lockboxes-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#individual-lockboxes-1\"></a>Individual Lockboxes</h1>\n<p>Create a smart contract that is a factory that group organizers can trigger to stamp out a new “lockbox/escrow” contract.</p>\n<p>The lockbox contract acts as a smart contract wallet that starts with an owner of the address that triggered its creation. It then exists as a separate space that anyone can send funds to (it’s now the “reward wallet” for a single task item). When someone does the task, the organizer transfers ownership to the awardee.</p>\n<p>Example implementation: <a href=\"https://gitlab.com/-/snippets/3733032\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Basic Escrow ($3733032) · Snippets · GitLab</a></p>\n<h2><a name=\"downsides-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#downsides-2\"></a>Downsides</h2>\n<p>The group organizers probably don’t want to create a lockbox for every single task (as that costs gas to stamp out another smart contract), so either the address the lockbox gets created at needs to be deterministic (community members can send funds to an “empty” address to show interest, and if the wallet’s balance is non-empty, the organizers can trigger deploying the smart contract logic to it), or the first community member to donate to the bounty has an increased cost of creating the lockbox too.</p>\n<p>People are likely to donate lots of different types of tokens (a single bounty may end up with a mishmash of DAI, USDT, USDC, FRAX, WETH, and ETH), so “sweeping” the wallet may be pretty gas-intensive. It may be beneficial then for the recipient to just keep the funds where they are, and spend from that wallet directly. Though if a single contributor wins several bounties, they’d then have multiple of these lockboxes, with potentially multiple different “dust” values in each to then try to manage.</p>\n<h1><a name=\"merged-pool-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#merged-pool-3\"></a>Merged Pool</h1>\n<p>Alternatively, rewards could be pooled into one main “pot” and the individual bounties annotated as how much allocation they get of the main pot.</p>\n<p>This is pretty similar to a DAO’s treasury and how Proposals can typically claim portions of the treasury. But a DAO would likely want to keep “bounty” funds separate from their main treasury (as a way to show those funds are earmarked/promised to be spent already, and cannot be used for other proposals).</p>\n<p>This is now easier on the recipient, who if they receive multiple bounties, their “dust” combines into a single allowance to be able to withdraw. It also minimizes the gas use for repeated actions (there’s just an initial setup cost of creating the pool, and setting up allowances).</p>\n<h2><a name=\"downsides-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#downsides-4\"></a>Downsides</h2>\n<p>Having a central pool means it’s a little more complicated for end-users to contribute: they cannot just send funds to the address, they need to also somehow annotate which bounty the contribution is for. That likely means they’d need to use the “Approve” process for ERC20- and ERC721-style tokens and call specific functions on the pool contract to do it properly. But it’s possible for users to make mistakes, and some funds may get blindly transferred to the pool address, making the total holdings of the pool larger than the combined allocations for the individual bounties.</p>\n<p>The pool could be coded to deal with that surplus somehow (e.g. it acts as a form of “quadratic funding” extra balance that bounties that already have some value allocated then get an additional part of the “bonus” in the pool?), but would likely add a lot of complication to the process.</p>\n<p>Having the funds in a central pool is more of a honeypot to draw in attackers, and one weakness could result in losing the whole pot of funds. That can be mitigated somewhat by not having a single global bounty pool, but each organizing group having their own individual pool for their bounties.</p>\n<h1><a name=\"next-steps-5\" class=\"anchor\" href=\"https://ethereum-magicians.org#next-steps-5\"></a>Next steps</h1>\n<p>Is there any project that’s already doing this sort of escrow setup? If not, what do we think is the best way to structure the base layer (individual smart contract lockboxes, or centralized bounty pools)?</p>\n            <p><small>2 posts - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/minimal-escrow-contract/20599\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/minimal-escrow-contract/20599","pubDate":"Fri, 19 Jul 2024 17:03:01 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20599"},"source":{"@url":"https://ethereum-magicians.org/t/minimal-escrow-contract/20599.rss","#text":"Minimal escrow contract?"},"filter":false},{"title":"ePBS breakout #5, July 19 2024","dc:creator":"abcoathup","category":"Working Groups","description":"<h3><a name=\"agenda-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#agenda-1\"></a>Agenda</h3>\n<p><a href=\"https://github.com/ethereum/pm/issues/1095\" class=\"inline-onebox\">EIP-7732 breakout room #5 · Issue #1095 · ethereum/pm · GitHub</a><br>\nModerator: <a class=\"mention\" href=\"https://ethereum-magicians.org/u/potuz\">@potuz</a></p>\n<h3><a name=\"notes-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#notes-2\"></a>Notes</h3>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://hackmd.io/@ttsao/epbs-breakout5\">\n  <header class=\"source\">\n      <img src=\"https://ethereum-magicians.org/uploads/default/original/2X/8/8f0a562a90992dd656ced3f9b9b37c942cfbde54.png\" class=\"site-icon\" data-dominant-color=\"696969\" width=\"134\" height=\"134\">\n\n      <a href=\"https://hackmd.io/@ttsao/epbs-breakout5\" target=\"_blank\" rel=\"noopener\">HackMD</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <img width=\"96\" height=\"96\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/a/a9ed980444b9ca3be37d2db47d62cd43df965bbf.jpeg\" class=\"thumbnail onebox-avatar\" data-dominant-color=\"7D8691\">\n\n<h3><a href=\"https://hackmd.io/@ttsao/epbs-breakout5\" target=\"_blank\" rel=\"noopener\">ePBS breakout #5 notes - HackMD</a></h3>\n\n  <p>Quintus raised an issue on proposer leaks IP when requesting header to the builder. We dont have a good answer to this other than this exists today. Proposer requests header to the relayer and relayer has all the IPs. Does the trust model change...</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<h3><a name=\"recording-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#recording-3\"></a>Recording</h3>\n<p><a href=\"https://www.youtube.com/watch?v=pFJMqk5zkPQ\">https://www.youtube.com/watch?v=pFJMqk5zkPQ</a></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/epbs-breakout-5-july-19-2024/20591\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/epbs-breakout-5-july-19-2024/20591","pubDate":"Fri, 19 Jul 2024 04:02:17 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20591"},"source":{"@url":"https://ethereum-magicians.org/t/epbs-breakout-5-july-19-2024/20591.rss","#text":"ePBS breakout #5, July 19 2024"},"filter":false},{"title":"EIP-7745: Two dimensional log filter data structure","dc:creator":"zsfelfoldi","category":"Core EIPs","description":"<p>Discussion topic for EIP-7745</p>\n<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/ethereum/EIPs/pull/8740\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ethereum/EIPs/pull/8740\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/ethereum/EIPs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/ethereum/EIPs/pull/8740\" target=\"_blank\" rel=\"noopener nofollow ugc\">New log filter data structure</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>ethereum:master</code> ← <code>zsfelfoldi:new-log-filter</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-07-17\" data-time=\"14:51:11\" data-timezone=\"UTC\">02:51PM - 17 Jul 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/zsfelfoldi\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"zsfelfoldi\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/e/e1d0ff99e7bb9f25559724337d467f6ae3b9aad2.jpeg\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"68644D\">\n            zsfelfoldi\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"1 commits changed 1 files with 362 additions and 0 deletions\">\n          <a href=\"https://github.com/ethereum/EIPs/pull/8740/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+362</span>\n            <span class=\"removed\">-0</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">An efficient and light client friendly replacement for bloom filters. This EIP p<span class=\"show-more-container\"><a href=\"https://github.com/ethereum/EIPs/pull/8740\" target=\"_blank\" rel=\"noopener nofollow ugc\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\">roposes a new data structure that adds a moderate amount of consensus data that is optional to store long term, has limited processing and memory requirements and allows searching for log events with 2-3 orders of magnitude less bandwidth than what bloom filters allowed back when they were not rendered useless by over-utilization. It also inherently adapts to changing block utilization and maintains a constantly low average false positive ratio.</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n<aside class=\"onebox githubblob\" data-onebox-src=\"https://github.com/zsfelfoldi/EIPs/blob/new-log-filter/EIPS/eip-7745.md\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/zsfelfoldi/EIPs/blob/new-log-filter/EIPS/eip-7745.md\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/zsfelfoldi/EIPs/blob/new-log-filter/EIPS/eip-7745.md\" target=\"_blank\" rel=\"noopener nofollow ugc\">zsfelfoldi/EIPs/blob/new-log-filter/EIPS/eip-7745.md</a></h4>\n\n\n      <pre><code class=\"lang-md\">---\neip: 7745\ntitle: Two dimensional log filter data structure\ndescription: An efficient and light client friendly replacement for block header bloom filters\nauthor: Zsolt Felföldi (@zsfelfoldi)\ndiscussions-to: https://ethereum-magicians.org/t/eip-7745-two-dimensional-log-filter-data-structure/20580\nstatus: Draft\ntype: Standards Track\ncategory: Core\ncreated: 2024-07-17\n---\n\n## Abstract\n\nReplace the fixed 2048 bit log event bloom filters in block headers with a new data structure that can adapt to the changing number of events per block and consistently guarantee a sufficiently low false positive ratio. Unlike the per-block bloom filters, the proposed structure allows searching for specific events by accessing only a small portion of the entire dataset which can also be proven with a Merkle proof, making the search both efficient and light client friendly.\n\nAs an additional benefit, the new structure provides more precise position information on the potential hits (block number and transaction index) allowing the searcher to only look up a single receipt for each potential hit.\n\n## Motivation\n\n</code></pre>\n\n\n\n  This file has been truncated. <a href=\"https://github.com/zsfelfoldi/EIPs/blob/new-log-filter/EIPS/eip-7745.md\" target=\"_blank\" rel=\"noopener nofollow ugc\">show original</a>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>An efficient and light client friendly replacement for bloom filters. This EIP proposes a new data structure that adds a moderate amount of consensus data that is optional to store long term, has limited processing and memory requirements and allows searching for log events with 2-3 orders of magnitude less bandwidth than what bloom filters allowed back when they were not rendered useless by over-utilization. It also inherently adapts to changing block utilization and maintains a constantly low average false positive ratio.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7745-two-dimensional-log-filter-data-structure/20580\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7745-two-dimensional-log-filter-data-structure/20580","pubDate":"Wed, 17 Jul 2024 14:57:57 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20580"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7745-two-dimensional-log-filter-data-structure/20580.rss","#text":"EIP-7745: Two dimensional log filter data structure"},"filter":false},{"title":"Discussion on EIP-7743: Multi-Owner Non-Fungible Tokens (MO-NFT)","dc:creator":"jamesavechives","category":"ERCs","description":"<p>Hi everyone,</p>\n<p>I’d like to start a discussion on my new EIP-7743: Multi-Owner Non-Fungible Tokens (MO-NFT).</p>\n<p><strong>Abstract</strong>:<br>\nThis EIP proposes a new standard for non-fungible tokens (NFTs) that supports multiple owners. The MO-NFT standard allows a single NFT to have multiple owners, reflecting the shared and distributable nature of digital assets. This model also incorporates a mechanism for value depreciation as the number of owners increases, maintaining the principle that less ownership translates to more value.</p>\n<p><strong>Motivation</strong>:<br>\nTraditional NFTs enforce a single-ownership model, which does not align with the inherent duplicability of digital assets. MO-NFTs allow for shared ownership, promoting wider distribution and collaboration while maintaining secure access control. This model supports the principle that some valued information is more valuable if fewer people know it, hence less ownership means higher value.</p>\n<p>You can view the full proposal and PR <a href=\"https://github.com/ethereum/ERCs/pull/539\" rel=\"noopener nofollow ugc\">here</a>.</p>\n<p>I welcome any feedback, suggestions, or discussions on this proposal.</p>\n<p>Thank you!</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/discussion-on-eip-7743-multi-owner-non-fungible-tokens-mo-nft/20577\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/discussion-on-eip-7743-multi-owner-non-fungible-tokens-mo-nft/20577","pubDate":"Wed, 17 Jul 2024 11:28:14 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20577"},"source":{"@url":"https://ethereum-magicians.org/t/discussion-on-eip-7743-multi-owner-non-fungible-tokens-mo-nft/20577.rss","#text":"Discussion on EIP-7743: Multi-Owner Non-Fungible Tokens (MO-NFT)"},"filter":false},{"title":"ERC-7744: Code Index","dc:creator":"peersky","category":"ERCs","description":"<p>Currently contract discovery relies on addresses, which are non-deterministic and can be obfuscated through proxies. Indexing by bytecode hash provides a deterministic and tamper-proof way to identify and verify contract code, enhancing security and trust in the Ethereum ecosystem.</p>\n<p>Global bytecode identification is a requirement to build efficient at high scale global factories for future software distribution, that may want to rely on extensive re-use of same codebase as own dependencies, such as <a href=\"https://github.com/peersky/eds/tree/main\" rel=\"noopener nofollow ugc\">Ethereum Distribution System</a>  that creates a simple, global index that maps already deployed bytecode to it’s location via <code>address.codehash</code></p>\n            <p><small>5 posts - 2 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-7744-code-index/20569\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-7744-code-index/20569","pubDate":"Tue, 16 Jul 2024 18:45:13 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20569"},"source":{"@url":"https://ethereum-magicians.org/t/erc-7744-code-index/20569.rss","#text":"ERC-7744: Code Index"},"filter":false},{"title":"Verkle implementers call #21, July 15 2024","dc:creator":"abcoathup","category":"Working Groups","description":"<h3><a name=\"agenda-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#agenda-1\"></a>Agenda</h3>\n<p><a href=\"https://github.com/ethereum/pm/issues/1092\" class=\"inline-onebox\">Verkle Implementers Call #21 · Issue #1092 · ethereum/pm · GitHub</a><br>\n<span data-date=\"2024-07-15\" data-time=\"15:00:00\" class=\"discourse-local-date\" data-timezone=\"UTC\" data-email-preview=\"2024-07-15T15:00:00Z UTC\">2024-07-15T15:00:00Z UTC</span><br>\nModerator: <a class=\"mention\" href=\"https://ethereum-magicians.org/u/rudolf\">@rudolf</a></p>\n<h3><a name=\"notes-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#notes-2\"></a>Notes</h3>\n<p><a href=\"https://notes.ethereum.org/@rudolf/vic-notes#Call-21-July-15-2024\">Notes</a> by <a class=\"mention\" href=\"https://ethereum-magicians.org/u/rudolf\">@rudolf</a></p>\n<h3><a name=\"recording-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#recording-3\"></a>Recording</h3>\n<p><a href=\"https://www.youtube.com/watch?v=8YosyUWzmz0\">Verkle Implementers Call #21</a></p>\n\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/verkle-implementers-call-21-july-15-2024/20566\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/verkle-implementers-call-21-july-15-2024/20566","pubDate":"Tue, 16 Jul 2024 13:01:34 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20566"},"source":{"@url":"https://ethereum-magicians.org/t/verkle-implementers-call-21-july-15-2024/20566.rss","#text":"Verkle implementers call #21, July 15 2024"},"filter":false},{"title":"All Core Devs - Execution (ACDE) #192, July 18 2024","dc:creator":"abcoathup","category":"Working Groups","description":"<h3><a name=\"agenda-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#agenda-1\"></a>Agenda</h3>\n<p><a href=\"https://github.com/ethereum/pm/issues/1098\" class=\"inline-onebox\">Execution Layer Meeting 192 · Issue #1098 · ethereum/pm · GitHub</a></p>\n<p>Moderator: <a class=\"mention\" href=\"https://ethereum-magicians.org/u/timbeiko\">@timbeiko</a></p>\n<h3><a name=\"summary-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#summary-2\"></a>Summary</h3>\n<aside class=\"quote quote-modified\" data-post=\"2\" data-topic=\"20565\">\n  <div class=\"title\">\n    <div class=\"quote-controls\"></div>\n    <img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://ethereum-magicians.org/user_avatar/ethereum-magicians.org/timbeiko/48/1452_2.png\" class=\"avatar\">\n    <a href=\"https://ethereum-magicians.org/t/all-core-devs-execution-acde-call-192-july-18-2024/20565/2\">All Core Devs - Execution (ACDE) #192, July 18 2024</a> <a class=\"badge-category__wrapper \" href=\"https://ethereum-magicians.org/c/working-groups/11\"><span data-category-id=\"11\" style=\"--category-badge-color: #FFFF52; --category-badge-text-color: #FFFFFF;\" data-drop-close=\"true\" class=\"badge-category \"><span class=\"badge-category__name\">Working Groups</span></span></a>\n  </div>\n  <blockquote>\n    <a name=\"acde-192-call-summary-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#acde-192-call-summary-1\"></a>ACDE 192 Call Summary\n<a name=\"decisions-next-steps-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#decisions-next-steps-2\"></a>Decisions &amp; Next Steps\n\ndevnet-1: expected to launch by next Thursday.\nEOF: remains in Pectra, Geth will not oppose inclusion but does not want to take responsibility for testing, teams will continue working on implementations and testing. Fuzzing should be a priority as soon as we have multiple complete implementations.\nEIP-7702: the spec remains unchanged for now\n<a href=\"https://github.com/lightclient/sys-asm/pull/17\" rel=\"noopener nofollow ugc\">logs for system contracts</a>: teams should review prior to next week’s ACDC\nEIP-7742: teams should review prior t…\n  </blockquote>\n</aside>\n\n<h3><a name=\"recording-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#recording-3\"></a>Recording</h3>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://www.youtube.com/live/kL58hvM0E68?t=308s\">\n  <header class=\"source\">\n      <img src=\"https://ethereum-magicians.org/uploads/default/original/2X/d/dfb260cd3db01f7b82e3068603430c7db2953e1e.png\" class=\"site-icon\" data-dominant-color=\"FF1010\" width=\"16\" height=\"16\">\n\n      <a href=\"https://www.youtube.com/live/kL58hvM0E68?t=308s\" target=\"_blank\" rel=\"noopener\">YouTube</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:480/360;\"><img src=\"https://ethereum-magicians.org/uploads/default/original/2X/f/f74a00e8f9c61b7ac507624f601d18a3fd72bf55.jpeg\" class=\"thumbnail\" data-dominant-color=\"334040\" width=\"480\" height=\"360\"></div>\n\n<h3><a href=\"https://www.youtube.com/live/kL58hvM0E68?t=308s\" target=\"_blank\" rel=\"noopener\">Execution Layer Meeting 192 [2024-07-18]</a></h3>\n\n  <p>https://github.com/ethereum/pm/issues/1098</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<h3><a name=\"additional-info-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#additional-info-4\"></a>Additional info</h3>\n<ul>\n<li><strong>Notes:</strong> <a href=\"https://www.galaxy.com/insights/research/ethereum-all-core-developers-execution-call-192\" class=\"inline-onebox\">Ethereum All Core Developers Execution Call #192 Writeup | Galaxy</a> by <a class=\"mention\" href=\"https://ethereum-magicians.org/u/christine_dkim\">@Christine_dkim</a></li>\n<li><strong>EOF:</strong> <a href=\"https://mariusvanderwijden.github.io/blog/2024/07/12/EOF/\" class=\"inline-onebox\">Why I am against EOF in Pectra – MariusVanDerWijden</a> by <a class=\"mention\" href=\"https://ethereum-magicians.org/u/mariusvanderwijden\">@MariusVanDerWijden</a></li>\n<li><strong>RIP7212:</strong> <a href=\"https://hackmd.io/@ulerdogan/B1QikMxdC\">Brief History and Current Situation of RIP-7212</a> by <a class=\"mention\" href=\"https://ethereum-magicians.org/u/ulerdogan\">@ulerdogan</a></li>\n</ul>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/all-core-devs-execution-acde-192-july-18-2024/20565\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/all-core-devs-execution-acde-192-july-18-2024/20565","pubDate":"Tue, 16 Jul 2024 12:44:09 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20565"},"source":{"@url":"https://ethereum-magicians.org/t/all-core-devs-execution-acde-192-july-18-2024/20565.rss","#text":"All Core Devs - Execution (ACDE) #192, July 18 2024"},"filter":false},{"title":"Supporting EIP-3085 with a ERC-4337 wallet","dc:creator":"ajhodges","category":"Primordial Soup","description":"<p>There is currently a gap in the interface between dapps and ERC-4337 wallets; support for network addition via <a href=\"https://eips.ethereum.org/EIPS/eip-3085\" rel=\"noopener nofollow ugc\">EIP-3085 wallet_addEthereumChain</a>. In order for a 4337 wallet to function with an arbitrary chain, it needs to be provided with an RPC URL that can serve the <a href=\"https://eips.ethereum.org/EIPS/eip-4337#rpc-methods-eth-namespace\" rel=\"noopener nofollow ugc\">4337-specific RPC methods</a>.</p>\n<p>I see a few potential paths forward here:</p>\n<ol>\n<li>Reuse EIP-3085 <code>EthereumChainAddRequest.rpcUrls</code> by leveraging the fact that a dapp can already provide multiple RPC providers with the existing interface\n<ol>\n<li>We could specify the ordering of these URLs, i.e. the first one is always the bundler, and subsequent ones are always general-purpose RPCs</li>\n<li>We could define a prefix to be added the bundler URL so that the wallet can identify it</li>\n</ol>\n</li>\n<li>Standardize around a single RPC URL - the RPC provider passed via 3085 should handle both traditional as well as 4337-specific RPC methods\n<ul>\n<li>Some bundlers such as Alchemy already work in this way. Others (i.e. Pimlico) expressly do not.</li>\n<li>Dapps may need to build a JSON RPC reverse proxy depending on their bundler provider.</li>\n</ul>\n</li>\n<li>Extend EIP-3085 <code>EthereumChainAddRequest</code>\n<ol>\n<li>Add an <code>rpcMetadata</code> mapping of RPC URLs to metadata (maybe a dictionary with e.g. <code>\"supports4337\": true</code>)</li>\n<li>Add a <code>bundlerRpcUrls</code> parameter</li>\n</ol>\n</li>\n</ol>\n<p>I would love to hear from anyone else who is already thinking about this!</p>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/supporting-eip-3085-with-a-erc-4337-wallet/20551\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/supporting-eip-3085-with-a-erc-4337-wallet/20551","pubDate":"Mon, 15 Jul 2024 18:12:50 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20551"},"source":{"@url":"https://ethereum-magicians.org/t/supporting-eip-3085-with-a-erc-4337-wallet/20551.rss","#text":"Supporting EIP-3085 with a ERC-4337 wallet"},"filter":false},{"title":"EIP-7742: Uncouple blob count between CL and EL","dc:creator":"ralexstokes","category":"Core EIPs","description":"<p>Discussions for EIP-7742.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/eip-7742-uncouple-blob-count-between-cl-and-el/20550\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/eip-7742-uncouple-blob-count-between-cl-and-el/20550","pubDate":"Mon, 15 Jul 2024 16:42:15 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20550"},"source":{"@url":"https://ethereum-magicians.org/t/eip-7742-uncouple-blob-count-between-cl-and-el/20550.rss","#text":"EIP-7742: Uncouple blob count between CL and EL"},"filter":false},{"title":"ERC-7741: Authorize Operator","dc:creator":"jeroen","category":"ERCs","description":"<p>Discussion for <a href=\"https://github.com/ethereum/ERCs/pull/536\" rel=\"noopener nofollow ugc\"> Add ERC: Authorize Operator #536 </a></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-7741-authorize-operator/20531\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-7741-authorize-operator/20531","pubDate":"Fri, 12 Jul 2024 16:43:05 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20531"},"source":{"@url":"https://ethereum-magicians.org/t/erc-7741-authorize-operator/20531.rss","#text":"ERC-7741: Authorize Operator"},"filter":false},{"title":"ERC-7739: Readable Typed Signatures for Smart Accounts","dc:creator":"Vectorized","category":"ERCs","description":"<h1><a name=\"readable-typed-signatures-for-smart-accounts-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#readable-typed-signatures-for-smart-accounts-1\"></a>Readable Typed Signatures for Smart Accounts</h1>\n<p><strong>Description:</strong> A defensive rehashing scheme which prevents signature replays across smart accounts and preserves the readability of the signed contents.</p>\n<p><strong>Authors:</strong> vectorized (<a class=\"mention\" href=\"https://ethereum-magicians.org/u/vectorized\">@vectorized</a>), Sihoon Lee (<span class=\"mention\">@push0ebp</span>), Francisco Giordano (<a class=\"mention\" href=\"https://ethereum-magicians.org/u/frangio\">@frangio</a>), Im Juno (<span class=\"mention\">@junomonster</span>), howydev (<span class=\"mention\">@howydev</span>), 0xcuriousapple (<span class=\"mention\">@0xcuriousapple</span>)</p>\n<p><strong>Requires:</strong> 191, 712, 1271, 5267</p>\n<h2><a name=\"preliminary-reading-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#preliminary-reading-2\"></a>Preliminary Reading</h2>\n<h3><a name=\"signature-replay-vulnerability-with-erc-1271-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#signature-replay-vulnerability-with-erc-1271-3\"></a>Signature replay vulnerability with ERC-1271</h3>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://mirror.xyz/curiousapple.eth/pFqAdW2LiJ-6S4sg_u1z08k4vK6BCJ33LcyXpnNb8yU\">\n  <header class=\"source\">\n      <img src=\"https://ethereum-magicians.org/uploads/default/original/2X/6/65af1eb86ac88b46b616ccfdcdc771188a45ba6c.png\" class=\"site-icon\" data-dominant-color=\"489FFF\" width=\"16\" height=\"16\">\n\n      <a href=\"https://mirror.xyz/curiousapple.eth/pFqAdW2LiJ-6S4sg_u1z08k4vK6BCJ33LcyXpnNb8yU\" target=\"_blank\" rel=\"noopener nofollow ugc\">mirror.xyz</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:690/345;\"><img src=\"https://ethereum-magicians.org/uploads/default/optimized/2X/d/dca4254106904038d1fb8be6fec3c3c239cb838d_2_690x345.jpeg\" class=\"thumbnail\" data-dominant-color=\"433A2A\" width=\"690\" height=\"345\"></div>\n\n<h3><a href=\"https://mirror.xyz/curiousapple.eth/pFqAdW2LiJ-6S4sg_u1z08k4vK6BCJ33LcyXpnNb8yU\" target=\"_blank\" rel=\"noopener nofollow ugc\">ERC1271 Replay - 15+ Teams Affected</a></h3>\n\n  <p>Sep 25, 2023, I found an issue in a widely used implementation of the ERC1271 pattern that affected 15+ teams. This blog describes the sequence of events regarding how it all came together. If you are a wallet team or a security researcher, consider...</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<h3><a name=\"defensive-rehashing-implementations-in-smart-accounts-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#defensive-rehashing-implementations-in-smart-accounts-4\"></a>Defensive rehashing implementations in smart accounts</h3>\n<ul>\n<li>\n<p>Safe: <a href=\"https://github.com/safe-global/safe-smart-account/blob/5feb0d08f59cfbb44918be1ed5889d9bb634562a/contracts/handler/CompatibilityFallbackHandler.sol#L57\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">safe-smart-account/contracts/handler/CompatibilityFallbackHandler.sol at 5feb0d08f59cfbb44918be1ed5889d9bb634562a · safe-global/safe-smart-account · GitHub</a></p>\n</li>\n<li>\n<p>Coinbase: <a href=\"https://github.com/coinbase/smart-wallet/blob/facf1a5a00a393c859c77a7cff38de1e557c393f/src/ERC1271.sol#L70\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">smart-wallet/src/ERC1271.sol at facf1a5a00a393c859c77a7cff38de1e557c393f · coinbase/smart-wallet · GitHub</a></p>\n</li>\n</ul>\n<p>Twitter thread on opaqueness in defensive rehashing:<br>\n<a href=\"https://twitter.com/howydev/status/1780353754333634738\" class=\"onebox\" target=\"_blank\" rel=\"noopener nofollow ugc\">https://twitter.com/howydev/status/1780353754333634738</a></p>\n<p>Twitter thread on a possible phishing vector with readable defensive rehashing, and how it was fixed:<br>\n<a href=\"https://twitter.com/push0ebp/status/1786460154277572718\" class=\"onebox\" target=\"_blank\" rel=\"noopener nofollow ugc\">https://twitter.com/push0ebp/status/1786460154277572718</a></p>\n<h1><a name=\"code-5\" class=\"anchor\" href=\"https://ethereum-magicians.org#code-5\"></a>Code</h1>\n<p>Solady Solidity ERC-1271 implementation, which implements this ERC-7739.</p><aside class=\"onebox githubblob\" data-onebox-src=\"https://github.com/Vectorized/solady/blob/main/src/accounts/ERC1271.sol\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/Vectorized/solady/blob/main/src/accounts/ERC1271.sol\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/Vectorized/solady/blob/main/src/accounts/ERC1271.sol\" target=\"_blank\" rel=\"noopener nofollow ugc\">Vectorized/solady/blob/main/src/accounts/ERC1271.sol</a></h4>\n\n\n      <pre><code class=\"lang-sol\">// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport {EIP712} from \"../utils/EIP712.sol\";\nimport {SignatureCheckerLib} from \"../utils/SignatureCheckerLib.sol\";\n\n/// @notice ERC1271 mixin with nested EIP-712 approach.\n/// @author Solady (https://github.com/vectorized/solady/blob/main/src/accounts/ERC1271.sol)\nabstract contract ERC1271 is EIP712 {\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                         CONSTANTS                          */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev `keccak256(\"PersonalSign(bytes prefixed)\")`.\n    bytes32 internal constant _PERSONAL_SIGN_TYPEHASH =\n        0x983e65e5148e570cd828ead231ee759a8d7958721a768f93bc4483ba005c32de;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                     ERC1271 OPERATIONS                     */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n</code></pre>\n\n\n\n  This file has been truncated. <a href=\"https://github.com/Vectorized/solady/blob/main/src/accounts/ERC1271.sol\" target=\"_blank\" rel=\"noopener nofollow ugc\">show original</a>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>Viem utilities for Solady ERC-1271:</p><aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://viem.sh/experimental/solady/hashTypedData\">\n  <header class=\"source\">\n      <img src=\"https://ethereum-magicians.org/uploads/default/original/2X/3/3d5e1b406ccbb0fa3782762e2021084fd3dd715d.png\" class=\"site-icon\" data-dominant-color=\"1E1E20\" width=\"50\" height=\"50\">\n\n      <a href=\"https://viem.sh/experimental/solady/hashTypedData\" target=\"_blank\" rel=\"noopener nofollow ugc\">viem.sh</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:690/362;\"><img src=\"https://ethereum-magicians.org/uploads/default/optimized/2X/d/d5de5c62551b2d1ec3baf69e56704f481b193113_2_690x362.jpeg\" class=\"thumbnail\" data-dominant-color=\"2C2B2D\" width=\"690\" height=\"362\"></div>\n\n<h3><a href=\"https://viem.sh/experimental/solady/hashTypedData\" target=\"_blank\" rel=\"noopener nofollow ugc\">hashTypedData</a></h3>\n\n  <p>Hashes EIP-712 typed data via Solady's ERC-1271 format.</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<hr>\n<h2><a name=\"abstract-6\" class=\"anchor\" href=\"https://ethereum-magicians.org#abstract-6\"></a>Abstract</h2>\n<p>This proposal defines a standard to prevent signature replays across multiple smart accounts when they are owned by a single Externally Owned Account (EOA). This is achieved through a defensive rehashing scheme for <a href=\"https://ethereum-magicians.org\">ERC-1271</a> verification using specific nested <a href=\"https://ethereum-magicians.org\">EIP-712</a> typed structures, which preserves the readability of the signed contents during wallet client signature requests.</p>\n<h2><a name=\"motivation-7\" class=\"anchor\" href=\"https://ethereum-magicians.org#motivation-7\"></a>Motivation</h2>\n<p>Smart accounts can verify signatures with via <a href=\"https://ethereum-magicians.org\">ERC-1271</a> using the <code>isValidSignature</code> function.</p>\n<p>A straightforward implementation as shown below, is vulnerable to signature replay attacks.</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-solidity\">/// @dev This implementation is NOT safe.\nfunction isValidSignature(\n    bytes32 hash,\n    bytes calldata signature\n) external override view returns (bytes4) {\n    if (ECDSA.recover(hash, signature) == owner) {\n        return 0x1626ba7e;\n    } else {\n        return 0xffffffff;\n    }\n}\n</code></pre>\n<p>When a multiple smart accounts are owned by a single EOA, the same signature can be replayed across the smart accounts if the <code>hash</code> does not include the smart account address.</p>\n<p>Unfortunately, this is the case for many popular applications (e.g. Permit2). As such, many smart account implementations perform some form of defensive rehashing. First, the smart account computes a final hash from minimally: (1) the hash, (2) its own address, (3) the chain ID. Then, the smart account verifies the final hash against the signature. Defensive rehashing can be implemented with <a href=\"https://ethereum-magicians.org\">EIP-712</a>, but a straightforward implementation will make the signed contents opaque.</p>\n<p>This standard provides a defensive rehashing scheme that makes the signed contents visible across all wallet clients that support <a href=\"https://ethereum-magicians.org\">EIP-712</a>. It is designed for minimal adoption friction. Even if wallet clients or application frontends are not updated, users can still inject client side JavaScript to enable the defensive rehashing.</p>\n<h2><a name=\"specification-8\" class=\"anchor\" href=\"https://ethereum-magicians.org#specification-8\"></a>Specification</h2>\n<p>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in RFC 2119 and RFC 8174.</p>\n<h3><a name=\"overview-9\" class=\"anchor\" href=\"https://ethereum-magicians.org#overview-9\"></a>Overview</h3>\n<p>Compliant smart account MUST implement the following:</p>\n<ul>\n<li>\n<p><a href=\"https://ethereum-magicians.org\">EIP-712</a> Typed structured data hashing and signing.<br>\nProvides the relevant typed data hashing logic internally, which is required to construct the final hashes.</p>\n</li>\n<li>\n<p><a href=\"https://ethereum-magicians.org\">ERC-1271</a> Standard Signature Validation Method for Contracts.<br>\nProvides the <code>isValidSignature(bytes32 hash, bytes calldata signature)</code> function.</p>\n</li>\n<li>\n<p><a href=\"https://ethereum-magicians.org\">ERC-5267</a> Retrieval of EIP-712 domain.<br>\nProvides the <code>eip712Domain()</code> function which is required to compute the final hashes.</p>\n</li>\n</ul>\n<p>This standard defines the behavior of the <code>isValidSignature</code> function for <a href=\"https://ethereum-magicians.org\">ERC-1271</a>, which comprises of two workflows: (1) the <code>TypedDataSign</code> workflow, (2) the <code>PersonalSign</code> workflow.</p>\n<h3><a name=\"typeddatasign-workflow-10\" class=\"anchor\" href=\"https://ethereum-magicians.org#typeddatasign-workflow-10\"></a><code>TypedDataSign</code> workflow</h3>\n<p>The <code>TypedDataSign</code> workflow handles the case where the <code>hash</code> is originally computed with <a href=\"https://ethereum-magicians.org\">EIP-712</a>.</p>\n<h4><a name=\"typeddatasign-final-hash-11\" class=\"anchor\" href=\"https://ethereum-magicians.org#typeddatasign-final-hash-11\"></a><code>TypedDataSign</code> final hash</h4>\n<p>The final hash for the <code>TypedDataSign</code> workflow is defined as:</p>\n<pre><code class=\"lang-auto\">keccak256(\\x19\\x01 ‖ APP_DOMAIN_SEPARATOR ‖\n    hashStruct(TypedDataSign({\n        contents: hashStruct(originalStruct),\n        name: eip712Domain().name,\n        version: eip712Domain().version,\n        chainId: eip712Domain().chainId,\n        verifyingContract: eip712Domain().verifyingContract,\n        salt: eip712Domain().salt,\n        extensions: eip712Domain().extensions\n    }))\n)\n</code></pre>\n<p>where <code>‖</code> denotes the concatenation operator for bytes.</p>\n<p>In Solidity, this can be written as:</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-solidity\">keccak256(\n    abi.encodePacked(\n        hex\"1901\",\n        // Application specific domain separator. Passed via `signature`.\n        bytes32(APP_DOMAIN_SEPARATOR),\n        keccak256(\n            abi.encode(\n                // Computed on-the-fly with `contentsType`, which is passed via `signature`.\n                typedDataSignTypehash, \n                // This is the `contents` struct hash, which is passed via `signature`.\n                bytes32(hashStruct(originalStruct)),\n                // `eip712Domain()` is from ERC-5267. \n                keccak256(bytes(eip712Domain().name)), \n                keccak256(bytes(eip712Domain().version)),\n                uint256(eip712Domain().chainId),\n                uint256(uint160(eip712Domain().verifyingContract)),\n                bytes32(eip712Domain().salt),\n                keccak256(abi.encodePacked(eip712Domain().extensions))\n            )\n        )\n    )\n)\n</code></pre>\n<p>where <code>typedDataSignTypehash</code> is:</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-solidity\">abi.encodePacked(\n    \"TypedDataSign(\",\n        contentsTypeName,\n        \"bytes1 fields,\",\n        \"string name,\",\n        \"string version,\",\n        \"uint256 chainId,\",\n        \"address verifyingContract,\",\n        \"bytes32 salt,\",\n        \"uint256[] extensions\",\n    \")\",\n    contentsType\n)\n</code></pre>\n<p>If <code>contentsType</code> is <code>\"Mail(address from,address to,string message)\"</code>, then <code>contentsTypeName</code> will be <code>\"Mail\"</code>.</p>\n<p>The <code>contentsTypeName</code> function can be computed with:</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-solidity\">// `LibString`: https://github.com/Vectorized/solady/blob/main/src/utils/LibString.sol\n//\n// `slice(string memory subject, uint256 start, uint256 end)` \n// returns a copy of `subject` sliced from `start` to `end` (exclusive).\n// `start` and `end` are byte offsets.\n//\n// `indexOf(string memory subject, string memory search)`\n// Returns the byte index of the first location of `search` in `subject`,\n// searching from left to right. Returns `2**256 - 1` if `search` is not found.\nLibString.slice(t, 0, LibString.indexOf(t, \"(\"));\n</code></pre>\n<p>For safety, smart accounts MUST treat the signature as invalid if any of the following is true:</p>\n<ul>\n<li><code>contentsTypeName</code> is the empty string (i.e. <code>bytes(contentsTypeName).length == 0</code>).</li>\n<li><code>contentsTypeName</code> starts with any of the following bytes <code>abcdefghijklmnopqrstuvwxyz(</code>.</li>\n<li><code>contentsTypeName</code> contains any of the following bytes <code>, )\\x00</code>.</li>\n</ul>\n<h4><a name=\"typeddatasign-signature-12\" class=\"anchor\" href=\"https://ethereum-magicians.org#typeddatasign-signature-12\"></a><code>TypedDataSign</code> signature</h4>\n<p>The <code>signature</code> passed into <code>isValidSignature</code> will be changed to:</p>\n<pre><code class=\"lang-auto\">originalSignature ‖ APP_DOMAIN_SEPARATOR ‖ contents ‖ contentsType ‖ uint16(contentsType.length)\n</code></pre>\n<p>where <code>contents</code> is the bytes32 struct hash of the original struct.</p>\n<p>In Solidity, this can be written as:</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-solidity\">abi.encodePacked(\n    bytes(originalSignature),\n    bytes32(APP_DOMAIN_SEPARATOR),\n    bytes32(contents),\n    bytes(contentsType),\n    uint16(contentsType.length)\n)\n</code></pre>\n<p>The appended <code>APP_DOMAIN_SEPARATOR</code> and <code>contents</code> struct hash will be used to verify if the <code>hash</code> passed into <code>isValidSignature</code> is indeed correct via:</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-solidity\">hash == keccak256(\n    abi.encodePacked(\n        hex\"1901\",\n        bytes32(APP_DOMAIN_SEPARATOR),\n        bytes32(contents)\n    )\n)\n</code></pre>\n<h3><a name=\"personalsign-workflow-13\" class=\"anchor\" href=\"https://ethereum-magicians.org#personalsign-workflow-13\"></a><code>PersonalSign</code> workflow</h3>\n<p>This <code>PersonalSign</code> workflow handles the case where the <code>hash</code> is originally computed with <a href=\"https://ethereum-magicians.org\">EIP-191</a>.</p>\n<h4><a name=\"personalsign-final-hash-14\" class=\"anchor\" href=\"https://ethereum-magicians.org#personalsign-final-hash-14\"></a><code>PersonalSign</code> final hash</h4>\n<p>The final hash for the <code>PersonalSign</code> workflow is defined as:</p>\n<pre><code class=\"lang-auto\">keccak256(\\x19\\x01 ‖ ACCOUNT_DOMAIN_SEPARATOR ‖\n    hashStruct(PersonalSign({\n        prefixed: keccak256(bytes(\\x19Ethereum Signed Message:\\n ‖\n        base10(bytes(someString).length) ‖ someString))\n    }))\n)\n</code></pre>\n<p>where <code>‖</code> denotes the concatenation operator for bytes.</p>\n<p>In Solidity, this can be written as:</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-solidity\">keccak256(\n    abi.encodePacked(\n        hex\"1901\",\n        // Smart account domain separator.\n        // Can be computed via `eip712Domain()` from ERC-5267.\n        bytes32(ACCOUNT_DOMAIN_SEPARATOR),\n        keccak256(\n            abi.encode(\n                // `PERSONAL_SIGN_TYPEHASH`.\n                keccak256(\"PersonalSign(bytes prefixed)\"),\n                // `hash` is from `isValidSignature(hash, signature)`\n                hash\n            )\n        )\n    )\n)\n</code></pre>\n<p>Here, <code>hash</code> is computed in the application contract and passed into <code>isValidSignature</code>.</p>\n<p>The smart account does not need to know how <code>hash</code> is computed. For completeness, this is how it can be computed:</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-solidity\">abi.encodePacked(\n    \"\\x19Ethereum Signed Message:\\n\",\n    // `LibString`: https://github.com/Vectorized/solady/blob/main/src/utils/LibString.sol\n    //\n    // `toString` returns the base10 representation of a uint256.\n    LibString.toString(someString.length),\n    // This is the original message to be signed.\n    someString\n)\n</code></pre>\n<h4><a name=\"personalsign-signature-15\" class=\"anchor\" href=\"https://ethereum-magicians.org#personalsign-signature-15\"></a><code>PersonalSign</code> signature</h4>\n<p>The <code>PersonalSign</code> workflow does not require additional data to be appended to the <code>signature</code> passed into <code>isValidSignature</code>.</p>\n<h3><a name=\"supportsnestedtypeddatasign-function-for-detection-16\" class=\"anchor\" href=\"https://ethereum-magicians.org#supportsnestedtypeddatasign-function-for-detection-16\"></a><code>supportsNestedTypedDataSign</code> function for detection</h3>\n<p>To facilitate automatic detection, smart accounts SHOULD implement the following function:</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-solidity\">/// @dev For automatic detection that the smart account supports the nested EIP-712 workflow.\n/// By default, it returns `bytes32(bytes4(keccak256(\"supportsNestedTypedDataSign()\")))`,\n/// denoting support for the default behavior, as implemented in\n/// `_erc1271IsValidSignatureViaNestedEIP712`, which is called in `isValidSignature`.\n/// Future extensions should return a different non-zero `result` to denote different behavior.\n/// This method intentionally returns bytes32 to allow freedom for future extensions.\nfunction supportsNestedTypedDataSign() public view virtual returns (bytes32 result) {\n    result = bytes4(0xd620c85a);\n}\n</code></pre>\n<h3><a name=\"workflow-detection-17\" class=\"anchor\" href=\"https://ethereum-magicians.org#workflow-detection-17\"></a>Workflow detection</h3>\n<p>The <code>isValidSignature</code> function MUST perform the <code>TypedDataSign</code> workflow if the signature contains the correct data to reconstruct the <code>hash</code>.</p>\n<p>This can be checked via:</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-solidity\">// If this is true, it means that the `signature` contains \n// the correct `APP_DOMAIN_SEPARATOR` and `contents`.\nhash == keccak256(\n    abi.encodePacked(\n        hex\"1901\",\n        bytes32(APP_DOMAIN_SEPARATOR),\n        bytes32(contents)\n    )\n)\n</code></pre>\n<p>If this expression returns false, then the <code>PersonalSign</code> workflow MUST be attempted.</p>\n<h3><a name=\"conditional-skipping-of-defensive-rehashing-18\" class=\"anchor\" href=\"https://ethereum-magicians.org#conditional-skipping-of-defensive-rehashing-18\"></a>Conditional skipping of defensive rehashing</h3>\n<p>Smart accounts MAY skip the defensive rehashing workflows if any of the following is true:</p>\n<ul>\n<li><code>isValidSignature</code> is called off-chain.</li>\n<li>The <code>hash</code> passed into <code>isValidSignature</code> has already included the address of the smart account.</li>\n</ul>\n<h2><a name=\"rationale-19\" class=\"anchor\" href=\"https://ethereum-magicians.org#rationale-19\"></a>Rationale</h2>\n<h3><a name=\"typeddatasign-structure-20\" class=\"anchor\" href=\"https://ethereum-magicians.org#typeddatasign-structure-20\"></a><code>TypedDataSign</code> structure</h3>\n<p>The <code>typedDataSignTypehash</code> must be constructed on-the-fly on-chain. This is to enforce that the signed contents will be visible in the signature request, by requiring that <code>contents</code> be a user defined type.</p>\n<p>The structure is intentionally made flat with the fields of <code>eip712Domain</code> to make implementation feasible. Otherwise, smart accounts must implement on-chain lexographical sorting of strings for the struct type names when constructing <code>typedDataSignTypehash</code>.</p>\n<h3><a name=\"supportsnestedtypeddatasign-for-detection-21\" class=\"anchor\" href=\"https://ethereum-magicians.org#supportsnestedtypeddatasign-for-detection-21\"></a><code>supportsNestedTypedDataSign</code> for detection</h3>\n<p>Without this function, this standard will not change the interface of the smart account, as it defines the behavior of <code>isValidSignature</code> without adding any new functions. As such, <a href=\"https://ethereum-magicians.org\">ERC-165</a> cannot be used.</p>\n<p>For future extendability, <code>supportsNestedTypedDataSign</code> is defined to return a bytes32 as the first word of its returned data. For bytecode compactness and to leave space for bit packing, only the leftmost 4 bytes are set to the function selector of <code>supportsNestedTypedDataSign</code>.</p>\n<p>The <code>supportsNestedTypedDataSign</code> function may be extended to return multiple values (e.g. <code>bytes32 result, bytes memory data</code>), as long as the first word of the returned data is a bytes32 identifier. This will not change the function selector.</p>\n<h2><a name=\"backwards-compatibility-22\" class=\"anchor\" href=\"https://ethereum-magicians.org#backwards-compatibility-22\"></a>Backwards Compatibility</h2>\n<p>No backwards compatibility issues.</p>\n<h2><a name=\"reference-implementation-23\" class=\"anchor\" href=\"https://ethereum-magicians.org#reference-implementation-23\"></a>Reference Implementation</h2>\n<p>The following reference implementation is production ready and optimized. It also includes relevant complementary features required for safety, flexibility, developer experience, and user experience.</p>\n<p>It is intentionally not minimalistic. This is to avoid repeating the mistake of <a href=\"https://ethereum-magicians.org\">ERC-1271</a>, where a reference implementation is wrongly assumed to be safe for production use.</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-solidity\">// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n// https://github.com/Vectorized/solady/blob/main/src/utils/EIP712.sol\nimport {EIP712} from \"../utils/EIP712.sol\";\n// https://github.com/Vectorized/solady/blob/main/src/utils/SignatureCheckerLib.sol\nimport {SignatureCheckerLib} from \"../utils/SignatureCheckerLib.sol\";\n\n/// @notice ERC1271 mixin with nested EIP-712 approach.\n/// @author Solady (https://github.com/vectorized/solady/blob/main/src/accounts/ERC1271.sol)\nabstract contract ERC1271 is EIP712 {\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                         CONSTANTS                          */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev `keccak256(\"PersonalSign(bytes prefixed)\")`.\n    bytes32 internal constant _PERSONAL_SIGN_TYPEHASH =\n        0x983e65e5148e570cd828ead231ee759a8d7958721a768f93bc4483ba005c32de;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                     ERC1271 OPERATIONS                     */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Validates the signature with ERC1271 return,\n    /// so that this account can also be used as a signer.\n    function isValidSignature(bytes32 hash, bytes calldata signature)\n        public\n        view\n        virtual\n        returns (bytes4 result)\n    {\n        bool success = _erc1271IsValidSignature(hash, _erc1271UnwrapSignature(signature));\n        /// @solidity memory-safe-assembly\n        assembly {\n            // `success ? bytes4(keccak256(\"isValidSignature(bytes32,bytes)\")) : 0xffffffff`.\n            // We use `0xffffffff` for invalid, in convention with the reference implementation.\n            result := shl(224, or(0x1626ba7e, sub(0, iszero(success))))\n        }\n    }\n\n    /// @dev For automatic detection that the smart account supports the nested EIP-712 workflow.\n    /// By default, it returns `bytes32(bytes4(keccak256(\"supportsNestedTypedDataSign()\")))`,\n    /// denoting support for the default behavior, as implemented in\n    /// `_erc1271IsValidSignatureViaNestedEIP712`, which is called in `isValidSignature`.\n    /// Future extensions should return a different non-zero `result` to denote different behavior.\n    /// This method intentionally returns bytes32 to allow freedom for future extensions.\n    function supportsNestedTypedDataSign() public view virtual returns (bytes32 result) {\n        result = bytes4(0xd620c85a);\n    }\n\n    /// @dev Returns the ERC1271 signer.\n    /// Override to return the signer `isValidSignature` checks against.\n    function _erc1271Signer() internal view virtual returns (address);\n\n    /// @dev Returns whether the `msg.sender` is considered safe, such\n    /// that we don't need to use the nested EIP-712 workflow.\n    /// Override to return true for more callers.\n    /// See: https://mirror.xyz/curiousapple.eth/pFqAdW2LiJ-6S4sg_u1z08k4vK6BCJ33LcyXpnNb8yU\n    function _erc1271CallerIsSafe() internal view virtual returns (bool) {\n        // The canonical `MulticallerWithSigner` at 0x000000000000D9ECebf3C23529de49815Dac1c4c\n        // is known to include the account in the hash to be signed.\n        return msg.sender == 0x000000000000D9ECebf3C23529de49815Dac1c4c;\n    }\n\n    /// @dev Returns whether the `hash` and `signature` are valid.\n    /// Override if you need non-ECDSA logic.\n    function _erc1271IsValidSignatureNowCalldata(bytes32 hash, bytes calldata signature)\n        internal\n        view\n        virtual\n        returns (bool)\n    {\n        return SignatureCheckerLib.isValidSignatureNowCalldata(_erc1271Signer(), hash, signature);\n    }\n\n    /// @dev Unwraps and returns the signature.\n    function _erc1271UnwrapSignature(bytes calldata signature)\n        internal\n        view\n        virtual\n        returns (bytes calldata result)\n    {\n        result = signature;\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Unwraps the ERC6492 wrapper if it exists.\n            // See: https://eips.ethereum.org/EIPS/eip-6492\n            if eq(\n                calldataload(add(result.offset, sub(result.length, 0x20))),\n                mul(0x6492, div(not(mload(0x60)), 0xffff)) // `0x6492...6492`.\n            ) {\n                let o := add(result.offset, calldataload(add(result.offset, 0x40)))\n                result.length := calldataload(o)\n                result.offset := add(o, 0x20)\n            }\n        }\n    }\n\n    /// @dev Returns whether the `signature` is valid for the `hash.\n    function _erc1271IsValidSignature(bytes32 hash, bytes calldata signature)\n        internal\n        view\n        virtual\n        returns (bool)\n    {\n        return _erc1271IsValidSignatureViaSafeCaller(hash, signature)\n            || _erc1271IsValidSignatureViaNestedEIP712(hash, signature)\n            || _erc1271IsValidSignatureViaRPC(hash, signature);\n    }\n\n    /// @dev Performs the signature validation without nested EIP-712 if the caller is\n    /// a safe caller. A safe caller must include the address of this account in the hash.\n    function _erc1271IsValidSignatureViaSafeCaller(bytes32 hash, bytes calldata signature)\n        internal\n        view\n        virtual\n        returns (bool result)\n    {\n        if (_erc1271CallerIsSafe()) result = _erc1271IsValidSignatureNowCalldata(hash, signature);\n    }\n\n    /// @dev ERC1271 signature validation (Nested EIP-712 workflow).\n    ///\n    /// This uses ECDSA recovery by default (see: `_erc1271IsValidSignatureNowCalldata`).\n    /// It also uses a nested EIP-712 approach to prevent signature replays when a single EOA\n    /// owns multiple smart contract accounts,\n    /// while still enabling wallet UIs (e.g. Metamask) to show the EIP-712 values.\n    ///\n    /// Crafted for phishing resistance, efficiency, flexibility.\n    /// __________________________________________________________________________________________\n    ///\n    /// Glossary:\n    ///\n    /// - `APP_DOMAIN_SEPARATOR`: The domain separator of the `hash` passed in by the application.\n    ///   Provided by the front end. Intended to be the domain separator of the contract\n    ///   that will call `isValidSignature` on this account.\n    ///\n    /// - `ACCOUNT_DOMAIN_SEPARATOR`: The domain separator of this account.\n    ///   See: `EIP712._domainSeparator()`.\n    /// __________________________________________________________________________________________\n    ///\n    /// For the `TypedDataSign` workflow, the final hash will be:\n    /// ```\n    ///     keccak256(\\x19\\x01 ‖ APP_DOMAIN_SEPARATOR ‖\n    ///         hashStruct(TypedDataSign({\n    ///             contents: hashStruct(originalStruct),\n    ///             name: keccak256(bytes(eip712Domain().name)),\n    ///             version: keccak256(bytes(eip712Domain().version)),\n    ///             chainId: eip712Domain().chainId,\n    ///             verifyingContract: eip712Domain().verifyingContract,\n    ///             salt: eip712Domain().salt,\n    ///             extensions: keccak256(abi.encodePacked(eip712Domain().extensions))\n    ///         }))\n    ///     )\n    /// ```\n    /// where `‖` denotes the concatenation operator for bytes.\n    /// The order of the fields is important: `contents` comes before `name`.\n    ///\n    /// The signature will be `r ‖ s ‖ v ‖\n    ///     APP_DOMAIN_SEPARATOR ‖ contents ‖ contentsType ‖ uint16(contentsType.length)`,\n    /// where `contents` is the bytes32 struct hash of the original struct.\n    ///\n    /// The `APP_DOMAIN_SEPARATOR` and `contents` will be used to verify if `hash` is indeed correct.\n    /// __________________________________________________________________________________________\n    ///\n    /// For the `PersonalSign` workflow, the final hash will be:\n    /// ```\n    ///     keccak256(\\x19\\x01 ‖ ACCOUNT_DOMAIN_SEPARATOR ‖\n    ///         hashStruct(PersonalSign({\n    ///             prefixed: keccak256(bytes(\\x19Ethereum Signed Message:\\n ‖\n    ///                 base10(bytes(someString).length) ‖ someString))\n    ///         }))\n    ///     )\n    /// ```\n    /// where `‖` denotes the concatenation operator for bytes.\n    ///\n    /// The `PersonalSign` type hash will be `keccak256(\"PersonalSign(bytes prefixed)\")`.\n    /// The signature will be `r ‖ s ‖ v`.\n    /// __________________________________________________________________________________________\n    ///\n    /// For demo and typescript code, see:\n    /// - https://github.com/junomonster/nested-eip-712\n    /// - https://github.com/frangio/eip712-wrapper-for-eip1271\n    ///\n    /// Their nomenclature may differ from ours, although the high-level idea is similar.\n    ///\n    /// Of course, if you have control over the codebase of the wallet client(s) too,\n    /// you can choose a more minimalistic signature scheme like\n    /// `keccak256(abi.encode(address(this), hash))` instead of all these acrobatics.\n    /// All these are just for widespread out-of-the-box compatibility with other wallet clients.\n    /// We want to create bazaars, not walled castles.\n    /// And we'll use push the Turing Completeness of the EVM to the limits to do so.\n    function _erc1271IsValidSignatureViaNestedEIP712(bytes32 hash, bytes calldata signature)\n        internal\n        view\n        virtual\n        returns (bool result)\n    {\n        bytes32 t = _typedDataSignFields();\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40) // Cache the free memory pointer.\n            // `c` is `contentsType.length`, which is stored in the last 2 bytes of the signature.\n            let c := shr(240, calldataload(add(signature.offset, sub(signature.length, 2))))\n            for {} 1 {} {\n                let l := add(0x42, c) // Total length of appended data (32 + 32 + c + 2).\n                let o := add(signature.offset, sub(signature.length, l)) // Offset of appended data.\n                mstore(0x00, 0x1901) // Store the \"\\x19\\x01\" prefix.\n                calldatacopy(0x20, o, 0x40) // Copy the `APP_DOMAIN_SEPARATOR` and `contents` struct hash.\n                // Use the `PersonalSign` workflow if the reconstructed hash doesn't match,\n                // or if the appended data is invalid, i.e.\n                // `appendedData.length &gt; signature.length || contentsType.length == 0`.\n                if or(xor(keccak256(0x1e, 0x42), hash), or(lt(signature.length, l), iszero(c))) {\n                    t := 0 // Set `t` to 0, denoting that we need to `hash = _hashTypedData(hash)`.\n                    mstore(t, _PERSONAL_SIGN_TYPEHASH)\n                    mstore(0x20, hash) // Store the `prefixed`.\n                    hash := keccak256(t, 0x40) // Compute the `PersonalSign` struct hash.\n                    break\n                }\n                // Else, use the `TypedDataSign` workflow.\n                // `TypedDataSign({ContentsName} contents,bytes1 fields,...){ContentsType}`.\n                mstore(m, \"TypedDataSign(\") // Store the start of `TypedDataSign`'s type encoding.\n                let p := add(m, 0x0e) // Advance 14 bytes to skip \"TypedDataSign(\".\n                calldatacopy(p, add(o, 0x40), c) // Copy `contentsType` to extract `contentsName`.\n                // `d &amp; 1 == 1` means that `contentsName` is invalid.\n                let d := shr(byte(0, mload(p)), 0x7fffffe000000000000010000000000) // Starts with `[a-z(]`.\n                // Store the end sentinel '(', and advance `p` until we encounter a '(' byte.\n                for { mstore(add(p, c), 40) } iszero(eq(byte(0, mload(p)), 40)) { p := add(p, 1) } {\n                    d := or(shr(byte(0, mload(p)), 0x120100000001), d) // Has a byte in \", )\\x00\".\n                }\n                mstore(p, \" contents,bytes1 fields,string n\") // Store the rest of the encoding.\n                mstore(add(p, 0x20), \"ame,string version,uint256 chain\")\n                mstore(add(p, 0x40), \"Id,address verifyingContract,byt\")\n                mstore(add(p, 0x60), \"es32 salt,uint256[] extensions)\")\n                p := add(p, 0x7f)\n                calldatacopy(p, add(o, 0x40), c) // Copy `contentsType`.\n                // Fill in the missing fields of the `TypedDataSign`.\n                calldatacopy(t, o, 0x40) // Copy the `contents` struct hash to `add(t, 0x20)`.\n                mstore(t, keccak256(m, sub(add(p, c), m))) // Store `typedDataSignTypehash`.\n                // The \"\\x19\\x01\" prefix is already at 0x00.\n                // `APP_DOMAIN_SEPARATOR` is already at 0x20.\n                mstore(0x40, keccak256(t, 0x120)) // `hashStruct(typedDataSign)`.\n                // Compute the final hash, corrupted if `contentsName` is invalid.\n                hash := keccak256(0x1e, add(0x42, and(1, d)))\n                signature.length := sub(signature.length, l) // Truncate the signature.\n                break\n            }\n            mstore(0x40, m) // Restore the free memory pointer.\n        }\n        if (t == bytes32(0)) hash = _hashTypedData(hash); // `PersonalSign` workflow.\n        result = _erc1271IsValidSignatureNowCalldata(hash, signature);\n    }\n\n    /// @dev For use in `_erc1271IsValidSignatureViaNestedEIP712`,\n    function _typedDataSignFields() private view returns (bytes32 m) {\n        (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        ) = eip712Domain();\n        /// @solidity memory-safe-assembly\n        assembly {\n            m := mload(0x40) // Grab the free memory pointer.\n            mstore(0x40, add(m, 0x120)) // Allocate the memory.\n            // Skip 2 words for the `typedDataSignTypehash` and `contents` struct hash.\n            mstore(add(m, 0x40), shl(248, byte(0, fields)))\n            mstore(add(m, 0x60), keccak256(add(name, 0x20), mload(name)))\n            mstore(add(m, 0x80), keccak256(add(version, 0x20), mload(version)))\n            mstore(add(m, 0xa0), chainId)\n            mstore(add(m, 0xc0), shr(96, shl(96, verifyingContract)))\n            mstore(add(m, 0xe0), salt)\n            mstore(add(m, 0x100), keccak256(add(extensions, 0x20), shl(5, mload(extensions))))\n        }\n    }\n\n    /// @dev Performs the signature validation without nested EIP-712 to allow for easy sign ins.\n    /// This function must always return false or revert if called on-chain.\n    function _erc1271IsValidSignatureViaRPC(bytes32 hash, bytes calldata signature)\n        internal\n        view\n        virtual\n        returns (bool result)\n    {\n        // Non-zero gasprice is a heuristic to check if a call is on-chain,\n        // but we can't fully depend on it because it can be manipulated.\n        // See: https://x.com/NoahCitron/status/1580359718341484544\n        if (tx.gasprice == uint256(0)) {\n            /// @solidity memory-safe-assembly\n            assembly {\n                mstore(gasprice(), gasprice())\n                // See: https://gist.github.com/Vectorized/3c9b63524d57492b265454f62d895f71\n                let b := 0x000000000000378eDCD5B5B0A24f5342d8C10485 // Basefee contract,\n                pop(staticcall(0xffff, b, codesize(), gasprice(), gasprice(), 0x20))\n                // If `gasprice &lt; basefee`, the call cannot be on-chain, and we can skip the gas burn.\n                if iszero(mload(gasprice())) {\n                    let m := mload(0x40) // Cache the free memory pointer.\n                    mstore(gasprice(), 0x1626ba7e) // `isValidSignature(bytes32,bytes)`.\n                    mstore(0x20, b) // Recycle `b` to denote if we need to burn gas.\n                    mstore(0x40, 0x40)\n                    let gasToBurn := or(add(0xffff, gaslimit()), gaslimit())\n                    // Burns gas computationally efficiently. Also, requires that `gas &gt; gasToBurn`.\n                    if or(eq(hash, b), lt(gas(), gasToBurn)) { invalid() }\n                    // Make a call to this with `b`, efficiently burning the gas provided.\n                    // No valid transaction can consume more than the gaslimit.\n                    // See: https://ethereum.github.io/yellowpaper/paper.pdf\n                    // Most RPCs perform calls with a gas budget greater than the gaslimit.\n                    pop(staticcall(gasToBurn, address(), 0x1c, 0x64, gasprice(), gasprice()))\n                    mstore(0x40, m) // Restore the free memory pointer.\n                }\n            }\n            result = _erc1271IsValidSignatureNowCalldata(hash, signature);\n        }\n    }\n}\n</code></pre>\n<h2><a name=\"security-considerations-24\" class=\"anchor\" href=\"https://ethereum-magicians.org#security-considerations-24\"></a>Security Considerations</h2>\n<h3><a name=\"rejecting-invalid-contentstypename-25\" class=\"anchor\" href=\"https://ethereum-magicians.org#rejecting-invalid-contentstypename-25\"></a>Rejecting invalid <code>contentsTypeName</code></h3>\n<p>Current major implementations of <code>eth_signTypedData</code> do not sanitize the names of custom types.</p>\n<p>A phishing website can craft a <code>contentsTypeName</code> with control characters to break out of the <code>PersonalSign</code> type encoding, resulting in the wallet client asking the user to sign an opaque hash.</p>\n<p>Requiring on-chain sanitization of <code>contentsTypeName</code> will block this phishing attack vector.</p>\n<h2><a name=\"copyright-26\" class=\"anchor\" href=\"https://ethereum-magicians.org#copyright-26\"></a>Copyright</h2>\n<p>Copyright and related rights waived via <a href=\"https://ethereum-magicians.org\">CC0</a>.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-7739-readable-typed-signatures-for-smart-accounts/20513\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-7739-readable-typed-signatures-for-smart-accounts/20513","pubDate":"Wed, 10 Jul 2024 03:21:14 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20513"},"source":{"@url":"https://ethereum-magicians.org/t/erc-7739-readable-typed-signatures-for-smart-accounts/20513.rss","#text":"ERC-7739: Readable Typed Signatures for Smart Accounts"},"filter":false},{"title":"RIP Idea: L2 Transaction Status Standard","dc:creator":"highlander","category":"RIPs","description":"<p>A recent discussion (June 2024) in the RollCall Telegram Group has yet again shown that a lack of standards around the processing status of an L2 transaction is confusing not only for users and developers (block explorers, wallets, smart contracts, chain analytics) but also for client teams themselves trying to understand what different statuses mean and what trust assumptions have been made for each status. Besides confusion, there are real security risks, especially for L2 bridges based on the processing status of an L2 transaction (finalized on the L2 but not on the L1 vs finalized on the L2 and the L1).</p>\n<p>This topic of discussion also arose in the <a href=\"https://github.com/ethereum-oasis-op/L2\" rel=\"noopener nofollow ugc\">OASIS Ethereum Open Projects L2 Standards WG</a> when discussing the <a href=\"https://github.com/ethereum-oasis-op/L2/pull/53\" rel=\"noopener nofollow ugc\">L2 Transaction Fee API specification</a>. The WG decided to make L2 Transaction Statuses their next work item.</p>\n<p>To start the discussion, the WG decided to propose a simple set of statuses both as a string and as a hex value, their definitions and trust assumptions. The minimal set of transaction statuses proposed is as follows:</p>\n<ul>\n<li><strong>L2 Pending</strong>: An L2 transaction submitted to an L2, and waiting to be processed by a sequencer. <strong>Trust Assumption</strong>: No inclusion guarantee on the L2</li>\n<li><strong>L2 Replaced</strong>: An L2 transaction that was “Pending” was replaced by another L2 transaction. T<strong>rust Assumption</strong>: Same as L2 Pending</li>\n<li><strong>L2 Dropped</strong>: An L2 transaction that was removed from the L2 processing queue. <strong>Trust Assumption</strong>: NA</li>\n<li><strong>L2 Confirmed</strong>: An L2 transaction processed by a sequencer and assigned an order in a proposed L2 block by the sequencer by applying an L2 client-specific L2 transaction ordering protocol. <strong>Trust Assumption</strong>: The L2 transaction order guarantee is based on the security guarantee of the ordering protocol. Inclusion in finalized L2 and L1 blocks is not guaranteed.</li>\n<li><strong>L2 Included, L1 Pending</strong>: An L2 transaction included in an L2 block but not yet submitted to the L1. <strong>Trust Assumption</strong>: The L2 inclusion guarantee is dependent on the submission guarantee of the L2 block to the L1 and L1 Finalization.</li>\n<li><strong>L2 Included, L1 Included</strong>: An L2 transaction included in an L2 block submitted to the L1. Trust Assumption: The L2 inclusion guarantee is dependent on L1 finalization.</li>\n<li><strong>L2 Finalized, L1 Finalized</strong>: An L2 transaction included in a L2 block that has been included in a finalized L1 transaction. <strong>Trust Assumption</strong>: The L2 transaction finalization guarantee is equivalent to an L1 transaction finalization guarantee in a finalized L1 block.</li>\n</ul>\n            <p><small>11 posts - 7 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/rip-idea-l2-transaction-status-standard/20511\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/rip-idea-l2-transaction-status-standard/20511","pubDate":"Tue, 09 Jul 2024 23:30:37 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20511"},"source":{"@url":"https://ethereum-magicians.org/t/rip-idea-l2-transaction-status-standard/20511.rss","#text":"RIP Idea: L2 Transaction Status Standard"},"filter":false},{"title":"ERC-7738: Permissionless Script Registry","dc:creator":"JamesB","category":"ERCs","description":"<p>Discussion topic for EIP-7738</p>\n<p>This is the discussion on a draft EIP for an onchain script registry.</p>\n<h2><a name=\"abstract-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#abstract-1\"></a>Abstract</h2>\n<p>This EIP provides a means to create a standard registry for locating executable scripts associated with contracts.</p>\n<h2><a name=\"motivation-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#motivation-2\"></a>Motivation</h2>\n<p><a href=\"https://github.com/ethereum/ERCs/blob/master/ERCS/erc-5169.md\" rel=\"noopener nofollow ugc\">ERC-5169</a> (<code>scriptURI</code>) provides a client script lookup method for contracts. This requires the contract to have implemented the ERC-5169 interface at the time of construction (or allow an upgrade path).</p>\n<p>This proposal outlines a contract that can supply prototype and certified scripts. The contract would be a singleton instance multichain that would be deployed at identical addresses on supported chains.</p>\n<h3><a name=\"overview-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#overview-3\"></a>Overview</h3>\n<p>The registry contract will supply a set of URI links for a given contract address. These URI links point to script programs that can be fetched by a wallet, viewer or mini-dapp.</p>\n<p>The pointers can be set using a setter in the registry contract.</p>\n<p>The scripts provided could be authenticated in various ways:</p>\n<ol>\n<li>The target contract which the setter specifies implements the <code>Ownable</code> interface. Once the script is fetched, the signature can be verified to match the Owner(). In the case of TokenScript this can be checked by a dapp or wallet using the TokenScript SDK, the TokenScript online verification service, or by extracting the signature from the XML, taking a keccak256 of the script and ecrecover the signing key address.</li>\n<li>If the contract does not implement Ownable, further steps can be taken:<br>\na. The hosting app/wallet can acertain the deployment key using 3rd party API or block explorer. The implementing wallet, dapp or viewer would then check the signature matches this deployment key.<br>\nb. Signing keys could be pre-authenticated by a hosting app, using an embedded keychain.<br>\nc. A governance token could allow a script council to authenticate requests to set and validate keys.</li>\n</ol>\n<p>If these criteria are not met:</p>\n<ul>\n<li>For mainnet implementations the implementing wallet should be cautious about using the script - it would be at the app and/or user’s discretion.</li>\n<li>For testnets, it is acceptable to allow the script to function, at the discretion of the wallet provider.</li>\n</ul>\n<h2><a name=\"specification-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#specification-4\"></a>Specification</h2>\n<p>The keywords “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY” and “OPTIONAL” in this document are to be interpreted as described in RFC 2119.</p>\n<p>The contract MUST implement the IDecentralisedRegistry interface.<br>\nThe contract MUST emit the ScriptUpdate event when the script is updated.<br>\nThe contract SHOULD order the scriptURI returned so that the owner script is returned first (in the case of simple implementations the wallet will pick the first scriptURI returned).</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-solidity\">interface IDecentralisedRegistry {\n    /// @dev This event emits when the scriptURI is updated, \n    /// so wallets implementing this interface can update a cached script\n    event ScriptUpdate(address indexed contractAddress, string[] newScriptURI);\n\n    /// @notice Get the scriptURI for the contract\n    /// @return The scriptURI\n    function scriptURI(address contractAddress) external view returns (string[] memory);\n\n    /// @notice Update the scriptURI \n    /// emits event ScriptUpdate(address indexed contractAddress, scriptURI memory newScriptURI);\n    function setScriptURI(address contractAddress, string[] memory scriptURIList) external;\n}\n</code></pre>\n<p>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in RFC 2119 and RFC 8174.</p>\n<h2><a name=\"rationale-5\" class=\"anchor\" href=\"https://ethereum-magicians.org#rationale-5\"></a>Rationale</h2>\n<p>This method allows contracts written without the ERC-5169 interface to associate scripts with themselves, and avoids the need for a centralised online server, with subsequent need for security and the requires an organisation to become a gatekeeper for the database.</p>\n<h2><a name=\"reference-implementation-6\" class=\"anchor\" href=\"https://ethereum-magicians.org#reference-implementation-6\"></a>Reference Implementation</h2>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-solidity\">import \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract DecentralisedRegistry is IDecentralisedRegistry {\n    struct ScriptEntry {\n        mapping(address =&gt; string[]) scriptURIs;\n        address[] addrList;\n    }\n\n    mapping(address =&gt; ScriptEntry) private _scriptURIs;\n\n    function setScriptURI(\n        address contractAddress,\n        string[] memory scriptURIList\n    ) public {\n        require (scriptURIList.length &gt; 0, \"&gt; 0 entries required in scriptURIList\");\n        bool isOwnerOrExistingEntry = Ownable(contractAddress).owner() == msg.sender \n            || _scriptURIs[contractAddress].scriptURIs[msg.sender].length &gt; 0;\n        _scriptURIs[contractAddress].scriptURIs[msg.sender] = scriptURIList;\n        if (!isOwnerOrExistingEntry) {\n            _scriptURIs[contractAddress].addrList.push(msg.sender);\n        }\n        \n        emit ScriptUpdate(contractAddress, msg.sender, scriptURIList);\n    }\n\n    // Return the list of scriptURI for this contract.\n    // Order the return list so `Owner()` assigned scripts are first in the list\n    function scriptURI(\n        address contractAddress\n    ) public view returns (string[] memory) {\n        //build scriptURI return list, owner first\n        address contractOwner = Ownable(contractAddress).owner();\n        address[] memory addrList = _scriptURIs[contractAddress].addrList;\n        uint256 i;\n\n        //now calculate list length\n        uint256 listLen = _scriptURIs[contractAddress].scriptURIs[contractOwner].length;\n        for (i = 0; i &lt; addrList.length; i++) {\n            listLen += _scriptURIs[contractAddress].scriptURIs[addrList[i]].length;\n        }\n\n        string[] memory ownerScripts = new string[](listLen);\n        uint256 scriptIndex = 0;\n\n        // Add owner strings\n        for (i = 0; i &lt; _scriptURIs[contractAddress].scriptURIs[contractOwner].length; i++) {\n            ownerScripts[scriptIndex++] = _scriptURIs[contractAddress].scriptURIs[contractOwner][i];\n        }\n\n        // remainder\n        for (i = 0; i &lt; addrList.length; i++) {\n            for (uint256 j = 0; j &lt; _scriptURIs[contractAddress].scriptURIs[addrList[i]].length; j++) {\n                string memory thisScriptURI = _scriptURIs[contractAddress].scriptURIs[addrList[i]][j];\n                if (bytes(thisScriptURI).length &gt; 0) {\n                    ownerScripts[scriptIndex++] = thisScriptURI;\n                }\n            }\n        }\n\n        //fill remainder of any removed strings\n        for (i = scriptIndex; i &lt; listLen; i++) {\n            ownerScripts[scriptIndex++] = \"\";\n        }\n\n        return ownerScripts;\n    }\n}\n</code></pre>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-7738-permissionless-script-registry/20503\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-7738-permissionless-script-registry/20503","pubDate":"Tue, 09 Jul 2024 10:01:39 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20503"},"source":{"@url":"https://ethereum-magicians.org/t/erc-7738-permissionless-script-registry/20503.rss","#text":"ERC-7738: Permissionless Script Registry"},"filter":false},{"title":"ERC-7731: Vulnerability and Exposure Identifier","dc:creator":"dimitrysc","category":"ERCs","description":"<p>Currently, there is no clear, common language to specify vulnerabilities in crypto. Ethical hackers often refer to vulnerabilities using a combination of “Protocol Name + Exploit,” which can be very confusing, especially when multiple attacks occur on the same protocol.</p>\n<p>To reduce communication costs between protocol developers and ethical hackers and build on the security practices of Web2, we propose the VE (Vulnerability and Exposure) identifier. This EIP allows any organization or individual to maintain its own VE on-chain, standardizing the language used to describe and report vulnerabilities.</p>\n<aside class=\"onebox githubpullrequest\" data-onebox-src=\"https://github.com/ethereum/ERCs/pull/513\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/ethereum/ERCs/pull/513\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com/ethereum/ERCs</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"github-row\">\n\n\n\n    <div class=\"github-icon-container\" title=\"Pull Request\">\n      <svg width=\"60\" height=\"60\" class=\"github-icon\" viewBox=\"0 0 12 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>\n    </div>\n\n  <div class=\"github-info-container\">\n\n\n\n      <h4>\n        <a href=\"https://github.com/ethereum/ERCs/pull/513\" target=\"_blank\" rel=\"noopener nofollow ugc\">Add ERC: Vulnerability and Exposure Identifier Specification and Indexing</a>\n      </h4>\n\n    <div class=\"branches\">\n      <code>ethereum:master</code> ← <code>SecurFi:master</code>\n    </div>\n\n      <div class=\"github-info\">\n        <div class=\"date\">\n          opened <span class=\"discourse-local-date\" data-format=\"ll\" data-date=\"2024-06-30\" data-time=\"09:31:16\" data-timezone=\"UTC\">09:31AM - 30 Jun 24 UTC</span>\n        </div>\n\n        <div class=\"user\">\n          <a href=\"https://github.com/dimitrysuen\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <img alt=\"dimitrysuen\" src=\"https://ethereum-magicians.org/uploads/default/original/2X/0/0a7dbb662442ff0349c951a317c7f62dc897668c.png\" class=\"onebox-avatar-inline\" width=\"20\" height=\"20\" data-dominant-color=\"AA6363\">\n            dimitrysuen\n          </a>\n        </div>\n\n        <div class=\"lines\" title=\"1 commits changed 2 files with 182 additions and 0 deletions\">\n          <a href=\"https://github.com/ethereum/ERCs/pull/513/files\" target=\"_blank\" rel=\"noopener nofollow ugc\">\n            <span class=\"added\">+182</span>\n            <span class=\"removed\">-0</span>\n          </a>\n        </div>\n      </div>\n  </div>\n</div>\n\n  <div class=\"github-row\">\n    <p class=\"github-body-container\">To address the absence of a standardized reference method for vulnerabilities an<span class=\"show-more-container\"><a href=\"https://github.com/ethereum/ERCs/pull/513\" target=\"_blank\" rel=\"noopener nofollow ugc\" class=\"show-more\">…</a></span><span class=\"excerpt hidden\">d to reduce communication costs between protocol developers and ethical hackers, this ERC proposes a rule for creating unique identifiers for vulnerabilities. The aim is to establish a common language in these scenarios.</span></p>\n  </div>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-7731-vulnerability-and-exposure-identifier/20497\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-7731-vulnerability-and-exposure-identifier/20497","pubDate":"Mon, 08 Jul 2024 13:16:00 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20497"},"source":{"@url":"https://ethereum-magicians.org/t/erc-7731-vulnerability-and-exposure-identifier/20497.rss","#text":"ERC-7731: Vulnerability and Exposure Identifier"},"filter":false},{"title":"ERC-7714: Simple Permissions Checks","dc:creator":"jeroen","category":"ERCs","description":"<p>Discussion for <a href=\"https://github.com/ethereum/ERCs/pull/435\" rel=\"noopener nofollow ugc\"> Add ERC: Simple Permissions Checks #435</a></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/erc-7714-simple-permissions-checks/20495\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/erc-7714-simple-permissions-checks/20495","pubDate":"Mon, 08 Jul 2024 08:39:10 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20495"},"source":{"@url":"https://ethereum-magicians.org/t/erc-7714-simple-permissions-checks/20495.rss","#text":"ERC-7714: Simple Permissions Checks"},"filter":false},{"title":"PeerDAS breakout #3, July 9 2024","dc:creator":"abcoathup","category":"Working Groups","description":"<h3><a name=\"agenda-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#agenda-1\"></a>Agenda</h3>\n<p><a href=\"https://github.com/ethereum/pm/issues/1093\" class=\"inline-onebox\">PeerDAS Breakout Room #3 · Issue #1093 · ethereum/pm · GitHub</a></p>\n<p>Moderator: <a class=\"mention\" href=\"https://ethereum-magicians.org/u/hwwang\">@hwwang</a></p>\n<h3><a name=\"key-items-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#key-items-2\"></a>Key items</h3>\n<p>by <a class=\"mention\" href=\"https://ethereum-magicians.org/u/hwwang\">@hwwang</a> <em>(from Eth R&amp;D <a href=\"https://discord.com/channels/595666850260713488/988798065894907934/1260238069685289053\" class=\"inline-onebox\">Discord</a>)</em>:</p>\n<ul>\n<li><code>devnet-1</code> has many forks that would be hard to recover. See the meeting notes for the issues)</li>\n<li><strong>ACTION: relaunch <code>devnet-2</code> by the end of the week with all the client fixes.</strong></li>\n<li>Please review “Decouple network subnets from das-core” PR (a potential <code>devnet-3</code> update): <a href=\"https://github.com/ethereum/consensus-specs/pull/3832\" class=\"inline-onebox\">EIP-7594: Decouple network subnets from das-core by ppopth · Pull Request #3832 · ethereum/consensus-specs · GitHub</a></li>\n<li>Teams want to include <a href=\"https://github.com/ethereum/consensus-specs/pull/3800\" class=\"inline-onebox\">Specify the max blobs per block with each payload by ralexstokes · Pull Request #3800 · ethereum/consensus-specs · GitHub</a> into Pectra so that PeerDAS can be a pure network update (not hard fork).</li>\n</ul>\n<h3><a name=\"notes-chat-log-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#notes-chat-log-3\"></a>Notes &amp; chat log</h3>\n<aside class=\"onebox googledocs\" data-onebox-src=\"https://docs.google.com/document/d/1Ng2IrCe28kTt1BnIsjtMlKHq2MHgaja24LhFXSvqfJQ/edit\">\n  <header class=\"source\">\n\n      <a href=\"https://docs.google.com/document/d/1Ng2IrCe28kTt1BnIsjtMlKHq2MHgaja24LhFXSvqfJQ/edit\" target=\"_blank\" rel=\"noopener\">docs.google.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <a href=\"https://docs.google.com/document/d/1Ng2IrCe28kTt1BnIsjtMlKHq2MHgaja24LhFXSvqfJQ/edit\" target=\"_blank\" rel=\"noopener\"><span class=\"googledocs-onebox-logo g-docs-logo\"></span></a>\n\n<h3><a href=\"https://docs.google.com/document/d/1Ng2IrCe28kTt1BnIsjtMlKHq2MHgaja24LhFXSvqfJQ/edit\" target=\"_blank\" rel=\"noopener\">PeerDAS Breakout Room notes</a></h3>\n\n<p>PeerDAS Breakout Room #3 Date: 2024.07.09 Agenda: https://github.com/ethereum/pm/issues/1093 YouTube Video:   Client updates Prysm:  testing with new KZG APIs working on fixing bugs in devnet-1 Lighthouse: Mostly working on sync, fixed an issue with...</p>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<h3><a name=\"recording-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#recording-4\"></a>Recording</h3>\n<p><a href=\"https://www.youtube.com/watch?v=kr356fArKbI&amp;t=487s\">PeerDAS Breakout Room #3</a></p>\n\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/peerdas-breakout-3-july-9-2024/20482\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/peerdas-breakout-3-july-9-2024/20482","pubDate":"Sat, 06 Jul 2024 01:35:39 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20482"},"source":{"@url":"https://ethereum-magicians.org/t/peerdas-breakout-3-july-9-2024/20482.rss","#text":"PeerDAS breakout #3, July 9 2024"},"filter":false},{"title":"All Core Devs - Consensus (ACDC) #137, July 11 2024","dc:creator":"abcoathup","category":"Working Groups","description":"<h3><a name=\"agenda-1\" class=\"anchor\" href=\"https://ethereum-magicians.org#agenda-1\"></a>Agenda</h3>\n<p><a href=\"https://github.com/ethereum/pm/issues/1096\" class=\"inline-onebox\">Consensus-layer Call 137 · Issue #1096 · ethereum/pm · GitHub</a></p>\n<p>Moderator: <a class=\"mention\" href=\"https://ethereum-magicians.org/u/ralexstokes\">@ralexstokes</a></p>\n<h3><a name=\"summary-2\" class=\"anchor\" href=\"https://ethereum-magicians.org#summary-2\"></a>Summary</h3>\n<p><strong>ACDC <span class=\"hashtag-raw\">#137</span> recap</strong>  by <a class=\"mention\" href=\"https://ethereum-magicians.org/u/ralexstokes\">@ralexstokes</a> <em>(from Eth R&amp;D <a href=\"https://discord.com/channels/595666850260713488/745077610685661265/1261006075818414263\" class=\"inline-onebox\">Discord</a>)</em><br>\nShorter call today!</p>\n<p>We began with Pectra:</p>\n<ul>\n<li>CL clients are generally ready for <code>pectra-devnet-1</code></li>\n<li>CL clients working well with static test vectors</li>\n<li>Given a few EL clients are ready, we should launch <code>pectra-devnet-1</code> as soon as possible, aiming for sometime next week</li>\n</ul>\n<p>Then, turned to PeerDAS:</p>\n<ul>\n<li><code>peerdas-devnet-1</code> launched but surfaced a number of client bugs which are being resolved</li>\n<li>Expect a <code>peerdas-devnet-2</code> soon as client teams continue to iterate on scaling blob bandwidth</li>\n<li>I gave an update on the work to uncouple the blob max and target values between the consensus and execution layers\n<ul>\n<li>After reviewing the syncing semantics, it appears the check for the blob maximum on the EL is redundant and we can safely drop that check and have it done solely at the CL</li>\n<li>We also want the same uncoupling treatment for the blob target so this value will be driven by the CL but needs to be included in the EL block header for the security of client sync</li>\n<li>Expect updates to <a href=\"https://github.com/ethereum/consensus-specs/pull/3800\">this PR</a> on the CL and an EIP for the 4844 changes soon™!</li>\n</ul>\n</li>\n</ul>\n<p>Wrapped the call with an update on some work to expand the fork choice testing</p>\n<ul>\n<li>Presentation from TXRX research here: <a href=\"https://docs.google.com/presentation/d/1W2DUwcu411cebQXi_9m-zVk1MASirpIop1cPdqg8dGE/edit#slide=id.g2ead0dd7c78_2_97\" class=\"inline-onebox\">FC compliance test suite on ACDC - Google Slides</a></li>\n<li>This work introduces tooling to expand the scope of the fork choice test suite for static coverage in clients</li>\n<li>Uses a constraint-driven programming language to generate interesting test cases which extend the static test corpus CL clients use for conformance testing</li>\n<li>CTA: CL teams please take a look and incorporate into your client for enhanced coverage</li>\n</ul>\n<p>See you next time!</p>\n<h3><a name=\"recording-3\" class=\"anchor\" href=\"https://ethereum-magicians.org#recording-3\"></a>Recording</h3>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://www.youtube.com/live/IXgfhk_bFwA?t=160s\">\n  <header class=\"source\">\n      <img src=\"https://ethereum-magicians.org/uploads/default/original/2X/7/71112aff95f0dad288aab1f27df4561db5294745.png\" class=\"site-icon\" data-dominant-color=\"FF1010\" width=\"16\" height=\"16\">\n\n      <a href=\"https://www.youtube.com/live/IXgfhk_bFwA?t=160s\" target=\"_blank\" rel=\"noopener\">YouTube</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:480/360;\"><img src=\"https://ethereum-magicians.org/uploads/default/original/2X/d/d96fc998480769431bc8968edfc27724d820cebb.jpeg\" class=\"thumbnail\" data-dominant-color=\"A2A5BA\" width=\"480\" height=\"360\"></div>\n\n<h3><a href=\"https://www.youtube.com/live/IXgfhk_bFwA?t=160s\" target=\"_blank\" rel=\"noopener\">Consensus Layer Meeting 137 [2024-7-11]</a></h3>\n\n  <p>https://github.com/ethereum/pm/issues/1096</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<h3><a name=\"transcript-4\" class=\"anchor\" href=\"https://ethereum-magicians.org#transcript-4\"></a>Transcript</h3>\n<p>[To be added]</p>\n<h3><a name=\"additional-info-5\" class=\"anchor\" href=\"https://ethereum-magicians.org#additional-info-5\"></a>Additional info</h3>\n<p>Notes by <a class=\"mention\" href=\"https://ethereum-magicians.org/u/christine_dkim\">@Christine_dkim</a>: <a href=\"https://www.galaxy.com/insights/research/ethereum-all-core-developers-consensus-call-137-writeup/\" class=\"inline-onebox\">Ethereum All Core Developers Consensus Call #137 Writeup | Galaxy</a></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethereum-magicians.org/t/all-core-devs-consensus-acdc-137-july-11-2024/20481\">Read full topic</a></p>","link":"https://ethereum-magicians.org/t/all-core-devs-consensus-acdc-137-july-11-2024/20481","pubDate":"Sat, 06 Jul 2024 01:32:36 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethereum-magicians.org-topic-20481"},"source":{"@url":"https://ethereum-magicians.org/t/all-core-devs-consensus-acdc-137-july-11-2024/20481.rss","#text":"All Core Devs - Consensus (ACDC) #137, July 11 2024"},"filter":false}]}}}