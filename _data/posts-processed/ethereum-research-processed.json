{"rss":{"@version":"2.0","@xmlns:discourse":"http://www.discourse.org/","@xmlns:atom":"http://www.w3.org/2005/Atom","@xmlns:dc":"http://purl.org/dc/elements/1.1/","channel":{"title":"Ethereum Research - Latest topics","link":"https://ethresear.ch/latest","description":"Latest topics","lastBuildDate":"Thu, 02 May 2024 16:37:01 +0000","atom:link":{"@href":"https://ethresear.ch/latest.rss","@rel":"self","@type":"application/rss+xml"},"item":[{"title":"CEX/DEX arbitrage, transaction fees, block times, and LP profits","dc:creator":"atiselsts","category":"Economics","description":"<p>It’s widely recognized that CEX/DEX arbitrage trades create a large part of DEX volume, perhaps even the majority of that volume. The <a href=\"https://a16zcrypto.com/posts/article/lvr-quantifying-the-cost-of-providing-liquidity-to-automated-market-makers/\" rel=\"noopener nofollow ugc\">Loss Versus Rebalancing</a> (LVR) model stands out as a key tool for quantifying and modeling this arbitrage volume from a theoretical perspective. However, the research focusing on LVR  so far has mostly ignored transaction cost as a parameter in CEX/DEX arbitrage.</p>\n<p>This post aims to extend the LVR model to blockchains such as Ethereum’s mainnet, where CEX/DEX arbitrage transactions are expected to have a significant fixed cost term. It conceptualizes LVR as a quantity that is distributed between three primary actors: (1) the LPs of the AMM, (2) the searcher-builder-proposer (SBP) as an aggregate entity, and (3) ETH holders, due to the block basefee that is burned by each transaction. Some implications are:</p>\n<ul>\n<li>As the block time is decreased, an increased share of the nominal LVR is spent on transaction fees.</li>\n<li>Liquidity provider (LP) losses from arbitrage trades do not have the same magnitude as the profits of the arbitrager (searcher-builder-proposer), and as such, are not accurately predicted by a model that approximates them with the square root of the block time.</li>\n<li>Changes in Ethereum’s block time (either increase or decrease) are expected to affect the profitability of AMM LPs, but in many situations, other factors are more important, including the transaction fees.</li>\n</ul>\n<p><em>A more explanatory and less formal version of this post is available on <a href=\"https://atise.medium.com/anatomy-of-cex-dex-arbitrage-481936c83831\" rel=\"noopener nofollow ugc\">Medium</a>.</em></p>\n<h1><a name=\"background-1\" class=\"anchor\" href=\"https://ethresear.ch#background-1\"></a>Background</h1>\n<p>According to (<a href=\"https://arxiv.org/abs/2208.06046\" rel=\"noopener nofollow ugc\">Millionis 2022</a>, <a href=\"https://arxiv.org/abs/2305.14604\" rel=\"noopener nofollow ugc\">Millionis 2023</a>) the expected instantaneous LVR is :</p>\n<p><span class=\"math\">\n\\overline{\\mathrm{LVR}} \\triangleq \\lim _{T \\rightarrow 0} \\frac{\\mathrm{E}\\left[\\mathrm{LVR}_T\\right]}{T}=\\frac{\\sigma^2 P}{2} \\times y^{* \\prime}(P) </span> .</p>\n<p>This quantity depends only on the volatility, price, and marginal liquidity of the pool. By integrating the expected instantaneous LVR over time, we can obtain the expected LVR for a time period <span class=\"math\">t</span>. Once again, it is not dependent on external factors such as the swap fees, block times, transaction costs, etc., and can serve as a nominal baseline metric for any further investigations in this area.</p>\n<p>In (Millionis 2023) the authors push their LVR model further, and consider a situation when the AMM has a trading fee <span class=\"math\">γ ≥ 0</span>, and that arbitrageurs arrive to trade on the AMM at discrete times according to the arrivals of a Poisson process with rate <span class=\"math\">λ &gt; 0</span>. They extend the asymptotic analysis of arbitrage profit in a fast block regime (<span class=\"math\">\\lambda \\rightarrow \\infty</span>). They establish a key result that <span class=\"math\">\\overline{ARB} = Θ( \\sqrt{λ^{-1}} )</span>, where <span class=\"math\">\\overline{ARB}</span> is the expected arbitrage profits over time. The authors do not explicitly discuss the case when block times are not Poisson distributed, however, intuitively, one can expect the approximation to remain reasonably accurate when the blocks are uniformly distributed. To formalize this idea: <span class=\"math\">\\overline{ARB} = Θ( \\sqrt{BT} )</span>, where <span class=\"math\">BT</span> is the average block time.</p>\n<p>One key question is whether we see this formula play out in real-world data? A group of research papers generally confirm the <span class=\"math\">\\sqrt{BT}</span> model:</p>\n<ul>\n<li>(<a href=\"https://arxiv.org/abs/2308.04159\" rel=\"noopener nofollow ugc\">McMenamin 2023</a>) draws an analogy between the model and the time value of options, which “typically grows proportionally to the square root of time to expiration.”</li>\n<li>(<a href=\"https://arxiv.org/abs/2403.09494v2\" rel=\"noopener nofollow ugc\">Adams 2024</a>) describe shorter block times as a reason for  increased fee returns for liquidity providers, stressing the difference between Optimism and Arbitrum, in favor of later due to shorter blocks.</li>\n<li>(<a href=\"https://arxiv.org/abs/2404.05803\" rel=\"noopener nofollow ugc\">Fritsch 2024</a>) empirically study the arbitrage profits predicted by the LVR model, and conclude that “our empirical findings come close to [the <span class=\"math\">\\sqrt{BT}</span> model] for most pairs and block times larger than 1s”, and attempt to explain any deviations as a result of uniform block times, and price action that does not match the Geometric Brownian motion (GBM) model. However, they focus on arbitrage profits, not on LP losses.</li>\n</ul>\n<p>However:</p>\n<ul>\n<li>(<a href=\"https://arxiv.org/abs/2312.13749\" rel=\"noopener nofollow ugc\">Dahi 2023</a>) investigate AMM on the XRP ledger and find only a tiny impact on the LPs: 0.35% in relative terms, if block time in simulations is reduced from 12 seconds to 4 seconds. This is much smaller than predicted by the <span class=\"math\">\\sqrt{BT}</span> model.</li>\n<li>The Uniswap Foundation’s <a href=\"https://medium.com/@atise/liquidity-provider-strategies-for-uniswap-v3-loss-versus-rebalancing-lvr-ee0ffdf1f937\" rel=\"noopener nofollow ugc\">LP strategies series</a> include <a href=\"https://github.com/atiselsts/uniswap-lp-articles-code/blob/500d54032e00db88147db97124acab66a82d3979/plot_article_3.py\" rel=\"noopener nofollow ugc\">simulation results</a> that show a limited dependence on the block time, overshadowed by other factors.</li>\n</ul>\n<p>How do we reconcile these differing results and bridge the gap between theory and practice?</p>\n<p>The LVR model treats the arbitrage problem as a two-player, zero-sum game, where <span class=\"math\">\\overline{ARB} = - \\overline{LP} </span> (where the latter term refers to the expected LP profits). However, this assumption is not valid in the post EIP-1559 world, where transactions cannot be free. Each arbitrage trade not only divides profits among the searcher, builder, and proposer (“SBP” further in this article) but also burns some ETH, contingent on the blockspace demand at the time of the arbitrage. To borrow a term from physics, the basefee introduces a friction in the process. This friction eliminates a significant portion of potential trades, and reduces LP income.</p>\n<h1><a name=\"analyzing-the-single-trade-lvr-2\" class=\"anchor\" href=\"https://ethresear.ch#analyzing-the-single-trade-lvr-2\"></a>Analyzing the single-trade LVR</h1>\n<p>Let’s look at the details of how LVR arises in real-world arbitrage trades. The difference between the DEX and CEX quoted prices (<span class=\"math\">P_{DEX}</span> and <span class=\"math\">P_{CEX}</span>) triggers the arbitrage trade. However, the trade is not going to happen if:</p>\n<ul>\n<li>The CEX price is in the non-arbtrage region created by AMM’s swap fees.</li>\n<li>The CEX price is in the friction region, created by the chain’s basefees and other factors (CEX fees, other  operational costs for arbitrager, risk aversion, etc.).</li>\n</ul>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/6/7/672739182dd8b8981b4f531f74a221f1d289dd42.png\" alt=\"No-trade and friction regions\" data-base62-sha1=\"eIxdi9yS6EkUXdjFAecp1xhaT4e\" width=\"498\" height=\"195\"><br>\n<em><strong>Figure 1:</strong> No-trade and friction regions of an AMM pool with 0.05% swap fee.</em></p>\n<p>Moreover, the nominal single-trade LVR is “distributed” between three entities:</p>\n<ul>\n<li>Liquidity providers.</li>\n<li>The searcher, block builder, and block proposer (SBP) as a collective entity.</li>\n<li>Holders of ETH, due to the ETH burned in the transaction.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/5/953c0c9cfa203ff4a017fba5b4f37c5d4c17b2e3.png\" data-download-href=\"https://ethresear.ch/uploads/default/953c0c9cfa203ff4a017fba5b4f37c5d4c17b2e3\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/5/953c0c9cfa203ff4a017fba5b4f37c5d4c17b2e3_2_345x86.png\" alt=\"image\" data-base62-sha1=\"libNtLgylsSTNZVtY5aRKipuh9h\" width=\"345\" height=\"86\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/5/953c0c9cfa203ff4a017fba5b4f37c5d4c17b2e3_2_345x86.png, https://ethresear.ch/uploads/default/optimized/3X/9/5/953c0c9cfa203ff4a017fba5b4f37c5d4c17b2e3_2_517x129.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/9/5/953c0c9cfa203ff4a017fba5b4f37c5d4c17b2e3_2_690x172.png 2x\" data-dominant-color=\"9BB9AC\"></a></div><br>\n<em><strong>Figure 2:</strong> The nominal LVR is distributed between three entities: ETH holders (due to the burned basefees), LPs, and the searcher/builder/proposer as a collective entity.</em><p></p>\n<p><strong>LPs</strong> receive the swap fee, while the <strong>SBP</strong> collects the arbitrage profits, which are subsequently divided among these three actors. It’s no surprise that integrated searchers-builders dominate the arbitrage market (<a href=\"https://arxiv.org/abs/2401.01622\" rel=\"noopener nofollow ugc\">Heimbach 2024</a>), as for them it is simpler to divide up the profits. <strong>ETH</strong> <strong>holders</strong> do not directly receive compensation, but burning the basefee creates a deflationary pressure on ETH as an asset.</p>\n<p>By comparing the nominal single-trade LVR with the LP fees from that trade, we can assess the fairness of the trade to the LP. In a scenario where price evolution is smooth without any jumps, the LP fee nearly recoups the LVR, and the LP loss is minimal. However, if the DEX-to-CEX price difference fluctuates due to block time granularity or actual price discontinuities on the CEX, the LP fee becomes smaller than the LVR, resulting in some loss for the LP against this (theoretical) rebalancing strategy. One example is shown in the figure below:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/7/27985324648027915d4f1d0cbb40dcb010494d61.png\" data-download-href=\"https://ethresear.ch/uploads/default/27985324648027915d4f1d0cbb40dcb010494d61\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/7/27985324648027915d4f1d0cbb40dcb010494d61_2_690x240.png\" alt=\"image\" data-base62-sha1=\"5EgYutFyIfKo5NbBgWhwQp9n46B\" width=\"690\" height=\"240\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/7/27985324648027915d4f1d0cbb40dcb010494d61_2_690x240.png, https://ethresear.ch/uploads/default/original/3X/2/7/27985324648027915d4f1d0cbb40dcb010494d61.png 1.5x, https://ethresear.ch/uploads/default/original/3X/2/7/27985324648027915d4f1d0cbb40dcb010494d61.png 2x\" data-dominant-color=\"C7DBDD\"></a></div><p></p>\n<p><em><strong>Figure 3:</strong> Distribution of the LVR between the three actors. Relative scale. The LVR created by 0.1 % price changes has a much more equitable distribution than the LVR created by 1.0% price change at once.</em></p>\n<h1><a name=\"computing-the-nominal-lvr-3\" class=\"anchor\" href=\"https://ethresear.ch#computing-the-nominal-lvr-3\"></a>Computing the nominal LVR</h1>\n<p>Let’s assume that we are a given sequence of CEX prices at <span class=\"math\">BT</span> intervals and a constant product AMM (i.e. AMM that follows the equation <span class=\"math\">xy=k</span>). In order to compute the empirical approximation of the nominal LVR defined as above, we can use the following algorithm:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/7/a7817e6afc2ee78f955045da5d6d1e370b8bc64e.png\" data-download-href=\"https://ethresear.ch/uploads/default/a7817e6afc2ee78f955045da5d6d1e370b8bc64e\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/7/a7817e6afc2ee78f955045da5d6d1e370b8bc64e_2_552x500.png\" alt=\"image\" data-base62-sha1=\"nTPaXB8hoi52GMTeK1IJWGTGqJw\" width=\"552\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/7/a7817e6afc2ee78f955045da5d6d1e370b8bc64e_2_552x500.png, https://ethresear.ch/uploads/default/optimized/3X/a/7/a7817e6afc2ee78f955045da5d6d1e370b8bc64e_2_828x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/a/7/a7817e6afc2ee78f955045da5d6d1e370b8bc64e_2_1104x1000.png 2x\" data-dominant-color=\"FBFBFB\"></a></div><p></p>\n<p>The results of the algorithm have been <a href=\"https://atise.medium.com/anatomy-of-cex-dex-arbitrage-481936c83831\" rel=\"noopener nofollow ugc\">verified</a> to match both the nominal LVR and the arbitrage trade probability as defined in (Millionis 2023).</p>\n<h1><a name=\"simulation-studies-4\" class=\"anchor\" href=\"https://ethresear.ch#simulation-studies-4\"></a>Simulation studies</h1>\n<p>Let’s model the in-range liquidity of the <a href=\"https://app.uniswap.org/explore/pools/ethereum/0x88e6A0c2dDD26FEEb64F039a2c41296FcB3f5640\" rel=\"noopener nofollow ugc\">Uniswap v3 ETH/USDC 0.05% pool</a>. As of April 2024, it has approximately $1 billion worth of virtual assets, corresponding to approximately $150 millions of real assets – the value of the liquidity concentration factor is between 6 and 7. It is essential to have deep liquidity if we want arbitrage swaps to happen even on relatively small price changes.</p>\n<p>A simple Uniswap v3 swap might consume around 150’000 gas, which corresponds to $10 cost per swap in USD terms, assuming the reasonable 22 gwei basefee cost and $3000 ETH/USDC price. In times of high usage or high volatility, the cost can easily increase several times.</p>\n<p>The graphs below show the DEX performance metrics using random GBM simulations. The simulations assume 50% yearly volatility, which corresponds to approximately 2.6% daily volatility and 0.03% per-block volatility for 12-second blocks. This is the approximate volatility of ETH in the recent years.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/2/52ed204954c80c12fe60d115b8530dc19e33c5d9.png\" data-download-href=\"https://ethresear.ch/uploads/default/52ed204954c80c12fe60d115b8530dc19e33c5d9\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/2/52ed204954c80c12fe60d115b8530dc19e33c5d9_2_517x369.png\" alt=\"image\" data-base62-sha1=\"bPBbXFRxaXGCM8wZvpk3YoS2Gmd\" width=\"517\" height=\"369\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/2/52ed204954c80c12fe60d115b8530dc19e33c5d9_2_517x369.png, https://ethresear.ch/uploads/default/original/3X/5/2/52ed204954c80c12fe60d115b8530dc19e33c5d9.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/2/52ed204954c80c12fe60d115b8530dc19e33c5d9.png 2x\" data-dominant-color=\"F2F2F1\"></a></div><br>\n<em><strong>Figure 4:</strong> Simulated DEX metrics with zero basefee.</em><p></p>\n<p>Due to a coincidence, the LVR turns out to be approximately $1 per second or $3600 per hour. The LP losses in turn are in the range from $350 to $900 per hour ($3 to $8 million per year). To be clear, this theoretical model does not include any LP fees coming from noise / uninformed traders, which are expected to produce zero LVR, and consequently compensate for the LP losses from the arbitrage trades.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/a/5afc2619927bd3babb3015f3cb3ed9e9b00cd2b8.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/5afc2619927bd3babb3015f3cb3ed9e9b00cd2b8\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/a/5afc2619927bd3babb3015f3cb3ed9e9b00cd2b8_2_517x369.jpeg\" alt=\"image\" data-base62-sha1=\"cYTcjQHdt79uojqCj33VWL8Dpos\" width=\"517\" height=\"369\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/a/5afc2619927bd3babb3015f3cb3ed9e9b00cd2b8_2_517x369.jpeg, https://ethresear.ch/uploads/default/original/3X/5/a/5afc2619927bd3babb3015f3cb3ed9e9b00cd2b8.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/5/a/5afc2619927bd3babb3015f3cb3ed9e9b00cd2b8.jpeg 2x\" data-dominant-color=\"F1F0F0\"></a></div><br>\n<em><strong>Figure 5:</strong> Simulated DEX metrics with $10 per swap spent on the basefee.</em><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/2/42c2d88113ebb2d718f19a54de820c151ca37b90.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/42c2d88113ebb2d718f19a54de820c151ca37b90\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/2/42c2d88113ebb2d718f19a54de820c151ca37b90_2_517x369.jpeg\" alt=\"image\" data-base62-sha1=\"9wAY1idJtClIQWeCWwS5L8yDVv2\" width=\"517\" height=\"369\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/2/42c2d88113ebb2d718f19a54de820c151ca37b90_2_517x369.jpeg, https://ethresear.ch/uploads/default/original/3X/4/2/42c2d88113ebb2d718f19a54de820c151ca37b90.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/4/2/42c2d88113ebb2d718f19a54de820c151ca37b90.jpeg 2x\" data-dominant-color=\"F1F0F0\"></a></div><br>\n<em><strong>Figure 6:</strong> Simulated DEX metrics with $30 per swap spent on the basefee.</em><p></p>\n<p>The results show that when the basefee is zero, the LP losses indeed can be more-or-less accurately modeled by the function <span class=\"math\">\\sqrt{BT}</span>. However, after introducing EIP-1559 basefees to the model, this isn’t true anymore. More frequent transactions also burn more ETH, thus canceling out most of the positive impact on the LP fees — see the results below. Even adding a constant offset from the <em>x</em> axis to the <span class=\"math\">\\sqrt{BT}</span>. model does not lead to a good fit (the brown line).</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/5/b53b8658e7ad04dc746ae61a681bd639a0c3d72e.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/b53b8658e7ad04dc746ae61a681bd639a0c3d72e\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/5/b53b8658e7ad04dc746ae61a681bd639a0c3d72e_2_517x370.jpeg\" alt=\"image\" data-base62-sha1=\"pRfX707wr0qsMtNX8RgvFb5nH6m\" width=\"517\" height=\"370\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/5/b53b8658e7ad04dc746ae61a681bd639a0c3d72e_2_517x370.jpeg, https://ethresear.ch/uploads/default/original/3X/b/5/b53b8658e7ad04dc746ae61a681bd639a0c3d72e.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/b/5/b53b8658e7ad04dc746ae61a681bd639a0c3d72e.jpeg 2x\" data-dominant-color=\"F0ECEC\"></a></div><br>\n<em><strong>Figure 7:</strong> The <span class=\"math\">\\sqrt{BT}</span> model shows a good-but-not-perfect fit if the basefee is zero, but much worse otherwise.</em><p></p>\n<h3><a name=\"simulations-with-longer-block-times-5\" class=\"anchor\" href=\"https://ethresear.ch#simulations-with-longer-block-times-5\"></a>Simulations with longer block times</h3>\n<p>Following Table 1 in (Millionis 2023), I also include results with 120 second and 600 second blocktimes.</p>\n<p>Uniformly distributed blocks, $10 swap basefees:</p>\n<pre><code class=\"lang-auto\">swap fee:                          1bp   5bp  10bp  30bp 100bp\nblock time   600 sec, arb prob %: 92.7  85.2  76.4  50.5  21.7 \nblock time   120 sec, arb prob %: 83.7  68.4  53.5  27.4   9.9 \nblock time    12 sec, arb prob %: 53.1  29.9  19.1   7.7   2.0 \nblock time     2 sec, arb prob %: 20.8   9.4   5.5   1.8   0.1 \nswap fee:                          1bp   5bp  10bp  30bp 100bp\nblock time   600 sec, LP loss  %: 96.3  83.5  71.3  44.8  19.6 \nblock time   120 sec, LP loss  %: 92.1  69.1  52.5  26.9  10.0 \nblock time    12 sec, LP loss  %: 80.0  44.2  28.3  11.6   3.8 \nblock time     2 sec, LP loss  %: 69.6  31.3  18.6   7.1   2.2 \n</code></pre>\n<p>Uniformly distributed blocks, $30 swap basefees:</p>\n<pre><code class=\"lang-auto\">swap fee:                          1bp   5bp  10bp  30bp 100bp\nblock time   600 sec, arb prob %: 88.8  81.5  72.8  48.1  20.8 \nblock time   120 sec, arb prob %: 75.4  61.0  47.8  24.5   8.8 \nblock time    12 sec, arb prob %: 36.2  21.3  14.0   5.8   1.5 \nblock time     2 sec, arb prob %: 10.7   5.5   3.3   1.1   0.1 \nswap fee:                          1bp   5bp  10bp  30bp 100bp\nblock time   600 sec, LP loss  %: 96.3  83.6  71.4  45.0  19.8 \nblock time   120 sec, LP loss  %: 92.3  69.8  53.3  27.6  10.3 \nblock time    12 sec, LP loss  %: 82.5  48.5  32.0  13.5   4.5 \nblock time     2 sec, LP loss  %: 76.5  39.5  24.6   9.8   3.2 \n</code></pre>\n<p>The results show that:</p>\n<ul>\n<li>The approximation from (Millionis 2023) that arbitrage probability ~ LP loss does not hold, in general.</li>\n<li>In most cases, the swap fee is a more dominant factor LP losses than either the block time or basefee.</li>\n<li>Increasing the block time does increase LP losses, however, by a much smaller factor than predicted by the <span class=\"math\">\\sqrt{BT}</span> model, especially in pools with low swap fees (1 bps to 10 bps).</li>\n</ul>\n<h1><a name=\"discussion-6\" class=\"anchor\" href=\"https://ethresear.ch#discussion-6\"></a>Discussion</h1>\n<h3><a name=\"generalizing-the-results-7\" class=\"anchor\" href=\"https://ethresear.ch#generalizing-the-results-7\"></a>Generalizing the results</h3>\n<ol>\n<li>\n<p><strong>Generalizing to other pools.</strong> The simulation results above are specific to the USDC/ETH 0.05% pool, which is typically the most liquid volatile pool on Uniswap v3. For pools with <strong>lower liquidity,</strong> the importance of the friction created by the basefee would be increased. For instance, let’s say that the ETH/USDT 0.05% pool has 1/3 of the liquidity. Then the results from $10 basefee on that pool would match those of the USDC/ETH pools with $30 basefee. For pools with <strong>higher liquidity</strong> (such as USDC/USDT and other stable pairs) the friction would be similarly decreased.</p>\n</li>\n<li>\n<p><strong>Generalizing to other chains.</strong> The model assumes that shorter blocks simply divide the available blockspace differently, rather than add more blockspace. The simulation results <strong>would not</strong> generalize, and would look very differently if the block time decrease is accompanied with a proportional decrease in  basefees.</p>\n</li>\n</ol>\n<h3><a name=\"implications-for-blockchain-design-8\" class=\"anchor\" href=\"https://ethresear.ch#implications-for-blockchain-design-8\"></a>Implications for blockchain design</h3>\n<p>The results clearly show that LP losses are not accurately predicted by the <span class=\"math\">\\sqrt{BT}</span> model, unless the basefee is close to zero. While it’s true that shorter blocks benefit LPs, the effect is limited and frequently less significant than other factors (basefee, liquidity depth, pool’s fee tier, and potentially others). More compelling arguments for fast block times may come from other perspectives, like that of traders or block builders, but that’s out of the scope for this article.</p>\n<p>Potentially, we can separate the block time design problem in two perspectives: L1 perspective and L2/appchain perspective.</p>\n<ul>\n<li>From <strong>L1 perspective</strong>, reducing the basefee could provide a quicker win, compared with changing the block time. However, keeping the design decentralized and credibly-neutral is arguably a higher priority.</li>\n<li>From <strong>L2 / appchain perspective,</strong> especially chain that focus on DeFi or on trading in particular, it makes sense to excessively optimize for LP profits, including block time and basefee reduction.</li>\n<li>\n<ul>\n<li>The <span class=\"math\">\\sqrt{BT}</span> model implies that decreasing block times is especially important if the block time is already close to zero, since the <span class=\"math\">\\sqrt{~}</span> function rapidly grows in the near-zero region.</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>L2 fees may already be low enough to minimize the friction caused by the basefee to negligible levels. If this isn’t the case, then paradoxically, exempting CEX/DEX arbitrage swaps from the EIP-1559 basefee would benefit DEX users (both LPs and retail traders).</li>\n</ul>\n</li>\n</ul>\n<h3><a name=\"shorter-blocks-less-mev-9\" class=\"anchor\" href=\"https://ethresear.ch#shorter-blocks-less-mev-9\"></a>Shorter blocks = less MEV?</h3>\n<p>To be clear, this article makes no claims about MEV in general, just about CEX/DEX arbitrage in particular. Regarding the latter: the results show that there’s a clear connection between CEX/DEX arbitrage, transaction fees, and block times. However, it is perhaps confusing because the connection goes <strong>both ways</strong>:</p>\n<ul>\n<li>Shorter blocks increase the number of arbitrage transactions and the proportion of gas that they consume.</li>\n<li>On the other hand, shorter blocks decrease the expected value of LP losses.</li>\n</ul>\n<p>The same conflicting results apply to changes in basefees. As a result, there’s potential for a confusion, because MEV is increased in one sense, and decreased in another sense.</p>\n<h1><a name=\"conclusion-10\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-10\"></a>Conclusion</h1>\n<p>This work extends the existing LVR and LVR-with-fees models by adding another component – the basefee of transactions. To summarize the main results:</p>\n<ul>\n<li>CEX/DEX arbitrage transactions are not frictionless due to the EIP-1559 basefee and other factors.</li>\n<li>As a result, the nominal LVR in real-world AMMs is divided among three entities: LPs, ETH stakers, and the SBP as a collective entity.</li>\n<li>More gradual price changes result in more equitable LVR distribution among these three entities.</li>\n<li>On chains with significant transaction costs, LP losses under the LVR assumptions are not accurately predicted by the <span class=\"math\">\\sqrt{BT}</span> model.</li>\n<li>The LP losses are determined by several factors, including basefees, swap fees, and block times, the relative importance of which varies.</li>\n</ul>\n<p><em>Source code of the simulations <a href=\"https://github.com/atiselsts/cex-dex-arbitrage-anatomy\" rel=\"noopener nofollow ugc\"><em>is available here</em></a></em>.</p>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/cex-dex-arbitrage-transaction-fees-block-times-and-lp-profits/19444\">Read full topic</a></p>","link":"https://ethresear.ch/t/cex-dex-arbitrage-transaction-fees-block-times-and-lp-profits/19444","pubDate":"Thu, 02 May 2024 16:37:01 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19444"},"source":{"@url":"https://ethresear.ch/t/cex-dex-arbitrage-transaction-fees-block-times-and-lp-profits/19444.rss","#text":"CEX/DEX arbitrage, transaction fees, block times, and LP profits"},"filter":false},{"title":"Integrity proofs to improve rollup security","dc:creator":"peshwar9","category":"Layer 2","description":"<p><strong>TLDR</strong></p>\n<p>L2 neworks such as rollups, validiums and optimiums primarily use execution proofs (ZK proofs or fraud proofs) to prove (or disprove) transaction and state transition validity to the base layer (Ethereum). While proofs of execution are important, they do not detect many categories of faults and frauds that can happen in the various components that comprise  the overall layer-2 infrastructure. Such faults/frauds are  difficult to prove and impossible to attribute and penalise on-chain.</p>\n<p>This post introduces integrity proofs, which complements zk proofs and fraud proofs for rollup security. Integrity proof  is a mechanism to attest to the integrity of services running in a particular instance of rollup, providing assurance to the end users that no malicious or other unauthorized code changes have been performed in the production environment. Integrity proofs use TEEs to deploy and monitor rollup services and report any breach of service integrity on a new layer-2 network (let’s call it Integrity verification chain) that provides decentralised security services to rollups.</p>\n<p>Layering integrity proofs over existing execution proofs greatly improves the censorship resistance of the rollup, detects unauthorised MEV extraction and offers protection from other types of malicious activities in the rollup infrastructure from privileged or unauthorized users. This design also reduces the trust assumptions , compared to the current architecture of centralised rollup deployments that rely disproportionately on execution proofs to demonstrate offchain execution validity.</p>\n<p><strong>Introduction</strong></p>\n<p>Layer-2 networks settling on Ethereum (aka base layer) predominantly use either fraud proofs (proofs of invalidity) or ZK-proofs (proofs of validity) to prove transaction validity and updated state commitments to the base layer. Both these are execution proofs that cryptographically attest to those activities that are objectively recorded and verifiable on-chain (aka running in the EVM or equivalent VM).</p>\n<p>However, such execution proofs alone are inadequate to verify the security of the overall layer-2 network. This is because there are many centralised components in L2s where faults and malicious activities can occur, which cannot be proven on-chain (non-attributable faults). There are many solutions being worked on to address centralisation risk in rollups, but they come with their own tradeoffs including loss of sovereignty/control, reducing utility of own token, cost increase or increased complexity of architecture.</p>\n<p>This post proposes a solution to detect <em>unattributable faults</em> while running rollup services (of the kind that cannot be detected by ZK proofs alone) , without any loss of sovereignty or loss of control for the project deploying the layer-2 network. (Note: The terms layer-2 network and rollup are used interchangeably in this post as a broad term to encompass rollups, validiums and optimums.)</p>\n<p>Integrity proofs are proposed as a mechanism to certify to the presence (or absence) of unattributable faults in the operation of a rollup service, by having an observer running in a Trusted Execution Environment (TEE) provide cryptographic attestation of its own execution environment and signing the attestation with its own in-enclave generated cryptographic identity (signing key) that cannot be tampered with even by the operator of the attestation service.</p>\n<p><strong>Problem space</strong></p>\n<p>Layer-2 networks (both optimistic and Zk stack chains) have many components such as rpc nodes, sequencers, pool &amp; state databases, executors, provers, L1 transaction managers etc that are basically deployed either as platform-native binaries or docker images. Examples of non-attributable faults/frauds include censoring transactions based on addresses or geo-fencing access in json-rpc node, changing the ordering algorithm of sequencer, making unauthorised/undetected changes to the state or pool database, and withholding transaction batch data posted to external DA layer. Currently, users make heavy trust assumptions while using L2 chains that such malicious or unauthorised actions don’t take place in the centralised services operated by their provider. More specifically, users make the following trust assumptions:</p>\n<p>a) they trust the rollup project foundations (eg Polygon, ZK, Optimism, Arbitrum) to not introduce any malicious code on the published rollup service images.</p>\n<p>b) trust that the right security controls are in place such that employees/contractors that belong to the rollup project or RaaS operators have restricted privileged access (or that those who do , do not abuse privileged access)</p>\n<p>In short, users rely on the security offered by the reputational credibility (social &amp; commercial ) of these trusted third parties. Integrity of the rollup services operated by these parties is not verifiable, and any faults are not attributable or provable on-chain. This goes against the basic premise of blockchain networks aka verifiability.</p>\n<p><strong>Solution proposed</strong></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/d/edb7cc61ad8bf9c863c1a9d1deeef28720e7a109.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/edb7cc61ad8bf9c863c1a9d1deeef28720e7a109\" title=\"Integrity Verified Services\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/d/edb7cc61ad8bf9c863c1a9d1deeef28720e7a109_2_671x500.jpeg\" alt=\"Integrity Verified Services\" data-base62-sha1=\"xUWWH1Wf1Mo6qGiYtnUbW6g5cYV\" width=\"671\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/d/edb7cc61ad8bf9c863c1a9d1deeef28720e7a109_2_671x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/e/d/edb7cc61ad8bf9c863c1a9d1deeef28720e7a109_2_1006x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/e/d/edb7cc61ad8bf9c863c1a9d1deeef28720e7a109_2_1342x1000.jpeg 2x\" data-dominant-color=\"ECEDEA\"></a></div><p></p>\n<p>Figure shows the overview of the proposed solution, which has a new layer-2 network acting as the integrity verification chain (let’s call it IVC in short), and three types of actors participating in it - rollup framework providers, rollup projects and TEE operators. Let’s understand this better using the example of a single rollup service- the sequencer (which needs no introduction).</p>\n<ol>\n<li>Rollup framework providers (eg polygon cdk, Zkstack, OP stack , Arbitrum etc) register the service image of their latest release of sequencer with IVC.</li>\n<li>A new rollup project comes along and wants to deploy the sequencer from one of these frameworks. The request is sent to a <em>Host program</em> (creatively named) that runs in a TEE. The host program retrieves the service image registered by the provider, and deploys it on a VM that’s specified by the rollup provider. (The only requirement is for the host program to be given SSH access to deploy the service in the VM). For simplicity, let’s assume this service image is a docker image. The host program downloads the docker image and instantiates a new container using this image. The container Id is captured by the host program and recorded on IVC smart contract designated for the purpose.</li>\n<li>Periodically (based on frequency specified by the rollup project owner) the host program verifies if the container id of the running sequencer matches that recorded on the IVC layer-2 smart contract. If there is any discrepancy, it flags it as a violation of integrity on the integrity verification chain (IVC).</li>\n<li>The host program can generate an integrity proof on demand (or it can be generated unconditionally in the protocol workflow) attesting to the integrity of a particular service that is deployed and monitored by it. The integrity proof would contain the details of the rollup service that’s being monitored, proof of the execution environment in which the host program runs including the quote/remote attestation parameters and its own binary fingerprint (MRENCLAVE), Further, the integrity proof generated by the host program can be signed by a keypair that’s generated within the enclave so that the operator of the host program VM cannot make a false attestation. The signing key would not be accessible even to the operator.</li>\n</ol>\n<p>Here, the sequencer component that was used as the example, becomes the Integrity-verified service (IVS). Technically, the sequencer itself can be run inside a TEE, but that would be another solution not discussed here.</p>\n<p><strong>How does integrity verified service offer a better security model for rollups?</strong></p>\n<p>In this example, let’s assume that after the rollup service is deployed , someone with privileged or unauthorised access modifies the sequencer code to add censoring logic or ordering algorithm, and restarts the docker container. This will result in a change to the container finggerprint, and this will  immediately be detected by the host program (as the running container id will not match the registered container id that was started by the host program). The integrity proof from the host program can certify to the presence or absence of such non-attributable faults.</p>\n<p>When integrity proofs are combined with prevailing proof mechanisms such as zk validity proofs or fraud proofs, it strictly improves the status quo in terms of rollup security.</p>\n<p><strong>Benefits of this solution</strong></p>\n<p><em>For end-user:</em> The end user of the rollup/L2 chain is now assured that in addition to their on-chain transactions being secure (due to natively built-in zk proofs or fraud proofs), additionally any non-attributable faults that can occur in sequencer such as censoring or ordering algorithm changes will immediately be detected and flagged for attention. The user can verify integrity proofs in a permission-less manner.</p>\n<p><em>For rollup project owner:</em> They don’t just have to trust their own devops teams or that of the RaaS operator that they outsource to, but they can verify the integrity of the rollup services deployed permissionlessly, on an ongoing basis. They get a higher security layer-2 chain (trust-minimised) compared to what they would get by deploying a standard rollup stack out of the box.</p>\n<p><em>For RaaS operators</em>: They have lower operational risk by ensuring that the right service images are deployed everytime. This also results in lower risk of reputational/business loss due to unauthorised access or security attacks on their infra.</p>\n<p><em>For rollup framework providers</em> : By publishing their service images and actively participating in the integrity verification activity, they attract better quality of builders and projects on their ecosystem.</p>\n<p><strong>Further security enhancements</strong></p>\n<p>The integrity proofs described solve two attack vectors on rollup services:</p>\n<ol>\n<li>Any unauthorised changes to the deployed rollup service is detected and flagged.</li>\n<li>The correct secure version of each rollup service is deployed in the production environment</li>\n</ol>\n<p>This is a clear improvement from having just execution proofs. But there can be other types of attacks that need to be designed for. One example is that someone with privileged access can still log into the running docker container and change environment variables. To address this, the host program can be enhanced to periodically log into the running containers and compare the environment parameters on the current running version of container vs the original deployed version.</p>\n<p>There can be other types of attacks that are more difficult to detect. for example a sophisticated actor can log into the docker container and manipulate memory . Memory encryption techniques can be evaluated to protect against such attacks. Other solutions could involve running multiple instances of a rollup service (eg sequencer or prover) governed by a consensus algorithm, but it increases costs of operating the rollup infrastructure, and it will be the decision of the rollup project to evaluate the level of risk they are willing to accept and the cost they are willing to pay.</p>\n<p><strong>Summary</strong></p>\n<p>The premise of this solution is that a combination of existing <em>execution proof techniques</em> (zk or fraud proofs) for objectively-verifiable faults in combination with Tee-based <em>integrity proofs</em> for non-attributable faults offers a superior trust-minimised security model for rollups, compared to the status quo.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/integrity-proofs-to-improve-rollup-security/19437\">Read full topic</a></p>","link":"https://ethresear.ch/t/integrity-proofs-to-improve-rollup-security/19437","pubDate":"Thu, 02 May 2024 13:00:07 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19437"},"source":{"@url":"https://ethresear.ch/t/integrity-proofs-to-improve-rollup-security/19437.rss","#text":"Integrity proofs to improve rollup security"},"filter":false},{"title":"Voter Behavior in Blockchain Governance: A Comparative Study of Curve Finance and Polkadot","dc:creator":"dengwx11","category":"Economics","description":"<p>by <a href=\"https://twitter.com/dengwx11\" rel=\"noopener nofollow ugc\">Wenxuan Deng</a>, <a href=\"https://www.linkedin.com/in/tanishakatara/\" rel=\"noopener nofollow ugc\">Tanisha Katara</a>, <a href=\"https://www.linkedin.com/in/davidhamoui/\" rel=\"noopener nofollow ugc\">David Hamoui</a> and <a href=\"https://twitter.com/matrzeszowski\" rel=\"noopener nofollow ugc\">Mateusz Rzeszowski</a></p>\n<p><strong>Acknowledgments</strong><br>\nAdditional thanks to <a href=\"https://twitter.com/p_petertherock\" rel=\"noopener nofollow ugc\">Peter Liem</a> for his assistance with data fetching.</p>\n<p>Also blogged here: <a href=\"https://polygon-governance.mirror.xyz/_BeDt5MvxFQ26ElodFtzHoLi725EFLp_IlliUYtg_HA\" rel=\"noopener nofollow ugc\">polygon mirror</a>; <a href=\"https://hackmd.io/QkqNJuSjQKSolPWfcEnceA?view\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Voter Behavior in Blockchain Governance: A Comparative Study of Curve Finance and Polkadot - HackMD</a></p>\n<h2><a name=\"abstract-1\" class=\"anchor\" href=\"https://ethresear.ch#abstract-1\"></a>Abstract</h2>\n<p>As the first comprehensive examination of voter behavior in Web3, the following research explores two significant blockchain ecosystems, Curve Finance and Polkadot, using a novel quantitative methodology to decompose and highlight governance patterns.</p>\n<p>The presented analysis shows, among other findings, a significant influence of market conditions on voter tendencies, diverse patterns relating to voting power accumulation, and a potential effect of financial incentives on voter participation.</p>\n<p>As such, this research seeks to provide value to the growing field of blockchain-based governance frameworks in dealing with fundamental issues, such as low stakeholder activity, the impact of shifting market conditions, and various complexities at the intersection of economics and political science.</p>\n<h2><a name=\"h-1-introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#h-1-introduction-2\"></a>1. Introduction</h2>\n<p>Blockchain enables decentralized decision making[1]. The information once hidden is now displayed publicly in any block explorer[2]; what used to be the domain of a few now can be accessed permissionlessly[3]; what was perceived as status quo is now challenged with every executed transaction[4].</p>\n<p>These qualities are revolutionary, but the decision-making of distributed networks is largely undocumented still. Consequently, this paper serves as an attempt to analyze and compare two blockchain-based governance systems quantitatively: Curve Finance[5] and Polkadot[6].</p>\n<p>Firstly, in order to lay a common ground of understanding, we describe the relevant governance systems. Secondly, we explain the motivation for selecting Curve Finance and Polkadot as part of our analysis. Lastly, in each of the systems, we analytically deep dive into the voter personas, voter turnout, proposals and voter behavior in different market conditions.</p>\n<h3><a name=\"h-11-curve-finance-and-polkadot-3\" class=\"anchor\" href=\"https://ethresear.ch#h-11-curve-finance-and-polkadot-3\"></a>1.1 Curve Finance and Polkadot</h3>\n<p>As the fields of tokenomics[7] and governance rapidly evolve, two protocols have emerged as particularly influential. Curve Finance pioneered[8] the vote escrow token model[9], introducing gauge voting[10] to decentralized finance (DeFi)[11]. Meanwhile, Polkadot’s governance system has been notable[12] for its innovative approach to quorums[13] and governance lockers[14]. These protocols consequently stand out as significant pioneers in decentralized governance innovation, including novel concepts such as governance conviction[15].</p>\n<p>Governance conviction, also referred to as lockup-based voting multipliers or vote escrow[16], is a mechanism used in decentralized governance models[17] to enhance the influence or voting power of token holders based on the duration for which they are willing to lock up their tokens in a smart contract. This type of system operates under the assumption that the longer a participant commits their tokens for, the more conviction they demonstrate towards the decisions being made within the network and the more incentive alignment they display. As a consequence of the process, their voting power is multiplied by a factor corresponding to the lockup period. This aims to incentivize longer-term commitment and stability within the governance process, aligning participants’ interests with the long-term health and success of the platform.</p>\n<p>Let’s now briefly go over both projects and how their governance works in practice.</p>\n<p><strong>1.1.1 Curve Finance</strong>[18] is a protocol allowing for seamless exchange of ERC-20 tokens at a low cost. This is achieved through the use of liquidity pools[19], which are tokens locked in smart contracts to facilitate trades. Curve Finance offers rewards[20] to those who contribute, creating a mutually beneficial relationship where users can easily exchange tokens while liquidity providers receive rewards.</p>\n<p>To vote, CRV token holders must possess veCRV. veCRV[21] represents CRV tokens that are locked for a certain period (<a href=\"https://ethresear.ch#table1\">Table 1</a>). Users can lock their CRV for a minimum of  one week and a maximum of four years.[22]</p>\n<p><strong>1.1.1.1 Governance Proposals</strong> - To distinct proposals were noted: gauge proposals and non-gauge proposals. Gauges and gauge weights determine how much token rewards the suppliers to a liquidity pool get. Therefore, a gauge proposal will have explicit financial consequences for some or all token holders. Non-gauge proposals, on the other hand, may or may not have financial consequences and may pertain to high-level maintenance and regular upgrades in the network. The impact of proposal types on voter behavior will be discussed more in this research paper.</p>\n<p><strong>1.1.1.2 Community Voting</strong> - A proposer must have a minimum voting power of 2500 vote-escrowed CRV (veCRV)[23] to create a proposal. A voter’s voting power linearly decreases overtime until it reaches zero at the time of the unlock.</p>\n<p><strong>1.1.2 Polkadot</strong>[24] is a protocol which uses a nominated Proof of Stake (PoS)[25] consensus algorithm and aims to connect blockchains, also known as parachains[26], to enable seamless communication, and intermediary-free communication within its network. Fundamentally, parachains are independent PoS blockchains with their own functionalities and tokens. What binds these parachains is the relay chain[27], which is responsible for achieving consensus and ensuring that transactions are executed.</p>\n<p>Note: This study analyzes data from Polkadot’s Governance V1[6], rather than the more recent Open Governance system[28]. This choice was made to ensure comparability in terms of the data size, data type and temporal alignment of the voter samples with those from Curve Finance.</p>\n<p><strong>1.1.2.1 Governance Proposals</strong> - Similarly to Curve Finance, two types of proposals can be distinguished in Polkadot: treasury proposals[29] and non-treasury proposals. According to Polkadot’s Governance V1, when a stakeholder wishes to propose spending from the treasury, they must reserve a deposit of at least 5% of the proposed spending[29]. A treasury proposal will have explicit financial consequences for the protocol, subject to governance, while non-treasury proposals may or may not have financial consequences and pertain to high-level maintenance and regular upgrades in the network. The manner in how the proposal types impact voter behavior will be tackled in the  “Governance Proposals Breakdown” section of this research paper.</p>\n<p><strong>1.1.2.2 Community Voting</strong> - To vote on proposals, DOT token holders must lock their tokens. The longer the DOT is locked, the more voting power is assigned. The voting power of a DOT holder in Polkadot is calculated as DOT tokens held multiplied by the relevant multiplier (<a href=\"https://ethresear.ch#table2\">Table 2</a>), which increases as the locking period increases. The multipliers range from 0.1x for zero days to 6x for two hundred and twenty-four days.[30]</p>\n<p>For instance, if Bobby has 100 tokens and locks them for 14 days, her/his voting power per the (<a href=\"https://ethresear.ch#table2\">Table 2</a>) is (Dot Tokens Held) * 2 (14-day multiplier) = 200. Therefore, Bobby will have the voting power of 200 tokens.</p>\n<h3><a name=\"h-12-curve-finance-and-polkadot-case-selection-4\" class=\"anchor\" href=\"https://ethresear.ch#h-12-curve-finance-and-polkadot-case-selection-4\"></a>1.2 Curve Finance and Polkadot Case Selection</h3>\n<p>Curve Finance and Polkadot serve as significant examples of decentralized governance and are distinct in their purposes and functionalities. At the same time, due to the need for upgradeable contracts and changeable system parameters[30][31], both projects incorporate governance structures, delegating system maintenance responsibilities to their respective communities, as proxied by token in order to facilitate for secure and decentralized decision-making. Both of those governance systems utilize permissionless on-chain execution, which means that the decision-making is directly translated into canonical code, without the need for an external authority or intermediary to apply the changes that tokenholders vote on.</p>\n<p>Importantly, in both Polkadot’s and Curve’s cases, we can distinguish between proposals with explicit and direct financial consequences (financial proposals) and those where the financial consequence is implicit and delayed (technical proposals). Curve’s gauge proposals and Polkadot’s treasury proposals can be both considered financial proposals since they explicitly impact the allocation of financial resources shared by all tokenholders, i.e., as it concerns deciding reward structures for pools in Curve, and the distribution of Polkadot’s treasury funds. On the other hand, technical proposals, i.e., non-gauge and non-treasury, impact the protocols, relate to maintenance and upgrades, and may not directly affect the allocation of financial resources shared by tokenholders.</p>\n<p>There is one notable difference between the two governance systems in terms of the specifics of their token lock-up mechanisms. Curve Finance employs a governance mechanism that encourages participants to actively engage in decision-making processes by allowing them to gain financial rewards[20] for locking their tokens. On the other hand, Polkadot doesn’t financially incentivize the locking up of tokens for voting (Democracy locker).</p>\n<p>The above makes the case for a comparative study of the two systems. In the following parts, we analyze voter turnouts (<a href=\"https://ethresear.ch#2\">Section 2</a>) and break down governance proposals by type (<a href=\"https://ethresear.ch#3\">Section 3</a>). Then, we establish voter personas and seek to understand them in each system (<a href=\"https://ethresear.ch#4\">Section 4</a>). Finally, we analyze voter behavior and seek to identify the governing principles and patterns of these complex environments (<a href=\"https://ethresear.ch#5\">Section 5</a>). To do so, we break down the types of market conditions and consequent variations in voter behavior.</p>\n<h2><a name=\"h-2-voter-turnout-analysis-5\" class=\"anchor\" href=\"https://ethresear.ch#h-2-voter-turnout-analysis-5\"></a>2. Voter Turnout Analysis</h2>\n<p>The below data comes from a comprehensive analysis on voter turnout for governance proposals. The calculation of voter turnout metrics is based on the number of veCRV tokens and DOT tokens used for voting over time, relative to the total veCRV and DOT tokens locked over the same period.</p>\n<p><strong>2.1 Curve Finance:</strong> On average, 65% of the circulating CRV is locked as veCRV. The below graph shows the monthly average number of veCRV tokens used for voting on gauge proposals and non gauge proposals over time. The red line shows the monthly average CRV locked as veCRV over time.</p>\n<p>While there is no significant difference in the veCRV used for voting on gauge proposals and for non gauge proposals, it is interesting to note that out of the 65% locked, an average of 38% tokens have been used for voting. This highlights that although a significant proportion of CRV is locked, a relatively low percentage is used for voting. Further investigation is required to determine the exact factors contributing to the low percentage of utilized tokens.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/5/b5ca495402eba76079ef1ae2e3a6201676e86217.png\" data-download-href=\"https://ethresear.ch/uploads/default/b5ca495402eba76079ef1ae2e3a6201676e86217\" title=\"crv_turnout\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/5/b5ca495402eba76079ef1ae2e3a6201676e86217_2_690x202.png\" alt=\"crv_turnout\" data-base62-sha1=\"pWbOLDZ8msAc5Pmw4oxnxOmgf1Z\" width=\"690\" height=\"202\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/5/b5ca495402eba76079ef1ae2e3a6201676e86217_2_690x202.png, https://ethresear.ch/uploads/default/optimized/3X/b/5/b5ca495402eba76079ef1ae2e3a6201676e86217_2_1035x303.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/5/b5ca495402eba76079ef1ae2e3a6201676e86217_2_1380x404.png 2x\" data-dominant-color=\"E3E5ED\"></a></div><p></p>\n<p><strong>2.2 Polkadot:</strong> On average, 54.5% of the circulating DOT is locked into multiple Polkadot lockers. The below graph shows the monthly average number of locked DOT tokens used for voting on treasury proposals and non treasury proposals over time. The red line shows the monthly average amount of DOT locked over time. In stark contrast to Curve Finance, out of these locked tokens, only 0.11% has been used for voting.</p>\n<p>This highlights a significant disparity in voter engagement between the two blockchain ecosystems, with DOT showing a much lower level of voter engagement than CRV. While no direct  connection can be drawn, the low percentage of utilized tokens for voting in DOT could be attributed to several factors, such as a lack of financial incentives dedicated to token lockups.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/0/9/09bf469fb6b10415f3bbdd8919dab25c4e91905b.png\" data-download-href=\"https://ethresear.ch/uploads/default/09bf469fb6b10415f3bbdd8919dab25c4e91905b\" title=\"dot_turnout\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/0/9/09bf469fb6b10415f3bbdd8919dab25c4e91905b_2_690x204.png\" alt=\"dot_turnout\" data-base62-sha1=\"1oe6rpwz4LAHXxARiguZ9L3pc7N\" width=\"690\" height=\"204\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/0/9/09bf469fb6b10415f3bbdd8919dab25c4e91905b_2_690x204.png, https://ethresear.ch/uploads/default/optimized/3X/0/9/09bf469fb6b10415f3bbdd8919dab25c4e91905b_2_1035x306.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/0/9/09bf469fb6b10415f3bbdd8919dab25c4e91905b_2_1380x408.png 2x\" data-dominant-color=\"C4D3E4\"></a></div><p></p>\n<p>The voter turnout metrics shed light on the extent to which token holders actively engage in voting in both the ecosystems. This sets the stage for a deeper exploration into the nature of governance proposals and their implications on decision-making dynamics within the Curve Finance and Polkadot communities. By examining the types and frequencies of proposals submitted in governance, we can gain further insights into the priorities and interests driving the respective ecosystems’ governance mechanisms.</p>\n<h2><a name=\"h-3-governance-proposals-breakdown-6\" class=\"anchor\" href=\"https://ethresear.ch#h-3-governance-proposals-breakdown-6\"></a>3. Governance Proposals Breakdown</h2>\n<p>Governance proposals play a crucial role in decision-making within any community. Our analysis of two ecosystems, Curve Finance and Polkadot, reveals that financial proposals make up a significant portion of all proposals. Gauge proposals constitute approximately 70% of all proposals in Curve Finance, while treasury proposals make up approximately 80% of all proposals in Polkadot.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/f/9f65fd9cc73df566bd1b3796a96d61ae737a365a.png\" data-download-href=\"https://ethresear.ch/uploads/default/9f65fd9cc73df566bd1b3796a96d61ae737a365a\" title=\"crv_cumu_prop_num\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/f/9f65fd9cc73df566bd1b3796a96d61ae737a365a_2_690x406.png\" alt=\"crv_cumu_prop_num\" data-base62-sha1=\"mK6qLSN9nAtnKnzKiANAnSYEOtc\" width=\"690\" height=\"406\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/f/9f65fd9cc73df566bd1b3796a96d61ae737a365a_2_690x406.png, https://ethresear.ch/uploads/default/original/3X/9/f/9f65fd9cc73df566bd1b3796a96d61ae737a365a.png 1.5x, https://ethresear.ch/uploads/default/original/3X/9/f/9f65fd9cc73df566bd1b3796a96d61ae737a365a.png 2x\" data-dominant-color=\"E2E7F1\"></a></div><br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/5/35b67cad4c367dc4f4c3268906521b452a2cc5c7.png\" data-download-href=\"https://ethresear.ch/uploads/default/35b67cad4c367dc4f4c3268906521b452a2cc5c7\" title=\"dot_cumu_ref_num\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/5/35b67cad4c367dc4f4c3268906521b452a2cc5c7_2_690x318.png\" alt=\"dot_cumu_ref_num\" data-base62-sha1=\"7Fahwce4tUT0a2cMd6f3DU7yTpZ\" width=\"690\" height=\"318\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/5/35b67cad4c367dc4f4c3268906521b452a2cc5c7_2_690x318.png, https://ethresear.ch/uploads/default/optimized/3X/3/5/35b67cad4c367dc4f4c3268906521b452a2cc5c7_2_1035x477.png 1.5x, https://ethresear.ch/uploads/default/original/3X/3/5/35b67cad4c367dc4f4c3268906521b452a2cc5c7.png 2x\" data-dominant-color=\"E0E3E6\"></a></div><p></p>\n<p>Interestingly, in Curve Finance, we found that most proposals are initiated by individuals associated with the <a href=\"http://Curve.fi\" rel=\"noopener nofollow ugc\">Curve.fi</a> team (<a href=\"https://ethresear.ch#table3\">Table 3</a>), particularly two wallets linked to its founder, Michael Egorov[32]. The top wallet, identified as the <a href=\"http://Curve.fi\" rel=\"noopener nofollow ugc\">Curve.fi</a> deployer on the Arkham data platform[33], is notably active in both gauge and non-gauge proposal submissions. See the appendix for (<a href=\"https://ethresear.ch#table3\">Table 3</a>) of top Curve Finance proposers, ranked in order of participation.</p>\n<p>No similar pattern could be observed in Polkadot with the most referenda submitted by a single author amounting to only 6% of the total proposals.</p>\n<p>Having provided an analysis of various proposals and consequent patterns, we move into the voter-centric part of the paper.</p>\n<h2><a name=\"h-4-voter-personas-and-respective-patterns-7\" class=\"anchor\" href=\"https://ethresear.ch#h-4-voter-personas-and-respective-patterns-7\"></a>4. Voter Personas and Respective Patterns</h2>\n<p>The following research categorizes voter persona and analyzes their behavior towards the governance systems.</p>\n<p>Voter personas are categorized based on the size of their token holdings, and the hierarchy is defined as follows: the top 1% is labeled as Whales, the next 5% as Sharks, the next 10% as Dolphins, the next 20% as Fish, and the remaining 64% as Shrimps.</p>\n<div> \n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Token Holdings</th>\n<th>Voter Persona</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Top 1%</td>\n<td>Whales</td>\n</tr>\n<tr>\n<td>5%</td>\n<td>Sharks</td>\n</tr>\n<tr>\n<td>10%</td>\n<td>Dolphins</td>\n</tr>\n<tr>\n<td>20%</td>\n<td>Fish</td>\n</tr>\n<tr>\n<td>Remaining 64%</td>\n<td>Shrimps</td>\n</tr>\n</tbody>\n</table>\n</div></div>\n<p><strong>4.1 Curve Finance:</strong> In the context of Curve Finance governance, over 58% of token holders choose to lock their tokens for the longest duration, i.e. four years. However, an intriguing trend surfaces among the different cohorts of holders.</p>\n<p>In the graph below, the x-axis displays the initial lock-up windows, which range from 7 days to 4 years, and the y-axis displays the percentage of each of the voter personas who have locked their tokens. The more significant holders, i.e., Whales, Sharks, and Dolphins, show mild hesitation to commit for more extended lock periods. Conversely, they slightly prefer shorter commitments, particularly those under six months. Although the margin is slim, it is a telling divergence.</p>\n<p>It hints that larger holders may not need to lock up their tokens for extended periods to wield significant voting power. For them, the flexibility not to lock in for an extended time could be a strategic move to mitigate risk and maintain liquidity options.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/1/b1c30bac016ddab4cd9accb8232ffc6b72a406aa.png\" data-download-href=\"https://ethresear.ch/uploads/default/b1c30bac016ddab4cd9accb8232ffc6b72a406aa\" title=\"crv_shark_and_shrimp_dotplot\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/1/b1c30bac016ddab4cd9accb8232ffc6b72a406aa_2_375x500.png\" alt=\"crv_shark_and_shrimp_dotplot\" data-base62-sha1=\"pmyowoUE7tPajUHQoovpOpvP6KS\" width=\"375\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/1/b1c30bac016ddab4cd9accb8232ffc6b72a406aa_2_375x500.png, https://ethresear.ch/uploads/default/optimized/3X/b/1/b1c30bac016ddab4cd9accb8232ffc6b72a406aa_2_562x750.png 1.5x, https://ethresear.ch/uploads/default/original/3X/b/1/b1c30bac016ddab4cd9accb8232ffc6b72a406aa.png 2x\" data-dominant-color=\"EDF1F8\"></a></div><p></p>\n<p><strong>4.2 Polkadot:</strong> In the Polkadot ecosystem, analysis yields a similar, yet valuable, correlation to Curve Finance. 4% of DOT holders initially choose to lock their tokens for a maximum of 224 days (roughly seven months). Holders with more significant positions prefer shorter lock-up periods, and this pattern is glaringly apparent. Particularly striking in the Polkadot ecosystem is that about 93% of Whales and 98% of Sharks tend to lock up their tokens for 14 days or less. Contrastingly, shrimp holders display markedly different behavior, with approximately 30% opting for an 8-week lock-up and about 5% committing to a 32-week lock-up.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/5/957fc95c9dade9db90e4b1116fe2e631d9f3b6a7.png\" data-download-href=\"https://ethresear.ch/uploads/default/957fc95c9dade9db90e4b1116fe2e631d9f3b6a7\" title=\"dot_shark_and_shrimp_dotplot\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/5/957fc95c9dade9db90e4b1116fe2e631d9f3b6a7_2_375x500.png\" alt=\"dot_shark_and_shrimp_dotplot\" data-base62-sha1=\"lkwVk0mVvjhwex7Miyvi130Eo6P\" width=\"375\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/5/957fc95c9dade9db90e4b1116fe2e631d9f3b6a7_2_375x500.png, https://ethresear.ch/uploads/default/optimized/3X/9/5/957fc95c9dade9db90e4b1116fe2e631d9f3b6a7_2_562x750.png 1.5x, https://ethresear.ch/uploads/default/original/3X/9/5/957fc95c9dade9db90e4b1116fe2e631d9f3b6a7.png 2x\" data-dominant-color=\"EDF1F8\"></a></div><p></p>\n<p>Among different holder categories, from Whales to Shrimps, there is an incremental increase in the preference for longer lock-ups as we move down the scale of holdings. The distinctions and preferences between prominent and smallholders are consistent within each protocol.</p>\n<p>However, there is a significant difference between the two protocols. As shown in the pie charts below, in Curve Finance, 67.2% of voters across all groups opt for a four-year lock-up, while in Polkadot, only 4% of the users choose the most extended lock-up window of 224 days. Even among the most minor stakeholders, the Shrimps, less than 5% chose the most prolonged lock-up period of 32 weeks.</p>\n<p>This divergence could be attributed to the fundamental differences in the underlying rewards and incentives of Curve Finance and Polkadot. Curve’s gauge weight voting system[34] incentivizes users to boost their voting power by locking their tokens for extended periods. This may indicate that sustained rewards are crucial in incentivizing token holders to stay longer.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/d/ad4e411543cfef1a3570feaedf97c885a91ad181.png\" data-download-href=\"https://ethresear.ch/uploads/default/ad4e411543cfef1a3570feaedf97c885a91ad181\" title=\"crv_piechart\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/d/ad4e411543cfef1a3570feaedf97c885a91ad181_2_511x500.png\" alt=\"crv_piechart\" data-base62-sha1=\"oJ8gcs0uLvxMtiOgouWUcv9izAt\" width=\"511\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/d/ad4e411543cfef1a3570feaedf97c885a91ad181_2_511x500.png, https://ethresear.ch/uploads/default/original/3X/a/d/ad4e411543cfef1a3570feaedf97c885a91ad181.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/d/ad4e411543cfef1a3570feaedf97c885a91ad181.png 2x\" data-dominant-color=\"EDD2D6\"></a></div><br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/b/fb9c1553283566ce16f0c4076202d83ab22487a6.png\" data-download-href=\"https://ethresear.ch/uploads/default/fb9c1553283566ce16f0c4076202d83ab22487a6\" title=\"dot_piechart\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/b/fb9c1553283566ce16f0c4076202d83ab22487a6_2_497x500.png\" alt=\"dot_piechart\" data-base62-sha1=\"zTQfCJgGnIp1PfY7BYpgU2yM40S\" width=\"497\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/b/fb9c1553283566ce16f0c4076202d83ab22487a6_2_497x500.png, https://ethresear.ch/uploads/default/original/3X/f/b/fb9c1553283566ce16f0c4076202d83ab22487a6.png 1.5x, https://ethresear.ch/uploads/default/original/3X/f/b/fb9c1553283566ce16f0c4076202d83ab22487a6.png 2x\" data-dominant-color=\"F4F8EB\"></a></div><p></p>\n<p>With this understanding of voter personas and their lock-up behaviors, we now dive into how they accumulate voting power in different market conditions.</p>\n<h2><a name=\"h-5-voting-power-accumulation-patterns-in-different-market-conditions-8\" class=\"anchor\" href=\"https://ethresear.ch#h-5-voting-power-accumulation-patterns-in-different-market-conditions-8\"></a>5. Voting Power Accumulation Patterns in Different Market Conditions</h2>\n<p>The study of voting power accumulation patterns and the associated dynamics between voters and their locked-up tokens are of great importance in understanding how voters use their tokens in upward and downward market conditions.</p>\n<p>Fundamentally, the two primary ways in which voters can augment their voting power (VP) are by purchasing additional tokens and locking them up, or by extending their lock-up period for already-owned tokens, resulting in an increased multiplier. VP calculation is derived from the multiplication of token balance and a multiplier based on the lock-up period.</p>\n<p><strong>Voting Power (VP) = token balance * multiplier based on lockup time</strong></p>\n<p>However, analyzing the behavior of voters in response to changes in token prices and market conditions presents a significant challenge - it’s hard to determine whether voter behavior is influenced by changes in token locked amounts and lock-up duration or whether they are affected by the daily routines of the average Externally Owned Account (EOA) wallet.</p>\n<p>To overcome this challenge, a reliable quantitative methodology has been developed to simplify this complex analysis. The approach we present is based on a decomposition of the changes in voting power into its constituent factors. By quantifying the changes in voting power (<span class=\"math\">\\Delta vp</span>) over time, an analysis of the two constituent factors, changes in balance (<span class=\"math\">\\Delta b</span>) and changes in conviction (<span class=\"math\">\\Delta c</span>), can be made.</p>\n<p>The change in voting power between two consecutive time points, <span class=\"math\">t</span> and <span class=\"math\">t-1</span>, can be derived through arithmetic calculations as follows:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/4/24c7a0daa9f98d910a6b49ded7cef9789868a70f.png\" data-download-href=\"https://ethresear.ch/uploads/default/24c7a0daa9f98d910a6b49ded7cef9789868a70f\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/original/3X/2/4/24c7a0daa9f98d910a6b49ded7cef9789868a70f.png\" alt=\"image\" data-base62-sha1=\"5fmTdKIkigVRL7BgBmp6ga6jjxZ\" width=\"690\" height=\"53\" data-dominant-color=\"FBFBFB\"></a></div><p></p>\n<p>This equation can be expanded as:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/d/fd0c1ec82b641fef7cc14e5a229f8fece3897b0e.png\" data-download-href=\"https://ethresear.ch/uploads/default/fd0c1ec82b641fef7cc14e5a229f8fece3897b0e\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/original/3X/f/d/fd0c1ec82b641fef7cc14e5a229f8fece3897b0e.png\" alt=\"image\" data-base62-sha1=\"A6yLAlYY1z562dRnDl5jbtFYESa\" width=\"690\" height=\"94\" data-dominant-color=\"F7F7F7\"></a></div><p></p>\n<p>Here, <span class=\"math\">b(t)</span> and <span class=\"math\">c(t)</span> represent the balance and conviction at time <span class=\"math\">t</span>, respectively. The terms <span class=\"math\">\\Delta b</span> and <span class=\"math\">\\Delta c</span> denote the changes in balance and conviction from time <span class=\"math\">t-1</span> to <span class=\"math\">t</span>.</p>\n<p>For this study, each timestamp where a new transaction occurs on the blockchain is considered a discrete-time point. This approach captures the dynamic nature of voting power changes with high granularity. To represent the changes in voting power across different voters and time points, a matrix formulation is used. The matrix of changes in voting power (<span class=\"math\">\\Delta VP</span>) is defined as follows:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/4/94595d89b00fa0170bf67b4c30629f6540180d37.png\" data-download-href=\"https://ethresear.ch/uploads/default/94595d89b00fa0170bf67b4c30629f6540180d37\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/original/3X/9/4/94595d89b00fa0170bf67b4c30629f6540180d37.png\" alt=\"image\" data-base62-sha1=\"lam840sS944ts4OIRBkzf5BAULB\" width=\"690\" height=\"48\" data-dominant-color=\"FCFCFC\"></a></div><p></p>\n<p>Here, <span class=\"math\">T+1</span> represents the total number of time points, while <span class=\"math\">W</span> indicates the number of voters. The changes in voting power can be represented using the following formula:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/1/110d27df9e76e720b17c0f7043a488be63d81b53.png\" data-download-href=\"https://ethresear.ch/uploads/default/110d27df9e76e720b17c0f7043a488be63d81b53\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/original/3X/1/1/110d27df9e76e720b17c0f7043a488be63d81b53.png\" alt=\"image\" data-base62-sha1=\"2qQiN1b7Rf61Bzd85tLHTyScLU7\" width=\"690\" height=\"47\" data-dominant-color=\"F8F8F8\"></a></div><p></p>\n<p>The formula can be represented in matrix form as:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/b/8be96fafed33f43a6b1d92ef7ac076c5c191602e.png\" data-download-href=\"https://ethresear.ch/uploads/default/8be96fafed33f43a6b1d92ef7ac076c5c191602e\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/original/3X/8/b/8be96fafed33f43a6b1d92ef7ac076c5c191602e.png\" alt=\"image\" data-base62-sha1=\"jXIvcJitvCzjLK6QcbwxdZeYK5w\" width=\"690\" height=\"280\" data-dominant-color=\"F8F8F8\"></a></div><p></p>\n<p>The matrix <span class=\"math\">\\Delta VP</span> represents the change in voting power for each voter at each timestamp, while <span class=\"math\">B</span> represents the balance of each voter at time <span class=\"math\">t</span>, <span class=\"math\">\\Delta C</span> represents the change in conviction between <span class=\"math\">t</span> and <span class=\"math\">t-1</span> for each voter, and <span class=\"math\">C(t-1)</span> represents the conviction of each voter at time <span class=\"math\">t-1</span>. The matrices <span class=\"math\">\\Delta B</span> and <span class=\"math\">\\Delta C</span> represent the changes in balance and conviction, respectively, for each voter between <span class=\"math\">t</span> and <span class=\"math\">t-1</span>. The symbol <span class=\"math\">\\odot</span> represents the element-wise multiplication of matrices.</p>\n<p>If <span class=\"math\">\\Delta vp_{t, i}</span> is non-zero, the voting power of voter <span class=\"math\">i</span>'s wallet has been altered at time point <span class=\"math\">t</span>. A non-zero change in VP due to a change in conviction occurs because <span class=\"math\">b \\cdot \\Delta c</span> is non-zero. Conversely, a change in balance results in a non-zero value because <span class=\"math\">c(t-1) \\cdot \\Delta b</span> is non-zero. Typically, these two terms hold non-zero values simultaneously if the user changes the lock-up window and balance in the same transaction.</p>\n<p>The crux of the analysis then becomes determining whether the term <span class=\"math\">B \\odot C</span> or <span class=\"math\">C(t-1) \\odot \\Delta B</span> is more dominant in influencing <span class=\"math\">\\Delta VP</span>. To this end, we define two metrics:</p>\n<ol>\n<li><strong>Balance Impact:</strong> This is quantified as the L1 norm of <span class=\"math\">|C(t-1) \\odot \\Delta B|_1</span>.</li>\n<li><strong>Conviction Impact:</strong> This is quantified as the L1 norm of <span class=\"math\">|B \\odot \\Delta C|_1</span>.</li>\n</ol>\n<p>Here, the notation <span class=\"math\">||_1</span> denotes the L1 norm, which essentially sums up the absolute values of all elements in the matrix.</p>\n<p>In summary, this methodology for governance conviction provides a more in-depth and comprehensive approach to analyzing voting power accumulation patterns in different market conditions. Through the matrix formulation, the changes in voting power across different voters and time points can be represented and analyzed with high granularity, providing valuable insights into voter behavior dynamics.</p>\n<h3><a name=\"h-51-accounting-for-market-conditions-in-curve-and-polkadot-9\" class=\"anchor\" href=\"https://ethresear.ch#h-51-accounting-for-market-conditions-in-curve-and-polkadot-9\"></a>5.1 Accounting for Market Conditions in Curve and Polkadot</h3>\n<p>In this study, we aim to assess the impact of market conditions on how voters accumulate voting power. To achieve this, we analyze upward and downward trends in the market by employing a combination of short-term and long-term moving averages, namely the 7-day moving average (MA7) and the 30-day moving average (MA30). We define an upward trend when the MA7 exceeds the MA30 and a downward trend when the MA7 falls below the MA30.</p>\n<p>It is crucial to acknowledge that token behavior is circumstantial, and varying market conditions may elicit different responses from holders with varying stakes, thereby exhibiting diverse behavior patterns. Therefore, we adopt a nuanced approach, which considers these factors to provide a precise understanding of how balance and conviction impact the ebb and flow of voting power within the Curve Finance and Polkadot governance systems.</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/0/7/07a995daf9cb9eb9aadcc576d83b39e7257db50b.png\" alt=\"crv_price\" data-base62-sha1=\"15MFZslEgCkEObJIgPqvAnY2oP1\" width=\"635\" height=\"387\"><br>\n<img src=\"https://ethresear.ch/uploads/default/original/3X/c/a/ca393687212f545f9764f88da9c2ea9b776a93c2.png\" alt=\"dot_price\" data-base62-sha1=\"sQX1H0jGUGKipwwBUjbPTXSA3aG\" width=\"650\" height=\"388\"></p>\n<p>The charts presented above illustrate how the MA7-MA30 differential correlates with the token price. Our analysis leverages these definitions to explore how market trends affect Shrimp voter behavior, specifically the influence of the token price and lock-up duration on the dynamic voting power within the governance frameworks of Curve Finance and Polkadot. Since the sample size for Whales, Sharks, Dolphins and Fish is insignificant, we choose to exclusively analyze the Shrimp voter group. Having said that, it’s useful to note that for all the aforementioned groups, similar tendencies can be distinguished to the ones presented below.</p>\n<h3><a name=\"h-52-findings-voting-power-accumulation-in-curve-finance-and-polkadot-10\" class=\"anchor\" href=\"https://ethresear.ch#h-52-findings-voting-power-accumulation-in-curve-finance-and-polkadot-10\"></a>5.2 Findings: Voting Power Accumulation in Curve Finance and Polkadot</h3>\n<p><strong>5.2.1 Curve Finance:</strong> In the case of Curve Finance, we encountered a challenge when studying Shrimp voters due to their number exceeding 12,000 and the high computational complexity of our method. As a result, we adopted a sampling strategy, randomly selecting 2000 Shrimp voters in each experiment, and repeated this process 500 times. We calculated the log ratio of conviction impact to balance impact in each experiment and grouped the results by upward and downward market trends. The grouped histograms below show distinct patterns.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/5/d536727595a832550e07d0d6945f5ee56a64682e.png\" data-download-href=\"https://ethresear.ch/uploads/default/d536727595a832550e07d0d6945f5ee56a64682e\" title=\"crv_vp_accu\"><img src=\"https://ethresear.ch/uploads/default/original/3X/d/5/d536727595a832550e07d0d6945f5ee56a64682e.png\" alt=\"crv_vp_accu\" data-base62-sha1=\"uqalVdi845Lu36f5WWH92pov0rY\" width=\"690\" height=\"345\" data-dominant-color=\"DFD8EB\"></a></div><p></p>\n<p>During downward trends, the log ratio values were mainly concentrated between 0 and 0.5, displaying a distribution similar to a normal distribution. This suggests that Shrimp behavior is more uniform in downward markets, and most log ratios exceeding 0 indicate a tendency among Shrimp to increase their lock-up duration to alter their voting power.</p>\n<p>During upward trends, the scenario was notably more complex, as three peaks around -0.3, 0.5, and 1 indicate that Shrimp behavior is inconsistent during upward markets. However, most Shrimps preferred increasing their lock-up window, a tendency that was even more pronounced than during downward trends.</p>\n<p><strong>5.2.3 Polkadot:</strong> When analyzing Polkadot’s market trends, we observed a deviation from the typical pattern observed in Curve Finance. Instead of a normal distribution, there was a noticeable long tail in the data. Upon closer inspection, we discovered a fascinating insight: a particular group of Shrimp voters in Polkadot had a strong inclination towards raising their lock-up window rather than increasing their balance during bullish market conditions. This behavior was particularly prominent and suggestive of a unique pattern among this subset of voters.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/0/f08029351ce5b605f8ceb52b4074c5c8b7c9ef1c.png\" data-download-href=\"https://ethresear.ch/uploads/default/f08029351ce5b605f8ceb52b4074c5c8b7c9ef1c\" title=\"dot_vp_accu\"><img src=\"https://ethresear.ch/uploads/default/original/3X/f/0/f08029351ce5b605f8ceb52b4074c5c8b7c9ef1c.png\" alt=\"dot_vp_accu\" data-base62-sha1=\"yjzaWvSxHzLDskkzXoayuwSc5PK\" width=\"690\" height=\"345\" data-dominant-color=\"EAE9F2\"></a></div><p></p>\n<h2><a name=\"h-6-conclusion-11\" class=\"anchor\" href=\"https://ethresear.ch#h-6-conclusion-11\"></a>6. Conclusion</h2>\n<p>The research focused on identifying key trends in voter behavior by examining voter personas, types of governance proposals, and patterns of voting power accumulation.</p>\n<ol>\n<li>There is a noticeable correlation between financial incentives at the token lock-up level in Curve Finance and the absence of such incentives in Polkadot, which may directly affect voter turnout - relatively high in Curve Finance than in Polkadot.</li>\n<li>The analysis indicates that financial proposals, specifically Curve Finance- gauge proposals and Polkadot’s treasury proposals, constitute the majority of proposals in both systems and are central to all significant voting activities.</li>\n<li>The study defines and analyzes various voter personas and shows interesting patterns,  the most crucial of them being that Whales, Sharks, and Dolphins, prefer shorter lock-up periods, while the majority of low-staked holders, referred to as Shrimps, opt for longer lock-up durations.</li>\n<li>In Curve Finance, most voters choose the longest available lock-up period. This behavior contrasts sharply with that of Polkadot voters, underscoring the potential influence of financial incentives on long-term voter alignment with the protocol.</li>\n<li>A new methodology is introduced to analyze voter behavior under various market conditions. The results indicate that market trends significantly influence voter behavior. For instance, during market upswings, shrimps in both governance systems have differing preferences, utilizing both adjustments to their lock-up durations and increasing their token holdings to maximize voting power. During market downturns, on the other hand, there is a pronounced tendency among the shrimp voter group to extend their lock-up periods. While the sample size for other voter personas is too small to establish the above trends with confidence, similar tendencies could be seen in preliminary analysis of those sets as well.</li>\n</ol>\n<p>This research contributes to our understanding of decentralized governance within blockchain ecosystems and aims to provide insights that could help in the design and optimization of governance mechanisms. Continued research in this field is vital to enhancing the scalability and effectiveness of decentralized decision-making as the blockchain landscape continues to evolve.</p>\n<h2><a name=\"references-12\" class=\"anchor\" href=\"https://ethresear.ch#references-12\"></a>References</h2>\n<p>[1]: Beck, Roman; Müller-Bloch, Christoph; and King, John Leslie (2018) “Governance in the Blockchain Economy: A Framework and Research Agenda,” Journal of the Association for Information Systems, 19(10),.<br>\n[2]: <a href=\"http://Etherscan.Io\" rel=\"noopener nofollow ugc\">Etherscan.Io</a>. n.d. “Ethereum (ETH) Blockchain Explorer.” Ethereum (ETH) Blockchain Explorer. <a href=\"https://etherscan.io/\" rel=\"noopener nofollow ugc\">https://etherscan.io/</a>.<br>\n[3]: S. Wang, W. Ding, J. Li, Y. Yuan, L. Ouyang and F. -Y. Wang, “Decentralized Autonomous Organizations: Concept, Model, and Applications,” in IEEE Transactions on Computational Social Systems, vol. 6, no. 5, pp. 870-878, Oct. 2019, doi: 10.1109/TCSS.2019.2938190.,<br>\n[4]: “Zuwu on X: ‘Hey <span class=\"mention\">@Opensea</span> Why Does It Appear <span class=\"mention\">@Natechastain</span> Has a Few Secret Wallets That Appears to Buy Your Front Page Drops Before They Are Listed, Then Sells Them Shortly After the Front-page-hype Spike for Profits, and Then Tumbles Them Back to His Main Wallet With His Punk on It?’ / X.” n.d. X (Formerly Twitter). <a href=\"https://twitter.com/0xZuwu/status/1437921263394115584\" rel=\"noopener nofollow ugc\">https://twitter.com/0xZuwu/status/1437921263394115584</a>.<br>\n[5]: CurveFi. n.d. “Understanding Curve (V1) - Curve Resources.” <a href=\"https://resources.curve.fi/base-features/understanding-curve/\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Understanding Curve (v1) - Curve Resources</a>.<br>\n[6]: “Governance V1 · Polkadot Wiki.” 2024. May 1, 2024. <a href=\"https://wiki.polkadot.network/docs/learn/learn-governance\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Governance V1 · Polkadot Wiki</a>.<br>\n[7]: Lin William Cong, Ye Li, Neng Wang, Tokenomics: Dynamic Adoption and Valuation, The Review of Financial Studies, Volume 34, Issue 3, March 2021, Pages 1105–1155, <a href=\"https://doi.org/10.1093/rfs/hhaa089\" rel=\"noopener nofollow ugc\">https://doi.org/10.1093/rfs/hhaa089</a><br>\n[8]: Curve DAO. n.d. “Curve DAO.” <a href=\"https://classic.curve.fi/files/CurveDAO.pdf\" rel=\"noopener nofollow ugc\">https://classic.curve.fi/files/CurveDAO.pdf</a>.<br>\n[9]: “WTF Are veTokens on Bankless.” n.d. <a href=\"https://www.bankless.com/wtf-are-vetokens\" rel=\"noopener nofollow ugc\">https://www.bankless.com/wtf-are-vetokens</a>.<br>\n[10]: CurveFi. n.d. “Gauge Weights - Curve Resources.” <a href=\"https://resources.curve.fi/reward-gauges/gauge-weights/\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Gauge weights - Curve Resources</a>.<br>\n[11]: Zetzsche, Dirk Andreas and Arner, Douglas W. and Buckley, Ross P., Decentralized Finance (DeFi) (September 30, 2020). Journal of Financial Regulation, 2020, 6, 172–203, Available at SSRN: <a href=\"https://ssrn.com/abstract=3539194\" rel=\"noopener nofollow ugc\">https://ssrn.com/abstract=3539194</a> or <a href=\"http://dx.doi.org/10.2139/ssrn.3539194\" rel=\"noopener nofollow ugc\">http://dx.doi.org/10.2139/ssrn.3539194</a><br>\n[12]: CryptoDaily. 2024. “Polkadot’s Uniquely Decentralized Community Governance Model Accelerates Ecosystem Traction.” Crypto Daily, March 5, 2024. <a href=\"https://cryptodaily.co.uk/2024/03/polkadots-uniquely-decentralized-community-governance-model-accelerates-ecosystem-traction\" rel=\"noopener nofollow ugc\">https://cryptodaily.co.uk/2024/03/polkadots-uniquely-decentralized-community-governance-model-accelerates-ecosystem-traction</a>.<br>\n[13]: “Governance V1 · Polkadot Wiki.” 2024. May 1, 2024. <a href=\"https://wiki.polkadot.network/docs/learn/learn-governance#adaptive-quorum-biasing\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Governance V1 · Polkadot Wiki</a>.<br>\n[14]: “Introduction to Polkadot OpenGov · Polkadot Wiki.” 2024. April 3, 2024. <a href=\"https://wiki.polkadot.network/docs/learn-polkadot-opengov#voluntary-locking-conviction-voting\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Introduction to Polkadot OpenGov · Polkadot Wiki</a>.<br>\n[15]: Emmett, Jeff. 2022. “Conviction Voting: A Novel Continuous Decision Making Alternative to Governance.” Medium, April 22, 2022. <a href=\"https://blog.giveth.io/conviction-voting-a-novel-continuous-decision-making-alternative-to-governance-aa746cfb9475\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Conviction Voting: A Novel Continuous Decision Making Alternative to Governance | by Jeff Emmett | Giveth</a>.<br>\n[16]: CoinMarketCap. 2023. “What Is Vote Escrow?” CoinMarketCap Academy. April 5, 2023. <a href=\"https://coinmarketcap.com/academy/article/what-is-vote-escrow\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">What Is Vote Escrow? | CoinMarketCap</a>.<br>\n[17]: “Blockchain Voting Is Overrated Among Uninformed People but Underrated Among Informed People.” 2021. May 25, 2021. <a href=\"https://vitalik.eth.limo/general/2021/05/25/voting2.html\" rel=\"noopener nofollow ugc\">https://vitalik.eth.limo/general/2021/05/25/voting2.html</a>.<br>\n[18]: “<a href=\"http://curve.fi/compound.%E2%80%9D\" rel=\"noopener nofollow ugc\">curve.fi/compound.”</a> n.d. Curve Finance. <a href=\"https://classic.curve.fi/\" rel=\"noopener nofollow ugc\">https://classic.curve.fi/</a>.<br>\n[19]: CurveFi. n.d. “Understanding Curve Pools - Curve Resources.” <a href=\"https://resources.curve.fi/lp/understanding-curve-pools/\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Understanding curve pools - Curve Resources</a>.<br>\n[20]: CurveFi. n.d. “Boosting Your CRV Rewards - Curve Resources.” <a href=\"https://resources.curve.fi/reward-gauges/boosting-your-crv-rewards/\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Boosting your CRV rewards - Curve Resources</a>.<br>\n[21]: CurveFi. n.d. “Overview - Curve Resources.” <a href=\"https://resources.curve.fi/vecrv/overview/\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Overview - Curve Resources</a>.<br>\n[22]: CurveFi. n.d. “Locking CRV - Curve Resources.” <a href=\"https://resources.curve.fi/vecrv/locking-your-crv/\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Locking CRV - Curve Resources</a>.<br>\n[23]: CurveFi. n.d. “Creating a DAO Proposal - Curve Resources.” <a href=\"https://resources.curve.fi/governance/proposals/creating-a-dao-proposal/?h=2500\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Creating a DAO proposal - Curve Resources</a>.<br>\n[24]: “Polkadot: Web3 Interoperability | Decentralized Blockchain.” n.d. Polkadot Network. <a href=\"https://polkadot.network/\" rel=\"noopener nofollow ugc\">https://polkadot.network/</a>.<br>\n[25]: “Polkadot Launch Phases · Polkadot Wiki.” 2024. May 1, 2024. <a href=\"https://wiki.polkadot.network/docs/learn/learn-launch#nominated-proof-of-stake\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Polkadot Launch Phases · Polkadot Wiki</a>.<br>\n[26]: “Polkadot’s Parachains · Polkadot Wiki.” n.d. <a href=\"https://wiki.polkadot.network/docs/learn-parachains-index\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Polkadot's Parachains · Polkadot Wiki</a>.<br>\n[27]: “Architecture · Polkadot Wiki.” 2024. April 3, 2024. <a href=\"https://wiki.polkadot.network/docs/learn-architecture#relay-chain\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Architecture · Polkadot Wiki</a>.<br>\n[28]: “Polkadot OpenGov · Polkadot Wiki.” n.d. <a href=\"https://wiki.polkadot.network/docs/learn-polkadot-opengov-index\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Polkadot OpenGov · Polkadot Wiki</a>.<br>\n[29]: “Governance V1 Treasury · Polkadot Wiki.” 2024. May 1, 2024. <a href=\"https://wiki.polkadot.network/docs/learn/learn-treasury\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Governance v1 Treasury · Polkadot Wiki</a>.<br>\n[30]: “Polkadot Parameters · Polkadot Wiki.” 2024. March 11, 2024. <a href=\"https://wiki.polkadot.network/docs/maintain-polkadot-parameters#governance\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Polkadot Parameters · Polkadot Wiki</a>.<br>\n[31]: “<a href=\"http://Curve.fi\" rel=\"noopener nofollow ugc\">Curve.fi</a> Governance.” n.d. <a href=\"http://Curve.Fi\" rel=\"noopener nofollow ugc\">Curve.Fi</a> Governance. <a href=\"https://gov.curve.fi/\" rel=\"noopener nofollow ugc\">https://gov.curve.fi/</a>.<br>\n[32]: “Michael Egorov (<span class=\"mention\">@Newmichwill</span>) / X.” n.d. X (Formerly Twitter). <a href=\"https://twitter.com/newmichwill?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor\" rel=\"noopener nofollow ugc\">https://twitter.com/newmichwill?ref_src=twsrc^google|twcamp^serp|twgr^author</a>.<br>\n[33]: “Arkham | Deanonymizing the Blockchain.” n.d. <a href=\"https://www.arkhamintelligence.com/\" rel=\"noopener nofollow ugc\">https://www.arkhamintelligence.com/</a>.<br>\n[34]: CurveFi. n.d. “Understanding Gauges - Curve Resources.” <a href=\"https://resources.curve.fi/reward-gauges/understanding-gauges/\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Understanding gauges - Curve Resources</a>.</p>\n<h2><a name=\"appendix-13\" class=\"anchor\" href=\"https://ethresear.ch#appendix-13\"></a>Appendix</h2>\n<p><a name=\"table 1\" href=\"https://ethresear.ch\"></a><br>\nTable 1: veCRV amount by lock-up period</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>1 CRV is locked for</th>\n<th>The user is assigned</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>one week</td>\n<td>0 veCRV</td>\n</tr>\n<tr>\n<td>one month</td>\n<td>0.02 veCRV</td>\n</tr>\n<tr>\n<td>six months</td>\n<td>0.13 veCRV</td>\n</tr>\n<tr>\n<td>one year</td>\n<td>0.25 veCRV</td>\n</tr>\n<tr>\n<td>two years</td>\n<td>0.5 veCRV</td>\n</tr>\n<tr>\n<td>three years</td>\n<td>0.75 veCRV</td>\n</tr>\n<tr>\n<td>four years</td>\n<td>1 veCRV</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p><a name=\"table2\" href=\"https://ethresear.ch\"></a><br>\nTable 2: DOT conviction multiplier by democracy lock</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>1 DOT is locked for</th>\n<th>Multiplier</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>zero days</td>\n<td>0.1</td>\n</tr>\n<tr>\n<td>seven days</td>\n<td>1</td>\n</tr>\n<tr>\n<td>fourteen days</td>\n<td>2</td>\n</tr>\n<tr>\n<td>twenty eight days</td>\n<td>3</td>\n</tr>\n<tr>\n<td>fifty six days</td>\n<td>4</td>\n</tr>\n<tr>\n<td>one hundred and twelve days</td>\n<td>5</td>\n</tr>\n<tr>\n<td>two hundred and twenty four days</td>\n<td>6</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p><a name=\"table3\" href=\"https://ethresear.ch\"></a><br>\nTable 3: Top Proposal Address Labels on <a href=\"http://Curve.fi\" rel=\"noopener nofollow ugc\">Curve.fi</a></p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Rank</th>\n<th>Proposer Address</th>\n<th>Count</th>\n<th>ID on Arkham</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>0xbabe61887f1de2713c6f97e567623453d3c79f67</td>\n<td>55</td>\n<td><a href=\"http://Curve.fi\" rel=\"noopener nofollow ugc\">Curve.fi</a> Deployer</td>\n</tr>\n<tr>\n<td>2</td>\n<td>0x745748bcfd8f9c2de519a71d789be8a63dd7d66c</td>\n<td>28</td>\n<td><span class=\"mention\">@skellet0r</span> (<a href=\"http://Curve.fi\" rel=\"noopener nofollow ugc\">Curve.fi</a>)</td>\n</tr>\n<tr>\n<td>3</td>\n<td>0x7a16ff8270133f063aab6c9977183d9e72835428</td>\n<td>28</td>\n<td>Michael Egorov (<a href=\"http://Curve.fi\" rel=\"noopener nofollow ugc\">Curve.fi</a>)</td>\n</tr>\n<tr>\n<td>4</td>\n<td>0x0000000000e189dd664b9ab08a33c4839953852c</td>\n<td>22</td>\n<td>Charlie Watkins (<a href=\"http://Curve.fi\" rel=\"noopener nofollow ugc\">Curve.fi</a>)</td>\n</tr>\n<tr>\n<td>5</td>\n<td>0x71f718d3e4d1449d1502a6a7595eb84ebccb1683</td>\n<td>22</td>\n<td></td>\n</tr>\n<tr>\n<td>6</td>\n<td>0x947b7742c403f20e5faccdac5e092c943e7d0277</td>\n<td>22</td>\n<td>Convex Finance Deployer</td>\n</tr>\n<tr>\n<td>7</td>\n<td>0x34d6dbd097f6b739c59d7467779549aea60e1f84</td>\n<td>17</td>\n<td></td>\n</tr>\n<tr>\n<td>8</td>\n<td>0xa1992346630fa9539bc31438a8981c646c6698f1</td>\n<td>14</td>\n<td></td>\n</tr>\n<tr>\n<td>9</td>\n<td>0xf7bd34dd44b92fb2f9c3d2e31aaad06570a853a6</td>\n<td>13</td>\n<td></td>\n</tr>\n<tr>\n<td>10</td>\n<td>0x52f541764e6e90eebc5c21ff570de0e2d63766b6</td>\n<td>13</td>\n<td>Stake Dao: Curve yCRV Voter</td>\n</tr>\n</tbody>\n</table>\n</div>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/voter-behavior-in-blockchain-governance-a-comparative-study-of-curve-finance-and-polkadot/19436\">Read full topic</a></p>","link":"https://ethresear.ch/t/voter-behavior-in-blockchain-governance-a-comparative-study-of-curve-finance-and-polkadot/19436","pubDate":"Thu, 02 May 2024 12:59:29 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19436"},"source":{"@url":"https://ethresear.ch/t/voter-behavior-in-blockchain-governance-a-comparative-study-of-curve-finance-and-polkadot/19436.rss","#text":"Voter Behavior in Blockchain Governance: A Comparative Study of Curve Finance and Polkadot"},"filter":false},{"title":"Builder Reveal Timing Game in ePBS","dc:creator":"terence","category":"Uncategorized","description":"<p>This post starts by analyzing the advantages of consensus and execution block timing games both before and after the ePBS setting, focusing on the preparation time available to the next slot’s proposer/builder for the subsequent slot. We then dissect the dynamics of timing when the builder block reveals, focusing on altruistic, honest, and greedy rational builder rationale. The second half of the post highlights the greedy rational builder’s advantage in controlling the timing of the execution block reveal. Finally, we will list out a series of open questions for further exploration. First, a little meme:</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/8/6/8625554ee31b5e4a649d3fd9aa50855a7b0f1997.png\" alt=\"Screenshot 2024-04-30 at 9.30.36 AM\" data-base62-sha1=\"j8HXXDuAY1rQQG8finH40n5ydkH\" width=\"479\" height=\"341\"></p>\n<h3><a name=\"terminologies-acronyms-abbreviations-1\" class=\"anchor\" href=\"https://ethresear.ch#terminologies-acronyms-abbreviations-1\"></a>Terminologies, Acronyms &amp; Abbreviations</h3>\n<ul>\n<li><strong>ePBS (enshrined proposer-builder separation)</strong>: A protocol enhancement where relayer functionality in mev-boost setting becomes part of the protocol, enabling trustless exchanges between validators and builders. New validator duties: payload timeliness committees is introduced. Unless specified otherwise, references below refer to <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\" rel=\"noopener nofollow ugc\">block</a> <a href=\"https://hackmd.io/@potuz/rJ9GCnT1C\" rel=\"noopener nofollow ugc\">auction</a> ePBS.</li>\n<li><strong>CL (Consensus Layer)</strong>: Where consensus activities like votes, slashing, and deposits happen…</li>\n<li><strong>EL (Execution Layer)</strong>: Where execution activities like user transactions and EVM happen.</li>\n<li><strong>Pre-ePBS beacon block</strong>: A consensus block that contains consensus data and a full execution block.</li>\n<li><strong>Post-ePBS beacon block</strong>: A consensus block that contains consensus data and an execution header, the header commits to the execution block which is later revealed. The transactions are hidden.</li>\n<li><strong>Execution block</strong>: A block that contains execution data and transactions. Produced by builders.</li>\n<li><strong>Pre-ePBS Proposer</strong>: Builds and reveals pre-ePBS beacon block.</li>\n<li><strong>Post-ePBS Proposer</strong>: Builds and reveals post-ePBS beacon block.</li>\n<li><strong>Builder</strong>: Builds and reveals execution block in post-ePBS setting.</li>\n<li><strong>Beacon attester</strong>: Votes on the consensus block before <span class=\"math\">BeaconAttestationDeadline</span>.</li>\n<li><strong>Payload attester</strong>: Votes on the execution block before <span class=\"math\">PayloadAttestationDeadline</span>.</li>\n</ul>\n<h3><a name=\"settings-2\" class=\"anchor\" href=\"https://ethresear.ch#settings-2\"></a>Settings</h3>\n<p>Now we’ll go over each setting case by case. Focus on the following variations:</p>\n<ul>\n<li>Pre-ePBS setting</li>\n<li>Post-ePBS setting</li>\n<li>Spec definition: assuming no networking and client processing delays.</li>\n<li>Beacon proposer rational behavior: Inclue networking and processing delays and rational proposer and builder behaviors.</li>\n</ul>\n<h3><a name=\"pre-epbs-spec-definition-3\" class=\"anchor\" href=\"https://ethresear.ch#pre-epbs-spec-definition-3\"></a>Pre-ePBS + Spec definition</h3>\n<ul>\n<li>Proposer reveals pre-ePBS beacon block, which contains an execution block at <span class=\"math\">SlotStart</span>.</li>\n<li>Next slot beacon proposer or builder has <span class=\"math\">SlotDuration</span> to prepare an execution block for the next slot.</li>\n<li>The execution block preparation time for next slot is <span class=\"math\">SlotDuration</span>.<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/1/d14a473ed9b05e60bbe6c8068e7aaf0083f3e015.png\" data-download-href=\"https://ethresear.ch/uploads/default/d14a473ed9b05e60bbe6c8068e7aaf0083f3e015\" title=\"Screenshot 2024-04-25 at 11.18.56 AM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/1/d14a473ed9b05e60bbe6c8068e7aaf0083f3e015_2_690x148.png\" alt=\"Screenshot 2024-04-25 at 11.18.56 AM\" data-base62-sha1=\"tRsVM2NJrFvw5iGC609lklvBS2p\" width=\"690\" height=\"148\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/1/d14a473ed9b05e60bbe6c8068e7aaf0083f3e015_2_690x148.png, https://ethresear.ch/uploads/default/original/3X/d/1/d14a473ed9b05e60bbe6c8068e7aaf0083f3e015.png 1.5x, https://ethresear.ch/uploads/default/original/3X/d/1/d14a473ed9b05e60bbe6c8068e7aaf0083f3e015.png 2x\" data-dominant-color=\"E3E3E3\"></a></div></li>\n</ul>\n<h3><a name=\"pre-epbs-beacon-proposer-rational-behavior-4\" class=\"anchor\" href=\"https://ethresear.ch#pre-epbs-beacon-proposer-rational-behavior-4\"></a>Pre-ePBS + Beacon proposer rational behavior</h3>\n<ul>\n<li>Proposer reveals pre-ePBS beacon block as close to the <span class=\"math\">BeaconAttestationDeadline</span> as possible.</li>\n<li>Next slot proposer or builder has <span class=\"math\">SlotDuration-AttestationDeadline</span> time to prepare an execution block for the next slot.</li>\n<li>The next slot beacon proposer may also play timing game:\n<ul>\n<li>The execution block preparation time for next slot is <span class=\"math\">SlotDuration</span> w/ timing game.</li>\n<li>The execution block preparation time for next slot is <span class=\"math\">SlotDuration-AttestationDeadline</span> w/o timing game.</li>\n</ul>\n</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/4/74da7e206fa90ee82830043bbed4a51b2dac96af.png\" data-download-href=\"https://ethresear.ch/uploads/default/74da7e206fa90ee82830043bbed4a51b2dac96af\" title=\"Screenshot 2024-04-25 at 11.19.22 AM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/4/74da7e206fa90ee82830043bbed4a51b2dac96af_2_690x158.png\" alt=\"Screenshot 2024-04-25 at 11.19.22 AM\" data-base62-sha1=\"gFJvja83eyD8mo1XDUzeKoMlUgn\" width=\"690\" height=\"158\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/4/74da7e206fa90ee82830043bbed4a51b2dac96af_2_690x158.png, https://ethresear.ch/uploads/default/original/3X/7/4/74da7e206fa90ee82830043bbed4a51b2dac96af.png 1.5x, https://ethresear.ch/uploads/default/original/3X/7/4/74da7e206fa90ee82830043bbed4a51b2dac96af.png 2x\" data-dominant-color=\"E3E3E3\"></a></div><p></p>\n<p>Note: The beacon proposer playing the timing game will consider P2P propagation time and the client processing times.<br>\n<img src=\"https://ethresear.ch/uploads/default/original/3X/0/1/01f704b8a2c554661c428981b6202b07ea37d7e9.png\" alt=\"Screenshot 2024-04-25 at 11.19.46 AM\" data-base62-sha1=\"hnI95CtFeGAfpzK8Z4My0l8PY5\" width=\"685\" height=\"198\"></p>\n<h3><a name=\"post-epbs-spec-definition-5\" class=\"anchor\" href=\"https://ethresear.ch#post-epbs-spec-definition-5\"></a>Post-ePBS + Spec definition</h3>\n<p>At this point, we assume readers have sufficient knowledge of how the basics of post-ePBS work. If not, refer to <a href=\"https://hackmd.io/@potuz/rJ9GCnT1C#Anatomy-of-a-slot\" rel=\"noopener nofollow ugc\">Anatomy of a Slot</a>. In most ePBS designs, a slot is divided into two intervals: the first is about consensus that commits to the execution header, and the second is about revealing the execution result. This clear pipelining has several benefits but also introduces new dynamic which we will explore below.</p>\n<ul>\n<li>Proposer reveals post-ePBS beacon block at the <span class=\"math\">SlotStart</span>.</li>\n<li>Winning builder observes the proposer’s commitment to its submitted execution header.</li>\n<li>If the header is committed and when it’s safe to reveal, the builder reveals the execution block at <span class=\"math\">SlotStart / 2</span>.</li>\n<li>The execution block preparation time for next slot is <span class=\"math\">SlotDuration / 2</span></li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/0/40483990d88767b417907d3987fd554620adce35.png\" data-download-href=\"https://ethresear.ch/uploads/default/40483990d88767b417907d3987fd554620adce35\" title=\"Screenshot 2024-04-25 at 11.21.35 AM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/0/40483990d88767b417907d3987fd554620adce35_2_690x164.png\" alt=\"Screenshot 2024-04-25 at 11.21.35 AM\" data-base62-sha1=\"9aFiy0UYEDdu2mWyyjaAoAwZphr\" width=\"690\" height=\"164\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/0/40483990d88767b417907d3987fd554620adce35_2_690x164.png, https://ethresear.ch/uploads/default/original/3X/4/0/40483990d88767b417907d3987fd554620adce35.png 1.5x, https://ethresear.ch/uploads/default/original/3X/4/0/40483990d88767b417907d3987fd554620adce35.png 2x\" data-dominant-color=\"E4E4E4\"></a></div><p></p>\n<p>Note: No one can start preparing for the next slot’s execution block unless the current execution block is revealed.</p>\n<h3><a name=\"post-epbs-x-beacon-proposer-rational-behavior-6\" class=\"anchor\" href=\"https://ethresear.ch#post-epbs-x-beacon-proposer-rational-behavior-6\"></a>Post-ePBS x Beacon proposer rational behavior</h3>\n<ul>\n<li>Proposer reveals post-ePBS beacon block as close to the new <span class=\"math\">BeaconAttestationDeadlineEPBS</span> as possible.</li>\n<li>Builder observes the proposer’s commitment to its submitted execution header.</li>\n<li>If the header is committed and when it’s safe to reveal, the builder reveals the execution block at <span class=\"math\">SlotStart / 2</span>.</li>\n<li>The next slot beacon proposer may also play timing game:\n<ul>\n<li>The execution block preparation time for next slot is <span class=\"math\">SlotDuration - (SlotStart / 2) + BeaconAttestationDeadlineEPBS</span> w/ timing game</li>\n<li>The execution block preparation time for next slot is <span class=\"math\">SlotDuration - (SlotStart / 2)</span> w/o timing game</li>\n</ul>\n</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/e/ee5b4978408abc7a23d6e4a27e3861048c8b3ed9.png\" data-download-href=\"https://ethresear.ch/uploads/default/ee5b4978408abc7a23d6e4a27e3861048c8b3ed9\" title=\"Screenshot 2024-04-25 at 11.22.08 AM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/e/ee5b4978408abc7a23d6e4a27e3861048c8b3ed9_2_690x204.png\" alt=\"Screenshot 2024-04-25 at 11.22.08 AM\" data-base62-sha1=\"y0BdBxvu4e21qo6ZgOwON8TEugh\" width=\"690\" height=\"204\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/e/ee5b4978408abc7a23d6e4a27e3861048c8b3ed9_2_690x204.png, https://ethresear.ch/uploads/default/original/3X/e/e/ee5b4978408abc7a23d6e4a27e3861048c8b3ed9.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/e/ee5b4978408abc7a23d6e4a27e3861048c8b3ed9.png 2x\" data-dominant-color=\"E4E4E4\"></a></div><p></p>\n<p>Notes:</p>\n<ol>\n<li>At first glance, the beacon block proposer will still play the timing game and try to release as close to <span class=\"math\">BeaconAttestationDeadlineEPBS</span> as possible. Nothing changes in that regard.</li>\n<li><span class=\"math\">BeaconAttestationDeadlineEPBS</span> is 1s shorter than <span class=\"math\">BeaconAttestationDeadline</span> to account for payload timeliness committee duty fitting within <span class=\"math\">SlotDuration</span>.</li>\n<li>The beacon proposer playing the timing game will consider P2P propagation time and the processing times of both the CL client and the EL client.</li>\n</ol>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/2/b2ba91ddc0a51a9e3757f8907ba98202f2e513aa.png\" data-download-href=\"https://ethresear.ch/uploads/default/b2ba91ddc0a51a9e3757f8907ba98202f2e513aa\" title=\"Screenshot 2024-04-25 at 11.22.24 AM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/2/b2ba91ddc0a51a9e3757f8907ba98202f2e513aa_2_690x186.png\" alt=\"Screenshot 2024-04-25 at 11.22.24 AM\" data-base62-sha1=\"pv6IflRuvp62SGrSVf2yvfOikoq\" width=\"690\" height=\"186\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/2/b2ba91ddc0a51a9e3757f8907ba98202f2e513aa_2_690x186.png, https://ethresear.ch/uploads/default/original/3X/b/2/b2ba91ddc0a51a9e3757f8907ba98202f2e513aa.png 1.5x, https://ethresear.ch/uploads/default/original/3X/b/2/b2ba91ddc0a51a9e3757f8907ba98202f2e513aa.png 2x\" data-dominant-color=\"E2E2E2\"></a></div><p></p>\n<h3><a name=\"execution-block-reveal-window-7\" class=\"anchor\" href=\"https://ethresear.ch#execution-block-reveal-window-7\"></a>Execution block reveal window</h3>\n<p>So far, we have focused on the beacon block reveal window. What about the execution block reveal window once its header is committed in the beacon block? The consensus spec indicates that the builder should reveal at <span class=\"math\">SlotDuration / 2</span>, but what is the execution block reveal window? Let’s first consider how early the builder could reveal its execution block once it’s “safe” to do so. The builder monitors the fork choice weight of the beacon block which commits to its header. If the weight is weak, the builder may choose to withhold the execution block by sending a withhold message. Assuming the message is seen by more than half of execution block committee, a withhold boost is granted and gives fork choice weight to the beacon block’s parent, which allows subsequent honest proposer and attesters to reorg the weak beacon block of the canonical view, so the builder has a way out of unconditional payment.</p>\n<p>To determine how much the fork weight is sufficient to reveal, consider the attack where the next slot’s proposer is malicious, and wants to reorg the builder’s execution block. We want the next slot’s attesters to recognize the builder’s execution block as head. This requires winning the following equation: assuming <span class=\"math\">X</span> represents the percentage of current slot attesters who voted for the beacon block, <span class=\"math\">1-X</span> is missing, and you want execution block’s <span class=\"math\">RevealBoost + X &gt; ProposerBoost + 1 - X</span> to be true. With <span class=\"math\">RevealBoost=40</span> and <span class=\"math\">ProposerBoost=20</span>, the builder should reveal when <span class=\"math\">X&gt;40</span>. This means over 40% of the current slot’s beacon committee members voted for the proposer’s beacon block for the builder to feel “safe” to reveal.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/f/ff126f5ba6a4bd8e4f2772ae860558a3469645ea.png\" data-download-href=\"https://ethresear.ch/uploads/default/ff126f5ba6a4bd8e4f2772ae860558a3469645ea\" title=\"Screenshot 2024-04-25 at 11.22.47 AM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/f/ff126f5ba6a4bd8e4f2772ae860558a3469645ea_2_690x234.png\" alt=\"Screenshot 2024-04-25 at 11.22.47 AM\" data-base62-sha1=\"AotfBJQ0Jw8tqaSYox7zC9u1Qi6\" width=\"690\" height=\"234\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/f/ff126f5ba6a4bd8e4f2772ae860558a3469645ea_2_690x234.png, https://ethresear.ch/uploads/default/original/3X/f/f/ff126f5ba6a4bd8e4f2772ae860558a3469645ea.png 1.5x, https://ethresear.ch/uploads/default/original/3X/f/f/ff126f5ba6a4bd8e4f2772ae860558a3469645ea.png 2x\" data-dominant-color=\"E6E6E6\"></a></div><p></p>\n<p>Note: <span class=\"math\">RevealBoost + X &gt; ProposerBoost + 1 - X</span> assumes the next slot’s proposer wants to reorg the current beacon block + execution block. This is a more powerful attack than just reorg the execution block itself because it gets <span class=\"math\">1-X</span> on its side due to (block, slot) voting.</p>\n<p>Now we have determined that the builder may feel safe to reveal the execution block as soon as it observes that more than 40% of beacon attesters have voted for the beacon block. We will refer to this  point as the <span class=\"math\">SafeRevealDeadline</span>. When is the latest point a builder can reveal? The latest point is the <span class=\"math\">PayloadAttestationDeadline</span>, which is when payload attestations vote on whether the execution block has revealed on time and valid. Thus, the builder’s reveal window spans from <span class=\"math\">SafeRevealDeadline</span> to <span class=\"math\">PayloadAttestationDeadline</span>.</p>\n<p>Note: Similar to the beacon proposer, the builder will consider P2P propagation time and the execution processing times of the execution block.</p>\n<h3><a name=\"execution-block-reveal-strategy-8\" class=\"anchor\" href=\"https://ethresear.ch#execution-block-reveal-strategy-8\"></a>Execution block reveal strategy</h3>\n<p>When modeling rational builder behaviors, consider that builders compete to submit the highest bids at <span class=\"math\">SlotStart</span> and that having more time to prepare the execution block incurs an advantage to pack a more profitable execution block. The starting time for building the next slot’s execution block depends on knowing the execution result of the current slot’s execution block. Builders can be categorized into two modes: the winning builder of the current slot and all other builders who did not win but want to win next slot. The winning builder can start building for the next slot as soon as its header is committed in the beacon block, while all others must wait until the current’s block is revealed. Below is a table summarizing the three strategies of the winning builder can impose based on reveal time:</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Builder Type</th>\n<th>Reveal Time</th>\n<th>Time for Others to Prepare Next Slot Block</th>\n<th>Time for Self to Prepare Next Slot Block</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Altruistic</td>\n<td><span class=\"math\">SafeDeadline</span></td>\n<td><span class=\"math\">SlotDuration-SafeRevealTime</span></td>\n<td><span class=\"math\">SlotDuration-BeaconAttestationDeadlineEPBS</span></td>\n</tr>\n<tr>\n<td>Spec</td>\n<td><span class=\"math\">SlotDuration/2</span></td>\n<td><span class=\"math\">SlotDuation/2</span></td>\n<td><span class=\"math\">SlotDuration-BeaconAttestationDeadlineEPBS</span></td>\n</tr>\n<tr>\n<td>Greedy Rational</td>\n<td><span class=\"math\">PayloadAttestationDeadLine</span></td>\n<td><span class=\"math\">SlotDuration-PayloadAttestationDeadLine</span></td>\n<td><span class=\"math\">SlotDuration-BeaconAttestationDeadlineEPBS</span></td>\n</tr>\n</tbody>\n</table>\n</div><p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/7/87f2dbdcc953b1df4b2bb38b18a6986e543dc350.png\" data-download-href=\"https://ethresear.ch/uploads/default/87f2dbdcc953b1df4b2bb38b18a6986e543dc350\" title=\"Screenshot 2024-04-25 at 11.24.03 AM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/7/87f2dbdcc953b1df4b2bb38b18a6986e543dc350_2_690x224.png\" alt=\"Screenshot 2024-04-25 at 11.24.03 AM\" data-base62-sha1=\"joEMqOQ6cBtEPnQk8ZGb8kvCayI\" width=\"690\" height=\"224\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/7/87f2dbdcc953b1df4b2bb38b18a6986e543dc350_2_690x224.png, https://ethresear.ch/uploads/default/original/3X/8/7/87f2dbdcc953b1df4b2bb38b18a6986e543dc350.png 1.5x, https://ethresear.ch/uploads/default/original/3X/8/7/87f2dbdcc953b1df4b2bb38b18a6986e543dc350.png 2x\" data-dominant-color=\"E7E7E7\"></a></div><p></p>\n<p>The builder of the current winning slot influencees when the next slot’s builder can start building their block. The dominant strategy for a builder may be to win the current block auction and reveal as late as possible, thus securing more time to build than the competition and such advantage may compound across multiple subsequent slots.</p>\n<p>If the next slot proposer plays timing game, all builders receive extra time, equal to the <span class=\"math\">BeaconAttestationDeadline</span>, to prepare the execution block. This scenario assumes that builders continue to submit their bids and execution headers after <span class=\"math\">SlotStart</span>, approaching the deadline, via p2p or RPC.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/0/10ddcfc505452ddb63da807366c41bf1605e1c6c.png\" data-download-href=\"https://ethresear.ch/uploads/default/10ddcfc505452ddb63da807366c41bf1605e1c6c\" title=\"Screenshot 2024-04-30 at 9.02.05 AM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/0/10ddcfc505452ddb63da807366c41bf1605e1c6c_2_690x192.png\" alt=\"Screenshot 2024-04-30 at 9.02.05 AM\" data-base62-sha1=\"2pcRReNSD9VGULwgAeUC4fvRzek\" width=\"690\" height=\"192\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/0/10ddcfc505452ddb63da807366c41bf1605e1c6c_2_690x192.png, https://ethresear.ch/uploads/default/original/3X/1/0/10ddcfc505452ddb63da807366c41bf1605e1c6c.png 1.5x, https://ethresear.ch/uploads/default/original/3X/1/0/10ddcfc505452ddb63da807366c41bf1605e1c6c.png 2x\" data-dominant-color=\"E4E4E4\"></a></div><p></p>\n<h3><a name=\"builder-reveal-strategy-in-other-epbs-auctions-9\" class=\"anchor\" href=\"https://ethresear.ch#builder-reveal-strategy-in-other-epbs-auctions-9\"></a>Builder reveal strategy in other ePBS auctions</h3>\n<p>The advantage which the current slot winning builder gains may be fundamental in other ePBS auction designs, such as slot auction, but the dynamics and advantages slightly differ in other designs. Let’s examine the examples in a simple slot auction:</p>\n<p>In a simple slot auction, the beacon proposer selects the winning builder without committing to the execution outcome, they only commit to the future right of who can propose the execution block. Here, the beacon proposer timing game is no longer relevant. Under rational strategy, the proposer reveals the beacon block at <span class=\"math\">SlotStart</span>. A builder following the honest spec definition should reveal at <span class=\"math\">SlotDuration/2</span>, but under a rational, greedy strategy, the builder may reveal close to the <span class=\"math\">ExecutionAttestationDeadline</span>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/3/c3f4abd52ed84e736ba299fe4c5a613650901cab.png\" data-download-href=\"https://ethresear.ch/uploads/default/c3f4abd52ed84e736ba299fe4c5a613650901cab\" title=\"Screenshot 2024-04-25 at 11.24.56 AM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/3/c3f4abd52ed84e736ba299fe4c5a613650901cab_2_690x251.png\" alt=\"Screenshot 2024-04-25 at 11.24.56 AM\" data-base62-sha1=\"rXvjmUC9A474CqdjqZxfwWKYGAb\" width=\"690\" height=\"251\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/3/c3f4abd52ed84e736ba299fe4c5a613650901cab_2_690x251.png, https://ethresear.ch/uploads/default/original/3X/c/3/c3f4abd52ed84e736ba299fe4c5a613650901cab.png 1.5x, https://ethresear.ch/uploads/default/original/3X/c/3/c3f4abd52ed84e736ba299fe4c5a613650901cab.png 2x\" data-dominant-color=\"E6E6E6\"></a></div><p></p>\n<p>Revealing close to the deadline now gains more advantages than ePBS block auction:</p>\n<ol>\n<li>Gives more time to build the execution block.</li>\n<li>Gives everyone else less time to come up with a confident value bid for the next slot.</li>\n</ol>\n<p>The main reason for a builder to reveal the block close to the execution deadline is to maximize the time available to build the execution block and chase more value, which is a different emphasis than in the block auction model. The winning builder may have a better valuation for the next slot, given its consistent view of the mempool but that may be irrelevant.</p>\n<p>In the execution ticket model, since the ticket selection occurs far in advance, the execution proposer assignments can be determined and known an epoch before, it becomes less practical to manipulate. To attempt gaming the system, one would need to purchase a lot of tickets at once, but these tickets might have to go through a pending queue before becoming eligible. The specific design details are to be determined.</p>\n<h3><a name=\"open-questions-10\" class=\"anchor\" href=\"https://ethresear.ch#open-questions-10\"></a>Open questions</h3>\n<p>The dominant strategy for the builder discussed above is purely speculative, there are many open questions to answer. One key question is how should the builder bid value correlates by having more time to prepare. How much of the bid value is based on more build time versus more private order flow? If most of the value comes from private order flow, it may be ok for the winning builder to have more time to build than everyone else. But to create a fair and competitive environment, it could be beneficial to define some baseline models that specifiy a minimal build time for all builders, ensuring some equal footings. Could there be incentives or enforcement mechanisms to ensure builders reveal their execution payload on time? One approach could be to make the <span class=\"math\">PayloadAttestationDeadline</span> random from the perspective of the payload timeliness committee, making it harder for the builder to game the reveal time. Another straightforward solution is to set the <span class=\"math\">PayloadAttestationDeadline</span> earlier, which requires consideration of several factors such as the propagation times for attestations and execution payloads, and the time needed to verify an execution payload. When a builder wins consecutive slots, such as slots n and n+1, does this provide a compounding advantage for winning subsequent slots like n+2, compared to winning only slot n+1? This aspect is currently unclear and requires more formalized analysis. Finally when a proposer commits to a builder’s block, could an execution state difference be shared and allow other builders to get the peak of the final state and allow other builders to start building on top without winning builder having to leak the payload? Gossiping the entire execution state is not feasible, but perhaps a cryptographic solution like Verkle trees or SNARKs could be used to communicate the state difference efficiently. However, it’s still uncertain whether this is fully safe and what second-order effects might arise.</p>\n<p><strong>Acknowledgment</strong>:<br>\nAlthough reviews cannot be viewed as an endorsements, I want to thank <a href=\"https://twitter.com/barnabemonnot\" rel=\"noopener nofollow ugc\">Barnabe</a> for his feedback on typos and his suggestion to extend to the <code>n+1</code> slot. This extension provides a clearer impression of the time available for <code>n+1</code> builders to construct their block if the <code>n+1</code> proposer is engaging in timing games.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/builder-reveal-timing-game-in-epbs/19424\">Read full topic</a></p>","link":"https://ethresear.ch/t/builder-reveal-timing-game-in-epbs/19424","pubDate":"Tue, 30 Apr 2024 16:37:39 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19424"},"source":{"@url":"https://ethresear.ch/t/builder-reveal-timing-game-in-epbs/19424.rss","#text":"Builder Reveal Timing Game in ePBS"},"filter":true},{"title":"Slashing Proofoor - On-chain slashed validator proofs","dc:creator":"Nerolation","category":"Execution Layer Research","description":"<h1><a name=\"slashing-proofoor-on-chain-slashed-validator-proofs-1\" class=\"anchor\" href=\"https://ethresear.ch#slashing-proofoor-on-chain-slashed-validator-proofs-1\"></a>Slashing Proofoor - On-chain slashed validator proofs</h1>\n<p>As of the <a href=\"https://github.com/ethereum/consensus-specs/tree/dev/specs/deneb\" rel=\"noopener nofollow ugc\">Dencun hardfork</a> in March 2024, it is possible to prove consensus layer information inside the EVM.<br>\nThis was made possible through <a href=\"https://eips.ethereum.org/EIPS/eip-4788\" rel=\"noopener nofollow ugc\">EIP-4788</a>, which proposed to make historic beacon block roots available inside the EVM and thereby enable contracts to verify proofs against them.<br>\nPotential use cases include withdrawal proofs for staking node operators or slashing proofs for restaking protocols.</p>\n<p>The latter will be the topic of this post/tutorial.</p>\n<blockquote>\n<p>Find the code <a href=\"https://github.com/nerolation/slashing-proofoor\" rel=\"noopener nofollow ugc\">here</a>.</p>\n</blockquote>\n<h2><a name=\"eip-4788-beacon-block-root-in-the-evm-2\" class=\"anchor\" href=\"https://ethresear.ch#eip-4788-beacon-block-root-in-the-evm-2\"></a>EIP-4788 - Beacon block root in the EVM</h2>\n<p>The specification of <a href=\"https://eips.ethereum.org/EIPS/eip-4788\" rel=\"noopener nofollow ugc\">EIP-4788</a> outlines the addition of a new field in the execution block headers: parent_beacon_block_root. This 32-byte field holds the hash tree root of the parent beacon block. This root is then stored and accessible in a smart contract at <a href=\"https://beaconcha.in/address/000f3df6d732807ef1319fb7b8bb8522d0beac02\" rel=\"noopener nofollow ugc\">0x000F3df6D732807Ef1319fB7B8bB8522d0Beac02</a>, that maintains a ring buffer with the 8191 most recent beacon block roots.</p>\n<p>The contract has a get and set function and by using a method like the following one can get the beacon block root identified by timestamp:</p>\n<pre><code class=\"lang-python\">// Example contract for interacting with the beacon roots storage contract (EIP-4788)\ncontract IBeaconRoots  {\n    address beaconRootsContract = 0x000F3df6D732807Ef1319fB7B8bB8522d0Beac02;\n\n    function getRootFromTimestamp(uint256 timestamp) public returns (bytes32) {\n        (bool ret, bytes memory data) = beaconRootsContract.call(bytes.concat(bytes32(timestamp)));\n        return bytes32(data);\n    }\n}\n</code></pre>\n<p>With the historical roots of the beacon blocks inside the EVM, we can create proofs for everything inside a <a href=\"https://eth2book.info/capella/annotated-spec/#beacon-block\" rel=\"noopener nofollow ugc\">beacon block</a>, including the <a href=\"https://eth2book.info/capella/annotated-spec/#beacon-state\" rel=\"noopener nofollow ugc\">beacon state</a>.<br>\nThis includes validator balances, withdrawal credentials, deposits, withdrawals, sync committees and many more. Combining this with SNARKs, one could think of applications that allow you to provide a zk proof proving you’re a validator (having the private key for one of the withdrawal credentials as a private argument) without revealing which one. And this is just one out of many very powerful use cases.</p>\n<h2><a name=\"slashing-proofoor-3\" class=\"anchor\" href=\"https://ethresear.ch#slashing-proofoor-3\"></a>Slashing-Proofoor</h2>\n<p><a href=\"https://github.com/nerolation/slashing-proofoor\" rel=\"noopener nofollow ugc\">Slashing-Proofoor</a> leverages EIP-4788 to allow users to prove that a specified validator hasn’t been slashed.<br>\nThis comes in particularly handy for applications that need that information inside the EVM and are currently dependent on trusted entities to deliver that information.</p>\n<h3><a name=\"how-does-such-a-proof-work-4\" class=\"anchor\" href=\"https://ethresear.ch#how-does-such-a-proof-work-4\"></a>How does such a proof work?</h3>\n<p>First, everything inside a beacon block is basically a root of a merkle tree which itself is composed of the roots of even more merkle trees. This means we can prove ourselves from the bottom to the top, from the individual validator that is deeply nested inside the state, to the top - the beacon block.</p>\n<h4><a name=\"h-1-the-validator-construction-5\" class=\"anchor\" href=\"https://ethresear.ch#h-1-the-validator-construction-5\"></a>(1) The validator construction</h4>\n<p>As a first step, we compute the hash_tree_root of the validator object we’d like to prove. A validator is nothing else than data in the following structure:</p>\n<pre><code class=\"lang-python\">class Validator(Container):\n    pubkey: BLSPubkey\n    withdrawal_credentials: Bytes32  # Commitment to pubkey for withdrawals\n    effective_balance: Gwei  # Balance at stake\n    slashed: boolean\n    # Status epochs\n    activation_eligibility_epoch: Epoch  # When criteria for activation were met\n    activation_epoch: Epoch\n    exit_epoch: Epoch\n    withdrawable_epoch: Epoch  # When validator can withdraw funds \n</code></pre>\n<p>Our goal is to get to the validator’s <code>hash_tree_root</code> which, simply speaking, is hashing together all elements of the respective validator.<br>\nMore precisely, we first compute the <code>hash_tree_root</code> of all elements inside <code>validator</code>:</p>\n<pre><code class=\"lang-python\">hash_tree_roots = [hash_tree_root(elem) for elem in state.validator[...]]\n</code></pre>\n<p>This gives us a list with 8 32-bytes elements.</p>\n<p><strong>Under the hood we do the following:</strong><br>\n<br></p>\n\n<img src=\"https://ethresear.ch/uploads/default/original/3X/1/9/197bcb79dd5f32b8d6174def663169537588a1e2.png\" data-base62-sha1=\"3DrahWksmGgmTFH3YyGFUdlc2RQ\" alt=\"drawing\" width=\"600\" height=\"267\">\n\n<br>\n<br>\n<p>It is worth noting that the validator object contains the boolean <code>slashed</code>. We therefore make sure that our on-chain implementation can validate the <code>slashed</code> status when providing the hash tree roots of our validator to a contract (see first <code>require</code> statement in below code).<br>\nIf the 4th value of <code>hash_tree_roots</code> is equal to <code>bytes32(0)</code>, then this means that the respective validator has not been slashed.</p>\n<h4><a name=\"h-2-the-validators-proof-6\" class=\"anchor\" href=\"https://ethresear.ch#h-2-the-validators-proof-6\"></a>(2) The validators proof</h4>\n<blockquote>\n<p><strong>proof</strong>: <em>\"The constructed validator is part of the validator set.</em>\"</p>\n</blockquote>\n<p>Next, we must be able to proof that the validator that we just provided through an array of <code>hash_tree_roots</code> is actually part of the validator set the beacon state is aware of.<br>\nWe do so through another merkle proof and provide the following inputs:</p>\n<ul>\n<li>The leaf, as the <code>hash_tree_root</code> of <code>hash_tree_roots</code> from the previous step</li>\n<li>The merkle branch/proof</li>\n<li>The <code>index</code> telling where in the merkle tree our validator is located</li>\n<li>The root of the <code>beaconState.validators</code> Merkle Tree we prove against.</li>\n</ul>\n<p>This is super simple and by using the result of (1) inside (2), we chain the two proofs together.</p>\n\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/a/5a8f198be2c1f595235b750957c57973321d1959.png\" data-download-href=\"https://ethresear.ch/uploads/default/5a8f198be2c1f595235b750957c57973321d1959\" title=\"drawing\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/a/5a8f198be2c1f595235b750957c57973321d1959_2_400x318.png\" data-base62-sha1=\"cV7yRcHcyy7vrAcLs7NHn7wVG4x\" alt=\"drawing\" width=\"400\" height=\"318\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/a/5a8f198be2c1f595235b750957c57973321d1959_2_400x318.png, https://ethresear.ch/uploads/default/optimized/3X/5/a/5a8f198be2c1f595235b750957c57973321d1959_2_600x477.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/a/5a8f198be2c1f595235b750957c57973321d1959.png 2x\" data-dominant-color=\"F0E8DE\"></a></div>\n\n<h4><a name=\"h-3-the-beacon-state-proof-7\" class=\"anchor\" href=\"https://ethresear.ch#h-3-the-beacon-state-proof-7\"></a>(3) The beacon state proof</h4>\n<blockquote>\n<p><strong>proof</strong>: <em>\"The just constructed validator array is part of the state.</em>\"</p>\n</blockquote>\n<p>In this step we take the <code>hash_tree_root</code> of <code>beaconstate.validators</code> and prove that our validators object is indeed part of the state.</p>\n<p>This proof consists of the following:</p>\n<ul>\n<li>The leaf, as the <code>hash_tree_root</code> of the validator list from the previous step</li>\n<li>The merkle branch/proof</li>\n<li>The <code>index</code> telling where in the merkle tree the validators array is located, this is index 11.</li>\n<li>The root of the beacon state we prove against.</li>\n</ul>\n<p>If verified, we have successfully proven that our validators list is part of the state. However, we haven’t proven that this state is correct yet.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/1/a12e60426fe0cb496d55513651d67f49e7ac7f05.png\" data-download-href=\"https://ethresear.ch/uploads/default/a12e60426fe0cb496d55513651d67f49e7ac7f05\" title=\"drawing\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/1/a12e60426fe0cb496d55513651d67f49e7ac7f05_2_690x293.png\" data-base62-sha1=\"mZSerf2KxEuoqqnNdMUFhxawgLz\" alt=\"drawing\" width=\"690\" height=\"293\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/1/a12e60426fe0cb496d55513651d67f49e7ac7f05_2_690x293.png, https://ethresear.ch/uploads/default/optimized/3X/a/1/a12e60426fe0cb496d55513651d67f49e7ac7f05_2_1035x439.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/a/1/a12e60426fe0cb496d55513651d67f49e7ac7f05_2_1380x586.png 2x\" data-dominant-color=\"EEE8E3\"></a></div><p></p>\n<h4><a name=\"h-4-the-beacon-block-proof-8\" class=\"anchor\" href=\"https://ethresear.ch#h-4-the-beacon-block-proof-8\"></a>(4) The beacon block proof</h4>\n<blockquote>\n<p><strong>proof</strong>: <em>\"The derived beacon state root has been part of a canonical block.</em>\"</p>\n</blockquote>\n<p>Finally, we do the same again to prove that the root we provided for (3) is actually the state root part of the beacon block we’re proving against.</p>\n<p>This is yet another merkle proof with the following elements:</p>\n<ul>\n<li>The leaf, as the <code>hash_tree_root</code> of the state from the previous step</li>\n<li>The merkle branch/proof</li>\n<li>The <code>index</code> telling where in the beacon block merkle tree the state array is located, this is index 3.</li>\n<li>The root of the beacon block we prove against. This root is accessible via the EVM.</li>\n</ul>\n<p><strong>This completes our proof.</strong><br>\n<strong>If the final merkle proof is valid, we successfully proved that a certain validator has been slashed (or the opposite).</strong></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/1/c1d1fc9c4cf68eae164111bd734330d41cfac36d.png\" data-download-href=\"https://ethresear.ch/uploads/default/c1d1fc9c4cf68eae164111bd734330d41cfac36d\" title=\"drawing\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/1/c1d1fc9c4cf68eae164111bd734330d41cfac36d_2_690x169.png\" data-base62-sha1=\"rEC2SbGRhYNFabqAxmFkrIZxNUh\" alt=\"drawing\" width=\"690\" height=\"169\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/1/c1d1fc9c4cf68eae164111bd734330d41cfac36d_2_690x169.png, https://ethresear.ch/uploads/default/optimized/3X/c/1/c1d1fc9c4cf68eae164111bd734330d41cfac36d_2_1035x253.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/1/c1d1fc9c4cf68eae164111bd734330d41cfac36d_2_1380x338.png 2x\" data-dominant-color=\"EBE1DF\"></a></div><p></p>\n<p>The solidity contract for constructing the validator object (…and its <code>hash_tree_root</code>) and for verifying the required Merkle proofs may look like the following:</p>\n<pre><code class=\"lang-c\">// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n// Import Merkle tree related utilities for efficient data proofs\nimport \"./Merkleizer.sol\";\nimport \"./MerkleTree.sol\";\n\n// Contract for managing slash proofs of validators\ncontract SlashingProofoor is Merkleizer, MerkleProof {\n    uint public constant VALIDATOR_REGISTRY_LIMIT = 2**40;\n    address beaconRootsContract = 0x000F3df6D732807Ef1319fB7B8bB8522d0Beac02;\n    uint256 private constant HISTORY_BUFFER_LENGTH = 8191;\n\n    constructor(bytes32[] memory _zerohashes) Merkleizer(_zerohashes) {}\n\n    function getRootFromTimestamp(uint256 timestamp) public returns (bytes32) {\n        (bool ret, bytes memory data) = beaconRootsContract.call(bytes.concat(bytes32(timestamp)));\n        require(ret);\n        return bytes32(data);\n    }\n\n    /**\n     * @dev Verifies non-slashing proof of a validator using multiple Merkle proofs.\n     * @param blockTimestamp The timestamp of the block related to the proof verification context.\n     * @param validatorChunks Array of data chunks corresponding to the validator's attributes.\n     * @param validatorsProof Merkle proofs for the beaconState.validators list.\n     * @param validatorIndex Index of the validator in the beaconState.validators list.\n     * @param validatorsRoot The root hash of the beaconState.validators tree.\n     * @param beaconStateProof Merkle proof for the beacon state.\n     * @param nr_validators Number of validators in beacon state.\n     * @param beaconStateRoot The beacon state root used for verification.\n     * @param beaconBlockProof Merkle proof for the beacon block.\n     * @return success True if all validations pass, otherwise reverts.\n     */\n    function verifyProof(\n        uint256 blockTimestamp,\n        bytes32[] memory validatorChunks,\n        bytes32[] memory validatorsProof,\n        uint256 validatorIndex,\n        bytes32 validatorsRoot,\n        uint256 nr_validators,\n        bytes32[] memory beaconStateProof,\n        bytes32 beaconStateRoot,\n        bytes32[] memory beaconBlockProof\n    ) public returns (bool success) {\n        // Ensure the validator has not been slashed (the slashing flag in the chunk must be zero)\n        require(validatorChunks[3] != bytes32(0), \"Provided validator chunks indicate non-slashed validator\");\n\n        // Compute the hash tree root of the validator's chunks\n        bytes32 valHashTreeRoot = merkleizeChunks(validatorChunks, 8);\n\n        // Verify the validator's position and inclusion in the state's validator list\n        require(verify(validatorsProof, validatorsRoot, valHashTreeRoot, validatorIndex), \"Validator proof failed\");\n\n        // Calculate the validators hash tree root by mixing in the number of validators\n        bytes32 stateValidatorsHashTreeRoot = mixInLength(validatorsRoot, nr_validators);\n\n        // Verify the hash tree root of validators against the beacon state root\n        require(verify(beaconStateProof, beaconStateRoot, stateValidatorsHashTreeRoot, 11), \"BeaconState validation failed\");\n\n        // Additional verification against the beacon block\n        require(verify(beaconBlockProof, getRootFromTimestamp(blockTimestamp), beaconStateRoot, 3), \"Beaconblock proof failed\");\n        return true;\n    }\n}\n</code></pre>\n<p><em>The code for the verifier contracts is available <a href=\"https://github.com/nerolation/slashing-proofoor\" rel=\"noopener nofollow ugc\">here</a>.</em></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/slashing-proofoor-on-chain-slashed-validator-proofs/19421\">Read full topic</a></p>","link":"https://ethresear.ch/t/slashing-proofoor-on-chain-slashed-validator-proofs/19421","pubDate":"Tue, 30 Apr 2024 09:11:54 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19421"},"source":{"@url":"https://ethresear.ch/t/slashing-proofoor-on-chain-slashed-validator-proofs/19421.rss","#text":"Slashing Proofoor - On-chain slashed validator proofs"},"filter":false},{"title":"Enshrine AI into EVM","dc:creator":"axonon","category":"Layer 2","description":"<blockquote>\n<p>Axonum Sepolia testnet is undergoing beta testing. Check out our <a href=\"https://docs.axonum.io/\" rel=\"noopener nofollow ugc\">documentation</a>.</p>\n</blockquote>\n<h1><a name=\"introducing-axonum-the-brain-of-ethereum-1\" class=\"anchor\" href=\"https://ethresear.ch#introducing-axonum-the-brain-of-ethereum-1\"></a>Introducing Axonum: The Brain of Ethereum</h1>\n<p>Axonum enshrines AI into blockchain to build a decentralized supercomputer powered by global collective intelligence.</p>\n<h2><a name=\"the-age-of-ai-evm-2\" class=\"anchor\" href=\"https://ethresear.ch#the-age-of-ai-evm-2\"></a>The Age of AI EVM</h2>\n<p>We are building Axonum, an AI optimistic rollup, with the world’s first AI EVM.</p>\n<p>We aim to democratize access to AI-powered DApps, making AI model inferences both accessible and user-friendly.</p>\n<p>Axonum is an optimistic rollup with enshrined AI powered by opML and AI EVM. It enables users to seamlessly employ AI models natively within smart contracts without being encumbered by the intricacies of underlying technologies.</p>\n<h2><a name=\"overview-3\" class=\"anchor\" href=\"https://ethresear.ch#overview-3\"></a>Overview</h2>\n<h3><a name=\"ai-evm-enshrined-ai-4\" class=\"anchor\" href=\"https://ethresear.ch#ai-evm-enshrined-ai-4\"></a>AI EVM: Enshrined AI</h3>\n<p>To enable native ML inference in the smart contract, we need to modify the execution layer of the layer 2 chain. Specifically, we add a precompiled contract inference in EVM to build AI EVM.</p>\n<p>AI EVM will conduct the ML inference in native execution and then return deterministic execution results. When a user wants to use the AI model to process data, all the user needs to do is to call the precompiled contract inference with the model address and model input, and then the user can obtain the model output and use it natively in the smart contract.</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-plaintext\">import \"./AILib.sol\";\n\ncontract AIContract {\n    ...\n    function inference(bytes32 model_address, bytes memory input_data, uint256 output_size) public {\n        bytes memory output = AILib.inference(model_address, input_data, output_size);\n        emit Inference(model_address, input_data, output_size, output);\n    }\n}\n</code></pre>\n<p>The models are stored in the model data available (DA) layer. All the models can be retrieved from DA using the model address. We assume the data availability of all the models.</p>\n<p>The core design principle of the precompiled contract inference follows the design principles of opML, that is, we separate execution from proving. We provide two kinds of implementation of the precompiled contract inference. One is compiled for native execution, which is optimized for high speed. Another is compiled for the fraud proof VM, which helps prove the correctness of the opML results.</p>\n<p>For the implementation for execution, we re-use the ML engine in opML. We will first fetch the model using the model address from the model hub and then load the model into the ML engine. ML engine will take the user’s input in the precompiled contract as the model input and then execute the ML inference task. The ML engine guarantees the consistency and determinism of the ML inference results using quantization and soft float.</p>\n<p>Besides the current AI EVM design, an alternative approach to enable AI in EVM is adding more machine learning-specific opcodes into EVM, with corresponding changes to the virtual machine’s resource and pricing model as well as the implementation.</p>\n<h3><a name=\"optimistic-rollup-5\" class=\"anchor\" href=\"https://ethresear.ch#optimistic-rollup-5\"></a>Optimistic Rollup</h3>\n<p>opML (Optimistic Machine Learning) and optimistic rollup (opRollup) are both based on a similar fraud-proof system, making it feasible to integrate opML into the Layer 2 (L2) chain alongside the opRollup system. This integration enables the seamless utilization of machine learning within smart contracts on the L2 chain.</p>\n<p>Just like the existing rollup systems, Axonum is responsible for “rolling up” transactions by batching them before publishing them to the L1 chain, usually through a network of sequencers. This mechanism could include thousands of transactions in a single rollup, increasing the throughput of the whole system of L1 and L2.</p>\n<p>Axonum, as one of the optimistic rollups, is an interactive scaling method for L1 blockchains. We optimistically assume that every proposed transaction is valid by default. Different from the traditional L2 optimistic rollup system, the transaction in Axonum can include AI model inferences, which can make the smart contracts on Axonum “smarter” with AI.</p>\n<p>In the case of mitigating potentially invalid transactions, like optimistic rollups, Axonum introduces a challenge period during which participants may challenge a suspect rollup. A fraud-proving scheme is in place to allow for several fraud proofs to be submitted. Those proofs could make the rollup valid or invalid. During the challenge period, state changes may be disputed, resolved, or included if no challenge is presented (and the required proofs are in place).</p>\n<h2><a name=\"workflow-6\" class=\"anchor\" href=\"https://ethresear.ch#workflow-6\"></a>Workflow</h2>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/1/41403b199568fcf421dabd3b05c089511968469a.png\" data-download-href=\"https://ethresear.ch/uploads/default/41403b199568fcf421dabd3b05c089511968469a\" title=\"workflow\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/1/41403b199568fcf421dabd3b05c089511968469a_2_690x405.png\" alt=\"workflow\" data-base62-sha1=\"9jeEgUnHp8B6gUDrtDfpsaLQAqK\" width=\"690\" height=\"405\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/1/41403b199568fcf421dabd3b05c089511968469a_2_690x405.png, https://ethresear.ch/uploads/default/optimized/3X/4/1/41403b199568fcf421dabd3b05c089511968469a_2_1035x607.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/1/41403b199568fcf421dabd3b05c089511968469a_2_1380x810.png 2x\" data-dominant-color=\"F5F5F7\"></a></div><p></p>\n<p>Here’s the essential workflow of Axonum, without considering mechanisms such as pre-confirmation or force exit:</p>\n<ol>\n<li>The basic workflow begins with users sending L2 transactions (we allow native AI inference in the smart contract) to a batcher node, usually the sequencer.</li>\n<li>Once the sequencer receives a certain number of transactions, it will post them into an L1 smart contract as a batch.</li>\n<li>A validator node will read these transactions from the L1 smart contract and execute them on their local copy of the L2 state. As for the AI inference execution, the validator needs to download the model from model DA and conduct the AI inference within the opML engine.</li>\n<li>Once processed, a new L2 state is generated locally and the validator will post this new state root into an L1 smart contract. (Note that this validator can also be the sequencer.)</li>\n<li>Then, all other validators will process the same transactions on their local copies of the L2 state.</li>\n<li>They will compare their resultant L2 state root with the original one posted to the L1 smart contract.</li>\n<li>If one of the validators gets a different state root than the one posted to L1, they can begin a challenge on L1.</li>\n<li>The challenge will require the challenger and the validator who posted the original state root to take turns proving what the correct state root should be. This challenge process is also known as fraud proof. The fraud proof of Axonum includes the fraud proof of L2 state transition and the fraud proof of opML.</li>\n<li>Whichever user loses the challenge, gets their initial deposit (stake) slashed. If the original L2 state root posted was invalid, it will be destroyed by future validators and will not be included in the L2 chain.</li>\n</ol>\n<h2><a name=\"fraud-proof-design-7\" class=\"anchor\" href=\"https://ethresear.ch#fraud-proof-design-7\"></a>Fraud Proof Design</h2>\n<p>The core design principle of the fraud proof system of Axonum is that we separate the fraud proof process of Geth (the Golang implementation of the Ethereum client on layer 2) and the opML. This design ensures a robust and efficient fraud proof mechanism. Here’s a breakdown of the fraud proof system and our separation design:</p>\n<ol>\n<li><strong>Fraud Proof System Overview:</strong>\n<ul>\n<li>The fraud proof system is a critical component that guarantees the security and integrity of transactions on the Axonum optimistic rollup Layer 2.</li>\n<li>It involves the verification of transactions and computations to ensure that any malicious behavior or inaccuracies are detected and addressed.</li>\n</ul>\n</li>\n<li><strong>Separation of Fraud Proof Processes:</strong>\n<ul>\n<li><strong>Geth Fraud Proof Process:</strong>\n<ul>\n<li>Geth, responsible for the Ethereum client on layer 2, handles the initial stages of fraud proof related to transaction validation and basic protocol adherence.</li>\n<li>It verifies the correctness of transactions and ensures that they comply with the rules and protocol of the layer 2 system.</li>\n</ul>\n</li>\n<li><strong>opML Fraud Proof Process:</strong>\n<ul>\n<li>opML, the Optimistic Machine Learning system integrated with Axonum, takes charge of the more intricate aspects of fraud proof related to machine learning model execution.</li>\n<li>It verifies the correctness of machine learning computations and ensures the integrity of AI-related processes within the layer 2 framework.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Benefits of Separation Design:</strong>\n<ul>\n<li><strong>Enhanced Efficiency:</strong>\n<ul>\n<li>By distributing the fraud proof responsibilities, we optimize the efficiency of the overall system. Geth focuses on transactional aspects, while opML handles ML-specific fraud proofs.</li>\n</ul>\n</li>\n<li><strong>Scalability:</strong>\n<ul>\n<li>The separation design allows for scalability, enabling each component to independently scale based on its specific processing requirements.</li>\n</ul>\n</li>\n<li><strong>Flexibility:</strong>\n<ul>\n<li>This separation provides flexibility for upgrades and improvements in either the Geth or opML components without compromising the entire fraud proof system.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2><a name=\"axonum-the-brain-of-ethereum-8\" class=\"anchor\" href=\"https://ethresear.ch#axonum-the-brain-of-ethereum-8\"></a>Axonum: The Brain of Ethereum</h2>\n<p>Axonum is the first AI optimistic rollup that enables AI on Ethereum natively, trustlessly, and verifiably.</p>\n<p>Axonum leverages optimistic ML and optimistic rollup and introduces innovations of AI EVM to add intelligence to Ethereum as a Layer 2.</p>\n<p>We enshrine AI into blockchain to build a decentralized supercomputer powered by global collective intelligence.</p>\n<blockquote>\n<p>Learn more about Axonum: <a href=\"https://docs.axonum.io\" rel=\"noopener nofollow ugc\">https://docs.axonum.io</a><br>\nBridge to Axonum Sepolia: <a href=\"https://app.axonum.io/bridge/deposit\" rel=\"noopener nofollow ugc\">https://app.axonum.io/bridge/deposit</a><br>\nAdd Axonum Sepolia to MetaMask: <a href=\"https://add.axonum.io/?network=testnet\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Add Axonum</a></p>\n</blockquote>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/enshrine-ai-into-evm/19418\">Read full topic</a></p>","link":"https://ethresear.ch/t/enshrine-ai-into-evm/19418","pubDate":"Mon, 29 Apr 2024 05:57:57 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19418"},"source":{"@url":"https://ethresear.ch/t/enshrine-ai-into-evm/19418.rss","#text":"Enshrine AI into EVM"},"filter":false},{"title":"Enabling light node to verify a field element from its column in peer das","dc:creator":"Athos","category":"Sharding","description":"<p>When we finally implements 2D PeerDAS, blob data will be formatted into a data matrix, where each element (aka cell) of the matrix is an array of field elements, with 64 field elements in each array. Peers are required to sample this matrix, with the minimum sampling unit being a cell.</p>\n<p>For nodes with limited resources, such as light nodes, we may allow them to perform sampling in the following manner:</p>\n<ol>\n<li>Light node requests:</li>\n</ol>\n<ul>\n<li>Column index</li>\n<li>Blob index</li>\n<li>Field element index within the cell</li>\n</ul>\n<ol start=\"2\">\n<li>The requested peer’s response:</li>\n</ol>\n<ul>\n<li>The value of the field element</li>\n<li>The KZG commitment of the cell polynomial</li>\n<li>The proof of the field element in the cell polynomial</li>\n<li>The KZG proof of the cell in the blob</li>\n</ul>\n<p>The light node performs verification on the aforementioned content.</p>\n<p>For a KZG multiproof, we have the following:</p>\n<p><span class=\"math\"> Proof_{cell}={\\frac {f(\\alpha)-I(\\alpha)}{z(\\alpha)}}G_1 </span></p>\n<p>The polynomial I(x), which represents the cell polynomial, is obtained by interpolating the field elements within the cell based on their indices within the blob, where <span class=\"math\">I(\\alpha)G_1</span> represents the KZG commitment of the cell polynomial</p>\n<p>For a specific field element within the cell, its proof format is as follows</p>\n<p><span class=\"math\"> Proof_{ele}=\\frac {I(\\alpha)-val_{ele}} {x_{ele}-\\alpha}G_1 </span></p>\n<p>These two proofs are related through <span class=\"math\">I(\\alpha)G_1</span>, which allows us to verify a specific field element within the blob without obtaining the complete cell data.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/enabling-light-node-to-verify-a-field-element-from-its-column-in-peer-das/19411\">Read full topic</a></p>","link":"https://ethresear.ch/t/enabling-light-node-to-verify-a-field-element-from-its-column-in-peer-das/19411","pubDate":"Mon, 29 Apr 2024 03:16:34 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19411"},"source":{"@url":"https://ethresear.ch/t/enabling-light-node-to-verify-a-field-element-from-its-column-in-peer-das/19411.rss","#text":"Enabling light node to verify a field element from its column in peer das"},"filter":false},{"title":"Making Ether A Better Money","dc:creator":"pantheraes","category":"Economics","description":"<h2><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>TL;DR</h2>\n<p>In its current form, Ether (ETH) is not a good form of money. This is due to one critical limitation: its value is highly unstable. However, ETH can become stable by adjusting the rewards to validators (and thus the supply of ETH) to changes in demand for ETH. We can target a 0% inflation rate while ensuring validators are paid sufficiently to ensure network security. This new monetary policy can be called Stable Ether Monetary Policy (SEMP). With SEMP, ETH holders would have a great currency, and ETH validators would have exposure to the adoption of ETH.</p>\n<h2><a name=\"why-should-eth-be-stable-2\" class=\"anchor\" href=\"https://ethresear.ch#why-should-eth-be-stable-2\"></a>Why should ETH be stable?</h2>\n<p>It is widely accepted that a currency (i.e., a form of money) needs to function as a medium of exchange, a unit of account, and a store of value. ETH has the potential to excel at these functions, and ETH has many large advantages over existing currencies. However, ETH is not a good form of money for one reason: its value is highly unstable. <strong>Instability makes ETH a poor unit of account and a poor store of value.</strong></p>\n<h2><a name=\"why-is-eth-unstable-3\" class=\"anchor\" href=\"https://ethresear.ch#why-is-eth-unstable-3\"></a>Why is ETH unstable?</h2>\n<p>Currently, ETH is simultaneously an investment and a form of money (for more detail, see <a href=\"https://www.bankless.com/ether-a-new-model-for-money\" rel=\"noopener nofollow ugc\">Bankless’ triple point asset thesis</a>). ETH, as an investment, needs to have the potential to increase in value over time (i.e., it must be unstable). But ETH, as a money, needs stable value. <strong>Clearly, ETH cannot be both stable and unstable, and thus it cannot simultaneously be a good investment and a good form of money.</strong> Of course, to date, the value of ETH has varied over time, making it more of an investment than a form of money.</p>\n<h2><a name=\"what-are-the-implications-of-eths-instability-4\" class=\"anchor\" href=\"https://ethresear.ch#what-are-the-implications-of-eths-instability-4\"></a>What are the implications of ETH’s instability?</h2>\n<p>First, <strong>the adoption (and market cap) of ETH is held back by it being a poor form of money.</strong> There seems to be consensus that “monetary premium” (the value of something based on it being a form of money) is a more important driver of ETH’s value than the value it derives from burned ETH in a discounted cash flow (DCF) model. For example, in <a href=\"https://polynya.mirror.xyz/GPC26Y_rlwCyPpj_N3HeW_izY1-pIVwKW5bjuPNrGeQ\" rel=\"noopener nofollow ugc\">polynya’s ranking of the top 10 drivers of ETH demand</a>, four of the top five drivers rely on ETH being a good form of money. <strong>The value of ETH is heavily dependent on it being a good form of money.</strong></p>\n<p>In particular, the value of ETH is held back by it being a poor store of value. The monetary premium from being a good medium of exchange is minimal. When something is a good medium of exchange but not a good store of value, it will be bought for transactions. But it will often be sold by the recipient because it doesn’t store value. <strong>Monetary premium comes from the demand to buy and hold the currency, which requires it being a good store of value.</strong></p>\n<p>The second implication of ETH’s instability is that <strong>liquid staking tokens (LSTs) are threatening ETH as “the de facto money of the network”</strong> (see <a href=\"https://ethresear.ch/t/endgame-staking-economics-a-case-for-targeting/18751\">this Ethereum Research post</a>). This “leads to Ethereum users being exposed to counterparty risk inherited by the LST by default.” As explained above, ETH is currently more of an investment than a form of money. And because many view an LST as an even better investment than ETH (more upside with small additional risk), it is no surprise that LSTs could become more popular than ETH itself.</p>\n<p>The third issue is the rise of stablecoins. Stablecoins are useful, but they have limitations. Stablecoins expose users to inflation and leave users dependent on the goodwill of centralized actors (central banks). Even though stablecoins lose value to inflation, they are still seen by many as a better store of value than ETH. This is reasonable; stablecoins’ value is much more stable than ETH’s. Stablecoins also suffer from <a href=\"https://fortunafi.beehiiv.com/p/the-stablecoin-trilemma\" rel=\"noopener nofollow ugc\">a trilemma</a>. <strong>Nobody to date has figured out how to design a stablecoin that is stable, decentralized, and capital efficient.</strong></p>\n<h2><a name=\"what-is-our-current-goal-5\" class=\"anchor\" href=\"https://ethresear.ch#what-is-our-current-goal-5\"></a>What is our current goal?</h2>\n<p><strong>We want to transform ETH into a better form of money while maintaining a way for people to financially benefit from Ethereum’s success.</strong></p>\n<p><strong>We want ETH to have 0% inflation, so that it is a better store of value and unit of account than other currencies.</strong> ETH would be a programmable, credibly neutral, censorship resistant, permissionless, and decentralized form of money that is a great store of value, medium of exchange, and unit of account. <strong>This would increase the market cap of ETH, avoid LSTs becoming the de facto money of the network, and solve the stablecoin trilemma.</strong></p>\n<h2><a name=\"what-is-the-proposed-solution-6\" class=\"anchor\" href=\"https://ethresear.ch#what-is-the-proposed-solution-6\"></a>What is the proposed solution?</h2>\n<p><strong>I think we can achieve our goals by constantly adjusting the ETH supply to target 0% inflation.</strong> As ETH is bought or burned, its price increases. The price increase could be counteracted by inflating the ETH supply in the form of rewards to validators until the price of ETH arrives back at the target 0% inflation. In the reverse direction, as ETH is sold, its price decreases. The price decrease could be counteracted by offering fewer rewards to validators for some time. The overall supply of ETH can decrease from burned ETH until the price of ETH arrives back at the target 0% inflation. We can call this new monetary policy Stable Ether Monetary Policy (SEMP).</p>\n<img src=\"https://ethresear.ch/uploads/default/original/3X/8/7/875db8dd59ac47e5111aa5623ef56dcedfb90aff.svg\" class=\"yuml\" data-dominant-color=\"\" width=\"447\" height=\"460\">\n<h2><a name=\"how-do-we-ensure-validators-will-always-secure-the-network-7\" class=\"anchor\" href=\"https://ethresear.ch#how-do-we-ensure-validators-will-always-secure-the-network-7\"></a>How do we ensure validators will always secure the network?</h2>\n<p>Like today, we would need a minimum issuance curve, which states the minimum rewards to validators depending on the percent of ETH staked. The optimal minimum issuance curve needed to maintain Ethereum’s security would need to be determined by research, just as it is today.</p>\n<p>The rewards should be in units of inflation-adjusted value. If ETH halves in value relative to the global cost of living, the ETH rewards should double. This ensures that we are paying enough for security even if ETH decreases in value.</p>\n<h2><a name=\"would-it-be-better-to-target-some-level-of-deflation-8\" class=\"anchor\" href=\"https://ethresear.ch#would-it-be-better-to-target-some-level-of-deflation-8\"></a>Would it be better to target some level of deflation?</h2>\n<p>Most economists agree that a deflationary currency is harmful to an economy. Deflation disincentives spending and makes debt more expensive to repay. In addition, it may be difficult to maintain both a level of deflation and network security. Lower levels of inflation (or higher levels of deflation) require fewer rewards to validators, but we need validators to receive enough rewards to incentivize them to secure the Ethereum network.</p>\n<h2><a name=\"would-it-be-better-to-target-a-low-level-of-inflation-eg-2-9\" class=\"anchor\" href=\"https://ethresear.ch#would-it-be-better-to-target-a-low-level-of-inflation-eg-2-9\"></a>Would it be better to target a low level of inflation (e.g., 2%)?</h2>\n<p>This would provide more incentive for ETH holders to become validators, providing greater assurance of the security of the network.</p>\n<p>However, one would expect that the increase in the adoption of ETH from targeting 0% rather than 2% inflation will lead to more demand for ETH. This will provide more value for validators and help secure the network. With 0% inflation, I believe ETH validators will be rewarded sufficiently from an increase in demand for ETH as a form of money. Later, ETH could have a high and stable level of adoption. At that time, I believe fee burn would allow us to sufficiently reward validators while still maintaining 0% inflation.</p>\n<p><strong>However, if we discover through research or experience that the minimum issuance curve makes 0% inflation unrealistic, we can adjust our goal to a stable and low level of inflation. In that case, ETH would still be a great currency because it would have low and predictable inflation.</strong></p>\n<h2><a name=\"how-should-we-calculate-inflation-10\" class=\"anchor\" href=\"https://ethresear.ch#how-should-we-calculate-inflation-10\"></a>How should we calculate inflation?</h2>\n<p><a href=\"https://docs.frax.finance/frax-price-index/overview-cpi-peg-and-mechanics\" rel=\"noopener nofollow ugc\">Frax Finance’s FPI</a> is a stablecoin designed to have 0% inflation and it “uses the CPI-U unadjusted 12 month inflation rate reported by the US Federal Government: <a href=\"https://www.bls.gov/news.release/cpi.nr0.htm\" rel=\"noopener nofollow ugc\">https://www.bls.gov/news.release/cpi.nr0.htm</a>. A specialized Chainlink oracle commits this data on-chain immediately after it is publicly released.”</p>\n<p>Rather than relying on an external service (a Chainlink oracle), validators could serve as oracles for inflation data.</p>\n<p>We could also improve the FPI approach by calculating a global measure of inflation, rather than one based on the US Dollar and the US economy. For example, we could calculate global inflation using country price/inflation data provided by <a href=\"https://www.numbeo.com/cost-of-living/\" rel=\"noopener nofollow ugc\">Numbeo</a>, <a href=\"https://www.worldbank.org/en/research/brief/inflation-database\" rel=\"noopener nofollow ugc\">The World Bank</a>, and/or, <a href=\"https://www.imf.org/en/Publications/WEO\" rel=\"noopener nofollow ugc\">the IMF</a>. We could create a global average of inflation, weighted by population.</p>\n<h2><a name=\"when-the-price-of-eth-increases-beyond-the-target-inflation-rate-how-do-we-know-how-much-eth-to-print-ie-reward-to-validators-11\" class=\"anchor\" href=\"https://ethresear.ch#when-the-price-of-eth-increases-beyond-the-target-inflation-rate-how-do-we-know-how-much-eth-to-print-ie-reward-to-validators-11\"></a>When the price of ETH increases beyond the target inflation rate, how do we know how much ETH to print (i.e., reward to validators)?</h2>\n<p>The Ethereum protocol can monitor prices on DEXs. Validators could serve as oracles to provide this data (in addition to inflation data). Validators that provide ETH price data and inflation data would be rewarded more than those that don’t serve as oracles. Validators that provide non-consensus price or inflation data can be penalized. These rewards and penalties can be determined by research.</p>\n<p>When issuance needs to be increased, validators would be rewarded based on a schedule until the price hits the target. The schedule of extra issuance can be determined by research.</p>\n<h2><a name=\"what-if-ethereum-network-activity-becomes-very-low-could-there-be-a-death-spiral-12\" class=\"anchor\" href=\"https://ethresear.ch#what-if-ethereum-network-activity-becomes-very-low-could-there-be-a-death-spiral-12\"></a>What if Ethereum network activity becomes very low? Could there be a death spiral?</h2>\n<p>In this case, little to no ETH would be burned. Assuming no net buy pressure, all ETH rewarded to validators would cause positive inflation (i.e., a decrease in value).</p>\n<p>A death spiral is possible where Ethereum network activity decreases, ETH inflates, more ETH is issued to validators, ETH supply increases, ETH inflates more, there is less demand for ETH as money, network activity decreases, and the cycle repeats (as shown below).</p>\n<img src=\"https://ethresear.ch/uploads/default/original/3X/9/4/9416c5c93b48a5cfaa43650071bfb363cf63a54d.svg\" class=\"yuml\" data-dominant-color=\"\" width=\"212\" height=\"500\">\n<p><strong>The possibility of a death spiral may seem like a major drawback of this new monetary policy (SEMP), but this is no different than today.</strong> If Ethereum network activity slowed greatly with the existing monetary policy, the value of ETH would continue to decrease. This would occur both because ETH would become a less popular form of money and because there is less burned ETH, reducing its value in a DCF model. <strong>The value of ETH depends on people using the Ethereum network or buying it as a store of value. That is true with the existing monetary policy and with SEMP.</strong></p>\n<p><strong>However, there is reason to believe the likelihood of a death spiral is lower with SEMP.</strong> Because ETH would be designed to have stable value, it’s much more likely that it inflates less when network activity decreases. As the value of ETH decreases, the expectation that it will return to the target inflation rate will provide economic incentive for ETH to be purchased at a discount, increasing its value. With the existing monetary policy, ETH is designed to vary in value (as an investment), so there is less of an expectation that ETH will return to higher prices, providing less economic incentive to buy it when its value decreases.</p>\n<p>The threat of a death spiral is not unique to ETH… Any fiat currency can also enter a death spiral. A situation can arise where a currency inflates, people lose trust in the currency as a store of value, people sell more of the currency, inflation increases, and the cycle repeats (as shown below).</p>\n<img src=\"https://ethresear.ch/uploads/default/original/3X/8/5/851388c38df8bf7819ca55972c18c14b5685121a.svg\" class=\"yuml\" data-dominant-color=\"\" width=\"690\" height=\"94\">\n<h2><a name=\"what-if-a-large-amount-of-eth-is-sold-in-a-short-time-period-13\" class=\"anchor\" href=\"https://ethresear.ch#what-if-a-large-amount-of-eth-is-sold-in-a-short-time-period-13\"></a>What if a large amount of ETH is sold in a short time period?</h2>\n<p>Like the scenario above (decreased network activity), a large selling event will cause the price of ETH to decrease, which could cause both of the death spirals shown above.</p>\n<p>However, everything stated above remains true. A large selling event could also cause a death spiral with the existing monetary policy. And there is reason to believe the likelihood of this death spiral is lower with SEMP. As stated above, there will be greater economic incentive to buy ETH at a discount with SEMP.</p>\n<p>However, there are differences with the scenario above (decreased network activity). A large selling event could drop the price of ETH quicker than decreased network activity. But economic incentives make this scenario less likely. The seller will incur large financial losses in the form of slippage. The more they sell, the larger the financial losses will be. This disincentivizes large selling events.</p>\n<h2><a name=\"what-if-the-supply-of-eth-remains-constant-over-a-long-time-period-14\" class=\"anchor\" href=\"https://ethresear.ch#what-if-the-supply-of-eth-remains-constant-over-a-long-time-period-14\"></a>What if the supply of ETH remains constant over a long time period?</h2>\n<p>There will be no value added to ETH from net buying. Thus, to achieve 0% inflation, all validator rewards will need to be offset by the burn. This is likely to be possible at high levels of ETH adoption. However, if the burn doesn’t offset validator rewards, the ETH supply will inflate because the validators still need to be paid enough to secure the network (see the section above about the possibility of a low level of inflation). Inflation above the target rate would decrease the value of ETH, which could cause a death spiral, as described above.</p>\n<p>Again, this is no different than with the current monetary policy. If there is an equal amount of buying and selling of ETH, there are no net inflows, and thus the price of ETH is not increased from buy pressure. In that scenario, ETH rewards to validators are either offset by the burn or the value of ETH will decrease in the long run. This could cause a death spiral, just like with SEMP.</p>\n<h2><a name=\"is-there-something-we-can-do-to-reduce-the-likelihood-of-a-death-spiral-15\" class=\"anchor\" href=\"https://ethresear.ch#is-there-something-we-can-do-to-reduce-the-likelihood-of-a-death-spiral-15\"></a>Is there something we can do to reduce the likelihood of a death spiral?</h2>\n<p>With SEMP, when ETH increases in value above the target rate of inflation, more ETH is rewarded to validators to increase the supply of ETH and return ETH to the target inflation rate. <strong>To decrease the likelihood of a death spiral, we could delay the increase in supply of ETH.</strong> To protect against a large sell event or lull in network activity, the extra ETH above the minimum issuance curve that would have been issued to validators can simply not be issued. In practice, this delay manifests as very minor levels of deflation and small reductions in validator rewards. But it would provide a buffer limiting the chances of a death spiral. The ideal amount of delay/deflation could be researched.</p>\n<p>Note that a buffer like this is not possible with the existing monetary policy. When ETH is bought or burned, there is no way to prevent that demand from being reflected immediately in the price of ETH. <strong>Thus, with the delay proposed above, a death spiral might be less likely under SEMP than under the existing monetary policy.</strong></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/making-ether-a-better-money/19393\">Read full topic</a></p>","link":"https://ethresear.ch/t/making-ether-a-better-money/19393","pubDate":"Sun, 28 Apr 2024 01:19:31 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19393"},"source":{"@url":"https://ethresear.ch/t/making-ether-a-better-money/19393.rss","#text":"Making Ether A Better Money"},"filter":false},{"title":"Vanilla Based Sequencing","dc:creator":"Perseverance","category":"Layer 2","description":"<p><strong>Authors:</strong> <a href=\"https://twitter.com/GSpasov\" rel=\"noopener nofollow ugc\">George Spasov</a> (LimeChain), <a href=\"https://twitter.com/danielkivanov\" rel=\"noopener nofollow ugc\">Daniel Ivanov</a> (LimeChain)</p>\n<p><strong>Thanks for early feedback:</strong> <a href=\"https://twitter.com/drakefjustin\" rel=\"noopener nofollow ugc\">Justin Drake</a> (Ethereum Foundation), <a href=\"https://twitter.com/Brechtpd\" rel=\"noopener nofollow ugc\">Brecht Devos</a> (Taiko), <a href=\"https://twitter.com/thegaram33\" rel=\"noopener nofollow ugc\">Péter Garamvölgyi</a> (Scroll), <a href=\"https://twitter.com/orbmis\" rel=\"noopener nofollow ugc\">Simon Brown</a> (Linea), <a href=\"https://twitter.com/cooper_kunz\" rel=\"noopener nofollow ugc\">Cooper Kunz</a> (Aztec), <a href=\"https://twitter.com/smpalladino\" rel=\"noopener nofollow ugc\">Santiago Palladino</a> (Aztec), <a href=\"https://twitter.com/IAmNickDodson\" rel=\"noopener nofollow ugc\">Nick Dodson</a> (Fuel)</p>\n<p>This research is only possible thanks to the research grant support from <strong>Ethereum Foundation</strong>.</p>\n<h1><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>TLDR</h1>\n<p>Vanilla Based Sequencing is a design for decentralised sequencing mechanism for rollups led by the L1 proposers. Its main goals are:</p>\n<ul>\n<li>Offer equal if not better UX compared to centralised sequencing in terms of preconfirmation time, guarantees and cost of transaction</li>\n<li>Enable the participating actors, including the rollup protocol itself, to generate revenue</li>\n<li>Enable composability with other rollups without the requirement to trust a single centralised sequencing layer</li>\n<li>Base its liveness guarantees on the Ethereum L1.</li>\n<li>Remove the need for trust towards a single party and ensure a sizable and diverse set of sequencers, so that within an acceptable timeframe a censored transaction will reach an honest sequencer that will be willing to sequence this transaction.</li>\n<li>Addresses cold-start problem of original <a href=\"https://ethresear.ch/t/based-rollups-superpowers-from-l1-sequencing/15016\">based sequencing</a> through naturally higher incentives for early participants.</li>\n</ul>\n<p>In the design, L2 sequencing is performed by L1 proposers who have opted-in to participate as L2 sequencers and be punished for misbehaviour. The default L2 sequencer is the current slot L1 proposer. If the current L1 proposer has not opted-in to be a part of the rollup protocol, another opted-in L1 proposer is chosen at random to replace them.</p>\n<p>The L2 sequencers have monopoly power over the rollup sequences during this L1 slot and can provide services (i.e. preconfirmations) to the users with quality on par with centralised sequencing.</p>\n<h1><a name=\"goals-of-decentralised-sequencing-2\" class=\"anchor\" href=\"https://ethresear.ch#goals-of-decentralised-sequencing-2\"></a>Goals of Decentralised Sequencing</h1>\n<p>The majority of the current Ethereum rollup landscape consists of rollups with centralised and/or permissioned sequencing. These centralised sequencing layers both introduce trust assumptions and improve user experience.</p>\n<p>The goal of a decentralised sequencing protocol would be to address the negatives, while maintaining or improving the positives that centralised sequencing offers.</p>\n<h2><a name=\"secure-without-ux-sacrifices-3\" class=\"anchor\" href=\"https://ethresear.ch#secure-without-ux-sacrifices-3\"></a>Secure without UX Sacrifices</h2>\n<p>Current rollups with centralised sequencers offer superior UX compared to both L1 and rollups with decentralised sequencers.</p>\n<p>Firstly, due to their constant monopoly, they offer a quick preconfirmation of inclusion and execution. This is now the standard that the users should come to expect for their transactions.</p>\n<p>Secondly, the rollups with currently centralised sequencers fulfil the rollup-centric future promise offering orders of magnitude cheaper transactions compared to L1.</p>\n<p>A goal for decentralised sequencing design would be to enable a rollup protocol to offer equal if not better UX compared to centralised sequencing in terms of preconfirmation time, guarantees and cost of transaction.</p>\n<h2><a name=\"economically-sustainable-4\" class=\"anchor\" href=\"https://ethresear.ch#economically-sustainable-4\"></a>Economically Sustainable</h2>\n<p>Current rollups with centralised sequencer generates revenue from the transactions fees in their rollups.</p>\n<p>A goal for a decentralised sequencing design would be to enable all the participating actors, including the rollup protocol itself, to be profitable.</p>\n<h2><a name=\"composability-over-walled-gardens-5\" class=\"anchor\" href=\"https://ethresear.ch#composability-over-walled-gardens-5\"></a>Composability over Walled Gardens</h2>\n<p>Rollups with centralised sequencing cannot offer synchronous composability with other rollups and are forced to remain fragmented unless they opt into a single centralised shared sequencer. This can lead to multiple rollups having a single trusted centralised sequencer and further exacerbating the downsides of centralised sequencing.</p>\n<p>A goal for a decentralised sequencing design would be to enable composability with other rollups without the requirement to trust a single centralised sequencing layer.</p>\n<h2><a name=\"inheriting-ethereum-liveness-over-external-liveness-guarantees-6\" class=\"anchor\" href=\"https://ethresear.ch#inheriting-ethereum-liveness-over-external-liveness-guarantees-6\"></a>Inheriting Ethereum Liveness over External Liveness Guarantees</h2>\n<p>Rollups with centralised sequencing rely on a single centralised sequencer to be live in order for the system to be operational.</p>\n<p>A goal for decentralised sequencing design would be to derive its liveness guarantees from the Ethereum L1 liveness guarantees.</p>\n<h2><a name=\"protocol-over-trust-based-censorship-resistance-7\" class=\"anchor\" href=\"https://ethresear.ch#protocol-over-trust-based-censorship-resistance-7\"></a>Protocol over Trust based Censorship Resistance</h2>\n<p>Rollups with centralised sequencing requires the users to trust them that they will not censor them. This makes the centralised sequencer a single point of failure and subjects the rollup, among other things to geopolitical risks.</p>\n<p>A goal for a decentralised sequencing design would be to remove the need of trust towards a single party and ensure a sizable and diverse set of sequencers, so that within an acceptable timeframe censored transactions will reach an honest sequencer that will be willing to sequence this transaction.</p>\n<h1><a name=\"types-of-decentralised-sequencing-8\" class=\"anchor\" href=\"https://ethresear.ch#types-of-decentralised-sequencing-8\"></a>Types of Decentralised Sequencing</h1>\n<p>The major decision of a decentralised sequencing design is the selection of the next L2 sequencer(s). Two groups of design ideas are currently being explored by the rollup teams - “Free for all” and “Leader election”.</p>\n<p>Free for all designs see the role of the sequencer as completely open at any time. In “Free for all” sequencing any user can act as sequencer and submit a sequencing transaction in L1. The order of inclusion in the L1 block of the (possibly multiple) sequencing transaction is decided by the L1 proposer and the L1 block building pipeline.</p>\n<p>The leader election design sees a single sequencer be elected to have monopoly over the sequencing rights for some timeframe (usually denoted in L1 blocks). Two subgroups of leader election designs ideas are being explored by the various rollup researchers - “External Sequencing” and “Based Sequencing”.</p>\n<p>External sequencing sees the leader election to be performed through an external to L1 consensus algorithm. The rollup has its own set of participants that have opted to be part of the consensus algorithm (with its crypto-economical incentives - i.e. staking) for selection of the L2 sequencer.</p>\n<p>Based sequencing sees the leader role (L2 sequencer) be assigned to the current L1 proposer. In order to be part of the rollup protocol selection process the L1 proposers need to opt-in for additional slashing conditions for their L1 stake.</p>\n<h1><a name=\"vanilla-based-sequencing-9\" class=\"anchor\" href=\"https://ethresear.ch#vanilla-based-sequencing-9\"></a>Vanilla Based Sequencing</h1>\n<p>This document outlines a design iteration over the based sequencing concept that aims to fulfil all the outlined goals of decentralised sequencing. The main difference between the original based sequencing concept and the vanilla based sequencing concept is the protocol behaviour when the current L1 slot proposer has not opted-in to be an L2 sequencer.</p>\n<p>An important design consideration aimed by the design is to address the “cold start” problem - achieve the desired goals of decentralised sequencing even early when the participation of L1 proposers is expected to be low.</p>\n<p>The following sections will review the three crucial design suggestions of “vanilla based sequencing” design.</p>\n<h2><a name=\"l2-sequencer-selection-10\" class=\"anchor\" href=\"https://ethresear.ch#l2-sequencer-selection-10\"></a>L2 Sequencer Selection</h2>\n<p>Vanilla based sequencing L2 sequencer selection starts with the same general idea as original based sequencing - that the L2 sequencer is the L1 proposer. For a L1 proposer to become eligible to be a certain rollup L2 sequencer, the L1 proposers would need to opt into slashing conditions - punishment for misbehaviour as a sequencer in the rollup.</p>\n<p>The design recognises that only a subset of the L1 proposers would opt-in to be L2 sequencer for the rollup. This nuance requires the mechanism to define the sequencer selection in the two possible scenarios:</p>\n<ol>\n<li><strong>Primary selection</strong> - When the current L1 proposer has opted-in to be a L2 sequencer for the rollup (depicted in green)</li>\n<li><strong>Fallback selection</strong> - When the current L1 proposer has <strong>not</strong> opted-in to be a L2 sequencer for the rollup (depicted in blue)</li>\n</ol>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/9/69c5d356bf06fae2d6c3594caada9f40161b067a.png\" data-download-href=\"https://ethresear.ch/uploads/default/69c5d356bf06fae2d6c3594caada9f40161b067a\" title=\"Preconfirmations-Vanilla Based Sequencing.drawio\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/9/69c5d356bf06fae2d6c3594caada9f40161b067a_2_590x500.png\" alt=\"Preconfirmations-Vanilla Based Sequencing.drawio\" data-base62-sha1=\"f5HYmM6JMu9t6w1komnk7X93JF0\" width=\"590\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/9/69c5d356bf06fae2d6c3594caada9f40161b067a_2_590x500.png, https://ethresear.ch/uploads/default/original/3X/6/9/69c5d356bf06fae2d6c3594caada9f40161b067a.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/9/69c5d356bf06fae2d6c3594caada9f40161b067a.png 2x\" data-dominant-color=\"F7F8F7\"></a></div><p></p>\n<h3><a name=\"primary-selection-11\" class=\"anchor\" href=\"https://ethresear.ch#primary-selection-11\"></a>Primary Selection</h3>\n<p>In the <strong>primary selection</strong> case the current L1 proposer has opted in to be a L2 sequencer (depicted in green above). The L1 proposer is automatically assigned as L2 sequencer for the duration of this slot by the rollup protocol. During this period, this proposer is able to provide the best security and timeliness guarantees - that the sequencing transaction(s) will get included in this block and exactly in this block (if no reorgs happen). As L2 sequencer the L1 proposer is able to get additional revenue from the transaction fees and extracted value from the rollup transactions.</p>\n<h3><a name=\"fallback-selection-12\" class=\"anchor\" href=\"https://ethresear.ch#fallback-selection-12\"></a>Fallback Selection</h3>\n<p>One drawback of the original based sequencing concept is the appearance of “sequencing gaps” - an L1 slot whose proposer has not opted-in to be L2 sequencer. These gaps lead to an unpredictably long sequencing time - the next opted-in L1 proposer might be beyond the current L1 lookahead. Such gaps result in rollup service degradation.</p>\n<p>In the <strong>fallback selection</strong> case the current L1 proposer has <strong>not</strong> opted in to be a L2 sequencer (depicted in blue above). In order to fight sequencing gaps, an L1 proposer is drawn at random from the other opted-in L1 proposers and is assigned to be the L2 sequencer. As L2 sequencer the L1 proposer is able to get additional revenue from the transaction fees and extracted value from the rollup transactions.</p>\n<p>Unlike the primary selection case, the L2 sequencer no longer has monopoly over the L1 slot too. This necessitates that the L2 sequencer employs strategies to maximise the chances of inclusion of their sequencing transaction in the assigned slot and exactly in the assigned slot. Such strategies might include, but are not limited to, sending the sequencing transaction to the public L1 transactions mempool with an increased base tip.</p>\n<h3><a name=\"rollup-slot-sequencing-frequency-13\" class=\"anchor\" href=\"https://ethresear.ch#rollup-slot-sequencing-frequency-13\"></a>Rollup Slot &amp; Sequencing Frequency</h3>\n<p>In the diagram above we’ve equated one rollup slot - the time that a single L2 sequencer has monopoly rights of sequencing - to one L1 slot.</p>\n<p>Depending on the usage and mechanics of the rollups, some rollups might want to temporarily or permanently lower the sequencing frequency by adjusting the rollup size to multiple L1 slots.</p>\n<p>In a rollup slot spanning multiple L1 slots, the sequencer selection criteria stay the same but are applied only considering the last L1 slot of the rollup slot.</p>\n<h3><a name=\"requirement-for-punishment-mechanism-in-the-protocol-14\" class=\"anchor\" href=\"https://ethresear.ch#requirement-for-punishment-mechanism-in-the-protocol-14\"></a>Requirement for Punishment Mechanism in the protocol</h3>\n<p>Similarly to any type of sequencing, vanilla based sequencing requires the sequencers to be punished for misbehaviour. Such punishment mechanism can vary and is a design decision of the rollup protocol. Several popular options are:</p>\n<ul>\n<li><strong>Staking</strong> - requiring the l2 sequencers to post a stake that is slashed on misbehaviour. Flavours of this can be restaking - putting forward your ETH validator stake or delegated staking - allowing other users to post stake on the sequencer behalf.</li>\n<li><strong>Bonding</strong> - requiring the l2 sequencers post a stake every time they sequence and getting it back upon finality is reached and no misbehaviour is detected.</li>\n</ul>\n<p>In the context of vanilla based sequencing, the only important requirement is for such a punishment mechanism to exist in order to disincentivise the sequencers to misbehave.</p>\n<h3><a name=\"selection-mechanics-15\" class=\"anchor\" href=\"https://ethresear.ch#selection-mechanics-15\"></a>Selection Mechanics</h3>\n<p>Most of the selection mechanics are performed off-chain and are verified on-chain. This verification is part of the onchain sequencing process and is part of the logic of either the smart contract that deals with sequencing for this rollup or the finality mechanism.</p>\n<p>First option is to have the selection performed in the L1 rollup smart contracts. The contracts need to verify the eligibility of the sequencer to be the current L2 sequencer. Due to the lack of access of L1 execution layer to the <strong>current</strong> L1 proposer, this check needs to be performed as a separate transaction in subsequent L1 block, or an optimistic challenge mechanism needs to be employed.</p>\n<p>Second option is for the rollup to include verification of the correct selection of the sequencer within their finality mechanism - validity or fraud proof.</p>\n<p>In both cases, the selection can be known in advance based on the current L1 lookahead, and can be efficiently verified offchain.</p>\n<p>The mechanisms of opting-in and selection verification are the subject of an <a href=\"https://github.com/LimeChain/based-preconfirmations-research/blob/732cb92474554c2529aabc61e83b8f0934ce6adf/docs/optin-mechanics.md\" rel=\"noopener nofollow ugc\">additional research document</a>.</p>\n<h3><a name=\"transaction-list-building-delegation-16\" class=\"anchor\" href=\"https://ethresear.ch#transaction-list-building-delegation-16\"></a>Transaction List Building Delegation</h3>\n<p>Being a sequencer for one or multiple rollups increases the sophistication requirements of the opted in L1 proposers. An important factor for the quality of service for any vanilla based sequencing rollup is the high L1 proposers participation rate. Increased L1 proposer sophistication requirements and high L1 proposers participation are at a proverbial “tug of war”.</p>\n<p>To combat this war a transaction list building delegation mechanism is proposed on top of vanilla based sequencing rollup. <strong>The vanilla based sequencing design can be fully functional without this delegation mechanism</strong>, but will require increased sophistication of the L1 proposers.</p>\n<p>In a MEV-boost manner, the opted-in L1 proposers are offered the ability to delegate their transaction list building to a secondary block-building pipeline.</p>\n<p>The list building pipeline is a subject of an <a href=\"https://github.com/LimeChain/based-preconfirmations-research/blob/732cb92474554c2529aabc61e83b8f0934ce6adf/docs/pipelines.md\" rel=\"noopener nofollow ugc\">additional research document</a>.</p>\n<h2><a name=\"preconfirmations-17\" class=\"anchor\" href=\"https://ethresear.ch#preconfirmations-17\"></a>Preconfirmations</h2>\n<p>Current centralised sequencer rollups offer a superior UX compared to L1 and decentralised sequencing designs. Such a UX is now becoming a minimum standard expected by the users. One major component of this UX is the ability to quickly pre-confirm the inclusion and/or execution of a transaction to its sender. It is a naturally important requirement for the vanilla based sequencing to strive to reach and surpass the expected UX.</p>\n<p>Two types of preconfirmations are expected of the system.</p>\n<p>First type of preconfirmation is transaction <strong>inclusion</strong> preconfirmation. This preconfirmation guarantees the inclusion of a transaction in the subsequent rollup slot. These are useful for use cases like simple transfers.</p>\n<p>Second type of preconfirmation is the stronger <strong>execution state</strong> preconfirmation. It allows specifying the desired values of parts of the state of the rollup pre or post execution of the transaction. These are useful for more complex use cases like DEX trades and/or arbitrage.</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/e/2/e2f50f004cff46ee36b555ec23c92fe37393a9a2.png\" alt=\"Preconfirmation Flow - Simple\" data-base62-sha1=\"wnKWwwZSZIpoba5sLvSLbAWGA8i\" width=\"581\" height=\"271\"></p>\n<p>Both preconfirmation types require the sequencer to commit to the inclusion of a certain user transaction. The main difference comes in the ordering of the transactions. Within the context of the sequence, the inclusion of preconfirmed transaction can be located anywhere in the sequence. The state preconfirmation transaction requires a specific ordering of the transactions list up to this transaction.</p>\n<p>Inclusion preconfirmations require simple checks of transaction validity - account balance, nonce, etc.</p>\n<p>Execution state preconfirmation requires more sophistication to commit and price. Transactions prior to the target one can change the pre-execution state and make the desired post-state invalid, thus rendering the whole preconfirmation invalid. In practice this means that the sequencer must maintain and commit to an ordered list of transaction at the top of the list.</p>\n<p>To increase the UX usability and enable wallets to hide away the complexity of retries in case of rejection or preconfirmation reneging, a <code>deadline</code> field is suggested. Such a field enables wallets to retry without the user re-signing the transaction.</p>\n<p>Both types of preconfirmations post a certain constraint on the transaction list that the sequencer can sequence. Such constraints limit to various degrees the value that the sequencer can extract from the sequence. Therefore both preconfirmations require additional payment by the user to the proposer in exchange for their guarantee.</p>\n<p>The mechanics of preconfirmations and their pricing are the subject of a <a href=\"https://github.com/LimeChain/based-preconfirmations-research/blob/732cb92474554c2529aabc61e83b8f0934ce6adf/docs/preconfirmations-for-vanilla-based-rollups.md\" rel=\"noopener nofollow ugc\">separate research document</a>.</p>\n<h2><a name=\"rollups-revenue-18\" class=\"anchor\" href=\"https://ethresear.ch#rollups-revenue-18\"></a>Rollup’s Revenue</h2>\n<p>Transaction fees and MEV are the two major value sources of rollup. All of them are captured at sequencing time (assuming the sequenced transactions can be finalised).</p>\n<p>To ensure that the protocol is generating revenue and is not forced into altruism, a portion of the sequencing revenue is suggested to be captured by the rollup. The specific proportions and mechanics are design decisions of the rollup protocols themselves.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/0/6/06e63d56eeaa90af8ccb8d83fd2d7a7e5996f606.png\" data-download-href=\"https://ethresear.ch/uploads/default/06e63d56eeaa90af8ccb8d83fd2d7a7e5996f606\" title=\"sequencing-design-space-Value Flow.drawio\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/0/6/06e63d56eeaa90af8ccb8d83fd2d7a7e5996f606_2_690x286.png\" alt=\"sequencing-design-space-Value Flow.drawio\" data-base62-sha1=\"Z29m5qctMJlnKrihVL3COlUGkS\" width=\"690\" height=\"286\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/0/6/06e63d56eeaa90af8ccb8d83fd2d7a7e5996f606_2_690x286.png, https://ethresear.ch/uploads/default/original/3X/0/6/06e63d56eeaa90af8ccb8d83fd2d7a7e5996f606.png 1.5x, https://ethresear.ch/uploads/default/original/3X/0/6/06e63d56eeaa90af8ccb8d83fd2d7a7e5996f606.png 2x\" data-dominant-color=\"F7F7F8\"></a></div><p></p>\n<p>A simple example mechanism can see the rollup embedding a commission fee <strong>Z%</strong> over the L2 sequencer balance increase. <strong>Such commission fee is aligned with the success of the protocol, as more transactions indicate high quality service and lead to increased revenue for both the rollup and the sequencers.</strong></p>\n<h2><a name=\"universal-synchronous-composability-19\" class=\"anchor\" href=\"https://ethresear.ch#universal-synchronous-composability-19\"></a>Universal Synchronous Composability</h2>\n<p>The rollup design naturally lends itself to become part of a wider universal synchronous composability (USC) mechanism.</p>\n<p>Assuming multiple rollups using the vanilla based sequencing design, USC can be achieved for the L1 slots whose proposer has opted-in to be L2 sequencer to two or more rollups. In these slots the L1 proposer becomes a shared L2 sequencer. This shared L2 sequencer can offer additional cross-rollup services like atomic messaging and super transactions.</p>\n<h1><a name=\"sequencer-violations-20\" class=\"anchor\" href=\"https://ethresear.ch#sequencer-violations-20\"></a>Sequencer Violations</h1>\n<p>Regardless of the selection type, the sequencers have several ways to violate the protocol. In order to disincentivise the violations and misbehaviour the rollups are required to embed punishment mechanisms (discussed in the Sequencer Selection section). In case of violations, the sequencers are expected to be punished.</p>\n<p>Below you can find a short list of violations and faults applicable specifically to vanilla based sequencing that the actors are expected to be punished for. This is list is by no means exhaustive and rollups should adjust it to their specific design.</p>\n<h2><a name=\"sequencer-liveness-and-timeliness-faults-21\" class=\"anchor\" href=\"https://ethresear.ch#sequencer-liveness-and-timeliness-faults-21\"></a>Sequencer Liveness and Timeliness Faults</h2>\n<p>This violation is characterised by the L2 sequencer missing to get L1 sequencing transaction included within their rollup slot. This fault can be objectively proven by the L1 smart contract.</p>\n<p>It is important to note that the cause in <strong>primary</strong> sequencing can only be attributed to the L1 proposer or its delegation pipeline. Within the context of <strong>fallback</strong> sequencing the liveness fault can be caused by the L2 sequencer’s inability to guarantee the inclusion of the sequencing transaction on time due to a lack of monopoly over the L1 slot.</p>\n<p>This difference might change the severity of the punishment of the L2 sequencer. Furthermore, this is a risk that the fallback sequencers must account for and mitigate as much as possible - for example through increased L1 base tip on the sequencing transaction.</p>\n<h2><a name=\"preconfirmation-reneging-22\" class=\"anchor\" href=\"https://ethresear.ch#preconfirmation-reneging-22\"></a>Preconfirmation Reneging</h2>\n<p>This violation is characterised by the L2 sequencer reneging on their preconfirmation commitment. The specific way it can be proven to the L1 smart contracts is a design decision of the rollup but <a href=\"https://github.com/LimeChain/based-preconfirmations-research/blob/732cb92474554c2529aabc61e83b8f0934ce6adf/docs/preconfirmations-for-vanilla-based-rollups.md#preconfirmation-commitment\" rel=\"noopener nofollow ugc\">using a signed commitment is strongly suggested</a>.</p>\n<h1><a name=\"requirements-to-be-vanilla-based-rollup-23\" class=\"anchor\" href=\"https://ethresear.ch#requirements-to-be-vanilla-based-rollup-23\"></a>Requirements to be Vanilla Based Rollup</h1>\n<p>The following are two lists to help the reader to differentiate what is strongly required for a rollup to be considered using vanilla based sequencing, and what is a design decision to be made by the rollup. Both lists are likely to change over time and are subject to community consensus.</p>\n<h2><a name=\"minimal-viable-vanilla-based-sequencing-requirements-24\" class=\"anchor\" href=\"https://ethresear.ch#minimal-viable-vanilla-based-sequencing-requirements-24\"></a>Minimal Viable Vanilla Based Sequencing Requirements</h2>\n<ul>\n<li>The sequencer selection consists of the primary selection of the current L1 proposer - if opted in - and fallback selection among other opted-in L1 proposers - if not.</li>\n<li>Ability to provide inclusion preconfirmations</li>\n<li>Allows for revenue generation of the participating actors</li>\n</ul>\n<h2><a name=\"rollup-design-decisions-25\" class=\"anchor\" href=\"https://ethresear.ch#rollup-design-decisions-25\"></a>Rollup Design Decisions</h2>\n<ul>\n<li>Sequencing Frequency</li>\n<li>Punishment mechanism for sequencer violations</li>\n<li>Support for state preconfirmations</li>\n<li>Mechanism for discovering violations</li>\n<li>Source of revenue for the rollup protocol</li>\n<li>Deposit, finality and withdrawal mechanisms</li>\n</ul>\n<h1><a name=\"goals-achievement-analysis-26\" class=\"anchor\" href=\"https://ethresear.ch#goals-achievement-analysis-26\"></a>Goals Achievement Analysis</h1>\n<h2><a name=\"secure-without-ux-sacrifices-27\" class=\"anchor\" href=\"https://ethresear.ch#secure-without-ux-sacrifices-27\"></a>Secure without UX Sacrifices</h2>\n<p>Vanilla based sequencing increases the security of the rollup protocol through decentralisation of the sequencers group. By involving the L1 proposers as L2 sequencers the design provides the highest possible timeliness guarantees.</p>\n<p>A major focus of vanilla based sequencing and the ability to support UX on par if not better than centralised sequencing. This is achieved through preconfirmations and enablement of composability with other rollups.</p>\n<h2><a name=\"economically-sustainable-28\" class=\"anchor\" href=\"https://ethresear.ch#economically-sustainable-28\"></a>Economically Sustainable</h2>\n<p>No actor in the vanilla based sequencing design is asked to be altruistic. All actors, including the rollup protocol itself, generate revenue for the services they are providing.</p>\n<h2><a name=\"composability-over-walled-gardens-29\" class=\"anchor\" href=\"https://ethresear.ch#composability-over-walled-gardens-29\"></a>Composability over Walled Gardens</h2>\n<p>Vanilla based sequencing is a neutral design concept that is easily extendable to synchronous composability. Due to the reuse of L1 proposer as L2 sequencer, the L1 proposer can enable composability between rollups.</p>\n<h2><a name=\"inheriting-ethereum-liveness-over-external-liveness-guarantees-30\" class=\"anchor\" href=\"https://ethresear.ch#inheriting-ethereum-liveness-over-external-liveness-guarantees-30\"></a>Inheriting Ethereum Liveness over External Liveness Guarantees</h2>\n<p>The liveness guarantees of any rollup comes from the liveness of its sequencers as a whole. Due to the reuse of L1 proposer as L2 sequencer, the vanilla based sequencing concept inherits the Ethereum liveness guarantees.</p>\n<h2><a name=\"protocol-over-trust-based-censorship-resistance-31\" class=\"anchor\" href=\"https://ethresear.ch#protocol-over-trust-based-censorship-resistance-31\"></a>Protocol over Trust based Censorship Resistance</h2>\n<p>Rollups with centralised sequencing requires the users to trust them that they will not censor them. This makes the centralised sequencer a single point of failure and subjects the rollup, among other things to geopolitical risks.</p>\n<p>Unlike centralised sequencing, vanilla based sequencing rollup censorship resistance increases with the increase of the set of L1 proposers opting in to be L2 sequencers. Due to their equivalence, the trust assumptions towards the L2 sequencers are similar to the ones placed on L1 proposers themselves. The diversity of the L1 proposers group and the clear economic incentives to opt-in makes no single sequencer a long-term single point of failure and lowers geopolitical and technological risks.</p>\n<h1><a name=\"further-research-resources-32\" class=\"anchor\" href=\"https://ethresear.ch#further-research-resources-32\"></a>Further Research Resources</h1>\n<ul>\n<li><a href=\"https://github.com/LimeChain/based-preconfirmations-research/blob/732cb92474554c2529aabc61e83b8f0934ce6adf/docs/preconfirmations-for-vanilla-based-rollups.md\" rel=\"noopener nofollow ugc\">Preconfirmations - mechanics, pricing</a></li>\n<li><a href=\"https://github.com/LimeChain/based-preconfirmations-research/blob/732cb92474554c2529aabc61e83b8f0934ce6adf/docs/optin-mechanics.md\" rel=\"noopener nofollow ugc\">L2 Sequencer Opt-in Mechanics, Sequencer Discovery, L2 Sequencer Communication</a></li>\n<li><a href=\"https://github.com/LimeChain/based-preconfirmations-research/blob/732cb92474554c2529aabc61e83b8f0934ce6adf/docs/pipelines.md\" rel=\"noopener nofollow ugc\">L1 PBS pipeline required modifications</a></li>\n</ul>\n<p><a href=\"https://hackmd.io/JeLKP_pVQMe-_J-kpb3MkQ\" rel=\"noopener nofollow ugc\"><img src=\"https://ethresear.ch/uploads/default/original/3X/5/d/5d16b4aeb4937574bedd09ad574ceea3125f7e0b.svg\" alt=\"hackmd-github-sync-badge\" data-base62-sha1=\"dhv3cFMLVDV1RHyhG3pl4ZFkg8b\" width=\"147\" height=\"20\"></a></p>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/vanilla-based-sequencing/19379\">Read full topic</a></p>","link":"https://ethresear.ch/t/vanilla-based-sequencing/19379","pubDate":"Fri, 26 Apr 2024 14:22:38 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19379"},"source":{"@url":"https://ethresear.ch/t/vanilla-based-sequencing/19379.rss","#text":"Vanilla Based Sequencing"},"filter":false},{"title":"Uncrowdable Inclusion Lists: The Tension between Chain Neutrality, Preconfirmations and Proposer Commitments","dc:creator":"Julian","category":"Economics","description":"<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/d/1d5c2ab8b7b15232b55c806bcfbb744f02dab255.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/1d5c2ab8b7b15232b55c806bcfbb744f02dab255\" title=\"Screenshot 2024-04-25 at 10.49.52\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/d/1d5c2ab8b7b15232b55c806bcfbb744f02dab255_2_504x500.jpeg\" alt=\"Screenshot 2024-04-25 at 10.49.52\" data-base62-sha1=\"4bJjqecFhwQCsBgPuTZeAGHD4gJ\" width=\"504\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/d/1d5c2ab8b7b15232b55c806bcfbb744f02dab255_2_504x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/1/d/1d5c2ab8b7b15232b55c806bcfbb744f02dab255_2_756x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/1/d/1d5c2ab8b7b15232b55c806bcfbb744f02dab255_2_1008x1000.jpeg 2x\" data-dominant-color=\"A2B4C4\"></a></div><p></p>\n<p>By <a class=\"mention\" href=\"https://ethresear.ch/u/julian\">@Julian</a>, <a class=\"mention\" href=\"https://ethresear.ch/u/barnabe\">@barnabe</a> and <a class=\"mention\" href=\"https://ethresear.ch/u/soispoke\">@soispoke</a></p>\n<p>Validators are the most decentralized set of participants at any level of the Ethereum protocol and infrastructure. This is a design goal of Ethereum because only then can the protocol leverage this decentralization to obtain protocol resilience:</p>\n<ul>\n<li>As consensus service participants, a decentralized set of validators ensures resilience against correlated failures, either accidental (e.g., due to bugs taking offline a certain share of the validator set) or malicious (e.g., a share of the validator set producing a safety fault).</li>\n<li>As block producers, a decentralized set of validators creates resilience against extractive cartels, which may be looking for undue rents, e.g., via censoring or re-ordering.</li>\n</ul>\n<p>This post investigates the second role of validators and their duties as block producers. First, we explore how the protocol can leverage the decentralized validator set to uphold a concept we call chain neutrality. Then, we discuss how preconfirmations and PEPC may crowd out an in-protocol inclusion list from upholding chain neutrality, thereby introducing a property of inclusion lists that is the main topic of this post: uncrowdable inclusion lists. Finally, we compare unconditional inclusion lists with an instance of PEPC and investigate who should receive tips associated with transactions that are executed via the inclusion list.</p>\n<h2><a name=\"towards-recovering-chain-neutrality-1\" class=\"anchor\" href=\"https://ethresear.ch#towards-recovering-chain-neutrality-1\"></a>Towards recovering chain neutrality</h2>\n<p>In the past, validators (and miners before them) engaged <em>passively</em> both as <em>builders</em>, collecting transactions and sequencing them in blocks using simple heuristics, and as <em>proposers</em>, signing the block and gossiping it over the network.</p>\n<p>Maximal Extractable Value (MEV), the value which a validator may extract in their duties as block producer, changed the paradigm. Validators turned into passive proposers engaging with a distinct set of <a href=\"https://arxiv.org/abs/2307.01686\" rel=\"noopener nofollow ugc\">active</a> builders. Active builders do not simply collect transactions and mindlessly pack them into blocks; instead, they actively optimize for the value they can extract from the block’s contents. Meanwhile, validators, as passive proposers, simply listen for offers from builders who wish to build on their behalf.</p>\n<p>Unfortunately, as a numerically much smaller set with its own profit-maximizing goals, there is no reason for builders’ objectives and preferences to be aligned with validators regarding the inclusion or censorship of certain transactions or even with the preferences of network stakeholders broadly. More generally, the following principle may be put forward:</p>\n<blockquote>\n<p><strong>Chain neutrality:</strong> Any pending, fee-paying transaction ought to be included if it is available and if there is room to include it on-chain.</p>\n</blockquote>\n<p>Chain neutrality is meant to encompass principles larger than censorship resistance alone. Under censorship resistance, as we conceive of it, there is an active and targeted effort to prevent the access of some user to on-chain inclusion. However, with today’s dense supply networks of intermediated relationships, some user interactions may fall by the wayside for accidental reasons simply because their transaction does not participate in increasing the welfare of the supply network intermediaries. <a href=\"https://ethresear.ch/t/reducing-latency-games-by-levelling-the-playing-field-on-block-size-for-pbs/19356\">An example</a> is builders excluding transactions not to censor them per se, but to decrease the amount of time it would take a block to propagate over the network. In our opinion, users must always be able to “get on-chain” as long as they satisfy the two requirements spelled out in the definition of chain neutrality.</p>\n<p>Validators as passive block producers would simply fill up their blocks from the mempool, ensuring allocation of blockspace to users who indeed satisfy the requirements of chain neutrality. Yet, with today’s systems, proposers have the choice of either remaining passive (”local building”) or locking themselves out entirely from participating in block production (with MEV-Boost). To preserve chain neutrality, we are then looking for ways to recover the diversity that validators embody by allowing them to provide input into block production, even when they decide to delegate building.</p>\n<p><a href=\"https://eips.ethereum.org/EIPS/eip-7547\" rel=\"noopener nofollow ugc\">Inclusion lists</a> (ILs) are a proposed method to recover validator participation in block creation. The validator produces an IL that the builder must <em>satisfy</em> according to the IL model’s specifications (e.g., the builder must include all transactions from the IL in their block or produce a block that cannot contain more transactions from the IL).</p>\n<p>The first observation is that validators have not been forced into outsourcing their block building to active builders and have done so to maximize their own returns. It is then unclear why a validator would care to produce an IL binding the builders for their slot, forcing them to include transactions that the builders may wish to steer clear of. For this reason, the model of <em>forward</em> inclusion lists was proposed. Forward inclusion lists are built by the validator-proposer of slot <em>n</em> and constrain the block produced by the validator-proposer of slot <em>n</em> + 1. From the perspective of network stakeholders, constraints on validators to respect and preserve chain neutrality, <em>even when imposed externally by distinct validators</em>, appear to be legitimate.</p>\n<p>But how can we judge the success of inclusion lists in bolstering chain neutrality beyond other potential use cases for ILs? Naively, we could consider the quantity and quality of transactions in the IL. Are the transactions reported in the IL indeed susceptible to censorship, for example, or is the IL used for other goals? This is an important question since the inclusion list is a scarce protocol product, yet other use cases lie in wait!</p>\n<ul>\n<li><strong>Preconfirmations:</strong> <a href=\"https://0xjunger.github.io/eth-preconfs-sequencing/\" rel=\"noopener nofollow ugc\">Preconfirmations</a> are agreements between a proposer and a user regarding the conditions for inclusion of a user’s transaction, e.g., within some time interval or acting upon some specific state. Preconfirmations offered by the validator-proposer hence require the validator to have some input into the block-building process. ILs look like a good place for the proposer to register their commitments, which may mean that the IL might be used for preconfirmations instead of for its purpose of ensuring chain neutrality.</li>\n<li><strong>Partial block building:</strong> Allowing multiple builders to build different parts of the block may have value. ILs could offer a path to implementing a rough protocol for such partial building commitments, using the same pattern as mev-boost (think “IL-boost” with an IL builder feeding the data to the validator-proposer). More generally, the value proposition of <a href=\"https://ethresear.ch/t/unbundling-pbs-towards-protocol-enforced-proposer-commitments-pepc/13879\">PEPC</a> is to leverage the proposer’s ability to make commitments regarding the organization of block building, including commitments about partial contents. ILs allow for a limited class of commitments on building a block, so is there again a conflict between ILs as neutral input surfacing and ILs as coordination gadgets toward partial block building.</li>\n</ul>\n<p>Here lies the crux of the problem. Other use cases that potentially unlock a lot of value for the IL proposer can use the commitment power that the IL proposer receives from the protocol. Preconfirmations and certain PEPC-esque proposer commitments could be realized via inclusion lists. If a proposer makes more profit by constructing their IL for these use cases than for others, they likely will. When ILs are used for cases other than chain neutrality, we say that the chain neutrality use case is <em>crowded out</em>. This post suggests a new design property for inclusion lists: <em>uncrowdability</em>. We examine how a protocol can ensure that a protocol product becomes uncrowdable, and we apply this reasoning to the currently proposed inclusion list models.</p>\n<h2><a name=\"uncrowdable-inclusion-lists-2\" class=\"anchor\" href=\"https://ethresear.ch#uncrowdable-inclusion-lists-2\"></a>Uncrowdable Inclusion Lists</h2>\n<p>We informally define uncrowdable inclusion lists as inclusion lists that create more value for the inclusion list proposer when used for the purpose the protocol intended them to than when used for other purposes. Making ILs uncrowdable should be a protocol design goal. Similarly <a href=\"https://barnabe.substack.com/p/pbs\" rel=\"noopener nofollow ugc\">to work done on PBS</a>, we delineate the design space of inclusion lists into the allocation rule and the market structure.</p>\n<p>The market structure is the collection of rights and obligations that are assigned to the inclusion list. Who gets to make the inclusion list? To which block(s) does the inclusion list apply? How is the inclusion list enforced? We have seen a number of different proposed IL designs that each use a different market structure. <a href=\"https://notes.ethereum.org/@fradamt/forward-inclusion-lists\" rel=\"noopener nofollow ugc\">Forward inclusion lists</a> allow the beacon proposer of block <span class=\"math\">n</span> to create the IL that applies to block <span class=\"math\">n + 1</span>. Conditional ILs are enforced only if there is space for the transactions from the IL to be included in the block, whereas <a href=\"https://ethresear.ch/t/unconditional-inclusion-lists/18500\">unconditional ILs</a> are enforced regardless of the number of transactions in the main block body. Similarly, a <a href=\"https://ethresear.ch/t/cumulative-non-expiring-inclusion-lists/16520\">cumulative, non-expiring inclusion list</a> is also a different protocol product.</p>\n<p>The allocation rule of inclusion lists refers to the space of commitments that the IL proposer may implement. The ideal allocation would be including in the list a set of transactions that are “censored.” IL proposers may implement other allocation rules, such as outsourcing IL production to third parties, e.g., via the aforementioned hypothetical IL-boost. The protocol can create a market structure such that the allocation rule that an IL proposer chooses also achieves the goal of upholding chain neutrality.</p>\n<p>The protocol can use the market structure to incentivize the IL proposer to choose an allocation rule that upholds chain neutrality. Different market structures elicit different allocation rules used by IL proposers.</p>\n<p>Arguably, conditional inclusion lists could be closer to being uncrowdable than unconditional ones because they offer fewer guarantees about the inclusion of transactions. Unconditional ILs could more easily be used for other use cases. Therefore, using the market structure of conditional ILs may incentivize the IL proposer to choose an allocation rule that upholds chain neutrality, thereby making ILs more uncrowdable.</p>\n<p>The protocol could also make ILs uncrowdable by choosing a market structure that restricts the set of possible allocation rules. <a href=\"https://ethresear.ch/t/the-more-the-less-censored-introducing-committee-enforced-inclusion-sets-comis-on-ethereum/18835/3\">COMIS</a> is such a mechanism. It roughly states that an inclusion list is constructed out of the inclusion sets that each member of a large committee makes. If a transaction is included in at least a certain fraction of the inclusion sets, it must be included in the final inclusion list. Such a mechanism clearly leads to a market structure that is more opinionated about its purpose, and it would be more costly for an IL proposer to use the IL for any other purpose than for chain neutrality.</p>\n<p>There may be a more general argument to be made here. In upholding chain neutrality, the protocol makes an opinionated choice in favor of censored parties, even though this may lead to a welfare gap. A market-based solution, where the allocation rule is unconstrained, generally aims to find the welfare-maximizing solution, meaning that the MEV of one specific block is maximized. Therefore, if a protocol wants chain neutrality, maybe it must constrain the set of possible allocation rules. Potentially, this is analogous to a protocol that needs to specify an allocation rule for block construction if it wants to enforce a first-come, first-served block allocation rule.</p>\n<p>Given this welfare gap, one might also wonder whether it is bad for the protocol-specified purpose to be crowded out by other use cases. However, whether this welfare gap is desirable is a governance question and not one that should be answered by markets. Moreover, other use cases, such as preconfirmations, do not require protocol products and may be satisfied by out-of-protocol proposer commitments such as <a href=\"https://hackmd.io/@bchain/BJkarrEWp\" rel=\"noopener nofollow ugc\">PEPC-Boost</a> or EigenLayer-based systems. Chain neutrality is hard to improve with out-of-protocol systems.</p>\n<h2><a name=\"comparison-between-inclusion-lists-pepc-and-multiple-concurrent-block-producers-3\" class=\"anchor\" href=\"https://ethresear.ch#comparison-between-inclusion-lists-pepc-and-multiple-concurrent-block-producers-3\"></a>Comparison between Inclusion Lists, PEPC, and Multiple Concurrent Block Producers</h2>\n<p>We’ve touched upon the possibility of some use cases crowding out others, given the design of the inclusion list market structure. Use cases embody the demand for certain features or outcomes that market participants desire to achieve. If the demand cannot be satisfied directly by some product yet can be satisfied indirectly by some other product, then even if the indirect product is not <em>ex-ante</em> designed to accommodate this demand, some use cases will crowd out others. We must now understand where the demand for use cases such as preconfirmations or more general proposer commitments comes from and why inclusion lists allow for indirect expression of these use cases.</p>\n<p>Broadly, we think of inclusion lists, preconfirmations, proposer commitments, and other phenomena as instances of a larger will to participate in <strong>block co-creation</strong>. As an atomic unit, a block represents a <em>big</em> amount of space to allocate for the expression of user preferences, via transactions. A Hayekian argument may be advanced that no single party has the knowledge necessary to make a good block and thus must rely on decentralized knowledge of a larger number of market participants. Preventing the expression of this decentralized will to include creates pent-up demand, which will seek to realize itself in any way that it can.</p>\n<p>As an example, unconditional ILs reserve a certain amount of blockspace in block <span class=\"math\">n+1</span> for the inclusion list, which is proposed and built by the proposer of block <span class=\"math\">n</span>. This setup is very similar to an instance of PEPC with two partial builders. In fact, if the protocol could take delivery of both blocks separately instead of requiring one builder to bundle the inclusion list with the regular block, we would not need the “forward” property of the IL, and we would obtain exactly two parallel builders, although some transactions in the unconditional IL may already be executed in the main block body if it were appended to the end of block <span class=\"math\">n+1</span>.</p>\n<p>If a single funnel, such as inclusion lists, cannot adequately realize every type of demand from the market, can we look for differentiated “pipes” adapted to each type of use case that may occur? Barnabé suggests the idea of a “mixed IL”: an IL built up from <em>a)</em> a spot (applying to the block of the IL proposer) unconditional IL and <em>b)</em> a forward conditional IL. This would allow good quality preconfirmations to be issued in the spot unconditional IL, whereas the forward conditional IL could still be used for chain neutrality.</p>\n<p>Alternatively, we could also design a spot IL that upholds chain neutrality. By using a spot unconditional IL with COMIS, the role of the block proposer in the construction of the IL could be removed and replaced by a committee. This is a change in market structure similar to <a href=\"https://ethresear.ch/t/execution-tickets/17944\">execution tickets</a> since we question whether the beacon proposer of a slot should receive the rights to propose the inclusion list, instead of actors directly interacting with the protocol.</p>\n<p>Furthermore, unconditional ILs that apply to slot <span class=\"math\">n</span> but are made by another party than the beacon proposer of slot <span class=\"math\">n</span> result in something that looks very similar to <a href=\"https://ethresear.ch/t/multiplicity-a-gadget-for-multiple-concurrent-block-proposers/14962\">multiple concurrent block producers</a>. The differences and similarities between these different forms of block co-creation are currently under-explored.</p>\n<h2><a name=\"inclusion-list-tips-4\" class=\"anchor\" href=\"https://ethresear.ch#inclusion-list-tips-4\"></a>Inclusion List Tips</h2>\n<p>The current inclusion list spec says that the tips associated with the transactions in the IL are rewarded to the proposer of the block in which these transactions are executed, not to the proposer that included the transactions in the IL. In this part of the post, we argue that rewarding the tips to the IL proposer instead of the block proposer 1) creates a scheme in which tips can conditionally pay for censorship resistance, 2) may be inevitable, and 3) increases the cost of censorship. Note that if a credible mechanism to reward IL proposers existed, the protocol could reward IL proposers in different ways; it could use issuance, for example.</p>\n<p>First, by giving tips from transactions that are executed via the IL, we can reward the IL proposer for providing a valuable service of chain neutrality. Here, we would consider a transaction executed <em>via the IL</em> if the transaction is in the IL but not in the main block body of any earlier block. This is good for the proposer as it closes the welfare gap between using the IL for censorship resistance and for other purposes: the IL is more uncrowdable. Moreover, it is also good for the user because it allows them to pay for this service, conditional on the transaction not being included in any other way. This may be more difficult to do out-of-protocol.</p>\n<p>While conditional tips for censorship resistance may be more difficult out-of-protocol, it is trivial for the inclusion list proposer to demand that any transaction that wants to be included in the IL bribe the proposer and then allow these transactions to be included in the list with 0 tips.</p>\n<p>Finally, the cost of censorship, defined in “<a href=\"https://arxiv.org/abs/2301.13321\" rel=\"noopener nofollow ugc\">Censorship Resistance in On-Chain Auctions</a>” by Elijah Fox, Mallesh Pai, and Max Resnick as the minimum cost an adversary would have to pay to censor a transaction, doubles when rewarding the IL proposer with the tip instead of the block proposer. This is because an adversary would not only need to bribe the block proposer to exclude the transaction, but it would also need to bribe the inclusion list proposer by the amount of the tip instead of by any arbitrarily small amount.</p>\n<h2><a name=\"conclusion-5\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-5\"></a>Conclusion</h2>\n<p>To summarize, this post argues that the forward property of inclusion lists is insufficient to guarantee that inclusion lists will be used to uphold chain neutrality. We introduce the concept of <em>uncrowdable</em> inclusion lists, which may explain why a certain inclusion list design will or will not achieve the protocol-specified goal of chain neutrality. Uncrowdable inclusion lists create more value for the list proposer when used for the protocol-desired goal than for any other goal. The protocol can be designed for uncrowdable inclusion lists by creating a market structure that induces a desirable allocation rule. Finally, we argue that it is beneficial for the tips associated with transactions in the inclusion list to be rewarded to the inclusion list proposer instead of to the block proposer.</p>\n            <p><small>7 posts - 4 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/uncrowdable-inclusion-lists-the-tension-between-chain-neutrality-preconfirmations-and-proposer-commitments/19372\">Read full topic</a></p>","link":"https://ethresear.ch/t/uncrowdable-inclusion-lists-the-tension-between-chain-neutrality-preconfirmations-and-proposer-commitments/19372","pubDate":"Thu, 25 Apr 2024 10:36:53 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19372"},"source":{"@url":"https://ethresear.ch/t/uncrowdable-inclusion-lists-the-tension-between-chain-neutrality-preconfirmations-and-proposer-commitments/19372.rss","#text":"Uncrowdable Inclusion Lists: The Tension between Chain Neutrality, Preconfirmations and Proposer Commitments"},"filter":false},{"title":"Testing the Capabilities of a Protocol based on Distributed Validator Technology (DVT)","dc:creator":"daniejjimenez","category":"Proof-of-Stake","description":"<h1><a name=\"holesky-safestake-testnet-private-mainnet-why-participate-now-1\" class=\"anchor\" href=\"https://ethresear.ch#holesky-safestake-testnet-private-mainnet-why-participate-now-1\"></a>Holesky SafeStake Testnet &amp; Private mainnet: Why participate now?</h1>\n<p>One of SafeStake’s great strengths in the last two years has undoubtedly been the hard work at the development level to deliver a highly resilient and decentralized staking framework and protocol, facilitating the onboarding of thousands of users to the fascinating world of ETH staking with DVT technology.</p>\n<p>After the successful and stable Galileo Testnet launch to the public on February 25, 2023, a key moment has arrived for SafeStake in its definitive step towards releasing its long-awaited public mainnet: Holesky Safestake Testnet!</p>\n<p>The Holesky Safestake Testnet is the final step before deploying the DVT-based protocol on the Ethereum mainnet in the first quarter of this year, as indicated in their “<a href=\"https://safestake.substack.com/p/safestake-annual-review-and-2024\" rel=\"noopener nofollow ugc\">SafeStake Annual Review and 2024 OKR Outline.</a>” It is a fundamental part of achieving the short-term goals and key results outlined for the project.</p>\n<p>The deployment of Holesky Safestake Testnet over a month aims to ensure a minimum of 20 professional node operators with a minimum performance rating of 98%+, enabling the service of over 2,000 Ethereum mainnet validators when the protocol is launched on the main network at the end of February.</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/3/c/3c33f8cfd4fd4fdedfa8bc40280b2cb67a28f34e.png\" alt=\"Captura de pantalla 2024-04-24 122010\" data-base62-sha1=\"8AzZQBdDV2DlNI56iZzseSOEJVI\" width=\"670\" height=\"229\"></p>\n<h2><a name=\"advantages-of-holesky-safestake-testnet-2\" class=\"anchor\" href=\"https://ethresear.ch#advantages-of-holesky-safestake-testnet-2\"></a>Advantages of Holesky Safestake Testnet</h2>\n<p>One of the main questions the average user may address is why another month of testing in Holesky should be deployed. The reasons are straightforward: Holesky has been launched as a critical test environment for Ethereum developers to experiment with ambitious updates to enhance Ethereum’s scalability and performance.</p>\n<p>The Holesky Ethereum testnet allows for faster block times and greater stability, enabling the testing of large-scale features that the Safestake protocol will have in the future, such as liquid staking and the creation of validators with a low limit of only 4 ETH.</p>\n<p>The generation of 4 ETH mini-pools in Safestake is undoubtedly one of the most critical milestones in the project’s roadmap. Therefore, subjecting the protocol to the necessary stress tests in Holesky before its deployment on the mainnet is crucial to ensure that this functionality performs without any issues.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/6/9603d047a42f7f6ee4e6d1c904153fa8bd0382fa.png\" data-download-href=\"https://ethresear.ch/uploads/default/9603d047a42f7f6ee4e6d1c904153fa8bd0382fa\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/6/9603d047a42f7f6ee4e6d1c904153fa8bd0382fa_2_602x339.png\" alt=\"\" data-base62-sha1=\"lp5N3bUS3nUG0nlD3LfVPJ3d5mG\" width=\"602\" height=\"339\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/6/9603d047a42f7f6ee4e6d1c904153fa8bd0382fa_2_602x339.png, https://ethresear.ch/uploads/default/original/3X/9/6/9603d047a42f7f6ee4e6d1c904153fa8bd0382fa.png 1.5x, https://ethresear.ch/uploads/default/original/3X/9/6/9603d047a42f7f6ee4e6d1c904153fa8bd0382fa.png 2x\" data-dominant-color=\"E0DFF5\"></a></div><p></p>\n<p>Holesky Safestake Testnet will allow SafeStake operators and validators to activate a node and perform their functions similarly to Goerli but in a more scalable and secure environment, enabling the participation of a larger number of validators in running more comprehensive and rigorous tests, such as the generation of distributed keys (DKG), before they are implemented on the main network.</p>\n<p>This new testing phase is also designed to simulate the performance of Safestake in line with upcoming updates that will be implemented in Ethereum to improve the scalability of the main network.</p>\n<h2><a name=\"why-participate-in-holesky-safestake-testnet-3\" class=\"anchor\" href=\"https://ethresear.ch#why-participate-in-holesky-safestake-testnet-3\"></a>Why Participate in Holesky Safestake Testnet</h2>\n<p>With the successful launch of Safestake on Holesky, the protocol development team will be able to test the ambitious features of the protocol in a more realistic environment as it approaches the achievement of short-term goals, measuring the scalability and performance of the cutting-edge SafeStake Operator Node.</p>\n<p>Participating in the Holesky Safestake Testnet will, in the first instance, allow testing the capabilities of a unique protocol based on Distributed Validator Technology (DVT), aiming to become one of the leading DVT infrastructure providers for the Lido DAO and its operators in the short term.</p>\n<p>As is publicly known, the staking industry is one of the fastest-growing sectors projected for the next half of this decade. According to Staking Rewards data, the staking Industry MarketCap is currently around $273.99b, and Ethereum’s staking participation rate (26.3% of the total supply staked) still significantly lags behind other PoS networks such as Solana (71% staked) or Cardano (62% staked).</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/f/1f28bebd9dcd4a6ff130d329e81961a1cb2e7005.png\" data-download-href=\"https://ethresear.ch/uploads/default/1f28bebd9dcd4a6ff130d329e81961a1cb2e7005\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/f/1f28bebd9dcd4a6ff130d329e81961a1cb2e7005_2_602x284.png\" alt=\"\" data-base62-sha1=\"4rE62R1srNmJW1ZzBtwokjbTcKp\" width=\"602\" height=\"284\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/f/1f28bebd9dcd4a6ff130d329e81961a1cb2e7005_2_602x284.png, https://ethresear.ch/uploads/default/optimized/3X/1/f/1f28bebd9dcd4a6ff130d329e81961a1cb2e7005_2_903x426.png 1.5x, https://ethresear.ch/uploads/default/original/3X/1/f/1f28bebd9dcd4a6ff130d329e81961a1cb2e7005.png 2x\" data-dominant-color=\"DEDEE0\"></a></div><p></p>\n<pre><code>                         *Source: Staking Rewards*\n</code></pre>\n<p>Within the ETH staking market, it is important to provide a protocol with a DVT-based infrastructure to reduce risks of centralization.</p>\n<p>Safestake is working diligently to ensure that a portion of the Ops base on Ethereum joins our mainnet to achieve the goal of a more resilient, secure, and decentralized Ethereum.</p>\n<p>On the other hand, becoming a Node Operator in Holesky Safestake Testnet can represent a historic opportunity in the mission to help make Ethereum more decentralized with a distributed base of validators.</p>\n<p>Additionally, it is also an opportunity to become one of the Top 20 Operators with excellent performance, who will be incorporated into Safestake <a href=\"https://blog.safestake.xyz/2024/03/25/announcing-the-launch-of-the-safestake-road-to-mainnet-campaign/\" rel=\"noopener nofollow ugc\">Mainnet</a> Private in 2024, and start earning rewards (ETH) for keeping validators secure and online to perform Ethereum Proof-of-Stake consensus duties.</p>\n<h2><a name=\"how-to-join-holesky-safestake-testnet-4\" class=\"anchor\" href=\"https://ethresear.ch#how-to-join-holesky-safestake-testnet-4\"></a>How to join Holesky Safestake Testnet</h2>\n<p>In case you want to become a node operator on Holesky Safetake Testnet, you can find an excellent instructional video on how to join at this link:</p>\n<p><a href=\"https://www.youtube.com/watch?v=rvzSAP9XHbM&amp;ab_channel=SafeStake\" rel=\"noopener nofollow ugc\">How to run an Operator Node on SafeStake Testnet v2.0 -Version 2 (Holesky)</a></p>\n<p>In case you have already joined, you can expand the information in this instruction manual to upgrade to the last version:</p>\n<p><a href=\"https://github.com/ParaState/SafeStakeOperator/blob/main/docs/safestake-running-an-operator-node-on-going.md\" rel=\"noopener nofollow ugc\">SafeStakeOperator/docs/safestake-running-an-operator-node-on-going.md at main</a></p>\n<p>On the other hand, if you are a validator, you must obtain 32 HolETH via the <a href=\"https://holesky-faucet.pk910.de/#/\" rel=\"noopener nofollow ugc\">Holesky testnet PoW faucet</a>, which is free. In addition, you will require <a href=\"https://discord.com/channels/769941371581890580/1112339492364365889\" rel=\"noopener nofollow ugc\">120 test $DVT</a> to run a validator on Testnet v2.0.</p>\n<p>Go to <a href=\"https://holesky.safestake.xyz/\" rel=\"noopener nofollow ugc\">Holesky.SafeStake.xyz</a> and connect your wallet. Then click Run Validator and Visit Ethereum Launchpad to create a new validator. Wait for your new Validator to become active on Holesky before importing it to SafeStake.</p>\n<p>Then Import Existing to import your keystore file using the drag-and-drop interface. Choose the operators you want to run your validator, approve the $DVT transaction, and wait for your validator to become active on SafeStake (~15 min)</p>\n<p>SafeStake on Holesky marks a major milestone and the beginning of the final 30 days of testing before SafeStake launches on the Ethereum mainnet.</p>\n<h2><a name=\"benefits-of-joining-holesky-safestake-testnet-and-private-mainnet-5\" class=\"anchor\" href=\"https://ethresear.ch#benefits-of-joining-holesky-safestake-testnet-and-private-mainnet-5\"></a>Benefits of Joining Holesky Safestake Testnet and Private Mainnet</h2>\n<p>In addition to the advantages of promoting the adoption of Distributed Validator Technology (DVT) among stakers and node operators, joining our test network has substantial economic benefits through our <a href=\"https://parastate-safestake-community.notion.site/SafeStake-Incentive-Program-for-Professional-Operators-Mainnet-Validators-and-Home-Stakers-b9f884ebc1794e35b31999083101be6c\" rel=\"noopener nofollow ugc\">Mainnet Validator Incentive Pool</a>.</p>\n<p>There will be 1.4 million $DVT tokens as an incentive to distribute to ETH holders who decide to run an Ethereum mainnet validator on the Safestake mainnet. Additionally, there will be an extra incentive based on a points system for early birds.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/a/1af24bc2219cc2804be03c181f05e677bff2af4c.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/1af24bc2219cc2804be03c181f05e677bff2af4c\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/a/1af24bc2219cc2804be03c181f05e677bff2af4c_2_602x316.jpeg\" alt=\"\" data-base62-sha1=\"3QnwUF5MHj98nrmDgcPX8DYBMXa\" width=\"602\" height=\"316\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/a/1af24bc2219cc2804be03c181f05e677bff2af4c_2_602x316.jpeg, https://ethresear.ch/uploads/default/optimized/3X/1/a/1af24bc2219cc2804be03c181f05e677bff2af4c_2_903x474.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/1/a/1af24bc2219cc2804be03c181f05e677bff2af4c.jpeg 2x\" data-dominant-color=\"B8D8F5\"></a></div><p></p>\n<p>As mentioned earlier, being an independent node operator or a validator in Holesky Safestake Testnet will allow you to familiarize yourself with the protocol and opt for one of the first 20 spots available for our upcoming Safestake Mainnet Private to be deployed on Ethereum by the end of February.</p>\n<p>Operators will need to spin up a new node on Holesky and keep it active for 60 days, followed by running a node on the Safestake mainnet that remains active for 60 days post-mainnet launch.</p>\n<p>Validators must join SafeStake mainnet to be eligible for rewards.</p>\n<h2><a name=\"safestake-the-path-to-efficient-staking-6\" class=\"anchor\" href=\"https://ethresear.ch#safestake-the-path-to-efficient-staking-6\"></a>Safestake: The Path to Efficient Staking</h2>\n<p>If you love financial freedom and resonate with the decentralized spirit that Ethereum embodied at its inception, the SafeStake Testnet and Mainnet Private are the ideal places to put your ideals into practice.</p>\n<p>Safestake, based on DVT, is emerging as a more efficient and decentralized staking solution, offering various advantages over traditional single-node staking solutions, allowing it to be at the forefront of the mission to achieve a more decentralized Ethereum.</p>\n<p>The DVT functionality in SafeStake is powered by three key components: Shamir Secret Sharing for BLS Signatures, Multi-Party Computation (MPC), and the BFT (Byzantine Fault Tolerance) consensus layer (HotStuff). The result is a validator that uses a ‘3 out of 4’ threshold signature scheme, where only three out of four operators are needed to attest on a validator’s behalf and where no single entity can ever gain control or recreate the private key.</p>\n<p>Safestake infrastructure is written in Rust for increased performance and security for the smart contracts that power its Ethereum staking. Nodes are managed by independent, decentralized operators on a permissionless network, creating a highly decentralized, ultra-secure, fault-tolerant environment.</p>\n<p>Furthermore, the protocol aims to cover all narratives around Ethereum staking, such as LSDfi, when it incorporates the ability to run validators through mini-pools of just 4 ETH in its final stage, seeking to diversify the offering of staking pools in the rapidly growing sector currently dominated by a few actors.</p>\n<p>We invite all those interested in testing the capabilities of our Testnet to actively participate as validators and ops.</p>\n<p>We value objective criticism and community input on the protocol, as the path to a sustainable Ethereum is decentralization, and Safestake based on DVT provides a way to achieve it.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/testing-the-capabilities-of-a-protocol-based-on-distributed-validator-technology-dvt/19368\">Read full topic</a></p>","link":"https://ethresear.ch/t/testing-the-capabilities-of-a-protocol-based-on-distributed-validator-technology-dvt/19368","pubDate":"Wed, 24 Apr 2024 16:16:28 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19368"},"source":{"@url":"https://ethresear.ch/t/testing-the-capabilities-of-a-protocol-based-on-distributed-validator-technology-dvt/19368.rss","#text":"Testing the Capabilities of a Protocol based on Distributed Validator Technology (DVT)"},"filter":false},{"title":"Reducing latency games by levelling the playing field on block size for PBS","dc:creator":"antonydenyer","category":"Block proposer","description":"<p><em>Thanks to <a class=\"mention\" href=\"https://ethresear.ch/u/simbro\">@simbro</a> for reviewing</em></p>\n<h2><a name=\"abstract-1\" class=\"anchor\" href=\"https://ethresear.ch#abstract-1\"></a>Abstract</h2>\n<p>For this post, block size refers to the number of serialised bytes in a block. Currently, the average block size is over 100k <a href=\"https://etherscan.io/chart/blocksize\" rel=\"noopener nofollow ugc\">https://etherscan.io/chart/blocksize</a>. Note that we are talking about bytes, not gas limit.</p>\n<p>Every block builder is motivated to submit a block to the PBS auction as late as possible. The more time a block builder has, the more time they have to accumulate transactions and, therefore, priority fees. For the purpose of this discussion, we assume no MEV is at play.</p>\n<h2><a name=\"discrete-blocks-and-latency-games-2\" class=\"anchor\" href=\"https://ethresear.ch#discrete-blocks-and-latency-games-2\"></a>Discrete Blocks and Latency Games</h2>\n<p>Apologies if this is old news, but it’s worth reiterating. The role of a block builder is multifaceted and requires proficiency in several infrastructure tasks.</p>\n<ol>\n<li>Block builders must be able to access transactions; solo validators often miss out on priority fees because they are not well connected to the public mempool. A block builder with good connectivity to the mempool will likely win more blocks. They may even partner with wallets and other transaction originators to fast-track mempool transactions into their builder pipeline.</li>\n<li>They must have good networking connectivity with the auctioneer, aka relay. The lower the latency between them and the auctioneer, the more time they have to build blocks.</li>\n<li>Because the block builder is privileged, they can offer value-added features that no other entity can offer. Namely, revert protection through eth_sendBundle. The builder who can build a block the fastest whilst protecting private order flow from reverts will win more blocks (once again, we assume no mev).</li>\n</ol>\n<p>Because blocks are discrete periods, pressure is applied to all parts of the stack towards the end of the block. Consequently, a block builder will do what it can to increase the amount of time it has to focus on its core activity, building the most profitable block.</p>\n<h2><a name=\"observations-3\" class=\"anchor\" href=\"https://ethresear.ch#observations-3\"></a>Observations</h2>\n<p>Block builders will likely submit multiple bids using multiple strategies. Sometimes, the bids for smaller blocks are received in time, while those for larger blocks are not. This is simply because larger blocks are slower. Consequently, transactions that could be included in a block are not being picked up.</p>\n<h2><a name=\"hypothetical-scenario-4\" class=\"anchor\" href=\"https://ethresear.ch#hypothetical-scenario-4\"></a>Hypothetical Scenario</h2>\n<p>A block builder has 100 transactions in their local mempool, totalling 0.5 eth in priority fees. The network is silent, and no other transactions are entering the mempool. The block builder submits the block (block a) to the auction. Near the very end of the block, another transaction enters the mempool with a whopping 1 eth in priority fees. The block builder now submits two more bids at the same time.</p>\n<p>block b - containing our single juicy priority fee transaction for 1 eth.<br>\nblock c - containing 101 transactions with all the transactions we have totalling 1.5 eth.</p>\n<p>Both bids are now higher than the previous bid. One of three scenarios now stands:</p>\n<ol>\n<li>\n<p>The original bid wins as neither subsequent bid was reached in time by the auction before the deadline.<br>\n<img src=\"https://ethresear.ch/uploads/default/original/3X/d/3/d329d630c072318e1c3244c344567c4cba725c3b.png\" alt=\"block_a_wins\" data-base62-sha1=\"u82nCkXNMDe8sPVNCA3xPeH7dNN\" width=\"668\" height=\"379\"></p>\n</li>\n<li>\n<p>The small block reaches the auction before the deadline, pushing out the previously submitted block of 100 transactions.<br>\n<img src=\"https://ethresear.ch/uploads/default/original/3X/f/f/ffc5cc2ec664852f1b14f994a5f4fd0fdc2078bc.png\" alt=\"block_b_wins\" data-base62-sha1=\"AuFx817b7Iq6j0znbfYZ90NpFp2\" width=\"668\" height=\"379\"></p>\n</li>\n<li>\n<p>The big block reaches in time, and all transactions are included.<br>\n<img src=\"https://ethresear.ch/uploads/default/original/3X/9/a/9a46b15ba954c2447f02744a92623a7f33c26940.png\" alt=\"block_c_wins\" data-base62-sha1=\"m0MZk2G1o9HICbQU88SXOhlKJQQ\" width=\"668\" height=\"379\"></p>\n</li>\n</ol>\n<p>It is easy to imagine an interplay between latency, block size and priority fees that are entirely opaque to users and sophisticated actors.</p>\n<h2><a name=\"real-world-example-5\" class=\"anchor\" href=\"https://ethresear.ch#real-world-example-5\"></a>Real-world example</h2>\n<p>JetBuilder built <a href=\"https://etherscan.io/block/19598122\" rel=\"noopener nofollow ugc\">https://etherscan.io/block/19598122</a> and only used 12% of the block space available, paying ~0.15 eth for the block. We observed them missing at least 40 transactions that could have been included in that block. The example transactions were in the mempool for at least five blocks (thanks to <a href=\"https://www.ethernow.xyz\" rel=\"noopener nofollow ugc\">https://www.ethernow.xyz</a>). They all landed on-chain in either the next block or the one after.</p>\n<p><a class=\"attachment\" href=\"https://ethresear.ch/uploads/short-url/m28oil5kIiAPgjrYROY42OBPcYX.txt\">block_19598122_missed.txt</a> (4.2 KB)</p>\n<h1><a name=\"proposal-6\" class=\"anchor\" href=\"https://ethresear.ch#proposal-6\"></a>Proposal</h1>\n<p>We should have some floor usage in gas terms to prevent transactions from bullying other transactions out of a block.</p>\n<p>The gas floor target could be calculated in many ways, such as a predefined fixed target, half the gas limit, or a dynamic adjustment based on previous consumption (similar to 1559). It doesn’t need to be elegant or exact; it just needs to be something to incentivise block builders to utilise block space.</p>\n<p>The penalty for not ‘filling’ the block would be something like <code>gas target missed * base fee</code>. This is the same price as putting a transaction in the block, except the block builder doesn’t get priority fees. Theoretically, a block builder could make a transaction with themselves, but the result is the same.</p>\n<p>We are simply putting a price on what the network perceives as the underutilisation of block space.</p>\n            <p><small>10 posts - 3 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/reducing-latency-games-by-levelling-the-playing-field-on-block-size-for-pbs/19356\">Read full topic</a></p>","link":"https://ethresear.ch/t/reducing-latency-games-by-levelling-the-playing-field-on-block-size-for-pbs/19356","pubDate":"Tue, 23 Apr 2024 11:00:30 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19356"},"source":{"@url":"https://ethresear.ch/t/reducing-latency-games-by-levelling-the-playing-field-on-block-size-for-pbs/19356.rss","#text":"Reducing latency games by levelling the playing field on block size for PBS"},"filter":false},{"title":"A concrete proposal for correlated attester penalties","dc:creator":"vbuterin","category":"Economics","description":"<p>See previous work: <a href=\"https://ethresear.ch/t/analysis-on-correlated-attestation-penalties/19244\" class=\"inline-onebox\">Analysis on ''Correlated Attestation Penalties''</a> and <a href=\"https://ethresear.ch/t/supporting-decentralized-staking-through-more-anti-correlation-incentives/19116\" class=\"inline-onebox\">Supporting decentralized staking through more anti-correlation incentives</a></p>\n<p>This post introduces a concrete proposal for how correlated penalties could be done, in a way that maximizes (i) simplicity, and (ii) consistency with valuable invariants that exist today.</p>\n<h3><a name=\"goals-1\" class=\"anchor\" href=\"https://ethresear.ch#goals-1\"></a>Goals</h3>\n<ol>\n<li>Replicate the spirit of the basic design proposed <a href=\"https://ethresear.ch/t/supporting-decentralized-staking-through-more-anti-correlation-incentives/19116\">here</a>.</li>\n<li>Maximum simplicity (the same type of simplicity as we can see in eg. the <a href=\"https://notes.ethereum.org/@vbuterin/proto_danksharding_faq#How-does-the-exponential-EIP-1559-blob-fee-adjustment-mechanism-work\">EIP-4844 blob gas market design</a>)</li>\n<li>Same average validator revenue as today, at all levels of “percent attesting correctly”. This should hold as a hard invariant, even against attackers with a large percent of stake trying to break it</li>\n<li>Same penalty as today from failing to make one attestation, on average</li>\n<li>Validators should only be rewarded for sending an attestation, never passively</li>\n</ol>\n<h3><a name=\"mechanism-2\" class=\"anchor\" href=\"https://ethresear.ch#mechanism-2\"></a>Mechanism</h3>\n<ul>\n<li>We set two constants: <code>PENALTY_ADJUSTMENT_FACTOR = 2**12</code>, <code>MAX_PENALTY_FACTOR = 4</code></li>\n<li>We add a counter to the state, <code>NET_EXCESS_PENALTIES</code></li>\n<li>During a slot, let <code>non_attesting_balance</code> be the total balance that is <em>not</em> correctly attesting in that slot</li>\n<li>Let: <code>penalty_factor = min((non_attesting_balance * PENALTY_ADJUSTMENT_FACTOR) //  (NET_EXCESS_PENALTIES * total_active_balance + 1), MAX_PENALTY_FACTOR)</code></li>\n<li>Let <code>R</code> be the current reward for attesting correctly (computed based on <code>base_reward</code> and adjusted based on the fraction allocated to the job in question). This stays the same.</li>\n<li>If a validator <em>fails</em> to attest correctly, they get penalized <code>penalty_factor * R</code> (as opposed to <code>R</code> as today)</li>\n<li>At the end of a slot, set: <code>NET_EXCESS_PENALTIES = max(1, NET_EXCESS_PENALTIES + penalty_factor) - 1</code></li>\n</ul>\n<h3><a name=\"rationale-3\" class=\"anchor\" href=\"https://ethresear.ch#rationale-3\"></a>Rationale</h3>\n<p>It should be easy to see that <code>NET_EXCESS_PENALTIES</code> tracks <code>sum(penalty_factor[slot] for slot in slots) - len(slots)</code>. Hence, if <code>penalty_factor</code> on average exceeds 1 for a sustained period of time, <code>NET_EXCESS_PENALTIES</code> will keep rising until that’s no longer the case. <code>NET_EXCESS_PENALTIES</code> is part of the denominator in the calculation of <code>penalty_factor</code>, and so <code>NET_EXCESS_PENALTIES</code> rising will push the average <code>penalty_factor</code> values down until the average is below 1 (and likewise in reverse, if it decreases).</p>\n<p><code>penalty_factor</code> is proportional to the total <code>non_attesting_balance</code> of the current slot, and so for it to average 1, it must roughly equal the <code>non_attesting_balance</code> of the current slot divided by the long term average - exactly the design proposed <a href=\"https://ethresear.ch/t/supporting-decentralized-staking-through-more-anti-correlation-incentives/19116\">here</a>.</p>\n<p>Because <code>penalty_factor</code> averages 1, average non-participation penalties are equal to <code>R</code>, as today. And so average rewards for a validator are the same as today, for any correct attestation rate, assuming that their incorrect attestations are uncorrelated with those of other validators.</p>\n<p><code>PENALTY_ADJUSTMENT_FACTOR</code> affects how quickly penalties can adjust.</p>\n<h3><a name=\"possible-extensions-4\" class=\"anchor\" href=\"https://ethresear.ch#possible-extensions-4\"></a>Possible extensions</h3>\n<ul>\n<li>Make <code>penalty_factor</code> more “continuous”, eg. by putting the <code>base_reward</code> into the numerator that computes the <code>penalty_factor</code> (and into the maximum, and into the per-slot decrement) and then using it to compute penalties directly.</li>\n<li>Explore smarter ways to apply this mechanism across multiple jobs (correct head attestation, target attestation…). The naive approach is to just apply it sequentially for each job, but there may be a smarter approach.</li>\n</ul>\n            <p><small>5 posts - 5 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/a-concrete-proposal-for-correlated-attester-penalties/19341\">Read full topic</a></p>","link":"https://ethresear.ch/t/a-concrete-proposal-for-correlated-attester-penalties/19341","pubDate":"Fri, 19 Apr 2024 13:25:51 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19341"},"source":{"@url":"https://ethresear.ch/t/a-concrete-proposal-for-correlated-attester-penalties/19341.rss","#text":"A concrete proposal for correlated attester penalties"},"filter":false},{"title":"Backward-Compatible Post-Quantum Migration","dc:creator":"tanteikg","category":"Cryptography","description":"<p>Continuing the discussion from <a href=\"https://ethresear.ch/t/how-to-hard-fork-to-save-most-users-funds-in-a-quantum-emergency/18901/23\">How to hard-fork to save most users' funds in a quantum emergency</a>:</p>\n<p>We are excited to share a <a href=\"https://github.com/pqcee/EIPs/blob/67d445496f8f40d4b515146946de3bef37fbe716/EIPS/eip-7693.md\" rel=\"noopener nofollow ugc\">draft of an EIP</a> that we have been working on. The proposal aims to present a solution for integrating a post-quantum signature scheme into the Ethereum blockchain while maintaining backward compatibility with existing ECDSA. The PQC signature scheme, targets integration with a quantum-safe zero-knowledge proof system such as zkSTARK or MPC-in-the-Head, to ensure the long-term security of Ethereum transactions against quantum attacks without requiring immediate upgrades to existing infrastructure. Looking forward to your thoughts on the proposal</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/backward-compatible-post-quantum-migration/19340\">Read full topic</a></p>","link":"https://ethresear.ch/t/backward-compatible-post-quantum-migration/19340","pubDate":"Fri, 19 Apr 2024 12:51:57 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19340"},"source":{"@url":"https://ethresear.ch/t/backward-compatible-post-quantum-migration/19340.rss","#text":"Backward-Compatible Post-Quantum Migration"},"filter":false},{"title":"Portal Network & Verkle","dc:creator":"morph-dev","category":"Data Structure","description":"<h1><a name=\"portal-network-verkle-1\" class=\"anchor\" href=\"https://ethresear.ch#portal-network-verkle-1\"></a>Portal Network &amp; Verkle</h1>\n<h2><a name=\"summary-2\" class=\"anchor\" href=\"https://ethresear.ch#summary-2\"></a>Summary</h2>\n<p>The goal of this research is to describe how Verkle trie (see <a href=\"https://eips.ethereum.org/EIPS/eip-6800\" rel=\"noopener nofollow ugc\">EIP-6800</a>) can be efficiently stored in a Portal Network.</p>\n<p>Firstly, I will give quick overview of what Portal Network and Verkle Tries are and how they work, with the focus on parts that are most relevant to this research. Afterwards, I will specify my proposed solution.</p>\n<h2><a name=\"portal-network-overview-3\" class=\"anchor\" href=\"https://ethresear.ch#portal-network-overview-3\"></a>Portal Network overview</h2>\n<p>Portal Network (<a href=\"https://www.ethportal.net/\" rel=\"noopener nofollow ugc\">https://www.ethportal.net/</a>) can be explained as decentralized Ethereum archive node. It’s designed as a peer-to-peer network, where each node holds only small portion of data, while the entire Portal Network stores entire historical Ethereum data. Each Portal Network node decides which content to store locally based on the distance between its <code>Node-Id</code> and <code>Content-Id</code>.</p>\n<p>The Portal Network is actually several peer-to-peer networks (beacon, history and state). Each of these networks stores a specific subset of the data stored by an Ethereum full node. The focus of this research is the state network, whose specification for the Merkle Patricia Trie (MPT) can be found here: <a href=\"https://github.com/ethereum/portal-network-specs/blob/master/state-network.md\" rel=\"noopener nofollow ugc\">link</a>.</p>\n<p>In short, Portal Network stores every trie node and smart contract bytecode from Ethereum state that ever existed. Each entry (trie node/bytecode) is represented with an unique <code>Content-Key</code>. The hash of the <code>Content-Key</code> is 32-byte long <code>Content-Id</code>.</p>\n<p>In the case of the MPT, there are 3 types of content:</p>\n<ul>\n<li>Account Trie Node - the trie node of the main state trie\n<ul>\n<li>It is uniquely identified by the path from the root of the trie and the hash of the trie node</li>\n<li>The value is the rlp encoding of the trie node itself</li>\n</ul>\n</li>\n<li>Contract’s Storage Trie Node - the trie node that belongs to the smart contract’s storage trie\n<ul>\n<li>It is uniquely identified by the address of the smart contract, path from the root of the storage trie, and the hash of the trie node</li>\n<li>Same as above, value is the rlp encoding of the trie node itself</li>\n</ul>\n</li>\n<li>Contract bytecode - the bytecode of the smart contract\n<ul>\n<li>It is uniquely identified by the address of the smart contract and the hash of the bytecode</li>\n<li>The value is the bytecode itself</li>\n</ul>\n</li>\n</ul>\n<p>In order to prevent bad actors from polluting the network with invalid data, the gossiped content contains the Merkle proof, so receiver can verify that the content is canonical to the Ethereum chain. This proof is not stored locally in order to improve performance.</p>\n<h2><a name=\"verkle-trie-overview-4\" class=\"anchor\" href=\"https://ethresear.ch#verkle-trie-overview-4\"></a>Verkle Trie overview</h2>\n<p>The Verkle Trie is the new structure for storing Ethereum state. Current plan is for Ethereum to switch from Merkle Patricia Trie to Verkle Trie two forks from now (sometime in 2025).</p>\n<p>The details of why Ethereum wants to switch to the Verkle trie, and how Verkle trie works can be found in the <a href=\"https://eips.ethereum.org/EIPS/eip-6800\" rel=\"noopener nofollow ugc\">EIP-6800</a>. However, we are going to provide overview of its properties that are relevant for this research.</p>\n<h3><a name=\"pedersen-commitment-5\" class=\"anchor\" href=\"https://ethresear.ch#pedersen-commitment-5\"></a>Pedersen commitment</h3>\n<p>Each trie node is uniquely represented with a Pedersen commitment, which are based on Elliptic curves. The curve that is used is Banderwagon (the variation of the <a href=\"https://ethresear.ch/t/introducing-bandersnatch-a-fast-elliptic-curve-built-over-the-bls12-381-scalar-field/9957\">Bandersnatch curve</a>).</p>\n<p>The Pederson commitment is calculated using following formula:</p>\n<div class=\"math\">\nC = a_0 B_0 + a_1 B_1 + ... + a_{255} B_{255} = Commit(a_0, a_1, ... , a_{255})\n</div>\n<p>where <span class=\"math\">B_i</span> (basis) are already known, fixed points on the elliptic curve and <span class=\"math\">a_i</span> are values we are being committed to. The values <span class=\"math\">a_i</span> have to be from the scalar field of the elliptic curve, which in our case has less than <span class=\"math\">2^{253}</span> elements.</p>\n<p>The Pedersen commitment itself is a point on the elliptic curve. The Pedersen hash is a value in a scalar field derived from the Pederson commitment.</p>\n<h3><a name=\"structure-overview-6\" class=\"anchor\" href=\"https://ethresear.ch#structure-overview-6\"></a>Structure overview</h3>\n<p>Verkle Trie is a trie structure with a branching factor of 256, and is used for storing key-value pairs where both key and value are arrays of 32-bytes.</p>\n<p>Verkle trie has 2 types of nodes:</p>\n<ul>\n<li>Inner node - contains up to 256 Pedersen hashes, representing the 256 children nodes</li>\n<li>Extension node - contains the path from the root of the trie (31-byte long, called stem) and up to 256 values (for each value of the last byte, suffix)\n<ul>\n<li>Each value is 32-byte long array</li>\n</ul>\n</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/a/7a12397bf7f94f89c116dc88c4ccfb5d07e0c52c.png\" data-download-href=\"https://ethresear.ch/uploads/default/7a12397bf7f94f89c116dc88c4ccfb5d07e0c52c\" title=\"image - Verle trie\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/a/7a12397bf7f94f89c116dc88c4ccfb5d07e0c52c_2_690x341.png\" alt=\"image - Verle trie\" data-base62-sha1=\"hpTiqQWhSKE2abSjgX7TUU8qjnu\" width=\"690\" height=\"341\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/a/7a12397bf7f94f89c116dc88c4ccfb5d07e0c52c_2_690x341.png, https://ethresear.ch/uploads/default/original/3X/7/a/7a12397bf7f94f89c116dc88c4ccfb5d07e0c52c.png 1.5x, https://ethresear.ch/uploads/default/original/3X/7/a/7a12397bf7f94f89c116dc88c4ccfb5d07e0c52c.png 2x\" data-dominant-color=\"F3F5F4\"></a></div><p></p>\n<p><em>Representation of a walk through a Verkle tree for the key <code>0xfe0002abcd..ff04</code>: the path goes through 3 internal nodes (children: 254, 0, 2) and an extension node. Image taken from <a href=\"https://blog.ethereum.org/2021/12/02/verkle-tree-structure\" rel=\"noopener nofollow ugc\">here</a>.</em></p>\n<h4><a name=\"extension-node-structure-7\" class=\"anchor\" href=\"https://ethresear.ch#extension-node-structure-7\"></a>Extension node structure</h4>\n<p>Value that is stored in a trie is 32-bytes, which can’t be uniquely mapped to the elliptic curve scalar field (less then <span class=\"math\">2^{253}</span> elements). To circumvent this problem, the 256 values of the Extension node are split into two groups of 128 each, and each value is split into two 16-bytes values: <span class=\"math\">v_i = v_i^{low} + v_i^{high}</span>.</p>\n<p>Also, in order to distinguish absent from zero values, when <span class=\"math\">v_i</span> is accessed, the marker is set on the 129th bit of the <span class=\"math\">v_i^{low}</span>, resulting in: <span class=\"math\">v_i^{low+access} = v_i^{low} + 2^{128}</span></p>\n<p>Two commitments of each group of 128 values is calculated separately (<span class=\"math\">C_1</span> and <span class=\"math\">C_2</span>):</p>\n<div class=\"math\">\n\\begin{align*}\nC_1 &amp;= Commit(v_0^{low+access}, v_0^{high}, v_1^{low+access}, v_1^{high},  ... , v_{127}^{low+access}, v_{127}^{high}) \\\\\nC_2 &amp;= Commit(v_{128}^{low+access}, v_{128}^{high}, v_{129}^{low+access}, v_{129}^{high},  ... , v_{255}^{low+access}, v_{255}^{high})\n\\end{align*}\n</div>\n<p>They are then combined with the stem to calculate commitment of the entire Extension node:</p>\n<div class=\"math\">\nC = Commit(1, stem, C_1, C_2)\n</div>\n<h3><a name=\"other-important-details-8\" class=\"anchor\" href=\"https://ethresear.ch#other-important-details-8\"></a>Other important details</h3>\n<p>There are many more details regarding Verkle trie, but only important ones for the rest of this research are given below:</p>\n<ul>\n<li>Unlike MPT, smart contract’s bytecode and storage values are stored within the same trie\n<ul>\n<li>contract’s storage slots are mapped to 32 bytes, which are used as a key of the Verkle Trie</li>\n<li>bytecode is split into chunks of 31 bytes</li>\n</ul>\n</li>\n<li>Values that are likely to be accessed together (e.g. balance and nonce, consecutive contract’s storage slots, bytecode chunks) are likely going to end up in the same Extension node</li>\n<li>It’s possible to update node’s commitment if we know previous commitment, which children changed, and previous and new commitment of those children\n<ul>\n<li>Most EL clients use this and only store commitments of the Inner nodes (not inner nodes themselves)</li>\n<li>Same approach doesn’t work well for archive nodes</li>\n</ul>\n</li>\n</ul>\n<h2><a name=\"portal-network-verkle-trie-9\" class=\"anchor\" href=\"https://ethresear.ch#portal-network-verkle-trie-9\"></a>Portal Network &amp; Verkle Trie</h2>\n<p>The simplest approach would be do the same for Verkle Trie as we are doing in the case of Merkle Patricia Trie: <em>store every trie node</em>. However, this leads to much higher storage requirement for the Portal Network.</p>\n<p>When block is executed, updated trie nodes (except the root and the first layer nodes) would have only few children values updated while majority would stay the same. If we do naive approach (store every trie node as it is), Portal Network as a whole would need significantly more storage. This issue is significantly more impactful with Verkle trie in comparison with MPT because of the bigger branching factor (256 vs. 16).</p>\n<p>However, we can do this in a smarter way. Let’s consider Inner node <span class=\"math\">C</span> with children <span class=\"math\">C_0, C_1, ... ,C_{255}</span>. Instead of storing it as a single node, we can split it into 2-layer trie:</p>\n<div class=\"math\">\n\\begin{alignat*}{3}\nC &amp;=&amp; C'_0 + C'_1 &amp;+…+ C'_{15} \\\\\nC'_0 &amp;=&amp; C_0B_0 + C_1B_1 &amp;+…+ C_{15}B_{15} &amp;&amp;= Commit(C_0,…,C_{15}, 0,…,0) \\\\\nC'_1 &amp;=&amp; C_{16}B_{16} + C_{17}B_{17} &amp;+…+ C_{31}B_{31} &amp;&amp;= Commit(0,…,0, C_{16},…,C_{31}, 0,…,0) \\\\\n&amp;&amp;&amp;\\quad… \\\\\nC'_{15} &amp;=&amp; C_{240}B_{240} + C_{241}B_{241} &amp;+…+ C_{255}B_{255} &amp;&amp;= Commit(0,…,0, C_{240},…,C_{255}) \\\\\n\\end{alignat*}\n</div>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/e/9ec60b31ab7d4af8127fe23d8f077b2ab9430f6c.png\" data-download-href=\"https://ethresear.ch/uploads/default/9ec60b31ab7d4af8127fe23d8f077b2ab9430f6c\" title=\"image - Inner node split\"><img src=\"https://ethresear.ch/uploads/default/original/3X/9/e/9ec60b31ab7d4af8127fe23d8f077b2ab9430f6c.png\" alt=\"image - Inner node split\" data-base62-sha1=\"mEzKjGWf18V3ad8ofvLYV2Xc0JS\" width=\"690\" height=\"257\" data-dominant-color=\"B8C9D8\"></a></div><p></p>\n<p>This would result in the root node of such trie having the same commitment as it would have otherwise. But this way, we would have a trie with a branching factor of 16. Similar approach can be applied to the Extension node as well.</p>\n<p>It’s also worth noting that this splitting can be done again (leading to 4-layer trie with branching factor of 4), or even multiple times (8-layer binary trie), or even in alternative way (3-layer trie with branching factors <span class=\"math\">[4,8,8]</span>). Deeper tries would probably require less total storage, but they would make lookup queries more expensive.</p>\n<h3><a name=\"other-considered-solutions-10\" class=\"anchor\" href=\"https://ethresear.ch#other-considered-solutions-10\"></a>Other considered solutions</h3>\n<h4><a name=\"path-based-content-id-11\" class=\"anchor\" href=\"https://ethresear.ch#path-based-content-id-11\"></a>Path based <code>Content-Id</code></h4>\n<p>Another alternative solution that seems plausible is to make <code>Content-Key</code> and/or <code>Content-Id</code> dependent only on the path from the root, not the trie commitment itself.</p>\n<p>Benefits of this approach would be that the same Portal Network node can optimize its storage in order not to duplicate values that don’t change over time (e.g. by storing only diffs).</p>\n<p>However, this approach has a main downside, which is that content space is not uniformly distributed. The trie nodes associated with frequently used smart contracts (e.g. WETH, DEX pools, Layer-2, Oracles, …) will have significantly more updates than the average trie node. This non-uniformity breaks linear relationship between node’s radius and the amount of data that it needs to store, which is the major assumption about Portal Network design.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/portal-network-verkle/19339\">Read full topic</a></p>","link":"https://ethresear.ch/t/portal-network-verkle/19339","pubDate":"Fri, 19 Apr 2024 12:46:04 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19339"},"source":{"@url":"https://ethresear.ch/t/portal-network-verkle/19339.rss","#text":"Portal Network & Verkle"},"filter":false},{"title":"Lumoz supports Op Stack + ZK Fraud Proof, Initiating a New Paradigm in L2 Architecture","dc:creator":"nanfengpo","category":"Layer 2","description":"<p>After completing a total of tens of millions of dollars in financing, the modular computing layer Lumoz continues to make strides in the Layer 2 (L2) space. This week, Lumoz announced that its Modular Compute Layer will support the Op Stack + ZK Fraud Proof Layer 2 architecture, initiating a new paradigm in L2 architecture.</p>\n<p><strong>The Modular Compute Layer will Support Op Stack + ZK Fraud Proof</strong></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/0/b0b5f7ce38af9467e9977533e24818eda89ca787.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/b0b5f7ce38af9467e9977533e24818eda89ca787\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/0/b0b5f7ce38af9467e9977533e24818eda89ca787_2_690x293.jpeg\" alt=\"\" data-base62-sha1=\"pdfTLn5HRkY3jVi2766uynNzzXp\" width=\"690\" height=\"293\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/0/b0b5f7ce38af9467e9977533e24818eda89ca787_2_690x293.jpeg, https://ethresear.ch/uploads/default/optimized/3X/b/0/b0b5f7ce38af9467e9977533e24818eda89ca787_2_1035x439.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/0/b0b5f7ce38af9467e9977533e24818eda89ca787_2_1380x586.jpeg 2x\" data-dominant-color=\"F6F7F8\"></a></div><p></p>\n<p>The Op Stack + ZK Fraud Proof architecture is a new design that integrates zero-knowledge proof-based validity proofs into the Optimistic Rollup technology. When challengers point out that the sequencer has submitted incorrect data, they submit a challenge to L1. The Sequencer must generate the corresponding ZK Proof within a limited challenge period and submit it to the Layer 1 contract for verification. If the verification results show that the data is valid, the challenge is invalid; otherwise, the challenge is successful.</p>\n<p>This illustration demonstrates the specific process of handling fraud proofs within Layer 2 technology under the Op Stack and ZK Fraud Proof architecture. In this architecture, the Op Stack module undertakes the core functions of Layer 2, including handling the basic functions of the Layer 2 blockchain and the responsibility of submitting Batches to Layer 1. Meanwhile, the ZK Fraud Proof module focuses on handling the challenges of fraud proof.</p>\n<p>The process details are as follows:</p>\n<ol>\n<li><strong>Challenge Initiation:</strong> Validators initiate the challenge for fraud proof.</li>\n<li><strong>Information Synchronization:</strong> Lumoz Verify Nodes synchronize challenge information to prepare for the next step of verification.</li>\n<li><strong>Obtaining Zero-Knowledge Proof Inputs:</strong> Verification nodes obtain the required zero-knowledge proof input data from the Op Stack module, which includes block trace, batch info, etc.</li>\n<li><strong>Generating Zero-Knowledge Proof:</strong> Lumoz will then request the modular compute layer to generate the required zero-knowledge proof.</li>\n<li><strong>Proof Submission:</strong> Once the zero-knowledge proof is generated, Lumoz Verify Nodes submit the proof to Layer 1 for verification.</li>\n</ol>\n<p>Through the aforementioned process, the challenge and verification process of ZK Fraud Proof is completed.</p>\n<p>It is well known that Optimistic Rollup has lower costs but longer withdrawal waiting times; whereas ZK Rollup allows for almost immediate withdrawals, but at a higher cost. This solution combines the advantages and disadvantages of both Optimistic Rollup and ZK Rollup, not only maintaining the characteristics of low cost but also effectively reducing the waiting time.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/e/6e3ba0242b7c25f4ab218f3dbdb445df38df2a96.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/6e3ba0242b7c25f4ab218f3dbdb445df38df2a96\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/e/6e3ba0242b7c25f4ab218f3dbdb445df38df2a96_2_616x500.jpeg\" alt=\"\" data-base62-sha1=\"fJagFFDwzTuIrUH53kiwcGxthuC\" width=\"616\" height=\"500\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/e/6e3ba0242b7c25f4ab218f3dbdb445df38df2a96_2_616x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/6/e/6e3ba0242b7c25f4ab218f3dbdb445df38df2a96_2_924x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/6/e/6e3ba0242b7c25f4ab218f3dbdb445df38df2a96_2_1232x1000.jpeg 2x\" data-dominant-color=\"F2F3F6\"></a></div><p></p>\n<p><strong>Modular Compute Layer</strong></p>\n<p>Lumoz provides a modular computation layer that offers stable and reliable computing power support for blockchains utilizing the Op Stack + ZK Fraud Proof architecture. When Layer 2 submits Batch data, if there are challengers initiating challenges, then the modular computation layer will rely on its computing services to generate the corresponding proof data (Proof). This process requires the computing services of the modular computation layer to submit the correct Proof within a specified time frame. If this is achieved, it is considered that the challenger has failed the challenge; otherwise, the challenger is deemed to have succeeded in the challenge.</p>\n<p>The role of Lumoz’s modular computation layer in the Op Stack + ZK Fraud Proof architecture:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/7/37e5580daf5e81c98795809ea463ab41c25f1787.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/37e5580daf5e81c98795809ea463ab41c25f1787\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/7/37e5580daf5e81c98795809ea463ab41c25f1787_2_419x500.jpeg\" alt=\"\" data-base62-sha1=\"7YtCWbAwSXB6UvoDwTcbT6ESbFt\" width=\"419\" height=\"500\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/7/37e5580daf5e81c98795809ea463ab41c25f1787_2_419x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/3/7/37e5580daf5e81c98795809ea463ab41c25f1787_2_628x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/3/7/37e5580daf5e81c98795809ea463ab41c25f1787_2_838x1000.jpeg 2x\" data-dominant-color=\"F6F7EF\"></a></div><p></p>\n<p>In conclusion, the Lumoz ZK Prover Network, through decentralized miner participation in ZKP computations, extensive circuit support, and a comprehensive proof verification process, provides a high-performance modular computation layer for the Optimistic+ZK Fraud Proof architecture. Combined with Lumoz’s trustless native cross-Rollup communication technology, it not only securely shares liquidity among all Rollups but also offers robust multi-Rollup interoperability, opening new possibilities for decentralized applications and DeFi protocols.</p>\n<p><strong>Conclusion</strong></p>\n<p>Lumoz’s Modular Compute Layer, supported by Optimistic Rollup and ZK Fraud Proof, has pioneered a new Layer 2 architecture model. This solution fills the gap in the current market for a mixed solution of ZK and OP, achieving effective technical integration. By combining the advantages of Optimistic Rollup and ZK Rollup, we can significantly reduce costs and shorten verification wait times. As pioneers in this field, Lumoz will continue to leverage its strengths and constantly optimize its technology solutions. At the same time, we also hope more people will pay attention to and contribute to the development of this hybrid architecture of Optimistic Rollup and ZK Fraud Proof, contributing to the industry’s development!</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/lumoz-supports-op-stack-zk-fraud-proof-initiating-a-new-paradigm-in-l2-architecture/19330\">Read full topic</a></p>","link":"https://ethresear.ch/t/lumoz-supports-op-stack-zk-fraud-proof-initiating-a-new-paradigm-in-l2-architecture/19330","pubDate":"Thu, 18 Apr 2024 09:27:07 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19330"},"source":{"@url":"https://ethresear.ch/t/lumoz-supports-op-stack-zk-fraud-proof-initiating-a-new-paradigm-in-l2-architecture/19330.rss","#text":"Lumoz supports Op Stack + ZK Fraud Proof, Initiating a New Paradigm in L2 Architecture"},"filter":false},{"title":"Mining attacks on PoRA (Proof of Random Access)","dc:creator":"snjax","category":"Layer 2","description":"<h2><a name=\"abstract-1\" class=\"anchor\" href=\"https://ethresear.ch#abstract-1\"></a>Abstract</h2>\n<p>This article analyzes the security of <a href=\"https://file.w3q.w3q-g.w3link.io/0x67d0481cc9c2e9dad2987e58a365aae977dcb8da/dynamic_data_sharding_0_1_6.pdf\" rel=\"noopener nofollow ugc\">Proof of Random Access (PoRA)</a> consensus mechanism against potential mining attacks. The focus is on two main attack vectors: the shrink attack, where an attacker uses cheaper or smaller storage devices with the same throughput to gain an economic advantage, and the Moore attack, where an attacker leverages advancements in technology to increase throughput while maintaining the same cost. The article examines these attacks under both unlimited and limited mining throughput scenarios and provides mathematical analysis to determine the conditions under which the attacks could be economically viable for miners.</p>\n<h2><a name=\"security-model-2\" class=\"anchor\" href=\"https://ethresear.ch#security-model-2\"></a>Security model</h2>\n<p>In our security model, we consider an attacker who aims to optimize their mining procedure to gain an economic advantage over honest miners. The attacker can employ various strategies to achieve this goal:</p>\n<ol>\n<li>\n<p>Equipment replacement: The attacker may replace their storage equipment with more efficient or cost-effective alternatives. This strategy allows the attacker to maintain or increase their mining performance while reducing costs.</p>\n</li>\n<li>\n<p>Partial fraction mining: The attacker can utilize a portion of their storage space and throughput for one client while using the remaining resources for another client. This allows the attacker to optimize their resource allocation and potentially gain an advantage by serving multiple clients simultaneously.</p>\n</li>\n</ol>\n<p>We will analyze two specific attack vectors:</p>\n<ol>\n<li>\n<p>Shrink attack: In this attack, the attacker replaces their storage device with a cheaper one that offers the same performance. For example, an attacker might replace a more expensive 1TiB NVMe drive with a cheaper 1TB drive that has the same throughput. This allows the attacker to reduce their storage costs while maintaining their mining performance. The key idea behind the shrink attack is that the attacker can take advantage of the fact that the consensus mechanism may not distinguish between storage devices of different sizes as long as they offer the same throughput.</p>\n</li>\n<li>\n<p>Moore attack: This attack involves the attacker replacing their storage equipment with a newer, more advanced version that offers better performance at the same cost. For example, an attacker might replace a gen 4 storage device with a gen 5 device that has twice the throughput at the same cost. This allows the attacker to increase their mining performance without incurring additional expenses.</p>\n</li>\n</ol>\n<p>It is important to note that the Proof of Random Access (PoRA) consensus mechanism is well-scalable, meaning that there is no single machine limitation. This scalability allows for the possibility of using RAM rigs on tiny devices, such as single-board computers or even smartphones, to participate in the mining process. The absence of a single machine limitation opens up new opportunities for attackers to optimize their mining setups and potentially gain an advantage over honest miners.</p>\n<p>Furthermore, the ability to perform partial fraction mining, where an attacker can allocate a portion of their storage space and throughput to one client while using the remaining resources for another client, adds another layer of complexity to the security model. This flexibility in resource allocation allows attackers to optimize their mining strategies and potentially gain an edge by serving multiple clients simultaneously.</p>\n<p>Throughout the following sections, we will examine these attack vectors in detail, considering both unlimited and limited mining throughput scenarios. Our analysis will focus on determining the conditions under which these attacks could be economically viable for miners, and we will provide mathematical derivations to support our findings</p>\n<h2><a name=\"shrink-attack-3\" class=\"anchor\" href=\"https://ethresear.ch#shrink-attack-3\"></a>Shrink attack</h2>\n<p>In the following sections, we consider three different attacks. The first attack assumes that the mining throughput is not limited and shows how in this case the adversary can gain advantage over honest miners by using a different hardware configuration. In the follwing two attacks, we assume that the mining throughput was limited to mitigate the first attack, but we show that new issues arise: adversary can be economically incentivised to drop some part of the stored file, and perform Moore attack using more efficient hardware than that of honest miners.</p>\n<p>In our costs analyses we make a few reasonable assumptions about the relationship between the costs and make conservative estimates of adversary advantage.</p>\n<h3><a name=\"unlimited-throughput-achieving-advantage-over-honest-miners-4\" class=\"anchor\" href=\"https://ethresear.ch#unlimited-throughput-achieving-advantage-over-honest-miners-4\"></a>Unlimited throughput: achieving advantage over honest miners</h3>\n<p>In this scenario, we consider the case where an attacker reduces the size of their memory module to gain an economic advantage. We make a pessimistic assumption that if the memory size is reduced by half, the maintenance cost (energy consumption) and throughput will remain the same, while the cost will be reduced by half. In reality, the energy consumption would likely be lower, but this assumption can only make our analysis more conservative.</p>\n<p>To compare the cost efficiency of the attacker and the reference miner, we normalize the values by the cost and present them in the following table:</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Cost</th>\n<th>Maintenance</th>\n<th>Throughput</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>reference</td>\n<td>1</td>\n<td><span class=\"math\">A</span></td>\n<td>1</td>\n</tr>\n<tr>\n<td>attacker</td>\n<td>1</td>\n<td><span class=\"math\">\\chi A</span></td>\n<td><span class=\"math\">\\chi</span></td>\n</tr>\n</tbody>\n</table>\n</div><ul>\n<li>\n<p>The reference miner’s cost of purchasing one unit of hardware is set to 1 as a baseline; this is without loss of generality as we normalize other values with respect to this, eliminating a free variable.</p>\n</li>\n<li>\n<p><span class=\"math\">A \\sim 1</span> represents the maintenance cost (energy consumption) per time unit for the reference miner, which is assumed to be close to 1 for simplicity.</p>\n</li>\n<li>\n<p>The reference miner’s throughput is also normalized to 1.</p>\n</li>\n<li>\n<p>The attacker’s cost is set to 1, assuming that one unit of attacker’s hardware has the same cost as that of a reference miner. This is a conservative estimate, since one unit of attacker’s hardware is assumed to be less efficient than that of a reference miner.</p>\n</li>\n<li>\n<p>The attacker’s maintenance cost is <span class=\"math\">\\chi A</span>, where <span class=\"math\">\\chi &gt; 1</span> represents the throughput advantage of the attacker. This is because the attacker’s memory size is smaller, but the energy consumption per unit of memory remains the same.</p>\n</li>\n<li>\n<p>The attacker’s throughput is <span class=\"math\">\\chi</span>, reflecting their advantage in terms of throughput per unit cost.</p>\n</li>\n</ul>\n<p>To compare the total cost efficiency, we calculate the throughput per unit of total cost (cost + maintenance) for both the reference miner and the attacker:</p>\n<p>Reference miner: <span class=\"math\">\\frac{1}{1+A}</span></p>\n<p>Attacker: <span class=\"math\">\\frac{\\chi}{1+\\chi A} = \\frac{1}{1/\\chi+A}</span></p>\n<p>Since <span class=\"math\">\\chi &gt; 1</span> when the attacker reduces the memory size, we can conclude that:</p>\n<p><span class=\"math\">\\frac{1}{1+A} &lt; \\frac{\\chi}{1+\\chi A} = \\frac{1}{1/\\chi+A}</span></p>\n<p>This inequality demonstrates that the attacker has a better total cost efficiency compared to the reference miner.</p>\n<p>Therefore, the original PoRA is not resistant to shrink attacks under unlimited mining throughput conditions. The only way to protect against this vulnerability is to limit the mining rewards, which would discourage attackers from exploiting this weakness.</p>\n<h3><a name=\"limited-throughput-not-storing-part-of-the-file-5\" class=\"anchor\" href=\"https://ethresear.ch#limited-throughput-not-storing-part-of-the-file-5\"></a>Limited throughput: not storing part of the file</h3>\n<p>In this scenario, we consider the case where the mining throughput is limited to an optimal value of 1, and we analyze the cost efficiency for an attacker who uses only a fraction <span class=\"math\">p</span> of their memory.</p>\n<p>Let’s define the following variables:</p>\n<ul>\n<li>\n<p><span class=\"math\">n</span>: the number of random accesses</p>\n</li>\n<li>\n<p><span class=\"math\">q = 1 - p \\ll 1</span>, assuming <span class=\"math\">qn \\lesssim 1</span></p>\n</li>\n<li>\n<p><span class=\"math\">n_e</span>: the efficient average number of accesses, given by <span class=\"math\">n_e = (1-p^n)/(1-p) \\approx (1 - \\exp(-qn)) / q</span></p>\n</li>\n<li>\n<p><span class=\"math\">p_s</span>: the success probability, given by <span class=\"math\">p_s = p^n \\approx \\exp(-qn)</span></p>\n</li>\n<li>\n<p><span class=\"math\">\\tau</span>: the slowdown of sampling, given by <span class=\"math\">\\tau = n_e/(n \\cdot p_s) = (\\exp(qn)-1)/(qn)</span></p>\n</li>\n<li>\n<p><span class=\"math\">B</span>: the sampling cost, assumed to be much smaller than 1 (<span class=\"math\">B \\ll 1</span>) to ensure that the main cost of the algorithm is not CPU PoW</p>\n</li>\n</ul>\n<p>We can compare the reference miner and the attacker using the following table:</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Cost</th>\n<th>Maintenance</th>\n<th>Sampling</th>\n<th>Throughput</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>reference</td>\n<td>1</td>\n<td><span class=\"math\">A</span></td>\n<td><span class=\"math\">B</span></td>\n<td>1</td>\n</tr>\n<tr>\n<td>attacker</td>\n<td>1</td>\n<td><span class=\"math\">\\chi A</span></td>\n<td><span class=\"math\">\\chi B</span></td>\n<td><span class=\"math\">\\chi</span></td>\n</tr>\n<tr>\n<td>attacker</td>\n<td><span class=\"math\">p</span></td>\n<td><span class=\"math\">\\chi p A</span></td>\n<td><span class=\"math\">\\chi p B\\tau</span></td>\n<td><span class=\"math\">\\chi p</span></td>\n</tr>\n</tbody>\n</table>\n</div><ul>\n<li>\n<p>The reference miner’s costs and throughput are normalized to 1.</p>\n</li>\n<li>\n<p>The attacker’s cost and throughput are scaled by <span class=\"math\">\\chi</span> when using the full memory.</p>\n</li>\n<li>\n<p>When the attacker uses only a fraction <span class=\"math\">p</span> of their memory, their cost, maintenance, and throughput are scaled by <span class=\"math\">p</span>, while the sampling cost is scaled by <span class=\"math\">p\\tau</span> to account for the slowdown in sampling.</p>\n</li>\n</ul>\n<p>For <span class=\"math\">qn \\lesssim 1</span>, we have <span class=\"math\">\\tau \\sim 1</span>, which means <span class=\"math\">B\\tau \\ll 1</span>.</p>\n<p>To consume all throughput, the attacker must satisfy the equation: <span class=\"math\">\\chi p = 1</span>.</p>\n<p>For efficient mining, the following condition must be met:</p>\n<p><span class=\"math\">p\\cdot (1 + \\chi A) + B \\tau &lt; 1 + A + B</span></p>\n<p>Simplifying this condition, we get:</p>\n<p><span class=\"math\">p + (\\tau - 1) B &lt; 1</span></p>\n<p><span class=\"math\">q &gt; (\\tau - 1) B \\approx qnB/2</span></p>\n<p><span class=\"math\">n B \\lesssim 2</span></p>\n<p>To estimate <span class=\"math\">B</span>, let’s consider the example of a Samsung 970 SSD with a throughput of 2GB/s, TDP of 6W, and a value size of 1MB. The hash efficiency for CPU is 30MH/J, and for ASIC, it is 3GH/J.</p>\n<p>The additional TDP for sampling will be:</p>\n<ul>\n<li>\n<p>For CPU: <span class=\"math\">2e9/1e6/30e6 = 6\\text{e-5}W</span></p>\n</li>\n<li>\n<p>For ASIC: <span class=\"math\">2e9/1e6/3e9 = 6\\text{e-7}W</span></p>\n</li>\n</ul>\n<p>By dividing these values by the TDP, we can roughly estimate <span class=\"math\">B</span> to be in the range of <span class=\"math\">1\\text{e-}5</span> to <span class=\"math\">1\\text{e-}7</span>.</p>\n<p>This means that <span class=\"math\">n</span> should be greater than <span class=\"math\">1\\text{e}5</span> to <span class=\"math\">1\\text{e}7</span> to make the shrink attack inefficient, which may not be practical in real-world scenarios.</p>\n<p>When <span class=\"math\">qn \\lesssim 1</span>, <span class=\"math\">p</span> can take any value. For example, with a storage size of 1TB, value size of 1MB, <span class=\"math\">n=1\\text{e}4</span>, and <span class=\"math\">B=1\\text{e-}5</span>, we get <span class=\"math\">q=1\\text{e-}4</span>, which means that 100 MB of data could be forgotten while still providing economic benefits for the miner.</p>\n<h2><a name=\"limited-throughput-moore-attack-6\" class=\"anchor\" href=\"https://ethresear.ch#limited-throughput-moore-attack-6\"></a>Limited throughput: Moore attack</h2>\n<p>When considering the Moore attack, it’s important to note that miners will align their throughput to the limit imposed by the system. Let’s analyze the cost efficiency of the reference miner and the attacker in this scenario.</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Cost + Maintenance</th>\n<th>Sampling</th>\n<th>Throughput</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>reference</td>\n<td>1</td>\n<td><span class=\"math\">B</span></td>\n<td>1</td>\n</tr>\n<tr>\n<td>attacker</td>\n<td>1</td>\n<td><span class=\"math\">B</span></td>\n<td><span class=\"math\">\\chi</span></td>\n</tr>\n<tr>\n<td>attacker</td>\n<td><span class=\"math\">p</span></td>\n<td><span class=\"math\">\\theta Bp\\tau</span></td>\n<td><span class=\"math\">\\theta \\chi p</span></td>\n</tr>\n</tbody>\n</table>\n</div><ul>\n<li>\n<p>The reference miner’s cost, maintenance, and throughput are normalized to 1, with a sampling cost of <span class=\"math\">B</span>.</p>\n</li>\n<li>\n<p>After upgrading their hardware, the attacker’s cost and maintenance remain the same, but their throughput increases by a factor of <span class=\"math\">\\chi</span>.</p>\n</li>\n<li>\n<p>When the attacker uses only a fraction <span class=\"math\">p</span> of their upgraded hardware, their sampling cost is scaled by <span class=\"math\">\\theta p\\tau</span>, where <span class=\"math\">\\theta</span> is a throughput utilization parameter, and their throughput is scaled by <span class=\"math\">\\theta \\chi p</span>.</p>\n</li>\n</ul>\n<p><span class=\"math\">\\theta</span> represents the throughput utilization parameter, which indicates the fraction of the attacker’s upgraded throughput that they actually use. For example, if <span class=\"math\">\\theta = 0.8</span>, the attacker is utilizing 80% of their upgraded throughput. This parameter allows us to model situations where the attacker may not be using their full upgraded capacity, either intentionally or due to technical limitations.</p>\n<p>To consume all available throughput, the attacker must satisfy the equation: <span class=\"math\">\\theta \\chi p = 1</span>.</p>\n<p>For efficient mining, the following condition must be met:</p>\n<p><span class=\"math\">p \\cdot (1 + \\theta B \\tau) &lt; 1 + B</span></p>\n<p>Expanding this condition using the approximations for <span class=\"math\">\\tau</span> and <span class=\"math\">p_s</span> from the previous chapter, we get:</p>\n<p><span class=\"math\">(1-q) (1 + \\chi^{-1} B (1 + qn/2)) &lt; 1 + B</span></p>\n<p>Simplifying further:</p>\n<p><span class=\"math\">\\chi^{-1} nB/2 - 1 - B - \\chi^{-1} qnB/2 &lt; 0</span></p>\n<p><span class=\"math\">\\chi^{-1} pnB/2 &lt; 1 + B</span></p>\n<p><span class=\"math\">n B \\lesssim 2 \\chi</span></p>\n<p>To find the optimal values for the arbitrary parameters <span class=\"math\">\\theta</span> and <span class=\"math\">p</span>, we need to perform additional calculations. Taking the partial derivative of <span class=\"math\">p \\cdot (1 + \\chi^{-1} B \\tau)</span> with respect to <span class=\"math\">q</span>, we get:</p>\n<p><span class=\"math\">\\partial_q (p \\cdot (1 + \\chi^{-1} B \\tau)) \\approx -(1 + \\chi^{-1} B (1 + qn/2) + \\chi^{-1} Bn/2 \\cdot (1 + qn/3)) = \\chi^{-1} Bn/2 - (1 + \\chi^{-1} B) + \\chi^{-1} B q n (n / 3 - 1/2) = 0</span></p>\n<p>Solving for <span class=\"math\">q</span>, we get:</p>\n<p><span class=\"math\">q = \\frac{-Bn/2 + \\chi + B}{B n (n / 3 - 1/2)} &gt; 0</span></p>\n<p>This result suggests that <span class=\"math\">n</span> should be greater than <span class=\"math\">1\\text{e}5</span> to <span class=\"math\">1\\text{e}7</span> to make the Moore attack inefficient.</p>\n<p>For example, consider a storage size of 1TB, value size of 1MB, <span class=\"math\">n=1\\text{e}4</span>, <span class=\"math\">B=1\\text{e-}5</span>, and <span class=\"math\">\\chi=2</span>. Plugging these values into the equation for <span class=\"math\">q</span>, we get <span class=\"math\">q=0.005</span>, which means that 5GB of data could be forgotten while still providing economic benefits for the attacker.</p>\n<h2><a name=\"ram-rig-7\" class=\"anchor\" href=\"https://ethresear.ch#ram-rig-7\"></a>RAM rig</h2>\n<p>In the original PoRA paper, the authors compare the performance of a Samsung 970 EVO NVMe SSD and 256GB DDR4-3200 RAM. Based on the calculations in the previous sections, we arrive at a counterintuitive conclusion: when there are no throughput limitations, only the throughput matters, not the size of the storage. To further illustrate this point, let’s compare the efficiency of a Crucial T705 1TB NVMe SSD and Crucial 8GB DDR5-4800 RAM.</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Cost (USD)</th>\n<th>TDP (W)</th>\n<th>Throughput (GB/S)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>NVMe</td>\n<td>188</td>\n<td>15</td>\n<td>13.7</td>\n</tr>\n<tr>\n<td>DDR5</td>\n<td>25</td>\n<td>10</td>\n<td>72</td>\n</tr>\n</tbody>\n</table>\n</div><p>The table above compares the cost, thermal design power (TDP), and throughput of the two storage devices. The NVMe SSD has a higher cost and TDP but a lower throughput compared to the DDR5 RAM.</p>\n<p>To calculate the cost efficiency of each device, we need to consider the maintenance cost and the amortization of the equipment over its lifetime. Let’s assume that the maintenance cost for 1W of power is about 4.4 USD per year and that the equipment is amortized over 4 years.</p>\n<p>For the NVMe SSD, the cost per 1 GB/s of throughput per year is:</p>\n<p><span class=\"math\">(188/4 + 15*4.4) / 13.7 = 8.25</span> USD</p>\n<p>For the DDR5 RAM, the cost per 1 GB/s of throughput per year is:</p>\n<p><span class=\"math\">(25/4 + 10*4.4) / 72 = 0.70</span> USD</p>\n<p>The results show that the DDR5 RAM is significantly more cost-efficient than the NVMe SSD when considering the cost per 1 GB/s of throughput per year. This finding supports the idea that, in the absence of throughput limitations, using high-throughput RAM can be more economically viable for mining than using NVMe SSDs, despite the difference in storage capacity.</p>\n<h2><a name=\"conclusion-8\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-8\"></a>Conclusion</h2>\n<p>The analysis of the shrink and Moore attacks on the PoRA consensus mechanism highlights potential vulnerabilities in the system. The article demonstrates that without proper limitations on mining rewards and a sufficiently high number of random accesses, attackers could gain economic benefits by using cheaper, smaller storage devices or leveraging advancements in technology to increase throughput. To mitigate these risks, the PoRA mechanism should be designed with appropriate parameters, such as limiting mining rewards and ensuring a high number of random accesses. Additionally, the comparison between NVMe storage and RAM suggests that RAM-based mining rigs could pose a significant threat to the security of the system, as they are more cost-effective per unit of throughput.</p>\n<h2><a name=\"further-research-9\" class=\"anchor\" href=\"https://ethresear.ch#further-research-9\"></a>Further research</h2>\n<p>We are planning to publish soon an article with green (no PoW inside) proofs of storage, based on statistics, economics, and zkSNARK cryptography, suitable for our decentralized storage research, available at:</p>\n<ul>\n<li>\n<p><a href=\"https://ethresear.ch/t/blockchain-sharded-storage-web2-costs-and-web3-security-with-shamir-secret-sharing/18881\">Blockchain Sharded Storage: Web2 Costs and Web3 Security with Shamir Secret Sharing</a></p>\n</li>\n<li>\n<p><a href=\"https://ethresear.ch/t/minimal-fully-recursive-zkda-rollup-with-sharded-storage/19020\">Minimal fully recursive zkDA rollup with sharded storage</a></p>\n</li>\n</ul>\n<h2><a name=\"links-10\" class=\"anchor\" href=\"https://ethresear.ch#links-10\"></a>Links</h2>\n<ul>\n<li><a href=\"https://ethresear.ch/u/qizhou\">Qi Zhou</a>. <a href=\"https://file.w3q.w3q-g.w3link.io/0x67d0481cc9c2e9dad2987e58a365aae977dcb8da/dynamic_data_sharding_0_1_6.pdf\" rel=\"noopener nofollow ugc\">Decentralized Storage on Large Dynamic Datasets with Applications for Large Decentralized KV Store.</a></li>\n</ul>\n            <p><small>9 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/mining-attacks-on-pora-proof-of-random-access/19323\">Read full topic</a></p>","link":"https://ethresear.ch/t/mining-attacks-on-pora-proof-of-random-access/19323","pubDate":"Wed, 17 Apr 2024 20:30:15 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19323"},"source":{"@url":"https://ethresear.ch/t/mining-attacks-on-pora-proof-of-random-access/19323.rss","#text":"Mining attacks on PoRA (Proof of Random Access)"},"filter":false},{"title":"New ZKP bridge paper for Ethereum Full Node. Code is open source","dc:creator":"billypham09","category":"zk-s[nt]arks","description":"<p><strong>TLDR</strong>: We just published our <a href=\"https://arxiv.org/abs/2404.10404\" rel=\"noopener nofollow ugc\">new paper</a> on building a ZKP bridge for full Ethereum node with our <a href=\"https://github.com/sisu-network/sisu-bridge\" rel=\"noopener nofollow ugc\">open source code</a>. We analyze why building a ZKP bridge for Ethereum full node is hard and how we address these challenges. Our bridge has many major improvements over the zkBridge paper, more decentralized, requires no worker-to-worker communication and is suitable for emerging prover markets.</p>\n<p><strong>Motivation</strong>:</p>\n<p>Building bridges on ZKP for Ethereum full node is hard as it requires enormous computation power. zkBridge is the first paper that sketches a layout on how to build such a bridge and Polyhedra Network (which has many authors of the paper) is one of the very few teams that claims to prove Ethereum full node.</p>\n<p>The problems with current ZK Bridge for Ethereum full node:</p>\n<ul>\n<li>It’s closed source, and does not have full community review. Given so many bridge hacks, it’s hard for us to trust a trustless bridge that is in a black box.</li>\n<li>Public key aggregation is only a small part of work (in fact, less than 3% of computation work). We still need to prove the validity of each validator and the RANDAO.</li>\n<li>Solution is centralized and can only run in a data center.</li>\n</ul>\n<p>This motivates us to build a decentralized trustless bridge for Ethereum full node from scratch. Our paper is public for community feedback. Our prototype code is open source for anyone to modify and optimize.</p>\n<p><strong>The problems</strong>:</p>\n<p>At the time of writing, Ethereum mainnet has about one million validator nodes. For simplicity, we assume that there are one million active validators in Ethereum and each slot has 32,000 validators throughout this article.</p>\n<p>To understand why proving Ethereum full node is hard, one needs to understand its underlying consensus protocol. Each of these one million validators is required to attest to exactly one Ethereum block in one epoch. Each epoch has 32 slots and each slot might contain at most one Ethereum block. There are roughly 32,000 validators producing 32,000 signatures in one block time frame. These signatures are aggregated and then included into the Merkle tree of the block.</p>\n<p>To prove that one block is valid with regard to current beacon state, here is a list of necessary but not exhaustive tasks a prover needs to prove:</p>\n<ul>\n<li>All these 32,000’s signatures should be aggregated (in different committees) and valid under the new block hash.</li>\n<li>Each of these signatures belongs to an active validator under the previous beacon state.</li>\n<li>Each validator index must abide by an RANDAO algorithm which randomly shuffles and selects a set of validators for each epoch.</li>\n</ul>\n<p>The challenge of proving Ethereum full node is generating proof for 32,000 nodes. The second and third tasks require proving multiple SHA256 hashes. To prove the second task for one validator, a prover needs to show that the validator’s public key is part of a Merkle path whose root is the previous beacon state hash. Ethereum consensus uses SHA256 for hashing and the current best SHA256 proof requires about<a href=\"https://ieeexplore.ieee.org/document/6956581\" rel=\"noopener nofollow ugc\"> 27,000 constraints</a>. Each path length from validator info leaf to the root is between 50 and 60. We are looking at 1,350,000 constraints per Merkle path per validator. Multiplying this number by 32,000 yields 43,2 billion constraints.</p>\n<p>Proving the third task is even more challenging as each RANDAO to get the proposer index for a block requires multiple SHA256 hashes. We estimate that proving all validator indexes are correct under RANDAO requires between 100 billion to 1 trillion gates. Even the lower range estimation would exceed the computational capacity of the current best proving system. Note that these are not the complete list of problems we have to prove for Ethereum full node but the ones we want to highlight.</p>\n<p><strong>Our Contribution</strong></p>\n<p>Our contributions of Sisu protocol in this paper is as follow:</p>\n<ul>\n<li>We introduce an algorithm to prove that the majority (more than 2/3) of validators in Ethereum network in one epoch are validators under the beacon state in the previous epoch and they are all pairwise different. A naive approach compares all pairs of validators public key and runs in O(n^2). We propose an algorithm that runs on O(n) in circuit by leveraging special properties of the validator set.</li>\n</ul>\n<p>We argue that by proving the uniqueness of the majority of validators in one epoch we can replace the RANDAO algorithm of Ethereum consensus with our new method. To verify one block, the RANDAO algorithm defines a specific set of validators while Sisu protocol requires any set of valid validators. However, within one epoch the set of validators of RANDAO is the same as the set of validators in Sisu protocol. This set is the set of active validators in Ethereum network. The cost of attacking Sisu protocol for this part is equivalent to the cost of manipulating the majority of Ethereum networks.</p>\n<ul>\n<li>\n<p>We propose a new approach that requires no worker to worker and minimal traffic between worker and master in our distributed system. This allows Sisu to scale better compared to the design in zkBridge.</p>\n</li>\n<li>\n<p>Our protocol is built on a distributed GKR system using a general circuit. Compared to a layered circuit, the general circuit reduces the number of layers in the circuit and achieves 3-4 times speed up in performance.</p>\n</li>\n<li>\n<p>Our circuit uses a new type of gate called accumulation gates that allows more than 2 input gates connecting to the same output gate without modifying the GKR evaluation function. Though the number of evaluations remains the same, accumulation gate significantly reduces the number of layers and the number of gates per layer.</p>\n</li>\n<li>\n<p>We incorporate GPU hardware acceleration in our implementation with multiple optimization strategies. We first implement Sisu protocol in CPU, identify the part that could run in parallel and gradually port them to GPU.</p>\n</li>\n</ul>\n<p>Sisu protocol is designed toward decentralized proving. We make a deliberate trade-off of having decentralization at the expense of increasing the number of constraints. However, with the emerging prover markets we expect ZK applications in the future could run on hundreds and even thousands of GPUs. Any protocol that can be divided into independent provers could take advantage of distributed proving systems.</p>\n<p><strong>Background &amp; Our Protocol</strong></p>\n<p>If you are new to the ZK world or mostly uses ZK framework like Circom, I would recommend you to read on the following concepts before reading our protocol:</p>\n<ul>\n<li><a href=\"https://people.cs.georgetown.edu/jthaler/GKRNote.pdf\" rel=\"noopener nofollow ugc\">GKR</a></li>\n<li><a href=\"https://eprint.iacr.org/2020/1247.pdf\" rel=\"noopener nofollow ugc\">GKR for general circuit</a>.</li>\n<li><a href=\"https://eprint.iacr.org/2019/317.pdf\" rel=\"noopener nofollow ugc\">Libra paper</a>: introduces a new method to calculate multilinear sumcheck in linear time using 2 rounds bookkeeping tables.</li>\n<li><a href=\"https://eprint.iacr.org/2019/1482.pdf\" rel=\"noopener nofollow ugc\">Virgo</a>: a transparent protocol to allow a verifier to delegate the computation at input layer to prover using VPD (verifiable Polynomial Delegation).</li>\n<li><a href=\"https://rdi.berkeley.edu/zkp/uploads/paper.pdf\" rel=\"noopener nofollow ugc\">zkBridge</a>: a paper that uses a distributed version of Virgo to build general zkBridge.</li>\n</ul>\n<p>This list could be overwhelming, so take your time to digest them.</p>\n<p>After reading on this list, you can start reading on Sisu protocol. Our protocol is based on Virgo with some major differences:</p>\n<ul>\n<li>We use a distributed general circuit instead of a distributed layered circuit. The formula to calculate multilinear sumcheck is different.</li>\n<li>To remove worker-to-worker communication, we use cluster shared mempool for a group of workers and increase the number of Merkle paths that the verifier has to validate. This is a deliberate trade-off as worker machines can run independently and easier to scale to a decentralized network.</li>\n<li>A new associative hash function is introduced to prove that validators in different blocks are pairwise distinct. Previously, this was not possible since proof is generated for one block at a time.</li>\n<li>A new accumulation gate is introduced to reduce the number of gates &amp; layers. Our SHA256 circuit has only 4 layers to prove.</li>\n</ul>\n<p>Our protocol has 2 phases: phase 1 runs distributed sumcheck and distributed polynomial commitment. Phase 2 uses Groth16 to emulate the verifier of Phase 1. Both phases can have overlapping execution.</p>\n<p>We are thinking about using Halo2 to replace Groth16 for better performance. However, our engineers are more familiar with Circom and decide to use it for a prototype.</p>\n<p>More detail is in our paper.</p>\n<p><strong>Evaluation</strong></p>\n<p>We use machines with Intel(R) 8 cores i7-7700 <span class=\"mention\">@3.60GHz</span> CPU, 32GB RAM and Geforce GTX 1080 (8GB VRAM) GPU. Our GPU is an 8 year old model. We chose the modest hardware configuration because they provide the best RAM and compute power per dollar.</p>\n<p>One Geforce GTX 1080 GPU can handle generating proof for 16 validators comfortably within 12s in our prototype. The circuit for these 16 validators has about 30M gates in phase 1.</p>\n<p>At full optimization, one such GPU can handle between 32-64 validators. 32,000 validators will need 512-1000 such GPUs with a total circuit size of 15-30 billion gates.</p>\n<p>Our longest operation is the witness generation time in Groth16 as it takes dozen of minutes to execute. We are using rapidsnark to generate witness which is not under our control. We are looking into tactics to optimize this process, either by optimizing rapidsnark or write our own version.</p>\n<p><strong>Conclusion</strong></p>\n<p>We present an open analysis and open source code for Ethereum full node. Our approach can apply for general ZK applications with parallel structures with billions of gates. More importantly, we design Sisu protocol to be decentralized and highly suitable for running with distributed prover markets. Feedback is welcome.</p>\n<p>If you want to contribute/ support/ fund the project, feel free to contact me at [my_first_name].[my_last_name]<span class=\"mention\">@sisu.network</span> or reach out to me on Twitter/X at billypham09.</p>\n<p>Billy Pham</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/new-zkp-bridge-paper-for-ethereum-full-node-code-is-open-source/19319\">Read full topic</a></p>","link":"https://ethresear.ch/t/new-zkp-bridge-paper-for-ethereum-full-node-code-is-open-source/19319","pubDate":"Wed, 17 Apr 2024 09:12:13 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19319"},"source":{"@url":"https://ethresear.ch/t/new-zkp-bridge-paper-for-ethereum-full-node-code-is-open-source/19319.rss","#text":"New ZKP bridge paper for Ethereum Full Node. Code is open source"},"filter":false},{"title":"EIP-3074 AUTHCALL and phishing protection?","dc:creator":"miohtama","category":"Security","description":"<p>Happy to hear that EIP-3074 (“AUTHCALL”) is going forward.</p>\n<p>The question I have in mind is how EIP-3074 prevents phishing? I looked up some old AUTHCALL examples (likely outdated), and most of them seem to be a normal EIP-712 message.</p>\n<p>An example <a href=\"https://github.com/0xPolygon/account-abstraction-invoker/tree/master?tab=readme-ov-file\" rel=\"noopener nofollow ugc\">here</a>:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/5/5368dc978cd0a5d9e4faeddc2d67c5ef3ff91d4c.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/5368dc978cd0a5d9e4faeddc2d67c5ef3ff91d4c\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/5/5368dc978cd0a5d9e4faeddc2d67c5ef3ff91d4c_2_470x500.jpeg\" alt=\"image\" data-base62-sha1=\"bTSiiEPCoLis6cmkrNtbrhcJZAE\" width=\"470\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/5/5368dc978cd0a5d9e4faeddc2d67c5ef3ff91d4c_2_470x500.jpeg, https://ethresear.ch/uploads/default/optimized/2X/5/5368dc978cd0a5d9e4faeddc2d67c5ef3ff91d4c_2_705x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/2X/5/5368dc978cd0a5d9e4faeddc2d67c5ef3ff91d4c_2_940x1000.jpeg 2x\" data-dominant-color=\"F5F6F7\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/1/112061eb401698e3860a7fb2b15b3dd864a04ed6.png\" data-download-href=\"https://ethresear.ch/uploads/default/112061eb401698e3860a7fb2b15b3dd864a04ed6\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/1/112061eb401698e3860a7fb2b15b3dd864a04ed6_2_503x500.png\" alt=\"image\" data-base62-sha1=\"2rvuLipUXvpcfNXs8hrmjjohfSK\" width=\"503\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/1/112061eb401698e3860a7fb2b15b3dd864a04ed6_2_503x500.png, https://ethresear.ch/uploads/default/optimized/2X/1/112061eb401698e3860a7fb2b15b3dd864a04ed6_2_754x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/2X/1/112061eb401698e3860a7fb2b15b3dd864a04ed6_2_1006x1000.png 2x\" data-dominant-color=\"F2F4F7\"></a></div><p></p>\n<p>If AUTH/AUTHCALL allows the user to delegate her wallet to any smart contract with a single signed message, isn’t this a large phishing risk? Or am I misunderstanding something here, and there are going to be some security measurements not signing arbitrary AUTH/AUTHCALLs?</p>\n<ul>\n<li>Currently Ethereum has ~600 wallets as listed on <a href=\"https://explorer.walletconnect.com/?type=wallet\" rel=\"noopener nofollow ugc\">WalletConnect website</a>, there are likely couple of hundreds more</li>\n<li>Phishing is the largest security problem <a href=\"https://twitter.com/realScamSniffer/status/1774963876968436156\" rel=\"noopener nofollow ugc\">in the Ethereum ecosystem, where approve(), permit() and Permit2 phishing cause $70M/month</a> losses to Ethereum users, causing more damage than hacks and rug pulls, or any other attack vector</li>\n<li>Legacy wallet dev teams do not have resources to build transaction simulators or other such security measurements to prevent new phishing vectors</li>\n<li>EIP-3074 specification does not discuss this problem, does not give any UX guidelines for wallet and Dapp developers, and so on, so it feels there might be a risk here</li>\n</ul>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/eip-3074-authcall-and-phishing-protection/19288\">Read full topic</a></p>","link":"https://ethresear.ch/t/eip-3074-authcall-and-phishing-protection/19288","pubDate":"Fri, 12 Apr 2024 16:29:49 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19288"},"source":{"@url":"https://ethresear.ch/t/eip-3074-authcall-and-phishing-protection/19288.rss","#text":"EIP-3074 AUTHCALL and phishing protection?"},"filter":false},{"title":"Appointed Execution Proposers: Because the Proposer you know…","dc:creator":"The-CTra1n","category":"Block proposer","description":"<p><em>Thanks to <a class=\"mention\" href=\"https://ethresear.ch/u/swapnilraj\">@swapnilraj</a>, <a class=\"mention\" href=\"https://ethresear.ch/u/linoscope\">@linoscope</a>, <a class=\"mention\" href=\"https://ethresear.ch/u/barnabe\">@barnabe</a>, <a class=\"mention\" href=\"https://ethresear.ch/u/julian\">@Julian</a>, and <a class=\"mention\" href=\"https://ethresear.ch/u/jcschlegel\">@jcschlegel</a> for detailed back-and-forth in crafting this article. Thanks also to Michal Zajac, <a class=\"mention\" href=\"https://ethresear.ch/u/quintuskilbourn\">@quintuskilbourn</a>,  and <a class=\"mention\" href=\"https://ethresear.ch/u/justindrake\">@JustinDrake</a> for their comments on the idea. This work was funded by Flashbots. The views expressed are my own, and do not necessarily reflect those of the reviewers or Flashbots.</em></p>\n<h1><a name=\"introduction-1\" class=\"anchor\" href=\"https://ethresear.ch#introduction-1\"></a>Introduction</h1>\n<p>This article introduces the concept of appointed execution proposers (AEPs), a proposer allocation protocol that allows validators in a committee-based consensus mechanism, e.g. proof-of-stake, to appoint specialized proposers to propose blocks on behalf of validators. AEPs joins a long line of protocols decoupling high-barrier requirements, e.g. execution-block building, large amounts of slashable stake, from low-barrier requirements e.g. beacon-block proposing, attesting. The protocols that we follow in this regard include <a href=\"https://ethereum.org/en/roadmap/pbs/\" rel=\"noopener nofollow ugc\">proposer-builder separation (PBS)</a>, <a href=\"https://ethresear.ch/t/why-enshrine-proposer-builder-separation-a-viable-path-to-epbs/15710\">enshrined PBS</a>, <a href=\"https://ethresear.ch/t/execution-tickets/17944\">Execution Tickets</a>, and <a href=\"https://ethresear.ch/t/unbundling-staking-towards-rainbow-staking/18683\">Rainbow Staking</a>.</p>\n<p>AEPs can bootstrap onto any in-protocol proposer-market structure, e.g. Execution Tickets, ePBS, allowing validators to become opinionated about the entities responsible for proposing blocks. Through validator requirements, smaller market participants and users can be protected from the monopolization and malicious block-building practices that a free-market allows for, and/or incentivizes. This equates to <a href=\"https://competition-policy.ec.europa.eu/antitrust-and-cartels_en\" rel=\"noopener nofollow ugc\">antitrust</a> and quality control. As such, AEPs provides the tools for Ethereum validators to ensure long-term sustainability of the Ethereum block-proposal market, its users, and the ecosystem as a whole.</p>\n<p>Importantly, AEPs restricting the proposer market to the appointed set is conditional on the appointed set reaching a minimum size threshold. Below this threshold, AEPs reverts to the default permissionless proposer setting. By reaching this minimum size threshold, validators are deciding in no uncertain manner that they want to use the appointed proposer set. What’s more, even in AEPs’ default setting, the omnipresent threat of reaching the minimum size threshold serves as a deterrent for permissionless proposers from engaging in malicious activity; a nuclear non-proliferation agreement between validators and permissionless proposers (H/T <a class=\"mention\" href=\"https://ethresear.ch/u/julian\">@Julian</a>).</p>\n<p>AEPs builds on the status quo of permissionless-only block building on Ethereum. AEPs aligns the block-building process with the needs of the many (validators), channelling the previously unchecked desires of the few (competitive block-builders). By coupling AEPs with an in-protocol proposer market, Ethereum can improve on the benefits, and address the drawbacks of the free-market approach to block proposing. <a href=\"https://www.investopedia.com/articles/economics/08/free-market-regulation.asp\" rel=\"noopener nofollow ugc\">The parallel here with free-markets is that some oversight of free markets is typically beneficial</a>. Importantly, the regulators in AEPs are the permissionless validators who represent Ethereum, with scope for arbitrarily transparent and dynamic regulation.</p>\n<p>AEPs allow validators to express proposer preferences beyond slashable stake requirements and on-chain behaviour. Validators can identify and reward/punish non-attributable good/bad behaviour, such as censoring/non-censoring, or even the timely provision of <a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">preconfirmations</a>/lack thereof. Given the potentially lucrative nature of block proposing, and the ability for validators to rescind appointments from proposers at any time, appointed proposers have a strong incentive to perform honestly and earn their appointment.</p>\n<h1><a name=\"terminology-2\" class=\"anchor\" href=\"https://ethresear.ch#terminology-2\"></a>Terminology</h1>\n<p><em>The protocol description omits specific numbers for key thresholds that are required to implement and deploy AEPs. We highlight these “gaps-to-be-filled” where they arise with a “<em>gap</em> <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/man_detective.png?v=12\" title=\":man_detective:\" class=\"emoji\" alt=\":man_detective:\" loading=\"lazy\" width=\"20\" height=\"20\">”. These gaps stand as key to-dos for a technical specification of AEPs.</em></p>\n<p>Unless otherwise specified, we assume that the underlying blockchain protocol is <a href=\"https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/\" rel=\"noopener nofollow ugc\">Ethereum PoS</a>. We borrow a lot of <a href=\"https://ethresear.ch/t/execution-tickets/17944#definitions-2\">terminology from the Execution Tickets proposal</a> because that article’s target audience is ours too. Thanks for the cheese.</p>\n<ul>\n<li><strong>Slot:</strong> A single iteration of the consensus protocol.</li>\n<li><strong>Validators:</strong> Staked entities as per Ethereum. Validators are responsible for attesting to execution blocks, proposing and attesting to beacon chain blocks, specifying inclusion lists when elected as beacon proposers, and optionally voting to appoint execution proposers.</li>\n<li><strong>Beacon lottery:</strong> A random process by which the beacon proposers (and possibly attesters) are selected from the validator set.</li>\n<li><strong>Beacon round:</strong> The portion of the slot where the beacon block is proposed.</li>\n<li><strong>Beacon block:</strong> The <a href=\"https://github.com/ethereum/consensus-specs/blob/bf09b9a7c4a7b311e86823235815daf31b117574/specs/capella/beacon-chain.md#beaconblockbody\" rel=\"noopener nofollow ugc\">BeaconBlockBody</a> of today, sans the ExecutionPayload, but with an inclusion list.</li>\n<li><strong>Beacon proposer:</strong> The validator selected as the proposer for a given beacon round (same as today).</li>\n<li><strong>Inclusion lists:</strong> A list of transactions specified by the beacon proposer for inclusion in the execution block.</li>\n<li><strong>Execution round:</strong> The portion of the slot during which an execution block is proposed.</li>\n<li><strong>Execution block:</strong> The <a href=\"https://github.com/ethereum/consensus-specs/blob/bf09b9a7c4a7b311e86823235815daf31b117574/specs/bellatrix/beacon-chain.md#executionpayload\" rel=\"noopener nofollow ugc\">ExecutionPayload</a> of today. This includes the set of transactions that get included on-chain.</li>\n<li><strong>Execution proposer:</strong> The entity with the exclusive initial right to build and propose an execution block for consensus. Proposers may subsequently auction off the right to build blocks through a builder market such as <a href=\"https://boost.flashbots.net/\" rel=\"noopener nofollow ugc\">MEV-Boost</a> or enshrined PBS.</li>\n<li><strong>Block-builders:</strong> Entities who are delegated block-building rights by the execution proposer. The blockchain protocol requires the execution proposer to sign off on this delegation.</li>\n<li><strong>In-protocol appointed proposer requirements:</strong> The core in-protocol requirement is <em>for proposers to receive appointment from validators controlling a specific minimum % of stake</em> <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/man_detective.png?v=12\" title=\":man_detective:\" class=\"emoji\" alt=\":man_detective:\" loading=\"lazy\" width=\"20\" height=\"20\">. In-protocol requirements can also include <em>minimum slashable stake for proposers</em> <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/man_detective.png?v=12\" title=\":man_detective:\" class=\"emoji\" alt=\":man_detective:\" loading=\"lazy\" width=\"20\" height=\"20\">, or more generally, any on-chain attribute that can be verified by a smart contract.</li>\n<li><strong>Out-of-protocol appointed proposer requirements:</strong> These requirements are enforced out of protocol on appointed proposers, and can be arbitrarily strict or attributable.</li>\n<li><strong>Proposer Ejection:</strong> At any point in time, validators can collect votes on behalf of the validator set to remove a proposer from the appointed proposer set. These votes can be forced on-chain through the inclusion list, or directly onto the beacon chain operation. If the ejection threshold is met, the specified proposer is ejected from the proposer set.</li>\n<li><strong><em>Target/Minimum number of appointed proposers</em> <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/man_detective.png?v=12\" title=\":man_detective:\" class=\"emoji\" alt=\":man_detective:\" loading=\"lazy\" width=\"20\" height=\"20\">:</strong> The target number of appointed proposers dictates how many proposers each validator is expected to appoint. The minimum number of appointed proposers must be reached for the appointed set of proposers to begin proposing blocks. Below this minimum threshold, the default proposer selection mechanism is used.</li>\n<li><strong>Appointed proposer:</strong> An entity who has met all in-protocol appointed proposer requirements. Given the minimum number of appointed proposers has been met, appointed proposers have the exclusive right to be selected as the execution proposer.</li>\n<li><strong>AEPs market:</strong> This is the AEPs market-structure protocol for deciding which of the appointed proposers is the execution-block proposer for a given Ethereum slot. Examples include first-price <a href=\"https://mirror.xyz/0x03c29504CEcCa30B93FF5774183a1358D41fbeB1/CPYI91s98cp9zKFkanKs_qotYzw09kWvouaAa9GXBrQ\" rel=\"noopener nofollow ugc\">slot auctions</a> and lottery-based <a href=\"https://ethresear.ch/t/execution-tickets/17944\">execution tickets</a>.</li>\n</ul>\n<h2><a name=\"protocol-sketch-3\" class=\"anchor\" href=\"https://ethresear.ch#protocol-sketch-3\"></a>Protocol Sketch</h2>\n<p><strong></strong></p><div class=\"lightbox-wrapper\"><strong><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/c/c709045b46552fb358b2b832bc3cbf7e035f3aec.png\" data-download-href=\"https://ethresear.ch/uploads/default/c709045b46552fb358b2b832bc3cbf7e035f3aec\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/c/c709045b46552fb358b2b832bc3cbf7e035f3aec_2_602x211.png\" alt=\"\" data-base62-sha1=\"soKkNCQqIW0N2NKFHr4qVcuRiMc\" width=\"602\" height=\"211\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/c/c709045b46552fb358b2b832bc3cbf7e035f3aec_2_602x211.png, https://ethresear.ch/uploads/default/optimized/2X/c/c709045b46552fb358b2b832bc3cbf7e035f3aec_2_903x316.png 1.5x, https://ethresear.ch/uploads/default/original/2X/c/c709045b46552fb358b2b832bc3cbf7e035f3aec.png 2x\" data-dominant-color=\"F1EFEB\"></a></strong></div><p></p>\n<p><strong></strong></p><div class=\"lightbox-wrapper\"><strong><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/a/ae6181b7e01c2e93a6200299e2118ab581858d23.png\" data-download-href=\"https://ethresear.ch/uploads/default/ae6181b7e01c2e93a6200299e2118ab581858d23\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/a/ae6181b7e01c2e93a6200299e2118ab581858d23_2_602x211.png\" alt=\"\" data-base62-sha1=\"oSDZc7HPHhcgsZYJ7yJQcRL3Mll\" width=\"602\" height=\"211\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/a/ae6181b7e01c2e93a6200299e2118ab581858d23_2_602x211.png, https://ethresear.ch/uploads/default/optimized/2X/a/ae6181b7e01c2e93a6200299e2118ab581858d23_2_903x316.png 1.5x, https://ethresear.ch/uploads/default/original/2X/a/ae6181b7e01c2e93a6200299e2118ab581858d23.png 2x\" data-dominant-color=\"EDF0EE\"></a></strong></div><p></p>\n<p>AEPs introduces an appointed set of proposers who have the exclusive right to propose execution blocks. When the appointed set is below the minimum number of appointed proposers, a default execution proposer selection mechanism is used e.g. a second beacon-style lottery, a permissionless variation of the AEPs market.</p>\n<p>Membership in the appointed proposer set requires an appointment vote from validators controlling <em>some specified minimum amount of stake</em> <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/man_detective.png?v=12\" title=\":man_detective:\" class=\"emoji\" alt=\":man_detective:\" loading=\"lazy\" width=\"20\" height=\"20\">. Votes are included on-chain through the inclusion list. <em>Validators can vote to appoint a specific number of proposers per validator</em> <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/man_detective.png?v=12\" title=\":man_detective:\" class=\"emoji\" alt=\":man_detective:\" loading=\"lazy\" width=\"20\" height=\"20\">. On top of the stake-vote requirement, there needs to be an in-protocol sybil resistance mechanism for candidates to be considered for election, such as a <em>minimum proposer stake</em> <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/man_detective.png?v=12\" title=\":man_detective:\" class=\"emoji\" alt=\":man_detective:\" loading=\"lazy\" width=\"20\" height=\"20\">. The blockchain protocol is responsible for choosing its own adequately decentralized validator set. Apart from voting to appoint block proposers, validators are responsible for block validation and censorship resistance (either directly through some form of inclusion lists or indirectly through appointing non-censoring proposers).</p>\n<p>Given inclusion in the appointed set, appointed proposers then participate in the AEPs market for the right to propose a block. <em>Some time before the desired block proposal time for a given slot</em> <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/man_detective.png?v=12\" title=\":man_detective:\" class=\"emoji\" alt=\":man_detective:\" loading=\"lazy\" width=\"20\" height=\"20\">, the execution proposer for that slot is selected according to the AEPs market rules. <a href=\"https://ethresear.ch/t/execution-tickets/17944#design-3\">As in execution tickets</a>, inclusion lists can be specified by the beacon chain which must be adhered to by execution proposers for execution block validity.</p>\n<p>If <a href=\"https://ethresear.ch/t/payload-timeliness-committee-ptc-an-epbs-design/16054#builder-initiated-splitting-19\">equivocation</a>/liveness faults are observed in the appointed proposer set, validators can trigger an ejection procedure to eject an appointed proposer. This ejection procedure can be a message or set of messages force included on-chain through the inclusion list. Such a message could take the form of e.g. provable faults, or meeting <em>an ejection threshold of validator signatures</em> <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/man_detective.png?v=12\" title=\":man_detective:\" class=\"emoji\" alt=\":man_detective:\" loading=\"lazy\" width=\"20\" height=\"20\">. If the <em>minimum number of appointed proposers threshold</em> <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/man_detective.png?v=12\" title=\":man_detective:\" class=\"emoji\" alt=\":man_detective:\" loading=\"lazy\" width=\"20\" height=\"20\"> is not met, the protocol falls back to the default proposer selection mechanism.</p>\n<h2><a name=\"protocol-considerations-4\" class=\"anchor\" href=\"https://ethresear.ch#protocol-considerations-4\"></a>Protocol Considerations</h2>\n<ul>\n<li>\n<p>As AEPs is agnostic to the exact market structure used for the AEPs market, we omit any details on proposer market implementation here. It is important to note that any on-chain market is non-trivial to implement. For example, the original execution tickets lack an exact specification of how/when entities enter the execution proposer market, and incentive analysis of the lottery mechanism on which it depends. For the purpose of AEPs’ intuition, one can envision a market based on a simple auction, a lottery, or a Harberger Tax based mechanism (such as proposed for block-building rights <a href=\"https://collective.flashbots.net/t/value-capturing-based-rollups-with-based-preconfirmations/2884\" rel=\"noopener nofollow ugc\">here</a> and adapted for AMM access <a href=\"https://arxiv.org/abs/2403.03367\" rel=\"noopener nofollow ugc\">here</a>). Access to the market (including or updating bids) is enforced through the inclusion list.</p>\n</li>\n<li>\n<p>The exact number of proposers that a validator can vote for appointment will depend on several factors. Some important ones are the desired target size of the appointed proposer set, and the lock-in of validators and/or validator votes (if validators can on-/off-board quickly, new validators may require a delay on when they unlock their vote).</p>\n</li>\n<li>\n<p><em>Proceeds from the AEPs market should be shared among validators</em> <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/man_detective.png?v=12\" title=\":man_detective:\" class=\"emoji\" alt=\":man_detective:\" loading=\"lazy\" width=\"20\" height=\"20\">, through some combination of a share of proceeds for all validators, the validators who appointed the winning proposer, and a burn. It is important that whatever distribution mechanism is chosen incentivizes rational validators to appoint honestly and is resilient to off-chain agreements between validators and proposers.</p>\n<ul>\n<li>A naive implementation would be to share all proceeds paid by an appointed proposer back to the validators who voted for the proposer’s appointment. However, this may negatively impact the incentive for validators to appoint less competitive proposers.</li>\n<li>An alternative implementation would be to burn all proceeds from the AEPs auction. As long as there is a reasonably high vote requirement to be appointed (ensuring votes are required from some % of validators not colluding with the proposer), off-chain agreements/bribes should be ineffective.</li>\n</ul>\n</li>\n<li>\n<p>To keep the appointed proposer set competitive and to protect against monopolies, rate-limits on the % of blocks that a single proposer can propose over a given time frame can be enforced, e.g. through taxes proportional to % of blocks produced. With rate-limiting measures, AEPs can gradually reduce dominant proposer bids in slot auctions and allow alternative proposers to propose blocks. This ensures one proposer cannot produce all of the blocks, which would effectively remove competition, and then allow the monopolist to extract rents. This is possible in AEPss as a consequence of the sybil resistance that is enforced on the proposer set through delegation. Without sybil resistance of the proposer set (achieved through the vote requirement and a target size), it is not clear if any in-protocol protection against centralization can be enforced.</p>\n</li>\n<li>\n<p>For the ejection threshold, too low of a threshold, and this could be used as a griefing vector by a malicious minority of validators, too high and the threshold won’t be responsive enough to remove malicious proposers. A traffic light system, with a low threshold to pause a proposer, and a higher barrier to fully eject a proposer might be interesting, although this requires further research.</p>\n</li>\n<li>\n<p>Examples of out-of-protocol proposer requirements include geo-distribution, commitment to respond to data availability sampling requests (i.e., act as a DAS provider), commitment to provide permanent data storage beyond data availability, commitment to run trusted hardware, commitment to provide timely preconfirmations; the possibilities are endless. These requirements are reflected through in-protocol vote requirements.</p>\n</li>\n<li>\n<p>This first iteration of AEPs leans quite heavily on inclusion lists. While other mechanisms for forcing votes, ejections, and market actions on-chain may be possible, inclusion lists simplify the explanation of AEPs.</p>\n</li>\n</ul>\n<h1><a name=\"appointing-execution-proposers-vs-not-5\" class=\"anchor\" href=\"https://ethresear.ch#appointing-execution-proposers-vs-not-5\"></a>Appointing Execution Proposers vs. Not</h1>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/0/0c1b86abf0eb9d0fa83983413180c2ec079b35a0.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/0c1b86abf0eb9d0fa83983413180c2ec079b35a0\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/original/2X/0/0c1b86abf0eb9d0fa83983413180c2ec079b35a0.jpeg\" alt=\"\" data-base62-sha1=\"1J6HE1dGtGYcVfEDR5BMSiwScRa\" width=\"517\" height=\"345\" role=\"presentation\" data-dominant-color=\"3C3B40\"></a></div><p></p>\n<p>Validator inertia (doing nada) makes the AEPs protocol totally permissionless. If a minimum threshold of validators decides to appoint a proposer, this provides a clear signal that the validators prefer appointed proposers over permissionless proposers. This section explores why validators would choose one option over the other.</p>\n<h2><a name=\"why-would-validators-appoint-proposers-6\" class=\"anchor\" href=\"https://ethresear.ch#why-would-validators-appoint-proposers-6\"></a>Why would validators appoint proposers?</h2>\n<p><a href=\"https://www.investopedia.com/articles/economics/08/free-market-regulation.asp\" rel=\"noopener nofollow ugc\">Investopedia provides a nice introductory piece</a> on how some (validator) oversight can maintain healthy (proposer) markets that serve the public (blockchain users). To start this section, I quote the disadvantages of a totally permissionless “free market” as per the same article.</p>\n<blockquote>\n<ul>\n<li>A competitive environment creates an atmosphere of survival of the fittest, leading businesses to disregard the safety of the public to increase the <a href=\"https://www.investopedia.com/terms/b/bottomline.asp\" rel=\"noopener nofollow ugc\">bottom line</a>.</li>\n<li>Wealth is not distributed equally.</li>\n<li>Greed and overproduction cause the economy to have wild swings ranging from times of robust growth to cataclysmic <a href=\"https://www.investopedia.com/terms/r/recession.asp\" rel=\"noopener nofollow ugc\">recessions</a>.</li>\n</ul>\n</blockquote>\n<p>We now focus on blockchain-specific reasons why validators would appoint a proposer set. This section is split into primary and secondary reasons.</p>\n<h3><a name=\"primary-reasons-7\" class=\"anchor\" href=\"https://ethresear.ch#primary-reasons-7\"></a>Primary Reasons</h3>\n<ul>\n<li><strong>Ability to mitigate/prevent multi-slot MEV.</strong> If multi-slot MEV becomes profitable enough, we must assume that a permissionless set of actors will try to extract it. By appointing a set of distinct/accountable proposers, validators can either enforce rules on appointed proposers to propose blocks assuming they will not propose the proceeding block, or explicitly rotate out the proposer of slot <span class=\"math\">n</span> from consideration in the market for slot <span class=\"math\">n+1</span>.</li>\n<li><strong>Improved proposer reputation and assurances (generally).</strong> Having a set of appointed proposers provides the protocol and its users with higher guarantees of honest behaviour compared to a purely permissionless approach. Given the irrevocable effect that malicious behaviour can have on membership in the appointed set, proposers are strongly incentivized to propose blocks honestly/in an “aligned” manner.</li>\n<li><strong>Prevent uncontrolled centralization of the proposer market.</strong> In any primary on-chain market-based approach to delegating block proposing, secondary markets will likely emerge to allow proposers to outsource certain specialized proposing roles and remain competitive in the primary market. Unfortunately, these secondary markets have clear incentives to maximize their own take of block proposal profits. This profit-capturing tug-of-war between the primary and secondary markets is a one-sided affair when the primary market is permissionless.<br>\nWhen given the opportunity to propose a block, permissionless proposers must be expected to source bundles from secondary markets that maximize the total value of the block. If certain secondary markets/market participants emerge as dominant, these dominant participants can extract rent from the primary market, dictate the format of blocks being built, and even dictate which primary market actors can ultimately compete in the primary market.<br>\n<em>Example 1.</em> Although the provision of preconfirmations may appear to be a net benefit to all, preconfirmations may turn out to be a loss-maker for execution proposers, for example due to sophisticated pricing and infrastructure requirements. Validators may need to enforce preconfirmation provision among appointed proposers until a critical mass of preconfirmation value is achieved.<br>\n<em>Example 2.</em> It is conceivable that a CEX-DEX arbitrageur/market may become so dominant that access to the CEX-DEX arbitrage allows a proposer to create higher value blocks than any proposer not accessing the CEX. This enables permissioning of the proposer set by the CEX, outside of the control of the blockchain protocol. In such a scenario, the CEX would be able to dictate who proposes blocks in a permissionless block-market structure.</li>\n<li><strong>Threat of engaging the appointed set may be enough.</strong> We see the use of the appointed set as the most direct way to ensure a competitive proposer market long-term, while protecting against multi-block MEV and simplifying builder reputation-/-al benefits. However, these benefits may be outweighed by the desire of the community to keep the proposer market permissionless. AEPs effectively engages a nuclear non-proliferation agreement between validators and the proposer market, with the validators promising to keep the market permissionless if the proposers don’t engage in any/repeated malicious activity.</li>\n<li><strong>Bribes.</strong> Receiving an appointment is highly valuable given the exclusivity, reputation, and potential for earnings it brings. Rational permissionless validators who receive more from appointing a proposer than not appointing must be expected to appoint. The protocol and its incentives, including any revenue distribution mechanism from the AEPs market, should be constructed given this potential from off-chain bribes.</li>\n</ul>\n<h3><a name=\"secondary-reasons-8\" class=\"anchor\" href=\"https://ethresear.ch#secondary-reasons-8\"></a>Secondary Reasons</h3>\n<ul>\n<li><strong>Incentivization of non-attributable tasks.</strong> Given the existence of an appointed set, there is a large incentive to join the set to gain access to block proposing. With this incentive, appointment of some/all proposers can be conditioned on the performance of non-attributable non-block proposing tasks which benefit the ecosystem.</li>\n<li><strong>Simpler auction process.</strong> With a capped number of bidders and bidding demand, distributed auctions are simplified. <a href=\"https://arxiv.org/pdf/2301.12813.pdf\" rel=\"noopener nofollow ugc\">Sybil resistance is a thorn in the side of permissionless auctions.</a>. To paraphrase and simplify, auctions/lotteries may only be useful if there is a limited number of bidders/demand for bid inclusion is limited. Although censorship is still a concern in AEPs, the fixed number of bids with the added risk of attack attribution mitigates censorship concerns and simplfies the auction design space.</li>\n<li><strong>Validators are hardware poor, but alignment rich.</strong> It is possible that validatoors are perfect candidates to influence block proposing. Humans are still capable of doing things that machines and code cannot. If bad proposing practices emerge or are suspected, validators feel ideally placed to intervene on behalf of the protocol. This can take the form of reporting proposers for ejection, or appointing proposers more aligned with themselves/their vision for Ethereum.</li>\n</ul>\n<h2><a name=\"why-would-validators-maintain-a-permissionless-market-9\" class=\"anchor\" href=\"https://ethresear.ch#why-would-validators-maintain-a-permissionless-market-9\"></a>Why would validators maintain a permissionless market?</h2>\n<p>I start this section with the advantages of a completely free market as laid out in the Investopedia article quoted in the previous section.</p>\n<blockquote>\n<ul>\n<li>It contributes to political and civil freedom since everybody freely chooses what to produce or consume.</li>\n<li>It contributes to economic growth and transparency.</li>\n<li>It ensures competitive markets.</li>\n<li>Consumers determine what products or services are in demand.</li>\n<li>Supply and demand create competition and ensure that the best goods or services are provided to consumers at a fair price.</li>\n</ul>\n</blockquote>\n<ul>\n<li>\n<p><strong>Permissionless markets = more competition</strong>. This is true at any given instant in time. However, over a long enough time horizon, a totally permissionless market may actually reduce competition (<a href=\"https://www.economicliberties.us/big-tech-monopolies-2/\" rel=\"noopener nofollow ugc\">see the numerous ongoing big tech lawsuits on monopolization</a>). With more competition comes tighter profit margins and a brittleness of players to survive market shocks. It is not obvious that permissionless markets can replenish competitors following market shocks. Without competitors, there is no competition.</p>\n</li>\n<li>\n<p><strong>Validator strategies should only be encodable</strong>. It is possible that validators should only be assumed to be able to hard-code their logic to remove subjectivity from validator tasks. This would restrict validator enforceability to attributable tasks. The key open question here is whether or not hardcoded rules can adapt to defend a decentralized system as well as a majority of its stake-weighted users. When the games that are harming the system (<a href=\"https://www.coindesk.com/tech/2023/12/06/ethereums-censorship-problem-is-getting-worse/\" rel=\"noopener nofollow ugc\">censorship laws</a>, off-chain agreements, cartelization, monopolization) are being played off-chain, this is particularly unclear.</p>\n</li>\n<li>\n<p><strong>Maintaining no in-protocol proposer requirements is simple and easy.</strong> <a href=\"https://en.wikipedia.org/wiki/Occam%27s_razor\" rel=\"noopener nofollow ugc\">Occam’s Razor</a>.</p>\n</li>\n<li>\n<p><strong>If it ain’t broke, don’t fix it.</strong> It is possible that a permissionless proposer market best empowers the majority of users. At the very least, by creating big-node small-node separation, leveraging a decentralized small-node set regardless of the big node market structure should maintain/improve censorship resistance. This is the case made for execution tickets without AEPs.</p>\n</li>\n</ul>\n<h1><a name=\"food-for-thought-10\" class=\"anchor\" href=\"https://ethresear.ch#food-for-thought-10\"></a>Food for Thought</h1>\n<p><img src=\"https://ethresear.ch/uploads/default/original/2X/3/3d004a4ec53173d13719798bd9d660cbbc67547c.jpeg\" alt=\"\" data-base62-sha1=\"8HDKlIHbfxiv0HWzJIzSzyABR0g\" width=\"375\" height=\"375\" role=\"presentation\"><br>\n<em>Some will see AEPs’ optional restriction of block proposing to the appointed set as a no-go and a contradiction to the permissionless ideals of Ethereum.</em></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/c/c794ab2f002f2180a1b658e0d4b7a52e57c9edba.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/c794ab2f002f2180a1b658e0d4b7a52e57c9edba\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/c/c794ab2f002f2180a1b658e0d4b7a52e57c9edba_2_517x249.jpeg\" alt=\"\" data-base62-sha1=\"stzxllawqVGgRrTUKyBsDpntANA\" width=\"517\" height=\"249\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/c/c794ab2f002f2180a1b658e0d4b7a52e57c9edba_2_517x249.jpeg, https://ethresear.ch/uploads/default/original/2X/c/c794ab2f002f2180a1b658e0d4b7a52e57c9edba.jpeg 1.5x, https://ethresear.ch/uploads/default/original/2X/c/c794ab2f002f2180a1b658e0d4b7a52e57c9edba.jpeg 2x\" data-dominant-color=\"514B48\"></a></div><p></p>\n<p><em>AEPs, like many others before, decouple validation from execution-block building and proposing. This protects the decentralization of the validator set. AEPs goes one step further, ensuring this decentralized set of protocol representatives can have a meaningful say in who should propose blocks, and what block-proposal standards should be adhered to. Making proposers accountable to the validators and users they represent might be as aligned as it gets.</em></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/appointed-execution-proposers-because-the-proposer-you-know/19284\">Read full topic</a></p>","link":"https://ethresear.ch/t/appointed-execution-proposers-because-the-proposer-you-know/19284","pubDate":"Fri, 12 Apr 2024 07:38:27 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19284"},"source":{"@url":"https://ethresear.ch/t/appointed-execution-proposers-because-the-proposer-you-know/19284.rss","#text":"Appointed Execution Proposers: Because the Proposer you know…"},"filter":false},{"title":"The End Game for Oracles","dc:creator":"0xNimrod","category":"Applications","description":"<p>Thanks to <a class=\"mention\" href=\"https://ethresear.ch/u/eomatan\">@EOmatan</a>, <a class=\"mention\" href=\"https://ethresear.ch/u/alonchayet\">@AlonChayet</a> , <a class=\"mention\" href=\"https://ethresear.ch/u/ittayeyal\">@IttayEyal</a> , <a class=\"mention\" href=\"https://ethresear.ch/u/obpeo\">@obpeo</a> and the all Lightblocks Labs team and a special thanks for <a class=\"mention\" href=\"https://ethresear.ch/u/sreeramkannan\">@sreeramkannan</a>, <a class=\"mention\" href=\"https://ethresear.ch/u/justindrake\">@JustinDrake</a> and <a class=\"mention\" href=\"https://ethresear.ch/u/vbuterin\">@vbuterin</a> for the inspiration</p>\n<h1><a name=\"hello-world-1\" class=\"anchor\" href=\"https://ethresear.ch#hello-world-1\"></a>Hello world;</h1>\n<p>Ethereum and Bitcoin faced challenges that were overcome with a very cautious approach, resulting in an extraordinary case study for global human coordination. Adding real-world data through oracles as another layer on top of it is a very promising next step. However, so far, we have taken this step forward without the same caution that is fundamental to the journey toward a decentralized ecosystem. Perhaps we were <strong>too close to the problem</strong>, focusing only on the outcome - making data accessible - and not being mindful enough about the process allowing it.</p>\n<h3><a name=\"the-problem-with-the-problem-2\" class=\"anchor\" href=\"https://ethresear.ch#the-problem-with-the-problem-2\"></a>The problem with the problem</h3>\n<p>The term “oracle problem” is misleading as it conflates the problem with the solution. The actual problem is the inherent inability of blockchains to dynamically interact with mutable, external data sources, while the “oracle” refers to the proposed solution. That is, an oracle refers to the infrastructure that provides blockchains with real-world data in a trustless and secure manner.</p>\n<p>Naive solutions come with many problems of their own, including latency, accuracy, cost, and more. <strong>These are not the oracle problem, but problems of oracles, and we as an industry haven’t been very mindful about this distinction</strong>. As a result, we are now at the point where we have some very interesting solutions for the problems of oracles, but we don’t have a sufficient solution to the actual oracle problem.</p>\n<p>After shifting the perspective to the right problem, we need to recognize that the latest challenges we tackled as a community were derived directly from our vision to eliminate a central point of failure and power. Solving the oracle problem with this dedication in mind is a journey that must follow the same standards.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/e/edc61b3ee5c274d504b987765fd3c01878d111e8.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/edc61b3ee5c274d504b987765fd3c01878d111e8\" title=\"4 (1)\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/e/edc61b3ee5c274d504b987765fd3c01878d111e8_2_284x375.jpeg\" alt=\"4 (1)\" data-base62-sha1=\"xVrBip3HbK05NPbREn69Cz9Bj6w\" width=\"284\" height=\"375\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/e/edc61b3ee5c274d504b987765fd3c01878d111e8_2_284x375.jpeg, https://ethresear.ch/uploads/default/optimized/2X/e/edc61b3ee5c274d504b987765fd3c01878d111e8_2_426x562.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/2X/e/edc61b3ee5c274d504b987765fd3c01878d111e8_2_568x750.jpeg 2x\" data-dominant-color=\"B6ABA8\"></a></div><p></p>\n<h3><a name=\"standards-introspection-3\" class=\"anchor\" href=\"https://ethresear.ch#standards-introspection-3\"></a>Standards Introspection</h3>\n<p>The Ethereum community holds itself to high standards for what we expect from a network.</p>\n<p>Let’s unpack this with a few examples of protocol standards that captured our mindshare recently as they touch some of the most agreeable underlying values of the community:</p>\n<ul>\n<li>It bothers us when there is a concentration of stake in a few operators.</li>\n<li>We talk about \"client diversity”, a topic not even on the radar for most projects.</li>\n<li>We see our home-stakers as incredibly valuable and cherish them as such.</li>\n</ul>\n<p>These are just a few examples of our standards.</p>\n<p>What we really want from a protocol is:</p>\n<ol>\n<li>It should <strong>work as long as the participants follow</strong> the rules.</li>\n<li>It should make a good case for <strong>why the participants will follow</strong> the rules.</li>\n<li>It should do that <strong>with <a href=\"https://ethresear.ch/t/proof-of-stake-basic-asssumption-risk/40/7\">minimal assumptions</a> about the participant’s behavior</strong> so that we can trust it to last even with different circumstances.</li>\n</ol>\n<p>We are very critical and uncompromising on that because we know—and we don’t let the day-to-day challenges cause us to deviate from our values—<strong>that our ultimate goal is to build a global, trust-minimized settlement layer.</strong></p>\n<p>To better understand the journey and challenges in finding a solution to the oracle problem, we should examine the significant work previously done in this field and how it aligns with our standards.</p>\n<h3><a name=\"previous-work-4\" class=\"anchor\" href=\"https://ethresear.ch#previous-work-4\"></a>Previous Work</h3>\n<p>There has been significant work in the oracle space, characterized by good intentions, progress, and innovation. Some solutions focus predominantly on user experience, treating the oracle as merely a feature that makes data accessible to smart contracts, thereby losing sight of the core properties of decentralized applications.</p>\n<p>Other solutions emphasize decentralization through their architecture, by distributing the process of fetching, verifying, and delivering data among multiple participants. This is a step in the right direction, but they have yet to convincingly overcome several challenges.</p>\n<ol>\n<li>Their network is operated by a selected, well-connected, and semi-internal permissioned set of nodes. That’s understandable - it’s hard to bootstrap a trustless system, but a good protocol needs to explain why it will pass the bootstrapping phase, not only why it will be good when it passes that.</li>\n<li>They retain centralized ownership of their smart contracts due to a lack of effective governance.</li>\n<li>The computation and incentives among the participants are not fully transparent or accessible to the public. So, their crypto-economic security hinges on the trust placed in the corporation that owns the oracle.</li>\n</ol>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/e/e53f91225a3c30719fcdf1747fb6b7effdc722d8.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/e53f91225a3c30719fcdf1747fb6b7effdc722d8\" title=\"Twitter post - 3 (1) (1)\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/e/e53f91225a3c30719fcdf1747fb6b7effdc722d8_2_517x291.jpeg\" alt=\"Twitter post - 3 (1) (1)\" data-base62-sha1=\"wI1wZYPBlYwUjblC4FEIk0IhZji\" width=\"517\" height=\"291\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/e/e53f91225a3c30719fcdf1747fb6b7effdc722d8_2_517x291.jpeg, https://ethresear.ch/uploads/default/optimized/2X/e/e53f91225a3c30719fcdf1747fb6b7effdc722d8_2_775x436.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/2X/e/e53f91225a3c30719fcdf1747fb6b7effdc722d8_2_1034x582.jpeg 2x\" data-dominant-color=\"383D34\"></a></div><p></p>\n<p>Essentially, we’re at a point in DeFi where oracles are many protocols’ weakest link because we trust them based on reputation and history  in a striking contrast to blockchains, which we trust due to their inherent design.  Fortunately, although there were many oracle malfunction incidents with some causable losses for users - we haven’t suffered from an FTX kind of incident regarding oracles.</p>\n<p>For those of you who are comfortable with the way things are because of  the lack of such an incident, we would love to introduce you to another battle-tested, efficient product with a fantastic business model that hasn’t failed just <a href=\"https://en.wikipedia.org/wiki/Central_bank\" rel=\"noopener nofollow ugc\">yet</a>.</p>\n<p>Obviously this is not how we do things around here, we aren’t chickens. - What?!</p>\n<h3><a name=\"a-completely-unrelated-tale-5\" class=\"anchor\" href=\"https://ethresear.ch#a-completely-unrelated-tale-5\"></a><em>A completely  <s>Un</s>related tale</em></h3>\n<p><em>Once upon a time, on a farm far away, there was a chicken named Alice who lived what could only be described as the dream life. The farmer, a paragon of punctuality and care, ensured their food was always delivered on the dot, fresh, plentiful, and best of all, completely free of charge. What chicken could ask for more? Alice, having hatched into this utopia, soaked up every second of her idyllic existence. For 1000 blissful days, she enjoyed the unparalleled generosity of her human benefactor, but on day 1001, everything changed. The farmer, the very architect of her paradise, approached with a machete in hand and abruptly ended Alice’s life.</em></p>\n<p><em>Well, that was an unexpected ending to the story -  wasn’t it?</em></p>\n<p>This is akin to Hume’s ‘problem of induction’: We are told to trust oracle X to execute well tomorrow since it executed well yesterday. This is not the kind of reasoning we are looking for.</p>\n<h2><a name=\"trust-design-meme690x360-75upload7mwodsyq5iegbkznbqtcbb1wvxwjpeg-6\" class=\"anchor\" href=\"https://ethresear.ch#trust-design-meme690x360-75upload7mwodsyq5iegbkznbqtcbb1wvxwjpeg-6\"></a><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/3/369783344325b0eb0d4385cd1841d89c559708cc.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/369783344325b0eb0d4385cd1841d89c559708cc\" title=\"trust design meme\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/3/369783344325b0eb0d4385cd1841d89c559708cc_2_517x270.jpeg\" alt=\"trust design meme\" data-base62-sha1=\"7MWoDSYq5IegbkZNBqTcBB1wVxW\" width=\"517\" height=\"270\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/3/369783344325b0eb0d4385cd1841d89c559708cc_2_517x270.jpeg, https://ethresear.ch/uploads/default/optimized/2X/3/369783344325b0eb0d4385cd1841d89c559708cc_2_775x405.jpeg 1.5x, https://ethresear.ch/uploads/default/original/2X/3/369783344325b0eb0d4385cd1841d89c559708cc.jpeg 2x\" data-dominant-color=\"433D31\"></a></div></h2>\n<h1><a name=\"eoracle-foundations-7\" class=\"anchor\" href=\"https://ethresear.ch#eoracle-foundations-7\"></a>eoracle foundations</h1>\n<h3><a name=\"a-problems-first-approach-8\" class=\"anchor\" href=\"https://ethresear.ch#a-problems-first-approach-8\"></a>‘A Problems First’ Approach</h3>\n<p>In light of our standards reflection and the evident misalignment in previous work, we advocate for a first principle approach to tackling the oracle problem. This strategy zeroes in on solving the fundamental issue of blockchain’s interaction with external off-chain data in the most rigorous and demanding manner possible. By adhering strictly to the high standards we’ve set, this approach prioritizes addressing the core challenge of trustless data integration. Other challenges around data and implementation are crucial, respected, and important to solve, but they can’t be of any significance if countering the essence of oracles in a decentralized ecosystem. These problems should be solved on top of and not instead of the core solution.</p>\n<h3><a name=\"how-do-ethereum-values-translate-to-oracles-9\" class=\"anchor\" href=\"https://ethresear.ch#how-do-ethereum-values-translate-to-oracles-9\"></a>How do Ethereum values translate to oracles?</h3>\n<p>Armed with a new perspective, and laser-focused approach on the problem, we should now make a list of  guidelines our protocol should follow in order for it to align with Ethereum standards and be able to rise to its crucial and complex role.</p>\n<ol>\n<li><strong>Decentralized Ownership</strong> - Oracles as evolving protocols need a way to adapt in the face of industry changes. A fully immutable protocol is not practical, and a decentralized architecture is only worth doing with decentralized ownership.</li>\n<li><strong><a href=\"https://ethresear.ch/t/proof-of-stake-basic-asssumption-risk/40/7\">Minimal Trust Assumptions</a></strong> - The security model should avoid additional assumptions on the entities involved other than - ‘<em>they like making money and dislike losing it</em>’.</li>\n<li><strong>Permissionless Participation</strong> - All roles within the protocol should be entirely open for anyone to participate.</li>\n<li><strong>Maximum Visibility of the Process</strong> - To trust how data is being aggregated, we must provide an immutable and “accessible for all” layer for the process to occur on.</li>\n<li><strong>Transparent Incentive Mechanism</strong> - The positive and negative incentives should be known to all and tracked publicly, as they are the driving forces of a well-designed system.</li>\n<li><strong>Proper Bootstrapping Model</strong> - The design should present a compelling story about how the protocol will work in a fully decentralized way and how it will get there.</li>\n</ol>\n<h3><a name=\"justin-drakes-suggestion-for-enshrined-eth2-price-feeds-10\" class=\"anchor\" href=\"https://ethresear.ch#justin-drakes-suggestion-for-enshrined-eth2-price-feeds-10\"></a>Justin Drake’s Suggestion for Enshrined Eth2 Price Feeds</h3>\n<p>We came across <a class=\"mention\" href=\"https://ethresear.ch/u/justindrake\">@JustinDrake</a> <a href=\"https://ethresear.ch/t/enshrined-eth2-price-feeds/7391\">suggestion</a> about an enshrined Ethereum stakers’ oracle, which sparked our thinking. The suggestion is about, in essence, adding another field to <code>[BeaconBlockBody]</code> for price feeds. This original approach has some performance limitations. Most importantly as <a class=\"mention\" href=\"https://ethresear.ch/u/vbuterin\">@vbuterin</a> <a href=\"https://ethresear.ch/t/enshrined-eth2-price-feeds/7391/4\">pointed out</a>, it increases the workload and potentially raises the entry barrier for home stakers to take part, once again emphasizing Ethereum’s uncompromising approach to security and decentralization.</p>\n<p>On the other side, this suggestion spotlights a new, bright and refreshing approach - use the same group of stakers, that we already trust (under minimal assumptions) and have them be the trust quorum for delivering data on chain. This way we can minimize additional trust assumptions for this crucial task.</p>\n<p>There was a lot to do in order for it to become something practical but the good news is that we realized that the biggest downside of the suggestion might be solvable - we don’t actually need all stakers, just a permissionless diverse sub-set of stakers that are up for another “job”.</p>\n<h3><a name=\"enter-eigenlayer-the-trust-marketplace-11\" class=\"anchor\" href=\"https://ethresear.ch#enter-eigenlayer-the-trust-marketplace-11\"></a>Enter EigenLayer - The Trust Marketplace</h3>\n<p>The change from ‘work’ to ‘capital’ as a commitment guarantee introduces the PoS ecosystem with the benefits of the efficiency of money, one of its features being that you don’t have to consume it in order to create value with it.</p>\n<p>We will stop the hand waving here because we still struggle to explain to our moms the innovation of restaking in traditional finance terms.</p>\n<p>In the eyes of a protocol, which has some kind of decentralized security model, trust is in fact the <strong>set of individual entities coordinating</strong> and <strong>their  incentives to follow the process.</strong></p>\n<p>For this trust-seeking protocol, EigenLayer suggests a Trust Marketplace. Here, we have to ask - <strong>Is some trust better than others?</strong> The short answer is - Yes.</p>\n<p>We should think of two ways to evaluate trust:</p>\n<p><strong>Economic Trust</strong> -  amount of capital at stake = <strong>Quantity</strong></p>\n<p><strong>Diversity Of Trust</strong>  -  number of different nodes and their decorrelation = <strong>Quality</strong></p>\n<p>In order to achieve security and liveness in a decentralized way, a protocol will need a sufficient amount of economic trust and a diverse, well-balanced set of nodes to carry it.<br>\nAlthough it’s theoretically possible to achieve a decentralized trust quorum for a protocol, in reality, only Bitcoin and Ethereum have achieved a sufficient level of decentralization. This is despite numerous protocols attempting to do so. This struggle could be referred to as the challenge of proper bootstrapping. Some great oracles fall into this category of having the right idea, and have a good explanation of how they will operate once they get past bootstrapping but don’t have a compelling plan about how they’re going to get to there.</p>\n<p>We believe that EigenLayer and restaking is exactly the missing piece for a superior oracle design - that could actually get there.</p>\n<h3><a name=\"stepping-into-the-arena-12\" class=\"anchor\" href=\"https://ethresear.ch#stepping-into-the-arena-12\"></a>Stepping into the Arena</h3>\n<p>In creating the architecture for a fully decentralized oracle network, our design is guided towards system that is inherently aware of its operational dynamics. This necessitates a comprehensive tracking mechanism for participant actions, their incentives (both positive and negative), and the resulting outcomes, all within a framework that guarantees transparency and immutability. In the near future, it should be run and managed by users and not a central authority.</p>\n<p>Ideally the best oracle infrastructure is Ethereum itself, where we have a set of nodes that take some observations about off-chain data, declare (submit/post) it on-chain for a smart contract that applies some aggregation and verification logic on the votes and concludes the aggregated and hopefully (if built correctly) accurate and secure outcome for smart contracts to use. This simple architecture has everything we want as guidelines for the protocol. Unfortunately, this solution is infeasible, the cost and latency resulting in the recording of all this process on-chain would be way above what a useful oracle can allow. S<strong>o we needed to come up with a database that we could afford to offload the computation</strong> to in order to minimize the target chain activity.</p>\n<p>Does that sounds like a scaling problem? We think so.</p>\n<h3><a name=\"scaling-problem-scaling-solution-13\" class=\"anchor\" href=\"https://ethresear.ch#scaling-problem-scaling-solution-13\"></a>Scaling problem? → Scaling solution</h3>\n<p>We concluded that establishing another PoS blockchain as an independent data and settlement layer will allow us to build an oracle that is mindful of the process, fully transparent, and eventually completely decentralized and owned by the users. This PoS blockchain, that we named “eoracle chain”, together with the task of fetching data, will be operated by Eigen operators - Ethereum validators that are willing to restake their ETH on the protocol and secure the network and the data processes. eoracle chain will allow us to maintain decentralized incentives for the oracle operators and to have all the calculations on-chain instead of on the client’s software. To this end, we store all their relevant data submissions and the aggregation of their data, and either reward or punish them according to their behavior.</p>\n<p>After outlining our desired design, we’ll now address some of the challenges and opportunities associated with building an PoS based oracle with EigenLayer.</p>\n<hr>\n<h1><a name=\"challenges-and-improvements-14\" class=\"anchor\" href=\"https://ethresear.ch#challenges-and-improvements-14\"></a>Challenges and Improvements</h1>\n<h3><a name=\"who-said-reconfiguration-15\" class=\"anchor\" href=\"https://ethresear.ch#who-said-reconfiguration-15\"></a>Who said Reconfiguration?!</h3>\n<p>Changing the set of validators over time is classically known as <em>reconfiguration</em>. Known solutions basically involve agreeing on updates to the committee as part of the consensus process for new blocks. That is, the decision of a block <span class=\"math\">i</span> includes the details of the committee that will generate block <span class=\"math\">i+1</span>.</p>\n<p>However, the validators of our chain are not determined on our chain but rather on Ethereum through the restaking and unstaking operations there. Therefore, each block includes a reference (hash pointer) to the latest Ethereum block. This implicitly determines the committee for the next block: the set of restakers at that Ethereum block.</p>\n<p>This is where the problem diverges from classical instances: The committee defined in that Ethereum block is temporary, and becomes deprecated once its members unstake. If this occurs, our blockchain might remain without an active committee.</p>\n<p>We overcome this by introducing a novel design we call <em>Aegis,</em> the algorithm behind eoracle chain, that protects (like the mythical shield) a derivative chain (eoracle chain) using a primary one (Ethereum).</p>\n<p>Aegis relies on routine checkpoints between Ethereum and Aegis. If Aegis is unable to update due to asynchrony, we trigger a reset on both chains to maintain progress without violating other consensus properties.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/9/9535b02546a77ecb1d55a5e52bbf197664f9a794.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/9535b02546a77ecb1d55a5e52bbf197664f9a794\" title=\"Untitled\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/9/9535b02546a77ecb1d55a5e52bbf197664f9a794_2_690x157.jpeg\" alt=\"Untitled\" data-base62-sha1=\"lhYauBUR5vbF4aQyX1W0fhNzhMo\" width=\"690\" height=\"157\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/9/9535b02546a77ecb1d55a5e52bbf197664f9a794_2_690x157.jpeg, https://ethresear.ch/uploads/default/optimized/2X/9/9535b02546a77ecb1d55a5e52bbf197664f9a794_2_1035x235.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/2X/9/9535b02546a77ecb1d55a5e52bbf197664f9a794_2_1380x314.jpeg 2x\" data-dominant-color=\"F2F2F2\"></a></div><p></p>\n<h3><a name=\"can-you-add-long-range-resistance-in-the-mix-16\" class=\"anchor\" href=\"https://ethresear.ch#can-you-add-long-range-resistance-in-the-mix-16\"></a>Can you add Long Range Resistance in the mix?</h3>\n<p>A central challenge of Proof of Stake blockchains is that of <em>Long-Range Attacks</em>. In a PoS blockchain, operators get to extend the chain based on their current staked tokens. This allows stakers from a long time ago to quickly produce a fictitious long branch of the blockchain. For a newly joining node, the validity of this branch is indistinguishable from the correct one generated over time by the network. Ethereum overcomes this by having a vast network of operators that monitor the blockchain and will discard such a fictitious branch. A newly joining node can always find a critical mass of reliable nodes to help with this.</p>\n<p>However, in a nascent PoS blockchain that does not yet have sufficiently many operators, long-range attacks are a concern. Aegis overcomes this by deriving its security from Ethereum itself. The checkpointing mechanism on Ethereum prevents an attacker from rolling back the Aegis (eoracle chain): they would need to roll back Ethereum itself to perform a long-range attack on Aegis.</p>\n<h3><a name=\"unbundling-token-utilities-17\" class=\"anchor\" href=\"https://ethresear.ch#unbundling-token-utilities-17\"></a>Unbundling Token Utilities</h3>\n<p>Decentralized oracle networks (DON) are protocols that act as a two-sided marketplace, hence a well-designed token design is a load barring for them. A design that doesn’t include a utility token will be much less efficient in aligning the interests of the different kinds of operators and users of the protocol. In addition, an oracle must have decentralized governance.</p>\n<p>However, although a token is fundamental for an oracle, the use of a native token for the security of the protocol comes with major risks. A native token suffers from two major disadvantages in relation to ETH when used for security. The first con is its fluctuating value that could cause major shifts in the oracle’s <em>Cost of Corruption.</em> The second weakness is its smaller market cap, resulting in a better ability for an attacker to extract additional gain by short selling, resulting in higher possible <em>Profit from Corruption.</em> These are very important factors from a cryptoeconomic security point of view.</p>\n<p>A dual token approach <a href=\"https://ethresear.ch/t/counter-proposal-to-enshrined-price-feeds-dual-token-oracles/7437\">as suggested by</a> <a class=\"mention\" href=\"https://ethresear.ch/u/vbuterin\">@vbuterin</a>, is to utilize ETH as the lion’s share of the security,  ensuring high ‘<em>Budget</em>’ for attacking  the protocol and a ‘C<em>ost’</em> of Attack based on the oracle native token.  In addition, the native token will be used for incentivizing positive behaviour, penalizing malicious actors and for decentralized ownership and governance. This way, we can enjoy stability, crypto-economic security, and flexibility of stake with ETH and alignment with the native token.</p>\n<h3><a name=\"nothing-at-stake-18\" class=\"anchor\" href=\"https://ethresear.ch#nothing-at-stake-18\"></a>“Nothing at stake”</h3>\n<p>To avoid oracles being manipulated and encourage honest behavior among data providers, we need a mechanism to detect and deter participants from submitting false data.</p>\n<p>Unlike well-defined protocol rules that can be programmatically verify based on information stored on-chain, real-world data seems to have a more subjective nature. For example, two operators could disagree on a piece of data without any malicious intent. They simply have different perceptions of what is “true”. Of course, resorting to a third-party ‘referee’ to settle such disagreements would contradict the goal of avoiding a central authority governing the protocol. How do we detect false reports in this subjective setting?</p>\n<p>We believe the first step towards a solution is to separate the aggregation from the basic task of securely introducing off-chain data into the blockchain. Traditionally, oracle operators fetch, aggregate, and publish data to the DON. We, however, adopt a different approach and divide this complex process into distinct phases.</p>\n<p>This approach brings several benefits. Firstly, specifying the task in detail (“submit event ‘E’ from source ‘XYZ’” instead of a general “submit data”) reduces the expected variance in submissions. This, in turn, enhances the robustness of fraud detection and our ability to measure “honesty” among data providers. Additionally, handling raw data, rather than aggregated data, provides more modularity and flexibility in the logic layer, as we’ll discuss next.</p>\n<h3><a name=\"modularity-and-the-problem-of-ever-changing-demand-19\" class=\"anchor\" href=\"https://ethresear.ch#modularity-and-the-problem-of-ever-changing-demand-19\"></a><strong>Modularity and the problem of ever changing demand</strong></h3>\n<p>Predicting short and long-term data demand is challenging. This includes determining the types of data needed for DApps, its usage, security requirements, and associated costs. Furthermore, each data field has its unique complexities. For instance, pricing data has distinctive properties and nuances compared to weather or RWA data. A well-designed oracle must support this flexibility and modularity requirement, ensuring that changes or adjustments in the logic layer do not compromise the system’s core security. We insisted on a fully transparent and immutable data process using the eoracle execution layer, with all raw data submissions on-chain. The result is a modular system that can accommodate any computation or data source users may require. The complexities and subtleties of different data types are crucial. With an oracle dedicated to continuous improvement of these solutions, we’ve created a system where flexibility and modularity are inherent. We encourage our users and the community to be meticulous and critical of this process, and to actively participate.</p>\n<hr>\n<h3><a name=\"eoracle-end-game-20\" class=\"anchor\" href=\"https://ethresear.ch#eoracle-end-game-20\"></a>eoracle End Game</h3>\n<p>The use and demand for off-chain data will change drastically in the next few years. New use cases will arise, different types of data will become relevant on-chain, and the vulnerabilities from this evolution will dictate new and complex security measures. The answer to the question of how some crucial piece of data is being aggregated, secured, priced, and incentivized is not a static one. A brilliant group of people could dedicate their career to analyze data demand, to establish algorithmic solutions for the right aggregation, and they could attract a specialized set of nodes to do the data provisioning. In the current state they will most definitely not be able to cover all the potential market needs. Instead, they will have to put a huge amount of effort in establishing the infrastructure to allow those algorithms.</p>\n<p>eoracle has a different plan in mind. We want to leverage the power of permissionless innovation and market dynamics to solve the oracle problem. We envision a perfect market for decentralized data and computation, deeply rooted in the belief that the complex oracle problem cannot be solved by a fixed product or algorithm. Instead, it requires a dynamic free market and a platform designed for permissionless innovation. Leveraging principles of <a href=\"https://en.wikipedia.org/wiki/Perfect_competition\" rel=\"noopener nofollow ugc\">perfect competition</a>, eoracle aims to create an ecosystem where supply and demand seamlessly meet. We are building a decentralized platform that serves as the coordination and settlement layer for innovation around bringing data and compute onto the blockchain.</p>\n<p>Our system will trustlessly act as a layer where operators could submit their raw observations on data. Smart contracts will be the algorithmic layer ensuring a fully transparent and immutable process of data aggregation and verification. Developers could request any kind of data with any kind of properties like security mechanisms or guarantees, insurance, latency, diversity, sourcing, and more.</p>\n<p>The use of EigenLayer operators as the active participants of the system is a natural choice, allowing a very flexible supply of work and stake - a crucial ingredient for a perfect competition marketplace.</p>\n<h3><a name=\"ending-but-essentially-just-the-beginning-21\" class=\"anchor\" href=\"https://ethresear.ch#ending-but-essentially-just-the-beginning-21\"></a>Ending - but essentially just the beginning</h3>\n<p>Guided by Ethereum’s foundational values and the trust marketplace enabled by EigenLayer, we seek to address the critical challenge of integrating off-chain data and compute without compromising on trust and decentralization. In addition, we envision the value paid by dapps using our oracle solution, will get paid directly to Ethereum validators who are providing the validation, keeping this value within the Ethereum ecosystem instead of going to the pockets of third party intermediaries. With the collective effort of the Ethereum community and the pursuit of solutions that adhere to core cypherpunk values, we hope to help build the next iteration of decentralized oracle networks and enable permissionless innovation through new use cases of decentralized applications, backed by Ethereum security.</p>\n            <p><small>6 posts - 3 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/the-end-game-for-oracles/19276\">Read full topic</a></p>","link":"https://ethresear.ch/t/the-end-game-for-oracles/19276","pubDate":"Wed, 10 Apr 2024 20:12:41 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19276"},"source":{"@url":"https://ethresear.ch/t/the-end-game-for-oracles/19276.rss","#text":"The End Game for Oracles"},"filter":false},{"title":"Zero-knowledge proofs of identity using electronic passports","dc:creator":"turboblitz","category":"zk-s[nt]arks","description":"<h1><a name=\"zero-knowledge-proofs-of-identity-using-electronic-passports-1\" class=\"anchor\" href=\"https://ethresear.ch#zero-knowledge-proofs-of-identity-using-electronic-passports-1\"></a>Zero-knowledge proofs of identity using electronic passports</h1>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/a/ae85fbbbb938d295752b4f8fcb38f3fcab695885.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/ae85fbbbb938d295752b4f8fcb38f3fcab695885\" title=\"282155110-514ae671-3c02-434f-ac6a-31ce20eec24d\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/a/ae85fbbbb938d295752b4f8fcb38f3fcab695885_2_690x154.jpeg\" alt=\"282155110-514ae671-3c02-434f-ac6a-31ce20eec24d\" data-base62-sha1=\"oTU8xNH8BEQKw9C1kGydQCd2BXD\" width=\"690\" height=\"154\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/a/ae85fbbbb938d295752b4f8fcb38f3fcab695885_2_690x154.jpeg, https://ethresear.ch/uploads/default/optimized/2X/a/ae85fbbbb938d295752b4f8fcb38f3fcab695885_2_1035x231.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/2X/a/ae85fbbbb938d295752b4f8fcb38f3fcab695885_2_1380x308.jpeg 2x\" data-dominant-color=\"624F5C\"></a></div><p></p>\n<p>Many applications need to verify their user’s identity online, whether it is nationality, age, or simply uniqueness. Today, this is hard. They are stuck between shady heuristics like tracking IP addresses and technologies like Worldcoin that need to deploy their infrastructure widely.</p>\n<p>Fortunately, UN countries in association with the International Civil Aviation Organization have built a great tool for us to piggyback on: electronic passports. They are issued by more than 172 countries and include an NFC chip with a signature of the person’s information, including name, date of birth, nationality and gender. Issuing countries make their public keys accessible in online registries, enabling the verification of signatures.</p>\n<h2><a name=\"a-circuit-for-passport-verification-2\" class=\"anchor\" href=\"https://ethresear.ch#a-circuit-for-passport-verification-2\"></a>A circuit for passport verification</h2>\n<p>For someone to prove their identity using a passport, they will have to do two things. First, read the content of their passport’s chip. This can be done easily with any NFC-enabled phone. Then, show a verifier that their passport has been correctly signed. Instead of sending all of their personal data for the verification to happen, they can generate a zero-knowledge proof that redacts some of their inputs.</p>\n<p>Our circuit will have to checks two things:</p>\n<ul>\n<li>The disclosed attributes have been signed correctly</li>\n<li>The corresponding public key is part of the public key registry of UN countries</li>\n</ul>\n<p>A simple circuit compliant with the electronic passport specs would look something like this:</p>\n<div>\n  <div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/e/e55186294a00f20a4e0fd0cdc8da1172a89d3e3e.png\" data-download-href=\"https://ethresear.ch/uploads/default/e55186294a00f20a4e0fd0cdc8da1172a89d3e3e\" title=\"B1_4A2ZxC.png\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/e/e55186294a00f20a4e0fd0cdc8da1172a89d3e3e_2_500x336.png\" data-base62-sha1=\"wIE0k9iREZTDIUOJGImJNLbxV7w\" width=\"500\" height=\"336\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/e/e55186294a00f20a4e0fd0cdc8da1172a89d3e3e_2_500x336.png, https://ethresear.ch/uploads/default/optimized/2X/e/e55186294a00f20a4e0fd0cdc8da1172a89d3e3e_2_750x504.png 1.5x, https://ethresear.ch/uploads/default/optimized/2X/e/e55186294a00f20a4e0fd0cdc8da1172a89d3e3e_2_1000x672.png 2x\" data-dominant-color=\"F8F4F3\"></a></div>\n</div>\n<p>Here is roughly what happens:</p>\n<ul>\n<li>Each datagroup stored in the passport contains some of the person’s information. The datagroups we are most interested in are the first one (nationality, age, etc) and the second one (photo). The circuit takes them as inputs along with the signing public key.</li>\n<li>Datagroups are hashed, concatenated and hashed again.</li>\n<li>The final result is formatted, hashed and signed by the country authority. We can use the public key to check this signature.</li>\n</ul>\n<p>This makes the following attributes disclosable: name, passport number, nationality, issuing state, date of birth, gender, expiry date, photo.<br>\nSome countries also provide additional data like place of birth, address, phone number, profession and a person to notify. Biometrics like fingerprint and iris are sometimes included but can’t be retrieved, as they require a special access key.</p>\n<p>In practice, we want our circuit to have a few other features:</p>\n<ul>\n<li>Instead of passing the country’s public key directly, we want the user to prove that the public key that signed their passport is part of the registry published by the ICAO. This can be done by passing a merkle proof of inclusion and having only the merkle root as a public input.</li>\n<li>To allow for selective disclosure of any attribute, we pass a bitmap as a public input that will redact some of the attributes.</li>\n<li>We want specific modules for age disclosure and nationality list inclusion. A range check can guarantee someone is above a certain age without disclosing the precise age, and an inclusion check can be done over a set of countries to prove someone is or is not a citizen of any country in a list.</li>\n<li>For applications like minting an SBT or voting, we want to check that the passport is not expired. This can be done by passing the current date and doing a range check over the date in the circuit. We can then check that the current date is correct using the block timestamp in a smart contract or server-side in offchain verification.</li>\n<li>For applications that need sybil-resistance, we want to store a nullifier that prevents using the same passport twice. The simplest approach involves storing a hash of the government’s signature, though this does not render the individual anonymous from the government’s perspective. There are other approaches, see <a href=\"https://ethresear.ch/t/privacy-preserving-nullifiers-for-proof-of-identity-applications/18551\">here</a> for a discussion of the tradeoffs.</li>\n</ul>\n<p>A map of a more complete circuit can be found <a href=\"https://hackmd.io/_uploads/rk9_ZaZeC.png\" rel=\"noopener nofollow ugc\">here</a>.</p>\n<p>One of the challenges is the <a href=\"https://hackmd.io/@TCEn_IDhTDWLjwyItiiBcQ/BJ4LX0m9p\" rel=\"noopener nofollow ugc\">number of signature algorithms used</a>. Most countries use common ones like RSA with SHA256, but the ICAO specifications are quite permissive and some countries chose to use hash functions like SHA512 or unusual padding formats. We currently support the most common one and we are working on <a href=\"https://github.com/zk-passport/proof-of-passport/issues/38\" rel=\"noopener nofollow ugc\">adding support for more</a>.</p>\n<h2><a name=\"applications-3\" class=\"anchor\" href=\"https://ethresear.ch#applications-3\"></a>Applications</h2>\n<p>Applications roughly fall into three categories: proof of humanity, selective disclosure and authentication.</p>\n<p>Proof of humanity can be used in general for sybil resistance. This includes voting, fair airdrops, quadratic funding and helping social media fight bots. If passports can’t be construed as a general solution today, they can be integrated into wider systems like Gitcoin Passport or Zupass.</p>\n<p>Selective disclosure has applications like privacy preserving age check. Some countries restrict buying alcohol, drugs or entering casinos for minors, and zk could help bringing better privacy to those controls.</p>\n<p>Another example of selective disclosure is proving one is not a citizen of any country in a set of forbidden countries. This could help creating an intermediate level of compliance between KYC-gated traditional finance and fully permissionless DeFi.</p>\n<p>Using passport signatures for authentication, one can build a ERC-4337 recovery module that asks for a proof from a specific passport as one of the conditions for recovery. Some passports also support Active Authentication, meaning they have their own private key and the ability to sign data. This would make them suitable for direct transaction signing, either for small transactions or in a multisig setup with other signers.</p>\n<h2><a name=\"limitations-4\" class=\"anchor\" href=\"https://ethresear.ch#limitations-4\"></a>Limitations</h2>\n<p>The most obvious limitations of using passport signatures are the following:</p>\n<ul>\n<li>The passport does not do any kind of biometric check when the chip is read. Therefore there is no straightforward way to know if the passport has not been borrowed or stolen.</li>\n<li>Most of the world population does not have a passport. Even in the US, only around 50% of the population owns a passport.</li>\n<li>Issuing authorities can create an arbitrary number of passports and cheat in systems that require passports for sybil resistance.</li>\n<li>Passports can be lost or revoked. Some countries allow citizen to keep their previous passport when they are issued a new one. Some people have dual citizenship. All those cases are hard to mitigate, as the signatures stay valid.</li>\n</ul>\n<p>Those limitations are all quite fundamental to the way passports work today. They can be addressed by aggregating attestations from multiple sources, which will be covered in a future post.</p>\n<h2><a name=\"current-state-5\" class=\"anchor\" href=\"https://ethresear.ch#current-state-5\"></a>Current state</h2>\n<p>Proof of Passport is <a href=\"https://github.com/zk-passport/proof-of-passport\" rel=\"noopener nofollow ugc\">fully open source</a>, from mobile app to circuits. If you are interested in contributing, please check <a href=\"https://github.com/zk-passport/proof-of-passport/issues\" rel=\"noopener nofollow ugc\">open issues</a>.</p>\n<p>While performance would have been a bottleneck a few years ago, work from teams like Polygon ID, arkworks and mopro have made client-side proving on smartphones quite fast. Generating a proof with the current circuit takes ~4 seconds on a recent iPhone.</p>\n<p>We are currently focused on shipping the mobile app for the first integrations. It allows users to mint an Soulbound Token disclosing <a href=\"https://testnets.opensea.io/fr/assets/goerli/0x64bfeff18335e3cac8cf8f8e37ac921371d9c5aa/0\" rel=\"noopener nofollow ugc\">only specific attributes they chose</a>, or none at all other than the validity of their passport. <a href=\"https://t.me/FlorentTavernier\" rel=\"noopener nofollow ugc\">Contact us</a> to try out the beta release.</p>\n<p>Thanks to <a href=\"https://github.com/remicolin\" rel=\"noopener nofollow ugc\">Rémi</a>, <a href=\"https://twitter.com/AndyGuzmanEth\" rel=\"noopener nofollow ugc\">Andy</a>, <a href=\"https://twitter.com/yush_g\" rel=\"noopener nofollow ugc\">Aayush</a>, <a href=\"https://github.com/yssf-io\" rel=\"noopener nofollow ugc\">Youssef</a> and <a href=\"https://twitter.com/viv_boop\" rel=\"noopener nofollow ugc\">Vivek</a> for contributing ideas and helping build this technology!</p>\n            <p><small>8 posts - 5 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/zero-knowledge-proofs-of-identity-using-electronic-passports/19263\">Read full topic</a></p>","link":"https://ethresear.ch/t/zero-knowledge-proofs-of-identity-using-electronic-passports/19263","pubDate":"Tue, 09 Apr 2024 20:32:22 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19263"},"source":{"@url":"https://ethresear.ch/t/zero-knowledge-proofs-of-identity-using-electronic-passports/19263.rss","#text":"Zero-knowledge proofs of identity using electronic passports"},"filter":false},{"title":"Analysis on ''Correlated Attestation Penalties''","dc:creator":"Nerolation","category":"Economics","description":"<h1><a name=\"analysis-on-correlated-attestation-penalties-1\" class=\"anchor\" href=\"https://ethresear.ch#analysis-on-correlated-attestation-penalties-1\"></a>Analysis on ‘‘Correlated Attestation Penalties’’</h1>\n<p>This is a quick quantitative analysis on anti-correlation penalties looking into its potential impact on staking operators and CL clients. Before getting into it, make sure to check out <a href=\"https://ethresear.ch/t/supporting-decentralized-staking-through-more-anti-correlation-incentives/19116/12\">Vitalik’s recent proposal</a> on anti-correlation incentives in his latest blog post.</p>\n<h2><a name=\"anti-correlation-penalties-2\" class=\"anchor\" href=\"https://ethresear.ch#anti-correlation-penalties-2\"></a>Anti-correlation Penalties</h2>\n<p>In the current landscape, stakers benefit from economies of scale: enhanced network connectivity, superior hardware reliability, and the expertise of devs managing the infra all improve with scale. Consequently, economies of scale act as a strong force towards centralization within blockchain networks.</p>\n<p><strong>To strengthen decentralization</strong>, it is essential to architect mechanisms that counteract the advantages of economies of scale.</p>\n<p>Fortunately, <strong>economies of scale are intrinsically linked with correlation effects</strong>: When a single operator runs many validators on one machine and experiences downtime, all those validators are affected at once. Thus, leveraging economies of scale comes with correlation effects. This results in a correlated risk and anti-correlation penalties punish those who leverage economies of scale to their advantage.</p>\n<blockquote>\n<p>In this context, the distinction between “anti-correlation incentives” and “correlation penalties” is minimal, as both strategies aim towards the same objective of promoting decentralization.</p>\n</blockquote>\n<p>It is important to note that the <strong>beacon chain lacks awareness of validator clusters</strong>. It perceives only individual validators, which appear largely indistinguishable from one another. Hence, anti-correlation incentives target the “hidden” connections among validators. While not guaranteeing improved decentralization in <strong>every</strong> instance, anti-correlation penalties may contribute positively to the broader objective of reducing centralization forces.</p>\n<h2><a name=\"vitaliks-initial-proposal-3\" class=\"anchor\" href=\"https://ethresear.ch#vitaliks-initial-proposal-3\"></a>Vitalik’s initial proposal</h2>\n<p>The initial proposal introduces the formula <span class=\"math\">p[i] = \\frac{misses[i]}{\\sum_{j=i-32}^{i-1} misses[j]}</span> and caps it at p = 4.</p>\n<p>This means, to determine the penalties of a specific slot, we maintain a moving average on the number of missed attestations over 32 slots and then compare it with the number of missed attestations for the current slot. In the case that the number of missed attestations in a slot is higher than the moving average, <span class=\"math\">p &gt; 1</span>, a correlated penalty is applied.</p>\n<p>This might look like the following example (assuming a moving avg. of 3 validators):</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/d/d6b39ff27167b40ba20e8a57952415c9d06c1b05.png\" data-download-href=\"https://ethresear.ch/uploads/default/d6b39ff27167b40ba20e8a57952415c9d06c1b05\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/original/2X/d/d6b39ff27167b40ba20e8a57952415c9d06c1b05.png\" alt=\"\" data-base62-sha1=\"uDl1quqM8b0xn3V6Pn67vwEhjiB\" role=\"presentation\" width=\"690\" height=\"432\" data-dominant-color=\"F1F0EF\"></a></div><p></p>\n<p>In the illustration above, validators missing their attestations in slots <span class=\"math\">n</span> and <span class=\"math\">n+2</span> benefit because few others missed theirs at the same time<br>\nFor slot <span class=\"math\">n+1</span>, a correlation penalty applies due to the number of missed attestations exceeding the moving average threshold of 3 per slot.</p>\n<h2><a name=\"analysis-4\" class=\"anchor\" href=\"https://ethresear.ch#analysis-4\"></a>Analysis</h2>\n<p>First, for reproduciability, the dataset I’m using contains all attestations between epoch 263731 (Feb-16-2024) and 272860 (Mar-28-2024).<br>\nThese are <strong>&gt;40 days of attestations</strong>, amounting to a total number of <strong>~9,3 billion observations</strong>.</p>\n<p>In the following, we simulate having implemented the formula that Vitalik suggested (see above) and determine the impact it would have had on attestation penalties. Furthermore, we compare it to the status quo to see what would change.</p>\n<h3><a name=\"staking-operators-5\" class=\"anchor\" href=\"https://ethresear.ch#staking-operators-5\"></a>Staking Operators</h3>\n<p>First, let’s look at the sum of all penalties for 4 clusters containing multiple different entities. While the large size cluster contains entities such as Lido, Coinbase or Kiln, the small size cluster is composed of solo stakers and rocket pool stakers. The mid-size cluster is everything in between.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/1/1c67834034e6473ad683d0422260830f4f3c4604.png\" data-download-href=\"https://ethresear.ch/uploads/default/1c67834034e6473ad683d0422260830f4f3c4604\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/1/1c67834034e6473ad683d0422260830f4f3c4604_2_690x276.png\" alt=\"\" data-base62-sha1=\"43h8VWxWhl46L3T3RUjUqv83XkU\" role=\"presentation\" width=\"690\" height=\"276\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/1/1c67834034e6473ad683d0422260830f4f3c4604_2_690x276.png, https://ethresear.ch/uploads/default/original/2X/1/1c67834034e6473ad683d0422260830f4f3c4604.png 1.5x, https://ethresear.ch/uploads/default/original/2X/1/1c67834034e6473ad683d0422260830f4f3c4604.png 2x\" data-dominant-color=\"EADDE3\"></a></div><p></p>\n<ul>\n<li>The large-size cluster would have had a higher penalty compared to the status quo. The same applied to the mid-size cluster although the effect is less strong.</li>\n<li>The small-size cluster would have profited by ending up with less penalties.</li>\n<li>The “unidentified” category comprises around 15% of all validators and definitely contains a large number of solo stakers that weren’t correctly classified as such because my solo-staker-classifier is highly conservative.</li>\n</ul>\n<p><strong>This initially confirms the expectation that there exist correlations that cause individual validators to either not miss or miss together with other validators run by the same entity.</strong><br>\n → <em>Check the Appendix I for the same graph showing the individual entities.</em></p>\n<p><strong>Let’s look at the cumulative impact anti-correlation penalties would have:</strong></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/d/df1285f3fa454538f545ec50ccd3e219316bdcd5.png\" data-download-href=\"https://ethresear.ch/uploads/default/df1285f3fa454538f545ec50ccd3e219316bdcd5\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/d/df1285f3fa454538f545ec50ccd3e219316bdcd5_2_690x164.png\" alt=\"\" data-base62-sha1=\"vPoa1Xdb0F7SOuFCtVTBKdQ0mIR\" role=\"presentation\" width=\"690\" height=\"164\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/d/df1285f3fa454538f545ec50ccd3e219316bdcd5_2_690x164.png, https://ethresear.ch/uploads/default/optimized/2X/d/df1285f3fa454538f545ec50ccd3e219316bdcd5_2_1035x246.png 1.5x, https://ethresear.ch/uploads/default/optimized/2X/d/df1285f3fa454538f545ec50ccd3e219316bdcd5_2_1380x328.png 2x\" data-dominant-color=\"F5F3F3\"></a></div><p></p>\n<ul>\n<li>As expected, for <strong>large entities</strong> (<em>left</em>), we can see a drift of the “anti-correlation penalty”-line from the status quo. This means that those entities categorized as “large-size” would have had higher penalties.</li>\n<li>For <strong>mid-size clusters</strong> (<em>mid</em>), this effect is the opposite, even though it’s not very significant.</li>\n<li>For <strong>small-size clusters</strong> (<em>right</em>), we see an improvement compared to the status quo. Those entities would have had smaller penalties with anti-correlation penalties in place.</li>\n</ul>\n<h3><a name=\"cl-clients-6\" class=\"anchor\" href=\"https://ethresear.ch#cl-clients-6\"></a>CL Clients</h3>\n<p>We can basically do the same for CL clients. The expectation is that there is a correlation in validators running the same client. Anti-correlation penalties should thus be higher for validators running majority clients.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/f/ff6792e1d47905fc1785b65d056f3f98412e648e.png\" data-download-href=\"https://ethresear.ch/uploads/default/ff6792e1d47905fc1785b65d056f3f98412e648e\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/f/ff6792e1d47905fc1785b65d056f3f98412e648e_2_690x431.png\" alt=\"\" data-base62-sha1=\"ArpEXNHJXTuq0uxjA3relkAgGe2\" role=\"presentation\" width=\"690\" height=\"431\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/f/ff6792e1d47905fc1785b65d056f3f98412e648e_2_690x431.png, https://ethresear.ch/uploads/default/original/2X/f/ff6792e1d47905fc1785b65d056f3f98412e648e.png 1.5x, https://ethresear.ch/uploads/default/original/2X/f/ff6792e1d47905fc1785b65d056f3f98412e648e.png 2x\" data-dominant-color=\"EADDE3\"></a></div><p></p>\n<p>Small deviations from the “<em>current situation</em>” bar are generally a good sign as it points towards the non-existance of “hidden” client bugs that cause validators missing out to attest - at least for the analysed time frame. Although, we do see some deviations from the status quo for all clients, the effects are rather negligible for Teku and Prysm.<br>\nLighthouse validators would improve their position while Lodestar validators would be worse-off with anti-correlation penalties.</p>\n<p>Notable, the result shown in the above chart is heavily depended on staking operators: e.g. if a single large staking operator who is using Lodestar goes offline because of network problems, it directly increases the correlation penalties for the client at the same time, even though the client software might be totally fine.</p>\n<h1><a name=\"conclusion-7\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-7\"></a>Conclusion</h1>\n<p>Implementing anti-correlation penalties is a great way to counter economies of scale without requiring the protocol to differentiate between individual validators.<br>\nWhile this analysis looked and staking operators and CL client, there are many more properties to analyse. This includes, for example, hardware setup, EL client, geographical location, ISP provider, etc.</p>\n<p>Finally, anti-correlation penalties are a great way to improve decentralization and the Ethereum community should definitely consider it in future updates.</p>\n<h2><a name=\"appendix-8\" class=\"anchor\" href=\"https://ethresear.ch#appendix-8\"></a>Appendix</h2>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/5/55ad2ff43ec81339eb797a4a87f4937cffbdd970.png\" data-download-href=\"https://ethresear.ch/uploads/default/55ad2ff43ec81339eb797a4a87f4937cffbdd970\" title=\"correlation_penalty_entity (10)\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/5/55ad2ff43ec81339eb797a4a87f4937cffbdd970_2_409x500.png\" alt=\"correlation_penalty_entity (10)\" data-base62-sha1=\"cdVDv3tvYsdXR7S69MOccr6ds9W\" width=\"409\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/5/55ad2ff43ec81339eb797a4a87f4937cffbdd970_2_409x500.png, https://ethresear.ch/uploads/default/optimized/2X/5/55ad2ff43ec81339eb797a4a87f4937cffbdd970_2_613x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/2X/5/55ad2ff43ec81339eb797a4a87f4937cffbdd970_2_818x1000.png 2x\" data-dominant-color=\"DECCD5\"></a></div><p></p>\n            <p><small>36 posts - 14 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/analysis-on-correlated-attestation-penalties/19244\">Read full topic</a></p>","link":"https://ethresear.ch/t/analysis-on-correlated-attestation-penalties/19244","pubDate":"Tue, 09 Apr 2024 08:23:06 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19244"},"source":{"@url":"https://ethresear.ch/t/analysis-on-correlated-attestation-penalties/19244.rss","#text":"Analysis on ''Correlated Attestation Penalties''"},"filter":false},{"title":"Zero-Knowledge Proof Vulnerability Analysis and Security Auditing","dc:creator":"Mirror","category":"zk-s[nt]arks","description":"<p>Zero-Knowledge Proof (ZKP) technology marks a revolutionary advancement in the field of cryptography, enabling the verification of certain information ownership without revealing any specific details. This technology, with its paradoxical yet powerful characteristics, provides a solid foundation for a wide range of applications, especially in enhancing the privacy and security of blockchain technology and other cryptographic systems. As ZKP technology increasingly becomes a part of the blockchain infrastructure, its importance for security and integrity becomes more pronounced. However, the complexity of ZKP implementation and the rapid iteration of the technology introduce various vulnerabilities, challenging the privacy and security it aims to offer.</p>\n<p>This study bases on the integrity, soundness, and zero-knowledge properties of ZKP to meticulously classify existing vulnerabilities and deeply explores multiple categories of vulnerabilities, including integrity issues, soundness problems, information leakage, and non-standardized cryptographic implementations. Furthermore, we propose a set of defense strategies that include a rigorous security audit process and a robust distributed network security ecosystem. This audit strategy employs a divide-and-conquer approach, segmenting the project into different levels, from the application layer to the platform-nature infrastructure layer, using threat modeling, linear code checking, and internal cross-review, among other means, aimed at comprehensively identifying vulnerabilities in ZKP circuits, revealing design flaws in ZKP applications, and accurately identifying inaccuracies in the integration process of ZKP primitives.</p>\n<p><strong>Read More</strong><br>\n<a href=\"https://eprint.iacr.org/2024/514\" class=\"onebox\" target=\"_blank\" rel=\"noopener nofollow ugc\">https://eprint.iacr.org/2024/514</a></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/zero-knowledge-proof-vulnerability-analysis-and-security-auditing/19241\">Read full topic</a></p>","link":"https://ethresear.ch/t/zero-knowledge-proof-vulnerability-analysis-and-security-auditing/19241","pubDate":"Tue, 09 Apr 2024 02:46:56 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19241"},"source":{"@url":"https://ethresear.ch/t/zero-knowledge-proof-vulnerability-analysis-and-security-auditing/19241.rss","#text":"Zero-Knowledge Proof Vulnerability Analysis and Security Auditing"},"filter":false},{"title":"Fraud Proofs Are Broken","dc:creator":"GCdePaula","category":"Layer 2","description":"<h1><a name=\"fraud-proofs-are-broken-1\" class=\"anchor\" href=\"https://ethresear.ch#fraud-proofs-are-broken-1\"></a>Fraud Proofs Are Broken</h1>\n<p><em>… but we can fix them.</em></p>\n<p>Optimistic rollups aim to inherit Ethereum’s security through fraud proofs. The reasoning is straightforward: a single honest validator can prove all dishonest validators are liars, and thus enforce the truth. Since anyone can be a validator (including you), securing any optimistic rollup is just a matter of setting up a node to run on your laptop. No need to trust anyone.</p>\n<p>The underlying assumption is that these fraud proof algorithms are permissionless. We know of three algorithms that aim for permissionless interactive fraud proofs. In no particular order: Cartesi’s <em>Permissionless Refereed Tournaments</em> (PRT), Arbitrum’s <em>Bounded Liquidity Delay</em> (BoLD), and <em>OP Stack’s Fault Proof System</em> (OPFP).</p>\n<p>They all have issues. <strong>They’re vulnerable, in different ways, to <a href=\"https://doi.org/10.1007%2F3-540-45748-8_24\" rel=\"noopener nofollow ugc\">Sybil attacks</a> that undermine the safety, settlement speed and/or decentralization of the fraud proof system.</strong></p>\n<p>Our discussion focuses on the theoretical properties of the proposed algorithms, rather than the current development stages of any specific protocol that may or may not have training wheels. If the underlying algorithm isn’t resistant to Sybil attacks, the training wheels can never be safely removed. Now, fraud proofs with a permissioned set of validators are certainly much better than no fraud proofs at all; it’s quite acceptable as an intermediary stage. However, we need to keep researching better algorithms.</p>\n<p>I’m a contributor in the Cartesi ecosystem, which provides an optimistic rollups solution. I’m part of the team developing the next iteration of our fraud proof protocol, mentioned above.</p>\n<p>This post has three purposes:</p>\n<ul>\n<li><strong>Establish a set of criteria to analyze fraud proofs.</strong> Quoting Vitalik, <a href=\"https://vitalik.eth.limo/general/2024/03/28/blobs.html\" rel=\"noopener nofollow ugc\">the ecosystem’s standards need to become stricter</a>.</li>\n<li><strong>Articulate why none of the candidates put forth so far meet these criteria.</strong> Including ours.</li>\n<li><strong>Call for open and public research collaboration between the optimistic rollups teams.</strong> This is a personal frustration of mine. Our attempts at public communication with these teams haven’t been successful at eliciting substantive academic discourse on the vulnerabilities and tradeoffs for existing fraud proof algorithms.</li>\n</ul>\n<p>This post is <em>not</em> about providing a solution to Sybil attacks in fraud proofs, nor is it about proposing a new algorithm. Furthermore, this post is concerned only with <em>interactive</em> fraud proofs; non-interactive fraud proofs have different challenges and criteria.</p>\n<h1><a name=\"criteria-2\" class=\"anchor\" href=\"https://ethresear.ch#criteria-2\"></a>Criteria</h1>\n<p>Optimistic rollups generally operate under two key assumptions: the base layer works (but can be arbitrarily censored for up to a week) and the presence of at least one honest validator. Under these assumptions, we need to design a protocol that allows anyone to participate while being resistant to Sybil attacks. Sybil attacks are the antagonist of this story, an ever-present adversary any permissionless protocol must face.</p>\n<p>We propose three properties for analyzing permissionless interactive fraud proofs: safety, promptness and decentralization. These properties should be viewed as spectra rather than binary. Loosely, a permissionless algorithm is:</p>\n<ul>\n<li><strong>Safe</strong> if it can reject all false states under the original assumptions;</li>\n<li><strong>Prompt</strong> if settlement cannot be delayed substantially (or indefinitely);</li>\n<li><strong>Decentralized</strong> if validating doesn’t require a lot of resources like hardware and funds.</li>\n</ul>\n<p>In an ideal world, we want the honest validator to win any dispute in a timely manner using nothing more than a toaster.</p>\n<p>We’ll assume the reader is generally familiar with fraud proofs. We’ll call the set of honest validators the <strong><em>hero</em></strong> (worst case scenario is just one validator), and the set of dishonest validators working in tandem the <strong><em>adversary</em></strong>. We’ll use the terms <em>validator</em> and <em>player</em> interchangeably.</p>\n<h2><a name=\"whats-at-stake-3\" class=\"anchor\" href=\"https://ethresear.ch#whats-at-stake-3\"></a>What’s at stake</h2>\n<p>A dispute puts the total value locked (TVL) of a rollup at stake. An incorrect states that gets accepted can be extraordinarily profitable for the adversary. However, the same is not true for the hero – the hero gets nothing of the TVL by winning.</p>\n<p>This financial imbalance puts the hero at an incredible disadvantage. At the limit, the adversary should be willing to burn a TVL’s worth of resources. What’s worse, different attackers may trustlessly coordinate through smart contracts and pool their resources.</p>\n<p>We cannot assume the hero can match a TVL’s worth of resources, not even when teaming up with others. We must assume the adversary has significantly more resources than the hero, given what’s at stake. It’s a lot harder to design good algorithms under these constraints.</p>\n<h1><a name=\"canetti-et-al-4\" class=\"anchor\" href=\"https://ethresear.ch#canetti-et-al-4\"></a>Canetti et al.</h1>\n<p>Traditional fraud proof protocols are based on the <a href=\"https://doi.org/10.1016/j.ic.2013.03.003\" rel=\"noopener nofollow ugc\">work of Canetti</a>. We’ll highlight a few important concepts. The basic idea is quite simple.</p>\n<p>Consider a setup with only two players. First, these players agree upon an initial state and a state-transition function (STF). They’ll run the computation on their machine by successively applying the STF to the initial state, and propose a final state to the blockchain. These proposals are called <em>claims</em>; they’re a commitment to the final state of a computation. If the players agree, all is well. If not, the system starts a verification game. A verification game consists of two phases: the <em>bisection phase</em> and the <em>one-step proof phase</em>. The bisection phase is an interactive binary search over the whole computation, trying to find where the players first disagree. This disagreement is called the <em>divergence</em>. Once the divergence is found, the blockchain applies the STF once (a <em>step</em>), and eliminates the adversary.</p>\n<p>Now consider a setup with many players. Naively extending the algorithm described above, there’s an attack where the adversary posts the honest claim but lose the game on purpose by playing dishonestly. This makes evident the fragility of Canetti with respect to Sybils: it doesn’t reveal lies, it reveals liars. We can’t group players with the same claim into teams. Each player must represent themselves and only themselves for all parts of the dispute, even when there are others with the same claim. Players’ signatures have to be part of the message.</p>\n<p>Canetti proposes a few ways to make verification games with many players, taking this fragility into consideration. Unfortunately, none of those approaches scale well on the number of players. This makes the algorithm unsuited for permissionless fraud proofs since they’d be susceptible to Sybil attacks.</p>\n<p>For example, the first fraud proof protocols of Cartesi and Arbitrum (based on Canetti) would fail the promptness property if made permissionless without further changes. Ed Felten wrote a <a href=\"https://research.arbitrum.io/t/solutions-to-delay-attacks-on-rollups/692\" rel=\"noopener nofollow ugc\">post</a> describing delay attacks, which are a type of Sybil attacks that compromises the promptness of the protocol. In short, there’s an attack where settlement is delayed linearly on the number of Sybils, which can be a very long time indeed.</p>\n<p>We need to design algorithms that can scale on the number of players, and thus be resistant to Sybil attacks. Otherwise, we won’t be able to make protocols permissionless.</p>\n<h1><a name=\"permissionless-refereed-tournaments-prt-5\" class=\"anchor\" href=\"https://ethresear.ch#permissionless-refereed-tournaments-prt-5\"></a>Permissionless Refereed Tournaments (PRT)</h1>\n<p>The PRT algorithm was developed by Cartesi. The paper can be found <a href=\"https://arxiv.org/abs/2212.12439\" rel=\"noopener nofollow ugc\">here</a>. The algorithm is focused on application-specific rollups, which have different requirements when compared to shared chains. This has influenced the design of PRT: it’s important that anyone can validate a rollup in a laptop with minimal stakes. (We’d argue this is also true for shared chains; ideally, the hero shouldn’t need a supercomputer or a gazillion dollars.)</p>\n<p>The key contribution of PRT is <em>computation hashes</em>. It addresses the fragility of Canetti described above, allowing players to be grouped into teams. This enables a more efficient tournament structure.</p>\n<h2><a name=\"computation-hashes-6\" class=\"anchor\" href=\"https://ethresear.ch#computation-hashes-6\"></a>Computation hashes</h2>\n<p>Claims in PRT are a stronger kind of commitment. Instead of a commitment just to a final state, claims are a commitment to the entire path of the computation (<em>i.e.</em> a <em>computation hash</em>). A computation hash is Merkle tree where each leaf is a hash representing the state at every state transition along the computation.</p>\n<p>Bisections in PRT require a valid Merkle proof that the intermediary state is consistent with the computation hash. This way, an adversary that posts the honest computation hash cannot lose the game on purpose (except by inaction). As such, PRT can allow anyone to bisect any claim, since the Merkle proofs guarantee the bisection is honest. There’s a fundamental shift: PRT can reveal lies, instead of just liars. Players’ signatures need no longer be part of the message.</p>\n<p>Therefore players can be grouped into teams and fight together. With this property, PRT creates a bracket-style tournament between claims, matching them pairwise and eliminating half the Sybils at each bracket level. <strong>This means the amount of work required of the hero is logarithmic in the number of Sybils</strong>; PRT scales well on the number of players.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/1/1afc14e3db541a2c67ed0bf8b0221edcf44c96ba.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/1afc14e3db541a2c67ed0bf8b0221edcf44c96ba\" title=\"have you tried logarithms?\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/1/1afc14e3db541a2c67ed0bf8b0221edcf44c96ba_2_296x303.jpeg\" alt=\"have you tried logarithms?\" data-base62-sha1=\"3QIuMPbCrMSET7MALq1tkrPqmN4\" width=\"296\" height=\"303\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/1/1afc14e3db541a2c67ed0bf8b0221edcf44c96ba_2_296x303.jpeg, https://ethresear.ch/uploads/default/optimized/2X/1/1afc14e3db541a2c67ed0bf8b0221edcf44c96ba_2_444x454.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/2X/1/1afc14e3db541a2c67ed0bf8b0221edcf44c96ba_2_592x606.jpeg 2x\" data-dominant-color=\"E5E3E3\"></a></div><p></p>\n<hr>\n<p>To make a claim, players need to post a stake. After a claim is made, there’s no need to post further stakes. Bisections are free, except for gas costs. Since the adversary needs to deposit one stake to create one Sybil, and half the Sybils are eliminated at each iteration, launching a Sybil attack is exponentially expensive.</p>\n<p>The hero needs only fight one match at a time, which means they’ll only ever need one computer. Furthermore, they need to deposit only a single stake. This means the decentralization property of PRT is great. Additionally, given the assumptions of optimistic rollups, the correct claim will always be enforced, which means PRT is safe.</p>\n<p>On promptness, delay grows logarithmically on the number of Sybils, which is nice since logarithms grow very slowly. Unfortunately, this logarithmic delay has high constants: each single match still takes about a week to complete. The logarithm of Sybils multiplied by a week is quite slow. It’s not fatally slow, but it’s still quite slow.</p>\n<p>At this point, PRT has reached a trilemma of safety, promptness and decentralization. A rollup can choose:</p>\n<ul>\n<li><strong>promptness and safety</strong> by increasing stakes (harming decentralization);</li>\n<li><strong>promptness and decentralization</strong> by reducing the maximum base layer censorship (harming safety);</li>\n<li><strong>safety and decentralization</strong> by making stakes small and keeping the maximum base layer censorship at seven days (harming promptness).</li>\n</ul>\n<p>Ideally, we’d want to have the three properties at the same time, but for PRT something will have to give. We believe the second option is acceptable for chains that don’t have a lot of TVL. But since the other algorithms were designed with high TVL in mind, for this comparison we’ll pick the third option.</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"></th>\n<th style=\"text-align:center\">PRT</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Safety</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Promptness</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/warning.png?v=12\" title=\":warning:\" class=\"emoji only-emoji\" alt=\":warning:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Decentralization</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n</tbody>\n</table>\n</div><h2><a name=\"multi-stage-disputes-7\" class=\"anchor\" href=\"https://ethresear.ch#multi-stage-disputes-7\"></a>Multi-stage disputes</h2>\n<p>The PRT paper describes two setups: single-stage and multi-stage. In practice, <em>if the state-transition function is a single virtual machine (VM) step</em>, the single-stage setup is prohibitive for large computations. Generating a computation hash with every state transition in a computation is extremely slow. We introduced the multi-stage setup to address this issue.</p>\n<p>The idea is to make the initial computation hash sparse, where the number of state transitions between each Merkle leaf is greater than one. This means we can’t resolve the divergence between two sparse computation hashes. The blockchain would need to perform too many state-transition functions.</p>\n<p>However, we can reduce the search space to the sparseness of that commitment. With a smaller search space, we have reduced the dispute to a smaller computation; we can recursively use the same method, but with a denser computation hash since the computation smaller. The base case is a fully dense computation hash that can be resolved normally. Players still need to post a stake at every nested tournament they wish to submit a claim, otherwise generating a Sybils would be cheap.</p>\n<p>This technique is clever, but introduces delays. In a two-stage setup, there’s a strategy where the adversary can delay settlement for the logarithm <em>squared</em> of the number of Sybils, making it strictly worse than the single-stage setup.</p>\n<p>The description and analysis of PRT above consider the faster single-stage setup. Although prohibitive if the state-transition function is a single virtual machine step, we can leverage ZK proofs and change the state-transition function from one VM step to several VM steps. This makes the single-stage setup possible in practice. Note that this is still an interactive fraud proof; it’s just a change to its state-transition function.</p>\n<p>Check <a href=\"https://twitter.com/stskeeps\" rel=\"noopener nofollow ugc\">Carsten Munk</a>’s presentation <a href=\"https://youtu.be/leCd5kyDTR8\" rel=\"noopener nofollow ugc\">here</a> about proving the execution of our virtual machine in ZK, using RISC Zero. Our benchmarks with low-end hardware are promising. This increases the hardware requirements from one laptop to one laptop with one GPU. Our <a href=\"https://github.com/cartesi/dave\" rel=\"noopener nofollow ugc\">ongoing implementation</a> (called Dave) currently uses the multi-stage setup. We’re moving to the single-stage setup because it has better promptness. We’re also engaging in more research to create an algorithm that achieves all three properties simultaneously.</p>\n<h1><a name=\"bounded-liquidity-delay-bold-8\" class=\"anchor\" href=\"https://ethresear.ch#bounded-liquidity-delay-bold-8\"></a>Bounded Liquidity Delay (BoLD)</h1>\n<p>In December 2022, Arbitrum <a href=\"https://research.arbitrum.io/t/solutions-to-delay-attacks-on-rollups/692\" rel=\"noopener nofollow ugc\">announced</a> their protocol was vulnerable to delay attacks in a permissionless setting. In the same post, they announced they had a solution, and that they’d post it soon. In August 2023, they released a <a href=\"https://github.com/OffchainLabs/bold/blob/main/docs/research-specs/BOLDChallengeProtocol.pdf\" rel=\"noopener nofollow ugc\">preliminary paper</a>, along with an <a href=\"https://github.com/OffchainLabs/bold\" rel=\"noopener nofollow ugc\">implementation</a>, naming it BoLD. The full paper is yet to be released. (One of the motivations of this text is also a call for teams to prioritize these discussions.) We look forward to the full release; we believe it will benefit the ecosystem as a whole.</p>\n<p>BoLD was developed independently from PRT (PRT was published first), but both algorithms reached similar techniques. In particular, BoLD also uses computation hashes and the recursive disputes technique with sparse computation hashes. We’ve described these two techniques in the PRT section above. We highlight that players need to post a stake to enter a challenge in BoLD.</p>\n<p>Unlike PRT, instead of setting up a tournament with brackets, in BoLD all claims fight each other simultaneously. Because of this and a novel clock technique, the settlement time is constant, regardless of the number of Sybils. The current implementation has a <a href=\"https://x.com/dzack23/status/1737864854059335905\" rel=\"noopener nofollow ugc\">16 day settlement time</a>. As such, the promptness property of BoLD is great. But there are trade-offs.</p>\n<p>The core issue of BoLD is safety, compromised by an attack we call <strong><em>proof of whale</em></strong>. It’s a kind of Sybil attack where a better funded adversary can win the dispute against the hero by exhausting the hero’s resources until they have no more resources to keep playing the game.</p>\n<p>Reiterating, winning a dispute is extraordinarily profitable for the adversary, but not for the hero. At the limit, the adversary should be willing to burn resources approaching the TVL of the rollup. It’s reasonable to assume the attacker is significantly better funded than the hero.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/2/2e390d880e5a7c2b330739c88e01e3550641a3a8.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/2e390d880e5a7c2b330739c88e01e3550641a3a8\" title=\"poor seal\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/2/2e390d880e5a7c2b330739c88e01e3550641a3a8_2_368x368.jpeg\" alt=\"poor seal\" data-base62-sha1=\"6AUckhfvPz10FsTcN6hAbhY1uZi\" width=\"368\" height=\"368\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/2/2e390d880e5a7c2b330739c88e01e3550641a3a8_2_368x368.jpeg, https://ethresear.ch/uploads/default/optimized/2X/2/2e390d880e5a7c2b330739c88e01e3550641a3a8_2_552x552.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/2X/2/2e390d880e5a7c2b330739c88e01e3550641a3a8_2_736x736.jpeg 2x\" data-dominant-color=\"A8A8A8\"></a></div><p></p>\n<p>The hero needs to spend three different kinds of resource throughout a dispute: compute, blockspace, and stakes. Since each of these can be acquired with money, <em>proof of whale</em> can be seen as exhausting the hero <em>financially</em>. However, these resources are on different dimensions, and will be analyzed separately.</p>\n<p>We’ll describe three variants to <em>proof of whale</em>, each exhausting a different resource.</p>\n<h2><a name=\"variant-one-zerg-rush-the-heros-servers-9\" class=\"anchor\" href=\"https://ethresear.ch#variant-one-zerg-rush-the-heros-servers-9\"></a>Variant one: Zerg Rush the hero’s servers</h2>\n<p>The first variant is an attack on the computational resources of the hero. The worst-case work required of honest parties is linear in the number of Sybils. Since the time is constant (one week) but the work is linear on the number of Sybils, hardware requirements grow linearly with the number of stakes the adversary is willing to burn.</p>\n<p>This attack is hard to defend against, because the hero must be able to scale his computational power dynamically, or always dimension it with the worst case scenario in mind. Furthermore, the adversary needs no extra computers to pull this off since they can completely fabricate the states without turning on a VM.</p>\n<p>Nevertheless, the adversary still has to burn one stake to create one Sybil. If the cost of stakes is irrelevant, then this attack is trivial to pull off. Increasing the stake to just match the cost of renting one laptop makes this attack as costly for the adversary as it is for the hero. In this case, if the adversary has more stakes than the hero has computers, then a wrong claim will win. Further increasing the stake increases the hero’s advantage.</p>\n<p>Increasing the stake as to dominate the cost of hardware does mitigate this attack. However, it’s harder for players to participate when stakes are higher, compromising the decentralization of the algorithm.</p>\n<h2><a name=\"variant-two-zerg-rush-the-heros-access-to-blockspace-10\" class=\"anchor\" href=\"https://ethresear.ch#variant-two-zerg-rush-the-heros-access-to-blockspace-10\"></a>Variant two: Zerg Rush the hero’s access to blockspace</h2>\n<p>The second variant is an attack on the hero’s access to blockspace. Blockspace can be acquired by expending funds (think paying ether for transaction costs), but it’s not the only way. If a player is a block producer in the base layer (or has a generous friend who is), they will have blockspace access without expending funds for transaction costs. In any case, blockspace is not free; players have a limited amount of it. As such, instead of modeling access to blockspace as funds, it’s better to think about blockspace as a total budget for transactions that each player consume along a dispute. This attack is <em>not</em> about denying the hero’s access to blockspace (<em>i.e.</em> censorship), but forcing the hero to use up their budget.</p>\n<p>All Sybils created by the adversary must be fought simultaneously by the hero. Each Sybil that eagerly participates in the bisection phase forces the hero to respond in kind. Playing the bisection phase to its completion, each eager Sybil forces both the adversary and the hero to include a number of transactions equal to the logarithm of the size of the computation. These transactions consume the budget of both adversary and hero.</p>\n<p>If the adversary has more blockspace access than the hero, then the adversary might be able to exhaust the hero’s blockspace access, depending on how many stakes the adversary is willing to burn. If the cost of stakes is irrelevant and the adversary has access to more blockspace than the hero, then a wrong claim will win.</p>\n<p>Increasing the stake to just match the cost of blockspace access gives the hero a two-fold advantage; the adversary has to pay one additional stake plus blockspace (the equivalent of two stakes), whereas the hero has to pay only one additional blockspace (the equivalent of one stake). Further increasing the stake-to-blockspace ratio increases the hero’s advantage, to the point where the advantage about equals this ratio.</p>\n<p>Increasing the stake as to dominate the cost of transaction fees does mitigate this attack. However, it’s harder for players to participate when stakes are higher, compromising the decentralization of the algorithm.</p>\n<p>It’s difficult to defend against this attack for several reasons. The adversary can use smart contracts to submit many claims and bisections at the same time, making their use of blockspace more efficient than the hero’s. Furthermore, depending on the magnitude of the whale, fees may skyrocket as blockspace becomes scarce, reducing the hero’s access to blockspace. Finally, if the adversary has the support of a block producer in the base layer, they can include transactions without having to pay (possibly skyrocketing) fees.</p>\n<h2><a name=\"variant-three-zerg-rush-the-heros-funds-11\" class=\"anchor\" href=\"https://ethresear.ch#variant-three-zerg-rush-the-heros-funds-11\"></a>Variant three: Zerg Rush the hero’s funds</h2>\n<p>If the stake is large, dominating both the cost of hardware and the cost of transaction fees, the adversary should use the third variant of <em>proof of whale</em>. The third variant hinges on the multi-level challenge setup that we described on previous sections. BoLD is set to use three levels of nested challenges.</p>\n<p>Reiterating, players need to post a stake at every challenge they wish to submit a claim, otherwise it would be cheap to generate Sybils. Every claim made at a non-leaf challenge may potentially spawn a sub-challenge. Take a two-stage setup: if the adversary launches a Sybil attack posting <code>N</code> claims at the first challenge, BoLD will have to spawn <code>N</code> second-level sub-challenges. This means the hero will have to submit <code>N</code> claims in the second level, one claim for each spawned sub-challenge. Posting <code>N</code> claims requires <code>N</code> stakes. Therefore, if the adversary has more stakes than the hero, then the adversary will win.</p>\n<hr>\n<p>Note that using the strategy described in the third variant also triggers the first and second variants. That is, <strong><em>proof of whale</em> forces the hero to have simultaneously more hardware <em>and</em> more blockspace <em>and</em> more stakes than the adversary has stakes.</strong> Otherwise, the hero will lose the dispute. This makes the system behave not unlike majority token voting, though possibly biased towards the hero depending on the setup. We’ll go into more details about the hero’s advantage in the next section.</p>\n<p><em>Proof of whale</em> is extremely hard to defend against because of the financial imbalance between hero and adversary. To make things worse, different attackers may trustlessly coordinate through smart contracts and pool their resources.</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"></th>\n<th style=\"text-align:center\">BoLD</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Safety</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/no_entry.png?v=12\" title=\":no_entry:\" class=\"emoji only-emoji\" alt=\":no_entry:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Promptness</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Decentralization</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/warning.png?v=12\" title=\":warning:\" class=\"emoji only-emoji\" alt=\":warning:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n</tbody>\n</table>\n</div><h2><a name=\"the-heros-advantage-12\" class=\"anchor\" href=\"https://ethresear.ch#the-heros-advantage-12\"></a>The hero’s advantage</h2>\n<p>The <em>proof of whale</em> issue was touched on this <a href=\"https://research.arbitrum.io/t/bold-question-about-number-of-defender-s-stake/9445\" rel=\"noopener nofollow ugc\">post</a> at Arbitrum’s research forum. In it, Arbitrum researchers mention a behavior of the protocol not described in the preliminary paper: BoLD has sub-challenges requiring a “mini-stake” instead of a full stake. We take their comment to mean the hero still needs stakes linear on the number of Sybils, but the constant significantly favors the hero. This constant is defined by the ratio between the stakes of each challenge level.</p>\n<p>However, the protocol setup has three levels of challenge (according to the preliminary paper). If the mini-stakes of the two final levels are the same, then we’re back to the original attack, shifted down one level: the adversary joins the root challenge once – paying a single full stake – and then joins the second challenge in earnest – paying one mini-stake for each Sybil. The hero must match the number of mini-stakes on the third level.</p>\n<p>It seems the optimal strategy for BoLD is to chose the same ratio between levels one and two, and levels two and three. This ratio should be as high as possible to foil <em>proof of whale</em> variant three. Furthermore, the smallest stake should to be high enough to foil <em>proof of whale</em> variants one and two.</p>\n<p>Let’s try some numbers. Suppose we want the hero to have an ten-fold resource advantage over the adversary. As such, we should choose a ratio of <code>10</code> between the stakes of each level. Suppose <code>$1,000</code> is just enough to cover for hardware costs and block access fees for any challenge. To keep the ten-fold advantage, we should set the smaller stake to about <code>$1,000 * 10</code>, otherwise the <em>proof of whale</em> variants one and two give the adversary a better advantage than the target of ten. This means the stakes for the top challenge should be set to <code>($1,000 * 10) * 10 * 10</code>, which is <code>$1,000,000</code>. This makes the system quite centralized, since few would be able to participate.</p>\n<p>Nevertheless, BoLD is still unsafe. Large shared chains have several billion dollars in TVL; that’s what at stake here. If the adversary is willing to burn one billion dollars to win several billion, then the hero needs to have resources in the hundred millions (one tenth of one billion), sitting in the bank just to protect against whales. Ten is way too small of an advantage considering what’s at stake.</p>\n<p>However, if we increase the advantage, we significantly hurt decentralization. For example, if we set the advantage to one hundred (which may not even be safe enough), the first level stake becomes <code>($1,000 * 100) * 100 * 100</code>, which is <code>$1,000,000,000</code>. We believe there’s no choice of parameters that makes the system reasonable.</p>\n<h2><a name=\"an-improvement-on-bold-13\" class=\"anchor\" href=\"https://ethresear.ch#an-improvement-on-bold-13\"></a>An improvement on BoLD</h2>\n<p>We suggest an improvement on BoLD: leveraging ZK proofs at the state-transition function to eliminate the use of sub-challenges, in the same way PRT is moving towards. This eliminates <em>proof of whale</em> variant three. Nevertheless, ZK is a huge engineering effort that has trade-offs of its own that must be considered carefully. Let’s call this improvement BoLD++.</p>\n<p>BoLD++ settles in constant time like BoLD, so it has great promptness. Furthermore, the hero only ever needs one stake, addressing the third variant of the <em>proof of whale</em> attack.</p>\n<p>However, BoLD++ is still susceptible to variants one and two of the <em>proof of whale</em> attack. Setting the stake high makes this attack prohibitively expensive, but unfortunately it compromises decentralization. In this setup, BoLD++ is quite centralized but not fatally so.</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"></th>\n<th style=\"text-align:center\">BoLD++</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Safety</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Promptness</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Decentralization</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/warning.png?v=12\" title=\":warning:\" class=\"emoji only-emoji\" alt=\":warning:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n</tbody>\n</table>\n</div><h1><a name=\"op-stacks-fault-proof-system-opfp-14\" class=\"anchor\" href=\"https://ethresear.ch#op-stacks-fault-proof-system-opfp-14\"></a>OP Stack’s Fault Proof System (OPFP)</h1>\n<p>The Optimism specs can be found <a href=\"https://specs.optimism.io\" rel=\"noopener nofollow ugc\">here</a>. In particular, the fault proof system is described <a href=\"https://specs.optimism.io/experimental/fault-proof/stage-one/fault-dispute-game.html\" rel=\"noopener nofollow ugc\">here</a>. The implementation is <a href=\"https://github.com/ethereum-optimism/optimism\" rel=\"noopener nofollow ugc\">here</a>. It has just been deployed to testnet.</p>\n<p>In the traditional conception of fraud proofs, dishonest players can say the correct thing but lose on purpose. Both PRT and BoLD use computation hashes to address this. OPFP has a different approach. It allows claims to be bisected multiple times by anyone, introducing a directed acyclic graph (DAG) of claims in which anyone can add more vertices. Claims are added by bisecting an existing claim in the DAG.</p>\n<p>Disputes in OPFP are comprised of many games that anyone can create and play. All games are played simultaneously, which makes the dispute finish in constant time. Each game has its own DAG, starting with a root claim that asserts the result of the rollup. There are two main ways honest validators will play these games:</p>\n<ul>\n<li><strong>Protect the game with the correct root claim.</strong> There’s only one game with the correct root claim.</li>\n<li><strong>Expose all other games as faulty.</strong></li>\n</ul>\n<p>A game is played by countering claims. But since claims are countered mainly by adding child claims to the DAG, we’re entering the territory of countering counters all the way down to the one-step proof. Countering a counter uncounters the original claim. In the end, in order for a claim to be considered uncountered, all of its children must be countered. To consider a claim countered, it’s enough that a single one of its children is uncountered. The hero protects the correct game by countering the faulty claims that have countered the correct claims. The hero exposes faulty games by countering its root claims, and countering all the counters to their counters.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/d/d57ff7c4e33092f6f1019e4ac46c6ff36e583570.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/d57ff7c4e33092f6f1019e4ac46c6ff36e583570\" title=\"I bet the Optimism developers play mono blue in MtG\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/d/d57ff7c4e33092f6f1019e4ac46c6ff36e583570_2_500x350.jpeg\" alt=\"I bet the Optimism developers play mono blue in MtG\" data-base62-sha1=\"usHS0kVDSAYsYlZbtUTNCvEwDWE\" width=\"500\" height=\"350\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/d/d57ff7c4e33092f6f1019e4ac46c6ff36e583570_2_500x350.jpeg, https://ethresear.ch/uploads/default/optimized/2X/d/d57ff7c4e33092f6f1019e4ac46c6ff36e583570_2_750x525.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/2X/d/d57ff7c4e33092f6f1019e4ac46c6ff36e583570_2_1000x700.jpeg 2x\" data-dominant-color=\"959C9C\"></a></div><p></p>\n<p>It’s clever, though a tad convoluted. We recommend reading OPFP’s specs, where this is explained in more details. A detail we should highlight is that posting a claim (through bisections or otherwise) requires posting a bond. This bond starts small, and grows exponentially as claims get closer to the leaf. The final value of this bond was set to cover the worst-case cost of a one-step proof.</p>\n<h2><a name=\"h-_proof-of-whale-2-electric-boogaloo_-15\" class=\"anchor\" href=\"https://ethresear.ch#h-_proof-of-whale-2-electric-boogaloo_-15\"></a><em>Proof of Whale 2: Electric Boogaloo</em></h2>\n<p>OPFP, however, suffers from a similar <em>proof of whale</em> attack as the original BoLD.</p>\n<p>The attack is straightforward. The adversary creates a script that bisects the correct claim in earnest. This can be improved by creating a smart contract that bisects many times, amortizing the base cost of an Ethereum transaction. This can be further improved by choosing the bisections in a way that the hero has to always compute a new state (in the worst case, the adversary can force the hero to post the entire computation on-chain). From time to time, the adversary also creates a new game by posting a faulty root claim. The hero has to counter all moves of either kind if they want to win.</p>\n<hr>\n<p>Since countering a claim requires compute, blockspace and bonds, <strong><em>proof of whale</em> forces the hero to have simultaneously more hardware <em>and</em> more blockspace <em>and</em> more bonds than the adversary has bonds.</strong> Otherwise, the hero will lose the dispute. This makes the system behave not unlike majority token voting.</p>\n<p>Unlike BoLD, we believe it’s not possible to tune the parameters to give an advantage to the hero. The hero has no relevant advantage over the adversary; if the adversary is somewhat better funded than the hero, the adversary will win. It’s reasonable to assume the attacker is significantly better funded than the hero given what’s at stake.</p>\n<p>Furthermore, we believe a winning adversary can recover both their bonds and the hero’s bonds, since the adversary’s claim will resolve correctly and the hero’s incorrectly. This makes a <em>proof of whale</em> even more profitable for the adversary.</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"></th>\n<th style=\"text-align:center\">OPFP</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Safety</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/no_entry.png?v=12\" title=\":no_entry:\" class=\"emoji only-emoji\" alt=\":no_entry:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Promptness</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Decentralization</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/warning.png?v=12\" title=\":warning:\" class=\"emoji only-emoji\" alt=\":warning:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n</tbody>\n</table>\n</div><h1><a name=\"conclusion-16\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-16\"></a>Conclusion</h1>\n<p>Some algorithms perform better than others, but it’s clear we’re not in an ideal situation. Reiterating, the ecosystem’s standards need to become stricter. Here’s the tally:</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Algorithm</th>\n<th style=\"text-align:center\">Safety</th>\n<th style=\"text-align:center\">Promptness</th>\n<th style=\"text-align:center\">Decentralization</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">PRT</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/warning.png?v=12\" title=\":warning:\" class=\"emoji only-emoji\" alt=\":warning:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">BoLD</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/no_entry.png?v=12\" title=\":no_entry:\" class=\"emoji only-emoji\" alt=\":no_entry:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/warning.png?v=12\" title=\":warning:\" class=\"emoji only-emoji\" alt=\":warning:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">BoLD++</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/warning.png?v=12\" title=\":warning:\" class=\"emoji only-emoji\" alt=\":warning:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">OPFP</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/no_entry.png?v=12\" title=\":no_entry:\" class=\"emoji only-emoji\" alt=\":no_entry:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/warning.png?v=12\" title=\":warning:\" class=\"emoji only-emoji\" alt=\":warning:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n</tbody>\n</table>\n</div><p>This is a call for collaboration. As a community, we need to fix fraud proofs. Furthermore, our individual implementations will be beneficial to all of us in a multi-prover future.</p>\n<p>We have a couple of promising ideas that attempt to improve fraud proofs. We’ll publish them soon as a public good to the ecosystem, and we hope it can start a conversation.</p>\n<p>Let’s nurture the <em>Infinite Garden</em> together. It all starts with openness. The ecosystem can only benefit from collaboration.</p>\n<h1><a name=\"afterword-17\" class=\"anchor\" href=\"https://ethresear.ch#afterword-17\"></a>Afterword</h1>\n<p>I’ve been supported by a remarkable group of people in the creation of this article.<br>\nI extend my deepest gratitude to:</p>\n<ul>\n<li><a href=\"https://w3.impa.br/~augusto/\" rel=\"noopener nofollow ugc\">Augusto Teixeira</a> and <a href=\"https://w3.impa.br/~diego/\" rel=\"noopener nofollow ugc\">Diego Nehab</a>, for their crucial collaboration in writing the article.</li>\n<li><a href=\"https://twitter.com/PedroArgento8\" rel=\"noopener nofollow ugc\">Pedro Argento</a> and <a href=\"https://github.com/stephenctw\" rel=\"noopener nofollow ugc\">Stephen Chen</a>, my co-conspirators in developing the fraud proof system.</li>\n<li><a href=\"https://twitter.com/ERC_Brandon\" rel=\"noopener nofollow ugc\">Brandon Isaacson</a>, <a href=\"https://twitter.com/stskeeps\" rel=\"noopener nofollow ugc\">Carsten Munk</a>, <a href=\"https://twitter.com/felipeargento\" rel=\"noopener nofollow ugc\">Felipe Argento</a>, <a href=\"https://github.com/guidanoli\" rel=\"noopener nofollow ugc\">Guilherme Dantas</a> and <a href=\"https://github.com/miltonjonat\" rel=\"noopener nofollow ugc\">Milton Jonathan</a>, for their insightful feedback and thorough review.</li>\n<li><a href=\"https://twitter.com/donnoh_eth\" rel=\"noopener nofollow ugc\">Donnoh</a> and <a href=\"https://twitter.com/WillemOlding1\" rel=\"noopener nofollow ugc\">Willem Olding</a>, for their gracious involvement in reviewing our work.</li>\n</ul>\n<p>I also extend my gratitude to <a href=\"https://cartesi.io\" rel=\"noopener nofollow ugc\">Cartesi</a> for funding the research and for providing the environment where the development could take place. We invite the reader to join us on <a href=\"https://discord.gg/pfXMwXDDfW\" rel=\"noopener nofollow ugc\">our Discord</a>, where we continuously engage in public research and debate these topics constantly.</p>\n            <p><small>14 posts - 6 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/fraud-proofs-are-broken/19234\">Read full topic</a></p>","link":"https://ethresear.ch/t/fraud-proofs-are-broken/19234","pubDate":"Mon, 08 Apr 2024 14:21:29 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19234"},"source":{"@url":"https://ethresear.ch/t/fraud-proofs-are-broken/19234.rss","#text":"Fraud Proofs Are Broken"},"filter":false},{"title":"Block-auction ePBS versus Execution Ticket","dc:creator":"terence","category":"Block proposer","description":"<h1><a name=\"block-auction-epbs-versus-execution-ticket-1\" class=\"anchor\" href=\"https://ethresear.ch#block-auction-epbs-versus-execution-ticket-1\"></a>Block-auction ePBS versus Execution Ticket</h1>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/9/92a53090dcf5ab40d39f98af4bb57e513407add8.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/92a53090dcf5ab40d39f98af4bb57e513407add8\" title=\"DALL·E 2024-04-07 15.26.59 - Design an image featuring the exact text &amp;#39;ePBS vs ET&amp;#39; in a clear, bold font against a deep space background. The background should showcase the beauty\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/9/92a53090dcf5ab40d39f98af4bb57e513407add8_2_500x500.jpeg\" alt=\"DALL·E 2024-04-07 15.26.59 - Design an image featuring the exact text 'ePBS vs ET' in a clear, bold font against a deep space background. The background should showcase the beauty\" data-base62-sha1=\"kVhCW3S3uXC6W90Tw4R2FvGKcxq\" width=\"500\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/9/92a53090dcf5ab40d39f98af4bb57e513407add8_2_500x500.jpeg, https://ethresear.ch/uploads/default/optimized/2X/9/92a53090dcf5ab40d39f98af4bb57e513407add8_2_750x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/2X/9/92a53090dcf5ab40d39f98af4bb57e513407add8_2_1000x1000.jpeg 2x\" data-dominant-color=\"394454\"></a></div><p></p>\n<p>This writeup compares ePBS and ET in their current sppec forms. It outlines their similarities and differences, including a table below for reference. First and foremost, it presents some disclaimers, related work, and relevant acronyms.</p>\n<h3><a name=\"disclaimers-2\" class=\"anchor\" href=\"https://ethresear.ch#disclaimers-2\"></a>Disclaimers</h3>\n<ul>\n<li>Enshrined proposer builder  (ePBS) referenced below primarily refers to block auction ePBS. There are various forms of PBS that people will discuss, such as slot auction PBS and others. The comparison below focuses mainly on block auction ePBS versus ET.</li>\n<li>Execution tickets (ET) referenced below are from the post in related work. It’s important to remember this was the first post on execution ticket design. The design is volatile, and nothing is final, including ePBS. It is highly subject to change in the coming months.</li>\n<li>The views expressed in this post are my personal views and do not reflect those of my team or company.</li>\n</ul>\n<h4><a name=\"related-work-3\" class=\"anchor\" href=\"https://ethresear.ch#related-work-3\"></a>Related work</h4>\n<p><a href=\"https://ethresear.ch/t/payload-timeliness-committee-ptc-an-epbs-design/16054\">Payload-timeliness committee (PTC) – an ePBS design</a> By Mike - July, 2023<br>\n<a href=\"https://ethresear.ch/t/execution-tickets/17944\">Execution Tickets</a> By Mike and Justin - Dec, 2023<br>\n<a href=\"https://ethresear.ch/t/minimal-epbs-beacon-chain-changes/18653\">Minimal ePBS Beacon Chain Changes</a> By Terence - Feb, 2024<br>\n<a href=\"https://ethresear.ch/t/epbs-design-constraints/18728/1\">ePBS Design Constraints</a> By Potuz - Feb, 2024<br>\n<a href=\"https://ethresear.ch/t/payload-boosts-in-epbs/18769\">Payload Boost</a> By Potuz - Feb, 2024<br>\n<a href=\"https://github.com/potuz/consensus-specs/pull/2/files\" rel=\"noopener nofollow ugc\">ePBS Consensus Spec</a> By Potuz (still work in progress)</p>\n<h4><a name=\"acronyms-abbreviations-4\" class=\"anchor\" href=\"https://ethresear.ch#acronyms-abbreviations-4\"></a>Acronyms &amp; abbreviations</h4>\n<p>ePBS - enshrined proposer builder separation<br>\nET - execution ticket<br>\nPTC - payload timeliness committee</p>\n<h4><a name=\"thanks-5\" class=\"anchor\" href=\"https://ethresear.ch#thanks-5\"></a>Thanks</h4>\n<p>Many thanks to <a href=\"https://twitter.com/barnabemonnot\" rel=\"noopener nofollow ugc\">Barnabé</a>, <a href=\"https://twitter.com/mikeneuder\" rel=\"noopener nofollow ugc\">Mike</a>, and <a href=\"https://twitter.com/potuz_eth\" rel=\"noopener nofollow ugc\">Potuz</a> for the comments on the draft.</p>\n<h2><a name=\"epbs-vs-et-similarities-6\" class=\"anchor\" href=\"https://ethresear.ch#epbs-vs-et-similarities-6\"></a>ePBS Vs ET Similarities</h2>\n<p>Both designs directly address our main issue: the relayer as a choking point. Today, a trustless path exists to allocate the execution proposing rights to yourself, that’s local building. ePBS creates a trustless path for the beacon proposer to allocate execution proposing rights to <em>someone else</em>. ET achieves this by excluding the execution proposer role from the consensus validator set. Critics often raise concerns about relayer bypassability in the ePBS design, but this point is usually countered by explaining that ePBS is not about removing the relayer. Instead, it’s about enabling validators and builders to enter into a trust-minimized agreement with one another without the presence of a trusted relay mediating the agreement. Builders can assume the relayer role and open an RPC port if needed.</p>\n<p>Both designs decouple the delivery of the consensus block from the execution block, ensuring the inclusion of the consensus block even if the execution block is missing or invalid. In ePBS, the proposer receives an unconditional payment. In ET, the protocol gets the payment through ticket burning, or MEV burn.</p>\n<p>Both designs enable the resale of block space. In the case of MEV-Boost today and the current ePBS design, the beacon proposer puts block space up for auction, and the highest bidder among builders wins. Once the bid and transaction root are committed, the block space is locked in, meaning the beacon proposer can sell it only once. In contrast, the slot-auction variant of ePBS only requires the beacon proposer to commit to the bid’s value and the execution proposer’s ID, offering the execution proposer the chance to resell the block space. When it comes to ET, the reselling rules are protocol-dependent: if the protocol allows for the reselling of the ticket, then the ticket holder gains the right to resell the block space. Otherwise, the ticket holder can only sell the building rights of a block to another party while still retaining the role of the original proposer.</p>\n<h2><a name=\"epbs-vs-et-differences-7\" class=\"anchor\" href=\"https://ethresear.ch#epbs-vs-et-differences-7\"></a>ePBS Vs ET Differences</h2>\n<p><a href=\"https://ethresear.ch/t/timing-games-implications-and-possible-mitigations/17612\">Timing game attack</a> occurs when a block proposer delays their proposal until the last second to extract more mev. In ePBS, the dynamics of the timing game remain unchanged, with consensus block proposers still incentivized to propose blocks close to the 4s mark.  In ET, consensus blocks no longer commit to execution blocks, removing the incentive for consensus validators to engage in the timing game. Execution proposers, however, are still incentivized to play the timing game, which raises questions of fairness, but this is no longer an issue for consensus.</p>\n<p>One of the differences is the timing of the execution block deadline. Currently, the deadline is when the proposer retrieves the header from the relayer, which is the start of the slot. In ePBS, the deadline remains the same. The slot starts when the execution block is committed in the consensus block. After that point, execution can no longer be changed. In ET, because the execution block does not commit to the consensus block, the execution deadline is pushed back to the second half of the slot. This could represent a significant mental shift for applications or MEV-related systems. Both designs present challenges in maintaining slot durations under 12s. In ePBS, the 12s duration is upheld by maintaining a small payload timeliness committee without additional rounds of aggregation. In ET, the current size of the execution committee is unknown.</p>\n<p>Both designs feature an inclusion list. In ePBS, the inclusion list for slot n is applied to slot n+1, even though the transactions may be available for slot n. In contrast, in ET, since the consensus block does not commit the execution block, the inclusion list for slot n can be directly applied to the execution block at slot n. This design is more advantageous, as there are fewer duplicated transactions over gossip between the inclusion list and the execution block of the same slot.</p>\n<p>Consensus blocks that do not commit to execution present specific trade-offs, with the primary concern being the potential for execution block equivocation. In ePBS, importing more than one execution block over p2p networks is only possible if multiple consensus blocks are processed. In this model, only the consensus block is subject to slashing. In ET, it is possible to import more than one execution block over p2p. Each is subject to its slashing rules, increasing the complexity of specs and implementation.</p>\n<p>Another trade-off involves the circuit breaker mechanism. Currently, to short-circuit a relayer for producing an invalid block, this mechanism involves an out-of-band design because the relayer’s identity is unknown on-chain, and the relayer’s address is not part of the consensus block. In contrast, ePBS records the builder’s address on the chain, and the builder’s public key and signature are included in the block, making it straightforward to bypass or short-circuit a builder if they fail to produce a block or produce an invalid one. The consistent production of execution blocks is less challenging in ePBS. In ET, the execution block proposal operates within its domain, complicating the implementation of a circuit-breaker-like system.</p>\n<h2><a name=\"open-questions-8\" class=\"anchor\" href=\"https://ethresear.ch#open-questions-8\"></a>Open Questions</h2>\n<p>ePBS contains open questions, such as how to address the issue of proposer split view. The current approach is to implement <a href=\"https://ethresear.ch/t/payload-boosts-in-epbs/18769\">payload boosts</a>, enabling the builder to inform PTC of its intention to withhold the execution block to reorg the current slot consensus block.</p>\n<p>ET contains open questions regarding economics, the scheme for selling and reselling tickets, and the slashing of execution blocks. The absence of slashing raises questions about its compatibility with Casper FFG’s principle of accountable safety and whether it’s just an LMD GHOST fault.</p>\n<p>The community’s decision is not between ePBS and ET but whether to pause until a satisfactory solution emerges or proceed with ePBS. Meanwhile, we are assessing whether ePBS is a stepping stone towards ET and whether they belong to the same skill trees. The subsequent table helps to clarify the overall picture.</p>\n<h2><a name=\"comparison-and-contrast-table-9\" class=\"anchor\" href=\"https://ethresear.ch#comparison-and-contrast-table-9\"></a>Comparison and Contrast Table</h2>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th>ePBS</th>\n<th>ET</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Reduce trust between validator and builder</td>\n<td>ePBS integrates mev-boost directly into the protocol, allowing beacon proposers to securely obtain bids from builders without the need for trust of an intermediate party. Builders may incorporate the relayer role by opening up its RPC port.</td>\n<td>ET achieves this by completely isolating the role of the execution proposer from validators. Validators do not need to propose an execution block at all.</td>\n</tr>\n<tr>\n<td>Unconditional payment</td>\n<td>In ePBS, if a consensus block stays canonical but the execution block is invalid or not revealed, the beacon proposer still receives payment as part of the protocol if and only if the consensus bid captures the full payment.</td>\n<td>In ET, proposing execution blocks is external to the beacon proposer’s responsibilities, which becomes irrelevant in this context.</td>\n</tr>\n<tr>\n<td>Circuit breaker</td>\n<td>In ePBS, if a builder is at fault, this can be observed on the chain. The beacon proposer for the next slot will bypass any submissions from the faulty builder’s address after a subjective timeout period.</td>\n<td>In ET, there is no circuit breaker mechanism. The beacon proposer does not select the execution builder.</td>\n</tr>\n<tr>\n<td>Timing game</td>\n<td>In ePBS, a proposer might delay getting the header until the last moment to capture more MEV. This approach can distort consensus and raise questions about fairness for the next slot’s proposer.</td>\n<td>In ET, an execution proposer might delay broadcasting the execution block until the last possible moment to capture MEV. While this does not distort the consensus process, it still raises questions about fairness for the proposer of the next slot.</td>\n</tr>\n<tr>\n<td>Inclusion list</td>\n<td>In ePBS, an IL for slot n is enforced for slot n+1. Transactions from slot n may already be part of the IL for n+1, which is acceptable. Only a summary is committed on chain.</td>\n<td>In ET, an IL for slot n could be applied to slot n itself, as the consensus block does not specify the contents of the execution block, only the builder’s identity.</td>\n</tr>\n<tr>\n<td>Mev burn</td>\n<td>In ePBS, implementing MEV burn is difficult due to the complexity of ensuring bid credibility. The protocol cannot prevent collusion between proposers and builders nor guarantee that builders will accurately report the value to be burned.</td>\n<td>In ET, the ticket itself is burned. Not burning full amounts could lead to profitable off-chain agreements between parties. Partial auction is hard to do here.</td>\n</tr>\n<tr>\n<td>Empty slot</td>\n<td>In ePBS, if a consensus block is skipped, no execution block can be produced. However, if the consensus block exists but the execution block is skipped, the slot will contain only consensus information. Empty slot can be made to apply a penalty on the proposer.</td>\n<td>The current thinking is the same as ePBS, but it may not be. Assuming SSF and a clean consensus/execution separation, it may be possible to have an execution block if the consensus block is missing.</td>\n</tr>\n<tr>\n<td>Slot time</td>\n<td>In ePBS, upholding a 12s slot time is highly required.</td>\n<td>We need concrete evidence to explain why it cannot be identical to ePBS.</td>\n</tr>\n<tr>\n<td>Fork choice rule</td>\n<td>(Block, slot) fork choice rule is implemented to enable attesters to vote against late block.</td>\n<td>Single slot finality is likely required.</td>\n</tr>\n<tr>\n<td>Execution block equivocation</td>\n<td>In ePBS, execution block equivocation is prevented because the consensus block commits to one execution block. Any execution block that is not committed is ignored from every node’s perspective.</td>\n<td>In ET, execution block/ticket equivocation is possible. It may require some form of slashing scheme. As with all slashing designs and implementations, this introduces an element of unknown complexity. The question is whether ticket equivocation is the same as execution block equivocation under ePBS’s slot auction scheme.</td>\n</tr>\n<tr>\n<td>Bid delivery</td>\n<td>In ePBS, if the timing game matters, the bid exchange will happen using RPC over P2P. RPC is faster, and P2P is just the default fallback for liveness.</td>\n<td>In ET, the timing game does not involve consensus. Bids can be exchanged directly over P2P. This means builders don’t need to open their RPC ports to the beacon proposer, reducing one less concern.</td>\n</tr>\n<tr>\n<td>Multi slots attack</td>\n<td>In ePBS, acquiring multiple slot proposals is more challenging due to the validator requirements, where each validator has a minimum bound. This is where shuffling becomes relevant.</td>\n<td>In ET, the number of ticket participants is unclear, making it increasingly relevant that a single party might propose multiple slots in succession. Multi-slot MEV extraction or types of attacks could become a more significant issue.</td>\n</tr>\n<tr>\n<td>Reselling</td>\n<td>In ePBS, the proposer requests and receives the header from the builder JIT. The proposer then reallocates this opportunity to the builder. Builders have the option to collaborate with searchers or work alongside other builders.</td>\n<td>In ET, the winning round’s execution proposer can resell its block space to other entities.</td>\n</tr>\n<tr>\n<td>Economics</td>\n<td>In ePBS, the builder pays the proposer for the bid.</td>\n<td>In ET, the protocol issues the ticket, and the execution proposer pays the proposal cost. The protocol sets the ticket price according to a supply and demand curve.</td>\n</tr>\n<tr>\n<td>Hard fork complexity</td>\n<td>In ePBS, transitioning to the ePBS regime through a hard fork based on a specific timestamp is relatively straightforward.</td>\n<td>In ET, implementing a hard fork necessitates some degree of forward planning regarding proposer execution. There may be ways to start the ticket system without two forks, for example, by conducting a one-off sale or employing a 1559 AMM style market. However, it is too early to make definitive statements at this stage.</td>\n</tr>\n<tr>\n<td>Attesting for execution reveal and validity</td>\n<td>In ePBS, a PTC committee is utilized to attest for the execution reveal on time and ensure its validity. The committee size is determined to be appropriate where aggregation of attestations is not required. Consensus block of the next slot includes PTC attestations.</td>\n<td>In ET, a PTC committee could be employed to verify execution validity. The specifics of how this operates will become clear once the specs are released.</td>\n</tr>\n<tr>\n<td>Open questions</td>\n<td>In ePBS, a significant design challenge involves proposers splitting attester views, which forces builders to decide whether to reveal their execution block. Payload boost represents a promising effort to address this issue.</td>\n<td>In ET, the main challenges include addressing execution block equivocation, developing a viable hard-forking strategy for transitioning to the ET framework, ensuring all processes adhere to the 12s timeframe, and detailing the protocol’s ticket issuance mechanism.</td>\n</tr>\n</tbody>\n</table>\n</div>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/block-auction-epbs-versus-execution-ticket/19232\">Read full topic</a></p>","link":"https://ethresear.ch/t/block-auction-epbs-versus-execution-ticket/19232","pubDate":"Mon, 08 Apr 2024 13:45:05 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19232"},"source":{"@url":"https://ethresear.ch/t/block-auction-epbs-versus-execution-ticket/19232.rss","#text":"Block-auction ePBS versus Execution Ticket"},"filter":false},{"title":"Charity Bond Account Generation for Social Networks and More","dc:creator":"MicahZoltu","category":"Economics","description":"<p>Also blogged here: <a href=\"https://listed.to/authors/33689/posts/50805\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Charity Bond Account Generation for Social Networks and More | Micah Zoltu</a><br>\nMusical rendition of this concept also available: <a href=\"https://bafybeibbfboye32palpogfpfqj7fzdiy7zqk4oq3aywf2qyis2by4ri3yq.ipfs.zoltu.io\" rel=\"noopener nofollow ugc\">Charity Bond Account Creation - Boy Band.mp3</a></p>\n<h2><a name=\"abstract-1\" class=\"anchor\" href=\"https://ethresear.ch#abstract-1\"></a>Abstract</h2>\n<p>A system for limiting account generation and stopping spam in systems with a moderation system in place.</p>\n<h2><a name=\"motivation-2\" class=\"anchor\" href=\"https://ethresear.ch#motivation-2\"></a>Motivation</h2>\n<p>Most successful online social networks have a problem with spammers.  Spammers are able to create many accounts and then spam with them.  These accounts inevitably get banned, but often not before the damage is done.  Online social networks want to make account generation free, because network effects dominate their success which means they can’t just charge people to create an account.</p>\n<h2><a name=\"solution-3\" class=\"anchor\" href=\"https://ethresear.ch#solution-3\"></a>Solution</h2>\n<ol>\n<li><strong>Provider creates a list of charities:</strong>  The provider creates a list of charities that they consider legitimate.  This list should be as comprehensive as possible and is not meant to reflect the values of the provider, but rather provide a list of “probably not scam” charities.  All of the charities should be able to accept donations in the form of a crypto-currency that is available on a blockchain that supports contracts.</li>\n<li><strong>User selects a charity:</strong>  When a user begins the account creation process, they choose one of the charities that the provider has included in its list.  The user should choose a charity they feel is legitimate, and one that they wouldn’t mind donating to.</li>\n<li><strong>User pays a bond:</strong>  After selecting a charity, the user places a bond that is of meaningful size.  This doesn’t need to be prohibitive, but it does need to be significant.  $5 (at today’s value) is perhaps a proper order of magnitude.</li>\n<li><strong>User’s bond is put into a contract that either returns to user or pays the charity:</strong>  The users bond does <em>not</em> go to the provider.  It is put into a contract where the provider can only do one of two things with it: (A) Return it to the user or (B) forward it to the charity selected by the user.  The contract associates the bond with the user account identifier on the provider’s platform.</li>\n<li><strong>If the user closes their account voluntarily, they get the bond back:</strong>  When a user terminates their account with the provider, their bond is returned to them after a reasonable timeout (days).</li>\n<li><strong>If the user’s account is closed by the provider for spamming, the bond goes to the charity:</strong>  If a user is caught spamming, their account is closed but they do not get their bond back.  Instead, the bond is forwarded to the charity the user selected.</li>\n</ol>\n<h2><a name=\"rationale-4\" class=\"anchor\" href=\"https://ethresear.ch#rationale-4\"></a>Rationale</h2>\n<ul>\n<li>The bond ensures that spammers will have to pay a significant fee for each spam account they create.</li>\n<li>The bond is given to a charity rather than the provider when the user spams to ensure there is no direct financial incentive for the provider to close accounts as a source of revenue.</li>\n<li>The bond is given back to the user rather than the charity on voluntary account closure to maintain a “0 cost” (exception: time value of money) account creation process.</li>\n<li>The charity list is created by the provider to ensure that users cannot designate a scam charity that just gives them their money back.</li>\n<li>The specific charity is selected by the user to ensure that if the account is closed inappropriately or the provider is otherwise malicious, there is a silver lining for the user in that a charity they like received a small donation.</li>\n<li>There is a timeout after account closure before refunding the user to prevent users from spamming and then immediately closing their account before getting caught.</li>\n</ul>\n<h2><a name=\"remarks-5\" class=\"anchor\" href=\"https://ethresear.ch#remarks-5\"></a>Remarks</h2>\n<p>This mechanism can be used for any system that is susceptible to spam and has an existing system in place for closing spammer accounts.  Social networks are the obvious top choice, but one could also imagine something akin to CloudFlare’s captcha-replacement token, where users can pay a bond to acquire a token and if their token is used as part of a spam attack, their bond goes to charity.</p>\n<p>This system also is remarkably resilient to some degree of false positives.  With a sufficiently large charity list, even when a user gets caught up in a mass ban, they may not feel that bad since their bond just went to a charity of their choice anyway.  This is in stark contrast to when traditionally paid user accounts get caught in a mass ban because the people doing the banning were financially rewarded for getting it wrong, which feels very bad for the user.  A user whose bond went to charity may simply shrug and create another account, writing off the bond loss as a charitable donation that they would/should have done anyway.</p>\n            <p><small>2 posts - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/charity-bond-account-generation-for-social-networks-and-more/19220\">Read full topic</a></p>","link":"https://ethresear.ch/t/charity-bond-account-generation-for-social-networks-and-more/19220","pubDate":"Sun, 07 Apr 2024 05:26:57 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19220"},"source":{"@url":"https://ethresear.ch/t/charity-bond-account-generation-for-social-networks-and-more/19220.rss","#text":"Charity Bond Account Generation for Social Networks and More"},"filter":false},{"title":"Replacing registration systems and captchas with VDFs to improve usability","dc:creator":"Uptrenda","category":"Layer 2","description":"<p>I’ve been thinking blockchains and the general web suffer from similar problems: they both try to make the creation of false identities difficult. Blockchains use computational and/or economic costs. Whereas, websites opt towards using visual challenges (captchas) to filter out bots. The problem with using captchas is the heavy degradation of usability. Services like ‘cloudflare’ now serve to guard websites from bots and force annoying puzzles on everyone. If there were a way to solve this problem without using captchas it would be extremely beneficial for users of the web.</p>\n<p>If we look at ‘hashcash’ it was originally designed as a computational stamp for sending emails. Its aim was to prevent spam in emails which is very similar to the aim of captcha. But using hashcash in this way would make it easy to parallelize. Attackers with botnets would still have the upper hand. There are some small changes that might make the idea workable though. Let’s throw out the idea of having individual proofs for actions and move towards a single, long-running verifiable delay function.</p>\n<p>account = VDF(…)</p>\n<p><strong>The aim of the algorithm will be to replace the need for manual account registration, especially the need to fill out captcha prompts by utilizing long-running VDFs that serve as a computational cost for reserving resources on other systems.</strong> A registration server will distribute a random IV to the user to run the VDF on. The user will give their intended run_time_speed for the VDF to the server which is accepted as long as it’s fast enough for modern hardware.</p>\n<p>account = VDF(server_iv, run_time_speed)</p>\n<p>Initial resources (say for that day) can be assigned to the user after a set period. In order for this to happen the user breaks up their VDF into checkpoints that the server can verify in parallel. E.g. see the construct of Gwern’s serial hashing for time-lock encryption. If the checkpoints are correct then the user must have kept running the VDF and they’re given their first resource allocation.</p>\n<p>resources = elapsed_time * run_time_speed * account_limit</p>\n<p>Since this scheme requires ‘bootstrapping’ to wait for an initial allocation of resources. It could be side-stepped by requiring a larger initial commitment of resources. Such as in a Storj-style file allocation where proofs would be made against files on disk. These files could then be reduced overtime as incurred computational cost offsets disk space resources.</p>\n<p>One useful consequence of using VDFs for accounts is complex, registration flows are no longer required. A service could manually check if the user has enough resources. Or they could outsource it to a specialized service who sends back signed vouches. If the user’s machine is offline they don’t automatically accrue more resources to spend on other systems. Their allocations are only refreshed while they’re active with their machines.</p>\n<p>Another problem that these account-based VDFs solves is it makes it easier to block abusive users. Traditional registration systems are often plagued by never-ending attacks because attackers have access to large pools of IPs. Simple ban-by-IP approaches don’t work here with VPNs leading to less privacy on the web. With account-based VDFs it would be harder to create sock puppets. One ban would invalidate an entire sequential VDF and VPNs could still be used. You could even require VDFs that were a certain maturity before they attained full permissions.</p>\n<p><strong>The main requirements for the VDF to be useful:</strong></p>\n<ol>\n<li>It should not be possible to paralyze it</li>\n<li>It should not degrade the performance of the machine it runs on</li>\n<li>One machine should ideally only be able to run one VDF</li>\n</ol>\n<p>Requirements (1) and (2) can be satisfied by using sequential, memory-based hashing. The difficulty for which should be chosen with respect to the ‘average consumer hardware’ at the time. Even though in reality it may be possible to run multiple VDFs on a single machine. The parameters should be chosen so that doing so would significantly degrade performance. At least so far as there’s a cost that regular users would not enjoy (this would also enable people infected with bots to detect infections since their machines would get marginally slower.)</p>\n<p>Requirement (3) is something that would be ‘nice to have’ but I suspect impossible to design algorithmically. If an attacker has access to hardware that could run many VDFs (it might have many cores or lots of memory), then they would be in a better position to launch attacks. I think that this might be an area where trusted computing may be useful. As an example – an Intel CPU could use trusted computing to vouch for its serial number and model ID. The registration server could then use this information to help reduce impersonation.</p>\n<p>These are my thoughts for now. Let me know what you think.</p>\n            <p><small>5 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/replacing-registration-systems-and-captchas-with-vdfs-to-improve-usability/19217\">Read full topic</a></p>","link":"https://ethresear.ch/t/replacing-registration-systems-and-captchas-with-vdfs-to-improve-usability/19217","pubDate":"Sat, 06 Apr 2024 04:49:08 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19217"},"source":{"@url":"https://ethresear.ch/t/replacing-registration-systems-and-captchas-with-vdfs-to-improve-usability/19217.rss","#text":"Replacing registration systems and captchas with VDFs to improve usability"},"filter":false},{"title":"Towards an implementation of based preconfirmations leveraging restaking","dc:creator":"cairo","category":"Applications","description":"<p><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/open_book.png?v=12\" title=\":open_book:\" class=\"emoji\" alt=\":open_book:\" loading=\"lazy\" width=\"20\" height=\"20\"> <strong>TL;DR:</strong> We introduce an exploratory implementation of a based preconfirmations protocol for sub-second transaction confirmations on Ethereum, inspired on <a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">Justin Drake’s proposal</a>.</p>\n<blockquote>\n<p>Thanks to <a class=\"mention\" href=\"https://ethresear.ch/u/diego\">@diego</a>, <a href=\"https://twitter.com/W_Y_X\" rel=\"noopener nofollow ugc\">William X</a>, <a class=\"mention\" href=\"https://ethresear.ch/u/ballsyalchemist\">@ballsyalchemist</a>, <a class=\"mention\" href=\"https://ethresear.ch/u/ed\">@ed</a>, <a href=\"https://twitter.com/tjbecker_x\" rel=\"noopener nofollow ugc\">Tim Becker</a>, <a class=\"mention\" href=\"https://ethresear.ch/u/justindrake\">@justindrake</a>, <a href=\"https://twitter.com/cooper_kunz\" rel=\"noopener nofollow ugc\">Cooper Kunz</a>, and others for the feedback and discussions.</p>\n</blockquote>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/e/e720183c77fcce7e0cfe98a3ca7f78c4a648666e.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/e720183c77fcce7e0cfe98a3ca7f78c4a648666e\" title=\"preconfirmations\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/e/e720183c77fcce7e0cfe98a3ca7f78c4a648666e_2_500x500.jpeg\" alt=\"preconfirmations\" data-base62-sha1=\"wYD3BGYCdg64XMMDTlqUS7gBwqG\" width=\"500\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/e/e720183c77fcce7e0cfe98a3ca7f78c4a648666e_2_500x500.jpeg, https://ethresear.ch/uploads/default/optimized/2X/e/e720183c77fcce7e0cfe98a3ca7f78c4a648666e_2_750x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/2X/e/e720183c77fcce7e0cfe98a3ca7f78c4a648666e_2_1000x1000.jpeg 2x\" data-dominant-color=\"A47F4F\"></a></div><p></p>\n<h1><a name=\"background-1\" class=\"anchor\" href=\"https://ethresear.ch#background-1\"></a>Background</h1>\n<p>Ethereum preconfirmations, or “preconfs” for short, are a proposed mechanism to enable faster transaction confirmation and improve the user experience on Ethereum, and subsequently, on layer 2 rollups and validiums. The key idea is to have Ethereum block proposers issue signed promises to users guaranteeing that their transactions will be included in a certain block. Users pay a tip to block proposers for this service. By acquiring preconfirmation promises from upcoming block proposers, users can get assurance of speedy inclusion, with latencies as low as 100ms. Preconfirmations can be applied for a broad list of use cases, like timely blob transactions for L2s with regular cadence, markets of future block space, and expressivity for inclusion constraints.</p>\n<h1><a name=\"implementation-2\" class=\"anchor\" href=\"https://ethresear.ch#implementation-2\"></a>Implementation</h1>\n<blockquote>\n<p>Check out the implementation on <a href=\"https://github.com/cairoeth/preconfirmations\" rel=\"noopener nofollow ugc\">GitHub</a></p>\n</blockquote>\n<p>This implementation of preconfirmations leverages EigenLayer’s AVS (Actively Validated Services) system to power the slashing mechanism, ensuring the security of preconfirmation guarantees. Ethereum validators who wish to participate in the preconfirmation service must opt-in via EigenLayer and run the AVS software, known as <code>preconf-operator</code>, which enables them to receive and confirm requests with preconfirmation promises for blocks that they will propose. In the event that a preconfirmation is violated (safety fault) or not included in the established block (liveness fault), a fault proof can be posted to the service smart contracts, resulting in the retroactive slashing of the validator’s stake.</p>\n<p>To simplify the user experience, we introduce <code>preconf-share</code>, a fork of MEV-Share that serves as a trusted matchmaker between users and block proposers. Users submit preconfirmation requests along with hints to the <code>preconf-share</code> node, which then gossips the requests to validators that are the next block proposers. Based on the request hints and the associated tip, block proposers decide whether to promise a preconfirmation. The <code>preconf-share</code> node receives and ranks the preconfirmation promises according to the user’s preferences, such as the desired and maximum block. Once a preconfirmation promise is selected, the block proposer receives the raw transaction that should be included in the promised block. The user receives a receipt of the preconfirmation, and the signed promise of the block proposer is made public, allowing it to be used as evidence if the promise is violated (alongside the proof).</p>\n<p>To further enhance the user experience and enable the use of preconfirmations in wallets without requiring changes, we introduce a trusted JSON-RPC wrapper for <code>preconf-share</code>. This wrapper is forked from <a href=\"https://github.com/flashbots/rpc-endpoint\" rel=\"noopener nofollow ugc\">Flashbot’s RPC endpoint</a> and allows users to define their default preconfirmation preferences and hint criteria.</p>\n<h2><a name=\"preconf-operator-3\" class=\"anchor\" href=\"https://ethresear.ch#preconf-operator-3\"></a>Preconf-Operator</h2>\n<p>Validators who wish to receive and promise preconfirmations must register in the EigenLayer service and run the <code>preconf-operator</code> AVS client. Upon initialization, this client registers the given validator to the service smart contract and begins listening to the event stream of the <code>preconf-share</code> node, which is run by a trusted third-party. When a preconfirmation request is received, the client evaluates its available parameters to determine whether to send a promise. For example, block proposers may be more receptive to requests that include logs or calldata information, even if they have lower tips, as it opens the door for value extraction or OFAC limitations. Conversely, requests with little information can be accompanied by a high tip to balance the lack of information and have a higher inclusion rate. Block proposers must also consider other preconfirmations they have made for future blocks to make sure that new preconfirmations don’t collide with transactions obtained from the global public mempool.</p>\n<p>If a block proposer sends a preconfirmation promise back to the <code>preconf-share</code> node, the <code>preconf-operator</code> client will wait for the defined window time in case they provided the best promise and consequently receive the complete preconfirmation information, including the raw transaction, to fulfill the promise. If a promise was made for a specific future block, the <code>preconf-operator</code> client will hold the transactions until its turn to propose that block. It is important to note that although the <code>preconf-share</code> node enforces a series of checks on both user requests and preconfirmation promises, block proposers can still be slashed if they provide an out-of-protocol promise for a block that they are not building/proposing (or if they delegated the work to another party that didn’t fulfill it).</p>\n<h3><a name=\"request-event-scheme-4\" class=\"anchor\" href=\"https://ethresear.ch#request-event-scheme-4\"></a><strong>Request Event Scheme</strong></h3>\n<pre><code class=\"lang-tsx\">{\n    hash: string,\n    inclusion: RequestInclusion,\n    logs?: LogParams[],\n    txs: Array&lt;{\n        to?: string,\n        functionSelector?: string,\n        callData?: string,\n    }&gt;,\n}\n</code></pre>\n<ul>\n<li><code>hash</code> : Hex-string of the transaction or request hash.</li>\n<li><code>inclusion</code>: Inclusion parameters, containing block target, max block, and tip.</li>\n<li><code>logs</code>: Array of JSON-encoded event logs emitted by executing the transaction using the last state.</li>\n<li><code>txs</code>: Transactions in the request, for each one:\n<ul>\n<li><code>to</code>: Transaction recipient address</li>\n<li><code>functionSelector</code>: 4-byte function selector.</li>\n<li><code>callData</code>: Calldata of the transaction.</li>\n</ul>\n</li>\n</ul>\n<h3><a name=\"promise-callback-scheme-5\" class=\"anchor\" href=\"https://ethresear.ch#promise-callback-scheme-5\"></a><strong>Promise Callback Scheme</strong></h3>\n<pre><code class=\"lang-tsx\">{\n    hash: string,\n    txs: Array&lt;{\n        tx: string,\n    }&gt;,\n}\n</code></pre>\n<ul>\n<li><code>hash</code> : Hex-string of the transaction or request hash.</li>\n<li><code>inclusion</code>: Inclusion parameters, containing block target, max block, and tip.</li>\n<li><code>logs</code>: Array of JSON-encoded event logs emitted by executing the transaction using the last state.</li>\n<li><code>txs</code>: Transactions in the request, for each one:\n<ul>\n<li><code>tx</code> : The raw transaction bytes.</li>\n</ul>\n</li>\n</ul>\n<h3><a name=\"proofs-slashing-6\" class=\"anchor\" href=\"https://ethresear.ch#proofs-slashing-6\"></a>Proofs &amp; Slashing</h3>\n<p>The <code>preconf-share</code> node publishes signed preconfirmation promises, enabling anyone to raise a dispute by posting a bond as soon as the target block has passed. The slashing smart contract verifies the authenticity of the preconfirmation promise by checking if it was correctly signed by a valid block proposer. If the signature is valid, the contract opens a challenge window, during which the block proposer has the opportunity to win the dispute by submitting a transaction inclusion proof.</p>\n<p>The proof is constructed off-chain by the block proposer and passed to the slashing smart contract, which then submits it to <a href=\"https://explorer.relicprotocol.com/mainnet/prover/0xf22Be64911Db8E84925c8f03C73Bb21ddD33B442\" rel=\"noopener nofollow ugc\">Relic Protocol’s Transaction Prover</a>. The prover verifies whether the given transaction hash was indeed included in the specified block. If the block proposer successfully proves the transaction’s inclusion, the disputer loses their bond, which is then transferred to the block proposer as a reward for their honesty.</p>\n<p>However, if the block prposer fails to respond within the designated challenge window, the disputer automatically wins the challenge. In this case, the block proposer is considered to have broken their promise and is subsequently slashed, with a portion of their stake potentially being redistributed as a reward to the disputer.</p>\n<p>Looking ahead, <a href=\"https://twitter.com/tjbecker_x\" rel=\"noopener nofollow ugc\">Tim</a> proposed the possibility of adding a a non-existence prover to streamline the dispute process. This approach would trade off the current design’s round of interactivity and communication for a higher cost. By utilizing a non-existence prover, the disputer could directly prove that a block proposer has broken their promise by demonstrating that the transaction hash is absent from the targeted block. This optimization would reduce the reliance on block proposer to actively participate in the dispute resolution process, thereby enhancing the efficiency and trustlessness of the slashing mechanism. Similar to the inclusion proof, the non-existence proof would also be generated off-chain by the disputer and submitted to the slashing smart contract for verification.</p>\n<h2><a name=\"preconf-share-7\" class=\"anchor\" href=\"https://ethresear.ch#preconf-share-7\"></a>Preconf-Share</h2>\n<p>The <code>preconf-share</code> component serves as an API endpoint for users to send and receive requests and for block proposers to send promises with extremely low latency and cost. Additionally, <code>preconf-share</code> acts as an intermediary between users and block proposers, shielding IP addresses on both sides. The features inherited from MEV-Share, such as hints via privacy settings and inclusion conditions, help control the principal-agent problem (PAP), where a block proposer could unbundle the request to include only the tip transaction while omitting the other transactions in the request. This is achieved through the following measures:</p>\n<ol>\n<li>When relaying user requests, only the transaction hash, hints, tip, and preferences are shared with the block proposers.</li>\n<li>The signed raw transactions are shared only with the block proposer that provided the best preconfirmation.</li>\n</ol>\n<h3><a name=\"preconf_sendrequest-8\" class=\"anchor\" href=\"https://ethresear.ch#preconf_sendrequest-8\"></a><code>preconf_sendRequest</code></h3>\n<p><code>preconf_sendRequest</code> allows users to send a preconfirmation request for signed transactions with privacy settings and inclusion conditions.</p>\n<pre><code class=\"lang-tsx\">{\n    inclusion: {\n        desiredBlock: string,      // hex-encoded number\n        maxBlock?: string,         // hex-encoded number\n        tip: string,               // hex-encoded number (wei)\n    },\n    body: Array&lt;\n        { tx: string }\n    &gt;,\n    privacy?: {\n        hints?: Array&lt;\n            \"calldata\" |\n            \"contract_address\" |\n            \"logs\" |\n            \"function_selector\" |\n            \"hash\" |\n            \"tx_hash\"\n        &gt;,\n        operators?: Array&lt;string&gt;,\n    }\n}\n</code></pre>\n<ul>\n<li><code>inclusion</code>: Parameters used by <code>preconf-share</code> node to rank and filter preconfirmation promises.\n<ul>\n<li><code>desiredBlock</code>: The best block to include this request.</li>\n<li><code>maxBlock</code>: The maximum block height in which this request <em>may</em> be included.</li>\n<li><code>tip</code>: The tip to pay the block proposer, denominated in wei, which must match the tip transaction in the request.</li>\n</ul>\n</li>\n<li><code>body</code>: An array of signed transactions. It must contain the tip transaction and match the <code>tip</code> amount in the <code>inclusion</code> parameters.</li>\n<li><code>privacy</code>: Preferences on what data should be shared to block proposers about the request.\n<ul>\n<li><code>hints</code>: Each item additively specifies which data about all transactions in the request to share. If no hints are specified, no transaction data is shared.</li>\n<li><code>operators</code>: Addresses of block proposers that have permission to receive this request and provide a promise.</li>\n</ul>\n</li>\n</ul>\n<h3><a name=\"preconf_confirmrequest-9\" class=\"anchor\" href=\"https://ethresear.ch#preconf_confirmrequest-9\"></a><code>preconf_confirmRequest</code></h3>\n<p><code>preconf_confirmRequest</code> allows block proposers to send a signed preconfirmation promise.</p>\n<pre><code class=\"lang-tsx\">{\n    preconf: {\n        request: PreconfSendRequestParams,\n        block: string\n    },\n    signature: string\n}\n</code></pre>\n<ul>\n<li><code>preconf</code>: The content of the preconfirmation, which is composed of the user request received from the stream and the block number where the block proposer will include the request transactions.\n<ul>\n<li><code>request</code>: The request received from the <code>preconf-share</code> stream.</li>\n<li><code>maxBlock</code>: The block where the block proposer will include the request transactions. It is verified by <code>preconf-share</code> that the block proposer is both an operator of the AVS and the proposer of that block.</li>\n</ul>\n</li>\n<li><code>signature</code>: The <code>preconf</code> parameter signed with the block proposer’s (operator) private key.</li>\n</ul>\n<h1><a name=\"transaction-flow-10\" class=\"anchor\" href=\"https://ethresear.ch#transaction-flow-10\"></a>Transaction flow</h1>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/2/2311d83e60a2dce3bc197a7fe47e2680ae7167ea.png\" data-download-href=\"https://ethresear.ch/uploads/default/2311d83e60a2dce3bc197a7fe47e2680ae7167ea\" title=\"swimlanes-f8dc5a95d3307a60e4fff4dc4dfb1bbf\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/2/2311d83e60a2dce3bc197a7fe47e2680ae7167ea_2_642x500.png\" alt=\"swimlanes-f8dc5a95d3307a60e4fff4dc4dfb1bbf\" data-base62-sha1=\"50eWv3u3Ru1hFZFqExhQgyAQHAC\" width=\"642\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/2/2311d83e60a2dce3bc197a7fe47e2680ae7167ea_2_642x500.png, https://ethresear.ch/uploads/default/optimized/2X/2/2311d83e60a2dce3bc197a7fe47e2680ae7167ea_2_963x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/2X/2/2311d83e60a2dce3bc197a7fe47e2680ae7167ea_2_1284x1000.png 2x\" data-dominant-color=\"FAFAF8\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/a/a00cc30ec982528b24e8cab451abde471e7f6b36.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/a00cc30ec982528b24e8cab451abde471e7f6b36\" title=\"preconf-post-final\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/a/a00cc30ec982528b24e8cab451abde471e7f6b36_2_690x309.jpeg\" alt=\"preconf-post-final\" data-base62-sha1=\"mPRJJnuGoS3YsLyGxOkrX7f22Vw\" width=\"690\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/a/a00cc30ec982528b24e8cab451abde471e7f6b36_2_690x309.jpeg, https://ethresear.ch/uploads/default/optimized/2X/a/a00cc30ec982528b24e8cab451abde471e7f6b36_2_1035x463.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/2X/a/a00cc30ec982528b24e8cab451abde471e7f6b36_2_1380x618.jpeg 2x\" data-dominant-color=\"F7F4F4\"></a></div><p></p>\n<h1><a name=\"security-11\" class=\"anchor\" href=\"https://ethresear.ch#security-11\"></a>Security</h1>\n<p>The economic security of this protocol relies on the AVS implementation using EigenLayer. For the guarantees to be considered secure, the cost of corruption must exceed the profit from corruption, creating a deterrent against malicious behavior. Under the current Ethereum design, stakers can have a maximum of 50% (16 ETH) of their total staked ETH slashed. Consequently, block proposers are incentivized to violate preconfirmation promises if:</p>\n<ul>\n<li>The sum of tips in the request is more than 16 ETH. In this case, the block proposer can unbundle the request and only include the tip transactions in a block, profiting from the tips while avoiding the execution of the other transactions.</li>\n<li>The sum of profits from extracting value using the request transactions is more than 16 ETH. For example, a block proposer may choose to unbundle a request containing a white-hat funds rescue and tip, and only include the tip while replacing the white-hat rescue with one done by themselves (essentially keeping both the rescue funds and tip), leading to partial inclusion.</li>\n</ul>\n<p>It’s important to note that slashed ETH can potentially be used by the AVS to compensate parties that were wronged, such as the affected users in these scenarios. However, external factors like gas costs, complexity, and opportunity costs also influence the cost of corruption.</p>\n<p>In the context of MEV, the 16 ETH slashing penalty may not always be sufficient to economically secure transactions, a problem similar to that which occurs under PBS implementations. According to data from <a href=\"https://libmev.com/\" rel=\"noopener nofollow ugc\">libMEV</a> for the period from February 23 to March 24, five bundles yielded profits exceeding 16 ETH for searchers: <a href=\"https://libmev.com/bundles/0x37bc7187d9aabad293c07b88265941e0cf5e5885c3c5a39ac0cd4dd3d3120cd3\" rel=\"noopener nofollow ugc\">22.33 ETH</a>, <a href=\"https://libmev.com/bundles/0xe725d9e25199f27e065d7d1dd09468ee65bdf54d5cc1b1ee238c492257083e92\" rel=\"noopener nofollow ugc\">32.53 ETH</a>, <a href=\"https://libmev.com/bundles/0x52c0a7cfae21e8e147aaabef789ae006e6a9e42d380dbcd59b0b81bc4577dfb7\" rel=\"noopener nofollow ugc\">59.19 ETH</a>, and <a href=\"https://libmev.com/bundles/0x013073ecf628cee04c79459c806aaf35943b6f29b6b406db25b7c87793dbe1fd\" rel=\"noopener nofollow ugc\">124.36 ETH</a>. Nevertheless, it’s worth noting that out of the 183,440 bundles that landed on-chain during this period, the average profit was $12.53, out of the total value. This suggests that the vast majority of transactions can be economically secured by the 16 ETH slashing penalty.</p>\n<p>To enhance the security of individual preconfirmation promises, three potential approaches can be explored:</p>\n<ol>\n<li>Implementing an attestation system that provides additional assurances beyond the slashing mechanism.</li>\n<li>An idea from <a class=\"mention\" href=\"https://ethresear.ch/u/diego\">@diego</a> is to extend the AVS or EigenLayer smart contracts to allow block proposers to stake additional ETH, increasing the potential cost of violating a preconfirmation promise.</li>\n<li>As noted by <a class=\"mention\" href=\"https://ethresear.ch/u/ed\">@ed</a>, implementing preconfirmations using enshrined execution tickets, which aims to solve the economic security problem as well.</li>\n</ol>\n<h1><a name=\"looking-ahead-12\" class=\"anchor\" href=\"https://ethresear.ch#looking-ahead-12\"></a>Looking Ahead</h1>\n<p>Having developed and tested the protocol on local networks, the natural next step is to deploy it on a testnet environment. This will provide valuable insights into how the various components and dynamics of the system play out in a more realistic setting.</p>\n<p>One key area to explore is the interaction between preconfirmations and mev-boost. In the current implementation, block proposers act as both block builders and proposers. However, integrating preconfirmations with mev-boost could potentially expand the pool of block proposers and improve the efficiency of the system. To achieve compatibility with mev-boost, a communication channel would need to be established, enabling block proposers to share their preconfirmation promises with builders, who can then include them in the blocks they are constructing.</p>\n<p>It’s important to note that this approach introduces a trust assumption, as block proposers would need to rely on builders to include their promises in the constructed blocks, whereas inclusion lists offer a trustless alternative. Another potential solution to mitigate this trust assumption is to leverage builders running under Trusted Execution Environments (TEEs), such as those in SUAVE. <code>preconf-share</code> nodes are also trusted to not publish signed preconfirmations that were not chosen, so it should eventually be decentralized (akin to mev-boost relays).</p>\n<p>An additional aspect to consider is the complexity of being a block proposer. For many EigenLayer AVS users, the sophistication required to effectively operate as a block proposer may be quite high. Builders, on the other hand, are well-positioned to take on this role, as they already possess the necessary expertise and infrastructure for block building and have developed in-house algorithms for optimizing transaction inclusion. As a result, less sophisticated block proposers may choose to offload the preconfirmation responsibilities to specialized parties.</p>\n<p>To further enhance the protocol and explore its potential, several areas of research and development can be pursued:</p>\n<ol>\n<li>Investigating the economic incentives and game-theoretic aspects of the AVS to ensure a stable and secure system.</li>\n<li>Developing more advanced algorithms for block proposers to optimize transaction inclusion and maximize their rewards.</li>\n<li>Exploring potential interactions with mev-boost, MEV-Share and in-block conditions (like preconfirmations for top-of-block).</li>\n</ol>\n<h2><a name=\"references-13\" class=\"anchor\" href=\"https://ethresear.ch#references-13\"></a>References</h2>\n<ul>\n<li><a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">Based preconfirmations</a> by Justin Drake</li>\n<li><a href=\"https://ethresear.ch/t/analyzing-bft-proposer-promised-preconfirmations/17963\">Analyzing BFT &amp; Proposer-Promised Preconfirmations</a> by Ellie Davidson, et al.</li>\n<li><a href=\"https://github.com/flashbots/mev-share\" rel=\"noopener nofollow ugc\">MEV-Share</a> by Flashbots</li>\n</ul>\n<blockquote>\n<p>Check out the implementation on <a href=\"https://github.com/cairoeth/preconfirmations\" rel=\"noopener nofollow ugc\">GitHub</a></p>\n</blockquote>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/towards-an-implementation-of-based-preconfirmations-leveraging-restaking/19211\">Read full topic</a></p>","link":"https://ethresear.ch/t/towards-an-implementation-of-based-preconfirmations-leveraging-restaking/19211","pubDate":"Thu, 04 Apr 2024 18:01:39 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19211"},"source":{"@url":"https://ethresear.ch/t/towards-an-implementation-of-based-preconfirmations-leveraging-restaking/19211.rss","#text":"Towards an implementation of based preconfirmations leveraging restaking"},"filter":false},{"title":"Blue shell strategy - discouraging the most concentrated actor as an optimal path","dc:creator":"themandalore","category":"Economics","description":"<p>In light of <a href=\"https://ethresear.ch/t/addressing-systemic-risks-discouragement-attacks-against-centralized-validator-sets/19067\">my post describing a new discouragement attack</a>, I present here an optimal strategy of discouragement to reduce centralization in the validator set. This post will address the most common concerns of “who do we discourage” and “how do we keep it objective”. The short answer for both is that each individual validator should target the largest concentrated actor they see, regardless of size. The article will finish by going into some challenges and traps present in the journey to a desired game theoretic outcome.</p>\n<p><strong>introduction</strong></p>\n<p>To reiterate the goal, we’re designing a system with a globally decentralized and anonymous validator set that is not owned, held accountable, or censorable by any third party corporation or government. Additionally, the validation of the chain should be open to all, including parties using standard consumer grade hardware.</p>\n<p>Currently the Ethereum validator set is threatening to be centralized by economic forces deriving from liquid staking tokens, restaking protocols, and traditional financial products (ETFs). If we do not protect the integrity and decentralization of the validator set, the cause will be lost.</p>\n<p>To briefly go over the discouragement attack from the previous post, participating validators ignore attestations from targeted validators when they (the participating validators) are the committee aggregator. There is no penalty for this as they will normally not be chosen (the proposer picks the attestation list that has the most number of attestations), however the attack succeeds when participating validators are also the proposer, as they will choose the aggregated attestation that does not include targeted validators. This will cause the targeted validators to miss out on attestation rewards for that block and potentially expose them to inactivity leaks (slashing) depending on the size of the concentrated actor. Long story short, once you hit ~10% of validators in agreement with a specific group to discourage, you can reduce their rewards at the percentage of validators supporting (e.g. if 20% of validators participate, you can reduce the discouragement target’s rewards by 20%).</p>\n<p><strong>the plan - a writhing criticism of an EIP should teach them a lesson</strong></p>\n<p>As with any penalty in the system, any implementation must avoid this becoming a popularity contest amongst validators (each LST or validator group saying the other is worse). There should be no alignment police and we don’t want there to be.</p>\n<p>For that reason an example EIP for this strategy is simply: “all parties are to discourage the largest concentrated group of validators’.</p>\n<p>Then you leave it at that. The definition of largest concentrated group is of course subjective, but can mean anything from a CEX, to an LST, to a restaking protocol. It’s up to individual validators to grab the list of validator indices associated with what they perceive as the largest concentrated actor(CA). Even if there is not complete agreement over the set, the system will work to reduce CA rewards if there is any overlap in the lists. The hopeful outcome is that everyone participates and parties are most profitable as anonymous sets of solo stakers. The end goal is to reduce or eliminate usage of the validator set as a means for alternative systems (LST’s, restaking, financialized tradfi products).</p>\n<p>As for largest concentrated actor selection, one option is to make the target list for each validator public. Knowing who is targeting what CA will allow for quick alignment on the issue and there will probably be researchers, oracles, and bounty contracts leading the way in identifying and programmatically updating the list.</p>\n<p>Some may come back with a critique that we should only discourage concentrated validators if they cross some threshold; but this is more difficult. If all other validators discourage someone at 40%, the most rewards they can stop is 60% as they’ll still get attestation rewards from their own blocks. On the other hand, if you can stop a CA when they’re at 5%, it makes a shift in business plans necessary. Identifying threshold violators is also tricky. If the threshold is 20% and two doxxed parties are at 15% and their governance token ownership overlaps…are they over the limit? This could be tough to analyze. Under the blue shell proposal however, if 15% is the largest group, they’ll be discouraged and economically encouraged to divest.</p>\n<p><strong>the desired outcome - self inflicted antitrust laws</strong></p>\n<blockquote>\n<p><a href=\"https://ethresear.ch/t/how-optional-non-kyc-validator-metadata-can-improve-staking-decentralization/17032\">What if a staking provider does manage to get large while evading detection?</a></p>\n<p>In order for this to happen, this hypothetical large provider must have:</p>\n<p><em>Carefully distributed its validators geographically</em><br>\n<em>Carefully distributed its validators in different IP subnets, including likely residential IP regions</em><br>\n<em>Carefully avoid registering any real-world legal entity that could be investigated and/or prosecuted</em><br>\n<em>Carefully chose a diverse set of operators each with near-perfect opsec</em></p>\n<p>… And if all of that happens, well: <a href=\"https://xkcd.com/810/\" rel=\"noopener nofollow ugc\">Mission. Fucking. Accomplished</a> Ethereum is now very resiliently decentralized.***</p>\n</blockquote>\n<p>The truth is that we want people to be afraid of being known. Bring the dark forest to validator sets. Any LST will be forced to go through centralized entities that might as well be investing them in treasuries, but even worse are subject to a whistleblower in their organization doxing their validator indices and ruining the whole thing. Any restaking operation would never work because the validators would be known and targeted. No one would leverage the validator set and this is the point.</p>\n<p>Over time you’d have smaller validators run a few clusters here and there, but if you beat them down to everyone being a single validator or close to it, no one would even attempt a publicly coordinated effort without writing off their rewards.</p>\n<p><strong>trap and challenge scenarios</strong></p>\n<p><em><strong>retaliation scenario</strong></em> - Starting this change is the most difficult part. We have very large players in the validator set now and if broad support is not reached, one potential blowback scenario would be that the CA retaliates and discourages anyone participating in the discouragement attack. They would probably pitch it as themselves protecting consensus integrity and they would discourage anyone they detect as participating. This could be dangerous because the CA could initially be larger (i.e. reduce more rewards) than the participating validators. Overall, they might not do this if they viewed the press around doing such an action as a negative, but if the CA threatens to do this, it could severely hamper participation in the discouragement of the CA. For this reason, we’d hope that an EIP or other “upgrade” initiative would be enough to kick start support over this threshold.</p>\n<p><em><strong>cartel scenario</strong></em> - Here, you have a majority group agree to discourage anyone not in the majority groups. The example would be something like 8 different LST providers all agreeing to split the market (stay under a threshold), but then would attack anyone not in their cartel (e.g. vampire LST’s, CEX’s starting to dominate, or just other non-identified validators). This is a real risk in the current market because LST’s and restaking protocols have billions of dollars in governance tokens riding on them staying active. To break any cartel behavior, social slashing and/or censorship at the app level may be necessary (e.g. don’t include their token transactions).</p>\n<p><em><strong>aligned cartels</strong></em> - We already see it, but this will likely grow to nauseating levels with this proposal. You will see all LST’s / restaking / governance tokens SAY they are aligned and that they are really the best thing for the protocol. They will act as though this upgrade is not meant to target them and they are actually groups of solo staker specifically designed for maximum decentralization and Ethereum alignment. But this is not the case. This strategy is 100% meant to include them. If you can tie the validators together in any way you should count it as a single entity(an LST, all run by a CEX, all in a restaking protocol, all run from the same IP address, a co-op of solo stakers, etc.). It’s up to each validator to pick the grouping, but the standard should be to force coordination out in every way possible. Tell everyone to stay away from using the validator set for anything but validation.</p>\n<p><em><strong>external rewards - the pit of restaking</strong></em></p>\n<p>If you add in external rewards, a big problem could occur. What happens if <a href=\"https://ethresear.ch/t/endgame-staking-economics-a-case-for-targeting/18751/11\">validators actually don’t care about base rewards</a>? What happens if concentrated actors make enough off of MEV and restaking that the attestation and sync committee rewards are meaningless to them?</p>\n<p>To beat this, you may have to start ignoring CA blocks (assuming you have &gt;66% participating validators). This is dangerous as you would need more coordination on the target list, but would work if it was unanimous for certain parties. MEV rewards for the CA would go away and coupled with the inactivity leak of enough participation, the penalties would be quite severe to the CA. Overall, more research will be needed in this area if this discouragement is not enough to dissuade the economics causing centralization, however I’m hopeful that just throwing out these ideas would be enough to move serious players from having threatening levels of control.</p>\n<p><strong>enshrinement of the idea</strong></p>\n<p>The main downfall to this proposal is that you’re throwing away valid attestations. Since many concentrated actors could be 10, 20, or more percent of the validator set, this would represent throwing out a lot of attestations and quickly inactivity leaking participants who are of this size. Of course we would hope that before this implementation ever took place, the centralization would be addressed, but the initial state should be handled for. One in-protocol change we could make is to allow the attestation to count toward the threshold, but still penalize them in some way (e.g. remove attestation rewards, but no inactivity leak; or something similar). This option would make it much less disruptive on the chain and could minimize unforeseen consequences if the CA target is too large.</p>\n<p><strong>conclusion</strong></p>\n<p>This article should be a great starting place for continuing discussions with stakeholders and developers in the Ethereum ecosystem as to the best path forward. With<a href=\"https://ethresear.ch/t/reward-curve-with-tempered-issuance-eip-research-post/19171\"> talks of reduced ETH issuance/ staking targets</a>, we must recognize that the threats from concentrated actors are too large to ignore and must be handled before we can seriously discuss an equilibrium or even the economics of staking without external influences.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/3/36e7b442aeebd6ecf028a4aed86b442e5f0a9b83.png\" data-download-href=\"https://ethresear.ch/uploads/default/36e7b442aeebd6ecf028a4aed86b442e5f0a9b83\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/2X/3/36e7b442aeebd6ecf028a4aed86b442e5f0a9b83_2_125x130.png\" alt=\"\" data-base62-sha1=\"7PIcQD795N39HGyaFr7ZBwGZfs7\" width=\"125\" height=\"130\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/2X/3/36e7b442aeebd6ecf028a4aed86b442e5f0a9b83_2_125x130.png, https://ethresear.ch/uploads/default/optimized/2X/3/36e7b442aeebd6ecf028a4aed86b442e5f0a9b83_2_187x195.png 1.5x, https://ethresear.ch/uploads/default/optimized/2X/3/36e7b442aeebd6ecf028a4aed86b442e5f0a9b83_2_250x260.png 2x\" data-dominant-color=\"E1E5F2\"></a></div><p></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/blue-shell-strategy-discouraging-the-most-concentrated-actor-as-an-optimal-path/19200\">Read full topic</a></p>","link":"https://ethresear.ch/t/blue-shell-strategy-discouraging-the-most-concentrated-actor-as-an-optimal-path/19200","pubDate":"Wed, 03 Apr 2024 13:44:22 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19200"},"source":{"@url":"https://ethresear.ch/t/blue-shell-strategy-discouraging-the-most-concentrated-actor-as-an-optimal-path/19200.rss","#text":"Blue shell strategy - discouraging the most concentrated actor as an optimal path"},"filter":false}]}}}