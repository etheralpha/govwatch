{"rss":{"@version":"2.0","@xmlns:discourse":"http://www.discourse.org/","@xmlns:atom":"http://www.w3.org/2005/Atom","@xmlns:dc":"http://purl.org/dc/elements/1.1/","channel":{"title":"Ethereum Research - Latest topics","link":"https://ethresear.ch/latest","description":"Latest topics","lastBuildDate":"Sat, 20 Jul 2024 08:56:40 +0000","atom:link":{"@href":"https://ethresear.ch/latest.rss","@rel":"self","@type":"application/rss+xml"},"item":[{"title":"Diseconomies of Scale: Anti-Correlation Penalties (EIP-7716)","dc:creator":"Nero_eth","category":"Proof-of-Stake","description":"<h1><a name=\"diseconomies-of-scale-anti-correlation-penalties-eip-7716-1\" class=\"anchor\" href=\"https://ethresear.ch#diseconomies-of-scale-anti-correlation-penalties-eip-7716-1\"></a>Diseconomies of Scale: Anti-Correlation Penalties (EIP-7716)</h1>\n<blockquote>\n<p>Special thanks to <a href=\"https://x.com/dapplion\">DappLion</a> and <a href=\"https://x.com/VitalikButerin\">Vitalik</a> for their collaborative effort on the overall concept, and <a href=\"https://x.com/weboftrees\">Anders</a> and <a href=\"https://x.com/_julianma\">Julian</a> for their valuable feedback on this post!</p>\n</blockquote>\n<p>Ethereum relies on a decentralized set of validators to ensure properties like credible neutrality and censorship resistance. Validators <a href=\"https://ethereum.org/en/staking/\">stake</a> a certain amount of ETH to participate in Ethereum’s consensus and secure the network. In return, validators receive rewards directly from the protocol (<a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675\">#issuance</a>) as well as execution layer rewards when proposing a block, which include transaction fees and <a href=\"https://ethereum.org/en/developers/docs/mev/\">MEV</a> from the blocks they propose (<a href=\"https://boost.flashbots.net/\">#mevboost</a>). As of today, thousands, if not tens of thousands, of small-sized entities run validators from their homes despite several disadvantages. These include the risk and responsibility of operating and maintaining a node, the technical burden associated with setup and upkeep, potential downtime, and the lack of a liquid staking token that would otherwise provide flexibility and liquidity.</p>\n<p>With the ongoing maturation of Ethereum’s PoS, we’ve encountered various <strong>centralizing forces</strong> inherent to the current protocol:</p>\n<ul>\n<li><strong>EL Reward Variance</strong>: While attestation rewards are distributed fairly evenly, the rewards for proposing a block can vary significantly. This variation arises because <a href=\"https://ethereum.org/en/developers/docs/mev/\">MEV</a> is extremely spiky, resulting in a few outlier blocks with proposer profits exceeding 10 ETH. Large operators running many validators have better chances of capturing these “juicy” blocks. Although over many years the earnings of individual validators should average out, the future remains uncertain. Assuming 1 million validators and 2,628,000 slots per year, the probability of being selected as a proposer is ~0.0001%. On average, a validator can expect to propose <span class=\"math\">\\frac{1,000,000}{365.25 \\times 7200} = 2.628</span> blocks per year (there are 7200 slots per day). From April 2023 to April 2024, the percentage of blocks with more than 10 ETH was 0.004041%. Statistically, a single validator will eventually propose a block with more than 10 ETH of MEV, but it’s unknown whether this will happen this year or in ten years, and by then, MEV issues might be resolved. While solo stakers literally participate in a lottery, large operators can average their profits and plan for the future with greater certainty.<br>\nOver 1 year, the probability of a random validator getting at least one block with &gt;10 ETH profits is 0.1%:</li>\n</ul>\n<div class=\"math\">\nP(\\text{at least one 10} \\, \\text{ETH} \\, \\text{block}) = 1 - (1 - 0.0004041)^n = 1 - (1 - 0.0004041)^{2.628}\n</div>\n<p>If you control 1% of all validators (~10k validators), the probability of getting at least one block with more than 10 ETH of MEV climbs to approximately 99.99% over one year.</p>\n<p>The following chart shows the <strong>cumulative sum of MEV-Boost payments</strong> on the y-axis and the <strong>cumulative number of MEV-Boost payments</strong> on the x-axis. We can see that 90% of all blocks distribute around 44% of the total value, leaving 56% to be distributed to the lucky 10% of proposers.</p>\n<div align=\"center\">\n<p>\n  </p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/e/aed0a28f0f91206549c0993488907698504ef2dc.png\" data-download-href=\"https://ethresear.ch/uploads/default/aed0a28f0f91206549c0993488907698504ef2dc\" title=\"Bk31ssG_R.png\"><img width=\"600\" src=\"https://ethresear.ch/uploads/default/optimized/3X/a/e/aed0a28f0f91206549c0993488907698504ef2dc_2_600x428.png\" data-base62-sha1=\"oWu4QSXDXzPsmp5iGqq69mA9XTC\" height=\"428\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/e/aed0a28f0f91206549c0993488907698504ef2dc_2_600x428.png, https://ethresear.ch/uploads/default/original/3X/a/e/aed0a28f0f91206549c0993488907698504ef2dc.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/e/aed0a28f0f91206549c0993488907698504ef2dc.png 2x\" data-dominant-color=\"F8F7F9\"></a></div>\n<p></p>\n</div>\n<ul>\n<li>\n<p><strong>Reorgs</strong>: “<em><a href=\"https://ethresear.ch/t/change-fork-choice-rule-to-mitigate-balancing-and-reorging-attacks/11127\">Honest reorgs</a></em>” occur when the proposer of slot <span class=\"math\">n_{1}</span> orphans the block of the proposer of slot <span class=\"math\">n_{0}</span> because that block hasn’t received at least 40% of the slot’s committee members’ votes. By using <a href=\"https://notes.ethereum.org/@casparschwa/H1T0k7b85\">proposer boost</a>, these “<em>weak</em>” blocks (those with less than 40% attestations) can be reorged by the next proposer to penalize the previous proposer for poor performance, such as being late and therefore rugging some attesters for their correct head votes. Reorgs can have centralizing forces and the more stake an entity holds, the more strategically it can decide whether to reorg a particular block. Large-scale operators have more safety because they can ensure their own validators never vote to reorg their own blocks. Essentially, all nodes of an entity can coordinate to always vote for the current slot’s block rather than its parent if the current block comes from that entity. This coordination potentially allows large entities to risk broadcasting their block later in the slot while still having a high probability of the block becoming canonical. <a href=\"https://ethresear.ch/t/deep-diving-attestations-a-quantitative-analysis/20020\">Analysis has shown</a> that <strong>by second 4</strong> of the slot, <strong>40% of all attestations</strong> for that slot <strong>have been seen</strong>. A large operator, who controls many validators and knows that these validators will never vote to reorganize its blocks, can slightly delay block propagation without significantly increasing its risk. The same principle applies when a single entity owns consecutive slots. In theory, this entity could wait until the end of the slot (or even longer) before publishing its block. Then, it could use the next slot to solidify that weak block into the chain by leveraging proposer boost.</p>\n</li>\n<li>\n<p><strong>Proposer Timing Games</strong>: <a href=\"https://timing.pics/\">Proposer timing games</a> (also see <a href=\"https://eprint.iacr.org/2023/760\">[1]</a>, <a href=\"https://arxiv.org/abs/2305.09032\">[2]</a>) is a term that summarizes a strategy applied by some block proposers in which they delay their proposal to give the builder more time for extracting MEV. This leads to increased profits for the proposer but <a href=\"https://ethresear.ch/t/deep-diving-attestations-a-quantitative-analysis/20020\">evidently</a> comes with a negative impact on other proposers and especially attesters. Proposer timing games are risky because late blocks have an increased chance of being reorged. In general, large-size operators face lower risks when playing timing games than small-size entities. This stems from the fact that larger operators are on average more sophisticated and have better connectivity in the P2P network: What might be a late block for an Australian validator (go <a href=\"https://x.com/sassal0x\">sassal</a> <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/crown.png?v=12\" title=\":crown:\" class=\"emoji\" alt=\":crown:\" loading=\"lazy\" width=\"20\" height=\"20\">) might be just in time for a US-based Coinbase validator. Thus, the lower the latency, the more a validator can risk delaying.</p>\n</li>\n</ul>\n<div class=\"math\">\n\\textbf{The above symptoms are all exacerbated by one thing, namely...}\n</div>\n<div class=\"math\">\n\\underline{\\mathbf{economies\\ of\\ scale.}}\n</div>\n<p><a href=\"https://en.wikipedia.org/wiki/Economies_of_scale\">Economies of scale</a> are nothing new and the crypto landscape isn’t immune either. Looking at Wikipedia, it is defined as “<em>the cost advantages that enterprises obtain due to their scale of operation […]</em>”, and the same applies to Ethereum staking:</p>\n<div align=\"center\">\n  <div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/5/e548616102366792be17847ac823b351c9f94170.png\" data-download-href=\"https://ethresear.ch/uploads/default/e548616102366792be17847ac823b351c9f94170\" title=\"ryZMFz-_R.png\"><img width=\"400\" src=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e548616102366792be17847ac823b351c9f94170_2_400x359.png\" data-base62-sha1=\"wIkpJf5CD5VtrxmqiGrokVTirpS\" height=\"359\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e548616102366792be17847ac823b351c9f94170_2_400x359.png, https://ethresear.ch/uploads/default/optimized/3X/e/5/e548616102366792be17847ac823b351c9f94170_2_600x538.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/5/e548616102366792be17847ac823b351c9f94170.png 2x\" data-dominant-color=\"F7F7F7\"></a></div>\n</div>\n<p>Large operators like Coinbase, Kraken, or Kiln can leverage economies of scale to make staking even more profitable. This allows them to offer rewards competitive with those of solo stakers, even after taking their cut. To illustrate this, consider a simple example (the exact numbers are not important here):</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Entity</th>\n<th>Validators on one Node</th>\n<th>Hardware Costs</th>\n<th>Other Costs</th>\n<th>Total Cost ($)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Solo Staker</td>\n<td>1 validator</td>\n<td>1 Intel NUC ($ 1,200)</td>\n<td>$ 5,000</td>\n<td>$ 6,200</td>\n</tr>\n<tr>\n<td>Coinbase</td>\n<td>1,000 validators</td>\n<td>1 Intel NUC ($ 1,200)</td>\n<td>$ 50,000</td>\n<td>$ 51,200</td>\n</tr>\n</tbody>\n</table>\n</div><blockquote>\n<p>For more realistic numbers, refer to the latest EthStaker survey published <a href=\"https://paragraph.xyz/@ethstaker/staking-survey-2024\">here</a>. By allocating 10x as much in <em>Other Costs</em> for large operators, we account for the increased complexity of setting up multiple validators on one machine. This is realistic enough for the point we’re making here.</p>\n</blockquote>\n<p>We can see the effects of economies of scale: the machine used by Coinbase will generate 1,000 times the profits compared to solo stakers, while the costs are only eight times higher. As a result, the ROI for large-scale operators is significantly better.</p>\n<p>Using one hardware device for multiple validators is just one piece of the puzzle. Others include:</p>\n<ul>\n<li>Cloud service provider</li>\n<li>ISPs</li>\n<li>Geographical locations</li>\n<li>Maintenance responsibilities</li>\n<li>Client software</li>\n<li>And many more…</li>\n</ul>\n<p>In all these categories, the goal is maximum diversity to minimize the risk of external factors degrading or damaging the network. Despite this goal, economically rational players might prefer a one-stop-shop solution, such as running a Lighthouse + Geth node on a Google/AWS/Hetzner instance located in central Europe, maintained by a dedicated team of specialists. While this setup may perform well in terms of efficiency, Ethereum should not create incentives that further exacerbate centralization.</p>\n<div align=\"center\">\n<p>\n  <img width=\"400\" src=\"https://ethresear.ch/uploads/default/original/3X/b/a/bac447c3b4a914807987ea637a010bceb40febef.png\" data-base62-sha1=\"qEdkXVD6v2negvqc7y3Wl4G2HJd\" height=\"392\">\n</p>\n</div>\n<p><strong>But who is large-scale and whose not?</strong></p>\n<p>The protocol itself does not know which validator is operated by which entity. From the protocol’s perspective, a Coinbase validator looks the same as a solo staker. Therefore, to prevent correlations from emerging, we cannot simply scale rewards and penalties based on the market share of the entity behind a validator. For more on this topic, I recommend Barnabé’s post, <em><a href=\"https://barnabe.substack.com/p/seeing-like-a-protocol\">“Seeing Like a Protocol”</a></em>.</p>\n<p>Fortunately, <strong>economies of scale inherently come with correlations</strong>, which is something the protocol can be made aware of. Leveraging economies of scale may linearly scale with correlations, thus we can implement rules to dynamically scale economic incentives and steer the validator set toward diversification.</p>\n<div align=\"center\">\n<p>\n  </p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/9/697934a0c70e654fbc603e570f422269f8116551.png\" data-download-href=\"https://ethresear.ch/uploads/default/697934a0c70e654fbc603e570f422269f8116551\" title=\"BJbZ1XWuR.png\"><img width=\"400\" src=\"https://ethresear.ch/uploads/default/optimized/3X/6/9/697934a0c70e654fbc603e570f422269f8116551_2_400x358.png\" data-base62-sha1=\"f33OBhCLdLmKr2t6xvNtBbXTLy1\" height=\"358\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/9/697934a0c70e654fbc603e570f422269f8116551_2_400x358.png, https://ethresear.ch/uploads/default/optimized/3X/6/9/697934a0c70e654fbc603e570f422269f8116551_2_600x537.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/9/697934a0c70e654fbc603e570f422269f8116551.png 2x\" data-dominant-color=\"F8F8F8\"></a></div>\n<p></p>\n</div>\n<p>Penalizing correlated faults isn’t something new to Ethereum. In the current <a href=\"https://eth2book.info/capella/part2/incentives/slashing/\">slashing</a> mechanism, a “malicious” validator is initially penalized by a reduction of 1/32 of their effective balance when they are slashed. After being halfway through the withdrawal period, they are subject to an additional penalty (the <em><a href=\"https://eth2book.info/capella/part2/incentives/slashing/\">correlation penalty</a></em>) that scales with the number of validators (specifically their stake) who were slashed around the same time (+/- 18 days). Therefore, a solo staker accidentally voting for two different head blocks, which is a slashable offense, would lose significantly less than a party with a 20% market share (assuming all 20% collectively fail).</p>\n<p>In the end, the goal must be to incentivize validators to diversify their setup. As shown in the following example, we want validators to reduce their correlation with other validators, making the whole network more robust against external influences.</p>\n<div align=\"center\">\n<p>\n  </p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/7/678299142da4a042b47e07270b8ccfc7c644e393.png\" data-download-href=\"https://ethresear.ch/uploads/default/678299142da4a042b47e07270b8ccfc7c644e393\" title=\"ry5bkuMO0.png\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/7/678299142da4a042b47e07270b8ccfc7c644e393_2_690x229.png\" data-base62-sha1=\"eLGZ1FctKqC9VaccHCSQiLAltAL\" width=\"690\" height=\"229\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/7/678299142da4a042b47e07270b8ccfc7c644e393_2_690x229.png, https://ethresear.ch/uploads/default/original/3X/6/7/678299142da4a042b47e07270b8ccfc7c644e393.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/7/678299142da4a042b47e07270b8ccfc7c644e393.png 2x\" data-dominant-color=\"ECEEF9\"></a></div>\n<p></p>\n</div>\n<h2><a name=\"eip-7716-2\" class=\"anchor\" href=\"https://ethresear.ch#eip-7716-2\"></a>EIP-7716</h2>\n<p>The goal of “<a href=\"https://eips.ethereum.org/EIPS/eip-7716\">EIP-7716: Anti-Correlation Attestation Penalties</a>” is to get us closer to diseconomies of scale. The more homogeneous an entity’s staking setup, the more it should be penalized while non-correlated setups profit from the proposed changes.</p>\n<p>With anti-correlation penalties, the previous “<em>economies of scale vs number of validators</em>” might be more like the following:</p>\n<div align=\"center\">\n<p>\n  </p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/0/e0a2bcab530fcb98384c27b1765434ef0121fdd3.png\" data-download-href=\"https://ethresear.ch/uploads/default/e0a2bcab530fcb98384c27b1765434ef0121fdd3\" title=\"S179FsfOA.png\"><img width=\"400\" src=\"https://ethresear.ch/uploads/default/optimized/3X/e/0/e0a2bcab530fcb98384c27b1765434ef0121fdd3_2_400x359.png\" data-base62-sha1=\"w3dCb1H8g1idyCrYjkfW3hMYP9p\" height=\"359\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/0/e0a2bcab530fcb98384c27b1765434ef0121fdd3_2_400x359.png, https://ethresear.ch/uploads/default/optimized/3X/e/0/e0a2bcab530fcb98384c27b1765434ef0121fdd3_2_600x538.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/0/e0a2bcab530fcb98384c27b1765434ef0121fdd3.png 2x\" data-dominant-color=\"F5F5F5\"></a></div>\n<p></p>\n</div>\n<p>Anti-correlation penalties were first described by Vitalik in an <a href=\"https://ethresear.ch/t/supporting-decentralized-staking-through-more-anti-correlation-incentives/19116\">ethresearch post</a>. After some <a href=\"https://ethresear.ch/t/analysis-on-correlated-attestation-penalties/19244\">initial analyses</a> and a more <a href=\"https://ethresear.ch/t/a-concrete-proposal-for-correlated-attester-penalties/19341\">concrete proposal</a> available, the <a href=\"https://eips.ethereum.org/EIPS/eip-7716\">EIP</a> is now at the point where everyone is invited to look into the inner workings of correlated penalties and leave feedback.</p>\n<p>In short, the EIP proposes to multiply the missed (source) vote penalty by a penalty factor that ranges from 0 to 4 but equals 1 on average <em>(notably, this is important to not touch the issuance policy)</em>.</p>\n<h4><a name=\"how-does-7716-work-3\" class=\"anchor\" href=\"https://ethresear.ch#how-does-7716-work-3\"></a>How does 7716 work?</h4>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Symbol</th>\n<th>Description</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>penalty_factor</code></td>\n<td><span class=\"math\">p</span></td>\n<td>Penalty scaling factor</td>\n<td>dynamic</td>\n</tr>\n<tr>\n<td><code>net_excess_penalties</code></td>\n<td><span class=\"math\">p_{exc}</span></td>\n<td>Net excess penalties</td>\n<td>dynamic</td>\n</tr>\n<tr>\n<td><code>non_participating_balance</code></td>\n<td><span class=\"math\">balance_{non\\_attesting}</span></td>\n<td>Sum balance of not/wrong attesting validators</td>\n<td>dynamic</td>\n</tr>\n<tr>\n<td><code>PENALTY_ADJUSTMENT_FACTOR</code></td>\n<td><span class=\"math\">p_{adjustment}</span></td>\n<td>Penalty adjustment factor</td>\n<td>2**12</td>\n</tr>\n<tr>\n<td><code>MAX_PENALTY_FACTOR</code></td>\n<td><span class=\"math\">p_{max}</span></td>\n<td>Maximum penalty factor</td>\n<td>4</td>\n</tr>\n<tr>\n<td><code>EXCESS_PENALTY_RECOVERY_RATE</code></td>\n<td><span class=\"math\">p_{recovery}</span></td>\n<td>Rate by which the excess penalty decreases</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n</div><blockquote>\n<p>The final values for the constants are still to be decided.</p>\n</blockquote>\n<p>The penalty factor <span class=\"math\">p</span> scales the slot penalties to a maximum of <code>MAX_PENALTY_FACTOR</code>, or down. It’s determined the following:</p>\n<div class=\"math\">\np = \\min\\left(\\frac{balance_{non\\_attesting}\\ \\times\\ p_{adjustment}}{\\max(p_{excess},\\ 0.5)\\times\\ balance_{total}\\ +\\ 1},\\ p_{max} \\right)\n</div>\n<p>and from the <a href=\"https://github.com/ethereum/consensus-specs/blob/816d338bd09ffc8e83097c4db1764ba834f3adca/specs/_features/correlated_penalties/beacon_chain.md\">pyspec implementation</a>; h/t <a href=\"https://x.com/dapplion\">dapplion</a>:</p>\n<pre data-code-wrap=\"python\"><code class=\"lang-python\">penalty_factor = min(\n    ((total_balance - participating_balance) * PENALTY_ADJUSTMENT_FACTOR) // \n    (max(self.net_excess_penalties, 0.5) * total_balance + 1),\n    MAX_PENALTY_FACTOR\n)\n</code></pre>\n<p>The formula calculates the penalty factor as a ratio of the “penalty weight” of non-attesting validators to the net excess penalty scaled by the balance of all validators. A higher penalty adjustment factor increases the sensitivity of the penalty factor. Conversely, a higher net excess penalty leads to a lower penalty factor.</p>\n<p>Finally, this is how the <code>penalty_factor</code> variable would be used:</p>\n<pre><code class=\"lang-auto\">def get_flag_index_deltas(state: BeaconState, flag_index: int) -&gt; Tuple[Sequence[Gwei], Sequence[Gwei]]:\n    \"\"\"\n    Return the deltas for a given ``flag_index`` by scanning through the participation flags.\n    \"\"\"\n    ...\n    for index in get_eligible_validator_indices(state):\n        base_reward = get_base_reward(state, index)\n        if index in unslashed_participating_indices:\n            if not is_in_inactivity_leak(state):\n                reward_numerator = base_reward * weight * unslashed_participating_increments\n                rewards[index] += Gwei(reward_numerator // (active_increments * WEIGHT_DENOMINATOR))\n        elif flag_index != TIMELY_SOURCE_FLAG_INDEX:\n            # [New in correlated_penalties]\n            slot = committee_slot_of_validator(state, index, previous_epoch)\n            penalty_factor = compute_penalty_factor(state, slot) \n            penalties[index] += Gwei(penalty_factor * base_reward * weight // WEIGHT_DENOMINATOR)\n    return rewards, penalties\n</code></pre>\n<p>We check if we are dealing with source votes (line 12), derive the slot in which the validator was supposed to vote (line 14), compute the penalty factor (line 15), and multiply it by the base reward (line 16).</p>\n<blockquote>\n<p>Although source votes might be a good starting point, the concept can be equally appied to head and target votes.</p>\n</blockquote>\n<p>The <span class=\"math\">p_{exc}</span> is updated at the end of each slot using:</p>\n<div class=\"math\">\np_{exc} = \\max(p_{recovery},\\ p_{exc} + p) - p_{recovery}\n</div>\n<p>Which equals to:</p>\n<pre data-code-wrap=\"python\"><code class=\"lang-python\">net_excess_penalties = max(\n        EXCESS_PENALTY_RECOVERY_RATE, \n        net_excess_penalties + penalty_factor\n    ) - EXCESS_PENALTY_RECOVERY_RATE\n</code></pre>\n<p>We can observe the following dynamics:</p>\n<ul>\n<li>If the balance of non-attesting validators increases, the penalty factor also increases.</li>\n<li>If the balance of non-attesting validators remains the same, the penalty factor approaches 1.</li>\n<li>If the balance of non-attesting validators decreases, the penalty factor can go below 1 for a while and then approach 1 afterward.</li>\n</ul>\n<p>When the <code>non_participating_balance</code> continuously increases for several rounds, the <code>penalty_factor</code> and the <code>net_excess_penalties</code> also increase. This continues until the <code>non_participating_balance</code> stops increasing. Then, the <code>net_excess_penalties</code> and the <code>penalty_factor</code> start decreasing together.</p>\n<p>With the <code>net_excess_penalties</code> keeping track of the excess penalties of past epochs, the formula can self-regulate what constitutes a “large” number of misses and what does not.</p>\n<p>This mechanism ensures that the sum of penalties doesn’t change with this EIP—only the distribution does.</p>\n<h2><a name=\"some-faqs-4\" class=\"anchor\" href=\"https://ethresear.ch#some-faqs-4\"></a>Some FAQs</h2>\n<h3><a name=\"h-1-wouldnt-that-be-even-worse-for-solo-stakers-5\" class=\"anchor\" href=\"https://ethresear.ch#h-1-wouldnt-that-be-even-worse-for-solo-stakers-5\"></a>1. Wouldn’t that be even worse for solo stakers?</h3>\n<p>No. Solo stakers, commonly referred to as small-scale operators or individuals running 1-10 validators from home, are expected to behave in a very uncorrelated manner compared to larger operators. Although factors like geographical location and client software can impact correlations, solo stakers are likely to be offline at different times than large-scale operators such as Coinbase or Kraken. As a result, the penalties solo stakers receive are smaller than those in the current system. In contrast, if a large-scale operator’s staking setup has a bug causing all their validators to fail to attest, the correlation is clear and the penalties are higher.</p>\n<p>This expectation was first confirmed in an <a href=\"https://ethresear.ch/t/analysis-on-correlated-attestation-penalties/19244\">initial analysis</a> on anti-correlation penalties, which showed that solo stakers and Rocketpool operators would have been better off, while large-scale operators would have received higher penalties on average.</p>\n<h3><a name=\"h-2-wouldnt-that-discourage-people-from-using-minority-clients-6\" class=\"anchor\" href=\"https://ethresear.ch#h-2-wouldnt-that-discourage-people-from-using-minority-clients-6\"></a>2. Wouldn’t that discourage people from using minority clients?</h3>\n<p>No. In fact, it encourages using minority clients. Using the majority clients leads to higher correlations. For example, if the Lighthouse client has a bug causing attesters to vote for the wrong source, the correlation is high and the penalty increases. Conversely, if all Lodestar attesters fail, it is considered a much smaller collective fault. The correlation penalty is more forgiving to a small minority than to a majority client. So, even if minority clients are expected to have more bugs, correlation penalties can steer validators toward using them.</p>\n<h3><a name=\"h-3-why-would-it-benefit-decentralization-7\" class=\"anchor\" href=\"https://ethresear.ch#h-3-why-would-it-benefit-decentralization-7\"></a>3. Why would it benefit decentralization?</h3>\n<p>Anti-correlation penalties effectively differentiate between small and large operators without relying on validators that have consolidated their stake or other out-of-protocol solutions. By introducing economic incentives for diversified behavior, we benefit small players who are already “anti-correlated” while encouraging large players to reduce the impact of external factors such as one-node setups, or cloud providers on their staking operations.</p>\n<h3><a name=\"h-4-wouldnt-that-just-lead-to-big-parties-investing-in-increased-fault-tolerance-while-even-increasing-the-correlations-8\" class=\"anchor\" href=\"https://ethresear.ch#h-4-wouldnt-that-just-lead-to-big-parties-investing-in-increased-fault-tolerance-while-even-increasing-the-correlations-8\"></a>4. Wouldn’t that just lead to big parties investing in increased fault tolerance while even increasing the correlations?</h3>\n<p>If big parties invest in increased fault tolerance, it’s still beneficial. Enhancing fault tolerance is difficult and expensive. At some point, it becomes cheaper to invest in anti-correlation than in further fault tolerance improvements. While large operators might have to move validators from popular cloud platforms to different environments, solo stakers running their nodes from home can continue as they are. Anything that costs large operators money but is free for solo stakers (=diseconomies of scale) fosters decentralization.</p>\n<div align=\"center\">\n<p>\n  </p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/5/25f018bc53924b32c0a7c1deb29b0a0f3075daf1.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/25f018bc53924b32c0a7c1deb29b0a0f3075daf1\" title=\"HyW84oMdA.jpg\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/5/25f018bc53924b32c0a7c1deb29b0a0f3075daf1_2_690x216.jpeg\" data-base62-sha1=\"5pC4p7hIgEbIqXKP7njc8XjjVwl\" width=\"690\" height=\"216\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/5/25f018bc53924b32c0a7c1deb29b0a0f3075daf1_2_690x216.jpeg, https://ethresear.ch/uploads/default/optimized/3X/2/5/25f018bc53924b32c0a7c1deb29b0a0f3075daf1_2_1035x324.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/2/5/25f018bc53924b32c0a7c1deb29b0a0f3075daf1_2_1380x432.jpeg 2x\" data-dominant-color=\"F6F5F6\"></a></div>\n<p></p>\n</div>\n<p>The main argument is, that no matter how big operators react, either going for anti-correlation or, doing the opposite, putting all validators on a single extremely robust node, both cost money and reduce their APY. As fault tolerance has its limits, there is no escape from harsher penalties other than diversifying.</p>\n<div align=\"center\">\n<p>\n  </p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/2/72c96a75749cc73c7789fac6f4fd97834924d1d5.png\" data-download-href=\"https://ethresear.ch/uploads/default/72c96a75749cc73c7789fac6f4fd97834924d1d5\" title=\"BJL374W_0.png\"><img width=\"328\" src=\"https://ethresear.ch/uploads/default/optimized/3X/7/2/72c96a75749cc73c7789fac6f4fd97834924d1d5_2_328x500.png\" data-base62-sha1=\"gnrXIc1e3ckCwhtUbGRfBfcnTFz\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/2/72c96a75749cc73c7789fac6f4fd97834924d1d5_2_328x500.png, https://ethresear.ch/uploads/default/original/3X/7/2/72c96a75749cc73c7789fac6f4fd97834924d1d5.png 1.5x, https://ethresear.ch/uploads/default/original/3X/7/2/72c96a75749cc73c7789fac6f4fd97834924d1d5.png 2x\" data-dominant-color=\"B0A9B6\"></a></div>\n<p></p>\n</div>\n<h3><a name=\"h-5-this-sounds-super-dangerous-as-i-could-be-penalized-for-32-eth-just-by-missing-a-single-source-vote-9\" class=\"anchor\" href=\"https://ethresear.ch#h-5-this-sounds-super-dangerous-as-i-could-be-penalized-for-32-eth-just-by-missing-a-single-source-vote-9\"></a>5. This sounds super dangerous, as I could be penalized for 32 ETH just by missing a single source vote.</h3>\n<p>This is incorrect since the penalty_factor variable is capped at 4 (to be analyzed). Capping ensures that the correlation penalties never get out of hand.</p>\n<h3><a name=\"h-6-why-only-focus-on-source-votes-and-not-do-the-same-for-head-and-target-votes-10\" class=\"anchor\" href=\"https://ethresear.ch#h-6-why-only-focus-on-source-votes-and-not-do-the-same-for-head-and-target-votes-10\"></a>6. Why only focus on source votes and not do the same for head and target votes?</h3>\n<p>This is a good question and since research on that topic is still at the very beginning this isn’t decided yet. An argument against head and target votes is the fact that they depend on external factors: as shown in <a href=\"https://ethresear.ch/t/analysis-on-correlated-attestation-penalties/19244\">previous analysis</a>, head votes are sensitive to proposer timing games. So, if those timing games become more and more the standard, less well-connected validators (oftentimes solo stakers) could potentially be worse off. However, <a href=\"https://ethresear.ch/t/analysis-on-correlated-attestation-penalties/19244\">this</a> analysis showed that it would be the opposite and in the long run, small-size stakers would profit from anti-correlation penalties. The same applies to target votes that are harder to get right in the first slot of an epoch compared to every other slot. Nevertheless, in the long run, this should smooth out across validators, allowing us to do anti-correlation penalties for all parts of an attestation, source-, target-, and head votes.</p>\n<h2><a name=\"useful-links-11\" class=\"anchor\" href=\"https://ethresear.ch#useful-links-11\"></a>Useful links:</h2>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Url</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://eips.ethereum.org/EIPS/eip-7716\" class=\"inline-onebox\">EIP-7716: Anti-correlation attestation penalties</a></td>\n<td>EIP-7716 (draft)</td>\n</tr>\n<tr>\n<td><a href=\"https://ethresear.ch/t/a-concrete-proposal-for-correlated-attester-penalties/19341\" class=\"inline-onebox\">A concrete proposal for correlated attester penalties</a></td>\n<td>Original Proposal</td>\n</tr>\n<tr>\n<td><a href=\"https://ethereum-magicians.org/t/eip-7716-anti-correlation-attestation-penalties/20137\" class=\"inline-onebox\">EIP-7716: Anti-correlation attestation penalties - EIPs - Fellowship of Ethereum Magicians</a></td>\n<td>EthMagicians Post</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/dapplion/anti-correlation-penalties-faq\" class=\"inline-onebox\">GitHub - dapplion/anti-correlation-penalties-faq: Anti correlation penalties FAQ</a></td>\n<td>EthBerlin Project</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/igorline/lighthouse/pull/1\" class=\"inline-onebox\">Impement anti-correlation attestation penalties eip by igorline · Pull Request #1 · igorline/lighthouse · GitHub</a></td>\n<td>Lighthouse Implementation</td>\n</tr>\n<tr>\n<td><a href=\"https://ethresear.ch/t/analysis-on-correlated-attestation-penalties/19244\" class=\"inline-onebox\">Analysis on ''Correlated Attestation Penalties''</a></td>\n<td>Quantitative Analysis</td>\n</tr>\n</tbody>\n</table>\n</div>\n            <p><small>3 posts - 3 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/diseconomies-of-scale-anti-correlation-penalties-eip-7716/20114\">Read full topic</a></p>","link":"https://ethresear.ch/t/diseconomies-of-scale-anti-correlation-penalties-eip-7716/20114","pubDate":"Sat, 20 Jul 2024 08:56:40 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20114"},"source":{"@url":"https://ethresear.ch/t/diseconomies-of-scale-anti-correlation-penalties-eip-7716/20114.rss","#text":"Diseconomies of Scale: Anti-Correlation Penalties (EIP-7716)"},"filter":false},{"title":"Commit-Boost: Proposer Platform to Safely Make Commitments","dc:creator":"DrewVanderWerff","category":"Proof-of-Stake","description":"<p><em>The following post is an introduction to some and an update to others on a community effort called <a href=\"https://x.com/Commit_Boost\" rel=\"noopener nofollow ugc\">Commit-Boost</a>. Much of this has already been discussed in various public domains / presentations / documentation. Thank you to all the countless teams that already have contributed / committed to contributing to this effort including researchers, validators, builders, relays, client teams, consulting firms, teams building commitment protocols, L2s, restaking platforms, shared sequencers, wallets, and countless others. Please reach out if you would like to contribute to this effort for Ethereum.</em></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/d/adc1d52f519c3c2bb0d61cd00f9c796e249eba81.png\" data-download-href=\"https://ethresear.ch/uploads/default/adc1d52f519c3c2bb0d61cd00f9c796e249eba81\" title=\"Commit-Boost\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/d/adc1d52f519c3c2bb0d61cd00f9c796e249eba81_2_408x375.png\" alt=\"Commit-Boost\" data-base62-sha1=\"oN7T0bNXEKR978rhE2TNZcDNZGV\" width=\"408\" height=\"375\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/d/adc1d52f519c3c2bb0d61cd00f9c796e249eba81_2_408x375.png, https://ethresear.ch/uploads/default/optimized/3X/a/d/adc1d52f519c3c2bb0d61cd00f9c796e249eba81_2_612x562.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/d/adc1d52f519c3c2bb0d61cd00f9c796e249eba81.png 2x\" data-dominant-color=\"C6C4DA\"></a></div><p></p>\n<p><strong>TL;DR</strong></p>\n<ul>\n<li>Due to the risks developing for Ethereum, core development, and its validator set, a group of teams / individuals are working on developing a public good called Commit-Boost</li>\n<li><a href=\"https://github.com/Commit-Boost/commit-boost-client\" rel=\"noopener nofollow ugc\">Commit-Boost</a> is an open-source public good that is fully compatible with <a href=\"https://github.com/flashbots/mev-boost\" rel=\"noopener nofollow ugc\">MEV-Boost</a> but acts as a light-weight validator platform to safely make commitments</li>\n<li>Specifically, Commit-Boost is a new Ethereum validator sidecar that is focused on standardizing the last mile of communication between validators and proposer commitment protocols</li>\n<li>Commit-Boost has been designed with safety and modularity at its core, with the goal of not limiting the market downstream including stakeholders, flows, proposer commitments, enforcement mechanisms, etc.</li>\n<li>While we should always be skeptical of out-of-protocol solutions that directly impact infrastructure this close to the Ethereum protocol layer, if we are going to rely on these solutions, we believe they should be developed, sustained, and governed in a way that encompasses many of the views <a href=\"https://collective.flashbots.net/t/toward-an-open-research-and-development-process-for-mev-boost/464\" rel=\"noopener nofollow ugc\">previously voiced</a> by the community. We have tried to embrace this and strive to model Commit-Boost after it</li>\n</ul>\n<p><strong>Background</strong></p>\n<ul>\n<li>Proposer commitments have been an important part of Ethereum’s history. Today, we already see the power of commitments where over 90% of validators give up their autonomy and make a wholesale commitment that outsources block building to a sophisticated actor called a block builder</li>\n<li>However, most are starting to agree on a common denominator: in the future, beacon proposers will face a broader set of options of what they may “commit\" to–be it inclusions lists or preconfs or other types of commitments such as long-dated blockspace futures–compared to just an external or local payload they see today</li>\n<li>A <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\" rel=\"noopener nofollow ugc\">post</a> from Barnabe captures this well; during block construction, the validator “…creates the specs, or the template, by which the resulting block must be created, and the builders engaged by the proposer are tasked with delivering the block according to its specifications”</li>\n<li>While this all seems great, the challenge is that many teams building commitments are creating new sidecars driving fragmentation and risks for Ethereum</li>\n<li>For Ethereum, there are going to be significant challenges and increased risks during upgrades if there are a handful of sidecars that validators are running</li>\n<li>For validators, these risks potentially take us to a world where proposers will need to make decisions on which teams to “bet on” and which sidecars they will need to run to participate in what those teams are offering</li>\n<li>For homestakers, this is difficult and they likely will be unable to participate in more than one of these commitments</li>\n<li>For sophisticated actors, this increases the attack vector and operational complexity as more and more sidecars are required to be run</li>\n<li>Another side effect of this is validators are somewhat locked into using a specific sidecar due to limited operational capacity and the switching costs of running a different sidecar (i.e., vendor lock-in). The higher the switching costs, the more embedded network effects could become if these sidecars only support certain downstream actors / proposer commitment protocols</li>\n<li>This also could create a dynamic where core out-of-protocol infrastructure supporting Ethereum which should be a public good, starts being used for monetization, distribution, or other purposes</li>\n<li>Due to these dynamics, various teams and individuals across the community are driving the development and testing of open-source / public good software called Commit-Boost. This effort includes researchers, validators, builders, relays, client teams, consulting firms, protocols building commitments, L2s, restaking platforms, and countless others across the community</li>\n</ul>\n<p><strong>Commit-Boost Overview</strong></p>\n<p>Commit-Boost is a community-driven, open-source project developing an unopinionated validator platform to enable safe interactions with commitments. Some of its features include:</p>\n<ul>\n<li>Unification: Core devs will be able to interact and work with one standard during Ethereum forks / upgrades / when and if things go wrong</li>\n<li>Backward compatibility + more: Commit-Boost is not only backward compatible with MEV-Boost, but will improve the life of validators who only run MEV-Boost through increased reporting, telemetry / other off-the-shelf tools validators can employ</li>\n<li>Opt-in without running more sidecars: Commit-Boost will allow proposers who want to opt into other commitments do so without having to run multiple sidecars</li>\n<li>Robust support: Commit-Boost the software is supported by a not-for-profit entity. This team will be focused on security and robustness through policies and procedures with follow-the-sun type models where there is support 24/7 if / when things go wrong. This team will also be focused on testing and adjustments needed during hard forks and have a team to interact with to help during adoption, improvements, and sustainment</li>\n<li>Not VC-backed public good: This team and effort will not be VC-backed. There is no monetization plan. The entity will not be able to sell itself and will not start any monetizable side businesses</li>\n</ul>\n<p><strong>Robustness, Sustainability, and Security</strong></p>\n<ul>\n<li>Commit-Boost is being developed as a fully open-source project with contributions from teams across the Ethereum tech stack including from validators, client teams, relays, builders, consulting firms, researchers, and many others. This effort with input and support from these teams will help develop a robust product integrating many perspectives</li>\n<li>Commit-Boost will go through code reviews and audits once fully developed</li>\n<li>As noted below, there also will be a full-time team that helps maintain and upgrade the software with their core focus on 100% uptime and when there are bugs, robust processes to quickly address and fix</li>\n<li>The software stack is also built with the validator at the core and includes off-the-shelf tools for monitoring as well as reducing and proactively addressing any risks that may arise</li>\n<li>Last, this public good software will have minimal, but critical open governance around future upgrades with input across the Ethereum</li>\n</ul>\n<p><strong>Team Supporting / Governance of Commit-Boost Software</strong></p>\n<ul>\n<li>Entity supporting the software: Not-for-profit entity</li>\n<li>Multiple-person team: Multiple devs that focus on transparency, sustainment / development, and research with an initial focus around Commit-Boost the software</li>\n<li>Transparency: Open-source <a href=\"https://github.com/Commit-Boost/commit-boost-client\" rel=\"noopener nofollow ugc\">repo</a> and governance calls (see below)</li>\n<li>Sustainment / Development: 24/7 follow-the-sun coverage and highly engaged with client teams around upgrades / early in getting testnet support</li>\n<li>Research: Helping with open-source research across Ethereum</li>\n<li>Governance: This is still a WIP, but at a minimum will run a Commit-Boost, ACD-like calls (first one coming soon) to engage with stakeholders and drive consensus on upgrades / help coordinate around hard forks. A credibly neutral community member will lead these calls / this process that has experience with running governance processes over critical software within the Ethereum community</li>\n<li>Funding: All grants</li>\n</ul>\n<p><strong>Where Will the Grants Come From</strong></p>\n<p>The team is in the process of applying for grants from across the ecosystem. We are initially applying to a few organizations across the community that are supporting grants across research organizations and firms focused on PBS and staking. If teams are interested in providing a grant, feel free to comment below / reach out.</p>\n<p><strong>Technical Roadmap</strong></p>\n<p>Commit-Boost is currently in the MVP phase with <a href=\"http://holesky.beaconcha.in/slot/2022891\" rel=\"noopener nofollow ugc\">testing</a> underway in Holesky with multiple validators. This includes the full functionality of a PBS Module implementing MEV-Boost with additional telemetry and metrics collection. We are continuing the development and feature set of Commit-Boost targeting production-ready software and audits kicking off at the end of Q3. More details are in the Commit-Boost <a href=\"https://github.com/Commit-Boost/commit-boost-client/issues\" rel=\"noopener nofollow ugc\">repo</a> and we are keen to get feedback / engage with the community around these.</p>\n<p>Some near-term high-level highlights from the roadmap include:</p>\n<ul>\n<li>Optimized and functional MEV-Boost module including multiple metrics for reporting and extensions such as configurable timing for get_header / get_payload calls</li>\n<li>Pre-made dashboards on Grafana for all core services</li>\n<li>Improved reliability and integrations for incident response</li>\n<li>R&amp;D / spec signing mechanism to fit as many validator set-ups as possible</li>\n<li>Expanding modularity and optionality (i.e., supporting different types of signatures and modules)</li>\n</ul>\n<p><strong>Commit-Boost Design Principles</strong></p>\n<ul>\n<li>Built for validators: Platform that not only can help validators today (i.e., can improve the lives of validators even if they just run an MEV-Boost module) but allows validators to be ready for the market of tomorrow (i.e., preconfs, inclusion lists, etc)</li>\n<li>Neutrality: No opinions, the platform will be proposer commitment agnostic, relay agnostic, transaction flow agnostic, etc. The goal is to build a platform that doesn’t limit the design space downstream while reducing risks of fragmentation for validators and Ethereum</li>\n<li>Unified: Validators run one core sidecar with the ability to opt into many different commitments</li>\n<li>Safety: Open-source code developed with input by the community with community reviews / audits</li>\n<li>Reduce risks: Modularized and transparency are core to reducing risk / overhead for the proposer to manage commitments and their broader operational processes</li>\n<li>Values aligned: Public good with no plans for monetization. We will continuously ask ourselves: would Vitalik run Commit-Boost and can this be designed in a way to increase the decentralization of Ethereum block construction</li>\n</ul>\n<p><strong>From the Perspective of the Proposer</strong></p>\n<p>More details on what it takes to run Commit-Boost as a node operator can be found <a href=\"https://commit-boost.github.io/commit-boost-client/get_started/overview\" rel=\"noopener nofollow ugc\">here</a>. Please note that this has not been finalized and over the next few weeks we will be making updates (see roadmap / milestones above).</p>\n<ul>\n<li>Run a single sidecar with support for MEV-Boost and other proposer commitments protocols, such as precons / other commitments</li>\n<li>Out-of-the-box support for metrics reporting and dashboards to have clear insight around what is happening in your validator seen through dashboards such as Grafana</li>\n<li>Plug-in system to add custom modules, i.e., receive a notification on Telegram if a relay fails to deliver a block</li>\n<li>Standardized way to provide a signature to opt into a commitment</li>\n<li>Creates constraints / condition sets and pass these constraints downstream</li>\n</ul>\n<p><strong>From the Perspective of the Proposer Commitment Protocol / Module Creator</strong></p>\n<p>More details on what it takes to build a module / metrics can be found <a href=\"https://commit-boost.github.io/commit-boost-client/category/developing\" rel=\"noopener nofollow ugc\">here</a>. Please note that this has not been finalized and over the next few weeks we will finalize moving parts that impact module creators (see roadmap / milestones above).</p>\n<ul>\n<li>A modular platform to develop and distribute proposer commitments protocols</li>\n<li>A single API to interact with validators</li>\n<li>Support for hard-forks and new protocol requirements</li>\n</ul>\n<p><strong>Architecture of Commit-Boost</strong></p>\n<p>More details can be found in the Commit-Boost <a href=\"https://commit-boost.github.io/commit-boost-client/\" rel=\"noopener nofollow ugc\">documentation</a>. However, below is a schematic of Commit-Boost. This proposed architecture allows proposers to run one sidecar, but still retain the ability to opt into a network of proposer commitment modules. More specifically, with this middleware, the proposer will only need to (in the case of delegation / light weight commitments) run one sidecar and limit their responsibilities to only selecting which module / proposer commitment protocol they would like to subscribe to.</p>\n<p>It is important to note that the below depiction contains just a few examples of proposer commitment modules that can run on Commit-Boost. The design space for modules is completely open / not gated by the Commit-Boost software and proposers will be responsible for opting into the commitments they wish to subscribe to (i.e., a proposer is responsible for which modules they will subscribe to).</p>\n<p><strong>Terminology</strong></p>\n<ul>\n<li>Proposer: entity, staking pool NoOp, or DVT cluster with the right to propose the next block</li>\n<li>Commitment: a constraint or condition that the proposer choses and agrees to via a signature</li>\n<li>Key Manager: some proposers use key managers or remote signers as part of their proposer / validator duties. Please note, that Commit-Boost is being designed in a way where it does not require validators to run key managers and working on solutions for monolithic set-ups</li>\n<li>Consensus Client: for example, Lighthouse or Teku (see <a href=\"https://ethereum.org/en/developers/docs/nodes-and-clients/\" rel=\"noopener nofollow ugc\">here</a> for more details)</li>\n<li>Commitment Modules: community-built modules allowing proposers to make commitment, including some of the logic of the proposer commitment protocol</li>\n<li>Signer API: The signer API is one of the core components around Commit-Boost. This is used to provide signatures from the proposer to the proposer commitment protocol. This is still in the design but proxy signatures will be used in nearly all cases (there are some outlier cases). For more details on the API please see <a href=\"https://commit-boost.github.io/commit-boost-client/api/\" rel=\"noopener nofollow ugc\">here</a>. For an example of how to communicate with the Signer API, please see <a href=\"https://commit-boost.github.io/commit-boost-client/developing/commit-module\" rel=\"noopener nofollow ugc\">here</a></li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/a/ca4fdf7f738261cf46b1505dc56198da182592dc.png\" data-download-href=\"https://ethresear.ch/uploads/default/ca4fdf7f738261cf46b1505dc56198da182592dc\" title=\"Schematic\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/a/ca4fdf7f738261cf46b1505dc56198da182592dc_2_690x411.png\" alt=\"Schematic\" data-base62-sha1=\"sRJzJ0TTcP5BoPdmLMWIJjE903a\" width=\"690\" height=\"411\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/a/ca4fdf7f738261cf46b1505dc56198da182592dc_2_690x411.png, https://ethresear.ch/uploads/default/original/3X/c/a/ca4fdf7f738261cf46b1505dc56198da182592dc.png 1.5x, https://ethresear.ch/uploads/default/original/3X/c/a/ca4fdf7f738261cf46b1505dc56198da182592dc.png 2x\" data-dominant-color=\"EDEFF1\"></a></div><p></p>\n<p>Using this as a middleware instead of direct modification to the consensus client or running a sidecar per commitment will allow for each component to be sustained independently and will provide for cross proposer commitment compatibility. This will also allow for a bit of time for the market to play out, but via a public good, standardize the last mile of communication to help address the risks (discussed in the background section above) developing. Once the market does play out, and the community is able to observe some dynamics (the good and the bad), we can and should push for CL changes.</p>\n<p><strong>Resources</strong></p>\n<ul>\n<li><a href=\"https://github.com/Commit-Boost\" rel=\"noopener nofollow ugc\">Commit-Boost Repo</a></li>\n<li>Commit-Boost <a href=\"https://commit-boost.github.io/commit-boost-client/\" rel=\"noopener nofollow ugc\">documentation</a></li>\n<li>List of presentations</li>\n<li>Original post on ETH Research, read more <a href=\"https://ethresear.ch/t/based-proposer-commitments-ethereum-s-marketplace-for-proposer-commitments/19517\">here</a></li>\n<li>First presentation to the community can be found <a href=\"https://www.youtube.com/watch?v=jrm4ZUoj9xY&amp;list=PLJqWcTqh_zKHDFarAcF29QfdMlUpReZrR&amp;index=11\" rel=\"noopener nofollow ugc\">here</a></li>\n<li>Second presentation at zuBerlin can be found <a href=\"https://streameth.org/zuberlin/watch?session=66681afef9b8e98b1ec95fdd\" rel=\"noopener nofollow ugc\">here</a></li>\n<li>zuBerlin Devnet notion can be found <a href=\"https://twisty-wednesday-4be.notion.site/ZuBerlin-Preconfs-Devnet-b693047f41e7407cadac0170a6711dea\" rel=\"noopener nofollow ugc\">here</a></li>\n<li>Mev-Boost Community call <a href=\"https://www.youtube.com/watch?v=UgoFjNkkTac\" rel=\"noopener nofollow ugc\">here</a></li>\n<li>Espresso / One Balance Sequencing day here (this will be updated when the link is ready)</li>\n<li>Gattaca MEV Day here (this will be updated when the link is ready)</li>\n</ul>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/commit-boost-proposer-platform-to-safely-make-commitments/20107\">Read full topic</a></p>","link":"https://ethresear.ch/t/commit-boost-proposer-platform-to-safely-make-commitments/20107","pubDate":"Fri, 19 Jul 2024 14:33:05 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20107"},"source":{"@url":"https://ethresear.ch/t/commit-boost-proposer-platform-to-safely-make-commitments/20107.rss","#text":"Commit-Boost: Proposer Platform to Safely Make Commitments"},"filter":false},{"title":"EIP 648 for Parallel Rollup","dc:creator":"laurentyzhang","category":"Layer 2","description":"<h3><a name=\"what-is-eip-648-1\" class=\"anchor\" href=\"https://ethresear.ch#what-is-eip-648-1\"></a>What is EIP 648?</h3>\n<p>EIP 648 was proposed back in 2017. The proposal introduces a new transaction type to facilitate parallel transaction processing.</p>\n<p>The new type allows users to specify both the read and write ranges of accounts that the transaction will access. Transactions with no overlapping ranges will be executed in parallel. If the ranges overlap, transactions will conflict unless they are all read-only.</p>\n<h3><a name=\"issues-2\" class=\"anchor\" href=\"https://ethresear.ch#issues-2\"></a>Issues</h3>\n<p>While the proposal is favorable for its simplicity in some cases, it also has some issues that make it difficult to use directly in rollups.</p>\n<ol>\n<li>\n<p><strong>Contract Pre-knowledge:</strong> It is not always straightforward for users to know exactly which accounts their transactions will access beforehand.</p>\n</li>\n<li>\n<p><strong>Account-level:</strong> The approach uses pessimistic concurrency control at the account level. The statements of the ranges act as synchronization primitives, but this has very coarse concurrency granularity (account-level), which can seriously reduce parallelism in many cases.</p>\n</li>\n</ol>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/eip-648-for-parallel-rollup/20103\">Read full topic</a></p>","link":"https://ethresear.ch/t/eip-648-for-parallel-rollup/20103","pubDate":"Fri, 19 Jul 2024 07:14:22 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20103"},"source":{"@url":"https://ethresear.ch/t/eip-648-for-parallel-rollup/20103.rss","#text":"EIP 648 for Parallel Rollup"},"filter":false},{"title":"What is \"RealTPS\" in Blockchain","dc:creator":"rrhlrmrr","category":"Tools","description":"<p>Authors: <a href=\"https://x.com/Kyungmin7984\" rel=\"noopener nofollow ugc\">@Kyungmin</a> <a href=\"https://github.com/bicoCrypto\" rel=\"noopener nofollow ugc\">@bicoCrypto</a> <a href=\"https://github.com/solmingming\" rel=\"noopener nofollow ugc\">@solmingming</a> Members of <a href=\"https://x.com/DecipherGlobal\" rel=\"noopener nofollow ugc\">@DecipherGlobal</a> SNU Blockchain Research Center</p>\n<h2><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>TL;DR</h2>\n<p>The current concept of TPS (Transactions Per Second) in blockchain is being disclosed in an ambiguous and opaque manner, conflicting with blockchain’s core value of transparency. This article reconsiders the definition of transactions in blockchain, compares theoretical figures with actual measurements, evaluates existing measurement tools, introduces our self-developed tool, and proposes a more accurate and transparent TPS measurement method.</p>\n<h2><a name=\"problem-2\" class=\"anchor\" href=\"https://ethresear.ch#problem-2\"></a>Problem</h2>\n<p>The biggest change in the transition from Web2 to Web3 is decentralization. This has led to improved system accessibility and increased information transparency. However, there is still opaque information in the blockchain ecosystem, with TPS being a prime example.</p>\n<p>In transaction processing systems, especially financial systems, TPS is a crucial performance indicator. However, the TPS information currently provided in blockchain is limited to simple figures, with detailed information about measurement methods and processes remaining opaque.</p>\n<p>While blockchain smart contracts are operated transparently through verification and auditing, we still rely on the foundation’s system for the blockchain nodes themselves, lacking verification procedures similar to smart contracts.</p>\n<h2><a name=\"tps-in-traditional-web2-3\" class=\"anchor\" href=\"https://ethresear.ch#tps-in-traditional-web2-3\"></a>TPS in traditional Web2</h2>\n<p>When discussing blockchain TPS, VISA’s processing capability is often mentioned as a comparison. <a href=\"https://www.reddit.com/r/nanocurrency/comments/82438o/visa_is_capable_of_performing_24000_transactions/\" rel=\"noopener nofollow ugc\">VISA officially announced a processing capability of 24,000 TPS</a>, but <a href=\"https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/\" rel=\"noopener nofollow ugc\">this has been questioned</a>:</p>\n<p>In centralized Web2 systems, it’s difficult to verify such issues. However, blockchain (Web3) systems are decentralized and their code is managed as open source, making it possible to verify TPS.</p>\n<h2><a name=\"tps-in-web3-4\" class=\"anchor\" href=\"https://ethresear.ch#tps-in-web3-4\"></a>TPS in Web3</h2>\n<p>In blockchain systems with public nodes and permissionless nodes, anyone can participate in the network, operate nodes, and access the system. Even without connecting to the mainnet or testnet, the source code is publicly available, allowing independent network construction or modification after forking.</p>\n<p>Ethereum and most EVM-compatible blockchains publish high TPS figures. For example, Avalanche C-Chain is introduced as capable of achieving 4,500 TPS. However, information on how this figure was measured is not provided.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/4/748ee3c646e8c2964dd294eefe5aa1491ce65b45.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/748ee3c646e8c2964dd294eefe5aa1491ce65b45\" title=\"Image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/4/748ee3c646e8c2964dd294eefe5aa1491ce65b45_2_690x378.jpeg\" alt=\"Image\" data-base62-sha1=\"gD7wDCIxOZdV4Affpqc6j9vdYSp\" width=\"690\" height=\"378\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/4/748ee3c646e8c2964dd294eefe5aa1491ce65b45_2_690x378.jpeg, https://ethresear.ch/uploads/default/optimized/3X/7/4/748ee3c646e8c2964dd294eefe5aa1491ce65b45_2_1035x567.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/7/4/748ee3c646e8c2964dd294eefe5aa1491ce65b45.jpeg 2x\" data-dominant-color=\"373555\"></a></div><p></p>\n<h2><a name=\"time-to-define-transaction-5\" class=\"anchor\" href=\"https://ethresear.ch#time-to-define-transaction-5\"></a>Time to Define Transaction</h2>\n<p>In EVM blockchains, the term “Transaction” is used in various contexts:</p>\n<ul>\n<li>SendTransaction: Simply refers to the act of sending a transaction, without guaranteeing the final state or completeness of the transaction.</li>\n<li>PendingTransaction: The state where a transaction is waiting in the node’s memory pool (Mempool).</li>\n<li>QueuedTransaction: Similar to Pending, waiting in the node’s memory pool, but distinguished in the serialization process through Nonce.</li>\n<li>ConfirmedTransaction: The state where a transaction receipt has been issued, indicating the transaction has succeeded or failed.</li>\n</ul>\n<p>We believe that TPS should be calculated based on ConfirmedTransactions when measuring. Based on this, we propose the following formula for calculating TPS:<br>\nTPS = BlockGasLimit / (TxGasUsed * BlockCreationTime)</p>\n<p>Currently, Avalanche C-Chain’s BlockGasLimit is 15,000,000<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/9/c909ced7994a754fc7875e8dd1730093faedad3e.png\" data-download-href=\"https://ethresear.ch/uploads/default/c909ced7994a754fc7875e8dd1730093faedad3e\" title=\"Tx Gaslimit\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/9/c909ced7994a754fc7875e8dd1730093faedad3e_2_690x225.png\" alt=\"Tx Gaslimit\" data-base62-sha1=\"sGsZ4y6Ey58W84yDKiIjfGzDPPw\" width=\"690\" height=\"225\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/9/c909ced7994a754fc7875e8dd1730093faedad3e_2_690x225.png, https://ethresear.ch/uploads/default/optimized/3X/c/9/c909ced7994a754fc7875e8dd1730093faedad3e_2_1035x337.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/9/c909ced7994a754fc7875e8dd1730093faedad3e_2_1380x450.png 2x\" data-dominant-color=\"181719\"></a></div><p></p>\n<p>Even assuming the simplest transaction (TxGasUsed = 21,000) and the shortest block creation time (BlockCreationTime = 1 second), the theoretical maximum TPS is 715. This shows a significant difference from the officially announced 4,500 TPS. (The actual measured value would naturally be even lower)</p>\n<p>We speculate that this difference may occur due to:</p>\n<ul>\n<li>The transaction standard used in TPS calculation may not be ConfirmedTransaction</li>\n<li>The Avalanche version that achieved 4,500 TPS may differ from the version currently used in public nodes</li>\n<li>Differences in TPS measurement methods and methodologies</li>\n</ul>\n<p>Such opaque information raises questions about the reliability and accuracy of TPS figures.<br>\nMonad has published a critical analysis of these limitations of blockchain TPS: <a href=\"https://www.monad.xyz/wtf-is-tps\" rel=\"noopener nofollow ugc\">WTF is TPS?</a></p>\n<h2><a name=\"tps-benchmark-tools-6\" class=\"anchor\" href=\"https://ethresear.ch#tps-benchmark-tools-6\"></a>TPS Benchmark Tools</h2>\n<p>There are currently two main blockchain TPS benchmark tools in use:</p>\n<ol>\n<li><a href=\"https://github.com/hyperledger/caliper\" rel=\"noopener nofollow ugc\">Hyperledger Caliper</a>: Developed by the Hyperledger Foundation</li>\n<li><a href=\"https://github.com/drandreaskrueger/chainhammer\" rel=\"noopener nofollow ugc\">ChainHammer</a>: Recommended by Quorum (a private blockchain developed by ConsenSys)<br>\nNote: ChainHammer’s most recent commit was 2 years ago, making it essentially outdated.</li>\n</ol>\n<p>Caliper is written in JavaScript and is a highly complete project. However, there are doubts about whether it is optimized for measuring “blockchain” TPS:</p>\n<ol>\n<li>TPS measurement on a single node:<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/7/67bd0b50a563472ac93dafc3fa2e17effa0919e8.png\" data-download-href=\"https://ethresear.ch/uploads/default/67bd0b50a563472ac93dafc3fa2e17effa0919e8\" title=\"Figure2\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/7/67bd0b50a563472ac93dafc3fa2e17effa0919e8_2_690x389.png\" alt=\"Figure2\" data-base62-sha1=\"eNIcHc4GI05U9XExGgTvsGf9K9q\" width=\"690\" height=\"389\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/7/67bd0b50a563472ac93dafc3fa2e17effa0919e8_2_690x389.png, https://ethresear.ch/uploads/default/optimized/3X/6/7/67bd0b50a563472ac93dafc3fa2e17effa0919e8_2_1035x583.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/7/67bd0b50a563472ac93dafc3fa2e17effa0919e8.png 2x\" data-dominant-color=\"F8F8F8\"></a></div></li>\n</ol>\n<p>The core of blockchain is distributed storage of data through consensus. However, Caliper only conducts TPS measurements on a single node, which can measure the TPS of individual nodes but does not accurately reflect the TPS of the entire blockchain network. (The transaction propagation process is not considered)</p>\n<ol>\n<li>Limitation of measurement from a single account:<br>\nIn EVM, EOA (Externally Owned Account) has a Nonce value, causing transactions to be processed sequentially.<br>\nWhile 2024 was predicted to be the era of parallel EVM, current parallel processing technology still proceeds in an optimistic manner, requiring re-execution in case of conflicts. (Cases requiring re-execution can hardly be considered true parallel execution.)<br>\nTherefore, execution from a single account versus multiple accounts can have a significant impact on TPS.</li>\n</ol>\n<h2><a name=\"antpsan-ti-tps-7\" class=\"anchor\" href=\"https://ethresear.ch#antpsan-ti-tps-7\"></a>AnTPS(An-ti TPS)</h2>\n<p>To improve these limitations, we have developed our own blockchain benchmark tool, AnTPS, using Golang: <a href=\"https://github.com/decipherhub/AnTPS\" rel=\"noopener nofollow ugc\">Github</a><br>\nFeatures include:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/0/f0cff11ba6f328b500e85b78f194763580ca940c.png\" data-download-href=\"https://ethresear.ch/uploads/default/f0cff11ba6f328b500e85b78f194763580ca940c\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/0/f0cff11ba6f328b500e85b78f194763580ca940c_2_690x283.png\" alt=\"image\" data-base62-sha1=\"ymk6Ajc7MwJznl71YJNmFBkDpFi\" width=\"690\" height=\"283\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/0/f0cff11ba6f328b500e85b78f194763580ca940c_2_690x283.png, https://ethresear.ch/uploads/default/optimized/3X/f/0/f0cff11ba6f328b500e85b78f194763580ca940c_2_1035x424.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/f/0/f0cff11ba6f328b500e85b78f194763580ca940c_2_1380x566.png 2x\" data-dominant-color=\"BEBEBE\"></a></div><p></p>\n<ul>\n<li>Transparently providing measurement environment/results.</li>\n<li>Conducting measurements on at least two or more nodes.</li>\n<li>Supporting measurement cases for both single and multiple accounts.</li>\n<li>Supporting various scenarios during measurement (ERC20/721/1155/NativeToken).</li>\n<li>Supporting not only local environment measurements but also Cloud environments through IaC.</li>\n</ul>\n<p>Our goal is to overcome the limitations of existing tools while providing information transparently.<br>\nWe welcome your opinions and feedback. Thank you.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/what-is-realtps-in-blockchain/20098\">Read full topic</a></p>","link":"https://ethresear.ch/t/what-is-realtps-in-blockchain/20098","pubDate":"Fri, 19 Jul 2024 03:52:11 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20098"},"source":{"@url":"https://ethresear.ch/t/what-is-realtps-in-blockchain/20098.rss","#text":"What is \"RealTPS\" in Blockchain"},"filter":false},{"title":"Based Preconfirmations with Multi-round MEV-Boost","dc:creator":"linoscope","category":"Layer 2","description":"<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/b/fb1798cc79775d7958124717d6ba5cc97c1aa008.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/fb1798cc79775d7958124717d6ba5cc97c1aa008\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/original/3X/f/b/fb1798cc79775d7958124717d6ba5cc97c1aa008.jpeg\" alt=\"image\" data-base62-sha1=\"zPgoRZKypQhJYD3l7g5edTJShKw\" width=\"690\" height=\"394\" data-dominant-color=\"9C959A\"></a></div><p></p>\n<p>By <a href=\"https://twitter.com/linoscope\" rel=\"noopener nofollow ugc\">Lin Oshitani</a> (<a href=\"https://switchboard.nethermind.io/\" rel=\"noopener nofollow ugc\">Nethermind Switchboard</a>, <a href=\"https://www.nethermind.io/nethermind-research\" rel=\"noopener nofollow ugc\">Nethermind Research</a>). Many thanks to <a href=\"https://twitter.com/ConorMcMenamin9\" rel=\"noopener nofollow ugc\">Conor</a> for the detailed back-and-forth on crafting this document and to <a href=\"https://www.linkedin.com/in/aikaterini-panagiota-stouka/\" rel=\"noopener nofollow ugc\">Aikaterini</a>, <a href=\"https://x.com/ElenaPetreska0x\" rel=\"noopener nofollow ugc\">Elena</a>, <a href=\"https://twitter.com/smartprogrammer\" rel=\"noopener nofollow ugc\">Ahmad</a>, <a href=\"https://twitter.com/aj_jalan\" rel=\"noopener nofollow ugc\">Anshu</a>, <a href=\"https://twitter.com/swp0x0\" rel=\"noopener nofollow ugc\">Swapnil</a>, <a href=\"https://twitter.com/tkstanczak\" rel=\"noopener nofollow ugc\">Tomasz</a>, <a href=\"https://twitter.com/totorovirus\" rel=\"noopener nofollow ugc\">Jinsuk</a>, <a href=\"https://twitter.com/0xQuintus\" rel=\"noopener nofollow ugc\">Quintus</a>, <a href=\"https://x.com/ceciliaz030\" rel=\"noopener nofollow ugc\">Ceciliaz</a>, and <a href=\"https://twitter.com/Brechtpd\" rel=\"noopener nofollow ugc\">Brecht</a> for the helpful comments and/or review. This work was partly funded by Taiko. The views expressed are my own and do not necessarily reflect those of the reviewers or Taiko.</p>\n<h1><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>TL;DR</h1>\n<p>As we outlined in our previous post <a href=\"https://ethresear.ch/t/strawmanning-based-preconfirmations/19695\">Strawmanning Based Preconfirmations</a>, naive implementations of based preconfirmations introduce many negative externalities that require thoughtful consideration.</p>\n<p>In this post, we will expand on the negative externalities of based preconfirmations by examining them through the lens of the L1 PBS pipeline. Then, we propose <em>multi-round MEV-Boost</em>, a modification of MEV-Boost that enables based preconfirmations by running multiple rounds of MEV-Boost auctions within a single slot. This approach inherits the L1 PBS pipeline and mitigates the negative externalities of based preconfirmations as a result.</p>\n<h1><a name=\"motivation-2\" class=\"anchor\" href=\"https://ethresear.ch#motivation-2\"></a>Motivation</h1>\n<p>As Justin Drake <a href=\"https://ethresear.ch/t/based-rollups-superpowers-from-l1-sequencing/15016#:~:text=a%20based%20rollup%20is%20one%20where%20the%20next%20L1%20proposer%20may%2C%20in%20collaboration%20with%20L1%20searchers%20and%20builders%2C%20permissionlessly%20include%20the%20next%20rollup%20block%20as%20part%20of%20the%20next%20L1%20block\">defines</a> in the original post, based rollups are rollups “where the next L1 proposer may, in collaboration with L1 searchers and builders, permissionlessly include the next rollup block as part of the next L1 block”. Using the <a href=\"https://flashbots.mirror.xyz/bqCakwfQZkMsq63b50vib-nibo5eKai0QuK7m-Dsxpo\" rel=\"noopener nofollow ugc\">MEV supply chain</a> diagram, based rollups can be illustrated below:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/c/ac29f931cf332c1b1b38334158920d6807f499f1.png\" data-download-href=\"https://ethresear.ch/uploads/default/ac29f931cf332c1b1b38334158920d6807f499f1\" title=\"Based Rollups (5) (1)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/c/ac29f931cf332c1b1b38334158920d6807f499f1_2_690x346.png\" alt=\"Based Rollups (5) (1)\" data-base62-sha1=\"oz23fZoj3sXo8MPnf2b735Dyqzf\" width=\"690\" height=\"346\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/c/ac29f931cf332c1b1b38334158920d6807f499f1_2_690x346.png, https://ethresear.ch/uploads/default/original/3X/a/c/ac29f931cf332c1b1b38334158920d6807f499f1.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/c/ac29f931cf332c1b1b38334158920d6807f499f1.png 2x\" data-dominant-color=\"FBFAFA\"></a></div><p></p>\n<p>Notice that the L2 transactions, represented as the red line, go through the same process as the L1 transactions, represented as the black line. By effectively “piggybacking” the L1 PBS pipeline, based rollups provide two key benefits:</p>\n<ul>\n<li><strong>Benefit 1</strong>: Since no additional actors (and thus no additional choke points) are introduced for L2 sequencing, based rollups fully inherit L1 censorship resistance, liveness, and credible neutrality.</li>\n<li><strong>Benefit 2</strong>: Since the L1 and L2 transactions are sequenced by the same entity (the builder), based rollups enable not only synchronous L2-L2 composability but also synchronous L1-L2 composability.</li>\n</ul>\n<p>Based rollups are great. They solve L2 fragmentation and sequencer decentralization while enabling L1 composability and inheriting L1’s censorship resistance, liveness, and credible neutrality. They are the only rollups that can have these properties simultaneously.</p>\n<p>However, they have one large drawback: they also inherit the 12-second L1 block time. To address the slow confirmation time, Justin introduced <a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">base preconfirmations</a>. In this approach, L1 proposers can opt into providing preconfirmations for based rollup L2 transactions, as shown below:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/e/6e65221a830715cead4428b2724688ce66d7520c.png\" data-download-href=\"https://ethresear.ch/uploads/default/6e65221a830715cead4428b2724688ce66d7520c\" title=\"Based Preconf (2) (1)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/e/6e65221a830715cead4428b2724688ce66d7520c_2_690x346.png\" alt=\"Based Preconf (2) (1)\" data-base62-sha1=\"fKBcjG3axZJngTRk0HOLvltDJcU\" width=\"690\" height=\"346\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/e/6e65221a830715cead4428b2724688ce66d7520c_2_690x346.png, https://ethresear.ch/uploads/default/original/3X/6/e/6e65221a830715cead4428b2724688ce66d7520c.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/e/6e65221a830715cead4428b2724688ce66d7520c.png 2x\" data-dominant-color=\"FBFAFA\"></a></div><p></p>\n<p>Since providing preconfirmations requires technical sophistication, most based preconfirmation designs include a delegation mechanism that allows validators to outsource the preconfirmation duty to a designated preconfer, as illustrated below:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/9/f9346fd068da5aa3ae0e57fceccc6c2af223b958.png\" data-download-href=\"https://ethresear.ch/uploads/default/f9346fd068da5aa3ae0e57fceccc6c2af223b958\" title=\"Based Preconf with delegation (2)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/9/f9346fd068da5aa3ae0e57fceccc6c2af223b958_2_690x346.png\" alt=\"Based Preconf with delegation (2)\" data-base62-sha1=\"zyzeAVb2uUipx8qTLNJ40wYwHwI\" width=\"690\" height=\"346\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/9/f9346fd068da5aa3ae0e57fceccc6c2af223b958_2_690x346.png, https://ethresear.ch/uploads/default/original/3X/f/9/f9346fd068da5aa3ae0e57fceccc6c2af223b958.png 1.5x, https://ethresear.ch/uploads/default/original/3X/f/9/f9346fd068da5aa3ae0e57fceccc6c2af223b958.png 2x\" data-dominant-color=\"FAF9F9\"></a></div><p></p>\n<p>Notice that L2 and L1 transactions no longer share the block-building pipeline. As such, the benefits of based rollups are diminished:</p>\n<ul>\n<li>On benefit 1: We introduced an additional choke point to the system, the preconfer, which can censor L2 transactions or degrade L2 liveness by going down. As a result, the inheritance of L1 censorship resistance and liveness are degraded.</li>\n<li>On benefit 2: We now have two parallel block-building entities: one for L1 (the builder) and another for L2 (the preconfer). Consequently, L1-L2 composability now requires coordination between the builder and the preconfer. This adds complexity and can lead to <em>builder-preconfer integration</em>, where the proposer delegates not only their preconfirmation right but also the whole block-building right to the preconfer ahead of their slot.</li>\n</ul>\n<p>In summary, by introducing preconfirmations, we lost the below structure:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/c/ac29f931cf332c1b1b38334158920d6807f499f1.png\" data-download-href=\"https://ethresear.ch/uploads/default/ac29f931cf332c1b1b38334158920d6807f499f1\" title=\"Based Rollups (5) (1)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/c/ac29f931cf332c1b1b38334158920d6807f499f1_2_690x346.png\" alt=\"Based Rollups (5) (1)\" data-base62-sha1=\"oz23fZoj3sXo8MPnf2b735Dyqzf\" width=\"690\" height=\"346\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/c/ac29f931cf332c1b1b38334158920d6807f499f1_2_690x346.png, https://ethresear.ch/uploads/default/original/3X/a/c/ac29f931cf332c1b1b38334158920d6807f499f1.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/c/ac29f931cf332c1b1b38334158920d6807f499f1.png 2x\" data-dominant-color=\"FBFAFA\"></a></div><p></p>\n<p>As a result, many of the benefits of based rollups are diminished.</p>\n<p>So, what if we keep this pipeline but run it multiple times within a slot to achieve fast preconfirmations? This brings us to the main contribution of this document: <em>Multi-round MEV-Boost</em>.</p>\n<h1><a name=\"multi-round-mev-boost-3\" class=\"anchor\" href=\"https://ethresear.ch#multi-round-mev-boost-3\"></a>Multi-round MEV-Boost</h1>\n<p>At a high level, Multi-round MEV-Boost, or <em>MR-MEV-Boost</em> (pronounced “<em>mister-mev-boost</em>”, h/t <a href=\"https://twitter.com/ConorMcMenamin9\" rel=\"noopener nofollow ugc\">Conor</a> for the idea on the pronounciation :)) for short, works as follows:</p>\n<ul>\n<li>Split each slot into a fixed number of <em>rounds, e</em>.g., 4 rounds with 3 seconds each.</li>\n<li>Within each round, run a single MEV-Boost auction. As a result of the auction, a single <em>partial block</em> (a.k.a <em>partial payload</em>) will be signed and published, i.e., the partial block will be <em>preconfirmed</em>.</li>\n<li>The full block is created and published at the end of the slot. The full block should contain the partial blocks in the exact order they were preconfirmed without inserting any transactions before or in between.</li>\n</ul>\n<h2><a name=\"refresher-mev-boost-4\" class=\"anchor\" href=\"https://ethresear.ch#refresher-mev-boost-4\"></a>Refresher: MEV-Boost</h2>\n<p>Before diving deeper into the proposed protocol, let’s quickly review today’s <a href=\"https://docs.flashbots.net/flashbots-mev-boost/introduction\" rel=\"noopener nofollow ugc\">MEV-Boost</a> PBS pipeline used in L1 Ethereum.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/e/fe199d4c844c9230a675292724deb29c9e03a3df.png\" data-download-href=\"https://ethresear.ch/uploads/default/fe199d4c844c9230a675292724deb29c9e03a3df\" title=\"MEV-Boost\"><img src=\"https://ethresear.ch/uploads/default/original/3X/f/e/fe199d4c844c9230a675292724deb29c9e03a3df.png\" alt=\"MEV-Boost\" data-base62-sha1=\"AfS9Gqf5mSLTXhQwZENfR398TdJ\" width=\"609\" height=\"500\" data-dominant-color=\"F8F8F8\"></a></div><p></p>\n<ol>\n<li>Builders send the <code>header</code>, <code>payload</code>, and <code>bid</code> to the relayer.</li>\n<li>The relayer checks the validity (the <code>bid</code> is correct, the <code>payload</code> does not contain invalid transactions, etc), stores the <code>payload</code>, and then sends the <code>header</code> and <code>bid</code> to the proposer.</li>\n<li>The proposer selects the header with the highest bid, signs it, and then sends the signed header to the relayer.</li>\n<li>The relayer propagates the signed header and corresponding payload to the network.</li>\n</ol>\n<h2><a name=\"protocol-description-5\" class=\"anchor\" href=\"https://ethresear.ch#protocol-description-5\"></a>Protocol Description</h2>\n<p>In this section, we describe the MR-MEV-Boost protocol.</p>\n<h3><a name=\"protocol-flow-overview-6\" class=\"anchor\" href=\"https://ethresear.ch#protocol-flow-overview-6\"></a>Protocol Flow Overview</h3>\n<p>To incentivize proposers to provide preconfirmations, we introduce a <em>preconf transaction</em>, where the payment of a <em>preconf tip</em> is conditioned on being preconfirmed. It will include the following information on top of the transaction payload itself:</p>\n<ul>\n<li><code>tip</code>: The preconfirmation tip paid for being preconfirmed.</li>\n<li><code>target_slot</code>: The latest slot in which the preconf transaction can be included.</li>\n<li><code>target_round</code>: The latest round within the <code>target_slot</code> in which the preconf transaction can be included.</li>\n</ul>\n<p>The <a href=\"https://ethresear.ch#preconf-transaction\">Preconf Transaction</a> section will discuss the encoding and enforcement of these conditions.</p>\n<p>Using this new transaction type, MR-MEV-Boost works as follows:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/a/7a4dc3f4c38b4184016390e2e48dc44e5630da74.png\" data-download-href=\"https://ethresear.ch/uploads/default/7a4dc3f4c38b4184016390e2e48dc44e5630da74\" title=\"MR-MEV-Boost\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/a/7a4dc3f4c38b4184016390e2e48dc44e5630da74_2_252x500.png\" alt=\"MR-MEV-Boost\" data-base62-sha1=\"hrWRvNqnv9o5v3YXh3P3LSOqABu\" width=\"252\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/a/7a4dc3f4c38b4184016390e2e48dc44e5630da74_2_252x500.png, https://ethresear.ch/uploads/default/optimized/3X/7/a/7a4dc3f4c38b4184016390e2e48dc44e5630da74_2_378x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/7/a/7a4dc3f4c38b4184016390e2e48dc44e5630da74_2_504x1000.png 2x\" data-dominant-color=\"F9F9F9\"></a></div><p></p>\n<ol>\n<li>Users submit preconf transactions to the builders. The submission can be through any order flow pipeline used in current L1, such as:\n<ul>\n<li>Public mempool.</li>\n<li>Private order flow.</li>\n<li>Order flow auctions on <a href=\"https://mevblocker.io/\" rel=\"noopener nofollow ugc\">MEVBlocker</a>, <a href=\"https://docs.flashbots.net/flashbots-protect/mev-share\" rel=\"noopener nofollow ugc\">MEV-Share</a>, <a href=\"https://writings.flashbots.net/the-future-of-mev-is-suave\" rel=\"noopener nofollow ugc\">SUAVE</a>, etc.</li>\n</ul>\n</li>\n<li>The builders build <code>partial_payload</code>s. The partial payload built by the builders should only include preconf transactions with <code>target_slot</code> and <code>target_round</code> at or after the current block/round. To commit to this, the builder signs the <code>merkle_root</code> (denoted as <code>sig_b</code> ) and becomes subject to builder slashing condition 1, described in the <a href=\"https://ethresear.ch#slashing-conditions\">slashing condition section</a>.</li>\n<li>The relayer checks the validity (e.g., the <code>bid</code> is correct, the <code>partial_payload</code> does not contain invalid transactions, etc.), stores the <code>partial_payload</code>, and then sends the <code>merkle_root</code> and <code>bid</code> to the proposer.</li>\n<li>Proposer signs (denoted as <code>sig_p</code>) and returns the selected <code>merkle_root</code> together with the current <code>round</code>.</li>\n<li>The relay publishes the selected <code>partial_payload</code> and the associated round and signatures to the preconf network. Note that the preconf network is different from the existing L1 p2p network. Only entities interested in the preconfirmed state (partial block builders, relays, full-node providers, etc.) must subscribe to the preconf network.</li>\n<li>End users—or, more precisely, the L2/L1 full nodes to which they are connected—verify that the <code>merkle_root</code> is signed by the proposer and is associated with the current <code>round</code>. Upon confirmation, they accept the <code>partial_payload</code> as preconfirmed and execute it to update to the latest preconfirmed state.</li>\n<li>\n<ol>\n<li>to 6. is repeated multiple rounds within the slot. The number of rounds within each slot will be fixed. The final round will run concurrently with the full block MEV-Boost auction at 8.-11.</li>\n</ol>\n</li>\n<li>to 11. The MEV-Boost auction is conducted for the full block. An important difference with the usual L1 MEV-Boost auction is that the <code>merkle_proofs</code> are propagated from the builder to the proposer. These proofs prove that the <code>partial_payload</code>s are included in the full block in the order they were preconfirmed without any other transaction being inserted before or between them. By validating these proofs, the proposer can ensure that the proposer slashing condition 2, described in the <a href=\"https://ethresear.ch#slashing-conditions\">slashing conditions section</a>, is not violated without needing to trust the relayer (h/t to <a href=\"https://twitter.com/Brechtpd\" rel=\"noopener nofollow ugc\">Brecht</a> for the idea of using Merkle proofs here).</li>\n</ol>\n<h3><a name=\"preconf-transaction-7\" class=\"anchor\" href=\"https://ethresear.ch#preconf-transaction-7\"></a>Preconf Transaction</h3>\n<p>Let’s consider the encoding of the preconf transactions. For L2s, the additional fields can be introduced as custom encodings of the transactions. For L1, they can be implemented through an <a href=\"https://eips.ethereum.org/EIPS/eip-4337\" rel=\"noopener nofollow ugc\">ERC-4337</a>-style entry point contract that wraps the contract calls with additional information.</p>\n<p>To enforce the expiration, the L2 execution layer (or <a href=\"https://github.com/ethereum-optimism/specs/blob/b1c9b7985b65bd2d065a414f5ad0552f36e48540/specs/protocol/derivation.md#deriving-the-transaction-list\" rel=\"noopener nofollow ugc\">derivation layer</a>) and L1 entry point contract will filter out preconf transactions with expired <code>target_slot</code>. On the other hand, since the L1 is unaware of the concept of rounds, expiration based on <code>target_round</code> will be enforced via builder slashing condition 1, explained in the next section.</p>\n<h3><a name=\"slashing-conditions-8\" class=\"anchor\" href=\"https://ethresear.ch#slashing-conditions-8\"></a>Slashing Conditions</h3>\n<p>To ensure that the full block matches with the preconfed partial blocks, the proposer will be subject to:</p>\n<ul>\n<li><strong>Proposer slashing condition 1</strong>: The proposer must not sign two conflicting <code>merkle_root</code>s within the same round.</li>\n<li><strong>Proposer slashing condition 2</strong>: The final <code>full_payload</code> should contain all the <code>partial_payload</code>s in the order they are signed and published without any other transaction being inserted before or in between.</li>\n</ul>\n<p>Furthermore, to crypto-economically enforce the expiration of preconf transactions, the builder will be subject to:</p>\n<ul>\n<li><strong>Builder slashing condition 1:</strong> Each <code>partial_payload</code> must only include preconf transactions with <code>target_slot</code> and <code>target_round</code> at or after the current slot/round.</li>\n</ul>\n<p>We impose this condition on the builder rather than the proposer because the proposer does not see the partial payload when signing. An alternative approach would be to make this a proposer slashing condition and require the relayer to ensure the condition is not violated. However, this would necessitate the proposer trusting the relayer to avoid being slashed rather than only relying on the relayer to avoid missing a slot, as is currently done in L1 MEV-Boost.</p>\n<h3><a name=\"user-actions-9\" class=\"anchor\" href=\"https://ethresear.ch#user-actions-9\"></a>User Actions</h3>\n<p>To mitigate the <a href=\"https://ethresear.ch/t/strawmanning-based-preconfirmations/19695#problem-4-fair-exchange-7\">fair exchange problem</a>, wallets or full nodes to which end users are connected should take the actions below:</p>\n<ul>\n<li><strong>User action 1</strong>: Stop submitting preconf transactions if preconfirmed <code>partial_payload</code>s are not published in a timely manner. For example, if we have 4 rounds in a slot, then stop submitting preconf transactions if a <code>partial_payload</code> is not published every 3 seconds.</li>\n<li><strong>User action 2</strong>: Set <code>target_slot</code> and <code>target_round</code> to a reasonably close block and round (e.g., one or two rounds ahead). By doing so, builders are required to respond in a timely manner to preconfirmation transactions to avoid the preconfirmation transactions being invalidated.</li>\n</ul>\n<p>More on how the fair exchange is addressed is described in the <a href=\"https://ethresear.ch#analysis\">analysis section</a>.</p>\n<h3><a name=\"l1-l2-composability-10\" class=\"anchor\" href=\"https://ethresear.ch#l1-l2-composability-10\"></a>L1-L2 Composability</h3>\n<p>Since the partial payloads can contain both L1 and L2 transactions, builders can ensure L1-L2 composability by including L1-L2 transaction bundles in the partial payloads.</p>\n<h3><a name=\"non-opted-in-slots-11\" class=\"anchor\" href=\"https://ethresear.ch#non-opted-in-slots-11\"></a>Non-opted-in Slots</h3>\n<p>When the current L1 slot’s proposer has not opted in as a preconfer, L1 transactions will be proposed by the current proposer, while L2 transactions will be proposed by the next opted-in preconfer in the lookahead (we follow Justin’s <a href=\"https://ethresear.ch/t/based-preconfirmations/17353#:~:text=proposer%20lookahead%E2%80%94higher%20precedence%20for%20smaller%20slot%20numbers\">original based preconfirmation design</a> here). This results in two simultaneous MEV-Boost auctions: the usual L1 MEV-Boost auction signed by the current L1 proposer and the MR-MEV-Boost auction signed by the next preconfer. As a result, L1-L2 composability and L1 preconfirmation will be lost during these non-opted-in slots. Note that this limitation applies to all off-protocol preconfirmation designs.</p>\n<h1><a name=\"analysis-12\" class=\"anchor\" href=\"https://ethresear.ch#analysis-12\"></a>Analysis</h1>\n<p>In this section, we will perform an initial analysis of the proposed protocol and identify its drawbacks.</p>\n<h3><a name=\"have-we-solved-the-problems-13\" class=\"anchor\" href=\"https://ethresear.ch#have-we-solved-the-problems-13\"></a>Have we solved the problems?</h3>\n<p>Let’s revisit the problems raised in the <a href=\"https://ethresear.ch/t/strawmanning-based-preconfirmations/19695\">Strawmanning Based Preconfirmations</a> post and see if and how MR-MEV-Boost addresses them.</p>\n<p><strong>Problem 1: Latency race</strong></p>\n<p>Latency races are when searchers fight to be the first to access the preconfer, leading to colocation or vertical integration. With MR-MEV-Boost, this issue is largely mitigated by preconfirming batches and conducting auctions within the batch, as it promotes competition based on price rather than speed. It is generally acknowledged that batch auctions help reduce latency wars compared to continuous first-come, first-served ordering, as described in <a href=\"https://academic.oup.com/qje/article/130/4/1547/1916146\" rel=\"noopener nofollow ugc\">this paper</a> and <a href=\"https://ethresear.ch/t/latency-arms-race-concerns-in-blockspace-markets/14957\">this post</a>.</p>\n<p><strong>Problem 2: Congestion</strong></p>\n<p>Congestion issues arise when searchers flood the rollup with probabilistic arbitrage attempts. With MR-MEV-Boost, this issue is mitigated as searchers are incentivized to participate in auctions rather than resort to spam.</p>\n<p><strong>Problem 3: Tip pricing</strong></p>\n<p>The MEV-Boost auction will handle the tip pricing of the preconfirmation. Furthermore, by introducing batching and auctions within the batch, proposers can price the preconfirmation tips more effectively (hence capturing revenue) than by providing a continuous stream of per-transaction preconfirmations.</p>\n<p><strong>Problem 4: Fair exchange</strong></p>\n<p>Let’s see how MR-MEV-Boost addresses the <a href=\"https://ethresear.ch/t/strawmanning-based-preconfirmations/19695#problem-3-tip-pricing-6\">fair exchange problem</a>, where the proposer withholds publishing preconfirmations to the user. Note that preconfers are incentivized to withhold preconf promises as much as possible to maximize their opportunity to reorder and insert transactions, thereby increasing their MEV.</p>\n<p>There are two cases to consider:</p>\n<ul>\n<li>If the proposer withholds preconfirming partial payload (i.e., stops signing <code>merkle_root</code>s of <code>partial_payload</code>s), users will stop sending preconfirmation requests (user action 1), reducing the proposer’s order flow and, consequently, revenue.</li>\n<li>If the proposer intentionally publishes empty partial payloads, pending preconf transactions will expire after a few rounds (user action 2 and builder slashing condition 1), reducing the proposer’s order flow and, consequently, revenue.</li>\n</ul>\n<p>In summary, end users monitor and enforce proposers’ honest behavior by linking the proposers’ revenue to the timely preconfirmation of partial payloads.</p>\n<p>A potential alternative would be to introduce a committee to monitor and attest to the timely releases of partial payloads. However, this would require additional trust assumption to an external committee unless we enshrine the protocol into the L1. More on enshrinement in the <a href=\"https://ethresear.ch#future-direction\">future direction section</a>.</p>\n<p><strong>Problem 5: Liveness</strong></p>\n<p>With existing based preconfirmation designs where preconfirmation duties are delegated ahead of the slot, liveness relies on this single external entity for the duration of the preconfer’s slot(s). On the other hand, with MR-MEV-Boost, liveness concerns are reduced as we do not introduce such “lock-in” to a specific entity before the slot. If some builders or relayers are unavailable, others can step in to maintain functionality. Moreover, even if the entire multi-round MEV-Boost pipeline fails, proposers still have the option to construct their own partial blocks and preconfirm them independently.</p>\n<p><strong>Problem 6: Early auctions</strong></p>\n<p>Early auctions are not introduced as preconfirmations are provided through the MEV-Boost JIT auctions.</p>\n<h2><a name=\"round-interval-14\" class=\"anchor\" href=\"https://ethresear.ch#round-interval-14\"></a>Round Interval</h2>\n<p>How short can each round in MR-MEV-Boost be? If it is too long, it will degrade the user experience; if it is too short, it will impose excessive network and hardware requirements on builders and relays, thus hurting decentralization.</p>\n<p>In each round, the relayer has two tasks:</p>\n<ul>\n<li>(A) Run the partial block auction.</li>\n<li>(B) Propagate the partial block.</li>\n</ul>\n<p>Task (A) consists of the time it takes the builder to construct the block, the time it takes the relay to validate the block, and two network round-trips: one between the builder and the relay and another between the relay and the proposer. Assuming that <a href=\"https://x.com/SheaKetsdever/status/1808509437700665543\" rel=\"noopener nofollow ugc\">block construction</a>, validation, and network round-trips take 500 milliseconds each, we get a ballpark estimate of 2 seconds.</p>\n<p>For task (B), considering L1 allocates 4 seconds for block propagation and 8 seconds for consensus, and no consensus is needed for partial blocks, a good upper bound for propagation time is 4 seconds. In practice, it should be much shorter because only block builders, relays, and full-node providers need to receive these partial blocks, and they have better network bandwidth and lower latency than average validators. Let’s assume 1-2 seconds for this analysis.</p>\n<p>Combining 2 seconds for (A) and 1-2 seconds for (B) gives us 3-4 seconds per round.</p>\n<p>These estimates are highly approximate, and further research and analysis are needed. Additionally, making the interval too short will intensify latency races toward the end of the batch duration, as described <a href=\"https://ethresear.ch/t/latency-arms-race-concerns-in-blockspace-markets/14957#auction-designs-for-transaction-ordering-2\">here</a>, and should be considered.</p>\n<h2><a name=\"drawbacks-15\" class=\"anchor\" href=\"https://ethresear.ch#drawbacks-15\"></a>Drawbacks</h2>\n<p>Next, we will outline the drawbacks of this protocol when compared to existing based preconfirmation designs, such as the one described in the <a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">original post</a>. An analysis of more general drawbacks of preconfirmations will be reserved for future work.</p>\n<h3><a name=\"no-speed-of-light-continuous-preconfirmations-16\" class=\"anchor\" href=\"https://ethresear.ch#no-speed-of-light-continuous-preconfirmations-16\"></a>No Speed-of-light Continuous Preconfirmations</h3>\n<p>MR-MEV-Boost does not provide speed-of-light preconfirmations with hundreds of milliseconds latency, like <a href=\"https://docs.arbitrum.io/how-arbitrum-works/sequencer\" rel=\"noopener nofollow ugc\">Arbitrum’s first-come-first-serve sequencer</a>. Instead, it offers preconfirmations in batches with a few seconds of latency between them, similar to <a href=\"https://docs.optimism.io/connect/resources/glossary#time-slot\" rel=\"noopener nofollow ugc\">Optimism’s approach</a>.</p>\n<p><a href=\"https://solana.com/\" rel=\"noopener nofollow ugc\">Solana</a> and <a href=\"https://www.jito.wtf/\" rel=\"noopener nofollow ugc\">Jito</a> provide an interesting case study on continuous versus batched preconfirmations. In Solana’s “continuous block building,” the leader streams (i.e., preconfirms) processed transactions continuously. Combined with Solana’s fixed low fee, continuous block building led to network spamming and latency races, causing validators to <a href=\"https://www.jito.network/blog/solving-the-mev-problem-on-solana-a-guide-for-stakers/\" rel=\"noopener nofollow ugc\">waste 58% of their time processing failed arbitrages</a>. Jito addressed this by introducing a 200ms “speed bump” (batches) and a mev-geth style bundle auction for batches, achieving an 80% share with their Jito validator client. This example indicates that that continuous preconfirmations are likely unsustainable due to spam and that batching and some auction for each batch are required. For more details, watch this informative talk by Zano Sherwani, co-founder of Jito, <a href=\"https://www.youtube.com/watch?v=c-O_JZI2QAA\" rel=\"noopener nofollow ugc\">here</a>.</p>\n<h3><a name=\"relay-burden-17\" class=\"anchor\" href=\"https://ethresear.ch#relay-burden-17\"></a>Relay Burden</h3>\n<p>MR-MEV-Boost introduces additional burdens to the relays without incentives. Instead of managing a single round of MEV-Boost auctions, relayers must handle multiple rounds within a single slot, each within a limited timeframe. If the cost of operating a relayer increases too much, it may lead to further relayer centralization and <a href=\"https://collective.flashbots.net/t/builderelay/2688/1\" rel=\"noopener nofollow ugc\">builder-relay integration</a>, or alternatively, no relayer may opt to support MR-MEV-Boost. Relayer incentives are a <a href=\"https://www.gate.io/learn/articles/the-pursuit-of-relay-incentivization/1257\" rel=\"noopener nofollow ugc\">long-lasting problem</a> in L1, and MR-MEV-Boost likely worsen this situation.</p>\n<p>One way to mitigate the issue is to incorporate <a href=\"https://frontier.tech/optimistic-relays-and-where-to-find-them\" rel=\"noopener nofollow ugc\">optimistic relay</a> schemes to reduce the relayer’s operational costs. With this approach, relayers optimistically assume the honesty of the block-builder and skip the validation work for payloads sent from the builder. If the builder is later found to deviate from honest behavior, their collateral will be used to refund the proposer. Optimistic relaying would be especially helpful as it allows relayers to bypass the need to validate the based rollup transactions when verifying partial blocks.</p>\n<p>Another potential solution is for the proposers to share the preconfirmation tip revenue with the relay to compensate for the additional workload.</p>\n<h3><a name=\"blob-efficiency-18\" class=\"anchor\" href=\"https://ethresear.ch#blob-efficiency-18\"></a>Blob Efficiency</h3>\n<p>So far, we have blurred the line between L1 and L2 preconfirmations. This is somewhat intentional, as L2 transactions are included within L1 transactions. However, there are cases where the difference becomes important.</p>\n<p>Consider a scenario where the L2 transactions within a round cannot fill an entire blob. If we only support preconfirmations for L2 transactions by preconfirming the L1 transactions that contain them, we face a problem. Proposers would either have to preconfirm partially filled blob transactions at the end of the round or wait for another round to collect enough transactions to fill the blob.</p>\n<p>One solution is to allow proposers to commit to a batch of L2 transactions without linking them to a specific L1 transaction. This would let the builder of the final full block aggregate the L2 transactions into one or more L1 blobs at the end of the slot.</p>\n<h3><a name=\"issues-with-mev-boost-19\" class=\"anchor\" href=\"https://ethresear.ch#issues-with-mev-boost-19\"></a>Issues with MEV-Boost</h3>\n<p>MR-MEV-Boost inherits the existing L1 MEV-Boost pipeline, which also means that we inherit many of MEV-Boost’s downsides, such as <a href=\"https://arxiv.org/pdf/2305.19037\" rel=\"noopener nofollow ugc\">reliance on a handful of relays and builders</a>. However, based rollups aim to inherit the security of L1, not to exceed it. Therefore, being “as bad as” L1 is the best we can do as a based solution.</p>\n<h1><a name=\"future-direction-20\" class=\"anchor\" href=\"https://ethresear.ch#future-direction-20\"></a>Future Direction</h1>\n<p>MR-MEV-Boost can be generalized as <em>partial-block preconfirmations</em>, where the proposer incrementally builds the block by committing to and publishing partial blocks during their slot.</p>\n<p>One future direction would be to enshrine partial-block preconfirmations into the L1 protocol to achieve faster block times. This aligns with Vitalik’s <a href=\"https://vitalik.eth.limo/general/2024/06/30/epochslot.html\" rel=\"noopener nofollow ugc\">recent post</a> and offers several benefits over off-protocol designs like MR-MEV-Boost:</p>\n<ul>\n<li>Removes “non-opted-in” proposers, enabling L1 preconfirmations and L1-L2 composability for all slots.</li>\n<li>Fully utilizes Ethereum’s validator set, potentially introducing lightweight <a href=\"https://ethresear.ch/t/payload-timeliness-committee-ptc-an-epbs-design/16054\">PTC</a>-like attestations for timely partial payload releases.</li>\n<li>Opens doors to increase the block times without degrading UX, which may help enable <a href=\"https://ethereum.org/en/roadmap/single-slot-finality/\" rel=\"noopener nofollow ugc\">single-slot finality</a>.</li>\n</ul>\n<h1><a name=\"related-work-21\" class=\"anchor\" href=\"https://ethresear.ch#related-work-21\"></a>Related Work</h1>\n<p>In his <a href=\"https://dba.xyz/were-all-building-the-same-thing/\" rel=\"noopener nofollow ugc\">latest post</a>, Jon Charbonneau explains in great detail how based rollups/preconfirmations work and the centralization risk of based preconfirmations.</p>\n<p>Furthermore, partial-block preconfirmations are closely related to <a href=\"https://ethresear.ch/t/how-much-can-we-constrain-builders-without-bringing-back-heavy-burdens-to-proposers/13808\">inclusion list</a> research, as both can be viewed under the broader concept of “partial-block building,” where different parts of a block are constructed at different times by different entities. For example, the <a href=\"https://research.eigenlayer.xyz/t/mev-boost-liveness-first-relay-design/15\" rel=\"noopener nofollow ugc\">MEV-Boost++ proposal</a> from Kyodo (EigenLayer) resembles MR-MEV-Boost, as both enable early commitment to partial blocks by imposing additional slashing conditions on the proposer.</p>\n<h1><a name=\"conclusion-22\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-22\"></a>Conclusion</h1>\n<p>We introduce MR-MEV-Boost, a design that enables based preconfirmations by running multiple rounds of MEV-Boost auctions within a single slot. By inheriting the L1 PBS pipeline, MR-MEV-Boost mitigates many of the negative externalities of based preconfirmations while retaining the benefits of based rollups.</p>\n<p>At <a href=\"https://switchboard.nethermind.io/\" rel=\"noopener nofollow ugc\">Nethermind Switchboard</a>, we actively research and tackle the open challenges of based preconfirmations. We are also collaborating closely with Taiko to develop <a href=\"https://github.com/NethermindEth/Taiko-Preconf-AVS/blob/6b21d85d329986a2a9725048e56be3a45d463dcc/Docs/design-doc.md\" rel=\"noopener nofollow ugc\">a PoC for based preconfirmations</a> compatible with L2 PBS, including MR-MEV-Boost. Stay tuned for more updates!</p>\n            <p><small>5 posts - 3 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/based-preconfirmations-with-multi-round-mev-boost/20091\">Read full topic</a></p>","link":"https://ethresear.ch/t/based-preconfirmations-with-multi-round-mev-boost/20091","pubDate":"Thu, 18 Jul 2024 06:47:13 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20091"},"source":{"@url":"https://ethresear.ch/t/based-preconfirmations-with-multi-round-mev-boost/20091.rss","#text":"Based Preconfirmations with Multi-round MEV-Boost"},"filter":false},{"title":"A Note On Securely Finding Minimum Mean Cycle","dc:creator":"0xvon","category":"Privacy","description":"<p>This study is supported by an Ethereum Foundation R&amp;D grant and is a collaborative work with Enrico ( <a class=\"mention\" href=\"https://ethresear.ch/u/enricobottazzi\">@enricobottazzi</a> ), Masato ( <a class=\"mention\" href=\"https://ethresear.ch/u/0xvon\">@0xvon</a> ) and Nam ( <a href=\"https://github.com/namnc\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">namnc (Nam Ngo) · GitHub</a> ) from Ethereum Foundation.</p>\n<p><strong>Abstract</strong></p>\n<p>Executing graph optimization algorithms such as the Minimum Mean Cycle (MMC) while preserving privacy has significant potential for handling sensitive information between users and companies. For example, it enables multilateral netting to solve the Minimum Cost Flow (MCF) problem [4] without disclosing mutual debts, making it highly relevant for processes like netting among multinational corporations. Aly et. al. [2] proposed an algorithm using Multi-Party Computation (MPC) to execute the MMC problem. However, this approach is based on Karp’s algorithm [1], which was found by Chaturvedi et al. [3] to occasionally fail to detect cycles. In this study, we propose a revised protocol that corrects this issue and enhances its efficiency. We implemented our protocol using MP-SPDZ and confirmed that it correctly identifies the MMC, similar to traditional protocols. Our findings indicate that our proposed protocol operates correctly and more efficiently than Aly’s protocol, which reduces the time/round complexity from <span class=\"math\">O(|V|^5)</span> to <span class=\"math\">O(|V|^3)</span> and the space complexity from <span class=\"math\">O(|V|^4)</span> to <span class=\"math\">O(|V|^2)</span>. Furthermore, we discuss potential improvements for even more efficient algorithms.</p>\n<h1><a name=\"h-1-introduction-1\" class=\"anchor\" href=\"https://ethresear.ch#h-1-introduction-1\"></a>1. Introduction</h1>\n<h3><a name=\"h-1-1-importance-of-graph-theory-optimization-2\" class=\"anchor\" href=\"https://ethresear.ch#h-1-1-importance-of-graph-theory-optimization-2\"></a>1-1. Importance of Graph Theory Optimization</h3>\n<p>Graph theory optimization problems play a crucial role in various domains, from computer science and engineering to economics and finance. These problems involve finding the most efficient way to navigate, connect, or utilize network structures, and solutions to these problems have far-reaching implications for improving systems and processes.</p>\n<p>One of the representative problems in graph theory optimization is the Minimum Cost Flow (MCF) problem, which aims to find the least costly way to send a certain amount of flow through a network. The MCF problem is foundational in numerous applications, providing critical insights and optimizations.</p>\n<p>In the financial sector, particularly in Netting, the Minimum Cost Flow (MCF) problem is often addressed to optimize the settlement of transactions and reduce systemic risk [4]. Netting involves aggregating multiple financial obligations to streamline transactions, minimize risk, and enhance efficiency. However, one of the critical challenges in this context is maintaining the privacy and confidentiality of sensitive financial data. Traditional methods for solving the MCF problem may require exposing transaction details, leading to significant privacy concerns and potential security risks.</p>\n<p>Beyond netting, the MMC problem and its solutions have a wide array of applications across various fields:</p>\n<ul>\n<li><strong>Network Security:</strong> Enhancing security measures by optimizing the flow of information and resources while minimizing potential points of vulnerability.</li>\n<li><strong>Supply Chain Management</strong>: Streamlining logistics and distribution networks to reduce costs and improve delivery times.</li>\n<li><strong>Urban Planning</strong>: Developing efficient transportation systems by optimizing traffic flow and reducing congestion.</li>\n</ul>\n<p>The Minimum Mean Cycle (MMC) problem is a crucial component in solving the MCF problem. The MMC problem focuses on identifying cycles in directed graphs with the minimum average weight, which is essential for detecting inefficient paths and optimizing network performance. By incorporating the MMC problem into the solution of the MCF problem, we can achieve more accurate and efficient outcomes.</p>\n<p>To address the privacy concerns inherent in solving the MCF problem, we explore the use of Multi-Party Computation (MPC) to securely solve the MMC problem. MPC is a cryptographic approach that allows multiple parties to collaboratively compute a function over their inputs while keeping those inputs private. By applying MPC techniques, we can solve the MMC problem without exposing sensitive data, thus preserving the privacy of financial transactions and other confidential information.</p>\n<h3><a name=\"h-1-2-previous-work-3\" class=\"anchor\" href=\"https://ethresear.ch#h-1-2-previous-work-3\"></a>1-2. Previous Work</h3>\n<p>Aly et al. [2] proposed a method to solve Karp’s MMC algorithm [1] using Multi-Party Computation. However, this approach has some problems and suffers from significant computational complexity and time consumption. Additionally, the Karp’s algorithm [1] was found by Chaturvedi et al . [3] to occasionally fail to detect cycles.</p>\n<h3><a name=\"h-1-3-our-contribution-4\" class=\"anchor\" href=\"https://ethresear.ch#h-1-3-our-contribution-4\"></a>1-3. Our Contribution</h3>\n<p>in this study, we propose a novel approach that not only addresses these shortcomings but also offers a more efficient and practical solution for securely solving the MMC problem using MPC. Our proposed protocol aims to reduce computational and time complexities, enhance cycle detection accuracy, and ensure robust privacy protection. Our experimental results demonstrate a significant improvement in efficiency, with a reduction in time complexity from <span class=\"math\">O(|V|^5)</span> to <span class=\"math\">O(|V|^3)</span> and space complexity from <span class=\"math\">O(|V|^4)</span> to <span class=\"math\">O(|V|^2)</span>.</p>\n<h1><a name=\"h-2-minimum-mean-cycle-problem-5\" class=\"anchor\" href=\"https://ethresear.ch#h-2-minimum-mean-cycle-problem-5\"></a>2. Minimum Mean Cycle Problem</h1>\n<p>Minimum Mean Cycle Problem and its solution is defined by Karp in 1978 [1].</p>\n<h3><a name=\"h-2-1-problem-definition-6\" class=\"anchor\" href=\"https://ethresear.ch#h-2-1-problem-definition-6\"></a>2-1. Problem Definition</h3>\n<p>Given a connected graph <span class=\"math\">G(V,E)</span> where <span class=\"math\">V</span> is a set of nodes and <span class=\"math\">E</span> is a set of edges, with defining these parameters:</p>\n<ul>\n<li><span class=\"math\">c_{i,j} \\in C</span> denotes the <strong>cost</strong> on the edge <span class=\"math\">(i,j)</span>.</li>\n<li><span class=\"math\">d^k(i)</span> denotes the minimum cost from node <span class=\"math\">s</span> to <span class=\"math\">i</span> that contains exactly <span class=\"math\">k</span> edges.</li>\n</ul>\n<p>First of all, for any cycle <span class=\"math\">X</span>, the mean cycle is defined by:</p>\n<div class=\"math\">\n\\begin{equation}\n\\mu (X) = \\frac{\\sum_{uv \\in X} c_{uv}}{|X|}\n\\end{equation}\n</div>\n<p>Thus, the minimum mean cycle is:</p>\n<div class=\"math\">\n\\begin{equation}\n\\mu ^* = \\min_{cycle X} \\mu (X)\n\\end{equation}\n</div>\n<p>Minimum Mean Cycle (MMC) Problem is the problem to find this <span class=\"math\">\\mu ^*</span>.</p>\n<h3><a name=\"h-2-2-efficient-mmc-7\" class=\"anchor\" href=\"https://ethresear.ch#h-2-2-efficient-mmc-7\"></a>2-2. Efficient MMC</h3>\n<p>The MMC problem is known as NP-hard, and Karp introduces an efficient algorithm for solving it. The solution is followed by 2 steps.</p>\n<p>The first step, we call it as <strong>Walk</strong>, is to calculates <span class=\"math\">d^k(i)</span>, which denotes minimum cost from node <span class=\"math\">s</span> to <span class=\"math\">i</span> that contains exactly <span class=\"math\">k</span> edges. Walk can be computed via the recurrence:</p>\n<div class=\"math\">\n\\begin{equation}\nd^k(j) = \\min_{(i,j) \\in E} d^{k-1}(i)+c_{ij}\n\\end{equation}\n</div>\n<p>Initially, <span class=\"math\">d^0(j)=\\infty</span>, except for the source node <span class=\"math\">d^0(s)=0</span></p>\n<p>The second step is to calculate the minimum mean cycle by:</p>\n<div class=\"math\">\n\\begin{equation}\n\\mu^* = \\min_{j \\in V} \\max_{0 \\leq k \\leq |V|-1} \\left[ \\frac{d^V(j) - d^k(j)}{|V| - k} \\right]\n\\end{equation}\n</div>\n<p>See Karp’s paper [1] for a proof of equation (4). Overall algorithmic complexity is <span class=\"math\">O(|V| \\cdot |E|)</span>, and the first step has a significant impact on the entire algorithm.</p>\n<h1><a name=\"h-3-alys-secure-mmc-protocol-8\" class=\"anchor\" href=\"https://ethresear.ch#h-3-alys-secure-mmc-protocol-8\"></a>3. Aly’s Secure MMC Protocol</h1>\n<p><strong>Notation</strong></p>\n<ul>\n<li><span class=\"math\">[a]</span> denotes secret shared or encrypted values of <span class=\"math\">a</span></li>\n<li><span class=\"math\">[z] = _{[c]} [x]:[y]</span> denotes the assignment that if <span class=\"math\">[c]</span> is one, <span class=\"math\">[x]</span> is assigned to <span class=\"math\">[z]</span> or <span class=\"math\">[y]</span> otherwise.</li>\n</ul>\n<h3><a name=\"h-3-1-protocol-9\" class=\"anchor\" href=\"https://ethresear.ch#h-3-1-protocol-9\"></a>3-1. Protocol</h3>\n<p>Aly et. al. [2] provide algorithmic solutions to MMC problem in a secure multi-party and distributed setting. This protocol is constructed by 2 sub-protocols:</p>\n<ol>\n<li><span class=\"math\">walk([C],[b]) \\rightarrow [A],[walks]</span></li>\n<li><span class=\"math\">mmc([A],[walks]) \\rightarrow [\\text{min-cost}], [\\text{min-cycle}]</span></li>\n</ol>\n<p>This corresponds to Steps 1 and 2 of Karp’s Algorithm in section 2.</p>\n<p>In first sub-protocol, we have two inputs. The cost matrix <span class=\"math\">[C]_{ij}</span> denotes the cost of edge <span class=\"math\">(i,j)</span>. It represents <span class=\"math\">[\\infty]</span> for non-existing edges. The viable matrix <span class=\"math\">[b]_{ij}</span> denotes 1 if edge <span class=\"math\">(i,j)</span> doesn’t exist, and 0 otherwise.</p>\n<p>From these inputs, we outputs two values. One is the 2-dimensional walk cost matrix <span class=\"math\">[A]</span> which <span class=\"math\">[A]_{jk}</span> records <span class=\"math\">d^k(j)</span>. The other is 4-dimensional walk path matrix <span class=\"math\">[walks]</span> which <span class=\"math\">[walks]_{ijkl}</span> records the number of times the edge <span class=\"math\">(i,j)</span> is traversed by the shortest walk of length <span class=\"math\">k</span> from <span class=\"math\">s</span> to <span class=\"math\">l</span>. The algorithm is detailed as Protocol 3-1.</p>\n<hr>\n<p><strong>Protocol 3-1. Aly’s Walk Protocol</strong></p>\n<hr>\n<p><strong>Input</strong>: A matrix of shared costs <span class=\"math\">[C]_{ij}</span> for <span class=\"math\">i,j \\in \\{1,2,...,|V|\\}</span>, a binary matrix on viable adges <span class=\"math\">[b]_{ij}</span> for <span class=\"math\">i,j \\in \\{1,2,...,|V|\\}</span>.</p>\n<p><strong>Output</strong>: A matrix of walk costs <span class=\"math\">[A]_{ik}</span> for <span class=\"math\">i \\in \\{1,2,...,|V|\\}</span> and <span class=\"math\">k \\in \\{0,1,...,|V|\\}</span>, a wak matrix <span class=\"math\">[walks]_{ijkl}</span> for <span class=\"math\">i,j,k,l \\in \\{1,2,...,|V|\\}</span> encoding these walks.</p>\n<ol>\n<li><span class=\"math\">[A] \\leftarrow [\\infty], [A]_{00} \\leftarrow [0], [C] \\leftarrow [C] + [\\infty](1-[b])</span></li>\n<li><strong>for</strong> <span class=\"math\">k \\leftarrow 1</span> to <span class=\"math\">|V|+1</span> do\n<ol>\n<li><strong>for</strong> <span class=\"math\">j \\leftarrow 1</span> to <span class=\"math\">|V|</span> do\n<ol>\n<li><strong>for</strong> <span class=\"math\">i \\leftarrow 1</span> to <span class=\"math\">|V|</span> do\n<ol>\n<li><span class=\"math\">[c] \\leftarrow [A]_{ik-1} + [C]_{ij} &lt; [A]_{jk}</span></li>\n<li><span class=\"math\">[A]_{jk} \\leftarrow _{[c]} [A]_{ik-1} + [C]_{ij} : [A]_{jk}</span></li>\n<li><span class=\"math\">[walks]_{..kj} \\leftarrow _{[c]} [walks]_{..k-1i} : [walks]_{..kj}</span></li>\n<li><span class=\"math\">[walks]_{ijkj} \\leftarrow _{[c]} [walks]_{ijkj} + 1 : [walks]_{ijkj}</span></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n</ol>\n<hr>\n<p>In second sub-protocol, we have two outputs. <span class=\"math\">[\\text{min-cost}]</span> is the minimum mean cost. <span class=\"math\">[\\text{min-cycle}]</span> denotes the 2-dimensional cycle matrix which <span class=\"math\">[\\text{min-cycle}]_{jk}</span> is 1 if edge <span class=\"math\">(j,k)</span> is included in the cycle achieving <span class=\"math\">\\mu ^*</span> and 0 otherwise. Here, <span class=\"math\">\\text{min-cycle}</span> is s-j path with <span class=\"math\">|V|</span> edges whose cost is <span class=\"math\">d^{|V|}(j)</span>, minus the s-j path with k edges whose cost is <span class=\"math\">d^{k}(j)</span>. The details are provided as protocol 3-2. We note that we use the theorem that <span class=\"math\">\\frac{a}{b}&gt;\\frac{c}{d} \\iff ad&gt;bc</span> to make a comparison of <span class=\"math\">\\frac{d^V(j) - d^k(j)}{|V| - k}</span> without calculating the inverse.</p>\n<hr>\n<p><strong>Protocol 3-2. Aly’s MMC Protocol</strong></p>\n<hr>\n<p><strong>Input:</strong> A matrix of walk costs <span class=\"math\">[A]_{ik}</span> for <span class=\"math\">i \\in \\{1,2,...,|V|\\}</span> and <span class=\"math\">k \\in \\{0,2,...,|V|\\}</span>, a walk matrix <span class=\"math\">[walks]_{ijkl}</span> for <span class=\"math\">i,j,k,l \\in \\{1,2,...,|V|\\}</span> encoding these walks.</p>\n<p><strong>Output</strong>: The cost of the minimum mean cycle <span class=\"math\">[\\text{min-cost}]</span>, a matrix with the minimum mean cycle <span class=\"math\">[\\text{min-cycle}]_{ij}</span> for <span class=\"math\">i,j \\in \\{1,2,...,|V|\\}</span></p>\n<ol>\n<li>\n<p><strong>for</strong> <span class=\"math\">j \\leftarrow 1</span> to <span class=\"math\">|V|</span> do</p>\n<ol>\n<li><span class=\"math\">[\\text{max-cycle}],[\\text{max-cost}] \\leftarrow \\phi</span></li>\n<li><strong>for</strong> <span class=\"math\">k \\leftarrow |V|</span> to <span class=\"math\">1</span> do\n<ol>\n<li><span class=\"math\">[\\text{a-num}] \\leftarrow [A]_{j(|V|+1)} - [A]_{jk}</span></li>\n<li><span class=\"math\">[\\text{a-den}] \\leftarrow |V|-k</span></li>\n<li><span class=\"math\">[c] \\leftarrow [\\text{k-num}] \\cdot [\\text{a-den}] &lt; [\\text{a-num}] \\cdot [\\text{k-den}]</span></li>\n<li><span class=\"math\">[\\text{k-num}] \\leftarrow _{[c]} [\\text{a-num}]  : [\\text{k-num}]</span></li>\n<li><span class=\"math\">[\\text{k-den}] \\leftarrow _{[c]} [\\text{a-den}]  : [\\text{k-den}]</span></li>\n<li><span class=\"math\">[\\text{max-cycle}] \\leftarrow _{[c]} [walks]_{..|V|j} - [walks]_{..kj} : [\\text{max-cycle}]</span></li>\n<li><span class=\"math\">[\\text{max-cost}] \\leftarrow _{[c]} [A]_{jk} : [\\text{max-cost}]</span></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n<li><span class=\"math\">[c] \\leftarrow [\\text{j-num}] \\cdot [\\text{k-den}] &lt; [\\text{k-num}] \\cdot [\\text{j-den}]</span></li>\n<li><span class=\"math\">[\\text{j-num}] \\leftarrow _{[c]} [\\text{k-num}]  : [\\text{j-num}]</span></li>\n<li><span class=\"math\">[\\text{j-den}] \\leftarrow _{[c]} [\\text{k-den}]  : [\\text{j-den}]</span></li>\n<li><span class=\"math\">[\\text{min-cycle}] \\leftarrow _{[c]} [\\text{max-cycle}] : [\\text{min-cycle}]</span></li>\n<li><span class=\"math\">[\\text{min-cost}] \\leftarrow _{[c]} [\\text{max-cost}] : [\\text{min-cost}]</span></li>\n</ol>\n</li>\n<li>\n<p><strong>end</strong></p>\n</li>\n</ol>\n<hr>\n<p><strong>Complexity</strong></p>\n<p>This method requires <span class=\"math\">O(|V|^5)</span> time/round complexity, from the conditional assignments to <span class=\"math\">|V| \\times |V|</span> elements in <span class=\"math\">[walks]</span> matrix for <span class=\"math\">|V|^3</span> loops (line i-3~4 of Protocol 1). And this method requires <span class=\"math\">O(|V|^4)</span> space complexity, due to 4-dimensional <span class=\"math\">[walks]</span> matrix.</p>\n<h3><a name=\"h-3-2-problem-in-alys-protocol-10\" class=\"anchor\" href=\"https://ethresear.ch#h-3-2-problem-in-alys-protocol-10\"></a>3-2. Problem in Aly’s Protocol</h3>\n<p>Aly’s protocol implements Karp algorithm [1] in the secure manner. In karp’s alrogithm, we determine <span class=\"math\">\\text{min-cycle}</span> like s-j path with <span class=\"math\">|V|</span> edges whose cost is <span class=\"math\">d^{|V|}(j)</span>, minus the s-j path with k edges whose cost is <span class=\"math\">d^{k}(j)</span>. However, Chaturvedi and McConnell [3] provides an counterexample which the cycle couldn’t detected with this method. Furthermore, they prove the following lemma.</p>\n<p><strong>Lemma 1</strong><br>\nLet <span class=\"math\">j</span> be a vertex such that there exists <span class=\"math\">k</span>, where <span class=\"math\">j</span> and <span class=\"math\">k</span> are a minimizing pair. Every cycle on the length <span class=\"math\">|V|</span> edge progression from <span class=\"math\">s</span> to <span class=\"math\">j</span> of cost <span class=\"math\">d^{|V|}(j)</span> is a cycle of minimum mean cost. (See the proof on their paper [3].)</p>\n<p>This lemma means that the cycle can be detected by traversing the edge progression from the last edge and marking the vertices visited by the walk until a previous marked vertex is encountered, from s-j path with <span class=\"math\">|V|</span> edges whose cost is <span class=\"math\">d^{|V|}(j)</span>.</p>\n<h1><a name=\"h-4-cm-based-secure-mmc-protocol-11\" class=\"anchor\" href=\"https://ethresear.ch#h-4-cm-based-secure-mmc-protocol-11\"></a>4. CM-based Secure MMC Protocol</h1>\n<p><strong>Notation</strong></p>\n<ul>\n<li><span class=\"math\">[a]</span> denotes secret shared or encrypted values of <span class=\"math\">a</span></li>\n<li><span class=\"math\">[z] = _{[c]} [x]:[y]</span> denotes the assignment that if <span class=\"math\">[c]</span> is one, <span class=\"math\">[x]</span> is assigned to <span class=\"math\">[z]</span> or <span class=\"math\">[y]</span> otherwise.</li>\n</ul>\n<h3><a name=\"h-4-1-protocol-12\" class=\"anchor\" href=\"https://ethresear.ch#h-4-1-protocol-12\"></a>4-1. Protocol</h3>\n<p>We propose a protocol that converts the minimum mean cycle detection from Aly’s protocol to one with Lemma1. In addition, a few changes have been made to the data structure. We name it “<strong>CM-based Securely MMC Protocol</strong>”, taking the initials of Chaturvedi and McConnell, who proposed Lemma 1.</p>\n<p>CM-based protocol is constructed by 3 sub-protocols:</p>\n<ol>\n<li><span class=\"math\">walk([C],[b]) \\rightarrow [A],[ep]</span></li>\n<li><span class=\"math\">mmc</span>\n<ol>\n<li><span class=\"math\">mmcn([A],[ep]) \\rightarrow [\\text{min-cost}],[\\text{minimizing-node}]</span></li>\n<li><span class=\"math\">extract\\text{-}cycle([\\text{minimizing-node}],[ep]) \\rightarrow [\\text{min-cycle}]</span></li>\n</ol>\n</li>\n</ol>\n<p>Here, Aly’s second sub-protocol is divided into CM-based second and third sub-protocols.</p>\n<p>In fist sub-protocol, For the most part, it is the same as Protocol 3-1, with one difference: Instead of <span class=\"math\">[walks]</span>, we record the edge progression in a 2-dimensional matrix called <span class=\"math\">[ep]</span>, which <span class=\"math\">[ep]_{jk}</span> means the edge that passes before one of <span class=\"math\">j</span> in the shortest s-j path with k edges. This change eliminates the need for extra <span class=\"math\">|V|^2</span> loops to update <span class=\"math\">[walks]_{..kj}</span>. The algorithm is detailed as Protocol 4-1.</p>\n<hr>\n<p><strong>Protocol 4-1. CM-based Walk Protocol</strong></p>\n<hr>\n<p><strong>Input</strong>: A matrix of shared costs <span class=\"math\">[C]_{ij}</span> for <span class=\"math\">i,j \\in \\{1,2,...,|V|\\}</span>, a binary matrix on viable adges <span class=\"math\">[b]_{ij}</span> for <span class=\"math\">i,j \\in \\{1,2,...,|V|\\}</span>.</p>\n<p><strong>Output</strong>: A matrix of walk costs <span class=\"math\">[A]_{ik}</span> for <span class=\"math\">i \\in \\{1,2,...,|V|\\}</span> and <span class=\"math\">k \\in \\{0,1,...,|V|\\}</span>, a matrix of walk edge progressions <span class=\"math\">[ep]_{ij}</span> for <span class=\"math\">i,j \\in \\{1,2,...,|V|\\}</span>.</p>\n<ol>\n<li><span class=\"math\">[A] \\leftarrow [\\infty], [A]_{00} \\leftarrow [0], [C] \\leftarrow [C] + [\\infty](1-[b])</span></li>\n<li><strong>for</strong> <span class=\"math\">k \\leftarrow 1</span> to <span class=\"math\">|V|+1</span> do\n<ol>\n<li><strong>for</strong> <span class=\"math\">j \\leftarrow 1</span> to <span class=\"math\">|V|</span> do\n<ol>\n<li><strong>for</strong> <span class=\"math\">i \\leftarrow 1</span> to <span class=\"math\">|V|</span> do\n<ol>\n<li><span class=\"math\">[c] \\leftarrow [A]_{ik-1} + [C]_{ij} &lt; [A]_{jk}</span></li>\n<li><span class=\"math\">[A]_{jk} \\leftarrow _{[c]} [A]_{ik-1} + [C]_{ij} : [A]_{jk}</span></li>\n<li><span class=\"math\">[ep]_{jk} \\leftarrow _{[c]} i : [ep]_{jk}</span></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n</ol>\n<hr>\n<p>In (a) of the 2nd sub-protocol, instead of computing <span class=\"math\">[\\text{min-cycle}]</span>, we detect the node <span class=\"math\">j</span> that achieves mmc. We call it minimizing node.</p>\n<p>The algorithm is detailed as Protocol 4-2-a.</p>\n<hr>\n<p><strong>Protocol 4-2-a. CM-based MMCN Protocol</strong></p>\n<hr>\n<p><strong>Input:</strong> A matrix of walk costs <span class=\"math\">[A]_{ik}</span> for <span class=\"math\">i \\in \\{1,2,...,|V|\\}</span> and <span class=\"math\">k \\in \\{0,2,...,|V|\\}</span>, a matrix of walk progressions <span class=\"math\">[ep]_{ij}</span> for <span class=\"math\">i,j \\in \\{1,2,...,|V|\\}</span>.</p>\n<p><strong>Output</strong>: The cost of the minimum mean cycle <span class=\"math\">[\\text{min-cost}]</span>, the node achieving the minimum mean cycle <span class=\"math\">[\\text{minimizing-node}]</span>.</p>\n<ol>\n<li>\n<p><strong>for</strong> <span class=\"math\">j \\leftarrow 1</span> to <span class=\"math\">|V|</span> do</p>\n<ol>\n<li>\n<p><span class=\"math\">[\\text{max-cost}] \\leftarrow \\phi</span></p>\n</li>\n<li>\n<p><strong>for</strong> <span class=\"math\">k \\leftarrow |V|</span> to <span class=\"math\">1</span> do</p>\n<ol>\n<li><span class=\"math\">[\\text{a-num}] \\leftarrow [A]_{j(|V|+1)} - [A]_{jk}</span></li>\n<li><span class=\"math\">[\\text{a-den}] \\leftarrow |V|-k</span></li>\n<li><span class=\"math\">[c] \\leftarrow [\\text{k-num}] \\cdot [\\text{a-den}] &lt; [\\text{a-num}] \\cdot [\\text{k-den}]</span></li>\n<li><span class=\"math\">[\\text{k-num}] \\leftarrow _{[c]} [\\text{a-num}]  : [\\text{k-num}]</span></li>\n<li><span class=\"math\">[\\text{k-den}] \\leftarrow _{[c]} [\\text{a-den}]  : [\\text{k-den}]</span></li>\n<li><span class=\"math\">[\\text{max-cost}] \\leftarrow _{[c]} [A]_{jk} : [\\text{max-cost}]</span></li>\n</ol>\n</li>\n<li>\n<p><strong>end</strong></p>\n</li>\n<li>\n<p><span class=\"math\">[c] \\leftarrow [\\text{j-num}] \\cdot [\\text{k-den}] &lt; [\\text{k-num}] \\cdot [\\text{j-den}]</span></p>\n</li>\n<li>\n<p><span class=\"math\">[\\text{j-num}] \\leftarrow _{[c]} [\\text{k-num}]  : [\\text{j-num}]</span></p>\n</li>\n<li>\n<p><span class=\"math\">[\\text{j-den}] \\leftarrow _{[c]} [\\text{k-den}]  : [\\text{j-den}]</span></p>\n</li>\n<li>\n<p><span class=\"math\">[\\text{minimizing-node}] \\leftarrow _{[c]} j : [\\text{minimizing-node}]</span></p>\n</li>\n<li>\n<p><span class=\"math\">[\\text{min-cost}] \\leftarrow _{[c]} [\\text{max-cost}] : [\\text{min-cost}]</span></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>end</strong></p>\n</li>\n</ol>\n<hr>\n<p>In (b) of the 2nd sub-protocol, from <span class=\"math\">[\\text{minimizing-node}]</span>, we construct a back pointer which indicates s-j path with <span class=\"math\">|V|</span> edges whose cost is <span class=\"math\">d^{|V|}(j)</span> and extract a cycle from the back pointer. Compared to Protocol 3-2, instead of expanding <span class=\"math\">[\\text{min-cycle}]</span> directly from <span class=\"math\">[walks]</span>, the additional protocol is required. We follow Lemma 1 and consider any cycle included in the back pointer as a minimum mean cycle. The algorithm is detailed as Protocol 4-2-b.</p>\n<hr>\n<p><strong>Protocol 4-2-b. CM-based Extract-Cycle Protocol</strong></p>\n<hr>\n<p><strong>Input:</strong> A minmizing node <span class=\"math\">[\\text{minimizing-node}]</span>, a matrix of walk progressions <span class=\"math\">[ep]_{ij}</span> for <span class=\"math\">i,j \\in \\{1,2,...,|V|\\}</span>.</p>\n<p><strong>Output</strong>: A matrix with the minimum mean cycle <span class=\"math\">[\\text{min-cycle}]_{ij}</span> for <span class=\"math\">i,j \\in \\{1,2,...,|V|\\}</span></p>\n<ol>\n<li><span class=\"math\">[\\text{backpointers}]_{0} \\leftarrow [\\text{minimizing-node}]</span>, <span class=\"math\">[\\text{next-index}] \\leftarrow [\\text{minimizing-node}]</span></li>\n<li><strong>for</strong> <span class=\"math\">k \\leftarrow |V|</span> to <span class=\"math\">1</span> do\n<ol>\n<li><span class=\"math\">[\\text{val}] \\leftarrow [0]</span></li>\n<li><strong>for</strong> <span class=\"math\">j \\leftarrow 0</span> to <span class=\"math\">|V|-1</span> do\n<ol>\n<li><span class=\"math\">[match] = j == [\\text{next-index}]</span></li>\n<li><span class=\"math\">[\\text{val}] = _{[\\text{match}]} [ep]_{jk}:[\\text{val}]</span></li>\n<li><span class=\"math\">[\\text{match-index-matrix}]_{jk} = [match]</span></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n<li><span class=\"math\">[\\text{next-index}] = [\\text{val}]</span></li>\n<li><span class=\"math\">[\\text{backpointers}].append([\\text{val}])</span></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n<li><strong>for</strong> <span class=\"math\">i \\leftarrow 0</span> to <span class=\"math\">|V|-1</span> do\n<ol>\n<li><span class=\"math\">[\\text{counter}] \\leftarrow [0]</span></li>\n<li><strong>for</strong> <span class=\"math\">k \\leftarrow 0</span> to <span class=\"math\">|V|</span> do\n<ol>\n<li><span class=\"math\">[\\text{counter}] = [\\text{counter}] + [\\text{match-index-matrix}]_{ik}</span></li>\n</ol>\n</li>\n<li><span class=\"math\">[c] = [\\text{counter}] &gt;= 2</span></li>\n<li><span class=\"math\">[\\text{cycle-node}] = _{[c]} i : [\\text{cycle-node}]</span></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n<li><span class=\"math\">[\\text{min-cycle}] \\leftarrow [0],[\\text{counter}] \\leftarrow [0]</span></li>\n<li><strong>for</strong> <span class=\"math\">k \\leftarrow |V|</span> to <span class=\"math\">1</span> do\n<ol>\n<li><span class=\"math\">[\\text{edge-from}] \\leftarrow [\\text{backpointers}]_k</span></li>\n<li><span class=\"math\">[c] = [\\text{edge-from}] [\\text{cycle-node}]</span></li>\n<li><span class=\"math\">[\\text{counter}] = [\\text{counter}] + [c]</span></li>\n<li><span class=\"math\">[c_0] = [\\text{counter}] + 1</span></li>\n<li><strong>for</strong> <span class=\"math\">j \\leftarrow 0</span> to <span class=\"math\">|V|-1</span> do\n<ol>\n<li><span class=\"math\">[c_1] = [\\text{match-index-matrix}]_{jn-k}</span></li>\n<li><span class=\"math\">[c_2] = [c_0]*[c_1]</span></li>\n<li><strong>for</strong> <span class=\"math\">i \\leftarrow 0</span> to <span class=\"math\">|V|-1</span> do\n<ol>\n<li><span class=\"math\">[c_3] = [\\text{match-index-matrix}]_{jn-k+1}</span></li>\n<li><span class=\"math\">[\\text{min-cycle}]_{ji} = [\\text{min-cycle}]_{ji} + ([c_2] * [c_3])</span></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n</ol>\n<hr>\n<p><strong>Complexity</strong><br>\nThis ****method requires <span class=\"math\">O(|V|^3)</span> multiplications or communication rounds, from the conditional assignments of <span class=\"math\">[A],[ep],[\\text{min-cycle}]</span> for <span class=\"math\">|V|^3</span> loops (line i-2~3 of Protocol 4-1 and like iii-3 of Protocol 4-2-b). And this method requires <span class=\"math\">O(|V|^2)</span> space complexity, largely due to 2-dimensional matrixes. A table comparing the Complexity of each protocol is shown in Table 4-1 below.</p>\n<p><strong>Table 4-1. Complexity Analysis of Secure MMC Protocols</strong></p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th>multiplications/communication rounds complexity</th>\n<th>space complexity</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Aly’s</td>\n<td><span class=\"math\">O(|V|^5)</span></td>\n<td><span class=\"math\">O(|V|^4)</span></td>\n</tr>\n<tr>\n<td>CM-based</td>\n<td><span class=\"math\">O(|V|^3)</span></td>\n<td><span class=\"math\">O(|V|^2)</span></td>\n</tr>\n</tbody>\n</table>\n</div><h3><a name=\"h-4-2-implementation-13\" class=\"anchor\" href=\"https://ethresear.ch#h-4-2-implementation-13\"></a>4-2. Implementation</h3>\n<p>We have implemented CM-based Securely MMC protocol in naive secret sharing scheme using Python MP-SPDZ. And we confirmed that the minimum mean cycle was found reliably in a number of random edges, including the counterexamples shown by Chaturvedi et al [3].</p>\n<h1><a name=\"h-5-conclusion-14\" class=\"anchor\" href=\"https://ethresear.ch#h-5-conclusion-14\"></a>5. Conclusion</h1>\n<p>In this study, we have proposed a more efficient protocol for solving the Minimum Mean Cycle (MMC) problem using Multi-Party Computation (MPC). Our CM-based approach not only addresses but also significantly improves upon the issues identified in Aly’s protocol. Specifically, our protocol reduces the time/round complexity from <span class=\"math\">O(|V|^5)</span> to <span class=\"math\">O(|V|^3)</span> and the space complexity from <span class=\"math\">O(|V|^4)</span> to <span class=\"math\">O(|V|^2)</span> compared to Aly’s protocol.</p>\n<p>Despite these advancements, the complexity remains super-quadratic in terms of the number of nodes, which can pose practical challenges for very large graphs. To mitigate this limitation, we propose the following strategies:</p>\n<ul>\n<li>By exposing the graph’s topography, we can optimize the edge search to include only the minimum necessary edges, thereby reducing the time/round complexity to <span class=\"math\">O(|V|^2 \\cdot |E|)</span>. This approach, however, requires a trade-off with some degree of privacy.</li>\n<li>Implementing simpler algorithms that provide approximate or sub-optimal solutions, such as Greedy Algorithms and Distributed Algorithms, can further enhance practicality. These algorithms can significantly reduce computational overhead while delivering sufficiently accurate results for many applications.</li>\n</ul>\n<p>In summary, our protocol offers a substantial improvement over existing methods, paving the way for more efficient and practical solutions to the MMC problem in secure computation settings. Future work will focus on refining these strategies to further balance the trade-offs between efficiency, accuracy, and privacy.</p>\n<h1><a name=\"reference-15\" class=\"anchor\" href=\"https://ethresear.ch#reference-15\"></a>Reference</h1>\n<ol>\n<li>Richard M. Karp, “A characterization of the minimum cycle mean in a digraph”, Discrete Mathematics, Volume 23, Issue 3, 1978, Pages 309-311, ISSN 0012-365X, <a href=\"https://doi.org/10.1016/0012-365X(78)90011-0\" rel=\"noopener nofollow ugc\">https://doi.org/10.1016/0012-365X(78)90011-0</a>.</li>\n<li>Aly, A., Van Vyve, M. (2015). Securely Solving Classical Network Flow Problems. In: Lee, J., Kim, J. (eds) Information Security and Cryptology - ICISC 2014. ICISC 2014. Lecture Notes in Computer Science(), vol 8949. Springer, Cham. <a href=\"https://doi.org/10.1007/978-3-319-15943-0_13\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Securely Solving Classical Network Flow Problems | SpringerLink</a></li>\n<li>Mmanu Chaturvedi, Ross M. McConnell, “A note on finding minimum mean cycle”, Information Processing Letters, Volume 127, 2017, Pages 21-22, ISSN 0020-0190, <a href=\"https://doi.org/10.1016/j.ipl.2017.06.007\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Redirecting</a>.</li>\n<li>Fleischman, T.; Dini, P. “Mathematical Foundations for Balancing the Payment System in the Trade Credit Market”, J. Risk Financial Manag. 2021, 14, 452. <a href=\"https://doi.org/10.3390/jrfm14090452\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">JRFM | Free Full-Text | Mathematical Foundations for Balancing the Payment System in the Trade Credit Market</a></li>\n</ol>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/a-note-on-securely-finding-minimum-mean-cycle/20073\">Read full topic</a></p>","link":"https://ethresear.ch/t/a-note-on-securely-finding-minimum-mean-cycle/20073","pubDate":"Mon, 15 Jul 2024 07:09:02 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20073"},"source":{"@url":"https://ethresear.ch/t/a-note-on-securely-finding-minimum-mean-cycle/20073.rss","#text":"A Note On Securely Finding Minimum Mean Cycle"},"filter":false},{"title":"Sealed execution auction","dc:creator":"aelowsson","category":"Block proposer","description":"<h1><a name=\"sealed-execution-auction-1\" class=\"anchor\" href=\"https://ethresear.ch#sealed-execution-auction-1\"></a>Sealed execution auction</h1>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/e/3e0cf08f2021a1cbbe0156d52c8482dba0a00ba6.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/3e0cf08f2021a1cbbe0156d52c8482dba0a00ba6\" title=\"Sealed execution auction\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/e/3e0cf08f2021a1cbbe0156d52c8482dba0a00ba6_2_690x394.jpeg\" alt=\"Sealed execution auction\" data-base62-sha1=\"8QVkeltn8Rz45YyyzX6NHgYyPAO\" width=\"690\" height=\"394\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/e/3e0cf08f2021a1cbbe0156d52c8482dba0a00ba6_2_690x394.jpeg, https://ethresear.ch/uploads/default/optimized/3X/3/e/3e0cf08f2021a1cbbe0156d52c8482dba0a00ba6_2_1035x591.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/3/e/3e0cf08f2021a1cbbe0156d52c8482dba0a00ba6_2_1380x788.jpeg 2x\" data-dominant-color=\"A7959A\"></a></div><p></p>\n<p>By <a href=\"https://x.com/weboftrees\">Anders</a>.</p>\n<p><em>While working on the <a href=\"https://ethresear.ch/t/mev-resistant-dynamic-pricing-auction-of-execution-proposal-rights/20024\">dynamic pricing auction</a> I though of another way to hold the auction that also seems interesting. Posting a rough sketch here, although I am not yet certain of its viability. Thanks to <a href=\"https://x.com/drakefjustin\">Justin</a>, <a href=\"https://x.com/barnabemonnot\">Barnabé</a> and <a href=\"https://x.com/terencechain\">Terence</a>.</em></p>\n<h2><a name=\"introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#introduction-2\"></a>Introduction</h2>\n<p>In the process of enshrining proposer–builder separation (<a href=\"https://github.com/ethereum/EIPs/pull/8711\">ePBS</a>), it has been <a href=\"https://mirror.xyz/barnabe.eth/LJUb_TpANS0VWi3TOwGx_fgomBvqPaQ39anVj3mnCOg\">suggested</a> that attesting and execution proposing should be more fully separated. Proposals such as <a href=\"https://ethresear.ch/t/execution-tickets/17944\">execution tickets</a> (ETs) and <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\">execution auctions</a> (EAs) strive to allocate the right to propose execution blocks to entities other than the validators. This also facilitates <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590\">MEV burn</a>. There have been concerns (<a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590/4\">1</a>, <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590/23\">2</a>, <a href=\"https://ethresear.ch/t/dr-changestuff-or-how-i-learned-to-stop-worrying-and-love-mev-burn/17384/3\">3</a>) around insufficient early bidding in the MEV pricing auctions with a base fee floor used in EA. By <a href=\"https://ethresear.ch/t/burn-incentives-in-mev-pricing-auctions/19856\">considering the staking metagame</a>, this issue is potentially resolved, but the resulting attester–builder integration can then by itself be <a href=\"https://ethresear.ch/t/burn-incentives-in-mev-pricing-auctions/19856#risks-associated-with-attester-builder-integration-14\">problematic</a>. There is also a general concern that the decided-upon auction design will <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\">induce MEV</a>, and no definite specification among <a href=\"https://ethresear.ch/t/on-block-space-distribution-mechanisms/19764#preliminaries-12\">several alternatives</a> for the auction design in ET. For this reason, it seems fruitful to explore an auction that facilitates true separation and does not induce MEV. One such mechanism recently proposed is the <a href=\"https://ethresear.ch/t/mev-resistant-dynamic-pricing-auction-of-execution-proposal-rights/20024\">MEV resistant dynamic pricing auction</a>. In the context of Vickrey auctions of execution rights, <a href=\"https://forum.arbitrum.foundation/t/constitutional-aip-proposal-to-adopt-timeboost-a-new-transaction-ordering-policy/25167\">Timeboost</a> under consideration by Arbitrum can also be mentioned.</p>\n<p>This post proposes a <a href=\"https://en.wikipedia.org/wiki/Vickrey_auction\">Vickrey</a> slot auction in two rounds to select a forthcoming execution proposer (akin to EA), referred to as a sealed execution auction (SEA). Staked builders make sealed bids for the right to propose an execution block. Bids are observed by attesters and then collated by the beacon proposer. In subsequent steps, builders reveal their bids, attesters observe the revealed bids, and the proposer once again collates them. The right to propose a forthcoming execution block is awarded to the highest bidder, paying according to the second-highest bid, with the payment burned.</p>\n<h2><a name=\"auction-3\" class=\"anchor\" href=\"https://ethresear.ch#auction-3\"></a>Auction</h2>\n<h3><a name=\"staked-builders-4\" class=\"anchor\" href=\"https://ethresear.ch#staked-builders-4\"></a>Staked builders</h3>\n<p>Builders are staked at a level sufficient for the protocol to penalize them if they fail to reveal committed bids. The stake can also serve as a deposit account to pay for winning bids, or this account can be managed separately.</p>\n<h3><a name=\"sealed-bids-5\" class=\"anchor\" href=\"https://ethresear.ch#sealed-bids-5\"></a>Sealed bids</h3>\n<p>Figure 1 gives an overview of the auction. In the first round, each builder has the opportunity to make one sealed bid over a public P2P layer. There might be a small fee for making a bid, as a further anti-Sybil measure. Attesters observe the sealed bids that have come in at time <span class=\"math\">T_1</span>. Around two seconds later, at <span class=\"math\">T_2</span>, the beacon proposer collates sealed bids (including any bids it finds after <span class=\"math\">T_1</span>), and broadcasts them in a structure. This structure may be a beacon block if the auction proceeds over two slots (see <a href=\"https://ethresear.ch/t/sealed-execution-auction/20060#timeline-15\">Timeline</a>). At <span class=\"math\">T_3</span>, attesters observe the structure and make sure that all previously observed bids at <span class=\"math\">T_1</span> have been included. If the bids were included in a beacon block, they will attest to the block contingent on correct and timely collation. If not included in a beacon block and the proposer equivocates on the structure, the subsequent block must be rejected.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/9/e9efaf529cceda171c770e9160ed477ff7093303.png\" data-download-href=\"https://ethresear.ch/uploads/default/e9efaf529cceda171c770e9160ed477ff7093303\" title=\"Figure 1\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/9/e9efaf529cceda171c770e9160ed477ff7093303_2_690x347.png\" alt=\"Figure 1\" data-base62-sha1=\"xnuLVAFfql94liRdPoOXEXF395h\" width=\"690\" height=\"347\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/9/e9efaf529cceda171c770e9160ed477ff7093303_2_690x347.png, https://ethresear.ch/uploads/default/optimized/3X/e/9/e9efaf529cceda171c770e9160ed477ff7093303_2_1035x520.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/e/9/e9efaf529cceda171c770e9160ed477ff7093303_2_1380x694.png 2x\" data-dominant-color=\"F2ECF1\"></a></div><p></p>\n<p><strong>Figure 1.</strong> Sealed execution auction. Staked builders submit sealed bids before <span class=\"math\">T_1</span> and the proposer collates them at <span class=\"math\">T_2</span>. At <span class=\"math\">T_3</span> attesters ensure that all bids they observed at <span class=\"math\">T_1</span> are part of the collated structure. Builders unseal the bids after <span class=\"math\">T_3</span> and attesters observe them at <span class=\"math\">T_4</span>. The proposer then collates bids in a beacon block at <span class=\"math\">T_5</span> and attesters attests to the block at <span class=\"math\">T_6</span> contingent on correct collation. The highest unsealed bid wins, paying a fee corresponding to the second highest bid. The fee is burned. Builders that did not unseal their bids are penalized.</p>\n<h3><a name=\"revealed-bids-6\" class=\"anchor\" href=\"https://ethresear.ch#revealed-bids-6\"></a>Revealed bids</h3>\n<p>In the second round, after the <span class=\"math\">T_3</span> deadline, builders unseal their bids. They should not release before <span class=\"math\">T_3</span>, because then the proposer can collude with other builders to release a bid structure with some bids placed after other bids were revealed. However, they do not need to observe the proposer’s structure before release, and can proceed right after the <span class=\"math\">T_3</span> mark.</p>\n<p>Attesters observe unsealed bids at <span class=\"math\">T_4</span>. The proposer collates all unsealed bids it can find, including them in the beacon block at around <span class=\"math\">T_5</span>. It may also include bids that were never unsealed, so that the associated builder can be penalized (this is a strict requirement in the single-slot design, because then the sealed bids have not been included in a previous beacon block). The highest bid is selected as the forthcoming execution proposer, and the second highest bid value is deducted from the winner’s balance and burned. At <span class=\"math\">T_6</span>, attesters attest to the beacon block, contingent on a correct collation by the beacon proposer.</p>\n<h2><a name=\"rationale-7\" class=\"anchor\" href=\"https://ethresear.ch#rationale-7\"></a>Rationale</h2>\n<p>Collusion between builders and proposers to reduce the burn as in the MEV burn design is arguably resolved; without stakers actively burning each others’ MEV revenue.</p>\n<ul>\n<li>There is no longer a stable equilibrium to rely on for colluding parties, such as late bidding.</li>\n<li>The proposer no longer has leverage to punish early bidders by electing another builder.</li>\n<li>Chiseling at a cartel is trivial, simply by truthful bidding.</li>\n<li>Every bid fulfills a real purpose, as opposed to early bids in MEV pricing auctions.</li>\n<li>There is no avenue for discouragement attacks, since there is no substantial proposer revenue to remove.</li>\n</ul>\n<h2><a name=\"penalization-8\" class=\"anchor\" href=\"https://ethresear.ch#penalization-8\"></a>Penalization</h2>\n<p>Several actions must be penalized. If the proposer omits an observed sealed bid in the first round or an observed revealed bid in the second round, the proposer’s block must be rejected by attesters. If the proposer fails to release the structure of the sealed bids in the first round or the revealed bids in the second round in a timely manner (reaching attesters before <span class=\"math\">T_3</span> and <span class=\"math\">T_6</span> respectively), the proposer’s block must also be rejected by attesters. <em>Edit 18-07-24:</em> As mentioned in the previous section and also further discussed in the next, a builder that does not unseal its bid on time will be penalized. This is facilitated in Figure 1 by including the sealed bid in the beacon block.</p>\n<p>It is possible that a builder made a mistake and will be unable to pay for its bid, if the bid is higher than its staked amount. This will be penalized by burning some proportion of the stake, for example corresponding to the amount of the actual winning bid, some fixed amount of ETH, or its entire stake. In any case, if its unbacked bid is the highest, the builder will not win the auction. The second highest bid will instead be selected as the execution proposer, paying the third highest bid, etc. If the bid underpinning the fee (normally the second highest bid) lacks funds, the bid below it will be set to underpin the fee.</p>\n<h2><a name=\"builder-proposer-collusion-and-possible-remedies-9\" class=\"anchor\" href=\"https://ethresear.ch#builder-proposer-collusion-and-possible-remedies-9\"></a>Builder–proposer collusion and possible remedies</h2>\n<p>A potential cause for concern is the following scenario: a builder determines that it would not like to unseal its bid (potentially after observing other builders’ unsealed bids). It does not want to subject itself to a penalty, so it colludes with the proposer to have it miss the slot. Is this a cause for concern? This ultimately depends on if the builder benefits more by <em>not</em> revealing its bid than the proposer loses from a missed proposal. This could be the case when bidding for the right to propose the current or next slot, and the expected MEV falls drastically between bid commit and reveal (i.e., a <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\">value-in-flight</a> problem). Another potential cause for concern is if the value instead increases drastically. The proposer might then pose an ultimatum to the winning builder: “send me some part of expected profits, or I will fail to propose”. A failed proposal would leave the builder without rights for the slot. An <a href=\"https://en.wikipedia.org/wiki/Ultimatum_game\">ultimatum game</a> emerges. The other builders might also be inclined to pay the proposer, in order to starve off competition, and the winning builder would then also need to pay the proposer to ensure it proposes.</p>\n<p>While the outlined collusion scenarios may be a bit speculative, it can still be interesting to explore possible remedies. A few directions then spring to mind:</p>\n<h4><a name=\"h-1-penalize-beacon-proposers-for-missed-beacon-blocks-10\" class=\"anchor\" href=\"https://ethresear.ch#h-1-penalize-beacon-proposers-for-missed-beacon-blocks-10\"></a>1. Penalize beacon proposers for missed beacon blocks</h4>\n<p>Proposers already lose out on revenue if they miss their block. However, this loss might not be a sufficient deterrent. It would therefore be beneficial to also penalize proposers if they miss their blocks. Otherwise, if the penalty applied to a builder is substantially higher than the loss from missed proposals for the proposer, that builder penalty will be less meaningful. Builders could seek to collude to let the proposer take the fall. In essence, if the value to the builder, its competitors, or the proposer, of having the builder not win the auction, is higher than the loss to the proposer of not proposing, then collusion or an ultimatum game may emerge.</p>\n<h4><a name=\"h-2-require-subsequent-beacon-proposers-to-conclude-the-auction-11\" class=\"anchor\" href=\"https://ethresear.ch#h-2-require-subsequent-beacon-proposers-to-conclude-the-auction-11\"></a>2. Require subsequent beacon proposers to conclude the auction</h4>\n<p>Is it possible to have the next beacon proposer conclude the auction? This depends to some extent on the <a href=\"https://ethresear.ch/t/sealed-execution-auction/20060#timeline-15\">Timeline</a> of the auction.</p>\n<ul>\n<li><strong>Single-slot design:</strong> In the single-slot design, attesters do not signal if they rejected a block because of an incorrect initial structure, a late structure, or an incorrect or missing beacon block. A way to deal with this is that the next proposer presents the correct outcome of the auction, in its own view, and that the attesters of <span class=\"math\">n+2</span> either reject or confirm the new block based on the proposed outcome. But this means that these attesters must also have tracked events in the previous slot as they unfolded, and any split views (e.g., from a rather late sealed builder bid) may persist for several blocks in a row.</li>\n<li><strong>Two-slot design:</strong> If the auction commences over two slots, there will be an agreed-upon set of committed sealed bids, or the first beacon block will have been rejected. The second step of the auction can then be concluded in a subsequent slot without requiring attesters to have observed the commit-phase. The requirement is to still have attesters make an observation of unsealed bids sometime before the proposer deadline. But that point need not necessarily be taken from the earlier slot. A benefit is that this might starve off split views.</li>\n</ul>\n<p>One thing to note is that if a builder finds it worthwhile to pay the first proposer to not propose, in order to avoid revealing a bid without being penalized, it might be willing to pay also a second proposer for not proposing. However, the price will go up, and the number of potential collusion partners scheduled to propose in a row may not be too large. It should also be noted that when auctioning off rights for slot <span class=\"math\">n+i</span>, there is a requirement that the delay until the conclusion of the auction does not surpass <span class=\"math\">i</span>. In other words, it will only be possible to repeat a failed auction around <span class=\"math\">i</span> times. Note that this requirement is also due to the fact that the order in which auctioned off execution rights are provided cannot be altered ex post, since the expected MEV for slots may vary.</p>\n<h4><a name=\"h-3-skip-the-beacon-proposal-reveal-12\" class=\"anchor\" href=\"https://ethresear.ch#h-3-skip-the-beacon-proposal-reveal-12\"></a>3. Skip the beacon proposal reveal</h4>\n<p>Is it possible to skip the beacon proposal reveal? If all bids are unsealed, the outcome will be evident to every participant. The mechanism can then be designed such that the winning builder safely can propose its block at the assigned slot, even if a proposer has not collated the outcome and presented a winner. The previous option 2 is focused on concluding the auction via a beacon proposal in time before the execution proposal, but the point here is that the auction does not need to be concluded by the proposer as long as the outcome is evident to the builder and can be verified by attesters when the builder proposes its block. The sealed bids must then have been included in a beacon block, as in the two-slot design.</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Threshold_cryptosystem\">Threshold decryption</a> via a committee of attesters (h/t Barnabé) is one option here. The bids are decrypted by a committee, and the winner made evident to the builders/forthcoming proposer and attesters. There would still be liveness concerns, but collusion would be more difficult. It can be noted that as long as all builders unseal their bids in a timely manner (even without threshold decryption), the winning builder can proceed with the proposal. Always penalizing builders that do not unseal their bids before <span class=\"math\">T_4</span> could then seem sufficient, but the issue is that split views would emerge in potential designs. In any case, the outcome would also at some point need to be included in a block, to process payment and penalties.</p>\n<h4><a name=\"h-4-auction-of-a-future-slot-to-reduce-value-in-flight-13\" class=\"anchor\" href=\"https://ethresear.ch#h-4-auction-of-a-future-slot-to-reduce-value-in-flight-13\"></a>4. Auction of a future slot to reduce value-in-flight</h4>\n<p>The Vickrey auction is truthful, allowing builders to bid their true value at the commit deadline. Since value-in-flight is the most likely cause for collusion, auctioning off a slot further removed from the present will temper the issue.</p>\n<h4><a name=\"auctioning-off-multiple-slots-14\" class=\"anchor\" href=\"https://ethresear.ch#auctioning-off-multiple-slots-14\"></a>Auctioning off multiple slots</h4>\n<p>Note that to avoid having a failed beacon proposal result in a missing execution proposal, there is also the option to sell the right to two execution proposals in the subsequent slot (with builders bidding their <a href=\"https://en.wikipedia.org/wiki/Vickrey_auction\">inverse demand curve</a> and paying according to the second and third highest bids).</p>\n<h2><a name=\"timeline-15\" class=\"anchor\" href=\"https://ethresear.ch#timeline-15\"></a>Timeline</h2>\n<p>This section presents two hypothetical timelines for the auction, either when only including unsealed bids in the beacon block (single-slot auction) or when including both sealed and unsealed bids in separate beacon blocks (two-slot auction).</p>\n<h3><a name=\"single-slot-auction-16\" class=\"anchor\" href=\"https://ethresear.ch#single-slot-auction-16\"></a>Single-slot auction</h3>\n<p>Example of a slot auction with a tight schedule enacted mostly during a single slot <span class=\"math\">n</span>, auctioning off execution proposal rights for a later slot <span class=\"math\">n+i</span>.</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th><span class=\"math\">T_x</span></th>\n<th>Time</th>\n<th>Overview</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span class=\"math\">T_1</span></td>\n<td>4s</td>\n<td><strong>Sealed bid deadline</strong></td>\n<td>Attesters of slot <span class=\"math\">n+1</span> observe all sealed bids. Builders must have broadcast them some time before this point to ensure eligibility.</td>\n</tr>\n<tr>\n<td><span class=\"math\">T_2</span></td>\n<td>6s</td>\n<td><strong>Proposer collates bids</strong></td>\n<td>The proposer of slot <span class=\"math\">n+1</span> releases a structure containing all sealed bids it can find.</td>\n</tr>\n<tr>\n<td><span class=\"math\">T_3</span></td>\n<td>8s</td>\n<td><strong>Attesters observe collation</strong></td>\n<td>Attesters of slot <span class=\"math\">n+1</span> observe the proposer’s structure to ensure it contains all bids they had seen at <span class=\"math\">T_1</span> and that the release of this structure is timely.</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><span class=\"math\">T_4</span></td>\n<td>10s</td>\n<td><strong>Revealed bid deadline</strong></td>\n<td>Attesters of slot <span class=\"math\">n+1</span> observe unsealed bids. Builders must have broadcast them some time before this point (but after <span class=\"math\">T_3</span>) to ensure eligibility.</td>\n</tr>\n<tr>\n<td><span class=\"math\">T_5</span></td>\n<td>0s (12s)</td>\n<td><strong>Proposer collates in beacon block</strong></td>\n<td>The proposer of slot <span class=\"math\">n+1</span> includes every unsealed bid it can find in the  block, also indicating sealed bids that were never unsealed. A winner is declared.</td>\n</tr>\n<tr>\n<td><span class=\"math\">T_6</span></td>\n<td>4s (12+4s)</td>\n<td><strong>Attesters confirm collation</strong></td>\n<td>Attesters of slot <span class=\"math\">n+1</span> confirm that the proposer fulfilled its role and collated bids in a timely manner by attesting to the block.</td>\n</tr>\n</tbody>\n</table>\n</div><p>Note that builders can unseal their bids directly after <span class=\"math\">T_3</span>. This should allow attesters of slot <span class=\"math\">n+1</span> to observe revealed bids at 10s. However, if needed, the entire schedule could be pushed back slightly.</p>\n<h3><a name=\"two-slot-auction-17\" class=\"anchor\" href=\"https://ethresear.ch#two-slot-auction-17\"></a>Two-slot auction</h3>\n<p>Here is an example of a schedule for the two-slot auction:</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th><span class=\"math\">T_x</span></th>\n<th>Time</th>\n<th>Overview</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span class=\"math\">T_1</span></td>\n<td>10s</td>\n<td><strong>Sealed bid deadline</strong></td>\n<td>Attesters of slot <span class=\"math\">n+1</span> observe all sealed bids. Builders must have broadcast them some time before this point to ensure eligibility.</td>\n</tr>\n<tr>\n<td><span class=\"math\">T_2</span></td>\n<td>0s (12s)</td>\n<td><strong>Proposer collates bids</strong></td>\n<td>The proposer of slot <span class=\"math\">n+1</span> includes all sealed bids it can find in its beacon block.</td>\n</tr>\n<tr>\n<td><span class=\"math\">T_3</span></td>\n<td>4s (12+4s)</td>\n<td><strong>Attesters confirm collation</strong></td>\n<td>Attesters of slot <span class=\"math\">n+1</span> confirm that the proposer fulfilled its role and collated bids in a timely manner by attesting to the block.</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><span class=\"math\">T_4</span></td>\n<td>8s (12+8s)</td>\n<td><strong>Revealed bid deadline</strong></td>\n<td>Attesters of slot <span class=\"math\">n+2</span> observe unsealed bids. Builders must have broadcast them some time before this point (but after <span class=\"math\">T_3</span>) to ensure eligibility.</td>\n</tr>\n<tr>\n<td><span class=\"math\">T_5</span></td>\n<td>0s (12+12s)</td>\n<td><strong>Proposer collates in beacon block</strong></td>\n<td>The proposer of slot <span class=\"math\">n+2</span> includes every unsealed bid it can find in the  block, potentially indicating sealed bids that were never unsealed. A winner is declared.</td>\n</tr>\n<tr>\n<td><span class=\"math\">T_6</span></td>\n<td>4s (12+12+4s)</td>\n<td><strong>Attesters confirm collation</strong></td>\n<td>Attesters of slot <span class=\"math\">n+2</span> confirm that the proposer collated all unsealed bids by attesting to the block.</td>\n</tr>\n</tbody>\n</table>\n</div>\n            <p><small>6 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/sealed-execution-auction/20060\">Read full topic</a></p>","link":"https://ethresear.ch/t/sealed-execution-auction/20060","pubDate":"Sat, 13 Jul 2024 16:30:07 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20060"},"source":{"@url":"https://ethresear.ch/t/sealed-execution-auction/20060.rss","#text":"Sealed execution auction"},"filter":false},{"title":"Staking Rights Auctions","dc:creator":"felipeargento","category":"Economics","description":"<p>This post was written by <a class=\"mention\" href=\"https://ethresear.ch/u/pedroargento\">@pedroargento</a> but his account seems unable to post it, so he asked me to do it. I’m not too aware of the necessities/constraints of the ether issuance debate - but this seems quite interesting for defi protocols as well. Anyway, here it goes:</p>\n<hr>\n<p>Hey everyone,</p>\n<p>A friend of mine just watched the “What’s the Issue with Issuance?” talk by Christine Kim, Caspar Schwarz-Schilling, and Ansgar Dietrichs at EthCC. They said that the key points discussed around Ethereum’s issuance reminded them of a proposal I wrote in the past for Cartesi and CTSI.</p>\n<p>The significant issues mentioned were the high (and growing) percentage of ether staked, how having too much ether staked isn’t necessarily beneficial for the network, how LST providers might be in a \"winner take all ‘’ situation and etc. Both Ansgar and Justin Drake suggested aiming for around 20-25% staked ether (ball park estimates).</p>\n<p>It seems to me that the auction mechanism I proposed for the CTSI staking economy could really help to address these issues, by making the staking system much more expressive. The idea also allows participants to pay negative issuance for the right to earn MEV, which not only tackles the problem of excessive ether staking, but might also helps to balance MEV discrepancies.</p>\n<p>I’m not an expert in this research area, but based on the feedback from the EthCC talk, it seems like my proposal aligns well with the direction Ethereum is aiming to take. I’m sharing this here on the Ethereum Research forum in hopes that it can contribute to the ongoing conversation and possibly offer a viable solution to the current challenges with Ethereum’s issuance models.</p>\n<p>Looking forward to your thoughts and feedback!</p>\n<h1><a name=\"staking-rights-auctions-1\" class=\"anchor\" href=\"https://ethresear.ch#staking-rights-auctions-1\"></a>Staking Rights Auctions</h1>\n<p>A popular solution to reward users for staking is to mint new tokens and distribute them among stakers. Besides the obvious incentive to gain extra tokens, the inflation created penalizes those who choose not to participate. The challenge is how to measure the opportunity costs of users and how to choose the appropriate issuance amount to achieve a target participation rate, while avoiding exceedingly high inflation rates.</p>\n<p>Some projects have a fixed emission rate while others have a dynamic inflation function, which is higher when the participation is below desired and lower otherwise. There are three key problems with these methods:</p>\n<ul>\n<li>\n<p>You need strong assumptions about users’ risk preferences to tailor the parameters of the function;</p>\n</li>\n<li>\n<p>Users have little information about the mining income they will get as it depends on the number of total staked funds.</p>\n</li>\n<li>\n<p>The methods don’t allow for differentiation between players with different risk preferences;</p>\n</li>\n<li>\n<p>It is hard to determine a balanced inflation target.</p>\n</li>\n</ul>\n<p>As a countermeasure to these three issues, I’m proposing a staking system based on a novel mechanism called staking rights, detailed in the sections below.</p>\n<h2><a name=\"the-mechanism-of-staking-rights-2\" class=\"anchor\" href=\"https://ethresear.ch#the-mechanism-of-staking-rights-2\"></a>The Mechanism of Staking Rights</h2>\n<p>Staking rights give node operators the right to participate in staking. Without the rights, operators cannot be selected in the lottery that chooses the node that will generate the next block.</p>\n<p>Rights are transitory. At the end of each staking cycle, a set of rights expires and ceases to exist. Conversely, new rights are created and made available for purchase through an auction.</p>\n<p>Staking rights always have a final value of 1 token, which is delivered to the account that purchased it at the precise time of their expiry. When users buy a staking right for a price of less than 1 token, the difference between the price paid and the unit value is proportional to their perceived opportunity of the staking right. In that case, the difference is minted and locked in staking together with the price paid, totaling 1 token staked per right sold.</p>\n<p>Here is an example. Suppose that the desired staking participation rate is 50% of the circulating supply of 1 thousand tokens. In this case, the system creates and auctions 500 staking rights, each scheduled to pay 1 token at the end of the cycle.</p>\n<blockquote>\n<p>Circulating supply: 1000<br>\nTarget participation: 500 (50%)<br>\nStaking rights issued: 500<br>\nAuction price = 0.97</p>\n</blockquote>\n<p>Assume that each staking right is sold for <span class=\"math\">0.97</span> in the auction, thereby generating <span class=\"math\">0.03</span> new tokens. The staking rights buyer at the end of the staking cycle would be rewarded 1 token obtaining a <span class=\"math\">3.09\\%</span> return <span class=\"math\">(0.03/0.97)</span>. The total inflation generated for the network would be <span class=\"math\">15</span> tokens (<span class=\"math\">0.03</span> per right * <span class=\"math\">500</span> rights) or <span class=\"math\">1.5\\%</span>.</p>\n<p>With this system, the user knows exactly how much return they will get for their staked tokens, independent of how many rights are sold or how many other stakers exist. There are also no assumptions about risk preferences, buyers will state them through bidding. This method also allows for bigger differentiation between users: instead of asking for a binary decision (stake or not to stake), we allow users to signal at what price they would be willing to stake.</p>\n<p>The system can offer staking rights with different staking cycle periods: 2 weeks, 1 month, 3 months, etc. This achieves two objectives (1) differentiate between users who are willing to stake long term from short term players and, mainly, (2) decrease volatility in token emission. After all, if all staking cycles end at the same time, all new staking rights will be subjected to the same market conditions that may not represent the average behavior of stakers.</p>\n<p>With different staking periods, in each cycle only a small number of staking rights will need to be created to replace the expired ones. This is because in each cycle there is going to be a mix of active staking rights bought at different points in time.</p>\n<p>User risk preferences can be stated in the form of a discount rate, the rate used to convert future values (promises of payouts) to the present. The discount rate is the income that makes one indifferent between gaining money in the present or in the future. For example, with a discount rate of 10% a year, one would be indifferent between receiving 100 dollars today or 110 dollars a year from now.</p>\n<p>The discount rate of a user can be translated to a staking right value using it to compute the present value of all incentives that can be paid by staking the right.</p>\n<p>Staking rights give the owner three sources of incentives, provided that the owner remained active within the network:</p>\n<ul>\n<li>\n<p>Staking right’s unit value (paid at the end of the cycle)</p>\n</li>\n<li>\n<p>Block producer’s tips</p>\n</li>\n<li>\n<p>Mine extractable Value</p>\n</li>\n</ul>\n<p>Below is an example of staking rights holder cash flows for a six month locked period.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/8/28063c3ac2b9e1cd18ed0e7aa69be283c8125261.png\" data-download-href=\"https://ethresear.ch/uploads/default/28063c3ac2b9e1cd18ed0e7aa69be283c8125261\" title=\"Chart\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/8/28063c3ac2b9e1cd18ed0e7aa69be283c8125261_2_624x385.png\" alt=\"\" title=\"Chart\" data-base62-sha1=\"5I4snSHGGB8YnuwZdcdZLEgMzNT\" width=\"624\" height=\"385\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/8/28063c3ac2b9e1cd18ed0e7aa69be283c8125261_2_624x385.png, https://ethresear.ch/uploads/default/optimized/3X/2/8/28063c3ac2b9e1cd18ed0e7aa69be283c8125261_2_936x577.png 1.5x, https://ethresear.ch/uploads/default/original/3X/2/8/28063c3ac2b9e1cd18ed0e7aa69be283c8125261.png 2x\" data-dominant-color=\"FAFAF9\"></a></div><p></p>\n<p>The price to be paid for the staking can be easily calculate based on the return demanded by the staker</p>\n<blockquote>\n<p>Given:<br>\na staking right in a staking cycle of 12 weeks that pays rewards every 2 weeks<br>\n<span class=\"math\">MEV_t</span> the expected mine reward for time <span class=\"math\">t</span><br>\n<span class=\"math\">NF_t</span> the expected network fees for time <span class=\"math\">t</span><br>\n<span class=\"math\">UV</span> the staking right unit value<br>\n<span class=\"math\">i</span> the 2-week return expected by the user<br>\nThe price <span class=\"math\">P</span> will be calculated as:</p>\n<div class=\"math\">\nP= \\frac {UV} {(1+i)^6} + \\sum_ {t=1}^{6} \\frac {MEV_t + NF_t} {(1+i)^t}\n</div>\n</blockquote>\n<p>The staking rights can be sold through a closed price auction of Nth price, which means that the higher bid wins the token but will pay the price of the highest loser bid. For example, If 500 tokens are sold and the 501st highest bid was 0.98, all 500 tokens will cost 0.98. This type of auction, also known as a Vickrey auction (or Dutch auction), ensures all players bid their true valuation of the staking right, revealing their true risk preferences.</p>\n<blockquote>\n<p><strong>Proof</strong><br>\nIts not 100% applicable to this specific auction, but a classical proof from Game Theory can give the intuition why the paid price being the lowest winning bid incentivizes truthfully reporting:</p>\n<p>Given user <span class=\"math\">i</span> has a valuation <span class=\"math\">B_i</span> for a staking right. They can bid <span class=\"math\">B_+ &gt;B_i</span> or <span class=\"math\">B_- &lt; B_i</span> and the <span class=\"math\">N</span>-th price of the auction ends up being <span class=\"math\">B_n</span>.</p>\n<p>If they bids <span class=\"math\">B_+</span> there are two possibilities:</p>\n<ol>\n<li>\n<p><span class=\"math\">B_n &lt; B_i</span></p>\n</li>\n<li>\n<p><span class=\"math\">B_+ &gt; B_n &gt; B_i</span></p>\n</li>\n</ol>\n<p>In (1) they would get <span class=\"math\">(B_i - B_n)</span> independent of bidding <span class=\"math\">B_+</span> or <span class=\"math\">B_i</span> and in (2) they would lose <span class=\"math\">(B_i — B_+)</span> that would be larger than <span class=\"math\">(B_n — B_i)</span>. In neither case they have incentive to bid <span class=\"math\">B_+</span>.</p>\n<p>If they bids <span class=\"math\">B_-</span> there are two possibilities:</p>\n<ol start=\"3\">\n<li>\n<p><span class=\"math\">B_n &lt; B_-</span></p>\n</li>\n<li>\n<p><span class=\"math\">B_- &lt; B_n &lt; B_i</span></p>\n</li>\n</ol>\n<p>In (3) they would get <span class=\"math\">(B_i — B_n)</span> independent of bidding <span class=\"math\">B_-</span> or <span class=\"math\">B_i</span> and in (4) they would not get the token, making it better to bid <span class=\"math\">Bi</span> and have the chance to win.</p>\n<p>In all possible cases there is no incentive to bid <span class=\"math\">B_+</span> or <span class=\"math\">B_-</span>, making <span class=\"math\">B_i</span> the dominant Nash-Bayesian equilibrium.</p>\n</blockquote>\n<p>This system also allows for deflation, if the value of the auction ends up above 1 unit. This would make sense if people are expecting such a high reward from the fees and MEV that they are willing to burn a certain amount of tokens in order to participate.</p>\n<h2><a name=\"inflation-control-mechanisms-3\" class=\"anchor\" href=\"https://ethresear.ch#inflation-control-mechanisms-3\"></a>Inflation Control Mechanisms</h2>\n<p>Besides the burning possibility, its possible to add parameters in the auction to help manage inflation. Although its unclear to me at this time how those parameters could be decided by the Ethereum ecosystem, I’m presenting them anyway. Contributions are welcomed as always.</p>\n<p><strong>First</strong>. Auction reserve prices: In the worst-case scenario, where all rights are sold in the auction with a price close to zero, the inflation will be the number of rights sold, divided by the total supply (50% in our previous example).</p>\n<p>A reserve price means that only bids above a certain value will be considered valid. If we choose a reserve price of 0.7, the worst-case scenario in our example would be an inflation of 15%.</p>\n<p>With a reserve price, it is possible to choose an acceptable inflation range and guarantee it will be complied with at all times.</p>\n<p><strong>Second</strong>. The number of issued tokens: The number of tokens directly affects the inflation. If only 100 tokens are issued (out of a total supply of one thousand), the worst-case scenario for inflation would be 10%.</p>\n<p>These two variables need to be controlled dynamically in order to make sure the inflation is never higher than a previously determined ceiling. The number of tokens issued will depend not only on the target participation rate but also on the value of bids from the auction. This number will be capped so that the total newly minted tokens are limited to the maximum inflation. The total newly minted tokens can be calculated as the difference between the face value and the highest bid not honored (the Dutch auction price) times the number of tokens issued.</p>\n<blockquote>\n<p>Let <span class=\"math\">CAP</span> be the maximum number of minted ETH desired</p>\n<p>Let <span class=\"math\">N_ {max}</span> be the maximum number of staking rights necessary to achieve the target participation rate</p>\n<p>Let <span class=\"math\">B(i)</span> be the <span class=\"math\">i</span>-th largest bid from the auction results</p>\n<p>Let <span class=\"math\">N</span> be the number of staking rights issued</p>\n<p><span class=\"math\">N</span> will be chosen as the result of the optimization problem:</p>\n<div class=\"math\">\n\\begin{aligned}\n\\max_{} \\quad &amp; N\\\\\n\\textrm{s.t.} \\quad &amp; N * (1-B(N+1)) \\le CAP\\\\\n\\quad &amp; N \\le N_ {max} \\\\\n\\end{aligned}\n</div>\n</blockquote>\n<p>More precisely, suppose that we sort all the bids made during the auction in decreasing order and plot them as in the figure below.</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/f/4/f4dd92342507c13ba5e872d205c15c90bf308b60.png\" alt=\"m1\" data-base62-sha1=\"yWbdqZxWaI5pyou3KIWZdvdT8yc\" width=\"477\" height=\"318\"></p>\n<p>Then N staking rights will be issued in order to preserve the maximum number of ETH issued (CAP). Therefore, we can dynamically choose the minimum value B(N+1) such that the inflation is within the predetermined bounds.</p>\n<p>The deflation case is depicted in the figure below:</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/7/3/736de5fac6d3efefd1b613297221521da4f9d64b.png\" alt=\"m2\" data-base62-sha1=\"gt8mE0F0f3n53Lyql24dVXoVjVp\" width=\"459\" height=\"318\"></p>\n<p>It is important to note that there is no way around the tradeoff between participation rate and inflation, to control the later there is the need to sacrifice the former. The advantage brought by the system of staking rights auction is that we maximize participation, while limiting the inflation and allowing workers to express their economic preferences.</p>\n            <p><small>2 posts - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/staking-rights-auctions/20059\">Read full topic</a></p>","link":"https://ethresear.ch/t/staking-rights-auctions/20059","pubDate":"Sat, 13 Jul 2024 14:53:13 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20059"},"source":{"@url":"https://ethresear.ch/t/staking-rights-auctions/20059.rss","#text":"Staking Rights Auctions"},"filter":false},{"title":"Bitfinity: A new sharded blockchain","dc:creator":"MaxC","category":"Sharding","description":"<p>Using threshold BLS signatures we design a new blockchain that implements sharding, separating tokens from EVM processors. Bitfinity is linearly scalable and fast.<br>\nBitfinity implements seamless cross-shard communication.</p>\n<aside class=\"onebox pdf\" data-onebox-src=\"https://github.com/bitfinity-network/whitepapers/blob/163145326e321c87956b2f881159f73b7a6409fb/Bitfinity_Network.pdf\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/bitfinity-network/whitepapers/blob/163145326e321c87956b2f881159f73b7a6409fb/Bitfinity_Network.pdf\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <a href=\"https://github.com/bitfinity-network/whitepapers/blob/163145326e321c87956b2f881159f73b7a6409fb/Bitfinity_Network.pdf\" target=\"_blank\" rel=\"noopener nofollow ugc\"><span class=\"pdf-onebox-logo\"></span></a>\n\n<h3><a href=\"https://github.com/bitfinity-network/whitepapers/blob/163145326e321c87956b2f881159f73b7a6409fb/Bitfinity_Network.pdf\" target=\"_blank\" rel=\"noopener nofollow ugc\">Bitfinity_Network.pdf</a></h3>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n<p>\nUsing sharding techniques we also implement seamless cross-chain settlement and can bridge over Bitcoin to the EVM.</p>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://bitfinity.network/\">\n  <header class=\"source\">\n      <img src=\"https://ethresear.ch/uploads/default/original/3X/9/6/966040c1403c32d7669b160eb35a33dc860db193.png\" class=\"site-icon\" data-dominant-color=\"000000\" width=\"32\" height=\"32\">\n\n      <a href=\"https://bitfinity.network/\" target=\"_blank\" rel=\"noopener nofollow ugc\">bitfinity.network</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    \n\n<h3><a href=\"https://bitfinity.network/\" target=\"_blank\" rel=\"noopener nofollow ugc\">Bitfinity EVM</a></h3>\n\n  <p>Bitfinity is a blazingly-fast, next-gen EVM, serving as a Layer Two for Bitcoin and other assets - utilising threshold signature schemes and built on the IC. Use Bitfinity to deploy advanced Solidity smart contracts.</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/bitfinity-a-new-sharded-blockchain/20054\">Read full topic</a></p>","link":"https://ethresear.ch/t/bitfinity-a-new-sharded-blockchain/20054","pubDate":"Fri, 12 Jul 2024 23:34:33 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20054"},"source":{"@url":"https://ethresear.ch/t/bitfinity-a-new-sharded-blockchain/20054.rss","#text":"Bitfinity: A new sharded blockchain"},"filter":false},{"title":"Searcher Competition in Block Building","dc:creator":"kakia89","category":"Economics","description":"<p>In a new paper with Christoph Schlegel (<a class=\"mention\" href=\"https://ethresear.ch/u/jcschlegel\">@jcschlegel</a>), Benny Sudakov and Danning Sui(<a class=\"mention\" href=\"https://ethresear.ch/u/sui414\">@sui414</a>), we look at the distribution of MEV rewards between the validator and searchers. We model the interaction between all players using tools from cooperative game theory. Namely, for any coalition of players, we define a (maximum achievable) value the coalition can derive by creating the best block together. The validator is a special player, that is needed to create any value. In other words, it has a veto power. However, searchers are the ones that find (arbitrage) opportunities which derive a value. Searchers can be substitutes or complements of each other into finding opportunities. The outcome of this interaction is payoff vector, specifying how much each player gets. In the core of the game payoffs are such that any coalition gets paid at least as much as the value they produce themselves.<br>\nFirst, we study a structure of the core, which is always non-empty set of payoff vectors. Then, we focus on the searcher-optimum allocation and show that each searcher obtains its marginal contribution. In a stochastic model, where each opportunity is independently found with the same probability by each searcher, we show that if this probability is mildly high in the number of searchers, validator gets all rewards. In other words, core is just a single payoff vector. While if this probability is low, with a constant probability the validator can get zero payment, as the searchers are complements of each other. We extend some results to the blocks with bounded size.<br>\nOn the empirical side, we observe that if there is a high competition of searchers, validator rewards are increasing (in absolute terms), which aligns with our theoretical predictions.<br>\nFor more details check out the paper: <a href=\"https://arxiv.org/abs/2407.07474\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">[2407.07474] Searcher Competition in Block Building</a>. Any feedback is welcome.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/searcher-competition-in-block-building/20044\">Read full topic</a></p>","link":"https://ethresear.ch/t/searcher-competition-in-block-building/20044","pubDate":"Thu, 11 Jul 2024 11:00:11 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20044"},"source":{"@url":"https://ethresear.ch/t/searcher-competition-in-block-building/20044.rss","#text":"Searcher Competition in Block Building"},"filter":false},{"title":"L2 Asset Interoperability via Two-way Canonical Bridges","dc:creator":"wdai","category":"Layer 2","description":"<h2><a name=\"motivation-1\" class=\"anchor\" href=\"https://ethresear.ch#motivation-1\"></a>Motivation</h2>\n<p>One key problem with the L2 scaling solutions is that assets natively minted on L2s can only be used on the L2 of issuance but it cannot be bridged back to L1 or other L2s, without utilizing external bridges. This creates fragmentation. At the time of writing, there is already half as much natively-minted assets ($12b) on Eth L2s compared to canonical bridged assets ($24b), according to L2Beat.</p>\n<p>Shared settlement layers only solve this problem for L2s using the same shared settlement layer. The ecosystem remain fragmented once more shared settlement layer show up.</p>\n<p>We propose <strong>two-way canonical bridges</strong> as a solution, where L2-minted assets can be <strong>reverse-canonically bridged</strong> to L1. It is simply an ERC-1155-like interface that an L2 settlement contracts adopt, plus additional precompiles added to the L2 execution environment.</p>\n<h2><a name=\"two-way-canonical-bridges-2\" class=\"anchor\" href=\"https://ethresear.ch#two-way-canonical-bridges-2\"></a>Two-way Canonical Bridges</h2>\n<p>Below is a highlevel description of two-way canonical bridging.</p>\n<ul>\n<li>The L2 settlement contract becomes the ledger of record for all native assets issued on it (that have been reverse-canonically-bridged). The settlement contract (on L1) shall implement the ERC-1155 interface, where the asset id field denotes the L2 asset address.</li>\n<li>To send an L2-native asset to an L1 address, the L2 users simply send the asset to a prespecified system address, which shall results in the L2 settlement contract on L1 issuing ERC-1155 tokens to itself. Next, L2-&gt;L1 call mechanisms can be utilized to move the newly-issued asset to any desired destination. This is done within the same L2 transaction.</li>\n<li>To send a reverse-canonically-wrapped asset back to its L2 of origin, a special <code>burnAndDeposit</code> function on the L2 settlement contract can be called.</li>\n<li>Since the L2 settlement contract is an ERC-1155 contract, L1 EOAs and other L2s can simply hold assets or wrap them as normal. This requires the L2 canonical bridge to support wrapping of ERC-1155 assets.</li>\n<li>In normal usage, it is expected that the only holders of the ERC-1155 tokens issued by an L2 settlement contract are other L2 settlement contracts. This means that the state overhead on L1 is small.</li>\n</ul>\n<p>Additional consideration:</p>\n<ul>\n<li>The safety of an asset is maintained without additional trust assumptions because the L2 settlement contract acts as the ledger of record for all outstanding assets (those owned by other L1 addresses).</li>\n<li>It is assumed that any assets that is reverse-canonically-bridged to L1 addresses is done at the risk of the user initiating the bridging.</li>\n<li>In practice, end-users can utilize fast liquidity bridges while crosschain liquidity providers utilize the two-way canonical bridges to rebalance.</li>\n<li>This mechanism can extend to L3s on L2s. An asset issued on an L3 can be reverse canonically-bridged to L2 and then reverse canonically-bridged back to L1. We’d need the 1155 ids on the settlement contract to be able to represent the 1155 asset id on L2 alongside with the asset address–this can be done via hashing for example.</li>\n</ul>\n<h3><a name=\"acknowledgements-3\" class=\"anchor\" href=\"https://ethresear.ch#acknowledgements-3\"></a>Acknowledgements</h3>\n<p>Thanks to Shumo Chu for review and comments.</p>\n            <p><small>7 posts - 5 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/l2-asset-interoperability-via-two-way-canonical-bridges/20039\">Read full topic</a></p>","link":"https://ethresear.ch/t/l2-asset-interoperability-via-two-way-canonical-bridges/20039","pubDate":"Wed, 10 Jul 2024 22:20:35 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20039"},"source":{"@url":"https://ethresear.ch/t/l2-asset-interoperability-via-two-way-canonical-bridges/20039.rss","#text":"L2 Asset Interoperability via Two-way Canonical Bridges"},"filter":false},{"title":"MEV resistant dynamic pricing auction of execution proposal rights","dc:creator":"aelowsson","category":"Block proposer","description":"<h1><a name=\"mev-resistant-dynamic-pricing-auction-of-execution-proposal-rights-1\" class=\"anchor\" href=\"https://ethresear.ch#mev-resistant-dynamic-pricing-auction-of-execution-proposal-rights-1\"></a>MEV resistant dynamic pricing auction of execution proposal rights</h1>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/9/3903954c39a134bc9b9fc6b919977da400390b97.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/3903954c39a134bc9b9fc6b919977da400390b97\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/9/3903954c39a134bc9b9fc6b919977da400390b97_2_500x500.jpeg\" alt=\"\" data-base62-sha1=\"88mTlP3WM4xrZEw08ytMz9368R1\" width=\"500\" height=\"500\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/9/3903954c39a134bc9b9fc6b919977da400390b97_2_500x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/3/9/3903954c39a134bc9b9fc6b919977da400390b97_2_750x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/3/9/3903954c39a134bc9b9fc6b919977da400390b97_2_1000x1000.jpeg 2x\" data-dominant-color=\"A79FA0\"></a></div><p></p>\n<p><em>Execution proposal of marriage between EA and ET through an auction sequenced by RANDAO (she said yes).</em></p>\n<p>By <a href=\"https://x.com/weboftrees\">Anders</a>. Special thanks to <a href=\"https://x.com/barnabemonnot\">Barnabé</a> for helping me improve the clarity of this post. Thanks also for valuable feedback to <a href=\"https://x.com/soispoke\">Thomas</a>, <a href=\"https://x.com/_julianma\">Julian</a>, and <a href=\"https://x.com/fradamt\">Francesco</a>.</p>\n<h2><a name=\"h-1-introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#h-1-introduction-2\"></a>1. Introduction</h2>\n<h3><a name=\"h-11-background-3\" class=\"anchor\" href=\"https://ethresear.ch#h-11-background-3\"></a>1.1 Background</h3>\n<p>As part of the effort to enshrine proposer–builder separation (<a href=\"https://ethresear.ch/t/minimal-epbs-beacon-chain-changes/18653\">ePBS</a>), the role of beacon validators as execution proposers has come under <a href=\"https://mirror.xyz/barnabe.eth/LJUb_TpANS0VWi3TOwGx_fgomBvqPaQ39anVj3mnCOg\">scrutiny</a>. <a href=\"https://ethresear.ch/t/execution-tickets/17944\">Execution tickets</a> (ET), first introduced as <a href=\"https://www.youtube.com/watch?v=IrJz4GZW-VM\">attester–proposer separation</a>, is a mechanism for selecting the execution proposer by random draw from a ticket pool, aiming to detach beacon validators from the selection process. However, the mechanism for selling tickets has not been settled, with several <a href=\"https://ethresear.ch/t/on-block-space-distribution-mechanisms/19764#preliminaries-12\">alternatives</a> under consideration. A notable <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\">concern</a> is that the sale of execution tickets may induce maximal extractable value (MEV). If the mechanism is administered by the consensus layer and the beacon proposer is given too much influence over the price or over the selection of purchasers, the design risks repeating one of the issues it was intended to resolve, with a new source of MEV becoming a concern. An execution layer vending machine raises similar <a href=\"https://x.com/barnabemonnot/status/1805859642213269739\">questions</a>. Therefore, a MEV resistant auction mechanism could be desirable if pursuing ETs.</p>\n<p><a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\">Execution auctions</a> (EA) is a related mechanism for selecting a future execution proposer, omitting the ticket pool. It  relies on a <a href=\"https://ethresear.ch/t/burn-incentives-in-mev-pricing-auctions/19856\">MEV pricing auction</a>, where bidders first make bids that set a <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590\">floor to the MEV burn</a>, and finally bid through tips in order to be selected by the proposer. Concerns have been raised (<a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590/4\">1</a>, <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590/23\">2</a>, <a href=\"https://ethresear.ch/t/dr-changestuff-or-how-i-learned-to-stop-worrying-and-love-mev-burn/17384/3\">3</a>) regarding the viability of MEV pricing auctions due to insufficient bid incentives in the initial phase. It has <a href=\"https://ethresear.ch/t/burn-incentives-in-mev-pricing-auctions/19856\">recently been suggested</a> that this concern is resolved by considering the staking metagame, in which stakers must bid early to deprive other stakers of revenue. However, this resolution implies that EAs will lead to increased staker–builder integration, which might also be a <a href=\"https://ethresear.ch/t/burn-incentives-in-mev-pricing-auctions/19856#risks-associated-with-attester-builder-integration-14\">cause for concern</a>. For this reason, it seems fruitful to explore an alternative auction mechanism also when selecting the execution proposer without leveraging a ticket pool.</p>\n<h3><a name=\"h-12-overview-of-proposal-4\" class=\"anchor\" href=\"https://ethresear.ch#h-12-overview-of-proposal-4\"></a>1.2 Overview of proposal</h3>\n<p>This post introduces a dynamic pricing auction with MEV resistance to sell execution proposal rights. Builders hold reserves in a debit account and place binding purchase order for a ticket (ET) or an execution proposal slot (similar to EA). The final price adapts dynamically based on the total outstanding as well as currently incoming orders/tickets, with some similarities to, e.g., <a href=\"https://github.com/ethereum/EIPs/blob/f93b530c60dc7a88e5b811f9cbdf865ecc1b9b97/EIPS/eip-1559.md\">EIP-1559</a>, and the payment is burned. Orders are delimited at the slot level through attester observations to remove agency from the beacon proposers facilitating the auction, thus inducing less new MEV. This produces a high aggregate MEV burn. In one version of the design, dubbed execution ticket auction (ETA), orders that came in during the same slot are sequenced for proposal by leveraging the <a href=\"https://eth2book.info/capella/part2/building_blocks/randomness/#the-randao\">RANDAO</a>. In another version only applicable to ETs, orders that came in during the same slot are minted collectively into tickets. Due to the current limitations of the RANDAO, the mechanism is only capable of auctioning off proposal rights at least one epoch in advance.</p>\n<h2><a name=\"h-2-purchase-process-5\" class=\"anchor\" href=\"https://ethresear.ch#h-2-purchase-process-5\"></a>2. Purchase process</h2>\n<p>Figure 1 presents the proposed purchase mechanism. Builders send purchase orders (for one ticket/execution slot at a time) over a public P2P layer. They specify a maximum price and hold a debit account within consensus to guarantee that their purchase orders are backed by sufficient funds. This account is funded using a separate transaction (see the discussion).</p>\n<p>Beacon attesters observe all orders up to an observation deadline, enacted for example 2 seconds before the slot boundary. The beacon proposer collects all orders (there will be one purchase order per slot on average), including orders they may have found during the last few seconds of their slot. Orders are added as a group to the beacon block and will later be popped from a virtual first-in first-out (FIFO) queue scheduled across blocks. This queue may be just one slot long, depending on implementation.</p>\n<p>Attesters reject the block if the beacon proposer fails to include a purchase order that they observed. The mechanism thus far has similarities to MEV pricing auctions (e.g., <a href=\"https://ethresear.ch/t/committee-driven-mev-smoothing/10408\">MEV smoothing</a>, <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590\">MEV burn</a>, <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\">EA</a>), but attesters are tasked with simply observing all purchases, instead of setting a bid floor. Another design that might come to mind is inclusion lists (ILs) in the style of <a href=\"https://ethresear.ch/t/fork-choice-enforced-inclusion-lists-focil-a-simple-committee-based-inclusion-list-proposal/19870\">FOCIL</a>, but there is no new active participant in the form of an IL committee.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/0/702bb78973cad1e335953a439305f91bf34e2132.png\" data-download-href=\"https://ethresear.ch/uploads/default/702bb78973cad1e335953a439305f91bf34e2132\" title=\"Figure 1\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/0/702bb78973cad1e335953a439305f91bf34e2132_2_690x424.png\" alt=\"Figure 1\" data-base62-sha1=\"g0j8Fpmo2L9DfyXSqafbcbpuhhg\" width=\"690\" height=\"424\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/0/702bb78973cad1e335953a439305f91bf34e2132_2_690x424.png, https://ethresear.ch/uploads/default/optimized/3X/7/0/702bb78973cad1e335953a439305f91bf34e2132_2_1035x636.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/7/0/702bb78973cad1e335953a439305f91bf34e2132_2_1380x848.png 2x\" data-dominant-color=\"EFEFF0\"></a></div><p></p>\n<p><strong>Figure 1.</strong> Schematic overview of the purchase process. Orders in blue, backed by builders’ debit accounts, are observed by attesters (purple arrows). Beacon proposers subsequently add all incoming orders to the beacon block (dark red arrow). A validity check is performed to ensure that orders are fully backed. Orders are finally processed—using either RANDAO to determine the sequence in cases where several orders came in during the associated slot (yellow), or otherwise using collective minting (red). In ETA, orders are directly queued for proposal.</p>\n<p>Once a slot’s orders have been added to the beacon block, a validity check is performed on builders that included at least one new order (cyan in Figure 1). If a builder’s outstanding (not yet processed) orders across the queue are not fully backed by its debit account, all the builder’s pending orders are discarded. A penalty may also be applied. Orders are  priced directly upon being added or, e.g., at the time of sequencing, as described in Section 4. The determined purchase price is charged from the debit account and burned. The remaining ETH of the purchase order is subsequently virtually released such that it can be used to back new purchase orders. Orders are then sequenced and either queued for proposal (yellow arrow) or added to the ticket pool (red arrow), as described in Section 3.</p>\n<h2><a name=\"h-3-sequencing-process-6\" class=\"anchor\" href=\"https://ethresear.ch#h-3-sequencing-process-6\"></a>3. Sequencing process</h2>\n<p>The purchase orders from the same slot are added unsequenced to the beacon block. The subsequent sequencing of orders from the same slot varies between designs.</p>\n<h3><a name=\"h-31-et-minting-of-execution-tickets-7\" class=\"anchor\" href=\"https://ethresear.ch#h-31-et-minting-of-execution-tickets-7\"></a>3.1 ET – Minting of execution tickets</h3>\n<p>The natural strategy for ETs is <em>collective minting</em>, wherein all orders from the same slot mint a ticket at the same time, as indicated by the red arrow in Figure 1. The RANDAO used for ETA in the next subsection could also be applied to ETs using the same setup (dashed yellow arrow). However, the only real benefit (which remains marginal) is to facilitate a more even replenishment of the ticket pool.</p>\n<h3><a name=\"h-32-eta-orders-sequenced-by-randao-8\" class=\"anchor\" href=\"https://ethresear.ch#h-32-eta-orders-sequenced-by-randao-8\"></a>3.2 ETA – orders sequenced by RANDAO</h3>\n<p>Purchase orders that came in during the same slot can be sequenced directly by the RANDAO, completely skipping a ticket pool. Perhaps <em>execution ticket auction</em> (ETA) would be a proper moniker. Indeed, with this design, a buyer will have an <em>Estimated Time of Arrival</em> for their order, which suitably cannot be precisely known beforehand if there is more than one order in the slot. Barnabé’s discussion (<a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\">1</a>, <a href=\"https://x.com/barnabemonnot/status/1805872045302898807\">2</a>) on the topic of ETs and determinism is relevant here.</p>\n<p>Orders can only be sequenced after the RANDAO has been updated. Therefore, there is an initial ineligibility window <span class=\"math\">W</span> during which orders cannot lead to an execution proposal. The RANDAO updates every 32 slots, but the proposed mechanism does not guarantee a new order every slot; in fact, the mode will be zero orders in a slot. Consequently, the safe distance between auction and slot proposal will need to be somewhat longer than 32 slots. Sequenced orders can be understood as sitting in a second FIFO queue while waiting to propose. Note that ETA could set the queue to hold as many proposal rights as the ticket pool, if desirable.</p>\n<h2><a name=\"h-4-dynamic-pricing-9\" class=\"anchor\" href=\"https://ethresear.ch#h-4-dynamic-pricing-9\"></a>4. Dynamic pricing</h2>\n<h3><a name=\"h-41-ticket-saturation-and-delta-10\" class=\"anchor\" href=\"https://ethresear.ch#h-41-ticket-saturation-and-delta-10\"></a>4.1 Ticket saturation and delta</h3>\n<p>The exploration of dynamic pricing will refer to processed orders as “tickets”, although in the ETA design these are just sitting in the ordered queue waiting to propose. The protocol strives to ensure that there are <span class=\"math\">\\hat{T}</span> outstanding tickets at any time. The price of a new ticket should be determined by the current number of outstanding tickets <span class=\"math\">T</span> as well as the current supply of purchases and purchase orders <span class=\"math\">T_p</span>, measured over some window of length <span class=\"math\">W_T</span>, which in some versions can be only one slot long.</p>\n<p>Define the ticket saturation as <span class=\"math\">T_s=T-\\hat{T}</span>. If <span class=\"math\">T_s&lt;0</span>, there are too few tickets, and the protocol would in general like to sell more than one ticket per slot. If <span class=\"math\">T_s&gt;0</span>, there are too many, and it would in general like to sell fewer than one. The delta <span class=\"math\">T_{\\delta}=T_p-W_T</span> gives purchase orders relative to an expectation of one ticket per slot, which is the rate at which tickets are consumed by execution proposers. If <span class=\"math\">T_{\\delta}&lt;0</span>, the protocol is selling fewer than one ticket per slot and would in general like to sell more. If <span class=\"math\">T_{\\delta}&gt;0</span>, it sells more than one and would in general like to sell fewer.</p>\n<p>If both <span class=\"math\">T_s</span> and <span class=\"math\">T_{\\delta}</span> are negative, the protocol should decrease the ticket price to sell more tickets. If both <span class=\"math\">T_s</span> and <span class=\"math\">T_{\\delta}</span> are positive, it should increase the price to sell fewer. The less trivial question is how to approach a situation when one of the variables is negative and the other is positive, how to window sales, and how quickly to adjust the price.</p>\n<h3><a name=\"h-42-dynamic-pricing-mechanism-11\" class=\"anchor\" href=\"https://ethresear.ch#h-42-dynamic-pricing-mechanism-11\"></a>4.2 Dynamic pricing mechanism</h3>\n<h4><a name=\"h-421-overview-12\" class=\"anchor\" href=\"https://ethresear.ch#h-421-overview-12\"></a>4.2.1 Overview</h4>\n<p>The price of tickets adjusts on a relative basis, just like in EIP-1559, gradually shifting by some proportion of the current price each slot. To improve MEV resistance and adapt to the problem at hand, three differences to EIP-1559 however seem useful: (1) the price should depend on orders included in the current slot, not only the preceding; (2) the block should never be “full”, lest the ticket price becomes very high; (3) the mechanism should be “two-dimensional” in the sense that it accounts for both ticket saturation and delta.</p>\n<p>This subsection begins by exploring the simplest realization of such a pricing mechanism, which will then gradually be expanded. In the simplest design, <span class=\"math\">W_T=1</span>, and orders can be priced directly when added to the beacon block. If there is one new order (<span class=\"math\">T_{\\delta}=0</span>) and the number of outstanding tickets is as desired (<span class=\"math\">T_s=0</span>), the price stays the same. If there are many new orders (a sudden spike in the expected MEV), the pricing mechanism will hike the price substantially. For example, if 100 orders were to come in, the purchase price for them could rise by orders of magnitude; the exact specification would need to be determined based on other auction paramters such as the size of the ticket pool. Builders will of course track incoming orders in real time and update their estimate of the final purchase price. Therefore, even during a sudden rise in expected MEV, there will only be new orders up to the point where the deduced price matches expected MEV.</p>\n<p>As another option, <span class=\"math\">W_T</span> can be longer, setting the price <span class=\"math\">W</span> slots after orders have been added to the beacon block. In Figure 1, <span class=\"math\">W=3</span>. An asymmetric window spanning 4 slots up to and including the processing slot is then an option. The most important benefit is MEV resistance during spikes, as will be further discussed in Section 4.3. Other potential benefits include better pricing granularity, a more complete picture when pricing orders, and the marginal simplification in ETA from pricing and sequencing orders at the same. Of course, it can be argued that the picture already is “complete” in the sense that builders can indicate expected MEV already at the current slot, albeit they may not be fully equipped to evaluate incoming orders in real-time. It can also be argued that <span class=\"math\">W&gt;0</span> and <span class=\"math\">W_T&gt;1</span> needlessly increase uncertainty and analytical complexity for builders as well as developers. As an example, builders may place an order several slots before a spike, but still need to pay closer to the real expected value of the MEV they are about to receive (priced closer to proposal time).</p>\n<h4><a name=\"h-422-equations-13\" class=\"anchor\" href=\"https://ethresear.ch#h-422-equations-13\"></a>4.2.2 Equations</h4>\n<p>A rudimentary example will now be provided. Should this general mechanism be pursued, the exact price controller would have to be determined by reasoning about how quickly the price should adapt to changes in the willingness to buy tickets, sensitivity to ticket saturation, interplay between saturation and delta, sensitivity to MEV induction (see the next subsection), and by running simulations of the purchase process.</p>\n<p>Ticket saturation and delta from the previous subsection is first weighed by window length and desired number of outstanding tickets</p>\n<div class=\"math\">\nw_s=\\frac{T_s}{c_s\\hat{T}}, \\quad w_{\\delta}=\\frac{T_{\\delta}}{c_{\\delta}W_T},\n</div>\n<p>using the constants <span class=\"math\">c_s=2^3</span> and <span class=\"math\">c_{\\delta}=2^6</span>. The percentage change <span class=\"math\">w</span> to the ticket price applied each slot is</p>\n<div class=\"math\">\nw=(1+w_s)(1+w_{\\delta})^k.\n</div>\n<p>This post uses <span class=\"math\">k=2</span>, ensuring a non-linear price response as <span class=\"math\">T_{\\delta}</span> grows. This can be particularly relevant at shorter windows <span class=\"math\">W_T</span>. Setting <span class=\"math\">k=3</span> is also viable. The constant <span class=\"math\">c_{\\delta}</span> can then alternatively be increased to offer better pricing granularity at a lower ticket delta, while still offering some guarantees regarding the maximum number of orders that may come in during one slot. The price <span class=\"math\">p</span> updates from its level at the previous slot <span class=\"math\">p_0</span> to its level at the present slot <span class=\"math\">p_1</span> as</p>\n<div class=\"math\">\np_1=w \\times p_0.\n</div>\n<h4><a name=\"h-423-visualizations-14\" class=\"anchor\" href=\"https://ethresear.ch#h-423-visualizations-14\"></a>4.2.3 Visualizations</h4>\n<p>Figure 2 illustrates what a pricing schedule according to <span class=\"math\">w</span> would look like for the outlined equations, with <span class=\"math\">\\hat{T}=4096</span> and <span class=\"math\">W_T=32</span>. The yellow band stipulates no price change (<span class=\"math\">w=1</span>), and passes through the intersection of the black lines, which correspond to a neutral ticket delta (x-axis) and saturation (y-axis). There have been suggestions of much <a href=\"https://www.youtube.com/watch?v=IrJz4GZW-VM\">higher</a> <span class=\"math\">\\hat{T}</span>. This issue relates to a wide range of <a href=\"https://ethresear.ch/t/economic-analysis-of-execution-tickets/18894\">considerations</a> that are not the focus of this post.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/8/383433ceb5b2bfb3db8a88907125d3d913dc871b.png\" data-download-href=\"https://ethresear.ch/uploads/default/383433ceb5b2bfb3db8a88907125d3d913dc871b\" title=\"Figure 2\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/8/383433ceb5b2bfb3db8a88907125d3d913dc871b_2_668x500.png\" alt=\"Figure 2\" data-base62-sha1=\"81cA2X3xDJh8wsLvYBM8kqj51OP\" width=\"668\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/8/383433ceb5b2bfb3db8a88907125d3d913dc871b_2_668x500.png, https://ethresear.ch/uploads/default/optimized/3X/3/8/383433ceb5b2bfb3db8a88907125d3d913dc871b_2_1002x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/3/8/383433ceb5b2bfb3db8a88907125d3d913dc871b_2_1336x1000.png 2x\" data-dominant-color=\"D5D798\"></a></div><p></p>\n<p><strong>Figure 2.</strong> Rudimentary example for <span class=\"math\">W_T=32</span> of a percentage change in ticket price  that varies with delta in ticket sales and the overall saturation of tickets in the pool. Black lines indicate a neutral delta (one ticket sold per slot) and saturation (<span class=\"math\">T=\\hat{T}</span>).</p>\n<p>Figure 3 instead shows a pricing schedule when <span class=\"math\">W_T=1</span> using the same equation and settings as previously. If no orders come in during the measured slot, <span class=\"math\">T_{\\delta}=-1</span>. Note that the colormap is log-scaled to capture the large increase in <span class=\"math\">w</span> that is instituted if 64 orders were to come in during a single slot. When <span class=\"math\">T_W=32</span> (Figure 2), a large jump in orders would affect the price for 32 consecutive slots (assuming an asymmetric window), before the purchase takes place, and so <span class=\"math\">w</span> will naturally be lower on a per-slot basis.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/f/4f34c0d1471b29367616a9d71dc0a1fe156cfd73.png\" data-download-href=\"https://ethresear.ch/uploads/default/4f34c0d1471b29367616a9d71dc0a1fe156cfd73\" title=\"Figure 3\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/f/4f34c0d1471b29367616a9d71dc0a1fe156cfd73_2_659x500.png\" alt=\"Figure 3\" data-base62-sha1=\"biGK5tIG3wkv0wQsVDuj8Hj5oEX\" width=\"659\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/f/4f34c0d1471b29367616a9d71dc0a1fe156cfd73_2_659x500.png, https://ethresear.ch/uploads/default/optimized/3X/4/f/4f34c0d1471b29367616a9d71dc0a1fe156cfd73_2_988x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/f/4f34c0d1471b29367616a9d71dc0a1fe156cfd73_2_1318x1000.png 2x\" data-dominant-color=\"92C888\"></a></div><p></p>\n<p><strong>Figure 3.</strong> Rudimentary example for <span class=\"math\">W_T=1</span> of a percentage change in ticket price that varies with delta in ticket sales and the overall saturation of tickets in the pool. Black lines indicate a neutral delta (one ticket sold in the slot) and saturation (<span class=\"math\">T=\\hat{T}</span>).</p>\n<p>The relative change at <span class=\"math\">W_T=1</span> for different <span class=\"math\">T_{\\delta}</span> is shown in Figure 4, at a neutral ticket saturation (<span class=\"math\">T_s=0</span>). The price change instituted with this setting for between 0 to 4 orders is {0.969, 1, 1.031 1.063 1.096}. The same granularity can be preserved at lower quantities of orders while further raising the price at higher quantities, by increasing <span class=\"math\">k</span>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/1/b1cd5d40cffb62dcaa44cc90cb317c9a4f0ebb76.png\" data-download-href=\"https://ethresear.ch/uploads/default/b1cd5d40cffb62dcaa44cc90cb317c9a4f0ebb76\" title=\"Figure 4\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/1/b1cd5d40cffb62dcaa44cc90cb317c9a4f0ebb76_2_690x325.png\" alt=\"Figure 4\" data-base62-sha1=\"pmUvcg4wWb5Omxv0oMDzf2J7QW2\" width=\"690\" height=\"325\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/1/b1cd5d40cffb62dcaa44cc90cb317c9a4f0ebb76_2_690x325.png, https://ethresear.ch/uploads/default/optimized/3X/b/1/b1cd5d40cffb62dcaa44cc90cb317c9a4f0ebb76_2_1035x487.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/1/b1cd5d40cffb62dcaa44cc90cb317c9a4f0ebb76_2_1380x650.png 2x\" data-dominant-color=\"F9F9FA\"></a></div><p></p>\n<p><strong>Figure 4.</strong> Rudimentary example for <span class=\"math\">W_T=1</span>, focusing on the relative price change <span class=\"math\">w</span> across <span class=\"math\">T_{\\delta}</span> at a neutral saturation. If 60 orders come in during a single slot, the price rises sharply.</p>\n<p>Figure 5 instead plots the response at <span class=\"math\">T_{\\delta}=-1</span> across <span class=\"math\">T_s</span>. In other words, it shows how the price would change if no purchase orders are registered.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/8/885e3dfacabd2f85c9ee4480a30e67576cb30f5b.png\" data-download-href=\"https://ethresear.ch/uploads/default/885e3dfacabd2f85c9ee4480a30e67576cb30f5b\" title=\"Figure 5\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/8/885e3dfacabd2f85c9ee4480a30e67576cb30f5b_2_690x312.png\" alt=\"Figure 5\" data-base62-sha1=\"jsmQCEMhwb1hs5UPdido8aPas1d\" width=\"690\" height=\"312\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/8/885e3dfacabd2f85c9ee4480a30e67576cb30f5b_2_690x312.png, https://ethresear.ch/uploads/default/optimized/3X/8/8/885e3dfacabd2f85c9ee4480a30e67576cb30f5b_2_1035x468.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/8/885e3dfacabd2f85c9ee4480a30e67576cb30f5b_2_1380x624.png 2x\" data-dominant-color=\"F7F7F8\"></a></div><p></p>\n<p><strong>Figure 5.</strong> Rudimentary example for <span class=\"math\">W_T=1</span>, focusing on the relative price change <span class=\"math\">w</span> across <span class=\"math\">T_s</span> when no purchase order comes in.</p>\n<h3><a name=\"h-43-windowing-and-slot-surge-pricing-15\" class=\"anchor\" href=\"https://ethresear.ch#h-43-windowing-and-slot-surge-pricing-15\"></a>4.3 Windowing and slot surge pricing</h3>\n<p>In the outlined pricing mechanism, there is a remaining opportunity for the beacon proposer to derive some MEV at shorter windows <span class=\"math\">T_W</span>. This happens during a sudden spike in interest for purchasing tickets between the point where attesters have observed purchase orders and the slot boundary.</p>\n<p>Let <span class=\"math\">n_a</span> be the equilibrium quantity of orders that would have come in during a slot if a spike happened before the attester observation deadline (purple arrows in Figure 1). Builders keep track of incoming orders and calculate the current ticket price, which when compared to the updated expected MEV <span class=\"math\">V_e</span> produces <span class=\"math\">n_a</span> orders. If a spike comes in after the attester deadline, the proposer has exclusivity and could (be paid to) include only a subset of the orders <span class=\"math\">n_p</span>. The surplus MEV for the proposer emerges from providing a lower expected purchase price for each order it lets through. This is a monopoly pricing regime, wherein the proposer sells spots at a price approaching <span class=\"math\">V_e-p_1</span>. It determines <span class=\"math\">n_p</span> to maximize its revenue <span class=\"math\">R(n_p)</span>, in accordance with the revenue function:</p>\n<div class=\"math\">\n\\text{Maximize} \\quad R(n) = n (V_e(n) - p_1(n)).\n</div>\n<p>Here, <span class=\"math\">p_1(n)</span> is based on the price equation provided in the previous subsection. Also note that if many purchase orders come in, <span class=\"math\">V_e</span> might gradually fall (if there is a temporary spike); hence <span class=\"math\">V_e(n)</span>.</p>\n<p><em>Quick edit: some additions/adjustments and referring to the previous subsection, which I had forgotten to do.</em></p>\n<p>As mentioned in the previous subsection, longer windows <span class=\"math\">W_T</span> serve to further starve off MEV. The reason is now clear: bids of the present slot will with longer windows be priced based on information coming in also during subsequent slots. This means that the proposer has less leverage during a sudden spike, since builders will need to pay based on bids that are also observed by attesters (at the fair market price). In Figure 2, the price would be set 32 slots after inclusion in the block, influenced by the bids in these slots. Another way to achieve a similar effect without longer windows is to charge according to the price calculated during the next slot. Here it is important to note that bidders of the next slot cannot materially grief bidders of the present slot. They will also have to pay close to the price of bidders in the current slot, since the price cannot fall substantially between slots at short windows, only rise (also note the discussion of max price in Section 4.4). Yet the downside of heightened uncertainty for builders regarding pricing can be important to keep in mind.</p>\n<p>If the price surges more quickly from a high quantity of purchased tickets within a single slot, the proposer’s potential revenue could also be reduced. Proposers can then sell fewer spots. Furthermore, by letting the price in the next slot not shift as much, oscillations in bid quantity (and potentially price) can be tempered. One way to achieve this is to let <span class=\"math\">w</span> rise more quickly with an increase in bids, set the price in the current slot as previously</p>\n<div class=\"math\">\np_1=w \\times p_0,\n</div>\n<p>but to not incorporate the full price change when setting the value <span class=\"math\">p^*_0</span> that will be used as <span class=\"math\">p_0</span> when pricing the next slot</p>\n<div class=\"math\">\np^*_0=\\left(1+\\frac{1-w}{c_w}\\right) \\times p_0.\n</div>\n<p>The constant <span class=\"math\">c_w</span> is then set above 1. During a spike in expected value up to a new baseline <span class=\"math\">V_e</span>, the price would then theoretically stay rather fixed (at a new higher level) for subsequent slots, with the number of orders in each slot gradually decreasing, until it proceeds at the regular pace of one purchase order per slot. Yet note that if <span class=\"math\">V_e</span> rises from a temporary opportunity, there will be a bit more MEV for the proposer to extract still, because a lot of the value can depend on getting in early. This further depends on if the mechanism is ET or ETA and the size of the ticket pool. It is also important to note that a price surge means giving up some bid granularity. The discussion offers some further thoughts on bid granularity and the proposer’s ability to extract MEV.</p>\n<p>As a concluding remark, it should always be remembered that a big ticket pool acts to temper fluctuations in the expected value of tickets. The buyer does not necessarily buy the right to sell tickets within the next couple of epochs, but rather within the next couple of hours, days, weeks or months, depending on the setting for <span class=\"math\">\\hat{T}</span>—and it turns out that when measured over longer periods, the level of the MEV has been <a href=\"https://youtu.be/IrJz4GZW-VM?feature=shared&amp;t=1241\">very stable</a> in Ethereum.</p>\n<h3><a name=\"h-44-the-role-of-a-maximum-price-16\" class=\"anchor\" href=\"https://ethresear.ch#h-44-the-role-of-a-maximum-price-16\"></a>4.4 The role of a maximum price</h3>\n<p>Each buyer assigns a max price to the order. This is the value that needs to be backed by the debit account. If the max price is insufficient at the time of pricing, such that the actual price is higher, the builder does not receive a ticket/slot. Yet builders could make unbacked orders to starve off competitors, which would bring down the purchase price. It seems desirable to not force builders to analyze the balances of every competitor to determine which bids are real and which are “fake”. One simple way to avoid such a situation is to penalize builders for placing orders that turn out to be unbacked at the time of purchase. This can potentially be combined with setting a validity rule requiring some minimum max price, either relative to the prevailing price at bid time, or/and as a fixed overall minimum.</p>\n<p>Penalizing builders however exacerbates another potential issue. During an unforeseen spike in expected MEV, there are circumstances where a builder could “liquidate” its competitors’ bids if the current purchase price is close to their stipulated maximum. A builder could enter new bids forcing other builders out, to penalize them and gain cheaper tickets. For this reason, the mechanism could reduce gameability and the risks as well as improve capital efficiency for builders by stipulating an absolute maximum purchase price. A builder that bids the absolute maximum is guaranteed to not get liquidated and will always receive a ticket. This does not mean that the protocol will burn less MEV, merely that in times of extremely high expected MEV, there will temporarily be a higher quantity of bids, wherein each order has a lower chance of actually getting one of the desirable profitable slots.</p>\n<p>What should the absolute maximum be set to if this path is pursued? In <a href=\"https://flashbots-data.s3.us-east-2.amazonaws.com/index.html\">data</a> provided by <a href=\"https://www.flashbots.net/\">Flashbots</a> spanning 2.7 million blocks between the last quarter of 2022 and the third quarter of 2023, the maximum average <a href=\"https://hackmd.io/@flashbots/quantifying-REV\">REV</a> across 64 slots is 19.5 ETH. The peak average is skewed by a few spurious blocks with REV of several 100 ETH that may have been hard to predict beforehand. This average does therefore not represent a realistic expected MEV for builders bidding many slots in advance. Expand the window by a factor of 4 to 256 and the maximum average falls almost by a factor of 4, to 5.25. Setting the absolute maximum to 5 ETH would thus presumably not influence the auction even in times of extreme market conditions, since that price would hardly ever be reached.</p>\n<h2><a name=\"h-5-discussion-17\" class=\"anchor\" href=\"https://ethresear.ch#h-5-discussion-17\"></a>5. Discussion</h2>\n<p>A MEV resistant dynamic pricing auction for selling execution proposal rights has been presented, relevant to the research of both ETs and EAs. It seeks to remove agency from the beacon proposer, thus inducing less MEV. This is achieved by having every order result in a sale, and every order coming in during the same slot having the same expected sales price. The execution ticket auction (ETA) sequences orders directly for proposal by leveraging the RANDAO. Orders that came in during the same slot can otherwise be minted collectively into tickets, with sequencing pursued at a later stage in accordance with the ET proposal.</p>\n<p>If pursuing this auction mechanism, the dynamic pricing step would require substantial analysis. One sensitive part is the balance between moderating changes in the supply of orders while still offering sufficient pricing granularity. A high <span class=\"math\">k</span> can be useful here. Another potential avenue is to hold the auction less frequently. The expected timing of orders within the slot would also be interesting to study—orders can be placed early to starve off others, or late to gain better information. One could even theorize that some builders will wait until after the attester deadline, and then pay the proposer a small fee for exclusive post-deadline inclusion (the benefit being to avoid race conditions).</p>\n<p>Transactions to fund or withdraw from a builder’s debit account would need to be synchronized with the validity check to avoid race conditions. It may be convenient to expand the role of the debit account if it is desirable to subject builders to slashing or penalties at the execution proposal stage. In other words, the debit account might also function as a stake.</p>\n<p>Just as with MEV pricing auctions, attesters accepting or rejecting a block based on some observation deadline is potentially sensitive. However, this particular design should hopefully be less so, since there will only be one order on average per block to observe, and less value (even potentially negative) in bidding later in the block. A potential benefit of an auction administered instead at the execution layer is the “endogenous” component, facilitating a higher burn; the value of a ticket increases if the current ticket holder can extract value from future ticket holders through MEV. However, this direction raises gameability concerns if a single actor can come to monopolize the auction (ILs may here be useful). A MEV resistant mechanism, as here proposed, originating at the consensus layer, therefore seems like a viable direction.</p>\n<p>It might seem tempting to replicate some facets of the proposed design for transaction processing: making the protocol more MEV resistant by having attesters observe transactions, the protocol sequence them by RANDAO, and the price adjust in a slot-delimited fashion. However, the requirements for transactions are different than for the purchase orders of execution rights analyzed in this post (e.g., time, quantity). Translating the ideas of this post directly to transaction processing might therefore unfortunately be difficult. Yet the proposed mechanism could perhaps lend some inspiration going forward.</p>\n<p>It should be noted that multi-block MEV is a separate topic of concern. The proposed mechanism is resistant to inducing MEV at the purchase stage but does not preclude multi-block MEV. This is a general issue and an underexplored topic at this point in time. Censorship resistance is likewise an important problem not addressed by the auction mechanism. Various strategies, such as ILs (<a href=\"https://ethresear.ch/t/fork-choice-enforced-inclusion-lists-focil-a-simple-committee-based-inclusion-list-proposal/19870\">1</a>, <a href=\"https://ethresear.ch/t/one-bit-per-attester-inclusion-lists/19797\">2</a>, <a href=\"https://ethresear.ch/t/unconditional-inclusion-lists/18500\">3</a>), have been proposed. Whether the presented auction mechanism can be one part of an overall architecture that also tackles other issues remains to be explored.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/mev-resistant-dynamic-pricing-auction-of-execution-proposal-rights/20024\">Read full topic</a></p>","link":"https://ethresear.ch/t/mev-resistant-dynamic-pricing-auction-of-execution-proposal-rights/20024","pubDate":"Tue, 09 Jul 2024 10:52:26 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20024"},"source":{"@url":"https://ethresear.ch/t/mev-resistant-dynamic-pricing-auction-of-execution-proposal-rights/20024.rss","#text":"MEV resistant dynamic pricing auction of execution proposal rights"},"filter":false},{"title":"Deep Diving Attestations - A quantitative analysis","dc:creator":"Nero_eth","category":"Data Science","description":"<h1><a name=\"deep-diving-attestations-1\" class=\"anchor\" href=\"https://ethresear.ch#deep-diving-attestations-1\"></a>Deep Diving Attestations</h1>\n<p><em>I want to provide some quantitative stats on…</em></p>\n<ul>\n<li><em>Head</em>-, <em>target</em>-, and <em>source</em> votes,</li>\n<li>The individual node operators’ attestation performance, including the best and worst validators,</li>\n<li>Attestation <em>timing</em> and <em>inclusion delay</em>, and</li>\n<li>The impact of <em>MEV-Boost, CL clients, Proposer Timing Games</em> and <em>Big Blocks with Blobs</em> on attestation accuracy.</li>\n</ul>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/2/a/2a11d5d44000665f0ed449873280783c5e163cd6.png\" alt=\"doge\" data-base62-sha1=\"60agt9sKBsL0HUK9DTHZ6ETjn2C\" width=\"459\" height=\"458\"></p>\n<p><em>Many thanks to <a href=\"https://x.com/casparschwa\">Caspar</a>, <a href=\"https://x.com/dapplion\">DappLion</a>, <a href=\"https://x.com/barnabemonnot\">Barnabé</a> and <a href=\"https://x.com/potuz_eth\">Potuz</a> for their feedback and review!</em></p>\n<h2><a name=\"data-2\" class=\"anchor\" href=\"https://ethresear.ch#data-2\"></a>Data</h2>\n<p>I use data ranging from slot 9,169,184 to slot 9,392,415, amounting to 6,975 epochs, 31 days of data.<br>\nThe goal is to provide some initial results from analyzing attestations, as a warm-up for analyzing correlated attestation penalties (<a href=\"https://eips.ethereum.org/EIPS/eip-7716\">EIP-7716</a>).<br>\nSome of the data is collected by myself using custom parsing scripts. Other data was provided by <a href=\"https://ethpandaops.io/\">EthPandaOps</a>. This includes timing data collected from running nodes of <strong>every client</strong> in the regions <strong>Sydney</strong>, <strong>Helsinki</strong>, and <strong>San Francisco</strong>, with all nodes being <strong>subscribed to all subnets</strong>. For classifying CL clients, the <a href=\"https://github.com/sigp/blockprint\">blockprint</a> tool was used.</p>\n<blockquote>\n<p>Importantly, my solo staker categorization is done very conservatively to avoid confusing professional entities with solo stakers. In total, my dataset contains 8,488 validators classified as solo stakers.</p>\n</blockquote>\n<p>The code for creating the charts is published in <a href=\"https://github.com/nerolation/eth-deep-diving-attestations\">this repo.</a></p>\n<h2><a name=\"attestations-3\" class=\"anchor\" href=\"https://ethresear.ch#attestations-3\"></a>Attestations</h2>\n<h3><a name=\"the-basics-4\" class=\"anchor\" href=\"https://ethresear.ch#the-basics-4\"></a>The Basics</h3>\n<p><a href=\"https://eth2book.info/capella/part2/consensus/\">Attestations</a> are at the core of Ethereum. Through attesting to past checkpoints, Ethereum’s validators agree on a state to become irreversible (<a href=\"https://eth2book.info/capella/part2/consensus/casper_ffg/\">Casper FFG</a>). Furthermore, validators use attestations to agree upon the tip of the chain, deciding which transactions get confirmed and which don’t (<a href=\"https://eth2book.info/capella/part2/consensus/lmd_ghost/\">LMD GHOST</a>).<br>\nEvery validator, backed by its stake, participates in every epoch and is randomly assigned a slot, during which it is expected to broadcast its view of the chain through attesting.</p>\n<p><strong>An attestation contains three things:</strong></p>\n<ul>\n<li>A <em>source</em> vote: The block (and all predecessors) to be finalized</li>\n<li>A <em>target</em> vote: The block (and all predecessors) to be justified (=pre-finalized)</li>\n<li>A <em>head</em> vote: The block seen as the head of the chain.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/8/98c353dd9366c270a1d3ef3b75c9efaec79c4fcd.png\" data-download-href=\"https://ethresear.ch/uploads/default/98c353dd9366c270a1d3ef3b75c9efaec79c4fcd\" title=\"epochslotvalidator\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/8/98c353dd9366c270a1d3ef3b75c9efaec79c4fcd_2_690x182.png\" alt=\"epochslotvalidator\" data-base62-sha1=\"lNp3U1hqvFp1dMXFQPnHfHvoLZX\" width=\"690\" height=\"182\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/8/98c353dd9366c270a1d3ef3b75c9efaec79c4fcd_2_690x182.png, https://ethresear.ch/uploads/default/optimized/3X/9/8/98c353dd9366c270a1d3ef3b75c9efaec79c4fcd_2_1035x273.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/9/8/98c353dd9366c270a1d3ef3b75c9efaec79c4fcd_2_1380x364.png 2x\" data-dominant-color=\"ECEFF0\"></a></div><p></p>\n<p>Since the <a href=\"https://ethereum.org/en/history/\">Deneb hardfork</a> that included <a href=\"https://eips.ethereum.org/EIPS/eip-7045\">EIP-7045</a>, attestations for a slot in epoch N can be included up until the end of epoch N+1. However, <a href=\"https://eth2book.info/capella/part2/incentives/rewards/\">inclusion doesn’t guarantee a reward</a>:<br>\nTo be rewarded, a validator must ensure its source vote is included within 5 slots. The target vote has to be included within 32 slots to be rewarded. Head votes must be included in the following slot to be eligible for a reward.</p>\n<p>As of today, Ethereum counts <a href=\"https://beaconcha.in/charts/validators\">~1.03</a> million validators. This means we have 1.03 million votes every epoch, ~32,000 every slot. In one day, with 225 epochs, there are approximately 225 million attestations. This data grows quite fast.</p>\n<p>If the <strong>source vote</strong> is <strong>invalid</strong>, then the <strong>target</strong> and <strong>head vote</strong> <strong>MUST</strong> be <strong>invalid</strong> too.</p>\n<p>A slot can be broken down into 3 phases:<br>\n<img src=\"https://ethresear.ch/uploads/default/original/3X/f/3/f3248a045ba6759fb78e4845294714b5abf18072.png\" alt=\"slottime (2)\" data-base62-sha1=\"yGWjdNG47KqD5gHpp6cCCxHAMw2\" width=\"633\" height=\"91\"></p>\n<ol>\n<li>Validators attest when they have seen a block for the current slot or at second 4 in the slot - the attestation deadline. A block broadcasted at second 0 in the slot has 4 seconds to be seen by all relevant validators and collect votes. Late blocks risk not receiving enough attestations and being reorged by a subsequent block.</li>\n<li>Between second 4 and 8 in the slot, attestations are <a href=\"https://eth2book.info/capella/part2/building_blocks/aggregator/\">aggregated</a> and broadcasted by selected validators.</li>\n<li>Eventually, the subsequent block proposer includes them into its block.</li>\n</ol>\n<blockquote>\n<p>For more in-depth explanations check out this post by Georgios and Mike on “<a href=\"https://www.paradigm.xyz/2023/04/mev-boost-ethereum-consensus\">Time, slots, and the ordering of events in Ethereum Proof-of-Stake</a>”.</p>\n</blockquote>\n<h3><a name=\"definitions-5\" class=\"anchor\" href=\"https://ethresear.ch#definitions-5\"></a>Definitions</h3>\n<p><strong>Missed vs. Failed:</strong></p>\n<ul>\n<li>A validator can either <strong>miss</strong> its attestation (<em>missed</em>) or attest to a <strong>wrong</strong> checkpoint (<em>failed</em>).</li>\n<li><strong>Missed attestations</strong> can happen if the node running the validator is out of sync or offline.</li>\n<li><strong>Voting for a wrong checkpoint</strong>, e.g. a wrong head, can have various reasons like receiving a block too late, being out of sync or even having a bug, etc.</li>\n<li><strong>Regardless of the reason, a <em>failed</em> vote tells us one important fact about a validator—it is online.</strong></li>\n</ul>\n<p>In the following, we’ll also need the term <em><strong>“high-performing validator”</strong></em> which is a validator that hasn’t failed to cast a correct and timely head vote over the complete time frame analyzed.</p>\n<h3><a name=\"attestation-inclusion-delay-6\" class=\"anchor\" href=\"https://ethresear.ch#attestation-inclusion-delay-6\"></a>Attestation Inclusion Delay</h3>\n<p>In the best case, attestations are included in the block of the <strong>next slot</strong>, causing a <strong>delay of 1</strong>. Sometimes, especially when the next proposer is offline or gets reorged, attestations are not included in the next slot. Then, the validator misses out on the rewards from the correct head vote, even though the attestation can still be included in a later block.</p>\n<p>The following chart shows the distribution of the inclusion delay over seconds 1-63 and the <strong>clients the attesters were using</strong>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/5/b52032561b50bc6d79d4c6393a20510b9f8ac404.png\" data-download-href=\"https://ethresear.ch/uploads/default/b52032561b50bc6d79d4c6393a20510b9f8ac404\" title=\"correct_head_delay_clients\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/5/b52032561b50bc6d79d4c6393a20510b9f8ac404_2_690x316.png\" alt=\"correct_head_delay_clients\" data-base62-sha1=\"pQjoZxfqx1BzIQQH7wr3xDaVtEE\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/5/b52032561b50bc6d79d4c6393a20510b9f8ac404_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/b/5/b52032561b50bc6d79d4c6393a20510b9f8ac404_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/b/5/b52032561b50bc6d79d4c6393a20510b9f8ac404.png 2x\" data-dominant-color=\"F8F7F7\"></a></div><p></p>\n<ul>\n<li>95.85% of attestations are included in the next slot.</li>\n<li>~1.2% of attestations are included in the slot after the next.</li>\n<li>When a new epoch begins, old attestations are again picked up and finally included.\n<ul>\n<li>This is weird (<em>but there’ll be an explanation little down below</em>).</li>\n<li>Attestations of validators of all clients are affected.</li>\n</ul>\n</li>\n</ul>\n<p><strong>This raises the question, “<em>what are clients doing?</em>”</strong></p>\n<p>Examples include slots <strong><a href=\"https://beaconcha.in/slot/9267438#attestations\">9267438</a></strong> with a delay of 35 (5250 validators), <strong><a href=\"https://beaconcha.in/slot/9267425#attestations\">9267425</a></strong> with a delay of 52 (1813 validators), or slot <strong><a href=\"https://beaconcha.in/slot/9267427#attestations\">9267427</a></strong> with a delay of 36 slots (1305 validators).</p>\n<p>What if those late attestations were already included earlier and were later just included again (h/t <a href=\"https://github.com/dapplion\">dapplion</a>)? To analyze that, we reproduce the above chart but separate by <em><strong>first inclusion</strong></em> and <em><strong>every following inclusion</strong></em>:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/8/a8cfb4ec1e6b9486dbafddb9587eeb55be1b3d1c.png\" data-download-href=\"https://ethresear.ch/uploads/default/a8cfb4ec1e6b9486dbafddb9587eeb55be1b3d1c\" title=\"correct_head_delay_reinclusion\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/8/a8cfb4ec1e6b9486dbafddb9587eeb55be1b3d1c_2_690x316.png\" alt=\"correct_head_delay_reinclusion\" data-base62-sha1=\"o5ndVxO5epPvUaQJQnS7HrOkCh6\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/8/a8cfb4ec1e6b9486dbafddb9587eeb55be1b3d1c_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/a/8/a8cfb4ec1e6b9486dbafddb9587eeb55be1b3d1c_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/8/a8cfb4ec1e6b9486dbafddb9587eeb55be1b3d1c.png 2x\" data-dominant-color=\"F9F7F6\"></a></div><p></p>\n<p>First, it is interesting that almost <strong>half of the attestations included with a delay of 2 slots</strong> (note: best is 1) <strong>have already been included in an earlier slot</strong>. This is possible because proposers are free to pick attestations that have already been included in the past 63 slots and include them again. Additionally, a block can contain the same attestations multiple times, aggregated differently.</p>\n<p>We can see that the majority of the attestations included in the second hump with a delay of around 35 slots are <strong>reincluded</strong> attestations.</p>\n<p>This raises the question, “<em>why does this occur with a delay of more than 32 slots?</em>”</p>\n<p>In <strong>percentage</strong> terms, we can see the <em>first inclusion</em> share reducing over an increasing delay:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/e/5e9f624dcd52ea92cbfedbd5d0da5ebf1f2113e3.png\" data-download-href=\"https://ethresear.ch/uploads/default/5e9f624dcd52ea92cbfedbd5d0da5ebf1f2113e3\" title=\"correct_head_delay_reinclusion_per\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/e/5e9f624dcd52ea92cbfedbd5d0da5ebf1f2113e3_2_690x316.png\" alt=\"correct_head_delay_reinclusion_per\" data-base62-sha1=\"dv4mnaChZL8f0Uc2zH6RkJsh1MD\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/e/5e9f624dcd52ea92cbfedbd5d0da5ebf1f2113e3_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/5/e/5e9f624dcd52ea92cbfedbd5d0da5ebf1f2113e3_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/e/5e9f624dcd52ea92cbfedbd5d0da5ebf1f2113e3.png 2x\" data-dominant-color=\"F7BF87\"></a></div><p></p>\n<p>To dig deeper into this reinclusion finding, let’s check the <strong>CL clients that built the blocks</strong> that included attestations with &gt;32 slots delay:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/2/62e38ffb13e5375a76e8d567990bbf2dfcd0c9e6.png\" data-download-href=\"https://ethresear.ch/uploads/default/62e38ffb13e5375a76e8d567990bbf2dfcd0c9e6\" title=\"correct_head_delay_clients_proposers\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/2/62e38ffb13e5375a76e8d567990bbf2dfcd0c9e6_2_690x316.png\" alt=\"correct_head_delay_clients_proposers\" data-base62-sha1=\"e6OldZMa4oRuXNAE66hUsiiHjW6\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/2/62e38ffb13e5375a76e8d567990bbf2dfcd0c9e6_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/6/2/62e38ffb13e5375a76e8d567990bbf2dfcd0c9e6_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/2/62e38ffb13e5375a76e8d567990bbf2dfcd0c9e6.png 2x\" data-dominant-color=\"F7F4F2\"></a></div><p></p>\n<p>We can see quite clearly that it’s mainly Prysm proposers who include attestations that have already been included earlier, which is very likely a bug.</p>\n<blockquote>\n<p>The fact that the plot also shows other clients affected might stem from inaccuracies in classifying clients probabilisticly.</p>\n</blockquote>\n<p><em>The Prysm team was notified.</em></p>\n<p><strong>Edit</strong>: <em>The Prysm team was faster in fixing the bug than I was in finishing this post.</em></p>\n<p><strong>Fix</strong>: <a href=\"https://github.com/prysmaticlabs/prysm/pull/14156#event-13323121631\" class=\"inline-onebox\">Increase attestation seen cache exp time to two epochs by terencechain · Pull Request #14156 · prysmaticlabs/prysm · GitHub</a></p>\n<h2><a name=\"missedfailed-attestations-7\" class=\"anchor\" href=\"https://ethresear.ch#missedfailed-attestations-7\"></a>Missed/Failed Attestations</h2>\n<h3><a name=\"missedfailed-head-votes-8\" class=\"anchor\" href=\"https://ethresear.ch#missedfailed-head-votes-8\"></a>Missed/Failed Head Votes</h3>\n<p><strong>Head votes</strong> are the <strong>most difficult</strong> part of an attestation. They need to be cast correctly and timely. Per <a href=\"https://github.com/ethereum/consensus-specs/blob/1642610bd5994d344fb1b6a9f44ec0e14a527580/specs/phase0/validator.md#attesting\">honest validator spec</a>, <strong>validators have 4 seconds</strong> to receive and validate a block for the current slot. If no block is received until second 4, validators attest to the block in the previous slot. <strong>Timeliness in the context of head votes means 1 slot.</strong> Although older head votes can be included, there is no reward for the respective validator.</p>\n<blockquote>\n<p>The legend is ordered in descending order by the sum of missed votes.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/3/2317707179ceb2e3d59cebbda6ca85119edb590e.png\" data-download-href=\"https://ethresear.ch/uploads/default/2317707179ceb2e3d59cebbda6ca85119edb590e\" title=\"missed_head_votes_over_date\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/3/2317707179ceb2e3d59cebbda6ca85119edb590e_2_690x380.png\" alt=\"missed_head_votes_over_date\" data-base62-sha1=\"50qVE6q70t9xp0XQ4aq2TUq0uC2\" width=\"690\" height=\"380\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/3/2317707179ceb2e3d59cebbda6ca85119edb590e_2_690x380.png, https://ethresear.ch/uploads/default/optimized/3X/2/3/2317707179ceb2e3d59cebbda6ca85119edb590e_2_1035x570.png 1.5x, https://ethresear.ch/uploads/default/original/3X/2/3/2317707179ceb2e3d59cebbda6ca85119edb590e.png 2x\" data-dominant-color=\"DCDAD5\"></a></div><p></p>\n</blockquote>\n<p><strong>On average, we observe around ~500 missed or wrong head votes out of ~32k validators per slot and ~16k, out of ~1m, per epoch. This represents around 1.56%.</strong></p>\n<blockquote>\n<p>The entity labeled as <em>unidentified</em> may consist of multiple independent parties, including solo stakers and entities that haven’t been identified yet, and it has a total market share of 20% of all validators.</p>\n</blockquote>\n<p>Assuming every node operator performs equally, the market share of each entity should reflect its share of missed head votes. However, this is not the case and we see certain node operators being superior compared to others.</p>\n<p><strong>The following chart visualizes the delta in the expected number of missed head votes based on market share and the actual number of missed attestations.</strong><br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/8/e8d1dd7c62c93050023fb71efe83f237a54d055b.png\" data-download-href=\"https://ethresear.ch/uploads/default/e8d1dd7c62c93050023fb71efe83f237a54d055b\" title=\"delta_missed_head_votes\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/8/e8d1dd7c62c93050023fb71efe83f237a54d055b_2_690x335.png\" alt=\"delta_missed_head_votes\" data-base62-sha1=\"xdCpfld0EQLrAKlDQPRekIUYHHB\" width=\"690\" height=\"335\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/8/e8d1dd7c62c93050023fb71efe83f237a54d055b_2_690x335.png, https://ethresear.ch/uploads/default/optimized/3X/e/8/e8d1dd7c62c93050023fb71efe83f237a54d055b_2_1035x502.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/8/e8d1dd7c62c93050023fb71efe83f237a54d055b.png 2x\" data-dominant-color=\"F1F2F2\"></a></div><p></p>\n<p>While entities such as <em>Kiln</em>, <em>Ether_fi</em>, <em>Lido</em>, <em>Renzo</em>, <em>Figment</em>, and <em>Stakefish</em> perform better than the average, we observe that Rocketpool validators, Kraken validators, and solo stakers miss up to 3% more head votes than their market share.</p>\n<p><strong>Focusing on the slot indices in epochs, we distinguish between missing a head vote due to being offline and voting for the wrong head.</strong></p>\n<p>The following chart shows the average number of missed/wrong head votes over the slots of an epoch:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/9/f975b9422a722e62e609aa65aaa40ecc1f722ac7.png\" data-download-href=\"https://ethresear.ch/uploads/default/f975b9422a722e62e609aa65aaa40ecc1f722ac7\" title=\"failed_missed_head_votes\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/9/f975b9422a722e62e609aa65aaa40ecc1f722ac7_2_690x316.png\" alt=\"failed_missed_head_votes\" data-base62-sha1=\"zAP6WgGXD2KQ5yz2VLmSyidJ6cv\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/9/f975b9422a722e62e609aa65aaa40ecc1f722ac7_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/f/9/f975b9422a722e62e609aa65aaa40ecc1f722ac7_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/f/9/f975b9422a722e62e609aa65aaa40ecc1f722ac7.png 2x\" data-dominant-color=\"F7EADC\"></a></div><p></p>\n<p>From the above chart, we can infer:</p>\n<ul>\n<li>There is a fairly <strong>constant number of <em>missed</em> head votes</strong>.\n<ul>\n<li><strong>This is expected</strong> as <em>lost-key validators</em> contribute a constant portion to that category.</li>\n</ul>\n</li>\n<li>The beginning of an epoch, particularly the first slot, has significantly more wrong head votes than the rest.\n<ul>\n<li><strong>This is expected</strong> because the proposer in the first slot has to carry out the <strong>epoch transition</strong>. It must then broadcast that block to reach all attesters. T</li>\n</ul>\n</li>\n<li>The average amount of missed/wrong head votes is <strong>3 times larger</strong> in the first slot of an epoch than in the epochs 2-32.</li>\n</ul>\n<p>Focusing on missed head votes and CL clients, we cannot see anything suspicious in the following chart:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/7/f7cbecfb8118dcd5ca0e37e04df641e8c1c994e4.png\" data-download-href=\"https://ethresear.ch/uploads/default/f7cbecfb8118dcd5ca0e37e04df641e8c1c994e4\" title=\"failed_missed_head_votes_over_clclient\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/7/f7cbecfb8118dcd5ca0e37e04df641e8c1c994e4_2_690x287.png\" alt=\"failed_missed_head_votes_over_clclient\" data-base62-sha1=\"zm6QkqQXC5J5TrebUL0vUOf4VVy\" width=\"690\" height=\"287\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/7/f7cbecfb8118dcd5ca0e37e04df641e8c1c994e4_2_690x287.png, https://ethresear.ch/uploads/default/optimized/3X/f/7/f7cbecfb8118dcd5ca0e37e04df641e8c1c994e4_2_1035x430.png 1.5x, https://ethresear.ch/uploads/default/original/3X/f/7/f7cbecfb8118dcd5ca0e37e04df641e8c1c994e4.png 2x\" data-dominant-color=\"DED7CE\"></a></div><p></p>\n<p>In general, it looks like all CL clients are affected by early-in-epoch misses the same:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/5/75c8e90cf46709ceb37998916b3ea77c7b9dfe88.png\" data-download-href=\"https://ethresear.ch/uploads/default/75c8e90cf46709ceb37998916b3ea77c7b9dfe88\" title=\"failed_missed_head_votes_over_clclient_over_slot\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/5/75c8e90cf46709ceb37998916b3ea77c7b9dfe88_2_690x316.png\" alt=\"failed_missed_head_votes_over_clclient_over_slot\" data-base62-sha1=\"gNYjndghA4eOQZJ6mfg5ap4qlIY\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/5/75c8e90cf46709ceb37998916b3ea77c7b9dfe88_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/7/5/75c8e90cf46709ceb37998916b3ea77c7b9dfe88_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/7/5/75c8e90cf46709ceb37998916b3ea77c7b9dfe88.png 2x\" data-dominant-color=\"EEEBE9\"></a></div><p></p>\n<h3><a name=\"missedfailed-target-votes-9\" class=\"anchor\" href=\"https://ethresear.ch#missedfailed-target-votes-9\"></a>Missed/Failed Target Votes</h3>\n<p>Target votes are already easier to get right. The only exception is the first slot of an epoch that follows the <strong>epoch boundary</strong>: In such cases, the head vote equals the target vote and validators having their target vote wrong tend to vote for the parent block (=the block in the last slot of the previous epoch) instead.</p>\n<p>On average, we observe around 150 missed target votes per slot and 4,800 per epoch. This represents around <strong>0.48%</strong> of all validators.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/7/570b69e8ccefa7585e259961fa4afa09206a1663.png\" data-download-href=\"https://ethresear.ch/uploads/default/570b69e8ccefa7585e259961fa4afa09206a1663\" title=\"missed_target_votes_over_date\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/7/570b69e8ccefa7585e259961fa4afa09206a1663_2_690x380.png\" alt=\"missed_target_votes_over_date\" data-base62-sha1=\"cq1ZBJnq2Kyrx5uC72yhnFlNBET\" width=\"690\" height=\"380\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/7/570b69e8ccefa7585e259961fa4afa09206a1663_2_690x380.png, https://ethresear.ch/uploads/default/optimized/3X/5/7/570b69e8ccefa7585e259961fa4afa09206a1663_2_1035x570.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/7/570b69e8ccefa7585e259961fa4afa09206a1663.png 2x\" data-dominant-color=\"CFD2D1\"></a></div><p></p>\n<p>Visualizing the same over the different CL clients, we see all clients affected to extents close to their market share.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/8/b8284e30b6f3f61ed8a95d5989a6417c275f82bc.png\" data-download-href=\"https://ethresear.ch/uploads/default/b8284e30b6f3f61ed8a95d5989a6417c275f82bc\" title=\"failed_missed_target_votes_over_clclient\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/8/b8284e30b6f3f61ed8a95d5989a6417c275f82bc_2_690x287.png\" alt=\"failed_missed_target_votes_over_clclient\" data-base62-sha1=\"qh8cVFhzbtsVNxscKFTDyOg8Y5m\" width=\"690\" height=\"287\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/8/b8284e30b6f3f61ed8a95d5989a6417c275f82bc_2_690x287.png, https://ethresear.ch/uploads/default/optimized/3X/b/8/b8284e30b6f3f61ed8a95d5989a6417c275f82bc_2_1035x430.png 1.5x, https://ethresear.ch/uploads/default/original/3X/b/8/b8284e30b6f3f61ed8a95d5989a6417c275f82bc.png 2x\" data-dominant-color=\"D9CFC4\"></a></div><p></p>\n<p>Looking at the entities that perform better than others, we again see operators such as Lido, Renzo, Mantle, Coinbase, etc. outperforming the average.</p>\n<blockquote>\n<p>Notably, Lido isn’t a single NO but consists of multiple operators that I combined for simplicity.</p>\n</blockquote>\n<p>On the other hand, Rocketpool validators and solo stakers perform worse and miss up to 3% more target votes than expected.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/2/32fd263353a3e550dfd8c878b8f9c3b8231d6965.png\" data-download-href=\"https://ethresear.ch/uploads/default/32fd263353a3e550dfd8c878b8f9c3b8231d6965\" title=\"delta_missed_target_votes\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/2/32fd263353a3e550dfd8c878b8f9c3b8231d6965_2_690x335.png\" alt=\"delta_missed_target_votes\" data-base62-sha1=\"7h4f4XEMUcHSdv4PJSlmxLwfw8d\" width=\"690\" height=\"335\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/2/32fd263353a3e550dfd8c878b8f9c3b8231d6965_2_690x335.png, https://ethresear.ch/uploads/default/optimized/3X/3/2/32fd263353a3e550dfd8c878b8f9c3b8231d6965_2_1035x502.png 1.5x, https://ethresear.ch/uploads/default/original/3X/3/2/32fd263353a3e550dfd8c878b8f9c3b8231d6965.png 2x\" data-dominant-color=\"F5F6F6\"></a></div><p></p>\n<p>As seen in <a href=\"https://ethresear.ch/t/the-second-slot-itch-statistical-analysis-of-reorgs/16333\">previous analysis</a> on reorgs, epoch boundaries can cause troubles for certain validators when it comes to proposing a block.<br>\n<strong>Blocks are more frequently reorged if they are proposed in the first or second slot of an epoch.</strong> Thus, we would expect those blocks to be responsible for the largest split-views among validators, causing some to attest to the current block, and others to the parent block.</p>\n<p>Even though expected, we can see that the slot index in an epoch has a major impact on failed target votes:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/0/20b331e0885aaa2efed7972a75ecbe489ab8dd26.png\" data-download-href=\"https://ethresear.ch/uploads/default/20b331e0885aaa2efed7972a75ecbe489ab8dd26\" title=\"failed_missed_target_votes\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/0/20b331e0885aaa2efed7972a75ecbe489ab8dd26_2_690x316.png\" alt=\"failed_missed_target_votes\" data-base62-sha1=\"4FhcxiMZKhtGsdy0n9xbR9TPeaa\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/0/20b331e0885aaa2efed7972a75ecbe489ab8dd26_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/2/0/20b331e0885aaa2efed7972a75ecbe489ab8dd26_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/2/0/20b331e0885aaa2efed7972a75ecbe489ab8dd26.png 2x\" data-dominant-color=\"F7F7F7\"></a></div><p></p>\n<p><strong>Target votes are the hardest to get right at the beginning of an epoch.</strong> This is visible in the above diagram showing the <strong>first slot of an epoch with 18x more wrong target votes</strong> than other slots. The thing is, timely and correct target votes bring twice as many rewards than head or source votes.</p>\n<p>Although looking problematic, I’d argue this isn’t a big issue. A target vote at the beginning of an epoch is essentially just a head vote, and the relative share of failures in the first slot at 6.4% is still relatively low. Furthermore, it is a known fact that epoch boundaries come with many different cascading effects including missed slots, which also contributes to the above finding.</p>\n<blockquote>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/c/2c3c18e5acdc7080ad46101a7f05e775a50edb35.png\" data-download-href=\"https://ethresear.ch/uploads/default/2c3c18e5acdc7080ad46101a7f05e775a50edb35\" title=\"failed_missed_target_votes_over_clclient_over_slot\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/c/2c3c18e5acdc7080ad46101a7f05e775a50edb35_2_690x316.png\" alt=\"failed_missed_target_votes_over_clclient_over_slot\" data-base62-sha1=\"6jjLwkb16uEoRJfDvWBPd0FFtjv\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/c/2c3c18e5acdc7080ad46101a7f05e775a50edb35_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/2/c/2c3c18e5acdc7080ad46101a7f05e775a50edb35_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/2/c/2c3c18e5acdc7080ad46101a7f05e775a50edb35.png 2x\" data-dominant-color=\"F8F7F7\"></a></div><br>\nThis phenomenon seems to be agnostic to CL clients.<p></p>\n</blockquote>\n<h3><a name=\"missedfailed-source-votes-10\" class=\"anchor\" href=\"https://ethresear.ch#missedfailed-source-votes-10\"></a>Missed/Failed Source Votes</h3>\n<p>Source votes are easy to get correct and even validators that are slightly out of sync have a good chance to vote for the right source checkpoint. This is because the to-be-voted-for checkpoint is at least 6.4 minutes (<em>=1 epoch</em>) in the past. Wrong source votes indicate that the validator is either out of sync or on a completely different chain. Thus, target and head votes must be incorrect if the source vote is wrong.</p>\n<blockquote>\n<p>For source votes one cannot differentiate between <em>missed</em> and <em>failed</em> because wrong source votes never make it onchain and are ignored by proposers/validators.</p>\n</blockquote>\n<p>On average, we observe around 100 missed source votes per slot, 3,200 per epoch.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/1/61f31f5346adcf9f2b85495f01d371c64e2bff69.png\" data-download-href=\"https://ethresear.ch/uploads/default/61f31f5346adcf9f2b85495f01d371c64e2bff69\" title=\"missed_source_votes_over_date\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/1/61f31f5346adcf9f2b85495f01d371c64e2bff69_2_690x380.png\" alt=\"missed_source_votes_over_date\" data-base62-sha1=\"dYvcw5IW0hC3M6HRI01j4oa5Cwp\" width=\"690\" height=\"380\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/1/61f31f5346adcf9f2b85495f01d371c64e2bff69_2_690x380.png, https://ethresear.ch/uploads/default/optimized/3X/6/1/61f31f5346adcf9f2b85495f01d371c64e2bff69_2_1035x570.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/1/61f31f5346adcf9f2b85495f01d371c64e2bff69.png 2x\" data-dominant-color=\"CDCFD0\"></a></div><p></p>\n<p>Similar to head and target votes, we observe an increased number of missed source votes at the beginning of an epoch. This MIGHT be related to the increased reorg probability at the beginning of an epoch but more analysis would be needed to confirm that.<br>\nIn general, validators usually have ample time (at least 32 slots) to cast their source vote. However, if their head vote is incorrect, it might result in the entire attestation being ignored by an aggregator and, consequently, not being recorded onchain.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/f/1f1e51c85696870bc5d10d561a9814172f0ef750.png\" data-download-href=\"https://ethresear.ch/uploads/default/1f1e51c85696870bc5d10d561a9814172f0ef750\" title=\"missed_source_votes_over_slot\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/f/1f1e51c85696870bc5d10d561a9814172f0ef750_2_690x380.png\" alt=\"missed_source_votes_over_slot\" data-base62-sha1=\"4rhLagfIXVKN0FdKkQDGEqoW2bK\" width=\"690\" height=\"380\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/f/1f1e51c85696870bc5d10d561a9814172f0ef750_2_690x380.png, https://ethresear.ch/uploads/default/optimized/3X/1/f/1f1e51c85696870bc5d10d561a9814172f0ef750_2_1035x570.png 1.5x, https://ethresear.ch/uploads/default/original/3X/1/f/1f1e51c85696870bc5d10d561a9814172f0ef750.png 2x\" data-dominant-color=\"DADBDD\"></a></div><p></p>\n<h2><a name=\"best-and-worst-validators-11\" class=\"anchor\" href=\"https://ethresear.ch#best-and-worst-validators-11\"></a>Best and Worst Validators</h2>\n<p>Validators cast a vote in every epoch and quickly checking <a href=\"https://beaconcha.in/\">beaconcha.in</a>, more than 99.9% of validators are active in every epoch.</p>\n<p>By summing up correct head votes, we can determine the best and worst-performing validators.</p>\n<p><strong>The following chart visualizes the average missed/failed head votes per slot over the validator IDs:</strong></p>\n<blockquote>\n<p>Withdrawn validators are excluded.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/4/94c96b54be8347449d0d060223ba0a9333dd3013.png\" data-download-href=\"https://ethresear.ch/uploads/default/94c96b54be8347449d0d060223ba0a9333dd3013\" title=\"head_votes_over_validator_ids\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/4/94c96b54be8347449d0d060223ba0a9333dd3013_2_690x316.png\" alt=\"head_votes_over_validator_ids\" data-base62-sha1=\"leecFJmT9BT4opwBc9cQ1EEwVeb\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/4/94c96b54be8347449d0d060223ba0a9333dd3013_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/9/4/94c96b54be8347449d0d060223ba0a9333dd3013_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/9/4/94c96b54be8347449d0d060223ba0a9333dd3013.png 2x\" data-dominant-color=\"D3E2EE\"></a></div><p></p>\n</blockquote>\n<p>We can see that the missed slot rate is slightly <strong>increasing with increasing validator IDs,</strong> with outliers for the validators with IDs 0-30k, 300k-330k, and 780k-790k.<br>\nThe best validators are the group with IDs from 50k-60k.</p>\n<p><strong>Over four weeks, most validators miss around 20-30 head votes:</strong></p>\n<p>The following chart has a <strong>logarithmic y-axis</strong> to make sure we can also see the last bar on the very right that consists of validators that have never attested in the 4 weeks analyzed.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/7/2757547120b4ca4f9068e3fe491289fa8dec1f06.png\" data-download-href=\"https://ethresear.ch/uploads/default/2757547120b4ca4f9068e3fe491289fa8dec1f06\" title=\"failed_missed_head_per_validator_dist_per\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/7/2757547120b4ca4f9068e3fe491289fa8dec1f06_2_690x316.png\" alt=\"failed_missed_head_per_validator_dist_per\" data-base62-sha1=\"5C1IVI6ujiGR6uhCuZUsSpz3AB8\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/7/2757547120b4ca4f9068e3fe491289fa8dec1f06_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/2/7/2757547120b4ca4f9068e3fe491289fa8dec1f06_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/2/7/2757547120b4ca4f9068e3fe491289fa8dec1f06.png 2x\" data-dominant-color=\"DFE8F0\"></a></div><p></p>\n<h3><a name=\"the-peak-of-performance-best-validators-12\" class=\"anchor\" href=\"https://ethresear.ch#the-peak-of-performance-best-validators-12\"></a>The peak of performance (best validators)</h3>\n<p>For the following, I use data ranging from epoch 292,655 to epoch 293,105, not the entire time frame analyzed, due to the sheer amount of data involved.</p>\n<p><em><strong>High-performers</strong></em> are defined as validators who haven’t missed voting for the correct head during a time frame of 3 days, starting from the last slot analyzed and going backward.</p>\n<p>The following table shows the largest node operators (sorted in descending order by market share) and the percentage of high-performing validators within 3 days compared to the total number of validators for each entity:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/7/5713faed8326eeee5afcdddcf300a1bbdd15e691.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/5713faed8326eeee5afcdddcf300a1bbdd15e691\" title=\"performer_table\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/7/5713faed8326eeee5afcdddcf300a1bbdd15e691_2_422x500.jpeg\" alt=\"performer_table\" data-base62-sha1=\"cqklwWUJ8HowuuLJCVlFwqDZiTL\" width=\"422\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/7/5713faed8326eeee5afcdddcf300a1bbdd15e691_2_422x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/5/7/5713faed8326eeee5afcdddcf300a1bbdd15e691_2_633x750.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/5/7/5713faed8326eeee5afcdddcf300a1bbdd15e691.jpeg 2x\" data-dominant-color=\"ECE5DF\"></a></div><p></p>\n<p>^ The entities in <em><strong>green</strong></em> have <em><strong>more</strong></em> high-performing validators than the average.</p>\n<p><strong>The shares visualized using a bar chart look like the following:</strong></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/0/50ed0ae6c74385c61c57a0e9c89ac9beef1e5d64.png\" data-download-href=\"https://ethresear.ch/uploads/default/50ed0ae6c74385c61c57a0e9c89ac9beef1e5d64\" title=\"topperformer_percentage\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/0/50ed0ae6c74385c61c57a0e9c89ac9beef1e5d64_2_690x316.png\" alt=\"topperformer_percentage\" data-base62-sha1=\"bxU3EUqBQOcSt7bvdopYsMKs25C\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/0/50ed0ae6c74385c61c57a0e9c89ac9beef1e5d64_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/5/0/50ed0ae6c74385c61c57a0e9c89ac9beef1e5d64_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/0/50ed0ae6c74385c61c57a0e9c89ac9beef1e5d64.png 2x\" data-dominant-color=\"EEF3F8\"></a></div><p></p>\n<p>We can see that the average high-performer rate is around 0-5% for the shown entities.<br>\n<strong>The outliers are <em>Everstake</em>, <em>Frax Finance</em> and <em>Rockx</em>.</strong></p>\n<p><em>So, what are those 3 parties doing differently than others?</em></p>\n<p><strong>There are two strategies an entity might apply:</strong></p>\n<ol>\n<li><em>Attest early</em> to ensure their vote has enough time to travel through the network and reach the next proposer for inclusion.</li>\n<li><em>Attest late</em> to ensure they vote for the correct head of the chain. The longer a validator waits, the easier it is to determine the head of the chain as other validators have already voted -&gt; <em>the risk is that the vote might not reach the next proposer in time</em>.</li>\n</ol>\n<p>The latter strategy may be referred to as <em><strong><a href=\"https://ethresear.ch/t/timing-games-implications-and-possible-mitigations/17612#attester-timing-games-9\">attester timing games</a></strong></em>.</p>\n<p><em>But what is better?</em></p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/a/1/a19d7ddccff2f47d6d73e80b5e2b5f1b96572091.png\" alt=\"Screenshot from 2024-06-27 20-22-27\" data-base62-sha1=\"n3IipQJkGlDPJ4CYadeNz0cPzYl\" width=\"587\" height=\"311\"></p>\n<p>I asked my Twitter friends, and the majority voted for ‘seen later,’ indicating validators are playing timing games for increased attestation accuracy.</p>\n<p>In truth, both are right.</p>\n<p>The following chart shows the distributions of attestation-seen timestamps of high-performing validators vs. the rest (non-high-performing validators):</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/a/8acfc992ada1a3b0a22ce9f1cfb036a7f191ab8e.png\" data-download-href=\"https://ethresear.ch/uploads/default/8acfc992ada1a3b0a22ce9f1cfb036a7f191ab8e\" title=\"high_performer_vs_rest_timing\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/a/8acfc992ada1a3b0a22ce9f1cfb036a7f191ab8e_2_690x304.png\" alt=\"high_performer_vs_rest_timing\" data-base62-sha1=\"jNZ4y02PYVKkevPhRPW9xbzO22a\" width=\"690\" height=\"304\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/a/8acfc992ada1a3b0a22ce9f1cfb036a7f191ab8e_2_690x304.png, https://ethresear.ch/uploads/default/optimized/3X/8/a/8acfc992ada1a3b0a22ce9f1cfb036a7f191ab8e_2_1035x456.png 1.5x, https://ethresear.ch/uploads/default/original/3X/8/a/8acfc992ada1a3b0a22ce9f1cfb036a7f191ab8e.png 2x\" data-dominant-color=\"F6F2ED\"></a></div><p></p>\n<p>We can see that the largest share of head votes from <strong>high-performers</strong> is seen between <strong>second 2 and 3</strong> in the slot. We observe another spike right <strong>after second 5</strong> in the slot. For all other validators (cf. <em>rest</em>), the majority of head votes arrive between <strong>second 4 and 5</strong>.</p>\n<p><strong>This points towards:</strong></p>\n<ul>\n<li>Most attesters are exceptionally good because they are <strong>faster</strong> than others.</li>\n<li>Some attesters are exceptionally good because they might <strong>wait longer</strong> for more accuracy.</li>\n</ul>\n<p><strong>&gt; Early attestations by high-performing validators are seen some milliseconds earlier than the rest.<br>\n&gt; Late attestations by high-performing validators are seen about 0.5 seconds later than the rest.</strong></p>\n<p>It is worth noting that every high-performing validator can be part of both groups, e.g., attesting late to ‘weak’ blocks (cf. epoch boundaries) and early for ‘strong’ blocks.<br>\nValidators with great network connectivity can afford to wait slightly longer. Furthermore, at any second in the slot, validators with great connectivity have more information available than other validators.</p>\n<blockquote>\n<p>A simple example is Coinbase: Technically, every Coinbase validator can be made aware of the votes of other Coinbase validators before voting. With a 10% market share, this provides significant additional security when voting on the correct head.</p>\n</blockquote>\n<p>By examining the head votes received/seen timings among the largest entities, we can clearly observe the differences. The best performers—Everstake, Frax Finance, and Rockx—typically attest between 4 and 6 seconds into the slot. While these entities outperform others, the following chart does not necessarily indicate a specific strategy being applied.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/2/c22c5adbedc46936379f5e7d1a775f4ad183cb0c.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/c22c5adbedc46936379f5e7d1a775f4ad183cb0c\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/2/c22c5adbedc46936379f5e7d1a775f4ad183cb0c_2_300x500.jpeg\" alt=\"image\" data-base62-sha1=\"rHJES7GruUaKsddKHwEUCujXEhS\" width=\"300\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/2/c22c5adbedc46936379f5e7d1a775f4ad183cb0c_2_300x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/c/2/c22c5adbedc46936379f5e7d1a775f4ad183cb0c_2_450x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/2/c22c5adbedc46936379f5e7d1a775f4ad183cb0c_2_600x1000.jpeg 2x\" data-dominant-color=\"F3F2F1\"></a></div><p></p>\n<blockquote>\n<p>And for a deeper dive into this topic check out <a href=\"https://ethereum.github.io/beaconrunner/notebooks/thunderdome/thunderdome.html\">this simulation</a> by Barnabé that goes into the depth of strategic attesting behavior.</p>\n</blockquote>\n<p><strong>Finally, we get the following timings for the attestations over different CL clients:</strong><br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/0/e01321bc4823cb594799d2c67012c599e352cfcd.png\" data-download-href=\"https://ethresear.ch/uploads/default/e01321bc4823cb594799d2c67012c599e352cfcd\" title=\"head_timing_cl_clients\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/0/e01321bc4823cb594799d2c67012c599e352cfcd_2_690x345.png\" alt=\"head_timing_cl_clients\" data-base62-sha1=\"vYfWt05LRgGsNnLCYKL6TprKSgR\" width=\"690\" height=\"345\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/0/e01321bc4823cb594799d2c67012c599e352cfcd_2_690x345.png, https://ethresear.ch/uploads/default/optimized/3X/e/0/e01321bc4823cb594799d2c67012c599e352cfcd_2_1035x517.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/0/e01321bc4823cb594799d2c67012c599e352cfcd.png 2x\" data-dominant-color=\"598DB6\"></a></div><p></p>\n<h3><a name=\"we-like-them-for-what-they-are-worst-validators-13\" class=\"anchor\" href=\"https://ethresear.ch#we-like-them-for-what-they-are-worst-validators-13\"></a>We like them for what they are… (worst validators)</h3>\n<p>Other validators are <em>less performant</em> than others. This becomes obvious by looking at the number of missed attestations over time.</p>\n<p>First, let’s consider the validators who are offline. There are various reasons for validators to go offline, and occasionally, random validators might experience brief outages. However, there is a small subset of validators that are very likely to remain permanently offline.</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/5/7/57134b955a3de1691a15cf2678146f66c1e04126.png\" alt=\"lost_keys\" data-base62-sha1=\"cqiSxYxG3onftrZMXz0vsW97KbI\" width=\"456\" height=\"193\"></p>\n<p>We observed 139 validators, representing 0.014% of all validators, who were permanently offline in the 4 weeks analyzed.<br>\nNow, one can argue that being offline for over 4 weeks doesn’t mean the validator is permanently offline. While this is fair, validators who have never cast any vote provide a good upper-bound estimate for the number of permanently offline validators who might have lost their keys.</p>\n<p>Within those offline validators, we identify 12 solo stakers, 37 rocketpool validators, and 90 belonging to the category unidentified (=<em>20% market share, including many many actual solo stakers</em>).</p>\n<p><strong>Most offline validators have low validator IDs:</strong><br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/d/2d0d6b73c9b05e0a3a4bc6ee7b5d020b4c98f24b.png\" data-download-href=\"https://ethresear.ch/uploads/default/2d0d6b73c9b05e0a3a4bc6ee7b5d020b4c98f24b\" title=\"head_votes_over_offline_validator_ids\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/d/2d0d6b73c9b05e0a3a4bc6ee7b5d020b4c98f24b_2_690x316.png\" alt=\"head_votes_over_offline_validator_ids\" data-base62-sha1=\"6qyeKboLMQdxatryF8ql8p0chBh\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/d/2d0d6b73c9b05e0a3a4bc6ee7b5d020b4c98f24b_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/2/d/2d0d6b73c9b05e0a3a4bc6ee7b5d020b4c98f24b_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/2/d/2d0d6b73c9b05e0a3a4bc6ee7b5d020b4c98f24b.png 2x\" data-dominant-color=\"F8FAFB\"></a></div><p></p>\n<p>We can see spikes around 730k and 870k, but the <strong>largest portion comes from OG validators</strong> with low IDs, those activated before the Merge. This is both expected and unexpected:</p>\n<ul>\n<li>OG stakers are generally crypto-native individuals who can securely manage private keys.</li>\n<li>OG stakers are generally solo stakers who are less sophisticated.</li>\n</ul>\n<p>Based on the above, it seems the latter is more likely to hold true.</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/e/7/e70bfc6416b8a68b815f9835f7fe8e5076a340d5.png\" alt=\"ogvalidator\" data-base62-sha1=\"wXVYtfpCjQ6eKk0vo6lBCebasw5\" width=\"457\" height=\"411\"></p>\n<br>\n<p>Moving the focus to the bad validators that miss more than the mean but not all slots in the analyzed time frame, the bar chart looks like the following:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/5/e535223a575fe5764af70e6d31676c70b7c09e3c.png\" data-download-href=\"https://ethresear.ch/uploads/default/e535223a575fe5764af70e6d31676c70b7c09e3c\" title=\"head_votes_over_bad_validator_ids\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e535223a575fe5764af70e6d31676c70b7c09e3c_2_690x316.png\" alt=\"head_votes_over_bad_validator_ids\" data-base62-sha1=\"wHFb6IfmSp2JzLkDOuzrdKxMiyE\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e535223a575fe5764af70e6d31676c70b7c09e3c_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/e/5/e535223a575fe5764af70e6d31676c70b7c09e3c_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/5/e535223a575fe5764af70e6d31676c70b7c09e3c.png 2x\" data-dominant-color=\"D2E1EE\"></a></div><p></p>\n<p><strong>If low-id validators aren’t offline they perform quite well.</strong> Looking at the above graph, the largest share of “bad” validators can be found at the IDs 900k-1m.</p>\n<h2><a name=\"attestations-big-blocks-and-blobs-14\" class=\"anchor\" href=\"https://ethresear.ch#attestations-big-blocks-and-blobs-14\"></a>Attestations, Big Blocks, and Blobs</h2>\n<p><strong>Big blocks and blocks with many blocks are expected to receive fewer attestations.</strong> This is because certain validators might struggle to download and validate the block fast enough and therefore vote for another block.</p>\n<p>With <a href=\"https://www.eip4844.com/\">EIP-4844</a> going live, the <a href=\"https://ethresear.ch/t/on-block-sizes-gas-limits-and-scalability/18444\">block size</a> consists of 3 parts:</p>\n<ul>\n<li>EL Payload (~85 KB)</li>\n<li>Beacon Block (excl. EL payload) / CL Part (~5 KB)</li>\n<li>Blobs (~384 KB)</li>\n</ul>\n<p>Previous analysis showed that the average beacon block size excl. blobs is around 90 KiB. One blob has a size of 128 KiB. As a result, on average, we get blocks (incl. blobs) of size <code>nr_blobs * 128 + 90</code>, with the blob being the main contributor to the size of a block.</p>\n<p><strong>More blobs mean more data that needs to be transmitted across the globe. Thus, we can expect more failed head votes for blocks with 6 blobs than those with one blob.</strong></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/6/76d5ade603b46d1fe148a918bda24f4fe3866fd6.png\" data-download-href=\"https://ethresear.ch/uploads/default/76d5ade603b46d1fe148a918bda24f4fe3866fd6\" title=\"failed_missed_head_size_boxplot\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/6/76d5ade603b46d1fe148a918bda24f4fe3866fd6_2_690x316.png\" alt=\"failed_missed_head_size_boxplot\" data-base62-sha1=\"gXg989yCmfSrzoWrvC9VE45pKPY\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/6/76d5ade603b46d1fe148a918bda24f4fe3866fd6_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/7/6/76d5ade603b46d1fe148a918bda24f4fe3866fd6_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/7/6/76d5ade603b46d1fe148a918bda24f4fe3866fd6.png 2x\" data-dominant-color=\"E7EEF4\"></a></div><p></p>\n<p>This expectation holds when looking at the above boxplot diagram:<br>\n → <strong>The median missed head votes doubles going from 0 to 6 blobs.</strong></p>\n<p><em><strong>Let’s get more granular…</strong></em></p>\n<p>The following visualizes the block size incl. blobs in MiB over the failed head votes per slot.</p>\n<blockquote>\n<p>This chart shows only wrong/failed head votes and excludes offline validators.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/f/4ffabf4ebdf70341da81e69e95094040f0f6591e.png\" data-download-href=\"https://ethresear.ch/uploads/default/4ffabf4ebdf70341da81e69e95094040f0f6591e\" title=\"failed_missed_head_size_scatter\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/f/4ffabf4ebdf70341da81e69e95094040f0f6591e_2_690x316.png\" alt=\"failed_missed_head_size_scatter\" data-base62-sha1=\"bpwWvQjR0uJ5biFg6Bw6K5azKgu\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/f/4ffabf4ebdf70341da81e69e95094040f0f6591e_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/4/f/4ffabf4ebdf70341da81e69e95094040f0f6591e_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/4/f/4ffabf4ebdf70341da81e69e95094040f0f6591e.png 2x\" data-dominant-color=\"F2F5F8\"></a></div><p></p>\n</blockquote>\n<p><strong>For the sizes above 0.8 MiB, which are most likely blocks with 6 blobs, we can see more weak blocks than for 0 blob blocks. “Weak” because up to 32k attesters of that slot, up to 99%, voted for a different block.</strong><br>\nThe only way that block still made it into the canonical chain is the next validator building on top of it instead of reorging that block out.</p>\n<p>In the analyzed month, we observe 401 blocks with &gt;31k attesters voting for different blocks that still made it into the canonical chain. 233 of them carried 6 blobs. Assuming most validators attest at the latest at second 4 of a slot, those blocks must have been propagated very late such that validators already attested to a different block before seeing it.<br>\nThis can be confirmed by plotting the “first seen” time of those weak blocks over the seconds in a slot, comparing it to all other blocks:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/3/b3e8a77964031d2b79681810e8f527c7c95a1699.png\" data-download-href=\"https://ethresear.ch/uploads/default/b3e8a77964031d2b79681810e8f527c7c95a1699\" title=\"hist_late_performer\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/3/b3e8a77964031d2b79681810e8f527c7c95a1699_2_690x304.png\" alt=\"hist_late_performer\" data-base62-sha1=\"pFxVrzcMw5Qma18HeTXf1fUoKCd\" width=\"690\" height=\"304\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/3/b3e8a77964031d2b79681810e8f527c7c95a1699_2_690x304.png, https://ethresear.ch/uploads/default/optimized/3X/b/3/b3e8a77964031d2b79681810e8f527c7c95a1699_2_1035x456.png 1.5x, https://ethresear.ch/uploads/default/original/3X/b/3/b3e8a77964031d2b79681810e8f527c7c95a1699.png 2x\" data-dominant-color=\"F6F4F1\"></a></div><p></p>\n<p>The chart shows that most blocks are seen between second 1 and 2 in the slot. For those weak blocks, it’s between second 4 and 5, right after the attestation deadline.</p>\n<p>We can confirm this by looking at the attestation timing over the seconds in a slot. We can see that 80% of the attestations are seen 5 seconds into the slot. A block propagated at second 4 in the slot will likely miss out on at least ~40% of all possible attestations, no matter how fast it propagates through the network.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/2/42fe46361f7b2a22bd61c0195f719a57df04d64d.png\" data-download-href=\"https://ethresear.ch/uploads/default/42fe46361f7b2a22bd61c0195f719a57df04d64d\" title=\"attestations_cdf\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/2/42fe46361f7b2a22bd61c0195f719a57df04d64d_2_690x304.png\" alt=\"attestations_cdf\" data-base62-sha1=\"9yEiaQZevVpS9KhUsbOgDTuBjqt\" width=\"690\" height=\"304\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/2/42fe46361f7b2a22bd61c0195f719a57df04d64d_2_690x304.png, https://ethresear.ch/uploads/default/optimized/3X/4/2/42fe46361f7b2a22bd61c0195f719a57df04d64d_2_1035x456.png 1.5x, https://ethresear.ch/uploads/default/original/3X/4/2/42fe46361f7b2a22bd61c0195f719a57df04d64d.png 2x\" data-dominant-color=\"FBFBFC\"></a></div><p></p>\n<p><em><strong>Are blobs the problem?</strong></em></p>\n<p>The following chart shows the first seen time of 1-blob blocks vs 6-blob blocks:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/d/9d9090203cef36a8e47a8b59e7a8e3b54be815ae.png\" data-download-href=\"https://ethresear.ch/uploads/default/9d9090203cef36a8e47a8b59e7a8e3b54be815ae\" title=\"hist_late_performer_blobs\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/d/9d9090203cef36a8e47a8b59e7a8e3b54be815ae_2_690x304.png\" alt=\"hist_late_performer_blobs\" data-base62-sha1=\"mtSGDioMKCWWxVLd82jNVbP2OXs\" width=\"690\" height=\"304\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/d/9d9090203cef36a8e47a8b59e7a8e3b54be815ae_2_690x304.png, https://ethresear.ch/uploads/default/optimized/3X/9/d/9d9090203cef36a8e47a8b59e7a8e3b54be815ae_2_1035x456.png 1.5x, https://ethresear.ch/uploads/default/original/3X/9/d/9d9090203cef36a8e47a8b59e7a8e3b54be815ae.png 2x\" data-dominant-color=\"F3ECE4\"></a></div><p></p>\n<p>We can see that despite 6-blobs blocks being seen later in the slot, the delta is rather small, not to say negligible. At the time of the block arriving, the blobs should have already been seen.</p>\n<p>In the past, the fact that a user was (not) using <strong><a href=\"https://github.com/flashbots/mev-boost\">MEV-Boost</a></strong> impacted different performance metrics. Thus, let’s plot MEV-Boost users vs. local builders for completeness:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/9/c9c92b7f095017be8e86eac8b4a486a6c1dfdaec.png\" data-download-href=\"https://ethresear.ch/uploads/default/c9c92b7f095017be8e86eac8b4a486a6c1dfdaec\" title=\"hist_late_performer_mevboost\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/9/c9c92b7f095017be8e86eac8b4a486a6c1dfdaec_2_690x304.png\" alt=\"hist_late_performer_mevboost\" data-base62-sha1=\"sN4Yw7CV3o3QDoTxadbM6Lk560s\" width=\"690\" height=\"304\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/9/c9c92b7f095017be8e86eac8b4a486a6c1dfdaec_2_690x304.png, https://ethresear.ch/uploads/default/optimized/3X/c/9/c9c92b7f095017be8e86eac8b4a486a6c1dfdaec_2_1035x456.png 1.5x, https://ethresear.ch/uploads/default/original/3X/c/9/c9c92b7f095017be8e86eac8b4a486a6c1dfdaec.png 2x\" data-dominant-color=\"F1EBE5\"></a></div><p></p>\n<p>Finally, comparing three of the largest relays, we get the following image:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/6/56eedd8200ca5e5c778261aee74f9405630c1677.png\" data-download-href=\"https://ethresear.ch/uploads/default/56eedd8200ca5e5c778261aee74f9405630c1677\" title=\"hist_mevboost_relays\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/6/56eedd8200ca5e5c778261aee74f9405630c1677_2_690x304.png\" alt=\"hist_mevboost_relays\" data-base62-sha1=\"cp2PooSbAtHeDhNXsMuY4W88mFN\" width=\"690\" height=\"304\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/6/56eedd8200ca5e5c778261aee74f9405630c1677_2_690x304.png, https://ethresear.ch/uploads/default/optimized/3X/5/6/56eedd8200ca5e5c778261aee74f9405630c1677_2_1035x456.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/6/56eedd8200ca5e5c778261aee74f9405630c1677.png 2x\" data-dominant-color=\"E7EBDD\"></a></div><p></p>\n<p>While most relays such as Ultra Sound, BloXroute, Agnostic Gnosis, or Flashbots show a very similar curve, we can see the Titan relay having two peaks instead of just one.<br>\nThis means that some blocks going through the Titan relay are first seen in the p2p network between 2.5-3 seconds into the slot, which is very late.</p>\n<p>Notable, those late blocks of Titan still became canonical, pointing towards proposer timing games.</p>\n<h2><a name=\"attestations-and-proposer-timing-games-15\" class=\"anchor\" href=\"https://ethresear.ch#attestations-and-proposer-timing-games-15\"></a>Attestations and Proposer Timing Games</h2>\n<p>Next, let’s look at the impact of Proposer Timing Games on attestations.<br>\nWe refer to Proposer Timing Games (see <a href=\"https://eprint.iacr.org/2023/760\">[1]</a>, <a href=\"https://arxiv.org/abs/2305.09032\">[2]</a>) if block proposers delay their block proposal to give the builders more time for MEV extraction.<br>\nInstead of asking the relay for a block in second 0 in the block, a proposer can delay this, e.g. until second 2 in the slot, and maximize profits. This comes with the risk of not getting enough attestations and being reorged out.</p>\n<p><em>Find some real-time visuals on timing games at <a href=\"https://timing.pics/\">timing.pics</a>.</em></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/5/c563eb0043362562f84cb3fb2f823a14c92dce14.png\" data-download-href=\"https://ethresear.ch/uploads/default/c563eb0043362562f84cb3fb2f823a14c92dce14\" title=\"timing_games2\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/5/c563eb0043362562f84cb3fb2f823a14c92dce14_2_373x499.png\" alt=\"timing_games2\" data-base62-sha1=\"sac8mJQ0q7I3jDFUD31ZNnKKkyU\" width=\"373\" height=\"499\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/5/c563eb0043362562f84cb3fb2f823a14c92dce14_2_373x499.png, https://ethresear.ch/uploads/default/original/3X/c/5/c563eb0043362562f84cb3fb2f823a14c92dce14.png 1.5x, https://ethresear.ch/uploads/default/original/3X/c/5/c563eb0043362562f84cb3fb2f823a14c92dce14.png 2x\" data-dominant-color=\"A3A7A1\"></a></div><p></p>\n<p><strong>Proposer timing games are expected to negatively impact validators’ attestation performance</strong>, although this hasn’t been thoroughly analyzed yet. The concern is that <strong>proposer timing games could have cascading effects</strong>: attesters might slightly <strong>delay their attestations</strong> to ensure they vote for the correct head of the chain. Knowing proposers are playing timing games, it might be rational to delay the attestation too. <strong>Such strategies can be harmful to the network’s overall health.</strong></p>\n<blockquote>\n<p>For more info on the impact of proposer timing games on attestations, check out <a href=\"https://ethresear.ch/t/timing-games-implications-and-possible-mitigations/17612\">Caspar’s post</a> on it.</p>\n</blockquote>\n<p>The following graph shows the average number of missed head votes over the seconds in a slot. The <a href=\"https://github.com/flashbots/relay-specs\">relays’ Data API</a> (<em>bidsReceived</em> endpoint) was used for the in-slot timestamps.</p>\n<blockquote>\n<p>Multiple prior analyses showed that using the bidsReceived timestamps provides a <em>good enough</em> approximation of actual propagation timings. Notably, bidReceived <strong>must come earlier</strong> than the block’s propagation timing.</p>\n</blockquote>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/6/763882ecc1e817832856f802783d3aa9643ce8ca.png\" data-download-href=\"https://ethresear.ch/uploads/default/763882ecc1e817832856f802783d3aa9643ce8ca\" title=\"failed_missed_head_votes_over_timing\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/6/763882ecc1e817832856f802783d3aa9643ce8ca_2_690x316.png\" alt=\"failed_missed_head_votes_over_timing\" data-base62-sha1=\"gRPpPJd8yMtt6VclbnppOyrwMQ2\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/6/763882ecc1e817832856f802783d3aa9643ce8ca_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/7/6/763882ecc1e817832856f802783d3aa9643ce8ca_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/7/6/763882ecc1e817832856f802783d3aa9643ce8ca.png 2x\" data-dominant-color=\"F8EADB\"></a></div><p></p>\n<p>The above chart shows that the number of missed head votes increases rapidly with being 1 - 1.2 seconds into the slot. The longer a proposer waits the fewer attestations its block is expected to receive.</p>\n<p><strong>We can see that the number of missed head votes per slot increases to an average of &gt;4k (12.5% of the committee) for late blocks published more than 1.7 seconds into the slot.</strong><br>\nThis sounds bad although the numbers are still relatively low compared to the 32k validators that attest in each slot.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/4/540d12e9110a2a48ced72b152688d78d5ab1cc8a.png\" data-download-href=\"https://ethresear.ch/uploads/default/540d12e9110a2a48ced72b152688d78d5ab1cc8a\" title=\"failed_missed_head_votes_over_timing_per\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/4/540d12e9110a2a48ced72b152688d78d5ab1cc8a_2_690x316.png\" alt=\"failed_missed_head_votes_over_timing_per\" data-base62-sha1=\"bZy7kb2AFCP43HJBrsU4Hy1HRz4\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/4/540d12e9110a2a48ced72b152688d78d5ab1cc8a_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/5/4/540d12e9110a2a48ced72b152688d78d5ab1cc8a_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/4/540d12e9110a2a48ced72b152688d78d5ab1cc8a.png 2x\" data-dominant-color=\"FAF7F5\"></a></div><p></p>\n<p>Proposing a block with a <em>bid received</em> timestamp of over 2 seconds causes an average of 5k attestations to be missed. This represents about 15% of the committee.</p>\n            <p><small>5 posts - 4 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/deep-diving-attestations-a-quantitative-analysis/20020\">Read full topic</a></p>","link":"https://ethresear.ch/t/deep-diving-attestations-a-quantitative-analysis/20020","pubDate":"Tue, 09 Jul 2024 08:02:31 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20020"},"source":{"@url":"https://ethresear.ch/t/deep-diving-attestations-a-quantitative-analysis/20020.rss","#text":"Deep Diving Attestations - A quantitative analysis"},"filter":false},{"title":"Mantis: Driving Ethereum’s Cross-Domain Future","dc:creator":"0xBrainjar2","category":"Applications","description":"<p>Author: <a href=\"https://x.com/0xbrainjar\" rel=\"noopener nofollow ugc\">0xbrainjar</a></p>\n<p>Reviewers: <a href=\"https://x.com/ComposableSyd\" rel=\"noopener nofollow ugc\">Sydney Sweck</a> &amp; <a href=\"https://x.com/0xBrMazoRoig\" rel=\"noopener nofollow ugc\">Bruno Mazorra</a></p>\n<h1><a name=\"summary-1\" class=\"anchor\" href=\"https://ethresear.ch#summary-1\"></a>Summary</h1>\n<p>Recently, Composable <a href=\"https://twitter.com/Picasso_Network/status/1775512007963500772\" rel=\"noopener nofollow ugc\">launched its IBC Ethereum mainnet connection</a>. The <a href=\"https://www.ibcprotocol.dev/\" rel=\"noopener nofollow ugc\">IBC Protocol</a> is emerging as the gold standard for cross-chain communication, as we have previously explored in our comparison analysis <a href=\"https://medium.com/@Picasso_Network/ibc-as-the-end-game-of-bridging-a-comparison-analysis-on-trust-dcc01e0d9377\" rel=\"noopener nofollow ugc\">here</a>. IBC’s trust levels parallel that of ZK bridging, which is limited to the Ethereum ecosystem and its layer 2s. Originally, the IBC Protocol was also limited to one ecosystem: the Interchain, which includes Cosmos SDK chains and the Cosmos Hub. However, IBC has now been expanded outside of the Interchain/Cosmos ecosystem for the first time by Composable’s Picasso Network.</p>\n<p>IBC Ethereum a significant milestone, marking the first time that trust-minimized bridging is available between Ethereum and other IBC-enabled chains including the Cosmos hub, Cosmos SDK chains, Polkadot and Kusama parachains, Solana, and more ecosystems soon. Moreover, this was a huge technological feat, given that this connection required architecting a light client on Ethereum. While various projects were exploring the concept of Ethereum light clients at the time, there were no light clients fully available on Ethereum when we began development.</p>\n<p>Now, Composable is in the process of launching a product that aims to bring more utility to cross-domain Ethereum operations: Multi-chain Agnostic Trust-minimized Intent Settlement, or Mantis. This framework serves as a vertically integrated intent pipeline, complete with expression, execution, and settlement. Ultimately, Mantis strives to establish a decentralized market for cross-domain intent expression through a permissionless solver network and intent-settlement framework. Through Ethereum IBC and now Mantis, Ethereum will be optimally positioned to continue in its role as the leading hub of DeFi; new cross-chain use cases to and from Ethereum will be generated, enabling the flow of new liquidity and users to Ethereum, with all of the complexities abstracted away to improve the user experience.</p>\n<p>The present article thus summarizes Mantis from our recently-published Mantis Whitepaper and Litepaper. Moreover, this post details how Mantis can benefit Ethereum and other IBC-enabled ecosystems.</p>\n<h1><a name=\"about-mantis-2\" class=\"anchor\" href=\"https://ethresear.ch#about-mantis-2\"></a>About Mantis</h1>\n<h2><a name=\"the-industry-need-3\" class=\"anchor\" href=\"https://ethresear.ch#the-industry-need-3\"></a>The Industry Need</h2>\n<p>Mantis is a relevant protocol within the present DeFi space for a number of reasons, as it aims to fulfill a number of challenges currently facing the space:</p>\n<ul>\n<li><strong>Optimizing UX and Execution:</strong> There has always been a need in the space to optimize both user experience (UX) and execution. If this is accomplished, capital efficiency and value accrual can be maximized for all participants.</li>\n<li><strong>Combatting Centralization Trends:</strong> In the multi-chain bridging space, there has been an increased reliance upon centralized structures. Unfortunately, there has been a lack of decentralized solutions that rival the speed and cost of centralized structures.</li>\n<li><strong>Facilitating Trust-Minimized Interoperability:</strong> Many bridging structures in place today require putting trust in third-party intermediaries, making them vulnerable to attack. However, new technologies are being introduced with the launch of trust-minimized bridging structures like the <a href=\"https://www.ibcprotocol.dev/\" rel=\"noopener nofollow ugc\">IBC Protocol</a>, which powers the <a href=\"http://picasso.xyz\" rel=\"noopener nofollow ugc\">Picasso Network</a>. These developments enable generalized message passing and synchronization of protocols and applications across multiple blockchain ecosystems.</li>\n<li><strong>Delivering Intent-Centricity:</strong> Intents are another new area of development in the DeFi space that are positioned to further assist in resolving user experience and execution issues. However, many intents solutions are not cross-chain interoperable, and are not vertically integrated with execution and settlement solutions, rendering them unable to accrue value from pay for orderflow.</li>\n</ul>\n<p>With Mantis, Composable addresses these present unmet needs in the DeFi space. Overall, our thesis is that cross-domain interoperability widens the intent solution space. We hypothesize that this increased choice in solutions results in value in the form of better user outcomes.</p>\n<h2><a name=\"architecture-4\" class=\"anchor\" href=\"https://ethresear.ch#architecture-4\"></a>Architecture</h2>\n<p>Mantis accomplishes its functionalities via the Mantis protocol and rollup, a cross-domain auction mechanism, as well as their synergies with the Inter-Blockchain Communication (IBC) Protocol and the Picasso Network. Moreover, a commitment mechanism between chains allows conditions in the other parts of the architecture to be carried out cross-domain.</p>\n<h3><a name=\"the-mantis-protocol-rollup-5\" class=\"anchor\" href=\"https://ethresear.ch#the-mantis-protocol-rollup-5\"></a>The Mantis Protocol &amp; Rollup</h3>\n<p>The Mantis protocol facilitates optimal execution of cross-domain intents via a competition of solvers. Users sign intents, which are contained on a private rollup mempool. Solvers are staked agents that can a) observe the transactions on the mempool and b) post solutions in the auctioneer contract. The auctioneer contract scores the solutions in terms of users utility maximization. The winner of the auction is responsible for settling the outcome of the intent to the solution settlement contracts in the final chain expressed by the intent.</p>\n<p>The Mantis protocol lives on the Mantis Solana Virtual Machine (SVM) rollup. This rollup serves as a coordination and settlement layer for cross-domain intents, in addition providing a framework for cross-domain block proposals and credible commitments. The rollup further allows for assets to be staked and restaked to provide crypto-economic security along the proof-of-stake model. This includes staking both the native token of Solana (SOL) as well as liquid staked token versions of SOL. These assets are staked into the bridge contract of the rollup, which then sends them to the proper place for staking or restaking.</p>\n<p>The Mantis rollup also provides developers with a simplified mechanism for designing cross-domain decentralized applications (cdApps), which are defined by their inclusion of scoring, solvers, solution settlement, and cross-domain integrity proofs. An SDK is provided to further enhance the development and integration process.</p>\n<h3><a name=\"cross-domain-auctions-6\" class=\"anchor\" href=\"https://ethresear.ch#cross-domain-auctions-6\"></a>Cross-Domain Auctions</h3>\n<p>Mantis plans to introduce cross-domain combinatorial auctions, with the goal of accomplishing the following:</p>\n<ul>\n<li>Optimized cross-domain MEV extraction*</li>\n<li>Cross-domain intent solution atomic settlement</li>\n<li>Efficient blockspace allocation</li>\n<li>Increased distribution of revenue to validators selling items separately</li>\n</ul>\n<p>*We would like to take a moment here to reflect on MEV and our goals surrounding this concept. MEV is an evolving term with a number of interpretations. Initially MEV stood for miner extractable value, representing the maximum profit an agent (miner or validator) in proof-of-work blockchain systems could incur from its monopolistic rights over transaction inclusion. With the advent of proof-of-stake systems, MEV has become more often described as maximal extractible value, as miners are largely obsolete. Maximal extractible value still refers to the value that agents derive from strategically reordering and including transactions, but now these agents are frequently searchers.</p>\n<p>A number of negative ramifications have been reported from these MEV extraction mechanisms. Thus, Flashbots introduced MEV-geth to Ethereum, which implemented a centralized combinatorial auction where searchers can express complex preferences in bundles. Then, this auction system was decentralized by MEV-Boost, allowing anyone to propose their block by bidding at auction. With the introduction of proposer-builder separation, validators on Ethereum now derive value from their monopolistic power over their slots.</p>\n<p>As one can see, value from rearranging and including/excluding transactions can now be carried out by a number of parties in a number of manners. In addition to the extraction by validators, miners, and searchers, builders can also derive profits and users themselves can derive financial benefits from these mechanisms by using protocols such as Flashbots Protect, MEV blocker and Cow Protocol . Therefore, it becomes difficult to define exactly what value accrual mechanisms can be considered MEV.</p>\n<p>Another complicating factor in the definition of MEV is that some of the aforementioned value accrual mechanisms have an inverse relationship. Most importantly, there is tension between the profits made by validators and other sellers from MEV and the overall welfare of the system (i.e. total value accrued to all users of the system, including end users, solvers, searchers, stakers, etc.). When overall profits to sellers are maximized, overall welfare goes down.</p>\n<p>Thus, the goal of Mantis is not necessarily to maximize MEV extraction. Rather, the goal is to maximize overall welfare.One way in which we hope to achieve this is via our mechanisms designed to allocate blockspace efficiently to the users valuing it the most, such as our cross-domain auctions.</p>\n<p>Initially, these auctions will be just-in-time to allow builders to express atomically. For two domains, this will involve two simultaneous English auctions with a unique combinatorial block take-it-or-leave it offer. Buyers can place send blocks with bids for the independent blocks and combinatorial blocks. The problems with this approach are the risk of double-signing and the high level of trust placed in the relay.</p>\n<p>Therefore, Mantis aims to later introduce a future combinatorial blockspace market, where the rights to future blockspace on multiple domains can be bought and sold. The new crypto-economic primitive of restaking (such as that being facilitated by the Picasso Network) enables block proposers to issue credible commitments about future block construction. These are promises to build blocks in accordance with specific conditions laid out by execution ticket holders if certain payment thresholds are met. Tickets exist outside of a domain’s consensus protocol and will be exchanged via a combinatorial batch auction where buyers express combinatorial valuations over the tickets and sellers express reserve prices. Then, tickets can be traded or sold in a secondary market. This aims to decrease the monopoly of block sellers while increasing market efficiency.</p>\n<h3><a name=\"the-ibc-protocol-7\" class=\"anchor\" href=\"https://ethresear.ch#the-ibc-protocol-7\"></a>The IBC Protocol</h3>\n<p>The <a href=\"https://www.ibcprotocol.dev/\" rel=\"noopener nofollow ugc\">IBC Protocol</a> facilitates communication between different blockchain ecosystems. <a href=\"https://medium.com/picasso-network/why-ibc-everywhere-is-the-key-to-cross-chain-defi-041bed829acd\" rel=\"noopener nofollow ugc\">Compared to other cross-chain communication protocols</a>, the benefits of IBC are that it is <a href=\"https://medium.com/@Picasso_Network/ibc-as-the-end-game-of-bridging-a-comparison-analysis-on-trust-dcc01e0d9377\" rel=\"noopener nofollow ugc\">trustless</a>, secure, censorship-resistant, permissionless, fast, cost-effective, and natively interoperable. For these reasons, Mantis has opted to use IBC as its mechanism for cross-chain communication.</p>\n<p>Composable has expanded the reach of the IBC so that it not only connects the <a href=\"https://hub.cosmos.network/\" rel=\"noopener nofollow ugc\">Cosmos Hub</a> and <a href=\"https://v1.cosmos.network/sdk\" rel=\"noopener nofollow ugc\">Cosmos SDK</a> chains that it originally linked, but also interoperates with <a href=\"https://polkadot.network/\" rel=\"noopener nofollow ugc\">Polkadot</a> and <a href=\"https://kusama.network/\" rel=\"noopener nofollow ugc\">Kusama</a> parachains, <a href=\"https://ethereum.org/en/\" rel=\"noopener nofollow ugc\">Ethereum</a>, and <a href=\"https://solana.com/\" rel=\"noopener nofollow ugc\">Solana</a>. Creating these novel connections required a significant amount of technical development, given that many blockchains lack different components needed for IBC-compatibility.</p>\n<p>In the case of Ethereum, the following components needed to be architected in order to enable IBC-compatibility:</p>\n<ul>\n<li><strong>ZK Circuit:</strong> This program is able to output a proof given a set of inputs. This proof can then be easily verified to ensure that each computational step that was run inside the circuit was done so correctly. In Picasso’s solution, the ZK circuit connects SNARK ED-25519 signatures to a prover. ED-25519 is a digital signature algorithm (DSA) that offers small key and signature sizes and fast computation being impervious to many common attacks to other DSAs.</li>\n<li><strong>Tendermint Light Client on Ethereum:</strong> We constructed a <a href=\"https://docs.tendermint.com/v0.34/tendermint-core/light-client.html\" rel=\"noopener nofollow ugc\">Tendermint light client</a> on Ethereum, which lives as an Ethereum smart contract and is able to communicate over IBC with the light client on Picasso.</li>\n<li><strong>Ethereum Light Client on the Picasso Chain:</strong> We also created a CosmWasm contract in the Wasm client of the Picasso Cosmos SDK chain to complete the Ethereum IBC connection.</li>\n<li><strong>IBC Stack on Ethereum:</strong> We created a modified IBC stack for Ethereum that consists of Solidity smart contracts on Ethereum. Through this IBC stack, all BC components can operate on Ethereum, facilitating Ethereum’s interoperability with IBC.</li>\n<li><strong>Hyperspace Relayer:</strong> The Composable Foundation’s <a href=\"https://informal.systems/blog/comparing-hyperspace-hermes\" rel=\"noopener nofollow ugc\">Hyperspace relayer</a> connects the two light clients involved in Ethereum IBC by transferring IBC packets between them. Hyperspace is the first event-driven, chain-agnostic IBC relayer that is based on ibc-rs (the Rust implementation of IBC). Hyperspace can thus relay packets between any IBC-enabled chains.</li>\n<li><strong>Prover:</strong> This entity interacts with the relayer and proves to the verifier that something is true without revealing other information. On Picasso, what is being proved is various transactions sent between Ethereum and IBC. In particular, this prover is a rapid SNARK prover living on the Picasso Cosmos SDK chain.</li>\n<li><strong>Verifier:</strong> Verifiers receive a proof from provers and validate this claim. This prover-verifier relationship results in the production of zero-knowledge proofs, as Ethereum explains <a href=\"https://ethereum.org/en/zero-knowledge-proofs/\" rel=\"noopener nofollow ugc\">here</a>.</li>\n</ul>\n<h3><a name=\"the-picasso-network-its-restaking-pool-8\" class=\"anchor\" href=\"https://ethresear.ch#the-picasso-network-its-restaking-pool-8\"></a>The Picasso Network &amp; Its Restaking Pool</h3>\n<p>The <a href=\"https://picasso.xyz/\" rel=\"noopener nofollow ugc\">Picasso Network</a> aims to deliver ecosystem-agnosticism to DeFi. It executes on this vision via the Picasso Layer 1, a Cosmos SDK blockchain that acts as an IBC hub between Cosmos and non-Cosmos IBC-enabled chains.</p>\n<p>Picasso is the first censorship-resistant, natively-secured cross-ecosystem interoperability solution. The Picasso Network further emphasizes trust-minimization by drawing on the trustless IBC protocol. While a multisig is initially being used for upgradability of IBC contracts on Picasso, the end goal is to transition to decentralized governance.</p>\n<p>Picasso is a critical component of Mantis as it allows the Mantis framework to be cross-chain capable over IBC. Specifically, Mantis transactions are grouped into IBC bundles for shipment based on domain. These bundles are then sent from the Mantis rollup over Picasso IBC and out to relevant blockchains for settlement.</p>\n<p>Moreover, a restaking pool on Picasso coordinates the agents that have a combination of stake in different chains. Commitments formed between these actors draw upon this restaking pool.</p>\n<h2><a name=\"development-roadmap-9\" class=\"anchor\" href=\"https://ethresear.ch#development-roadmap-9\"></a>Development Roadmap</h2>\n<p>The development for Mantis will be carried out in the following steps:</p>\n<ol>\n<li>\n<p><strong>Enabling cross-domain swaps:</strong> integrating with IBC bridges and automated market makers across different chains to facilitate seamless asset swaps</p>\n</li>\n<li>\n<p><strong>Setting up the foundational architecture:</strong> establishing a robust framework that includes the initial design of the Mantis architecture and the development of standards for scoring mechanisms and IBC for intent-based mechanisms</p>\n</li>\n<li>\n<p><strong>Implementing cross-domain intent-based mechanisms:</strong> developing application programming interfaces (APIs) and software development kits (SDKs) that enable users to create and manage cross-domain intents, along with implementing an open-source solver that solves these intents</p>\n</li>\n<li>\n<p><strong>Enriching the restaking layer:</strong> building out the restaking layer of Mantis to have additional functionality (simultaneously to step 3)</p>\n</li>\n<li>\n<p><strong>Creating cross-domain MEV auctions:</strong> developing an auction system that efficiently allocates blockspace (simultaneously to step 3)</p>\n</li>\n<li>\n<p><strong>Deploying block proposal commitments:</strong> enhancing the infrastructure for block proposals and establishing a credible commitment mechanism across domains, including robust fraud-proof mechanisms to maintain trust and security.</p>\n</li>\n<li>\n<p><strong>Completing public launch and scaling:</strong> focusing on officially releasing all functionalities and documentation for Mantis</p>\n</li>\n</ol>\n<h1><a name=\"benefits-to-ethereum-10\" class=\"anchor\" href=\"https://ethresear.ch#benefits-to-ethereum-10\"></a>Benefits to Ethereum</h1>\n<p>Mantis supports Ethereum’s continued role as a leader in DeFi as the space becomes increasingly cross-chain. Composable has already connected Ethereum to the IBC, and therefore, to our trust-minimized bridge. This connection will drive new usership and liquidity to Ethereum from Solana, Cosmos, Polkadot, and Kusama. It will also enable the development of new use cases for ETH outside of Ethereum and on these other networks. Through such new use cases in new locations, DeFi users who do not currently hold ETH will likely be incentivized to do so, and existing users may be incentivized to hold more ETH. Thus, the Ethereum network is positioned to expand its reach even further into the cross-domain DeFi landscape, helping the ecosystem to maintain its reputation as a leader in the space.</p>\n<p>Another benefit Mantis aims to deliver is chain abstraction. Mantis provides a mechanism for Ethereum and other domains to easily be participants in cross-chain DeFi without the blockchain, its layer 2s, or any protocols in the ecosystem needing to make significant modifications. Now that Ethereum is integrated with IBC, its innumerable DeFi protocols and applications can be leveraged from within Mantis. A user simply puts their intent for a transaction into the Mantis user interface, and the rest is handled for them. For example, A user may be looking to swap ETH for USDC. Once they input this intent, Solvers on Mantis compete to come up with the best execution route. For the sake of this example, perhaps the best price for this swap is through an ETH-USDC pool on Uniswap. The solver who has proposed the best settlement route wins the rights to settle the solution, routing the funds through Uniswap for the swap, and then back to the user. Once the transaction is settled as specified, the solver is rewarded. In this manner, all parties benefit: new traffic is routed through Uniswap in this example (or more generally, any other protocol or protocols providing best execution), the user has a streamlined experience with optimized settlement, and the solver is rewarded for their role.</p>\n<h1><a name=\"conclusion-11\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-11\"></a>Conclusion</h1>\n<p>Mantis provides the architecture needed for IBC-enabled chains like Ethereum to easily participate in the cross-domain future. This will help Ethereum continue its role at the forefront of DeFi as the industry continues to embrace multi-domain operations.</p>\n<h1><a name=\"references-more-about-composable-12\" class=\"anchor\" href=\"https://ethresear.ch#references-more-about-composable-12\"></a>References &amp; More About Composable</h1>\n<p>Composable is dedicated to improving DeFi’s accessibility, quality, transparency, efficiency, and security. Our ultimate vision is for the Composable ecosystem to become an execution hub for chain-agnostic transactions. We are actualizing our mission by working to unite the DeFi space, building an ecosystem and a range of infrastructure to support trustless cross-chain operations.</p>\n<ul>\n<li><a href=\"https://assets.website-files.com/65b28e756a8eda2e91e76ca4/6656289f21123d6215091555_MANTIS%20Whitepaper.pdf\" rel=\"noopener nofollow ugc\">Mantis Whitepaper</a></li>\n<li><a href=\"https://assets.website-files.com/65b28e756a8eda2e91e76ca4/6655e8e69277b97e9c11c793_MANTIS%20Litepaper.pdf\" rel=\"noopener nofollow ugc\">Mantis Litepaper</a></li>\n<li><a href=\"https://www.mantis.app/\" rel=\"noopener nofollow ugc\">Mantis app</a></li>\n<li><a href=\"https://www.composable.finance/\" rel=\"noopener nofollow ugc\">Composable website</a></li>\n<li><a href=\"https://twitter.com/ComposableFin\" rel=\"noopener nofollow ugc\">Composable X/twitter</a></li>\n<li><a href=\"http://discord.gg/composable\" rel=\"noopener nofollow ugc\">Composable Discord</a></li>\n<li><a href=\"https://t.me/composable_chat\" rel=\"noopener nofollow ugc\">Composable Telegram</a></li>\n<li><a href=\"https://github.com/ComposableFi/\" rel=\"noopener nofollow ugc\">Composable GitHub</a></li>\n</ul>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/mantis-driving-ethereum-s-cross-domain-future/20009\">Read full topic</a></p>","link":"https://ethresear.ch/t/mantis-driving-ethereum-s-cross-domain-future/20009","pubDate":"Mon, 08 Jul 2024 13:16:05 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20009"},"source":{"@url":"https://ethresear.ch/t/mantis-driving-ethereum-s-cross-domain-future/20009.rss","#text":"Mantis: Driving Ethereum’s Cross-Domain Future"},"filter":false},{"title":"Maximum Viable Security: A New Framing for Ethereum Issuance","dc:creator":"xadcv","category":"Economics","description":"<h1><a name=\"maximum-viable-security-a-new-framing-for-ethereum-issuance-1\" class=\"anchor\" href=\"https://ethresear.ch#maximum-viable-security-a-new-framing-for-ethereum-issuance-1\"></a><strong>Maximum Viable Security: A New Framing for Ethereum Issuance</strong></h1>\n<p><em>by <a href=\"http://x.com/artofkot\" rel=\"noopener nofollow ugc\">@artofkot</a>, <a href=\"http://x.com/damcnuta\" rel=\"noopener nofollow ugc\">@damcnuta</a>, <a href=\"http://x.com/sonyasunkim\" rel=\"noopener nofollow ugc\">@sonyasunkim</a>, <a href=\"http://x.com/adcv_\" rel=\"noopener nofollow ugc\">@adcv_</a></em></p>\n<p><em>Appreciate feedback from <a href=\"http://x.com/ppclunghe\" rel=\"noopener nofollow ugc\">@ppclunghe</a>, <a href=\"https://x.com/ks_kulk\" rel=\"noopener nofollow ugc\">@ks_kulk</a>, <a href=\"http://x.com/lazyleger\" rel=\"noopener nofollow ugc\">@lazyleger</a>, <a href=\"https://cryptecon.org/team-detail-ce/items/juan-beccuti.html\" rel=\"noopener nofollow ugc\">Juan Beccuti</a>, <a href=\"https://x.com/entigdd\" rel=\"noopener nofollow ugc\">@entigdd</a>, <a href=\"https://x.com/stakesaurus\" rel=\"noopener nofollow ugc\">@stakesaurus</a>, <a href=\"http://x.com/hasufl\" rel=\"noopener nofollow ugc\">@hasufl</a>, <a href=\"http://x.com/lex_node\" rel=\"noopener nofollow ugc\">@lex_node</a>, <a href=\"https://x.com/_vshapovalov\" rel=\"noopener nofollow ugc\">@_vshapolapov</a>, <a href=\"http://x.com/brettpalatiello\" rel=\"noopener nofollow ugc\">@brettpalatiello</a></em></p>\n<hr>\n<p><strong>Table of Contents</strong></p>\n<ul>\n<li><strong><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#tldr-embrace-security-2\">TLDR: Embrace security</a></strong></li>\n<li><strong><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-1-the-foundations-of-the-maximum-viable-security-mvs-framework-3\">1. The foundations of the Maximum Viable Security (“MVS”) framework</a></strong>\n<ul>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-11-ethereum-has-a-clear-goal-build-a-secure-and-sovereign-distributed-system-for-everyone-4\">1.1. Ethereum has a clear goal: build a secure and sovereign distributed system for everyone</a></li>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-12-a-diverse-staking-economy-is-key-5\">1.2. A diverse staking economy is key</a>\n<ul>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-121-stakers-6\">1.2.1. Stakers</a></li>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-122-validating-entities-7\">1.2.2. Validating entities</a></li>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-123-entities-decentralization-8\">1.2.3. Entities’ decentralization</a></li>\n</ul>\n</li>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-13-there-is-no-future-proof-safe-level-of-security-9\">1.3. There is no future-proof safe level of Security</a></li>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-14-reframing-the-discourse-expansion-over-efficiency-10\">1.4. Reframing the discourse: expansion over efficiency</a></li>\n</ul>\n</li>\n<li><strong><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-2-analysis-of-ethereum-issuance-reduction-proposal-within-the-mvs-framework-11\">2. Analysis of Ethereum Issuance reduction proposal within the MVS framework</a></strong>\n<ul>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-21-the-assumption-that-ethereum-overpays-for-security-is-wrong-less-issuance-may-lead-to-centralization-of-the-validator-set-12\">2.1. The assumption that Ethereum overpays for security is wrong: less issuance may lead to centralization of the validator set</a>\n<ul>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-211-etf-inflows-would-exacerbate-centralization-in-the-context-of-a-33-stake-cap-13\">2.1.1 ETF inflows would exacerbate centralization in the context of a 33% stake cap</a></li>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-212-staked-eth-concentration-with-cexs-doesnt-necessarily-have-to-happen-with-a-higher-stake-cap-14\">2.1.2 Staked ETH concentration with CEXs doesn’t necessarily have to happen with a higher stake cap</a></li>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-213-mvi-effect-on-the-ratio-of-solo-stakers-15\">2.1.3 MVI effect on the ratio of solo stakers</a></li>\n</ul>\n</li>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-22-lst-dominance-and-cost-modeling-are-inadequate-arguments-for-issuance-reduction-19\">2.2. LST dominance and cost-modeling are inadequate arguments for issuance reduction</a>\n<ul>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-221-issuance-as-a-cost-is-a-reductive-framing-20\">2.2.1. Issuance as a cost is a reductive framing</a></li>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-222-stakers-getting-higher-real-vs-nominal-yield-is-not-significant-21\">2.2.2. Stakers getting higher real vs nominal yield is not significant</a></li>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-223-reducing-lst-dominance-shouldnt-be-a-primary-objective-of-ethereums-monetary-policy-22\">2.2.3. Reducing LST dominance shouldn’t be a primary objective of Ethereum’s monetary policy</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-3-putting-it-all-together-23\">3. Putting it all together</a></strong></li>\n</ul>\n<hr>\n<h2><a name=\"tldr-embrace-security-2\" class=\"anchor\" href=\"https://ethresear.ch#tldr-embrace-security-2\"></a>TLDR: Embrace security</h2>\n<p>Given Ethereum’s goal of building a secure and sovereign distributed system, we believe viewing Ethereum’s monetary policy through the lens of Minimum Viable Issuance (MVI) is not appropriate. Instead, we propose Maximum Viable Security (MVS) as a new framework for the community to consider in the Ethereum issuance debate. That is,</p>\n<p>From: <strong>Minimum Viable Issuance (MVI)</strong> – minimize issuance, without compromising security.<br>\n→<br>\nTo: <strong>Maximum Viable Security (MVS)</strong> – maximize security, without compromising scarcity.</p>\n<p>After covering the motivation and foundations behind MVS, we evaluate Ethereum issuance reduction proposals through the MVS lens. We show that issuance reduction can compromise security and neutrality in a direct way, through staked ETH concentration with Centralized Exchanges – and this effect, on balance, far outweighs the advantages of cutting the issuance.</p>\n<h2><a name=\"h-1-the-foundations-of-the-maximum-viable-security-mvs-framework-3\" class=\"anchor\" href=\"https://ethresear.ch#h-1-the-foundations-of-the-maximum-viable-security-mvs-framework-3\"></a>1. The foundations of the Maximum Viable Security (“MVS”) framework</h2>\n<h3><a name=\"h-11-ethereum-has-a-clear-goal-build-a-secure-and-sovereign-distributed-system-for-everyone-4\" class=\"anchor\" href=\"https://ethresear.ch#h-11-ethereum-has-a-clear-goal-build-a-secure-and-sovereign-distributed-system-for-everyone-4\"></a>1.1. Ethereum has a clear goal: build a secure and sovereign distributed system for everyone</h3>\n<blockquote>\n<p><code>There are many goals of this project; one key goal is to facilitate transactions between consenting individuals who would otherwise have no means to trust one another.</code><br>\n<em>Source: Ethereum Yellow Paper (<a href=\"https://ethereum.github.io/yellowpaper/paper.pdf\" rel=\"noopener nofollow ugc\">link</a>)</em></p>\n</blockquote>\n<p>The growth of Ethereum’s market capitalization from 0 to $400bn today underscores the market’s confidence in its current and future potential. This value hinges on Ethereum’s ability to validate state changes transparently, securely, and sovereignly.</p>\n<p>Security is a crucial part of the value proposition. Without sybil resistance and slashing defense (programmable or social) against 34% double-signing attacks, a settlement layer would not be trusted by participants. A secure validation layer is the most scalable (<a href=\"https://unenumerated.blogspot.com/2017/02/money-blockchains-and-social-scalability.html\" rel=\"noopener nofollow ugc\">link</a>) foundation for providing transaction settlement with incorruptible finality.</p>\n<p>Sovereignty is equally important – Ethereum should be able to defend against more subtle 51% attacks such as short-range reorgs and censoring (<a href=\"https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/attack-and-defense/#attackers-with-50-stake\" rel=\"noopener nofollow ugc\">link</a>), and should be able to resist coercion by state actors. If Ethereum loses sovereignty (aka autonomy), it loses its value as a neutral settlement mechanism:</p>\n<blockquote>\n<p><code>\"Decentralization\" is the broad distribution of a system's intrinsic/accepted forms of power, protecting users against arbitrary exercises of power from the recognized legitimate 'authorities' within the system's logic (e.g., validators). \"Autonomy\" is the system's resistance against extrinsic/unaccepted forms of power, protecting users against all exercises of power from authorities outside the system's logic (e.g., government authorities).</code><br>\n<em>Source: lex_node (<a href=\"https://twitter.com/lex_node/status/1799489646042165662\" rel=\"noopener nofollow ugc\">link</a>)</em></p>\n</blockquote>\n<p>While 34% attacks are costly and 51% attacks are to some extent bounded by reputation and social slashing, a gradual coercion by state actors on independent validators is more feasible, and can even be unintentional. For instance, the European Securities and Markets Authority (ESMA) recently suggested (<a href=\"https://www.esma.europa.eu/press-news/consultations/consultation-technical-standards-specifying-certain-requirements-mica-3rd#responses\" rel=\"noopener nofollow ugc\">link</a>) viewing MEV as a form of market manipulation subject to notification requirements from validators. Such regulations could make it impracticable for node operators to continue to function in Europe. In a worst-case outcome, these regulations could propagate to the rest of the world and impose artificial restrictions on how the consensus algorithm works.</p>\n<p>High autonomy is therefore maintained through robust decentralization among validators, which includes:</p>\n<ul>\n<li><strong>Client software diversity</strong>: running different types of validator software to avoid concentration risk from bugs.</li>\n<li><strong>Node operator diversity</strong>: different, independent entities running validator software to prevent individual node operators reaching higher levels of control.</li>\n<li><strong>Geographic and jurisdictional diversity</strong>: different levels of base-level infrastructure — such as connectivity to the internet, power supply, law authorities and jurisdictions — that are capable of influencing node operators.</li>\n</ul>\n<h3><a name=\"h-12-a-diverse-staking-economy-is-key-5\" class=\"anchor\" href=\"https://ethresear.ch#h-12-a-diverse-staking-economy-is-key-5\"></a>1.2. A diverse staking economy is key</h3>\n<h4><a name=\"h-121-stakers-6\" class=\"anchor\" href=\"https://ethresear.ch#h-121-stakers-6\"></a>1.2.1. Stakers</h4>\n<p>Stakers fall into three main categories:</p>\n<ol>\n<li><strong>Retail and Institutions</strong>: These participants delegate their staking to Centralized Exchanges (CEXs)</li>\n<li><strong>On-chain Actors</strong>: They delegate their staking to Decentralized Staking Middleware (DSM), such as Liquid Staking Tokens (LSTs) or decentralized pools, as well as Liquid Restaking Token protocols (LRTs) and Centralized Staking Providers (CSPs).</li>\n<li><strong>Solo Stakers</strong>: These users choose not to delegate and run validators independently</li>\n</ol>\n<h4><a name=\"h-122-validating-entities-7\" class=\"anchor\" href=\"https://ethresear.ch#h-122-validating-entities-7\"></a>1.2.2. Validating entities</h4>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/4/e4e64e83cbc59b58fdfe0316e37c8b548dfb52d8.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/e4e64e83cbc59b58fdfe0316e37c8b548dfb52d8\" title=\"tg_image_4158519118\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/4/e4e64e83cbc59b58fdfe0316e37c8b548dfb52d8_2_690x469.jpeg\" alt=\"tg_image_4158519118\" data-base62-sha1=\"wEWiaD9TEEMmgkYnnsQJVbKbhUs\" width=\"690\" height=\"469\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/4/e4e64e83cbc59b58fdfe0316e37c8b548dfb52d8_2_690x469.jpeg, https://ethresear.ch/uploads/default/optimized/3X/e/4/e4e64e83cbc59b58fdfe0316e37c8b548dfb52d8_2_1035x703.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/e/4/e4e64e83cbc59b58fdfe0316e37c8b548dfb52d8_2_1380x938.jpeg 2x\" data-dominant-color=\"E2ECEE\"></a></div><br>\n<em>Note: CSP numbers do not include capital delegated from DSM/LRTs. The above numbers are approximate and for illustration purposes; they are our best estimates from Dune (<a href=\"https://dune.com/hildobby/eth2-staking\" rel=\"noopener nofollow ugc\">1</a>, <a href=\"https://dune.com/lido/eth-deposits-stats\" rel=\"noopener nofollow ugc\">2</a>), as of June 30th 2024.</em><p></p>\n<p>A hypothetical scenario where most ETF Ether is staked with custodial services, like Coinbase, suggests that this is where most of future inflows will likely originate. Recent Bitcoin ETFs have seen ~$15b of inflows. Proportionally applied to Ethereum, this could mean about 4m ETH. Notably, 8 out of 11 Bitcoin ETFs use Coinbase as their custodian, a pattern that may repeat with ETH.</p>\n<h4><a name=\"h-123-entities-decentralization-8\" class=\"anchor\" href=\"https://ethresear.ch#h-123-entities-decentralization-8\"></a>1.2.3. Entities’ decentralization</h4>\n<p>Contributions to decentralization and thus censorship resistance and neutrality can be approximated as follows: Solo Stakers &gt; Decentralized Staking Middleware &gt; Liquid Restaking Protocols &gt; Centralized Staking Providers &gt; CEXs.</p>\n<ul>\n<li><strong>Solo Stakers</strong>: Contribute the most to decentralization because each adds an additional validator</li>\n<li><strong>DSM</strong>: Efficiently distribute delegated stake among many parties, bonded via reputation (Lido) or collateral (Rocket Pool, Lido’s Community Staking Module). Their impact on Ethereum’s decentralization is measurable and significant, with data on operational diversity publicly available and regularly updated (<a href=\"https://app.hex.tech/8dedcd99-17f4-49d8-944e-4857a355b90a/app/3f7d6967-3ef6-4e69-8f7b-d02d903f045b/latest\" rel=\"noopener nofollow ugc\">link</a>). The Herfindahl-Hirschmann Index (HHI) can also provide a useful proxy on the effect on validation concentration (<a href=\"https://dune.com/steakhouse/hhi\" rel=\"noopener nofollow ugc\">link</a>)</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/4/b4d2e88d63be2c26d7397166220ad2752e954a34.png\" data-download-href=\"https://ethresear.ch/uploads/default/b4d2e88d63be2c26d7397166220ad2752e954a34\" title=\"dune_hhi\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/4/b4d2e88d63be2c26d7397166220ad2752e954a34_2_690x411.png\" alt=\"dune_hhi\" data-base62-sha1=\"pNDOstzgflCF047tswrc2A3ppuA\" width=\"690\" height=\"411\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/4/b4d2e88d63be2c26d7397166220ad2752e954a34_2_690x411.png, https://ethresear.ch/uploads/default/optimized/3X/b/4/b4d2e88d63be2c26d7397166220ad2752e954a34_2_1035x616.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/4/b4d2e88d63be2c26d7397166220ad2752e954a34_2_1380x822.png 2x\" data-dominant-color=\"E7E7E7\"></a></div><p></p>\n<ul>\n<li><strong>Restaking Infrastructure</strong>: While not cost-optimized for native staking, these protocols distribute stake among fewer node operators without aggregating it under one entity</li>\n<li><strong>Centralized Staking Providers</strong>: Risk aggregating large amounts of stake, but competition among them can bolster decentralization if many can sustain independent businesses</li>\n<li><strong>CEXs</strong>: Benefit the most from the power law distribution of AUM, often driving staked ETH concentration. Coinbase, for instance, is the largest node operator with nearly 15% market share.</li>\n</ul>\n<h3><a name=\"h-13-there-is-no-future-proof-safe-level-of-security-9\" class=\"anchor\" href=\"https://ethresear.ch#h-13-there-is-no-future-proof-safe-level-of-security-9\"></a>1.3. There is no future-proof safe level of Security</h3>\n<p>Anders Lowsson suggests (<a href=\"https://ethresear.ch/t/reward-curve-with-tempered-issuance-eip-research-post/\">link</a>) that Ethereum should reduce its issuance, arguing that “excessive incentives for staking, beyond what is necessary for security, can unfortunately over time turn into perverse subsidies, with many downsides.” However, this raises the question of what constitutes “adequate incentives for staking” and what level of security is truly necessary.</p>\n<blockquote>\n<p><code>What exactly is \"neutrality\"? I see that term being used in handwavy fashion, especially when scaling comes up, and it's hard to know what we mean by \"preserving credible neutrality\" at the moment. Would be nice to get some info there. :)</code><br>\n<em>Source: eawosikaa (<a href=\"https://x.com/eawosikaa/status/1808005717976047799\" rel=\"noopener nofollow ugc\">link</a>)</em></p>\n</blockquote>\n<p>Today’s global capital markets are valued in the hundreds of trillions of dollars, while Ethereum represents only a tiny fraction of that. For Ethereum to become a neutral settlement layer for the world, its cost of corruption would need to be in the hundreds of billions, if not trillions, of dollars, to capture the value that could be extracted in a possible attack. For context, large value payment systems (excluding retail payments) cleared quadrillions of dollars in value in 2022 (<a href=\"https://data.bis.org/topics/CPMI_FMI/tables-and-dashboards/BIS,CPMI_T9,1.0?view=value&amp;dimensions=REP_CTY%3AUS\" rel=\"noopener nofollow ugc\">link</a>). In comparison, over the past 12mos, stablecoin transfer value on Ethereum just about cleared $8tn, or 0.5% (<a href=\"https://www.theblock.co/data/stablecoins/usd-pegged/adjusted-on-chain-volume-of-stablecoins-monthly\" rel=\"noopener nofollow ugc\">link</a>). This is consistent with the proportion of market capitalization of Ethereum relative to global capital markets (well under 1% as well).</p>\n<p>The slightest risk of insufficient security would stagnate Ethereum’s growth – decentralization and the resulting neutrality is Ethereum’s <span class=\"hashtag-raw\">#1</span> competitive advantage. No risk should be taken to erode that, and instead, we should seek to strengthen it even further. To answer Emmanuel’s question, in our framing, we would use “neutrality” interchangeably with “sovereignty” and “autonomy”: ability to defend against censorship and coercion attacks (<a href=\"https://nakamoto.com/credible-neutrality/\" rel=\"noopener nofollow ugc\">link</a>). Such that the cost of “coercion” is always higher than the benefit from manipulating the state.</p>\n<p>Anders’ argument assumes that a 34% double-singing attack is so costly and 51% censorship attack is so unlikely today, that the network can afford to focus on strengthening other layers. If Ethereum were already a major part of the world’s capital markets, this argument might hold more weight, as incremental risks would be smaller. However, reducing today the network’s most crucial features—security and sovereignty—would compromise the network’s ability to grow.</p>\n<p>Currently, Ethereum’s social layer serves as the final defense (<a href=\"https://ercwl.medium.com/the-case-for-social-slashing-59277ff4d9c7\" rel=\"noopener nofollow ugc\">link</a>) against norm violations that threaten its credible neutrality. However, this social layer is structurally fragile. It requires constant vigilance from the community so that enforcement can occur on a daily basis. Yet, as Ethereum grows, massive new inflows might bypass today’s social layer altogether. If a large bank, say, staked $1tn worth of Ether with a CEX, what chance does a community of open source developers have to enforce social norms? The key question, as Emmanuel points out, is: What is the threshold for security that Ethereum needs today and in the future? The MVI proposal, in our view, fails to address this critical question, focusing instead on the other effects of reducing the security budget.</p>\n<h3><a name=\"h-14-reframing-the-discourse-expansion-over-efficiency-10\" class=\"anchor\" href=\"https://ethresear.ch#h-14-reframing-the-discourse-expansion-over-efficiency-10\"></a>1.4. Reframing the discourse: expansion over efficiency</h3>\n<p>Ethereum should balance incentives for all stakeholders to ensure the highest level of security. This balance involves weighing long-term sustainability and expansion vs short-term efficiency to create enduring security value.</p>\n<p>MVS suggests that instead of asking “how much could we reduce issuance for staking efficiency”, we should be asking “how much network incentivisation do we need to perpetuate decentralization to maintain and expand security”.</p>\n<p>Strategically, MVI and MVS represent two different paths for Ethereum’s growth. MVI focuses on minimizing costs, benefiting ETH holders in the short term. MVS, on the other hand, emphasizes building a long-lasting moat around the network, optimizing long-term value creation for all stakeholders, including ETH holders.</p>\n<p>Ethereum’s unique appeal lies in its secure, credibly neutral blockspace. Unlike commodity blockspace, which competes on price, secure blockspace competes on features. Similar to the advanced chip industry, where success depends on computational ability rather than price, Ethereum should compete on the magnitude of security it offers. This security creates an enduring competitive advantage, accelerating value creation across the ecosystem.</p>\n<p>There is a subtlety in that the market cap of Ethereum is a variable that contributes to security, and so minimizing issuance can be seen as bolstering security. Superficially, there is a reflexive effect, where Ethereum’s security both causes and is driven by its market cap. However, we believe that Ethereum’s security making ETH valuable is the primary causation, and therefore security needs to be prioritized. Below we illustrate diagrammatically the alternative value creation paths for Ethereum contributors deciding between MVS and MVI.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/f/1f2963c356b0018f378fbf4fe73ef79e641aa362.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/1f2963c356b0018f378fbf4fe73ef79e641aa362\" title=\"tg_image_2418175601\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/f/1f2963c356b0018f378fbf4fe73ef79e641aa362_2_530x500.jpeg\" alt=\"tg_image_2418175601\" data-base62-sha1=\"4rFtFLb99BGLrP51Agg3FhitQQy\" width=\"530\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/f/1f2963c356b0018f378fbf4fe73ef79e641aa362_2_530x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/1/f/1f2963c356b0018f378fbf4fe73ef79e641aa362_2_795x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/1/f/1f2963c356b0018f378fbf4fe73ef79e641aa362_2_1060x1000.jpeg 2x\" data-dominant-color=\"F4F4F4\"></a></div><p></p>\n<h2><a name=\"h-2-analysis-of-ethereum-issuance-reduction-proposal-within-the-mvs-framework-11\" class=\"anchor\" href=\"https://ethresear.ch#h-2-analysis-of-ethereum-issuance-reduction-proposal-within-the-mvs-framework-11\"></a>2. Analysis of Ethereum Issuance reduction proposal within the MVS framework</h2>\n<p>We posit that, under the MVS framework, Ethereum issuance reduction proposals risk creating downstream effects that would compromise Ethereum’s security value. Overall, we believe that ETH’s moneyness stands to increase with greater security and autonomy, to a degree that far outweighs the downsides of issuance or externalities such as capital gains taxes.</p>\n<h3><a name=\"h-21-the-assumption-that-ethereum-overpays-for-security-is-wrong-less-issuance-may-lead-to-centralization-of-the-validator-set-12\" class=\"anchor\" href=\"https://ethresear.ch#h-21-the-assumption-that-ethereum-overpays-for-security-is-wrong-less-issuance-may-lead-to-centralization-of-the-validator-set-12\"></a>2.1. The assumption that Ethereum overpays for security is wrong: less issuance may lead to centralization of the validator set</h3>\n<h4><a name=\"h-211-etf-inflows-would-exacerbate-centralization-in-the-context-of-a-33-stake-cap-13\" class=\"anchor\" href=\"https://ethresear.ch#h-211-etf-inflows-would-exacerbate-centralization-in-the-context-of-a-33-stake-cap-13\"></a>2.1.1 ETF inflows would exacerbate centralization in the context of a 33% stake cap</h4>\n<p>Lowering the target stake ratio (<a href=\"https://ethresear.ch/t/endgame-staking-economics-a-case-for-targeting/18751\">link</a>) could lead to a concentration of staked ETH with Centralized Exchanges (CEXs), driving capital away from decentralized alternatives.</p>\n<p>Consider a scenario where a 33% cap (equivalent to 40.6 million staked ETH) is implemented, and the curve enacts a sharp drop of yield to zero as stake ratio increases from 30% (36.6 million ETH) to 33% (40.6 million ETH). Suppose Ether ETFs are launched in the US, attracting significant capital inflows. If these ETFs use Coinbase as their custodian (as 8 out of 11 BTC ETF issuers do), this could lead to $15 billion in inflows, adding approximately 4.5 million ETH to Coinbase’s custody. The simulated impact on the validation market might look like this; the 40.1m max staked ETH being slightly lower then 40.6 represents the fact that when yield becomes extremely low there is no marginal staker at all on the market.</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th><strong>Illustrative impact on validation market with a 33% MVI limit</strong></th>\n<th style=\"text-align:center\"><strong>Current composition</strong></th>\n<th style=\"text-align:center\"><strong>Effect in 4 years</strong></th>\n<th style=\"text-align:center\"><strong>Future composition</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ETH staked</td>\n<td style=\"text-align:center\">33.1m</td>\n<td style=\"text-align:center\">+7m</td>\n<td style=\"text-align:center\">40.1m</td>\n</tr>\n<tr>\n<td>ETH held with Coinbase</td>\n<td style=\"text-align:center\">17.5m</td>\n<td style=\"text-align:center\">+4.5m (ETFs)</td>\n<td style=\"text-align:center\">22m</td>\n</tr>\n<tr>\n<td>ETH held &amp; staked with Coinbase</td>\n<td style=\"text-align:center\">4.3m</td>\n<td style=\"text-align:center\">+10m</td>\n<td style=\"text-align:center\">14.3m</td>\n</tr>\n<tr>\n<td>ETH staked on-chain via LSTs/LRTs</td>\n<td style=\"text-align:center\">13.7m</td>\n<td style=\"text-align:center\">-2m</td>\n<td style=\"text-align:center\">11.7</td>\n</tr>\n<tr>\n<td>ETH staked by other entities</td>\n<td style=\"text-align:center\">15.1</td>\n<td style=\"text-align:center\">-1m</td>\n<td style=\"text-align:center\">14.1</td>\n</tr>\n</tbody>\n</table>\n</div><ol>\n<li>Market forces and fiduciary duties ensure that CEXs like Coinbase squeeze the maximum amount of profit from staking-as-a-service (for their customers and ETF issuers), and long-term the majority of their holdings are staked.</li>\n</ol>\n<p>We model the above impact by assigning a 10m staked ETH inflow to Coinbase. When Coinbase’s stake reaches 7.8 million, total staked ETH will be about 36.6 million, causing rewards to drop sharply. Consequently:</p>\n<ol start=\"2\">\n<li>Lido stETH and other LST/LRT users, being sophisticated on-chain actors, will seek higher rewards elsewhere. The switching cost of moving capital on-chain is extremely low, so there is no incentive for capital to stay – the capital will leave for higher yields in DeFi.</li>\n<li>CSPs will exit these protocols since the 5% fee from middleware won’t cover their costs.</li>\n</ol>\n<p>We model the above two impacts by assigning a 2 million ETH outflow to LSTs/LRTs and a 1 million ETH outflow to other entities.</p>\n<ol start=\"4\">\n<li>Meanwhile, CEXs like Coinbase can continue offering staking products because their marginal costs are extremely low, and can even be offset by other business segments. Their customers may remain loyal or lack alternatives due to regulations or unsophisticated nature of the user base. This can happen despite Coinbase having higher fees (25%) compared to better-performing alternatives (5-15%).</li>\n</ol>\n<p>In this scenario, Coinbase could control 14.3 million ETH, surpassing the 33% network control threshold independently, while Lido and other DSMs lose market share.</p>\n<h4><a name=\"h-212-staked-eth-concentration-with-cexs-doesnt-necessarily-have-to-happen-with-a-higher-stake-cap-14\" class=\"anchor\" href=\"https://ethresear.ch#h-212-staked-eth-concentration-with-cexs-doesnt-necessarily-have-to-happen-with-a-higher-stake-cap-14\"></a>2.1.2 Staked ETH concentration with CEXs doesn’t necessarily have to happen with a higher stake cap</h4>\n<p>Without the cap, both CEXs and on-chain market segments could coexist without putting pressure on each other due to sufficient demand for staking. LSTs, LRTs and CSPs wouldn’t face the dramatic yield decrease that would occur when Coinbase’s stake reaches 7.8 million ETH. Some might argue that Coinbase would undercut other staking providers by lowering its 25% fee. However, this is uncertain. Coinbase’s customer base seems inelastic, meaning the most profitable strategy might be to maintain or even increase their fees. In addition, even if Coinbase goes after the on-chain market and lowers their fees, the market may not be fully efficient – some people might prefer to stick with LSTs due to their decentralization preference.</p>\n<p>In a highly segmented market, margins don’t need to uniformly compress, leaving space for both CEXs/CSPs and LSTs/restaking segments to thrive. LSTs and CEXs serve distinct market segments. For CEXs, the most profitable approach is to charge high fees from retail and institutional clients (e.g., Coinbase’s 25%) without directly competing with LSTs. Targeting stake ratios could stifle the market for on-chain actors but not significantly affect the market for retail and institutional clients.</p>\n<p>Thus, in the absence of a stake cap, the coexistence of various staking actors could lead to a more balanced distribution of staked ETH across different market segments.</p>\n<h4><a name=\"h-213-mvi-effect-on-the-ratio-of-solo-stakers-15\" class=\"anchor\" href=\"https://ethresear.ch#h-213-mvi-effect-on-the-ratio-of-solo-stakers-15\"></a>2.1.3 MVI effect on the ratio of solo stakers</h4>\n<h5><a name=\"the-importance-of-this-effect-is-overrated-16\" class=\"anchor\" href=\"https://ethresear.ch#the-importance-of-this-effect-is-overrated-16\"></a>The importance of this effect is overrated</h5>\n<p>Approximately 30 million ETH is delegated, while only 3 million is solo staked. It is evident that delegation dominates as a modality of staking. The key issue is ETH concentration with CEXs, rather than the interaction between solo stakers and LSTs.</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><strong>Grouping</strong></th>\n<th style=\"text-align:center\"><strong>Approximate stake</strong></th>\n<th style=\"text-align:center\"><strong>Type</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">CEXs</td>\n<td style=\"text-align:center\">10m</td>\n<td style=\"text-align:center\">Delegated</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">LSTs, LRTs, CSPs</td>\n<td style=\"text-align:center\">20m</td>\n<td style=\"text-align:center\">Delegated</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Solo stakers</td>\n<td style=\"text-align:center\">3m</td>\n<td style=\"text-align:center\">Solo staked</td>\n</tr>\n</tbody>\n</table>\n</div><h5><a name=\"lsts-and-csps-can-also-contribute-to-overall-network-quality-17\" class=\"anchor\" href=\"https://ethresear.ch#lsts-and-csps-can-also-contribute-to-overall-network-quality-17\"></a>LSTs and CSPs can also contribute to overall network quality</h5>\n<p>While solo stakers are often seen as the backbone of Ethereum’s network security, the contributions of LSTs and centralized staking providers are undervalued.</p>\n<p>There is a lot of nuance to the emergent risks of malicious actors emerging from LSTs such as Lido. There certainly are risks (cf. Mike Neuder’s extensive post on the subject, <a href=\"https://notes.ethereum.org/@mikeneuder/magnitude-and-direction\" rel=\"noopener nofollow ugc\">link</a>). However, there are also many benefits to deterministic stake allocation to professional or larger node operators. It’s possible for solo stakers to have different motivations than an LST whose main objective is to decentralize Ethereum validation (<a href=\"https://research.lido.fi/t/lido-dao-vibe-alignment-purpose-mission-vision/\" rel=\"noopener nofollow ugc\">link</a>). Some of the most noteworthy examples of malicious proposers, for example, have come from solo validators, such as those involved in the April 3rd, 2023 MEV Boost exploit (<a href=\"https://collective.flashbots.net/t/post-mortem-april-3rd-2023-mev-boost-relay-incident-and-related-timing-issue/\" rel=\"noopener nofollow ugc\">link</a>).</p>\n<p>Centralized staking providers and LSTs are quantifiably more performant validators than solo stakers. There is significant existing data (<a href=\"http://rated.network/\" rel=\"noopener nofollow ugc\">link</a>) today to quantify proposer effectiveness and attester effectiveness, which drive fewer missed slots and attestations, faster block propagation and chain finalization. Overall the network is much more stable and responsive with professional validators than it would otherwise be, but also more decentralized.</p>\n<h5><a name=\"issuance-reductions-would-likely-decrease-the-share-of-solo-stakers-18\" class=\"anchor\" href=\"https://ethresear.ch#issuance-reductions-would-likely-decrease-the-share-of-solo-stakers-18\"></a>Issuance reductions would likely decrease the share of solo stakers</h5>\n<p>Some argue that solo stakers are less elastic with respect to yield, because they are as a cohort more heterogeneous than other validating entities, and hence have a steeper supply curve.</p>\n<p>However, our simplified analysis of Ethereum validator economics shows this argument is flawed. Solo stakers in fact have much higher fixed costs, making them much less adaptable to a low issuance rates compared to larger node operators. Specifically,</p>\n<p>For solo stakers:</p>\n<ul>\n<li>Staking APR is lower and closer to the Median staking APR (i.e. 2.4% per Rated, <a href=\"https://explorer.rated.network/network?network=mainnet&amp;timeWindow=1d&amp;rewardsMetric=average&amp;geoDistType=all&amp;hostDistType=all&amp;soloProDist=stake\" rel=\"noopener nofollow ugc\">link</a>) than scale node operators due to the unpredictability of proposer rewards, tips and MEV</li>\n<li>The costs of running a single validator include hardware (32 GB RAM, 4 TB SSD) and electricity. Home internet plans are sufficient for solo stakers, so broadband cost is assumed to be 0 (no incremental cost).</li>\n<li>In this set up, 100% of solo staker’s total costs are fixed costs. Assuming hardware depreciation of 5 years, profit margins are &gt;90% to solo stakers</li>\n<li>We exclude the need to reserve 32 ETH in capital as collateral, which brings the capital outlay (though not outright investment) significantly higher</li>\n</ul>\n<p>Then consider, on the opposite end of the spectrum, a large centralized node operator with 100,000 validators:</p>\n<ul>\n<li>Staking APR is higher and closer to the Average staking APR (i.e. 3.3% per Rated, <a href=\"https://explorer.rated.network/network?network=mainnet&amp;timeWindow=1d&amp;rewardsMetric=average&amp;geoDistType=all&amp;hostDistType=all&amp;soloProDist=stake\" rel=\"noopener nofollow ugc\">link</a>) as stake pooling smoothes the unpredictable components of both CL (proposer rewards) and EL (tips + MEV) rewards</li>\n<li>Costs include hardware but also significant operational costs including technical and marketing staff</li>\n<li>Hardware and internet are fixed costs, electricity is a variable cost and staff costs can be seen as a semi-variable cost\n<ul>\n<li>Employment footprint can be eventually adjusted should the top line be negatively impacted</li>\n</ul>\n</li>\n<li>Counting half of the maintenance &amp; growth spend as fixed and the other half as variable, we arrive at fixed costs representing 64% of the large node operators’ total costs (i.e. much less than solo stakers). Profit margins are also lower than those of solo stakers</li>\n</ul>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Assumptions</th>\n<th style=\"text-align:right\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ETH ($)</td>\n<td style=\"text-align:right\">3,500</td>\n</tr>\n<tr>\n<td>Average staking APR</td>\n<td style=\"text-align:right\">3.3%</td>\n</tr>\n<tr>\n<td>Median staking APR</td>\n<td style=\"text-align:right\">2.4%</td>\n</tr>\n<tr>\n<td>MVI reduction assumed</td>\n<td style=\"text-align:right\">2.0%</td>\n</tr>\n</tbody>\n</table>\n</div><div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th><strong>Illustrative Annual P/L</strong></th>\n<th style=\"text-align:center\"><strong>Current</strong></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td style=\"text-align:center\"><strong>Solo Staker</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>Large Node Operator</strong></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:center\"><strong>Quantity</strong></td>\n<td style=\"text-align:center\"><strong>$</strong></td>\n<td style=\"text-align:center\"><strong>Quantity</strong></td>\n<td style=\"text-align:center\"><strong>$</strong></td>\n</tr>\n<tr>\n<td># of validators</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">112,000</td>\n<td style=\"text-align:center\">100,000</td>\n<td style=\"text-align:center\">11,200,000,000</td>\n</tr>\n<tr>\n<td>Staking APR</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">2.4%</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">3.3%</td>\n</tr>\n<tr>\n<td>Staking income</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">2,677</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">367,360,000</td>\n</tr>\n<tr>\n<td>Commission</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">10%</td>\n<td style=\"text-align:center\">36,736,000</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td><strong>Hardware cost</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>800</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>7,750,000</strong></td>\n</tr>\n<tr>\n<td>Computer/servers</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">800</td>\n<td style=\"text-align:center\">350</td>\n<td style=\"text-align:center\">7,000,000</td>\n</tr>\n<tr>\n<td>Backup servers</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">100</td>\n<td style=\"text-align:center\">750,000</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td><strong>Operational cost</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>74</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>19,794,780</strong></td>\n</tr>\n<tr>\n<td>Electricity</td>\n<td style=\"text-align:center\">70Wh, $0.12/kWh</td>\n<td style=\"text-align:center\">74</td>\n<td style=\"text-align:center\">750Wh/server, $0.12/kWh</td>\n<td style=\"text-align:center\">354,780</td>\n</tr>\n<tr>\n<td>Internet connection</td>\n<td style=\"text-align:center\">No incremental cost</td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">540GB/month/val @ $0.03/GB</td>\n<td style=\"text-align:center\">19,440,000</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td><strong>Maintenance &amp; growth</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>0</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>11,400,000</strong></td>\n</tr>\n<tr>\n<td>Technical staff</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">70</td>\n<td style=\"text-align:center\">8,400,000</td>\n</tr>\n<tr>\n<td>Marketing/admin staff</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">30</td>\n<td style=\"text-align:center\">3,000,000</td>\n</tr>\n<tr>\n<td>Cybersecurity/miscellaneous</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">1,000,000</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td><strong>Total cost (assume 5Y hardware depreciation)</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>234</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>32,744,780</strong></td>\n</tr>\n<tr>\n<td>o/w fixed cost</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">100%</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">64%</td>\n</tr>\n<tr>\n<td>o/w variable cost</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">0%</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">36%</td>\n</tr>\n<tr>\n<td><strong>Payback period on capex (months)</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>3.9</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>23.3</strong></td>\n</tr>\n<tr>\n<td><strong>Annual income/loss</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>2,443</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>3,991,220</strong></td>\n</tr>\n<tr>\n<td><strong>Profit margin (excl. ETH at stake)</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>91.3%</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>10.9%</strong></td>\n</tr>\n</tbody>\n</table>\n</div><p>In the event that MVI reduces staking APR for all stakers (e.g. -200bps), the below scenario analysis helps visualize how different stakers may be impacted differently. High level:</p>\n<ul>\n<li>Solo stakers have very limited, if no, way of adjusting their underlying costs. 100% of the reduced staking rewards will fall through to the bottom line, resulting in a dramatic reduction in profit margin. As a result, the payback period on capex (i.e. hardware) multiplies from 3.9 months to 47.2 months in our example, without considering the need to raise 32 ETH to activate a validator to begin with. This raises the question of whether incremental demand from new solo stakers could be sustained in the post-MVI world</li>\n<li>Meanwhile, large node operators have more levers to pull to protect their profits and capex payback periods\n<ul>\n<li>As in Scenario 1, node operators can raise their commission</li>\n<li>As in Scenario 2, node operators can raise their commission and reduce variable costs, notably staff costs</li>\n<li>With very minor changes to their structure they can come back to prior levels of profit</li>\n</ul>\n</li>\n</ul>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th><strong>Illustrative Annual P/L</strong></th>\n<th style=\"text-align:center\"><strong>If staking APR reduces by 200bps</strong></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td style=\"text-align:center\"><strong>Solo Staker</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>Large Node Operator - Scenario 1</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>Large Node Operator - Scenario 2</strong></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:center\"><strong>Quantity</strong></td>\n<td style=\"text-align:center\"><strong>$</strong></td>\n<td style=\"text-align:center\"><strong>Quantity</strong></td>\n<td style=\"text-align:center\"><strong>$</strong></td>\n<td style=\"text-align:center\"><strong>Quantity</strong></td>\n<td style=\"text-align:center\"><strong>$</strong></td>\n</tr>\n<tr>\n<td># of validators</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">112,000</td>\n<td style=\"text-align:center\">100,000</td>\n<td style=\"text-align:center\">11,200,000,000</td>\n<td style=\"text-align:center\">100,000</td>\n<td style=\"text-align:center\">11,200,000,000</td>\n</tr>\n<tr>\n<td>Staking APR</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong><em>0.4%</em></strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong><em>1.3%</em></strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong><em>1.3%</em></strong></td>\n</tr>\n<tr>\n<td>Staking income</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">437</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">143,360,000</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">143,360,000</td>\n</tr>\n<tr>\n<td>Commission</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong><em>25%</em></strong></td>\n<td style=\"text-align:center\">35,840,000</td>\n<td style=\"text-align:center\"><strong><em>25%</em></strong></td>\n<td style=\"text-align:center\">35,840,000</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td><strong>Hardware cost</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>800</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>7,750,000</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>7,750,000</strong></td>\n</tr>\n<tr>\n<td>Computer/servers</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">800</td>\n<td style=\"text-align:center\">350</td>\n<td style=\"text-align:center\">7,000,000</td>\n<td style=\"text-align:center\">350</td>\n<td style=\"text-align:center\">7,000,000</td>\n</tr>\n<tr>\n<td>Backup servers</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">100</td>\n<td style=\"text-align:center\">750,000</td>\n<td style=\"text-align:center\">100</td>\n<td style=\"text-align:center\">750,000</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td><strong>Operational cost</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>74</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>19,794,780</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>19,794,780</strong></td>\n</tr>\n<tr>\n<td>Electricity</td>\n<td style=\"text-align:center\">70Wh, $0.12/kWh</td>\n<td style=\"text-align:center\">74</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">354,780</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">354,780</td>\n</tr>\n<tr>\n<td>Internet connection</td>\n<td style=\"text-align:center\">No incremental cost</td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">19,440,000</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">19,440,000</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td><strong>Maintenance &amp; growth</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>0</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>11,400,000</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>10,504,000</strong></td>\n</tr>\n<tr>\n<td>Technical staff</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">70</td>\n<td style=\"text-align:center\">8,400,000</td>\n<td style=\"text-align:center\"><strong><em>64</em></strong></td>\n<td style=\"text-align:center\">7,739,789</td>\n</tr>\n<tr>\n<td>Marketing/admin staff</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">30</td>\n<td style=\"text-align:center\">3,000,000</td>\n<td style=\"text-align:center\"><strong><em>28</em></strong></td>\n<td style=\"text-align:center\">2,764,211</td>\n</tr>\n<tr>\n<td>Cybersecurity/miscellaneous</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">1,000,000</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">1,000,000</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td><strong>Total cost (assume 5Y hardware depreciation)</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>234</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>32,744,780</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>31,848,780</strong></td>\n</tr>\n<tr>\n<td>o/w fixed cost</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">100%</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">64%</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">66%</td>\n</tr>\n<tr>\n<td>o/w variable cost</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">0%</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">36%</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">34%</td>\n</tr>\n<tr>\n<td><strong>Payback period on capex (months)</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>47.2</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>30.0</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>23.3</strong></td>\n</tr>\n<tr>\n<td><strong>Annual income/loss</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>203</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>3,095,220</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>3,991,220</strong></td>\n</tr>\n<tr>\n<td><strong>Profit margin (excl. ETH at stake)</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>46.5%</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>8.6%</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>11.1%</strong></td>\n</tr>\n</tbody>\n</table>\n</div><p><em>Illustrative figures can be found <a href=\"https://docs.google.com/spreadsheets/d/1tr7VJqzJLiywf34_debHa20wfjU5d8db1eYrJWU0i3Q/edit?gid=0#gid=0\" rel=\"noopener nofollow ugc\">here</a></em></p>\n<p>Due to the presence of a higher proportion of fixed costs, solo stakers (and smaller node operators alike) will show higher sensitivity to changes in staking rewards compared to larger node operators. The corollary is that as MVI reduces staking reward APR, the marginal players may be priced out, leading to a greater centralization of stake. This would exacerbate the already decreasing trend of solo stakers alongside Ethereum’s issuance compression over time.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/7/c75ca71bdb5bbc1207a30f9439fd1dc937b2aa59.png\" data-download-href=\"https://ethresear.ch/uploads/default/c75ca71bdb5bbc1207a30f9439fd1dc937b2aa59\" title=\"dune_marketshare\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/7/c75ca71bdb5bbc1207a30f9439fd1dc937b2aa59_2_690x411.png\" alt=\"dune_marketshare\" data-base62-sha1=\"srDwvg5bLLmlhSqnQeLkcjGgYnn\" width=\"690\" height=\"411\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/7/c75ca71bdb5bbc1207a30f9439fd1dc937b2aa59_2_690x411.png, https://ethresear.ch/uploads/default/optimized/3X/c/7/c75ca71bdb5bbc1207a30f9439fd1dc937b2aa59_2_1035x616.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/7/c75ca71bdb5bbc1207a30f9439fd1dc937b2aa59_2_1380x822.png 2x\" data-dominant-color=\"A47D76\"></a></div><br>\n<em>Source: Dune (<a href=\"https://dune.com/queries/3852057/6478867\" rel=\"noopener nofollow ugc\">link</a>)</em><p></p>\n<h3><a name=\"h-22-lst-dominance-and-cost-modeling-are-inadequate-arguments-for-issuance-reduction-19\" class=\"anchor\" href=\"https://ethresear.ch#h-22-lst-dominance-and-cost-modeling-are-inadequate-arguments-for-issuance-reduction-19\"></a>2.2. LST dominance and cost-modeling are inadequate arguments for issuance reduction</h3>\n<h4><a name=\"h-221-issuance-as-a-cost-is-a-reductive-framing-20\" class=\"anchor\" href=\"https://ethresear.ch#h-221-issuance-as-a-cost-is-a-reductive-framing-20\"></a>2.2.1. Issuance as a cost is a reductive framing</h4>\n<p>“Issuance as a cost” concerns the dilution effect on native ETH holders and the potential welfare loss due to externalities like taxes.</p>\n<p>The first component focuses on the direct impact of issuance. It redistributes network ownership from unstaked ETH holders to staked ETH holders. High issuance rates force ETH holders to stake to avoid dilution. This increases Ethereum’s security and neutrality but comes with inconvenience and some risk for native ETH holders – which, under MVS, doesn’t qualify as strongly undesirable. Moreover, the cumulative effect could even be seen as beneficial, to the extent that more stake landing with a distributed set of validators justifies investors’ inconvenience.</p>\n<p>The second component addresses additional costs for stakers due to taxes. ETH holders who earn staking rewards may face tax obligations, creating additional sell pressure. However, this concern is specific to certain jurisdictions and points in time. Furthermore, the impact of this sell pressure on Ethereum’s overall functionality is questionable. Assuming 3.5% staking rewards, a $400bn ETH market cap, and 30% average taxes paid by all stakers, we get $4.2bn in annual sell pressure. Given Ethereum’s daily trading volume is in billions, absorbing 1% sell pressure over a year seems immaterial. Furthermore, LSTs such as wstETH may even provide an efficient way to postpone the tax payments, since the tax event might be triggered only when wstETH is sold.</p>\n<p>Even though ETH market cap is significant in determining attack costs, the relatively minor effect of sell pressure does not provide enough security benefits to justify reducing issuance. The trade-offs include potential staked ETH concentration, loss of sovereignty, and a more substantial decrease in market cap as a result.</p>\n<h4><a name=\"h-222-stakers-getting-higher-real-vs-nominal-yield-is-not-significant-21\" class=\"anchor\" href=\"https://ethresear.ch#h-222-stakers-getting-higher-real-vs-nominal-yield-is-not-significant-21\"></a>2.2.2. Stakers getting higher real vs nominal yield is not significant</h4>\n<p>This argument, while mathematically beautiful (<a href=\"https://notes.ethereum.org/@mikeneuder/subsol#3-Scaled-Root-Curve-alternative-issuance\" rel=\"noopener nofollow ugc\">link</a>), is not significant in magnitude. It does not affect security and neutrality in any way; in fact, it is not at all clear if there is any benefit to Ethereum in fewer stakers getting higher real yield compared to more stakers getting less real yield. In addition, this analysis assumes concave supply curves with respect to nominal yield, while it is possible that at a higher staking ratio we should adjust our analysis to concave supply curves with respect to real yield.</p>\n<h4><a name=\"h-223-reducing-lst-dominance-shouldnt-be-a-primary-objective-of-ethereums-monetary-policy-22\" class=\"anchor\" href=\"https://ethresear.ch#h-223-reducing-lst-dominance-shouldnt-be-a-primary-objective-of-ethereums-monetary-policy-22\"></a>2.2.3. Reducing LST dominance shouldn’t be a primary objective of Ethereum’s monetary policy</h4>\n<p>This argument is directly related to security and neutrality, and thus can be analyzed under a security-maximizing framework.</p>\n<p>In his article (<a href=\"https://notes.ethereum.org/@mikeneuder/magnitude-and-direction\" rel=\"noopener nofollow ugc\">link</a>) Mike Neuder analyzed various directions and magnitudes of possible Lido attacks on Ethereum in the future. While there are several potential attacks, all of them have a corresponding mitigation plan. Dual governance is at the heart of many of those mitigations. DG is a mechanism that allows stETH holders to slow down Lido’s governance and exit from the protocol before any decision is made. This mechanism is in active and final stages of development (<a href=\"https://research.lido.fi/t/dual-governance-design-and-implementation-proposal\" rel=\"noopener nofollow ugc\">link</a>).</p>\n<p>Another argument for issuance reduction is that stETH risks substituting ETH as the de-facto money and collateral. While there is certainly a possibility that LSTs wind up replacing a lot of ETH functionality in DeFi, it does not diminish the moneyness of ETH – all LSTs are underscored by ETH, and thus derive their value from ETH. In order to execute any of these transactions, users will still need ETH to pay for gas, at the very least. Furthermore, ETH will continue to be bridged to various L2s either way, so at a baseline ETH velocity will already decline with broader adoption of L2s, without compromising its moneyness.</p>\n<p>Finally, there are unintended consequences to targeting individual applications in an opinionated manner in order to manipulate the viability of ETH as collateral or as commodity money. The long-term roadmap of Ethereum should not be hostage to short-term tactical considerations, least of all on the application layer. The growth of LSTs has allowed the growth of user activity on Ethereum and has also increased the velocity and usage of Ether itself.</p>\n<h2><a name=\"h-3-putting-it-all-together-23\" class=\"anchor\" href=\"https://ethresear.ch#h-3-putting-it-all-together-23\"></a>3. Putting it all together</h2>\n<p>MVI, as a framework, ultimately suggests to squeeze as much as possible out of staking, so that stakers’ cost and revenue are more or less at the same low rate. The major problem of this approach is that market forces structurally do not reward decentralization, and ultimately drive stake concentration to CEXs, which are entities with the lowest cost validators and the most inelastic customer base. Thus the downside of MVI is undermining the security and neutrality of Ethereum. In our view, the benefits of MVI, such as decreasing the selling pressure from taxes, do not justify taking this risk on balance.</p>\n<p>MVS, on the other hand, suggests evaluating monetary policies primarily through the lens of how it affects security and neutrality, the core value propositions of Ethereum. One of the arguments for issuance reduction, namely to tackle LST dominance, indeed falls into MVS focus. However, the security and neutrality concerns of LST dominance are of second order in nature (“if dual governance doesn’t work”, “LST becomes an additional risk layer for all users”, etc). Meanwhile, stake accumulating in CEXs rather than in LSTs, LRTs or even CSPs creates a very real risk of staked ETH concentration with one single entity. As such, we do not see the case where LST dominance risk outweighs the risk of stake concentration with CEXs.</p>\n<p>While we presented the MVS framework, and accordingly evaluated the issuance reduction proposal, the natural question stands: what would be the right issuance policy under the MVS approach? This is an incredibly complex and deep question that we would like to explore in future. Some of the directions that we have in mind include:</p>\n<ul>\n<li>How do we quantifiably measure security? Is there a way for a protocol to see its security? Credit to the contributions from the StakeSure (<a href=\"https://arxiv.org/abs/2401.05797\" rel=\"noopener nofollow ugc\">link</a>) paper in this direction.</li>\n<li>Guided by MVS, rather than focusing on value creation through cost reductions, we should instead consider the value creation by improving security and neutrality. There is a heuristic argument that increasing issuance can improve security through making the network more complex via a more diverse validator set. Is there a way to make this precise? How do we make sure that the extra issued ETH strictly improves security and neutrality?</li>\n<li>Is there a case for a marginal improvement analysis: the more diverse the validator set is, the more complex the network becomes, and improvements to security could have increasing marginal contributions. (Similar to how complexity contributes to entropy and layered security, <a href=\"https://people.math.harvard.edu/~ctm/home/text/others/shannon/entropy/entropy.pdf\" rel=\"noopener nofollow ugc\">link</a>)</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/f/1f6daf84bc2dfabd3b7747f049d71b9597079ddb.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/1f6daf84bc2dfabd3b7747f049d71b9597079ddb\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/f/1f6daf84bc2dfabd3b7747f049d71b9597079ddb_2_690x389.jpeg\" alt=\"image\" data-base62-sha1=\"4u1NIExqUrv0gLSwh1F4Ahrg4jx\" width=\"690\" height=\"389\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/f/1f6daf84bc2dfabd3b7747f049d71b9597079ddb_2_690x389.jpeg, https://ethresear.ch/uploads/default/optimized/3X/1/f/1f6daf84bc2dfabd3b7747f049d71b9597079ddb_2_1035x583.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/1/f/1f6daf84bc2dfabd3b7747f049d71b9597079ddb_2_1380x778.jpeg 2x\" data-dominant-color=\"F7F6F5\"></a></div><p></p>\n<hr>\n<p><em>Disclosure: authors are variously affiliated with cyber.fund, Lido DAO, Steakhouse Financial, Progrmd Capital</em></p>\n            <p><small>3 posts - 3 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992\">Read full topic</a></p>","link":"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992","pubDate":"Sat, 06 Jul 2024 21:56:34 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19992"},"source":{"@url":"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992.rss","#text":"Maximum Viable Security: A New Framing for Ethereum Issuance"},"filter":false},{"title":"Releasing Constantine v0.1.0, a modular cryptography stack for Ethereum","dc:creator":"mratsim","category":"Cryptography","description":"<p>I am very proud to release the very first version of <a href=\"https://github.com/mratsim/constantine\" rel=\"noopener nofollow ugc\">Constantine</a>, a high-performance modular cryptography stack for blockchains and proof systems.<br>\nIt is currently as of July 2024 the fastest implementation of Ethereum-specific cryptographic primitives:</p>\n<ul>\n<li>BLS signatures</li>\n<li>BN254 precompiles (EIP-196 and EIP-197, repriced in EIP-1108)</li>\n<li>BLS12-381 precompiles (EIP-2537)</li>\n<li>KZG Polynomial commitments (EIP-4844)</li>\n</ul>\n<p>Constantine has bindings in C, Go, Nim and Rust.</p>\n<h2><a name=\"history-1\" class=\"anchor\" href=\"https://ethresear.ch#history-1\"></a>History</h2>\n<p>Constantine is written in <a href=\"https://nim-lang.org/\" rel=\"noopener nofollow ugc\">Nim</a>, the language was chosen by Status for Nimbus for its expressiveness, its type system strength, the ease to wrap C and C++ and syntactic closeness to Python so that ethereum/research and PyEVM could be ported with ease.</p>\n<p>In February 2018, after woes with C++ in Nimbus, the first library I built was a fixed precision big integer library for uint256.<br>\nThen we (at Status) realized that we would also need elliptic curves for secp256k1 and BN254 (also known as BN256 or alt_bn128).</p>\n<p>How hard could it be to implement elliptic curves, with cryptographic hardening, once you know how to write big integers?</p>\n<p>Turned out it was too hard, after a week or so another approach was taken for time-to-market and correctness reasons:</p>\n<ul>\n<li>Use libsecp256k1 from Bitcoin</li>\n<li>Port 1-1 bncurves from Zcash for BN254</li>\n<li>Use Apache Milagro for BLS12-381</li>\n</ul>\n<p>It was then restarted as a personal side-project in February 2020 after learning a lot from implementing hashing-to-curve and Ethereum BLS signatures and identifying significant performance gap. <em>Note that this predates BLST which was initially released in June 2020.</em></p>\n<p>Since then Constantine has seen regular contributions (sometimes with couple months gap) up to where it is today.</p>\n<h2><a name=\"performance-2\" class=\"anchor\" href=\"https://ethresear.ch#performance-2\"></a>Performance</h2>\n<h3><a name=\"ethereum-bls-signatures-consensus-layer-3\" class=\"anchor\" href=\"https://ethresear.ch#ethereum-bls-signatures-consensus-layer-3\"></a>Ethereum BLS signatures (Consensus Layer)</h3>\n<p>Benchmarks are done on an AMD Ryzen 7840U, a low-power ultra-mobile 8-core CPU from 2023.</p>\n<h4><a name=\"blst-through-nim-blscurve-4\" class=\"anchor\" href=\"https://ethresear.ch#blst-through-nim-blscurve-4\"></a>BLST (through nim-blscurve)</h4>\n<p>Nim-blscurve is the backend of Nimbus-eth2. As Nim compiles to machine code through C (or C++), calling C has zero-overhead from Nim.</p>\n<p>Repro.<br>\nInstall the latest Nim version, Nim v2.0.8.</p>\n<pre><code class=\"lang-auto\">git clone https://github.com/status-im/nim-blscurve\ncd nim-blscurve\ngit submodule update --init\nnimble bench\n</code></pre>\n<p>2 benchmarks will be done with 2 different memory management solutions (different implementations of refcounting)<br>\nBLST is as-of v0.3.12 (May 2024) with runtime CPU features detection</p>\n<pre><code class=\"lang-auto\">Backend: BLST, mode: 64-bit\n====================================================================================================================================\n\nScalar multiplication G1 (255-bit, constant-time)                             10332.180 ops/s        96785 ns/op       318784 cycles\nScalar multiplication G2 (255-bit, constant-time)                              4622.247 ops/s       216345 ns/op       712585 cycles\nEC add G1 (constant-time)                                                   1795332.136 ops/s          557 ns/op         1836 cycles\nEC add G2 (constant-time)                                                    713775.874 ops/s         1401 ns/op         4617 cycles\n------------------------------------------------------------------------------------------------------------------------------------\nPairing (Miller loop + Final Exponentiation)                                   1484.823 ops/s       673481 ns/op      2218271 cycles\n------------------------------------------------------------------------------------------------------------------------------------\nHash to G2 (Draft #9) + affine conversion                                      6795.232 ops/s       147162 ns/op       484712 cycles\n------------------------------------------------------------------------------------------------------------------------------------\nBLS signature                                                                  3490.864 ops/s       286462 ns/op       943532 cycles\nBLS verification                                                               1212.302 ops/s       824877 ns/op      2716928 cycles\nBLS agg verif of 1 msg by 128 pubkeys                                          1139.886 ops/s       877281 ns/op      2889519 cycles\n------------------------------------------------------------------------------------------------------------------------------------\nBLS verif of 6 msgs by 6 pubkeys                                                203.231 ops/s      4920498 ns/op     16206824 cycles\nSerial batch verify 6 msgs by 6 pubkeys (with blinding)                         359.968 ops/s      2778025 ns/op      9150078 cycles\nParallel batch verify of 6 msgs by 6 pubkeys (with blinding)                    615.452 ops/s      1624822 ns/op      5351722 cycles\n------------------------------------------------------------------------------------------------------------------------------------\nBLS verif of 60 msgs by 60 pubkeys                                               20.310 ops/s     49236672 ns/op    162172626 cycles\nSerial batch verify 60 msgs by 60 pubkeys (with blinding)                        42.709 ops/s     23414406 ns/op     77120772 cycles\nParallel batch verify of 60 msgs by 60 pubkeys (with blinding)                  250.298 ops/s      3995236 ns/op     13159139 cycles\n------------------------------------------------------------------------------------------------------------------------------------\nBLS verif of 180 msgs by 180 pubkeys                                              6.746 ops/s    148237745 ns/op    488256390 cycles\nSerial batch verify 180 msgs by 180 pubkeys (with blinding)                      14.419 ops/s     69354258 ns/op    228434104 cycles\nParallel batch verify of 180 msgs by 180 pubkeys (with blinding)                 99.467 ops/s     10053540 ns/op     33113513 cycles\n------------------------------------------------------------------------------------------------------------------------------------\n\nUsing nthreads = 16. The number of threads can be changed with TP_NUM_THREADS environment variable.\n</code></pre>\n<h4><a name=\"constantine-5\" class=\"anchor\" href=\"https://ethresear.ch#constantine-5\"></a>Constantine</h4>\n<p>GCC generates poor code everwhere assembly is not used, hence we force Clang as a compiler.</p>\n<pre><code class=\"lang-auto\">git clone https://github.com/mratsim/constantine\ncd constantine\nCC=clang nimble bench_eth_bls_signatures\n</code></pre>\n<pre><code class=\"lang-auto\">--------------------------------------------------------------------------------------------------------------------------------------------------\nPubkey deserialization (full checks)                                                     BLS12_381 G1          22295.550 ops/s         44852 ns/op        147729 CPU cycles (approx)\nPubkey deserialization (skip checks)                                                     BLS12_381 G1          92515.496 ops/s         10809 ns/op         35602 CPU cycles (approx)\nSignature deserialization (full checks)                                                  BLS12_381 G2          16808.418 ops/s         59494 ns/op        195958 CPU cycles (approx)\nSignature deserialization (skip checks)                                                  BLS12_381 G2          46453.291 ops/s         21527 ns/op         70906 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------------------------\nBLS signature                                                                            BLS12_381 G2           4005.078 ops/s        249683 ns/op        822392 CPU cycles (approx)\nBLS verification                                                                         BLS12_381              1498.960 ops/s        667129 ns/op       2197347 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------------------------\nBLS agg verif of 1 msg by 128 pubkeys                                                    BLS12_381              1423.694 ops/s        702398 ns/op       2313504 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------------------------\nBLS verif of 6 msgs by 6 pubkeys                                                         BLS12_381               249.683 ops/s       4005085 ns/op      13191614 CPU cycles (approx)\nBLS serial batch verify of 6 msgs by 6 pubkeys (with blinding)                           BLS12_381               420.912 ops/s       2375795 ns/op       7825187 CPU cycles (approx)\nBLS parallel batch verify (16 threads) of 6 msgs by 6 pubkeys (with blinding)            BLS12_381               683.399 ops/s       1463273 ns/op       4819062 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------------------------\nBLS verif of 60 msgs by 60 pubkeys                                                       BLS12_381                24.863 ops/s      40220998 ns/op     132477024 CPU cycles (approx)\nBLS serial batch verify of 60 msgs by 60 pubkeys (with blinding)                         BLS12_381                48.878 ops/s      20459201 ns/op      67387049 CPU cycles (approx)\nBLS parallel batch verify (16 threads) of 60 msgs by 60 pubkeys (with blinding)          BLS12_381               280.961 ops/s       3559207 ns/op      11722847 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------------------------\nBLS verif of 180 msgs by 180 pubkeys                                                     BLS12_381                 8.334 ops/s     119995222 ns/op     395232558 CPU cycles (approx)\nBLS serial batch verify of 180 msgs by 180 pubkeys (with blinding)                       BLS12_381                16.488 ops/s      60650899 ns/op     199767961 CPU cycles (approx)\nBLS parallel batch verify (16 threads) of 180 msgs by 180 pubkeys (with blinding)        BLS12_381               112.215 ops/s       8911481 ns/op      29351939 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------------------------\n</code></pre>\n<h4><a name=\"analysis-6\" class=\"anchor\" href=\"https://ethresear.ch#analysis-6\"></a>Analysis</h4>\n<ul>\n<li>15% performance improvement on signatures</li>\n<li>24% performance improvement on verification</li>\n</ul>\n<p>Furthermore, it is in theory possible to achieve a 2x performance improvement for signing if there is a need for it.</p>\n<h3><a name=\"kzg-polynomial-commitment-for-eip-4844-consensus-layer-7\" class=\"anchor\" href=\"https://ethresear.ch#kzg-polynomial-commitment-for-eip-4844-consensus-layer-7\"></a>KZG Polynomial commitment for EIP-4844 (Consensus Layer)</h3>\n<p>I will reuse my benchmarks from Dec, 2023: <a href=\"https://github.com/mratsim/constantine/pull/304#issuecomment-1844795359\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Productionize KZG EIP-4844 by mratsim · Pull Request #304 · mratsim/constantine · GitHub</a></p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Bench</th>\n<th style=\"text-align:center\">c-kzg-4844 (serial)</th>\n<th style=\"text-align:center\">go-kzg-4844 (serial)</th>\n<th style=\"text-align:center\">go-kzg-4844 (parallel)</th>\n<th style=\"text-align:center\">constantine (serial)</th>\n<th style=\"text-align:center\">constantine (parallel)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">blob_to_kzg_commitment</td>\n<td style=\"text-align:center\">37.773 ms</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">5.823 ms</td>\n<td style=\"text-align:center\">23.765 ms</td>\n<td style=\"text-align:center\">4.425 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">compute_kzg_proof</td>\n<td style=\"text-align:center\">39.945 ms</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">7.146 ms</td>\n<td style=\"text-align:center\">24.255 ms</td>\n<td style=\"text-align:center\">4.710 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">compute_blob_kzg_proof</td>\n<td style=\"text-align:center\">40.212 ms</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">7.205 ms</td>\n<td style=\"text-align:center\">24.288 ms</td>\n<td style=\"text-align:center\">4.794 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">verify_kzg_proof</td>\n<td style=\"text-align:center\">0.915 ms</td>\n<td style=\"text-align:center\">0.923 ms</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">0.782 ms</td>\n<td style=\"text-align:center\">-</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">verify_blob_kzg_proof</td>\n<td style=\"text-align:center\">1.531 ms</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">1.390 ms</td>\n<td style=\"text-align:center\">1.266 ms</td>\n<td style=\"text-align:center\">1.113 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">verify_blob_kzg_proof_batch 1</td>\n<td style=\"text-align:center\">1.528 ms</td>\n<td style=\"text-align:center\">1.392 ms</td>\n<td style=\"text-align:center\">1.405 ms</td>\n<td style=\"text-align:center\">1.286 ms</td>\n<td style=\"text-align:center\">1.130 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">verify_blob_kzg_proof_batch 2</td>\n<td style=\"text-align:center\">2.589 ms</td>\n<td style=\"text-align:center\">3.233 ms</td>\n<td style=\"text-align:center\">1.591 ms</td>\n<td style=\"text-align:center\">2.006 ms</td>\n<td style=\"text-align:center\">1.152 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">verify_blob_kzg_proof_batch 4</td>\n<td style=\"text-align:center\">4.553 ms</td>\n<td style=\"text-align:center\">4.671 ms</td>\n<td style=\"text-align:center\">1.914 ms</td>\n<td style=\"text-align:center\">3.437 ms</td>\n<td style=\"text-align:center\">1.250 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">verify_blob_kzg_proof_batch 8</td>\n<td style=\"text-align:center\">8.446 ms</td>\n<td style=\"text-align:center\">7.410 ms</td>\n<td style=\"text-align:center\">2.738 ms</td>\n<td style=\"text-align:center\">6.115 ms</td>\n<td style=\"text-align:center\">1.891 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">verify_blob_kzg_proof_batch 16</td>\n<td style=\"text-align:center\">16.228 ms</td>\n<td style=\"text-align:center\">12.734 ms</td>\n<td style=\"text-align:center\">3.542 ms</td>\n<td style=\"text-align:center\">11.567 ms</td>\n<td style=\"text-align:center\">3.091 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">verify_blob_kzg_proof_batch 32</td>\n<td style=\"text-align:center\">32.016 ms</td>\n<td style=\"text-align:center\">23.048 ms</td>\n<td style=\"text-align:center\">7.215 ms</td>\n<td style=\"text-align:center\">21.779 ms</td>\n<td style=\"text-align:center\">6.764 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">verify_blob_kzg_proof_batch 64</td>\n<td style=\"text-align:center\">63.415 ms</td>\n<td style=\"text-align:center\">43.224 ms</td>\n<td style=\"text-align:center\">14.438 ms</td>\n<td style=\"text-align:center\">43.099 ms</td>\n<td style=\"text-align:center\">11.538 ms</td>\n</tr>\n</tbody>\n</table>\n</div><ul>\n<li>A 37% performance improvement over c-kzg-4844 for serial commitment</li>\n<li>A 39% improvement for proof generation</li>\n<li>A 17% improvement for a single blob verification</li>\n<li>A 32% improvement for 64 blob verification</li>\n</ul>\n<p>And Constantine offers paralellization to improve those numbers 4~6x on my 8-core machine.</p>\n<h3><a name=\"evm-precompiles-execution-layer-8\" class=\"anchor\" href=\"https://ethresear.ch#evm-precompiles-execution-layer-8\"></a>EVM precompiles (Execution Layer)</h3>\n<p>Note:</p>\n<ul>\n<li>Constantine also offers a fast MODEXP precompile that reaches 80% to 110% of GMP, without assembly.</li>\n<li>SHA256 is faster than OpenSSL and BLST for data size less than 4MB and within 3% otherwise.</li>\n</ul>\n<pre><code class=\"lang-auto\">git clone https://github.com/mratsim/constantine\ncd constantine\nCC=clang nimble bench_eth_evm_precompiles\n</code></pre>\n<pre><code class=\"lang-auto\">--------------------------------------------------------------------------------------------------------------------------------\nSHA256 -  32 bytes            72 gas    1714.29 MGas/s    23809523.810 ops/s           42 ns/op          140 CPU cycles (approx)\nSHA256 -  64 bytes            84 gas    1584.91 MGas/s    18867924.528 ops/s           53 ns/op          176 CPU cycles (approx)\nSHA256 -  96 bytes            96 gas    1777.78 MGas/s    18518518.519 ops/s           54 ns/op          179 CPU cycles (approx)\nSHA256 - 128 bytes           108 gas    1333.33 MGas/s    12345679.012 ops/s           81 ns/op          267 CPU cycles (approx)\nSHA256 - 160 bytes           120 gas    1481.48 MGas/s    12345679.012 ops/s           81 ns/op          268 CPU cycles (approx)\nSHA256 - 192 bytes           132 gas    1233.64 MGas/s     9345794.393 ops/s          107 ns/op          353 CPU cycles (approx)\nSHA256 - 224 bytes           144 gas    1321.10 MGas/s     9174311.927 ops/s          109 ns/op          359 CPU cycles (approx)\nSHA256 - 256 bytes           156 gas    1130.43 MGas/s     7246376.812 ops/s          138 ns/op          454 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------\nBN254_G1ADD                  150 gas      87.41 MGas/s      582750.583 ops/s         1716 ns/op         5652 CPU cycles (approx)\nBN254_G1MUL                 6000 gas     229.66 MGas/s       38276.047 ops/s        26126 ns/op        86050 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------\nBN254_PAIRINGCHECK 1       79000 gas     166.99 MGas/s        2113.754 ops/s       473092 ns/op      1558009 CPU cycles (approx)\nBN254_PAIRINGCHECK 2      113000 gas     191.99 MGas/s        1699.056 ops/s       588562 ns/op      1938370 CPU cycles (approx)\nBN254_PAIRINGCHECK 3      147000 gas     183.15 MGas/s        1245.930 ops/s       802613 ns/op      2642801 CPU cycles (approx)\nBN254_PAIRINGCHECK 4      181000 gas     191.76 MGas/s        1059.434 ops/s       943900 ns/op      3108745 CPU cycles (approx)\nBN254_PAIRINGCHECK 5      215000 gas     169.72 MGas/s         789.374 ops/s      1266827 ns/op      4171120 CPU cycles (approx)\nBN254_PAIRINGCHECK 6      249000 gas     181.10 MGas/s         727.321 ops/s      1374909 ns/op      4528210 CPU cycles (approx)\nBN254_PAIRINGCHECK 7      283000 gas     189.03 MGas/s         667.965 ops/s      1497084 ns/op      4930714 CPU cycles (approx)\nBN254_PAIRINGCHECK 8      317000 gas     204.18 MGas/s         644.095 ops/s      1552566 ns/op      5113680 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------\nBLS12_G1ADD                  500 gas     164.10 MGas/s      328191.664 ops/s         3047 ns/op        10034 CPU cycles (approx)\nBLS12_G2ADD                  800 gas     161.75 MGas/s      202183.583 ops/s         4946 ns/op        16289 CPU cycles (approx)\nBLS12_G1MUL                12000 gas     141.66 MGas/s       11805.400 ops/s        84707 ns/op       279001 CPU cycles (approx)\nBLS12_G2MUL                45000 gas     325.51 MGas/s        7233.639 ops/s       138243 ns/op       455333 CPU cycles (approx)\nBLS12_MAP_FP_TO_G1          5500 gas     161.82 MGas/s       29422.149 ops/s        33988 ns/op       111947 CPU cycles (approx)\nBLS12_MAP_FP2_TO_G2        75000 gas     659.96 MGas/s        8799.486 ops/s       113643 ns/op       374305 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------\nBLS12_PAIRINGCHECK 1      108000 gas     216.83 MGas/s        2007.665 ops/s       498091 ns/op      1640562 CPU cycles (approx)\nBLS12_PAIRINGCHECK 2      151000 gas     222.00 MGas/s        1470.214 ops/s       680173 ns/op      2240287 CPU cycles (approx)\nBLS12_PAIRINGCHECK 3      194000 gas     219.98 MGas/s        1133.901 ops/s       881911 ns/op      2904762 CPU cycles (approx)\nBLS12_PAIRINGCHECK 4      237000 gas     222.97 MGas/s         940.782 ops/s      1062946 ns/op      3500927 CPU cycles (approx)\nBLS12_PAIRINGCHECK 5      280000 gas     221.08 MGas/s         789.576 ops/s      1266502 ns/op      4171417 CPU cycles (approx)\nBLS12_PAIRINGCHECK 6      323000 gas     223.09 MGas/s         690.679 ops/s      1447851 ns/op      4768780 CPU cycles (approx)\nBLS12_PAIRINGCHECK 7      366000 gas     222.28 MGas/s         607.311 ops/s      1646603 ns/op      5423299 CPU cycles (approx)\nBLS12_PAIRINGCHECK 8      409000 gas     221.94 MGas/s         542.640 ops/s      1842844 ns/op      6069597 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------\nBLS12_G1MSM   2            21312 gas     120.40 MGas/s        5649.430 ops/s       177009 ns/op       583004 CPU cycles (approx)\nBLS12_G1MSM   4            30768 gas     101.53 MGas/s        3299.960 ops/s       303034 ns/op       998108 CPU cycles (approx)\nBLS12_G1MSM   8            43488 gas      81.23 MGas/s        1867.787 ops/s       535393 ns/op      1763434 CPU cycles (approx)\nBLS12_G1MSM  16            64128 gas      66.43 MGas/s        1035.864 ops/s       965378 ns/op      3179510 CPU cycles (approx)\nBLS12_G1MSM  32           103296 gas      57.99 MGas/s         561.362 ops/s      1781382 ns/op      5867248 CPU cycles (approx)\nBLS12_G1MSM  64           170496 gas      50.89 MGas/s         298.504 ops/s      3350039 ns/op     11034035 CPU cycles (approx)\nBLS12_G1MSM 128           267264 gas      42.24 MGas/s         158.035 ops/s      6327700 ns/op     20841720 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------\nBLS12_G2MSM   2            79920 gas     269.62 MGas/s        3373.637 ops/s       296416 ns/op       976301 CPU cycles (approx)\nBLS12_G2MSM   4           115380 gas     225.12 MGas/s        1951.109 ops/s       512529 ns/op      1688121 CPU cycles (approx)\nBLS12_G2MSM   8           163080 gas     177.21 MGas/s        1086.654 ops/s       920256 ns/op      3031066 CPU cycles (approx)\nBLS12_G2MSM  16           240480 gas     130.56 MGas/s         542.920 ops/s      1841892 ns/op      6066436 CPU cycles (approx)\nBLS12_G2MSM  32           387360 gas     126.36 MGas/s         326.195 ops/s      3065648 ns/op     10097244 CPU cycles (approx)\nBLS12_G2MSM  64           639360 gas     118.26 MGas/s         184.965 ops/s      5406423 ns/op     17807268 CPU cycles (approx)\nBLS12_G2MSM 128          1002240 gas     100.70 MGas/s         100.471 ops/s      9953136 ns/op     32782906 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------\n</code></pre>\n<p>Constantine achieves over 200Mgas/s for a wide range of cryptographic precompiles on a laptop CPU with restricted power consumption (7840U, 15W to 30W)</p>\n<p>note, I suggest a repricing for EIP-2537 to help SNARKS applications.</p>\n<h2><a name=\"security-9\" class=\"anchor\" href=\"https://ethresear.ch#security-9\"></a>Security</h2>\n<p>Constantine, as it names indicates, as a strong focus on security and especially constant-time cryptography is used by default in the core of the library.<br>\nIt HAS NOT been audited yet, but it has undergone extensive fuzzing by Guido Vranken, thanks to the sponsoring of the Ethereum Foundation in Summer 2023. It has also been added to OSS-Fuzz (<a href=\"https://github.com/google/oss-fuzz/pull/10710\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">[bls-signatures] Remove Chia, add Constantine by guidovranken · Pull Request #10710 · google/oss-fuzz · GitHub</a>), the Google 24/7 open-source fuzzing initiative.</p>\n<h2><a name=\"the-future-10\" class=\"anchor\" href=\"https://ethresear.ch#the-future-10\"></a>The Future</h2>\n<p>Constantine will follow and support future Ethereum cryptographic needs. In particular I thank the Ethereum Foundation Fellowship Program and Status for sponsoring work on implementing Verkle Tries in Constantine the past year.</p>\n<p>Constantine also supports accelerating Zero-Knowledge proof systems, for example it is possible to use it through PSE (Privacy Scaling Explorations, a branch of the EF) Halo2: <a href=\"https://github.com/mratsim/constantine/pull/308\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">ZAL: ZK Accel Layer by mratsim · Pull Request #308 · mratsim/constantine · GitHub</a>.</p>\n<p>Constantine has the fastest MSM on x86, all libraries benchmarked as of July 2024 (Arkworks, Barretenberg, Bellman, Gnark, Halo2) and by a factor 2x over popular Rust libraries Arkworks and Halo2. And I do plan to build proof systems on top.</p>\n<p>Hidden in Constantine is a compiler for GPU code generation and there are plans for accelerating ARM.</p>\n<p>Now I don’t know what a snarkified EVM will look like, but I certainly hope to contribute to make it a reality.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/releasing-constantine-v0-1-0-a-modular-cryptography-stack-for-ethereum/19990\">Read full topic</a></p>","link":"https://ethresear.ch/t/releasing-constantine-v0-1-0-a-modular-cryptography-stack-for-ethereum/19990","pubDate":"Sat, 06 Jul 2024 11:01:41 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19990"},"source":{"@url":"https://ethresear.ch/t/releasing-constantine-v0-1-0-a-modular-cryptography-stack-for-ethereum/19990.rss","#text":"Releasing Constantine v0.1.0, a modular cryptography stack for Ethereum"},"filter":false},{"title":"Reputation-Centric Light Client Framework for Optimistic Rollups","dc:creator":"marcellobardus","category":"Optimisitic Rollup","description":"<p>Authors: <a href=\"https://x.com/0xmarcello\" rel=\"noopener nofollow ugc\">Marcello Bardus</a> (<a href=\"https://x.com/HerodotusDev\" rel=\"noopener nofollow ugc\">Herodotus</a>), <a href=\"https://x.com/kacperkozi\" rel=\"noopener nofollow ugc\">Kacper Koziol</a> (<a href=\"https://x.com/HerodotusDev\" rel=\"noopener nofollow ugc\">Herodotus</a>)</p>\n<p>Thanks for early feedback: <a href=\"https://x.com/bonustrack87\" rel=\"noopener nofollow ugc\">bonustrack87</a> (<a href=\"https://x.com/SnapshotLabs\" rel=\"noopener nofollow ugc\">Snapshot Labs</a>), <a href=\"https://x.com/lsukernik\" rel=\"noopener nofollow ugc\">Larry Sukernik</a> (<a href=\"https://x.com/hi_reverie\" rel=\"noopener nofollow ugc\">Reverie</a>), <a href=\"https://x.com/piapark_eth\" rel=\"noopener nofollow ugc\">Pia Park</a> (<a href=\"https://x.com/HerodotusDev\" rel=\"noopener nofollow ugc\">Herodotus</a>), <a href=\"https://x.com/wojtekwtf\" rel=\"noopener nofollow ugc\">Wojtek</a> (<a href=\"https://www.supercast.xyz/\" rel=\"noopener nofollow ugc\">Supercast</a>),</p>\n<h1><a name=\"summary-1\" class=\"anchor\" href=\"https://ethresear.ch#summary-1\"></a>Summary:</h1>\n<p>This post introduces a conceptual framework for a reputation-centric light client system designed to address critical challenges in Optimistic Rollups (ORUs), with a primary focus on enabling fast finality for accessing ORU data from Ethereum, ORUs and other Ethereum layers. At its core, the system leverages the Herodotus Data Processor to compute sequencer reputation scores based on the sequencer’s historical behavior, including their track record of submitting valid output roots and avoiding successful challenges. This allows light clients to trust output roots only from sequencers with an impeccable track record without waiting for the full dispute period. This approach significantly reduces finality time while maintaining security. The framework includes a punitive measure that resets a sequencer’s reputation upon successful challenges, ensuring system integrity. Additionally, a fallback mechanism reverts to the standard seven-day dispute period in cases of unresolved conflicts or detected irregularities.</p>\n<h3><a name=\"reputation-centric-light-client-framework-for-optimistic-rollups-2\" class=\"anchor\" href=\"https://ethresear.ch#reputation-centric-light-client-framework-for-optimistic-rollups-2\"></a>Reputation-Centric Light Client Framework for Optimistic Rollups</h3>\n<p>Optimistic Rollups have seen significant adoption, however, they encounter several challenges, particularly in terms of finality time and data verification. This post introduces a conceptual framework for a reputation-centric light client system that aims to address these issues, enabling fast finality for accessing ORU data from Ethereum, and from other Ethereum layers.</p>\n<p>OP Stack and other Optimistic Rollups (ORUs) have a security model based on fraud proofs. In this model, anyone can act as a sequencer, also known as a proposer. The sequencer first proposes the rollup state to Layer 1 (L1), after which a seven-day window is opened. During this period, anyone can challenge the correctness of the proposed state.</p>\n<p>In ORU implementations such as OP Stack, proposers periodically submit output roots to L1. These output roots are a hash of certain L2 state information, including the state root, block number, and timestamp of the latest L2 block. OP Stack incorporates a specification for a fault proof system with bonding, which creates incentives for proposers to submit correct output roots.</p>\n<p>This mechanism imposes a long finality time for ORUs, which is problematic for Storage Proofs, a secure on-chain data access solution that Herodotus has previously developed for Optimism and several other ORU ecosystems. This is especially problematic following recent upgrades that introduced permissionless fraud proofs on Optimism. With these upgrades, no assumptions can be made about where a valid state root can be found.</p>\n<h2><a name=\"secure-data-access-and-processing-3\" class=\"anchor\" href=\"https://ethresear.ch#secure-data-access-and-processing-3\"></a>Secure Data Access and Processing</h2>\n<p>The framework incorporates two crucial components:</p>\n<h3><a name=\"storage-proofs-4\" class=\"anchor\" href=\"https://ethresear.ch#storage-proofs-4\"></a>Storage Proofs</h3>\n<p>Storage Proofs are a secure on-chain data access primitive utilized by the Herodotus Data Processor that enables the cryptographic proving of the provenance of on-chain data. They allow for the verification of any data available on Ethereum, including current and historical balances, transactions, user interactions, liquidations, and more. Storage Proofs also enable the trustless and secure reading of data from arbitrary Ethereum Layers.</p>\n<p>By utilizing Storage Proofs, the Herodotus Data Processor can ensure the integrity and authenticity of the on-chain data it processes, providing a foundation of trust for its computations.</p>\n<h3><a name=\"data-processing-component-5\" class=\"anchor\" href=\"https://ethresear.ch#data-processing-component-5\"></a>Data Processing Component</h3>\n<p>This would leverage the Herodotus Data Processor (HDP) to compute sequencer reputation scores efficiently. HDP can be thought of as a zk-coprocessor, capable of performing computations on verified data. Storage Proofs guarantee the integrity of the input data to HDP. Custom computations can be defined using HDP Modules, which can later process the verified historical data and update reputation scores based on the defined criteria, such as the consistency of avoiding challenges and the validity of proposed output roots over time.</p>\n<h2><a name=\"reputation-based-light-client-6\" class=\"anchor\" href=\"https://ethresear.ch#reputation-based-light-client-6\"></a>Reputation based light client</h2>\n<p>In our design, a sequencer, identified by an Ethereum address, would be assumed to be the most trustworthy based on the following criteria:</p>\n<ul>\n<li>The sequencer consistently avoids challenges, or any initiated challenges against them are unsuccessful.</li>\n<li>The validity of the sequencer’s proposed output roots over time, as proven by the lack of successful fault proofs against their outputs.</li>\n</ul>\n<p>In OP Stack implementations like Bedrock, and potentially in other ORUs, output roots represent a compact summary of the L2 state at a specific block. These output roots are not Merkle roots of the entire canonical L2 chain, but rather a hash of certain L2 state information. Bonded proposers periodically submit these output roots to L1.</p>\n<p>The output root typically includes a hash of the following information:</p>\n<ol>\n<li>The state root of the L2 block</li>\n<li>The L2 block number</li>\n<li>The timestamp of the L2 block</li>\n<li>The hash of the L2 block itself</li>\n</ol>\n<p>This structure allows for efficient verification of specific L2 state information without requiring the entire L2 chain data on L1.</p>\n<p>Once a highly reputable sequencer posts a claimed output root to L1, a Light Client contract would assume the claim is valid and treat it as final. This approach ensures that only sequencers with an impeccable track record are trusted, significantly reducing the finality time while relying on the cryptographically proven historical reliability of the sequencer rather than waiting for the full dispute period.</p>\n<p>The Light Client contract would store the full output roots proposed by reputable sequencers, not just the block hash, enabling trustless proof of claims like withdrawals against the output roots directly.</p>\n<p>The reputation of the sequencer can be periodically updated using the Herodotus Data Processor. This involves assessing historical data to ensure the sequencer continues to meet the criteria of reliability and activity. By continuously evaluating the sequencer’s performance and updating their reputation at fixed intervals, the Light Client can maintain a high level of trust and accuracy in the state roots it accepts.</p>\n<h2><a name=\"system-architecture-7\" class=\"anchor\" href=\"https://ethresear.ch#system-architecture-7\"></a>System Architecture</h2>\n<h2><a name=\"h-326x4111935069506181uploadpmywafztk4c8h3awxejv5ig72gppng-8\" class=\"anchor\" href=\"https://ethresear.ch#h-326x4111935069506181uploadpmywafztk4c8h3awxejv5ig72gppng-8\"></a><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/4/b4b3807ab51eeeb259a9c7c08890b13cd0910b23.png\" data-download-href=\"https://ethresear.ch/uploads/default/b4b3807ab51eeeb259a9c7c08890b13cd0910b23\" title=\"|326x411.1935069506181\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/4/b4b3807ab51eeeb259a9c7c08890b13cd0910b23_2_396x500.png\" alt=\"|326x411.1935069506181\" data-base62-sha1=\"pMywAFztk4c8h3aWxEjv5Ig72gP\" width=\"396\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/4/b4b3807ab51eeeb259a9c7c08890b13cd0910b23_2_396x500.png, https://ethresear.ch/uploads/default/optimized/3X/b/4/b4b3807ab51eeeb259a9c7c08890b13cd0910b23_2_594x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/4/b4b3807ab51eeeb259a9c7c08890b13cd0910b23_2_792x1000.png 2x\" data-dominant-color=\"F2F4F7\"></a></div></h2>\n<p>The proposed system would operate as follows:</p>\n<ol>\n<li>Proposers submit output root proposals to the appropriate ORU contracts on L1, based on the state of the ORU L2 chain.</li>\n<li>The ORU L1 contracts handle both output root proposals and challenges/fault proofs against these proposals.</li>\n<li>The Herodotus Data Processor retrieves and processes data from the ORU L1 contracts, including output root proposals and challenges/fault proofs.</li>\n<li>The reputation-based light client contract uses the processed data from the Herodotus Data Processor to track sequencer reputation scores and store trusted output roots. A custom reputation calculation formula can be implemented, allowing for flexible and adaptable assessment of sequencer reliability based on various factors and weighting systems as deemed appropriate for the specific ORU implementation.</li>\n<li>The light client interface allows other contracts to query the state root of the L2 chain based on the most reputable sequencer’s output roots.</li>\n</ol>\n<h2><a name=\"handling-successful-challenges-9\" class=\"anchor\" href=\"https://ethresear.ch#handling-successful-challenges-9\"></a>Handling Successful Challenges</h2>\n<p>In the event that any challenge against a sequencer is successful, the reputation of the sequencer would immediately reset to zero in the light client. This punitive measure ensures that only sequencers with an impeccable track record maintain trusted status.</p>\n<p>With fault proof systems like those in OP Stack’s Bedrock, the Light Client contract would automatically reset a sequencer’s reputation to zero if a fault proof is successfully submitted and verified, showing an invalid output root proposed by that sequencer. This automated process ensures swift and consistent enforcement of the reputation system.</p>\n<p>The permissionless output proposal mechanism provides an objective way to track sequencer reputation over time and identify potentially malicious outputs. Simultaneously, the output roots proposed by sequencers enable the verification of Storage Proofs against these proposed L2 state roots when using the Light Client. Ultimately, this approach creates a self-regulating system that not only incentivizes honest behavior but also ensures quick penalization of any attempts at fraud, thereby maintaining the overall reliability and security of the network.</p>\n<h3><a name=\"fallback-mechanism-10\" class=\"anchor\" href=\"https://ethresear.ch#fallback-mechanism-10\"></a>Fallback Mechanism</h3>\n<p>In cases of unresolved conflicts or when the system detects any irregularities, it would automatically fall back to the conservative seven-day dispute period. This would ensure that the system remains secure and trustworthy, even in the face of unexpected challenges or disagreements among reputable sequencers.</p>\n<h2><a name=\"potential-impact-and-future-directions-11\" class=\"anchor\" href=\"https://ethresear.ch#potential-impact-and-future-directions-11\"></a>Potential Impact and Future Directions</h2>\n<p>We believe that this reputation-based light client framework has the potential to significantly decrease duration to finality for ORUs. By reducing finality times while maintaining security, it could substantially improve the user experience and enable new use cases in L2 ecosystems.</p>\n<p>As we continue to explore and refine this concept, we welcome input from the community. The next steps would involve further theoretical analysis, simulations, and potentially, prototype implementations.</p>\n<h1><a name=\"references-12\" class=\"anchor\" href=\"https://ethresear.ch#references-12\"></a>References</h1>\n<p>Optimism Bedrock Documentation: <a href=\"https://community.optimism.io/docs/developers/bedrock\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Bedrock Explainer | Optimism Docs</a></p>\n<p>L2 Output Root Proposals Specification: <a href=\"https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/proposals.md\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">optimism/specs/proposals.md at 65ec61dde94ffa93342728d324fecf474d228e1f · ethereum-optimism/optimism · GitHub</a></p>\n            <p><small>3 posts - 3 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/reputation-centric-light-client-framework-for-optimistic-rollups/19988\">Read full topic</a></p>","link":"https://ethresear.ch/t/reputation-centric-light-client-framework-for-optimistic-rollups/19988","pubDate":"Fri, 05 Jul 2024 22:01:41 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19988"},"source":{"@url":"https://ethresear.ch/t/reputation-centric-light-client-framework-for-optimistic-rollups/19988.rss","#text":"Reputation-Centric Light Client Framework for Optimistic Rollups"},"filter":false},{"title":"Gossipsub Message Propagation Latency","dc:creator":"yiannisbot","category":"Networking","description":"<h1><a name=\"summary-and-tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#summary-and-tldr-1\"></a>Summary and TL;DR</h1>\n<p>The ProbeLab team (<a href=\"https://probelab.io/\" rel=\"noopener nofollow ugc\">probelab.io </a>) is carrying out a study on the performance of Gossipsub in Ethereum’s P2P network. Following from our previous post on the <a href=\"https://ethresear.ch/t/ethereum-node-message-propagation-bandwidth-consumption/19952\">Ethereum Node Message Propagation Bandwidth Consumption</a>, in this post we investigate <strong>Gossipsub’s message propagation latency</strong>, i.e., how long it takes to have a message delivered to all nodes in the network. The target of the study is to identify the protocol components that consume the biggest share of network bandwidth. The study has been co-authored by <a class=\"mention\" href=\"https://ethresear.ch/u/cortze\">@cortze</a> and <a class=\"mention\" href=\"https://ethresear.ch/u/yiannisbot\">@yiannisbot</a>.</p>\n<p>For the purposes of this study, we have built a tool called <strong>Hermes, which acts as a GossipSub listener and tracer</strong> (<a href=\"https://github.com/probe-lab/hermes/\" rel=\"noopener nofollow ugc\">GitHub - probe-lab/hermes: A Gossipsub listener and tracer.</a>). Hermes subscribes to all relevant pubsub topics and traces all protocol interactions.</p>\n<p><strong>Study Description:</strong> Message propagation and arrival times are sensitive metrics for blockchain networks. We assume that the message is going to arrive to each peer “as fast as possible”, but in some cases, just because the core of the network achieved fast message delivery time, doesn’t mean that  message propagation to the entire network was done in time.</p>\n<p>In the particular case of Ethereum, with such strict message delivery deadlines, ensuring the messages arrive within a 4-second window is essential to reduce the probability of forks.</p>\n<p>In this study, we will approximate the average message propagation latency throughout the whole network.</p>\n<p><strong>TL;DR:</strong> Despite a relatively short dataset of 3 days, we could observe with high confidence that:</p>\n<ul>\n<li>98% of messages arrive prior to the 4-second mark.</li>\n<li>Lodestar seems to be the slowest client in terms of message arrival time, although this could also be related to when the arrivals are traced in the particular implementation.</li>\n<li>Nodes located in or near the core of the network (<a href=\"https://probelab.io/ethereum/discv5/2024-25/#geolocation\" rel=\"noopener nofollow ugc\">NA or EU</a>) do have certain advantages when it comes to receiving messages sooner. Although the traced locations do not show any worrying behaviour, it is worth pointing out that extra geographical centralization could exacerbate the differences even further.</li>\n</ul>\n<h1><a name=\"results-2\" class=\"anchor\" href=\"https://ethresear.ch#results-2\"></a>Results</h1>\n<p>The results in this report have been gathered from EF’s Xatu public datasets. We’ve fetched 3 days’ worth of data from the <code>beacon_api_eth_v2_beacon_block</code> table (from the 14th to the 16th of June).</p>\n<h2><a name=\"arrival-cdf-times-within-the-slot-3\" class=\"anchor\" href=\"https://ethresear.ch#arrival-cdf-times-within-the-slot-3\"></a>Arrival CDF times within the slot</h2>\n<p>The study starts by calculating the arrival time of all the blocks within the slot that they belong to. The calculation is done based on the slot number and the time since genesis, given that each slot lasts 12 seconds:</p>\n<pre data-code-wrap=\"go\"><code class=\"lang-go\">time_within_slot = arrival_time - (genesis_time + (slot * 12))\n</code></pre>\n<p>This measurement is crucial, as any block arrival beyond the 4 second mark is likely to generate a fork in some part of the network (as it can start receiving attestations of a non-proposed block).</p>\n<p>In this first graph, we observe that 98% of the blocks arrived within the 4-second mark, leaving only the remaining 2% of blocks exceeding it.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/8/d8861bec5a5ad5613b752e126153afffcd236c23.png\" data-download-href=\"https://ethresear.ch/uploads/default/d8861bec5a5ad5613b752e126153afffcd236c23\" title=\"CDF-propagation-latency\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/8/d8861bec5a5ad5613b752e126153afffcd236c23_2_517x309.png\" alt=\"CDF-propagation-latency\" data-base62-sha1=\"uTssA1Kx0LElhonQ1gYQg3omYYX\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/8/d8861bec5a5ad5613b752e126153afffcd236c23_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/d/8/d8861bec5a5ad5613b752e126153afffcd236c23_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/d/8/d8861bec5a5ad5613b752e126153afffcd236c23.png 2x\" data-dominant-color=\"FCFCFC\"></a></div><p></p>\n<p>The data was originated from the sentry nodes that are under the control of the Ethereum Foundation. These nodes include all the main client implementations in each of the locations, as shown in the following table:</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Continent</th>\n<th>Country</th>\n<th>Client</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>EU</td>\n<td>FI</td>\n<td>lighthouse</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>lodestar</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>nimbus</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>prysm</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>teku</td>\n</tr>\n<tr>\n<td>NA</td>\n<td>US</td>\n<td>lighthouse</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>lodestar</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>nimbus</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>prysm</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>teku</td>\n</tr>\n<tr>\n<td>OC</td>\n<td>AU</td>\n<td>lighthouse</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>lodestar</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>nimbus</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>prysm</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>teku</td>\n</tr>\n</tbody>\n</table>\n</div><p>When comparing the arrival times over the different sentry nodes (figure below), we do see slight differences between them. The exception of <code>Lodestar</code> catches our attention, as it has a less uniform tail in its distribution. However, the rest of the clients follow a similar trend, with 99% of messages arriving within the first 4 seconds.</p>\n<p>Since this data has been collected from the standard <a href=\"https://ethereum.github.io/beacon-APIs/#/Events/eventstream\" rel=\"noopener nofollow ugc\">event streamer Beacon API</a>, it is hard to explain the differences within each of the client implementations, as not only the libp2p codebase is written in different languages, but the message arrivals could also be timestamped at different moments of the message validation logic.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/0/60a95219771e0ec9bdc64265b87b0054bc877b83.png\" data-download-href=\"https://ethresear.ch/uploads/default/60a95219771e0ec9bdc64265b87b0054bc877b83\" title=\"gossipsub_arrival_times_within_slot_by_agent_on_mainnet_beacon_block\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/0/60a95219771e0ec9bdc64265b87b0054bc877b83_2_517x309.png\" alt=\"gossipsub_arrival_times_within_slot_by_agent_on_mainnet_beacon_block\" data-base62-sha1=\"dN6BvYnVJxCEK44ilYkPKC9CMO7\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/0/60a95219771e0ec9bdc64265b87b0054bc877b83_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/6/0/60a95219771e0ec9bdc64265b87b0054bc877b83_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/0/60a95219771e0ec9bdc64265b87b0054bc877b83.png 2x\" data-dominant-color=\"FBFAFA\"></a></div><p></p>\n<p>We were expecting to see different arrival times from different geographic locations, as the network geographical distribution seems to be concentrated within European and North American countries (<a href=\"https://probelab.io/ethereum/discv5/2024-24/#geolocation\" rel=\"noopener nofollow ugc\">link to the distribution</a>). The following graphs show that although there are indeed differences between countries or continents, they are minimal, with all the CDF distributions showing 98-99% of the block arrivals completing within the 4-second mark.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/e/bec7e4974200c56b0e35fe8e118e90b97ea4b873.png\" data-download-href=\"https://ethresear.ch/uploads/default/bec7e4974200c56b0e35fe8e118e90b97ea4b873\" title=\"gossipsub_arrival_times_within_slot_on_by_country_mainnet_beacon_block\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/e/bec7e4974200c56b0e35fe8e118e90b97ea4b873_2_517x309.png\" alt=\"gossipsub_arrival_times_within_slot_on_by_country_mainnet_beacon_block\" data-base62-sha1=\"rdIZfWCPqA6xbFUXi66zWPoBxRx\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/e/bec7e4974200c56b0e35fe8e118e90b97ea4b873_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/b/e/bec7e4974200c56b0e35fe8e118e90b97ea4b873_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/b/e/bec7e4974200c56b0e35fe8e118e90b97ea4b873.png 2x\" data-dominant-color=\"FBFBFB\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/d/bdd5349b57b1f35d0484f1d82e09c9bea1c358fe.png\" data-download-href=\"https://ethresear.ch/uploads/default/bdd5349b57b1f35d0484f1d82e09c9bea1c358fe\" title=\"gossipsub_arrival_times_within_slot_on_by_continent_mainnet_beacon_block\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/d/bdd5349b57b1f35d0484f1d82e09c9bea1c358fe_2_517x309.png\" alt=\"gossipsub_arrival_times_within_slot_on_by_continent_mainnet_beacon_block\" data-base62-sha1=\"r5l21fbGzZ70fBQk2YUE4dEycoK\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/d/bdd5349b57b1f35d0484f1d82e09c9bea1c358fe_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/b/d/bdd5349b57b1f35d0484f1d82e09c9bea1c358fe_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/b/d/bdd5349b57b1f35d0484f1d82e09c9bea1c358fe.png 2x\" data-dominant-color=\"FBFBFB\"></a></div><p></p>\n<h2><a name=\"arrival-times-4\" class=\"anchor\" href=\"https://ethresear.ch#arrival-times-4\"></a>Arrival times</h2>\n<p>The previous CDFs show that almost all the block arrivals happen within the expected time range. However, the plots do not reveal outliers, as CDFs are not sensitive to sudden network perturbations.</p>\n<p>Thus, the following graphs show the <code>maximum</code>, <code>median</code>, <code>mean</code>, and <code>minimum</code> block arrival times on time windows of 4 epochs (1536 seconds).</p>\n<p>We do not find large variations in the <code>minimum</code>, <code>mean</code> and the <code>median</code> distributions over the 3 day period. However, we do see that the maximum arrival time does vary quite significantly. We can observe that arrival times vary from 4 seconds to almost 12 seconds, almost exceeding the entire slot duration.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/2/92b9349d287acecc0903a14950d4876f1df18370.png\" data-download-href=\"https://ethresear.ch/uploads/default/92b9349d287acecc0903a14950d4876f1df18370\" title=\"msg-arrival-overall\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/2/92b9349d287acecc0903a14950d4876f1df18370_2_517x309.png\" alt=\"msg-arrival-overall\" data-base62-sha1=\"kVYvIVJtINukENEejh2iDdjl572\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/2/92b9349d287acecc0903a14950d4876f1df18370_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/9/2/92b9349d287acecc0903a14950d4876f1df18370_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/9/2/92b9349d287acecc0903a14950d4876f1df18370.png 2x\" data-dominant-color=\"F6F6F7\"></a></div><p></p>\n<p>Interestingly, there are differences when comparing the mean arrival times of the different client implementations. Lodestar seems to be the latest one receiving the messages in the mesh and presents quite a high variance, while Teku seems to be the one receiving the messages first, followed by Prysm.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/6/c65b77648c36d9692a84fa65efd21ac3043aadd9.png\" data-download-href=\"https://ethresear.ch/uploads/default/c65b77648c36d9692a84fa65efd21ac3043aadd9\" title=\"msg-arrival-by-agent\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/6/c65b77648c36d9692a84fa65efd21ac3043aadd9_2_517x309.png\" alt=\"msg-arrival-by-agent\" data-base62-sha1=\"siKvj465saDFJohcL21520ipMIp\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/6/c65b77648c36d9692a84fa65efd21ac3043aadd9_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/c/6/c65b77648c36d9692a84fa65efd21ac3043aadd9_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/c/6/c65b77648c36d9692a84fa65efd21ac3043aadd9.png 2x\" data-dominant-color=\"F3F1F0\"></a></div><p></p>\n<p>A similar pattern is also observed for the arrival time distribution by continent. As we could anticipate, European nodes receive slightly sooner messages than the North American and the Oceania ones. Although the difference is not significant, 0.6 seconds still keeps the arrival within the safety margins. However, this still showcases that there are some latency incentives to locate nodes in regions with lower latency, or in other words, around the core of the network (which, however, will, in turn, lead to more geographic centralization).</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/f/bf6284e07ea3c5f9c4473be8b629d95b514371ed.png\" data-download-href=\"https://ethresear.ch/uploads/default/bf6284e07ea3c5f9c4473be8b629d95b514371ed\" title=\"msg-arrival-by-continent\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/f/bf6284e07ea3c5f9c4473be8b629d95b514371ed_2_517x309.png\" alt=\"msg-arrival-by-continent\" data-base62-sha1=\"rj4gVd9NbjyS4wEj0Z6rB3aoJJj\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/f/bf6284e07ea3c5f9c4473be8b629d95b514371ed_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/b/f/bf6284e07ea3c5f9c4473be8b629d95b514371ed_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/b/f/bf6284e07ea3c5f9c4473be8b629d95b514371ed.png 2x\" data-dominant-color=\"F5F6F4\"></a></div><p></p>\n<h2><a name=\"correlation-between-arrival-times-and-size-of-the-messages-5\" class=\"anchor\" href=\"https://ethresear.ch#correlation-between-arrival-times-and-size-of-the-messages-5\"></a>Correlation between arrival times and size of the messages</h2>\n<p>When attempting to correlate our findings to ones described in the previous <a href=\"http://ethresear.ch\">ethresear.ch</a> <a href=\"https://ethresear.ch/t/big-block-diffusion-and-organic-big-blocks-on-ethereum/17346\">blog post</a> that investigated this issue in particular, we haven’t been able to see any major correlation between size and the arrival time of the blocks. Although the block size distribution achieved in three days isn’t fully representative, the following graph shows that most blocks stay within the 50KB to 150KB range with a similar arrival time of 1 to 3 seconds.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/0/9/0905bc564c76545c3e9fc2c983edcbc280925d47.png\" data-download-href=\"https://ethresear.ch/uploads/default/0905bc564c76545c3e9fc2c983edcbc280925d47\" title=\"msg-arrival-vs-size\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/0/9/0905bc564c76545c3e9fc2c983edcbc280925d47_2_375x375.png\" alt=\"msg-arrival-vs-size\" data-base62-sha1=\"1hOAkbG4jVsofC4Wp7x9Bnp4IWX\" width=\"375\" height=\"375\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/0/9/0905bc564c76545c3e9fc2c983edcbc280925d47_2_375x375.png, https://ethresear.ch/uploads/default/optimized/3X/0/9/0905bc564c76545c3e9fc2c983edcbc280925d47_2_562x562.png 1.5x, https://ethresear.ch/uploads/default/original/3X/0/9/0905bc564c76545c3e9fc2c983edcbc280925d47.png 2x\" data-dominant-color=\"EBEEF3\"></a></div><p></p>\n<h1><a name=\"conclusions-and-takeaways-6\" class=\"anchor\" href=\"https://ethresear.ch#conclusions-and-takeaways-6\"></a>Conclusions and Takeaways</h1>\n<p>Despite a relatively short dataset of 3.5hrs, we could observe with high confidende that:</p>\n<ul>\n<li>98% of messages arrive prior to the 4-second mark.</li>\n<li>Lodestar seems to be the slowest client in terms of message arrival time, although this could also be related to when the arrivals are traced in the particular implementation.</li>\n<li>Nodes located in or near the core of the network (<a href=\"https://probelab.io/ethereum/discv5/2024-25/#geolocation\" rel=\"noopener nofollow ugc\">NA or EU</a>) do have certain advantages when it comes to receiving messages sooner. Although the traced locations do not show any worrying behaviour, it is worth pointing out that extra geographical centralization could exacerbate the differences even further.</li>\n</ul>\n<p>For more details and <strong>weekly network health reports on Ethereum’s discv5 DHT network</strong> head over to <a href=\"https://probelab.io/\" rel=\"noopener nofollow ugc\">probelab.io</a>.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/gossipsub-message-propagation-latency/19982\">Read full topic</a></p>","link":"https://ethresear.ch/t/gossipsub-message-propagation-latency/19982","pubDate":"Fri, 05 Jul 2024 14:03:33 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19982"},"source":{"@url":"https://ethresear.ch/t/gossipsub-message-propagation-latency/19982.rss","#text":"Gossipsub Message Propagation Latency"},"filter":false},{"title":"EVM in Motoko for Trustless Execution Environments","dc:creator":"skilesare","category":"EVM","description":"<p>Hello ethResearch <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/wave.png?v=12\" title=\":wave:\" class=\"emoji\" alt=\":wave:\" loading=\"lazy\" width=\"20\" height=\"20\"> it has been a while since I posted. Thanks for your patience as I wade back into the eth universe.</p>\n<p>An organization that I’m running called <a href=\"https://icdevs.org\" rel=\"noopener nofollow ugc\">https://icdevs.org</a> is funding an evm built in Motoko that is targeted to run on the Internet Computer(and that we think will slide well into the AO universe as well). We should have started this 3 years ago, but there is no time like the present. To date this work has been funded through <span class=\"hashtag-raw\">#GG19</span> and <span class=\"hashtag-raw\">#GG20</span>. The eventuality of this project is trustless execution and consensus agents and the ability to monitor and relay messages between EVMs(and other chains) in a trustless manner.</p>\n<p>The bounty has reached its first milestone and we’re looking for experienced EVM implementors to tell us what we’ve missed and how to make it better. I realize this forum seems to have moved on to bigger and harder scaling challenges, but I’m hoping you all can point me in the right direction to find the right audience. It is a bit too technical for r/ethereum but may be too basic for this forum and not quite an EIP.</p>\n<p>Why we are looking to build out an EVM execution layer for the Intenet computer(from our thread at <a href=\"https://forum.dfinity.org/t/open-icdevs-org-bounty-63-evm-opcodes-motoko-1-9-cketh/27592?u=skilesare\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Open - ICDevs.org Bounty #63 - EVM OpCodes - Motoko - 1.9 ckETH - Bounties - Internet Computer Developer Forum</a> )</p>\n<ol>\n<li>The obvious - we can’t build an EVM in motoko without the op-codes. Now building an evm in motoko isn’t particularly a priority at the moment, but long term the Ethereum Foundation has made it a priority to have EVMs in as many languages as possible as a security feature. Would it make sense to have IC canisters as evm nodes for other chains? Probably depends on network config and a few other things, but I could certainly see it being of value long term. Having the op-codes defined separates the execution concerns from any future project that might want to wire up the rest of the EVM machinery. From building from the ground up you get an EVM that takes the IC’s compute pattern and restrictions into account in ways that existing EVMs written in other languages would need significant rewrites to support.</li>\n<li>General education - These opcodes are an awesome way to learn about stacks, memories, and crypto primitives. Education is the primary goal of <a href=\"http://icdevs.org/\" rel=\"noopener nofollow ugc\">ICDevs.org </a> and we feel like Motoko versions of these libraries would make a really interesting set of examples for people learning about how EVMs work, why they work, and what concepts mirror over into the IC(and which ones don’t).</li>\n<li>Libraries and Integrations - these libraries build on top of a number of other Bounties that we’ve funded that could use some burn-in and integration testing to improve them and make sure they are working properly. <a href=\"https://github.com/f0i/merkle-patricia-trie.mo\" rel=\"noopener nofollow ugc\">GitHub - f0i/merkle-patricia-trie.mo: A Merkle Patricia Trie implementation in Motoko </a> <a href=\"https://github.com/relaxed04/rlp-motoko\" rel=\"noopener nofollow ugc\">GitHub - relaxed04/rlp-motoko: RLP implementation on motoko</a>. In addition, some of the op codes implement core functionality that we’ll need to do cross-chain like ecrecover which would be important for a motoko canister trying to verify a signature from the evm universe.</li>\n<li>Micro EVMs - In one universe bitfinity EVMs proliferate and we end up with a garden of highly specialized evms on the IC that interact and interoperate in unique ways. These libraries would allow you to pull in the memory, storage, etc from those EVMs and run transaction simulations to check for opportunities or to automate actions against them using things like the event logs. The always-on nature of IC canisters makes them ideal for writing bots/agents that seek opportunities and execute on them by signing tecdsa messages and relaying them.</li>\n</ol>\n<p>Our bounty hunter has completed the first milestone, arithmetic functions.</p>\n<p>project file:</p><aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://github.com/icdevsorg/evm.mo\">\n  <header class=\"source\">\n      <img src=\"https://ethresear.ch/uploads/default/original/2X/b/bad3e5f9ad67c1ddf145107ce7032ac1d7b22563.svg\" class=\"site-icon\" data-dominant-color=\"\" width=\"32\" height=\"32\">\n\n      <a href=\"https://github.com/icdevsorg/evm.mo\" target=\"_blank\" rel=\"noopener nofollow ugc\">GitHub</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:690/344;\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/4/546c435f8f13ad709696b772052a5b091237e94b_2_690x345.png\" class=\"thumbnail\" data-dominant-color=\"F7F5F1\" width=\"690\" height=\"345\"></div>\n\n<h3><a href=\"https://github.com/icdevsorg/evm.mo\" target=\"_blank\" rel=\"noopener nofollow ugc\">GitHub - icdevsorg/evm.mo: EVM Based Libraries for Motoko</a></h3>\n\n  <p>EVM Based Libraries for Motoko. Contribute to icdevsorg/evm.mo development by creating an account on GitHub.</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>main code file:</p><aside class=\"onebox githubblob\" data-onebox-src=\"https://github.com/icdevsorg/evm.mo/blob/5b3870c2454caf5cb1506010c8ab6796214ff307/src/evm_mo_backend/main.mo\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/icdevsorg/evm.mo/blob/5b3870c2454caf5cb1506010c8ab6796214ff307/src/evm_mo_backend/main.mo\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/icdevsorg/evm.mo/blob/5b3870c2454caf5cb1506010c8ab6796214ff307/src/evm_mo_backend/main.mo\" target=\"_blank\" rel=\"noopener nofollow ugc\">icdevsorg/evm.mo/blob/5b3870c2454caf5cb1506010c8ab6796214ff307/src/evm_mo_backend/main.mo</a></h4>\n\n\n      <pre><code class=\"lang-mo\">import Array \"mo:base/Array\";\nimport Nat \"mo:base/Nat\";\nimport Nat8 \"mo:base/Nat8\";\nimport Nat64 \"mo:base/Nat64\";\nimport Int \"mo:base/Int\";\nimport Trie \"mo:base/Trie\";\nimport Iter \"mo:base/Iter\";\nimport Debug \"mo:base/Debug\";\nimport Vec \"mo:vector\"; // see https://github.com/research-ag/vector\nimport Map \"mo:map/Map\"; // see https://mops.one/map\nimport EVMStack \"evmStack\";\nimport T \"types\";\n\nmodule {\n  \n  type Result&lt;Ok, Err&gt; = { #ok: Ok; #err: Err};\n  type Engine = [(T.ExecutionContext, T.ExecutionVariables) -&gt; Result&lt;T.ExecutionVariables, Text&gt;];\n  type Vec&lt;X&gt; = Vec.Vector&lt;X&gt;;\n  type Map&lt;K, V&gt; = Map.Map&lt;K, V&gt;;\n  type Trie&lt;K, V&gt; = Trie.Trie&lt;K, V&gt;;\n</code></pre>\n\n\n\n  This file has been truncated. <a href=\"https://github.com/icdevsorg/evm.mo/blob/5b3870c2454caf5cb1506010c8ab6796214ff307/src/evm_mo_backend/main.mo\" target=\"_blank\" rel=\"noopener nofollow ugc\">show original</a>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>tests:</p><aside class=\"onebox githubblob\" data-onebox-src=\"https://github.com/icdevsorg/evm.mo/blob/5b3870c2454caf5cb1506010c8ab6796214ff307/test/main.test.mo\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/icdevsorg/evm.mo/blob/5b3870c2454caf5cb1506010c8ab6796214ff307/test/main.test.mo\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <h4><a href=\"https://github.com/icdevsorg/evm.mo/blob/5b3870c2454caf5cb1506010c8ab6796214ff307/test/main.test.mo\" target=\"_blank\" rel=\"noopener nofollow ugc\">icdevsorg/evm.mo/blob/5b3870c2454caf5cb1506010c8ab6796214ff307/test/main.test.mo</a></h4>\n\n\n      <pre><code class=\"lang-mo\">import { test; skip } \"mo:test/async\"; // see https://mops.one/test\n\nimport { stateTransition } \"../src/evm_mo_backend/main\";\n\nimport Array \"mo:base/Array\";\nimport Nat \"mo:base/Nat\";\nimport Nat8 \"mo:base/Nat8\";\nimport Nat64 \"mo:base/Nat64\";\nimport Int \"mo:base/Int\";\nimport Trie \"mo:base/Trie\";\nimport Debug \"mo:base/Debug\";\nimport Vec \"mo:vector\";\nimport Map \"mo:map/Map\";\nimport EVMStack \"../src/evm_mo_backend/evmStack\";\nimport T \"../src/evm_mo_backend/types\";\n\nlet dummyTransaction: T.Transaction = {\n    caller = \"\\00\\aa\\00\\aa\\00\\aa\\00\\aa\\00\\aa\\00\\aa\\00\\aa\\00\\aa\\00\\aa\\00\\aa\";\n    nonce = 2;\n    gasPriceTx = 5;\n</code></pre>\n\n\n\n  This file has been truncated. <a href=\"https://github.com/icdevsorg/evm.mo/blob/5b3870c2454caf5cb1506010c8ab6796214ff307/test/main.test.mo\" target=\"_blank\" rel=\"noopener nofollow ugc\">show original</a>\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/evm-in-motoko-for-trustless-execution-environments/19981\">Read full topic</a></p>","link":"https://ethresear.ch/t/evm-in-motoko-for-trustless-execution-environments/19981","pubDate":"Fri, 05 Jul 2024 13:37:42 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19981"},"source":{"@url":"https://ethresear.ch/t/evm-in-motoko-for-trustless-execution-environments/19981.rss","#text":"EVM in Motoko for Trustless Execution Environments"},"filter":false},{"title":"Preconfirmations under the NO lens","dc:creator":"umbnat92","category":"Economics","description":"<p>by <a href=\"https://twitter.com/umb_nat\" rel=\"noopener nofollow ugc\">U. Natale</a>.</p>\n<p><strong>Acknowledgements</strong><br>\nThis research has been granted by <a href=\"https://chorus.one/\" rel=\"noopener nofollow ugc\">Chorus One</a>. We are grateful to <a href=\"https://x.com/mostlyblocks\" rel=\"noopener nofollow ugc\">M. Moser</a>, <a href=\"https://x.com/crainbf\" rel=\"noopener nofollow ugc\">B. Crain</a>, and <a href=\"https://x.com/Yannimoto\" rel=\"noopener nofollow ugc\">Y. Socolov</a> for useful discussions and comments. We also thanks <a href=\"https://x.com/mempirate\" rel=\"noopener nofollow ugc\">J. Bostoen</a> and <a href=\"https://x.com/fra_mosterts\" rel=\"noopener nofollow ugc\">F. Mosterts</a> from <a href=\"https://x.com/chainbound_\" rel=\"noopener nofollow ugc\">Chainbound</a> team for reviewing the entire document (review ≠ endorsement).</p>\n<h1><a name=\"preconfirmations-landscape-1\" class=\"anchor\" href=\"https://ethresear.ch#preconfirmations-landscape-1\"></a>Preconfirmations landscape</h1>\n<p>In the context of PBS, bargaining between proposer and relay start at around 1s. This means that users submitting transactions after 1s have to wait for the next slot to know if the transaction is included or not. Even in the context of timing games and assuming some aggressive player, there is a hard cut-off at &lt; 4s due to attestation deadline.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/b/8b20ed4fa8795f4a096dc0d24d975d1b02f78d72.png\" data-download-href=\"https://ethresear.ch/uploads/default/8b20ed4fa8795f4a096dc0d24d975d1b02f78d72\" title=\"Screenshot 2024-06-21 alle 11.35.54\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/b/8b20ed4fa8795f4a096dc0d24d975d1b02f78d72_2_690x255.png\" alt=\"Screenshot 2024-06-21 alle 11.35.54\" data-base62-sha1=\"jQMUG1lrlYV5Taso5FgPBeKdC5I\" width=\"690\" height=\"255\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/b/8b20ed4fa8795f4a096dc0d24d975d1b02f78d72_2_690x255.png, https://ethresear.ch/uploads/default/optimized/3X/8/b/8b20ed4fa8795f4a096dc0d24d975d1b02f78d72_2_1035x382.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/b/8b20ed4fa8795f4a096dc0d24d975d1b02f78d72_2_1380x510.png 2x\" data-dominant-color=\"EFF0F3\"></a></div><br>\n<strong>Fig. 1:</strong> The current setup under PBS.<p></p>\n<p>With preconfirmation, users have the possibility to access the dead time space between two blocks via a <a href=\"https://mirror.xyz/preconf.eth/sgcuSbd1jgaRXj9odSJW-_OlWIg6jcDREw1hUJnXtgI\" rel=\"noopener nofollow ugc\">credible heads-up before a confirmation happens</a>. However, at the moment, preconfirmations give no guarantees on execution.</p>\n<p>For example, imagine 2 users submit 2 conflicting transactions (e.g. a swap against the same pool), but both get a preconfirmation. What happens in slot N+1 is that both transactions land in some place into the slot, but one of the two fails.</p>\n<p>From the provider of preconfirmations perspective, the original agreement was respected, however one of the two users next time will think twice before paying for a preconfirmation. The same scenario can happen even if there is only one preconf, but this transaction lands in some place into the slot after other conflicting transactions.</p>\n<p>This poses some questions on who can preconfirm a transaction and who can’t. From the two example above it is evident that unsophisticated players can’t play this game and provide a real improvement for the Ethereum ecosystem. It is clear that the burden would be reduced if the preconfs were intended only for transactions that do not touch contentious state — e.g. transfers of tokens and NFTs, dApps with “batching” architecture, L2 settlements, etc. In this case no sophistication is needed so we will exclude it from the goal of this analysis.</p>\n<h1><a name=\"proposer-as-preconf-provider-2\" class=\"anchor\" href=\"https://ethresear.ch#proposer-as-preconf-provider-2\"></a>Proposer as preconf provider</h1>\n<p>Preconfirmations should be managed in a manner which is similarly decentralized to the current PBS setup; they should not give rise to a centralization bottleneck that exceeds the current builder dominance.</p>\n<p>Fundamentally, the PBS transaction pipeline is an auction. Preconfirmations under a gateway architecture follow a delegation scheme, where node operators (NOs) select a third party to select transactions for future inclusion. Therefore, the gateway design is not a spot market, and a generally less competitive scheme as the cost of switching is considerably higher. Indeed, the gateway architecture expects each validator to sign an on-chain transaction to deposit collateral, meanwhile this operation under PBS is done completely off-chain, meaning that there is no cost to switching builders.</p>\n<p>This may directly reflect in multi-block MEV, where gateways will be able to provide increasingly more competitive partnership offers to node operators as they scale their dominance over the network. In difference to PBS builders, these gateways will have certainty over the slots for which they hold a mandate. Therefore, a gateway architecture is likely to manifest as a heavily centralized setup, where multi-block MEV is the central return to scale, and switching costs are high. Overall, as it is not an auction or a spot market, the gateway architecture is more likely to manifest a centralization bottleneck which exceeds PBS builder dominance.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/9/193ec08347bb058b66d9b5ead9de72df69a1636d.png\" data-download-href=\"https://ethresear.ch/uploads/default/193ec08347bb058b66d9b5ead9de72df69a1636d\" title=\"stake penetration vs slots in a row\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/9/193ec08347bb058b66d9b5ead9de72df69a1636d_2_690x421.png\" alt=\"stake penetration vs slots in a row\" data-base62-sha1=\"3BknHAH7cEPkBPSpvl520Pi4pL7\" width=\"690\" height=\"421\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/9/193ec08347bb058b66d9b5ead9de72df69a1636d_2_690x421.png, https://ethresear.ch/uploads/default/optimized/3X/1/9/193ec08347bb058b66d9b5ead9de72df69a1636d_2_1035x631.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/1/9/193ec08347bb058b66d9b5ead9de72df69a1636d_2_1380x842.png 2x\" data-dominant-color=\"F9FAFA\"></a></div><br>\n<strong>Fig. 2:</strong> Rate of N slots in a row over total Ethereum slots in a year as a function of stake penetration. Growth is higher than linear, and the case of builders/gateways dominance in block production is just an extension of above.<p></p>\n<p>A preferable scheme would be the proposer selecting preconfirmations itself. Even in the case of the largest proposers, their ability to engage in multi-block MEV is capped by their voting power (see Fig. 2), which is in turn is capped by the proposer market (i.e. access to capital). Even under PBS, proposers could theoretically already engage in multi-block MEV, but refrain to do so, for a variety of reasons ranging from access to capital and organisational setup, to legal liability. These same patterns would likely extend to a preconfirmation setup.</p>\n<p>In this section we are going to analyze some scenarios that may arise if the proposer of the slot is the one providing preconfirmation for transactions. We further assume that the NO is a sophisticated player, since the more transactions an unsophisticated preconfirmations provider includes in the preconfirmation list, the more difficult it is for block builders to create a block with all transactions being successful. This implies an execution guarantee on preconfirmed transactions.</p>\n<p>If the majority of preconfirmed transactions fail, the market becomes less attractive, making preconfirmations a difficult tool to use. Including conflicting transactions can also damage the NOs credibility, negatively impacting the brand.</p>\n<h2><a name=\"information-edge-from-private-order-flow-3\" class=\"anchor\" href=\"https://ethresear.ch#information-edge-from-private-order-flow-3\"></a>Information edge from private order flow</h2>\n<p>In this section we are going to show the different information edge builders have in the current PBS framework. As we did in <a href=\"https://arxiv.org/pdf/2312.09654\" rel=\"noopener nofollow ugc\">The cost of artificial latency in the PBS context</a>, we can define a standardized parameter that allows for a comparison of bids irrespective of their absolute size. This corresponds to the ratio between a given bid and the maximum bid in the auction for a particular slot. That is</p>\n<div class=\"math\">\n\\begin{equation}\nR = \\frac{b_s(t_E)}{\\textrm{max}_{t_E}b_S(t)}\\,,\\qquad(1)\n\\end{equation}\n</div>\n<p>where <span class=\"math\">b</span> is the bid value, <span class=\"math\">s</span> indicate the corresponding slot, and <span class=\"math\">t_E</span> is the time at which the bid was made eligible. This allows us to compare builders bidding strategy over all slot proposed by Chorus One since 2024-03-13.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/8/e83b3b463951c5f72911dad23a05e70b9868c23c.png\" data-download-href=\"https://ethresear.ch/uploads/default/e83b3b463951c5f72911dad23a05e70b9868c23c\" title=\"Builders edge on private order flow\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/8/e83b3b463951c5f72911dad23a05e70b9868c23c_2_690x345.png\" alt=\"Builders edge on private order flow\" data-base62-sha1=\"x8pFV3ECRHEXCClyH5xOQEAHdJW\" width=\"690\" height=\"345\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/8/e83b3b463951c5f72911dad23a05e70b9868c23c_2_690x345.png, https://ethresear.ch/uploads/default/optimized/3X/e/8/e83b3b463951c5f72911dad23a05e70b9868c23c_2_1035x517.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/e/8/e83b3b463951c5f72911dad23a05e70b9868c23c_2_1380x690.png 2x\" data-dominant-color=\"EDF1F4\"></a></div><br>\n<strong>Fig. 3:</strong> Builder bidding strategy standardized over all slots proposed by Chorus One since 2024-03-13.<p></p>\n<p>If we select 6 of the top builders by entity (according to <a href=\"https://mevboost.pics/\" rel=\"noopener nofollow ugc\">mevboost.pic</a>), we can clearly see a difference in the overall strategy, see Fig. 3. For example, we can see how some builders start to deliver bids “late” into the slot, others seems to start much earlier. Furthermore, some builders have a clear linear trend in bid increase per unit of time, others seems to start being careful near the end of the auction.</p>\n<p>Although this is independent from the information edge coming from private order flow, we can see how different builders propagates different values of <span class=\"math\">R</span>. Precisely, at 1s into the slot (that is the median value for bid selection in current PBS framework) we have</p>\n<ul>\n<li><strong>Builder:</strong> 0xb211df4…, <strong>Median:</strong> 0.91, <strong>0.25-quantile:</strong> 0.83, <strong>0.95-quantile:</strong> 0.99</li>\n<li><strong>Builder:</strong> 0x83d3495…, <strong>Median:</strong> 0.86, <strong>0.25-quantile:</strong> 0.75, <strong>0.95-quantile:</strong> 0.97</li>\n<li><strong>Builder:</strong> 0xa32aadb…, <strong>Median:</strong> 0.90, <strong>0.25-quantile:</strong> 0.83, <strong>0.95-quantile:</strong> 0.98</li>\n<li><strong>Builder:</strong> 0xa03a000…, <strong>Median:</strong> 0.81, <strong>0.25-quantile:</strong> 0.74, <strong>0.95-quantile:</strong> 0.95</li>\n<li><strong>Builder:</strong> 0xa91d3e5…, <strong>Median:</strong> 0.79, <strong>0.25-quantile:</strong> 0.65, <strong>0.95-quantile:</strong> 0.93</li>\n<li><strong>Builder:</strong> 0xb783f81…, <strong>Median:</strong> 0.88, <strong>0.25-quantile:</strong> 0.82, <strong>0.95-quantile:</strong> 0.96</li>\n</ul>\n<p>that indicates how different entities arrive to the most-likely-end of the auction with less/higher bid values.</p>\n<p>From the NO perspective, a difference in information edge could lead to a mispricing of MEV txs, thus increasing the risk of producing less valuable blocks. In general, builders in the current MEV-Boost framework have a comprehensive view of all transactions and typically include those that maximize the block value. However, with validators as preconfirmation providers, proposers must select transactions in advance, often without knowledge of transactions occurring on private channels. The primary metric available to validators in this scenario is the base fee. Specifically, if a transaction pays the base fee (BF) plus a priority fee (PF), it is considered valid in principle. But if the priority fee is the lowest compared to transactions in the private order flow from builders, the block value could decrease. This is because builders are now required to include the preconfirmed transaction instead of a potentially more valuable one. Here sophisticated NOs are in advance since they can develop models to probabilistically evaluate transactions and perform an opinionated selection.</p>\n<p>It is worth noting, that validators with private transaction flows could be incompatible with preconfirmations, depending on implementation. Private transaction flows can also manifest by virtue of network jitter. Indeed, if a proposer gives a preconfirmation on a transaction from private transaction flow (or on a transaction from an RPC that’s close to the proposer, but far away from the builder), there could be a non-zero likelihood this transaction is not known by the builders, which may find it difficult to build a valid block (i.e. with the preconfirmed tx). The solution is that the proposer <a href=\"https://chainbound.github.io/bolt-docs/api/builder-api\" rel=\"noopener nofollow ugc\">sends the full transaction to builders</a>. Concerns about privacy are clearly excluded since the proposer already committed to certain execution, and the builder can’t really do anything about that.</p>\n<h2><a name=\"enforced-early-timing-games-4\" class=\"anchor\" href=\"https://ethresear.ch#enforced-early-timing-games-4\"></a>Enforced early timing-games</h2>\n<p>Arbitrageurs often engage in short-term trading due to competitive pressures. When they opt to delay immediate gains in hopes of capturing a greater mispricing, they run the risk of losing the lucrative opportunity to other traders. This issue is particularly critical within Ethereum’s Proposer-Builder Separation (PBS) mechanism, where searchers must strategically balance their bidding approaches.</p>\n<p>Consider an arbitrage opportunity that arises relative to an external source, such as a centralized exchange (CEX), at t=4 seconds into slot N. Since the on-chain price is stale and searchers are uncertain whether the opportunity will vanish on the CEX side, they may prefer to execute the first leg of the trade on the CEX immediately and wait the canonical 12 seconds to see their transaction confirmed on-chain. In the PBS context, however, if a searcher immediately bids their maximum willingness to pay for the opportunity, there is a non-zero likelihood that other searchers may outbid them, effectively frontrunning the original strategy. Conversely, if the searcher bids aggressively too late, the closing trade may fail to be included on-chain since the proposer has already committed to a block that excludes this particular transaction. This scenario creates an auction dynamic that hinges on accurately pricing the time within the slot. The same applies for a DEX &lt;&gt; DEX opportunity, since other arbitrageurs may offer a higher share of MEV for the same opportunity and then seeing their bundle being selected.</p>\n<p>Therefore, searchers must strategize not only about how much to bid, but also about the optimal timing of their bids. Bidding too early or too late can both result in a loss of the arbitrage opportunity. The delicate balance between these factors is crucial for optimizing their strategies in such competitive and time-sensitive environments. This study models this behavior and evaluates various strategies to understand the optimal bidding dynamics in Ethereum’s PBS framework.</p>\n<h3><a name=\"model-description-5\" class=\"anchor\" href=\"https://ethresear.ch#model-description-5\"></a>Model Description</h3>\n<p>To investigate how the introduction of preconfirmations might influence the auction dynamics in PBS, we conducted simulations using an Agent-Based Modeling (ABM) framework. The model is designed to simulate the behavior of searchers participating in PBS auctions under varying conditions, incorporating elements of competitive bidding and strategic timing. In our model, we assume that searchers at step N are aware of the bids at step N-1. While this might seem at odds with the usual dynamics in MEV-Boost, where the auction is not publicly visible, we can reconcile this assumption with two scenarios:</p>\n<ol>\n<li><strong>Historical Data Adjustment</strong>: Searchers adjust their bidding strategies based on the share of MEV extracted as a function of past data. In this scenario, at each step N, searchers are informed about the behavior of searchers at the corresponding step N-1 from the previous slot. Thus, the predictive model is grounded in the historical data of past auctions.</li>\n<li><strong>Vertically Integrated Builders</strong>: In this scenario, searchers are considered as vertically integrated builders. Here, we can imagine a block as a composition of transactions that produce a certain value for the MEV, with the bidding phase representing the exact competition between builders.</li>\n</ol>\n<p>By incorporating these scenarios, our model aims to provide a simplistic but comprehensive understanding of how searchers might operate within the PBS auction mechanism under the influence of preconfirmations.</p>\n<h3><a name=\"searchers-behaviour-6\" class=\"anchor\" href=\"https://ethresear.ch#searchers-behaviour-6\"></a>Searchers behaviour</h3>\n<p>In the model, each agent represents a searcher with a specific profit margin, aggressivity parameter, and fear-of-missing-out (FOMO) factor. These agents operate in a simulated environment that mimics the Ethereum PBS auction mechanism. Each agent’s decision-making process is influenced by the bids placed in previous auction steps, representing the competitive nature of the environment.</p>\n<p>Agents update their bids in each step based on a combination of their internal parameters and the observed bids from the previous step. The bid update process is governed by a logistic growth model, where the increment of the bid follows a logistic function, adjusted by the agent’s aggressivity parameter and FOMO factor. This approach ensures that agents increase their bids more cautiously in the early stages and more rapidly as the auction progresses, reflecting the strategic balance between the risk of being outbid and the urgency of capturing the arbitrage opportunity. This dynamic allows the agents to optimize their bidding strategies over time, aiming to reach the maximum bid value closer to the end of the auction period.</p>\n<p>Additionally, agents take into account the probability that the auction may terminate at any given step. This probability is derived from a fictitious empirical distribution of auction durations, modelled using a truncated normal distribution to generate realistic auction durations, cfr. Fig. 4. In case of preconfirmation, we add a half-normal distribution to the previous one, cfr. Fig. 5. The termination probability influences the agents’ urgency in placing bids, as they must balance the risk of the auction ending unexpectedly with the potential benefits of waiting for a more opportune moment to bid. This probabilistic approach ensures that agents are not only competing against each other but also managing the inherent uncertainty of the auction’s duration.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/0/6/06e7143081bbd056f94a6b8f8e3873b675a2a89f.png\" data-download-href=\"https://ethresear.ch/uploads/default/06e7143081bbd056f94a6b8f8e3873b675a2a89f\" title=\"Auction Time - no preconf - PDF &amp; CDF\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/0/6/06e7143081bbd056f94a6b8f8e3873b675a2a89f_2_690x230.png\" alt=\"Auction Time - no preconf - PDF &amp; CDF\" data-base62-sha1=\"Z3WPZaQf4JsCnnKkI6C849lisD\" width=\"690\" height=\"230\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/0/6/06e7143081bbd056f94a6b8f8e3873b675a2a89f_2_690x230.png, https://ethresear.ch/uploads/default/optimized/3X/0/6/06e7143081bbd056f94a6b8f8e3873b675a2a89f_2_1035x345.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/0/6/06e7143081bbd056f94a6b8f8e3873b675a2a89f_2_1380x460.png 2x\" data-dominant-color=\"DAE5EF\"></a></div><br>\n<strong>Fig. 4:</strong> Single instances of a fictitious empirical distribution for the transaction selection time into the auction in the absence of preconfirmations.<p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/3/d3d2b8c36e3810f0175271e67a2b49d9804afd44.png\" data-download-href=\"https://ethresear.ch/uploads/default/d3d2b8c36e3810f0175271e67a2b49d9804afd44\" title=\"Auction Time - preconf - PDF &amp; CDF\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/3/d3d2b8c36e3810f0175271e67a2b49d9804afd44_2_690x230.png\" alt=\"Auction Time - preconf - PDF &amp; CDF\" data-base62-sha1=\"udSdmm82jI1NkOLn6mIhZZhfaXq\" width=\"690\" height=\"230\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/3/d3d2b8c36e3810f0175271e67a2b49d9804afd44_2_690x230.png, https://ethresear.ch/uploads/default/optimized/3X/d/3/d3d2b8c36e3810f0175271e67a2b49d9804afd44_2_1035x345.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/d/3/d3d2b8c36e3810f0175271e67a2b49d9804afd44_2_1380x460.png 2x\" data-dominant-color=\"DBE6EF\"></a></div><br>\n<strong>Fig. 5:</strong> Single instances of a fictitious empirical distribution for the transaction selection time into the auction in the presence of preconfirmations.<p></p>\n<p>The model incorporates four different types of searchers, each using a different predictive model to estimate the bid for the next step before applying their respective increment:</p>\n<ol>\n<li><strong>Predictive Model 1</strong>: This model predicts the next bid as simply the maximum bid observed so far. It assumes that the current trend will continue without significant changes.</li>\n<li><strong>Predictive Model 2</strong>: This model uses a linear regression based on the bid history to predict the next bid. It fits a linear model to the previous bids and uses the resulting slope and intercept to estimate the next bid. This approach assumes that the bid growth can be approximated by a linear trend.</li>\n<li><strong>Predictive Model 3</strong>: This model calculates the average increment of the bids from previous steps and adds this average increment to the current maximum bid. This model assumes that past increments provide a good estimate for future increases.</li>\n<li><strong>Predictive Model 4</strong>: This model uses a logarithmic fit based on the bid history to predict the next bid. It fits a logarithmic model to the previous bids and uses the resulting parameters to estimate the next bid. This approach assumes that the bid growth follows a decelerating trend, reflecting a more conservative strategy as the auction progresses.</li>\n</ol>\n<p>By incorporating these diverse predictive models, the simulation captures a wide range of bidding behaviors and strategies, providing a more comprehensive understanding of how different types of searchers might operate within the Ethereum PBS auction mechanism.</p>\n<h3><a name=\"results-7\" class=\"anchor\" href=\"https://ethresear.ch#results-7\"></a>Results</h3>\n<p>Analyzing the results in Fig. 6, we observe that in scenarios where preconfirmations on transactions are possible, searchers begin to increase their share of captured MEV earlier. This suggests that to increase MEV share received, a node operator might opt to run the version that allows for preconfirmations but never actually selects any MEV transactions. This creates a situation where searchers bid higher because the auction might end sooner. However, since no preconfirmations are offered (as the validator does not select any), the auction continues, and searchers find themselves starting from a higher base bid.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/b/5be75738445af00fdf93f6b1e455b905c46a23c2.png\" data-download-href=\"https://ethresear.ch/uploads/default/5be75738445af00fdf93f6b1e455b905c46a23c2\" title=\"Auction war - combined\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/b/5be75738445af00fdf93f6b1e455b905c46a23c2_2_690x230.png\" alt=\"Auction war - combined\" data-base62-sha1=\"d715T6jKBlg0KMLdrUj8cp0VYYO\" width=\"690\" height=\"230\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/b/5be75738445af00fdf93f6b1e455b905c46a23c2_2_690x230.png, https://ethresear.ch/uploads/default/optimized/3X/5/b/5be75738445af00fdf93f6b1e455b905c46a23c2_2_1035x345.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/5/b/5be75738445af00fdf93f6b1e455b905c46a23c2_2_1380x460.png 2x\" data-dominant-color=\"F6F3F5\"></a></div><br>\n<strong>Fig. 6:</strong> Distribution of different bidding strategy extracted from a set of simulation using the ABM described in previous section. Simulations including a preconfirmation phase are in red, simulations without a preconfirmation phase are in blue.<p></p>\n<p>This situation can be likened to a modified version of the prisoner’s dilemma. In this strategic game, each searcher (or prisoner) must decide whether to bid aggressively early (cooperate) or wait for a more opportune moment (defect). If all searchers bid aggressively early, they collectively drive up the MEV share and risk overbidding. Conversely, if they all wait, the auction proceeds normally, and they can potentially secure MEV shares at a lower cost. However, if some searchers bid aggressively while others wait, the aggressive bidders might secure a higher share early, pushing the late bidders to increase their bids even further as the auction continues.</p>\n<p>This dynamic creates a tension between the searchers: each must decide whether to trust that others will not bid aggressively early or to secure their position by doing so themselves. The presence of preconfirmations adds an additional layer of complexity, as the threat of an early auction end prompts higher early bids, even when no actual preconfirmations are selected.</p>\n<p>In summary, the introduction of preconfirmations influences searchers’ bidding behavior, leading to higher initial bids due to the perceived risk of an early auction end. This strategic interplay resembles the prisoner’s dilemma, where individual decisions to bid early or wait impact the collective outcome, highlighting the intricate balance between cooperation and competition in optimizing MEV shares.</p>\n<p>In other words, with preconfirmations, searchers competing for the same opportunity can no longer rely on the probability that a certain builder will win a slot. If a competing searcher’s transaction is preconfirmed, even if the transaction is accepted by the winning builder, the builder must prioritize the preconfirmed one.</p>\n<h2><a name=\"reversal-timing-game-8\" class=\"anchor\" href=\"https://ethresear.ch#reversal-timing-game-8\"></a>Reversal timing-game</h2>\n<p>Currently, the dynamics involve searchers relying on private auctions through builders, who have a certain probability of winning the block. Builders construct a block based on the privately received transactions and subsequently compete with other builders (through a public auction) to determine the winning block.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/8/d86ee43d92e0249f4368147a23f5f2f24a1560bf.png\" data-download-href=\"https://ethresear.ch/uploads/default/d86ee43d92e0249f4368147a23f5f2f24a1560bf\" title=\"latency_vs_ntxs\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/8/d86ee43d92e0249f4368147a23f5f2f24a1560bf_2_690x230.png\" alt=\"latency_vs_ntxs\" data-base62-sha1=\"uSEIuPBbVnCVlSTebZ8sD6yLRGn\" width=\"690\" height=\"230\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/8/d86ee43d92e0249f4368147a23f5f2f24a1560bf_2_690x230.png, https://ethresear.ch/uploads/default/optimized/3X/d/8/d86ee43d92e0249f4368147a23f5f2f24a1560bf_2_1035x345.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/d/8/d86ee43d92e0249f4368147a23f5f2f24a1560bf_2_1380x460.png 2x\" data-dominant-color=\"F7F8F7\"></a></div><br>\n<strong>Fig. 7:</strong> Dependency in current auction dynamic between number of transactions included in the block and bid value, source from <a href=\"https://ethresear.ch/t/the-cost-of-artificial-latency-in-the-pbs-context/17847\">The cost of artificial latency in the PBS context</a>.<p></p>\n<p>Empirical data shows that the number of transactions included in blocks proposed by builders and the value of the block increase linearly, cfr. Fig 7 and [The cost of artificial latency in the PBS context](<a href=\"https://ethresear.ch/t/the-cost-of-artificial-latency-in-the-pbs-context/17847**.\">https://ethresear.ch/t/the-cost-of-artificial-latency-in-the-pbs-context/17847**.</a>** This implies that once an arbitrage opportunity between CEX and DEX is identified, stat-arbitrageurs submit their transaction, which is not further modified, and the additional value builders obtain comes from a greater inclusion of transactions. In fact, searchers prefer to submit their transaction immediately as the opportunity might vanish on the CEX, and there is a form of preconfirmation due to the historical probability of a builder winning an auction. Therefore, it is highly likely that the rebalancing on the CEX occurs in the early stages of the block.</p>\n<p>By modeling the price difference between CEX and DEX as a Markovian jump-diffusion process, we can derive the expression for the probability that searchers can execute a profitable trade (i.e. that the price difference is greater than the fees needed to execute the trade). This probability, <span class=\"math\">P</span>,  is given by (see Appendix for a derivation):</p>\n<div class=\"math\">\n\\begin{equation}\nP = \\frac{1}{1+\\frac{\\sqrt{2\\lambda}\\gamma}{\\sigma}}\\,,\\qquad(2)\n\\end{equation}\n</div>\n<p>where <span class=\"math\">\\gamma</span> represents the fee of the trade,  <span class=\"math\">\\lambda</span> is such that the time mean interval between trades is <span class=\"math\">\\bar{t} = \\lambda^{-1}</span>, <span class=\"math\">\\sigma</span> is the volatility of the price difference.</p>\n<p>Equation (2) allows us to define a new dynamic for stat-arbs under the preconfirmation framework. Indeed, when the time interval between trades is small (i.e. high values of <span class=\"math\">\\lambda</span>), the probability of having a profitable trade decrease. On the other hand, if volatility becomes predominant, the dynamic may change. Preconfirmations allows arbitrageurs to tune the time interval <span class=\"math\">\\lambda^{-1}</span> in order to maximize the probability of being in the trading regime on a volatility based strategy.<br>\nPrecisely, the time between trades is determined by the time at which the previous slot selected transactions and the time at which new transactions are selected for current block. With current PBS design this corresponds to 12s. Indeed, even if the builder knows he won the slot at t=4s into the slot N-1, he now has to wait 12s (i.e. 4s into the slot N) before knowing if he wins the slot N. With preconfirmations the frequency of transaction selections is a dynamic variable, because you know that your transaction is selected at different time wrt. the usual 4s into the slot. Clearly, by alternating preconfirmations with normal block inclusion, the parameter <span class=\"math\">\\lambda</span> is non-constant.</p>\n<p>If now the objective is to minimize the ratio <span class=\"math\">\\sqrt{2\\lambda}/\\sigma</span>, if the volatility is low searchers can start to increase the frequency of trades submission (i.e. participate in preconfirmation auction) in order to maintain <span class=\"math\">\\sqrt{2\\lambda}/\\sigma &lt;&lt; 1</span>.</p>\n<p>This modeling is consistent with the hypothesis that searchers may be interested in submit their transaction at the beginning of the block. This creates a dynamic potentially opposite to the timing games observed in the MEV-Boost context, where now searchers strive to compete from the early stages in the preconfirmation market.</p>\n<h2><a name=\"capturing-on-chain-mev-9\" class=\"anchor\" href=\"https://ethresear.ch#capturing-on-chain-mev-9\"></a>Capturing on-chain MEV</h2>\n<p>With node operators as preconf provider, preconfirmations give validators the power back to decide on some transaction that have to be included in the slot. This means that NO can add new transactions on top of the current MEV-Boost pipeline, meaning that the ways of capturing MEV augment. Indeed, if we stay in the assumption that preconf transactions are likely to be executed as valid transactions, each time a validator is selected to propose a slot, it can preconf on his own transactions. This means that some types of on-chain MEV, in principle, can be captured by NO using preconfirmations, without renouncing to CEX &lt;&gt; DEX arbitrage, that might result more complicated for NOs.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/1/41859fc9aeca6897bb9ff6312cc64a64d9c2414a.png\" data-download-href=\"https://ethresear.ch/uploads/default/41859fc9aeca6897bb9ff6312cc64a64d9c2414a\" title=\"Screenshot 2024-06-20 alle 12.13.39\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/1/41859fc9aeca6897bb9ff6312cc64a64d9c2414a_2_690x327.png\" alt=\"Screenshot 2024-06-20 alle 12.13.39\" data-base62-sha1=\"9lDk5D8IOUNzMhkTq8JzwWjIRmi\" width=\"690\" height=\"327\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/1/41859fc9aeca6897bb9ff6312cc64a64d9c2414a_2_690x327.png, https://ethresear.ch/uploads/default/original/3X/4/1/41859fc9aeca6897bb9ff6312cc64a64d9c2414a.png 1.5x, https://ethresear.ch/uploads/default/original/3X/4/1/41859fc9aeca6897bb9ff6312cc64a64d9c2414a.png 2x\" data-dominant-color=\"1D2227\"></a></div><br>\n<strong>Fig. 8:</strong> Daily extracted MEV in 30 days by profit. Source <a href=\"https://eigenphi.io/\" rel=\"noopener nofollow ugc\">EigenPhi</a>.<p></p>\n<p>Given the importance on the order of transaction execution, only arbitrage and liquidation could be captured using preconfirmation. According to <a href=\"https://eigenphi.io/\" rel=\"noopener nofollow ugc\">EigenPhi</a>, arbitrages and liquidations produced revenue of $3M profit in 30 days. From the Top 12 leaderboard on arbitrageurs, we can see that only 66% of captured MEV is shared with builders. Clearly, also builders retain a portion of MEV, but due to lack of data, we exclude this from our calculation, which at the end will provide a lower bound on extra revenue a NO can make.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/5/e5f6e65454a19f24711d87a2fac6c81cbf950962.png\" data-download-href=\"https://ethresear.ch/uploads/default/e5f6e65454a19f24711d87a2fac6c81cbf950962\" title=\"Screenshot 2024-06-20 alle 12.13.52\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e5f6e65454a19f24711d87a2fac6c81cbf950962_2_690x162.png\" alt=\"Screenshot 2024-06-20 alle 12.13.52\" data-base62-sha1=\"wOmjTJXEN9ToDAOURl28yAX14b0\" width=\"690\" height=\"162\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e5f6e65454a19f24711d87a2fac6c81cbf950962_2_690x162.png, https://ethresear.ch/uploads/default/optimized/3X/e/5/e5f6e65454a19f24711d87a2fac6c81cbf950962_2_1035x243.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/e/5/e5f6e65454a19f24711d87a2fac6c81cbf950962_2_1380x324.png 2x\" data-dominant-color=\"2B292F\"></a></div><br>\n<strong>Fig. 9:</strong> Leaderboard of top 12 on-chain arbitrageurs in 30 days. Source <a href=\"https://eigenphi.io/\" rel=\"noopener nofollow ugc\">EigenPhi</a>.<p></p>\n<p>If we assume that a NO with 1% of stake penetration captures 1% of this extra MEV, there is an extra $345,600 in a year. Since the median MEV revenue for a NO with such share is ETH 392.31 (cfr. Fig.  10), assuming a price per ETH of $3,500 this (98.74 ETH extra MEV) corresponds to a 25.17% increase from MEV revenue in a year. It is worth mentioning that <a href=\"https://adagio.chorus.one/\" rel=\"noopener nofollow ugc\">current timing games provide ~10% extra MEV</a>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/8/a869e4823ee39f779a3b39c028ff5e4d784e2066.png\" data-download-href=\"https://ethresear.ch/uploads/default/a869e4823ee39f779a3b39c028ff5e4d784e2066\" title=\"MEV yearly size - NO size 10000 over 1005387\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/8/a869e4823ee39f779a3b39c028ff5e4d784e2066_2_690x230.png\" alt=\"MEV yearly size - NO size 10000 over 1005387\" data-base62-sha1=\"o1R5vM18EuinDz5BOW9iMdxoqX4\" width=\"690\" height=\"230\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/8/a869e4823ee39f779a3b39c028ff5e4d784e2066_2_690x230.png, https://ethresear.ch/uploads/default/optimized/3X/a/8/a869e4823ee39f779a3b39c028ff5e4d784e2066_2_1035x345.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/a/8/a869e4823ee39f779a3b39c028ff5e4d784e2066_2_1380x460.png 2x\" data-dominant-color=\"EFF4F7\"></a></div><br>\n<strong>Fig. 10:</strong> Probability Distribution Function of MEV proceeds in a year for a node operator with 1% of stake penetration.<p></p>\n<h1><a name=\"conclusions-10\" class=\"anchor\" href=\"https://ethresear.ch#conclusions-10\"></a>Conclusions</h1>\n<p>Implementing a sophisticated system for preconfirmations within Ethereum’s PBS framework is far from trivial. This complexity opens new avenues for sophisticated NOs to enhance their revenues from MEV.</p>\n<p>Our study has demonstrated that preconfirmations introduce a significant layer of strategic depth to the PBS auction mechanism. By providing searchers with a credible heads-up before a transaction is confirmed, preconfirmations alter the timing and aggressiveness of bids. This shift is particularly pronounced in scenarios where NOs, acting as preconfirmation providers, selectively include transactions that maximize their revenue while ensuring successful block proposals.</p>\n<p>This analysis highlighted the varied strategies employed by different builders in the current PBS framework, revealing significant differences in how they time their bids. This information asymmetry can lead to mispricing of MEV transactions, potentially reducing the overall value of blocks for node operators.</p>\n<p>The presence of preconfirmations forces searchers to engage in more sophisticated bidding strategies. They must carefully balance the risk of being outbid by competitors against the potential for an early auction termination, which could prevent their transactions from being included. This dynamic is akin to a modified prisoner’s dilemma, where searchers must decide between bidding aggressively early or waiting for a more opportune moment, knowing that their decisions impact the overall auction outcome. Overall, this may push for a new type of timing games, where now searchers will compete more aggressively in the first part of the preconfirmation interval.</p>\n<p>Complex implementation of preconfirmations provide NOs with a powerful tool to capture on-chain MEV directly. By preconfirming their transactions, NOs can ensure the inclusion of high-value arbitrage and liquidation opportunities, significantly boosting their MEV revenue. Our calculations indicate that a NO with a 1% stake penetration could see a 25.17% increase in annual MEV revenue through strategic use of preconfirmations. This increase is substantial compared to the ~10% extra MEV derived from current timing games.</p>\n<p>Despite the potential benefits, the implementation of preconfirmations must be carefully managed to avoid centralization risks. A decentralized approach, where proposers themselves manage preconfirmations, is preferable to a gateway architecture that could lead to undue centralization and higher switching costs.</p>\n<h1><a name=\"appendix-a-11\" class=\"anchor\" href=\"https://ethresear.ch#appendix-a-11\"></a>Appendix A</h1>\n<h2><a name=\"deriving-the-trade-probability-12\" class=\"anchor\" href=\"https://ethresear.ch#deriving-the-trade-probability-12\"></a>Deriving the trade probability</h2>\n<p>To see where Eq. (2) comes from, let’s model the price difference between CEX and DEX  as a Markovian jump-diffusion process. This allows us to derive the expression for the probability that stat-arbitrageurs can execute a profitable trade, i.e. that the price difference is higher than the fees needed to execute the trade.</p>\n<p>If we assume that DEX and CEX prices follows a Brownian motion, since the difference between two Brownian motion is still a Brownian motion, we can model the price difference as a Brownian motion with volatility <span class=\"math\">\\sigma</span></p>\n<div class=\"math\">\n\\begin{equation}\ndM(t) = \\mu_Mdt+\\sigma dW(t)\\,,\n\\end{equation}\n</div>\n<p>where <span class=\"math\">\\mu_M</span> represents the drift of motion. In the presence of discrete time arrival for trades (i.e. jumps) modelled as a Poisson process with rate <span class=\"math\">\\lambda</span>,  we get</p>\n<div class=\"math\">\n\\begin{equation}\ndM(t) = \\mu_Mdt+\\sigma dW(t) + j(M_{t-1}) dN(t)\\,,\n\\end{equation}\n</div>\n<p>where <span class=\"math\">j(M_{t-1}) dN(t)</span> is the contribution from jumps (depending only on immediately previous state <span class=\"math\">j(M_{t-1})</span>, that’s where the Markovian approximation comes in). The density <span class=\"math\">p(x,t)</span> of the process <span class=\"math\">M(t)</span> is governed by Fokker-Planck equation</p>\n<div class=\"math\">\n\\begin{align}\n\\partial_t p(x,t) &amp;= -\\mu_M\\partial_x p(x,t) + \\frac{\\sigma^2}{2}\\partial^2_xp(x,t)+\\lambda\\left[\\int_{-\\infty}^{+\\infty}p(x-y,t)\\delta(y-j)dy - p(x,t)\\right]\\\\\n&amp;=-\\mu_M\\partial_x p(x,t) + \\frac{\\sigma^2}{2}\\partial^2_xp(x,t)+\\lambda\\left[p(x-j,t)-p(x,t)\\right]\\,,\n\\end{align}\n</div>\n<p>where the Dirac <span class=\"math\">\\delta</span> determine the dimension of the jump (we are assuming constant jumps) and <span class=\"math\">\\lambda</span> is the mean dimension of jumps in the price difference. In the absence of drift, the equation of the process is</p>\n<div class=\"math\">\n\\begin{equation}\n\\partial_tp(x,t)=\\frac{\\sigma^2}{2}\\partial^2_xp(x,t)+\\lambda\\left[p(x-j,t)-p(x,t)\\right]\\,.\n\\end{equation}\n</div>\n<p>To find the stationary distribution (i.e. <span class=\"math\">p(x)</span>), we can consider the case with <span class=\"math\">\\partial_tp(x,t)=0</span>, such that Fokker-Planck equation becomes</p>\n<div class=\"math\">\n\\begin{equation}\n0=\\frac{\\sigma^2}{2}\\partial^2_xp(x)+\\lambda\\left[p(x-j)-p(x)\\right]\\,.\n\\end{equation}\n</div>\n<p>Now, if we consider the Taylor expansion of <span class=\"math\">p(x)</span> for small <span class=\"math\">j</span> we obtain</p>\n<div class=\"math\">\n\\begin{equation}\np(x-j)\\sim p(x)-j\\partial_xp(x)+\\frac{\\lambda j^2}{2}\\partial_x^2p(x)+\\ldots\\,,\n\\end{equation}\n</div>\n<p>which gives</p>\n<div class=\"math\">\n\\begin{equation}\n0=\\frac{1}{2}\\left(\\sigma^2+\\lambda j^2\\right)\\partial^2_xp(x,t)-\\lambda j\\partial_xp(x)\\,.\n\\end{equation}\n</div>\n<p>If we now observe that for</p>\n<div class=\"math\">\nj\\ll\\frac{\\sigma}{\\sqrt{\\lambda}}\\,,\n</div>\n<p>we can neglect second order terms in <span class=\"math\">j</span>. For the next part of the paper we’ll use</p>\n<div class=\"math\">\nj=\\frac{\\sigma}{\\sqrt{2\\lambda}}=\\sigma\\sqrt{\\frac{\\bar{t}}{2}}\\,,\n</div>\n<p>which means the dimension of the jump between trades is given by the volatility of price difference times the square root of half the time interval between trades. Under these assumptions our Fokker-Planck equation becomes</p>\n<div class=\"math\">\n\\begin{equation}\n0=\\frac{\\sigma^2}{2}\\partial^2_xp(x,t)-\\frac{\\sqrt{\\lambda}\\sigma}{\\sqrt{2}}\\partial_xp(x)\\,.\n\\end{equation}\n</div>\n<p>This is a second order differential equation, with solution of the form</p>\n<div class=\"math\">\n\\begin{equation}\np(x)=Ae^{r_1x}+Be^{r_2x}\\,,\n\\end{equation}\n</div>\n<p>where <span class=\"math\">r_1</span> and <span class=\"math\">r_2</span> are the solution of</p>\n<div class=\"math\">\n\\begin{equation}\nr^2-\\frac{\\sqrt{2\\lambda}}{\\sigma}r=0\\,.\n\\end{equation}\n</div>\n<p>It follows that</p>\n<div class=\"math\">\n\\begin{equation}\np(x)=A+Be^{\\frac{\\sqrt{2\\lambda}}{\\sigma}x}\\,.\n\\end{equation}\n</div>\n<p>Since <span class=\"math\">p(x)</span> is a density, it has to be normalized and not diverging for <span class=\"math\">x\\to\\pm\\infty</span>. This means that the solution has to be</p>\n<div class=\"math\">\n\\begin{equation}\np(x)=p_1(x|x\\in[-\\gamma,\\gamma])+p_2(x|x\\in(-\\infty,-\\gamma)\\,\\cup\\,(\\gamma,\\infty))\\,,\n\\end{equation}\n</div>\n<p>where</p>\n<div class=\"math\">\n\\begin{align}\n&amp;p_1(x) = A\\,,\\qquad\\qquad\\qquad\\,\\,\\,\\, x\\in[-\\gamma,\\gamma]\\\\\n&amp;p_2(x) = Be^{-\\frac{\\sqrt{2\\lambda}}{\\sigma}(|x|-\\gamma)}\\,,\\qquad x\\in(-\\infty,\\gamma] \\cup [\\gamma,\\infty)\\,.\n\\end{align}\n</div>\n<p>The nature of <span class=\"math\">p_2(x)</span> is that it is null at infinity. Now, if we impose continuity of <span class=\"math\">p(x)</span> at boundaries, we have</p>\n<div class=\"math\">\np_1(\\gamma)=p_2(\\gamma)\\Rightarrow A = B e^0 = B\\,.\n</div>\n<p>It follows that, by imposing the symmetry condition and the fact that <span class=\"math\">p(x)</span> is a density we get</p>\n<div class=\"math\">\n\\begin{align*}\n&amp;2\\int_0^\\infty p(x)dx = 1 \\\\\n&amp;\\to \\left.2Ax\\right|_0^\\gamma-\\left.2\\frac{B\\sigma}{\\sqrt{2\\lambda}}e^{-\\frac{\\sqrt{2\\lambda}}{\\sigma}(|x|-\\gamma)}\\right|_\\gamma^\\infty=1\\\\\n&amp;\\to 2A\\gamma\\left(1+\\frac{1}{\\xi}\\right)=1\\,,\n\\end{align*}\n</div>\n<p>where we introduced the parameter <span class=\"math\">\\xi=\\frac{\\sqrt{2\\lambda}\\gamma}{\\sigma}</span>, characterizing the behaviour of the price difference process. By solving for A, it follows that</p>\n<div class=\"math\">\n\\begin{split}\n&amp;p_1(x) = \\frac{1}{2\\gamma}\\frac{\\xi}{1+\\xi}\\,,\\qquad\\qquad\\qquad\\,\\,\\,\\, x\\in[-\\gamma,\\gamma]\\\\\n&amp;p_2(x) = \\frac{1}{1+\\xi}\\frac{\\xi}{2\\gamma}e^{-\\frac{\\xi}{\\gamma}(|x|-\\gamma)}\\,,\\qquad x\\in(-\\infty,\\gamma] \\cup [\\gamma,\\infty)\\,.\n\\end{split}\n</div>\n<p>Now, we are interested in computing the probability of the trade area. This has as density</p>\n<div class=\"math\">\n\\begin{equation}\np_2(x|x\\in(-\\infty,-\\gamma))+p_2(x|x\\in(\\gamma,\\infty))=\\frac{1}{1+\\xi}\\frac{\\xi}{\\gamma}e^{-\\frac{\\xi}{\\gamma}(|x|-\\gamma)}\\,,\n\\end{equation}\n</div>\n<p>and since</p>\n<div class=\"math\">\n\\frac{\\xi}{\\gamma}e^{-\\frac{\\xi}{\\gamma}(|x|-\\gamma)}\\,,\n</div>\n<p>is the density of an exponential distribution and that is the only part dependent from <span class=\"math\">x</span>, we have that the invariant for the trade region probability is</p>\n<div class=\"math\">\nP=\\frac{1}{1+\\xi}=\\frac{1}{1+\\frac{\\sqrt{2\\lambda}\\gamma}{\\sigma}}\\,,\n</div>\n<p>that is the result used in Eq. (2). Note that this result is consistent with what presented in <a href=\"https://arxiv.org/pdf/2305.14604\" rel=\"noopener nofollow ugc\">Milionis et al</a>, even if the derivation is different.</p>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/preconfirmations-under-the-no-lens/19975\">Read full topic</a></p>","link":"https://ethresear.ch/t/preconfirmations-under-the-no-lens/19975","pubDate":"Fri, 05 Jul 2024 09:39:35 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19975"},"source":{"@url":"https://ethresear.ch/t/preconfirmations-under-the-no-lens/19975.rss","#text":"Preconfirmations under the NO lens"},"filter":false},{"title":"Leaderless and Leader-Based Preconfirmations","dc:creator":"chrmatt","category":"Economics","description":"<p><em>Joint work with <a class=\"mention\" href=\"https://ethresear.ch/u/murat\">@murat</a>. Thanks to <a class=\"mention\" href=\"https://ethresear.ch/u/the-ctra1n\">@The-CTra1n</a> and <a class=\"mention\" href=\"https://ethresear.ch/u/bemagri\">@bemagri</a> for reviewing and providing valuable feedback.</em></p>\n<h1><a name=\"introduction-1\" class=\"anchor\" href=\"https://ethresear.ch#introduction-1\"></a>Introduction</h1>\n<p>A preconfirmation (preconf) for the context of this article refers to a promise about a given set of transactions relative to a future block, e.g., execution of a transaction in the next block or placing transactions at the top of the block. Entities who want to obtain a preconf can bid a certain amount indicating how much they are willing to pay for a preconf.</p>\n<p>One dimension in which preconfs can be distinguished is whether there exists a unique preconf provider for every L1 block (a preconf leader), or whether there can be multiple competing preconf providers for every L1 block, without a leader. We here discuss the two approaches, their respective advantages and disadvantages, and how they can be combined. A particularly promising approach for combining the two concepts to obtain the best of both worlds appears to be using “sourcing leaders”, which are operating in a leaderless setting and collect preconfs from competing preconf providers.</p>\n<h1><a name=\"overview-and-definitions-2\" class=\"anchor\" href=\"https://ethresear.ch#overview-and-definitions-2\"></a>Overview and Definitions</h1>\n<h2><a name=\"leader-based-preconfs-3\" class=\"anchor\" href=\"https://ethresear.ch#leader-based-preconfs-3\"></a>Leader-Based Preconfs</h2>\n<p>The simplest form of preconfs are ones issued by an appointed leader. This leader must have the authority to issue preconfs and have some means to enforce them. It is not necessary to have a single leader overall, as long as there is a unique, predetermined, and publicly known leader at each point in time. A straightforward way to choose leaders is using the current L1 proposer, as, e.g., in <a href=\"https://github.com/Commit-Boost/commit-boost-client\" rel=\"noopener nofollow ugc\">commit-boost</a>. More sophisticated leader-election methods are discussed below, and can be employed by <a href=\"https://docs.primev.xyz/concepts/what-is-mev-commit\" rel=\"noopener nofollow ugc\">mev-commit</a>.</p>\n<h2><a name=\"leaderless-preconfs-4\" class=\"anchor\" href=\"https://ethresear.ch#leaderless-preconfs-4\"></a>Leaderless Preconfs</h2>\n<p>An alternative to leader-based preconfs is to have multiple preconf providers simultaneously. The most natural instantiation of this is to have the block builders act as preconf providers, leveraging the strengths of the existing mev-boost landscape. This mechanism is <a href=\"https://docs.primev.xyz/concepts/what-is-mev-commit\" rel=\"noopener nofollow ugc\">used by mev-commit</a>. In this case, a single preconf provider cannot provide an authoritative preconf; in case the block builders are preconf providers, a single builder can only promise to honor the preconf for the blocks this block builder builds.</p>\n<p>A preconf from a single block builder thus constitutes a probabilistic preconf in the sense that the preconf is conditioned on the issuing block builder winning the corresponding block. This can already be useful, e.g., for arbitrage searchers. A proper preconf with a 100% guarantee is obtained if all block builders preconfirm. A subtlety of this is that the set of all possible block builders must be known, which is not the case in a permissionless setting. This is solved by mev-commit by letting <a href=\"https://docs.primev.xyz/get-started/providers/registering-a-provider\" rel=\"noopener nofollow ugc\">block builders register</a> as providers and <a href=\"https://docs.primev.xyz/get-started/validators\" rel=\"noopener nofollow ugc\">proposers and relays opt-in</a> to only deliver blocks from registered block builders. Analyzing the game-theoretic interplay between bidders and multiple preconf providers is an interesting open problem.</p>\n<h1><a name=\"comparison-5\" class=\"anchor\" href=\"https://ethresear.ch#comparison-5\"></a>Comparison</h1>\n<p>Both approaches have their advantages and disadvantages, which we discuss below.</p>\n<h2><a name=\"advantages-of-leader-based-preconfs-6\" class=\"anchor\" href=\"https://ethresear.ch#advantages-of-leader-based-preconfs-6\"></a>Advantages of Leader-Based Preconfs</h2>\n<p>The most obvious advantage of leader-based preconfs is that a single preconf already constitutes almost a 100% guarantee (almost because the slot may be missed or the chain reorged). This simplifies the protocol interaction and also possibly provides faster feedback. Note that reorg risks are the same for all types of preconfs, so we do not discuss them further here.</p>\n<h2><a name=\"advantages-of-leaderless-preconfs-7\" class=\"anchor\" href=\"https://ethresear.ch#advantages-of-leaderless-preconfs-7\"></a>Advantages of Leaderless Preconfs</h2>\n<p>Having multiple simultaneous preconf providers creates a competitive environment, allowing for efficient preconf price discovery and thereby optimizing validator yield. A single provider having a preconf monopoly, on the other hand, can dictate the prices arbitrarily.</p>\n<p>Further advantages come from letting the block builders be the preconf providers. First, block builders have sufficient sophistication to properly price preconfs. Secondly, builders are building the blocks and thus are the only entities that can issue preconfs without interfering with block production and adding latency: If another party issues a preconf, it must be communicated to the block builders such that they can build compatible blocks, and failure to receive the preconf in time leads to the block builder building a block violating the preconf. This also means that there is some delay between issuing the preconf and the builders learning about it in a leader based approach, which is particularly problematic towards the end of a slot, where builders may learn too late about the preconf. This also creates an advantage for block builders with fast connections to the preconf leaders, potentially leading to further centralization. Furthermore, receiving a preconf from a separate entity interferes with the block building strategy of the builders and thus can potentially lead to substantially less valuable blocks. Finally, leaderless preconfs can be integrated more easily into the existing mev-boost infrastructure.</p>\n<h1><a name=\"leader-election-8\" class=\"anchor\" href=\"https://ethresear.ch#leader-election-8\"></a>Leader Election</h1>\n<p>As mentioned above, the simplest way to elect a preconf leader is to choose the current L1 proposer. This, however, requires additional sophistication from the proposer and likely leads to economic inefficiencies. It is therefore likely that proposers want to outsource preconfs similarly to how proposers outsource block building in PBS, even though this might raise concerns such as increased complexity due to additional actors, and potentially more centralization. A crucial difference from PBS is that preconf leaders need to be chosen in advance, i.e., before preconf bids are available. Thus, when the right to become a preconf leader is auctioned off, the potential leaders need to place their bids in the leader election without knowing the value they can derive from becoming a leader. This means their bids can only be based on expected values rather than actual amounts as in PBS, similarly to <a href=\"https://ethresear.ch/t/execution-tickets/17944\">execution tickets</a>. A notable exemption to this are scenarios in which preconfs are not time critical such as preconfs for blob inclusion bids. In this case, the auction can be run after all preconf bids have been issued and thus the auction can be based on the actual value instead of the expected one (cf. <a href=\"https://ethresear.ch/t/blob-preconfirmations-with-inclusion-lists-to-mitigate-blob-contention-and-censorship/19150\">Ethereum Research - Blob Preconfirmations with Inclusion Lists to Mitigate Blob Contention and Censorship</a>).</p>\n<p>One concern with an expected-value-based auction is that this value likely remains relatively stable over time and thus a possible scenario is that a single entity that is very good at pricing wins an overwhelming fraction of the auctions, leading to centralization and a preconf monopoly (cf. <a href=\"https://collective.flashbots.net/t/when-to-sell-your-blocks/2814/1\" rel=\"noopener nofollow ugc\">The Flashbots Collective - When To Sell Your Blocks</a>). A possible mitigation to this problem is to instead of running an auction, sell lottery tickets and choose the leader randomly as the holder of the winning ticket. This is akin to a similar mechanism recently proposed by <a href=\"https://hackmd.io/@EspressoSystems/market-design\" rel=\"noopener nofollow ugc\">Espresso Systems in a related context</a>. Further research is required to determine an optimal pricing structure for such lotteries.</p>\n<h1><a name=\"combining-leaderless-and-leader-based-preconfs-9\" class=\"anchor\" href=\"https://ethresear.ch#combining-leaderless-and-leader-based-preconfs-9\"></a>Combining Leaderless and Leader-Based Preconfs</h1>\n<p>To obtain the best of both worlds, one can combine a leaderless with a leader-based approach. We discuss some options how to achieve this below.</p>\n<h2><a name=\"simultaneous-leaders-and-leaderless-providers-10\" class=\"anchor\" href=\"https://ethresear.ch#simultaneous-leaders-and-leaderless-providers-10\"></a>Simultaneous Leaders and Leaderless Providers</h2>\n<p>One option to combine leaderless and leader-based preconfs is to have a dedicated preconf leader, but let this leader operate simultaneously with multiple non-leader preconf providers. We assume below that the non-leader providers are block builders. In such a scheme, both the leader and the builders can issue preconfs at any point in time. When the leader issues a preconf, it must be communicated to the block builders, who then need to honor them when building their blocks. At this point, block builders cannot commit to the already committed bid anymore (since such commitment would not add any value). On the other hand, if a builder issues a preconf first, the leader can still commit to the same bid, turning the preconf from the builder into a 100% guaranteed preconf.</p>\n<p>While this approach might appear conceptually simple, it comes with several challenges. One issue is that it is probably very hard, if not impossible, for the leader to issue execution preconfs that are compatible with execution preconfs of the block builders. This approach might therefore be limited to inclusion preconfs. Another issue is the timing of preconfs: For the mechanism to work, a total order among preconfs needs to be established, since a builder should only be rewarded for a preconf on a bid that also been committed to by the leader if the builder committed first. This total order can be established by a dedicated side-chain, such as the mev-commit chain. Nevertheless, there is room for leaders to play games with the competing builders by delaying their preconfs or trying to frontrun the builders. Yet another difficulty of this approach are the more complex incentives. Who should be paid how much in case multiple preconfs are issued? Developing a fair mechanism that leads to good preconf prices requires further research.</p>\n<h2><a name=\"sourcing-leaders-11\" class=\"anchor\" href=\"https://ethresear.ch#sourcing-leaders-11\"></a>Sourcing Leaders</h2>\n<p>An alternative is to have leaders that themselves have no authority to enforce preconfs. Instead, the leaders receive bids from end users and subsequently try to obtain preconfs from the preconf providers. We call such leaders “sourcing leaders”. Once the sourcing leader has obtained preconfs from all providers, they issue a preconf to the end user. A sourcing leader is not strictly speaking a leader as defined above, but can provide the same advantage of a leader, namely issuing preconfs that themselves provide a 100% guarantee to the end user.</p>\n<p>The role of a sourcing leader can be taken on by sophisticated actors such as solvers. A sourcing leader can in this case also offer preconfs before all providers have issued one and charge a premium to take on the risk that the preconf is violated. It is furthermore possible to have multiple competing sourcing leaders that offer preconfs with different prices at different speeds, where users can choose the best one for their purposes.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/d/1df247e0731521b812fdecf14287017b6e1a772b.png\" data-download-href=\"https://ethresear.ch/uploads/default/1df247e0731521b812fdecf14287017b6e1a772b\" title=\"Sourcing Leader\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/d/1df247e0731521b812fdecf14287017b6e1a772b_2_690x219.png\" alt=\"Sourcing Leader\" data-base62-sha1=\"4gUVHYGaEyvc0pfRNT49WM5vDdh\" width=\"690\" height=\"219\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/d/1df247e0731521b812fdecf14287017b6e1a772b_2_690x219.png, https://ethresear.ch/uploads/default/optimized/3X/1/d/1df247e0731521b812fdecf14287017b6e1a772b_2_1035x328.png 1.5x, https://ethresear.ch/uploads/default/original/3X/1/d/1df247e0731521b812fdecf14287017b6e1a772b.png 2x\" data-dominant-color=\"F6F7F3\"></a></div><br>\n<strong>Figure 1:</strong> Illustration of the interaction between an end user, a sourcing leader running a bidder node, and three preconf providers.<p></p>\n<h1><a name=\"conclusion-and-open-problems-12\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-and-open-problems-12\"></a>Conclusion and Open Problems</h1>\n<p>Both leader-based and leaderless preconfs offer unique advantages and challenges. Leader-based preconfs offer a 100% guarantee (ignoring missed slots and reorgs) with a single preconfirmation, whereas leaderless ones create a competitive environment, enabling efficient price discovery, and potentially leading to more valuable blocks. Different methods for leader election also have their own trade-offs, with options ranging from auctions to lotteries.</p>\n<p>Combining leaderless and leader-based preconfs can provide the benefits of both systems. One approach is to have a dedicated preconf leader operating alongside non-leader providers. Another approach is to use sourcing leaders who have no enforcement authority themselves, but attempt to obtain preconfs from providers. Both approaches allow for a high degree of competition, but also pose additional challenges.</p>\n<p>There are still several unresolved research problems uncovered in this article. One of them is to analyze the game-theoretic interplay between bidders and multiple preconf providers in a leaderless preconf system. For a leader-based approach, relevant open problems are determining an optimal pricing structure for preconf leader lotteries to mitigate the risk of centralization and a preconf monopoly, and how to integrate with the existing mev-boost infrastructure. For combining leaderless and leader-based preconfs, designing fair mechanisms for the interaction between both types of preconf providers is left for future research. Finally, an important open question is how the approach with a sourcing leader compares to the others in terms of obtaining fair prices.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/leaderless-and-leader-based-preconfirmations/19971\">Read full topic</a></p>","link":"https://ethresear.ch/t/leaderless-and-leader-based-preconfirmations/19971","pubDate":"Thu, 04 Jul 2024 20:41:05 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19971"},"source":{"@url":"https://ethresear.ch/t/leaderless-and-leader-based-preconfirmations/19971.rss","#text":"Leaderless and Leader-Based Preconfirmations"},"filter":false},{"title":"Execution Consensus Separation","dc:creator":"MaxResnick","category":"Economics","description":"<h2><a name=\"execution-consensus-separation-1\" class=\"anchor\" href=\"https://ethresear.ch#execution-consensus-separation-1\"></a>Execution Consensus Separation</h2>\n<p><strong></strong></p><div class=\"lightbox-wrapper\"><strong><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/b/4b9eb4b7bcec14c8b9a8aee948a332d9d48013e4.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/4b9eb4b7bcec14c8b9a8aee948a332d9d48013e4\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/b/4b9eb4b7bcec14c8b9a8aee948a332d9d48013e4_2_500x500.jpeg\" alt=\"\" data-base62-sha1=\"aMXPQe8Rfupqg6eipS7beY3dGAY\" width=\"500\" height=\"500\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/b/4b9eb4b7bcec14c8b9a8aee948a332d9d48013e4_2_500x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/4/b/4b9eb4b7bcec14c8b9a8aee948a332d9d48013e4_2_750x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/b/4b9eb4b7bcec14c8b9a8aee948a332d9d48013e4_2_1000x1000.jpeg 2x\" data-dominant-color=\"C3BBA4\"></a></strong></div><br>\nMEV is fundamentally about control. The proposer has control of which transactions make it into blocks and which order they appear in. In other words MEV is all about censorship and reordering. All of the goals on the Ethereum roadmap related to MEV are therefore impossible without fixing these things. The good news is that fixing these things is possible, the bad news is that the solution requires us to work together to study and prove the security of some meaningful upgrades to both consensus and execution.<p></p>\n<p>Current work on the <a href=\"https://x.com/VitalikButerin/status/1741190491578810445\" rel=\"noopener nofollow ugc\">“Scourge” section</a> of the <a href=\"https://ethereum.org/en/roadmap/\" rel=\"noopener nofollow ugc\">Ethereum roadmap</a> has been siloed. People work on individual problems and sometimes lose the broader scope of what we are ultimately trying to achieve. <a href=\"https://ethresear.ch/t/epbs-design-constraints/18728\">ePBS</a>, <a href=\"https://ethereum-magicians.org/t/eip-7547-inclusion-lists/17474\" rel=\"noopener nofollow ugc\">Inclusion Lists</a>, <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590\">MEV Burn</a>, <a href=\"https://github.com/flashbots/mev-boost/issues/139\" rel=\"noopener nofollow ugc\">Distributed Block Building</a>, and <a href=\"https://x.com/VitalikButerin/status/1741190491578810445\" rel=\"noopener nofollow ugc\">Application-layer MEV minimization</a>, are examples of ideas that require censorship resistance and control over ordering, but we haven’t yet addressed the pre-requisites. Solving these allows us to kill 5 birds with 1 stone. But to do this we need to think from first principles and work on the underlying root causes rather than tinkering with a thin veneer on top of the protocol.</p>\n<p>Solving MEV at the protocol level requires buy in from all three levels of the chain:</p>\n<ol>\n<li><strong>Consensus Layer:</strong> Multiple concurrent proposers.</li>\n<li><strong>Execution Layer:</strong> Delayed execution and deterministic scheduling rules.</li>\n<li><strong>Application Layer:</strong> Order-agnostic applications.</li>\n</ol>\n<h2><a name=\"consensus-layer-2\" class=\"anchor\" href=\"https://ethresear.ch#consensus-layer-2\"></a>Consensus layer</h2>\n<p>We cannot get anywhere without vastly improved censorship resistance at the consensus layer. This is what allows us to hold auctions and prevent censorship of competing bids. The root cause of Ethereum’s weak censorship resistance is the fact that only a single entity can include transactions during each 12 second slot. <strong>Multiple concurrent proposers (MCP)</strong> fixes this problem. Instead of coming to consensus on an ordered block of transactions from a single block proposer, each of the K proposers propose a set of transactions at the same time. The protocol then aggregates these proposals using a <strong>common subset</strong> primitive (or a similar algorithm, this is an active area of research), yielding an unordered set of transactions which are to be included in the block.</p>\n<p>MCP solves the problem of censorship-resistant inclusion, achieving the goals of <a href=\"https://ethereum-magicians.org/t/eip-7547-inclusion-lists/17474\" rel=\"noopener nofollow ugc\">Inclusion Lists</a> in a more natural way. The output is an unordered set of transactions, so it does not solve the problem of reordering. That will be the responsibility of the execution layer.</p>\n<p>MCP is an area of active study and we encourage people to get involved. See SMG <a href=\"https://mechanism.org/spec/01\" rel=\"noopener nofollow ugc\">SPEC-01</a> for a theoretical description of MCP. Work is currently underway at SMG to formally specify MCP and create a proposed implementation of a gadget for use in the Ethereum protocol. Contact us if you are interested in working on this.</p>\n<h2><a name=\"execution-layer-3\" class=\"anchor\" href=\"https://ethresear.ch#execution-layer-3\"></a>Execution layer</h2>\n<p>Ethereum’s execution layer must be upgraded to solve the problem of transaction reordering. To do this, we must delay the calculation of the state root to the next block so that the execution layer has time to implement a deterministic ordering rule.</p>\n<p>Once it has the transactions, the execution layer has a new important job: figuring out how to order them. To do this, we need to select a <strong>deterministic scheduling rule</strong>. This is an area of active study where we encourage people to get involved. There are many promising candidates: <a href=\"https://www.paradigm.xyz/2024/06/priority-is-all-you-need\" rel=\"noopener nofollow ugc\">priority fee ordering</a>, as-needed execution, and <a href=\"https://github.com/flashbots/mev-boost/issues/139\" rel=\"noopener nofollow ugc\">distributed block building</a>. We will elaborate on the last two in an upcoming article.</p>\n<p>With delayed execution and a deterministic scheduling rule, Ethereum’s execution layer will determine the order of transactions in a block, allowing it to achieve the same goals as <a href=\"https://github.com/flashbots/mev-boost/issues/139\" rel=\"noopener nofollow ugc\">distributed block building</a> and <a href=\"https://ethresear.ch/t/epbs-design-constraints/18728\">ePBS</a> in a more natural way. In addition, since the ordering is enforced by the logic of the protocol, not by the goodwill of any particular validator, the protocol can burn all the fees at this stage, achieving the goals of <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590\">MEV Burn</a>.</p>\n<h2><a name=\"application-layer-4\" class=\"anchor\" href=\"https://ethresear.ch#application-layer-4\"></a>Application layer</h2>\n<p>Assuming we succeed in the above upgrades, Ethereum’s application layer will be free to upgrade their applications to be natively MEV-resistant while remaining totally onchain. We call the class of things they will do <strong>order-agnostic applications</strong> or order-agnostic mechanisms.</p>\n<p>For example take the problem of liquidation MEV. For the sake of argument, suppose we have 1000 ETH that needs to be liquidated for DAI. We don’t know what the appropriate price is for the ETH, so we have two options: we can guess the right price and have a posted price available to the first person who claims it, which is how Compound and Aave work, and leads to tremendous value leaked to liquidation races, reducing UX. Or, we can hold a Dutch auction, which leads to slightly less value leakage, but doesn’t allow us to clear the distressed debt right away. But now, with MCP and deterministic scheduling, these protocols can simply hold an onchain auction for the right to liquidate 1000 ETH and elicit the price that way.</p>\n<p>Order agnostic application design has a number of benefits, and there are many more examples of places where MEV leaks that can be solved. Future posts will elaborate on this.</p>\n<h2><a name=\"conclusion-5\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-5\"></a>Conclusion</h2>\n<p>The successful implementation of these upgrades will result in a much friendlier Ethereum for both developers and users. The first step of this research program is fleshing out and proving the security of a multi proposer design with simultaneous release. Other blockchains have multiple proposers, but are not designed in the same way or for the same purpose. If you are a consensus researcher interested in working on this topic, please reach out, we have funding available for this.</p>\n            <p><small>5 posts - 4 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/execution-consensus-separation/19964\">Read full topic</a></p>","link":"https://ethresear.ch/t/execution-consensus-separation/19964","pubDate":"Wed, 03 Jul 2024 19:09:20 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19964"},"source":{"@url":"https://ethresear.ch/t/execution-consensus-separation/19964.rss","#text":"Execution Consensus Separation"},"filter":false},{"title":"Fork Choice compliance test suites & test generator","dc:creator":"ericsson49","category":"Consensus","description":"<p>This is a preliminary announcement, we’ll officially announce during the next All Core Devs call.</p>\n<p>We (TxRx team, ConsenSys) have implemented a Fork Choice compliance test generator as well as have generated Fork Choice compliance test suites.</p>\n<p>Overall F/C compliance testing methodology is described <a href=\"https://hackmd.io/@ericsson49/fork-choice-implementation-vs-spec-testing\" rel=\"noopener nofollow ugc\">here</a>.</p>\n<p>In this report we briefly describe the results of the initial implementation phase (i.e. the F/C test generator and F/C test suites).  A more detailed description of the work is TBD.</p>\n<p>This work was supported by a grant from the Ethereum Foundation.</p>\n<h1><a name=\"implementation-status-1\" class=\"anchor\" href=\"https://ethresear.ch#implementation-status-1\"></a>Implementation status</h1>\n<h2><a name=\"test-generator-2\" class=\"anchor\" href=\"https://ethresear.ch#test-generator-2\"></a>Test generator</h2>\n<p>The initial version of the Fork Choice tests generator is implemented and currently available as a draft <a href=\"https://github.com/ethereum/consensus-specs/pull/3831\" rel=\"noopener nofollow ugc\">consensus-specs PR</a>. We have been focusing on minimizing efforts for client implementer teams to adopt the generated tests. The only a small change to the existing <a href=\"https://github.com/ethereum/consensus-specs/tree/dev/tests/formats/fork_choice\" rel=\"noopener nofollow ugc\">FC test format</a> is the addition of a <a href=\"https://github.com/ericsson49/eth2.0-specs/tree/fc-compliance2/tests/formats/fork_choice#checks-step\" rel=\"noopener nofollow ugc\">new check</a>, which is safe to ignore initially.</p>\n<h2><a name=\"test-suites-3\" class=\"anchor\" href=\"https://ethresear.ch#test-suites-3\"></a>Test suites</h2>\n<p>We have developed test generation parameters for three suites at the moment.</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Test suite</th>\n<th>size</th>\n<th>Purpose</th>\n<th>Status</th>\n<th>Link</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Tiny</td>\n<td>135 tests</td>\n<td>Demonstration, smoke testing</td>\n<td>Done</td>\n<td><a href=\"https://drive.google.com/file/d/1dWbkJY27fhOVX8i4aUuZ7VBkH3P_Vr1i/view?usp=drive_link\" rel=\"noopener nofollow ugc\">link</a></td>\n</tr>\n<tr>\n<td>Small</td>\n<td>1472 tests</td>\n<td>Initial adoption, smoke testing</td>\n<td>Done</td>\n<td><a href=\"https://drive.google.com/file/d/1EAIeTL5F3zelXK5pBkSLuawJjuLWQx3r/view?usp=drive_link\" rel=\"noopener nofollow ugc\">link</a></td>\n</tr>\n<tr>\n<td>Standard</td>\n<td>13240 tests</td>\n<td>Main testing</td>\n<td>Done</td>\n<td><a href=\"https://drive.google.com/file/d/1_56JObwYWHARgm5QYmE4vrkcLEru854G/view?usp=drive_link\" rel=\"noopener nofollow ugc\">link</a></td>\n</tr>\n<tr>\n<td>Extended</td>\n<td>about 100K tests</td>\n<td>Extended testing</td>\n<td>TBD</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</div><p><strong>Note</strong>: We are able to generate the Extended test suite. However, it will take significant time (about a week), therefore, we have delayed actual test suite generation until it will be demanded.</p>\n<p>It should be possible to generate test suites for any fork (Altair, Capella, Deneb) and preset (mainnet or minimal). However, test generation for mainnet is very slow. We have tested minimal/altair and minimal/deneb.</p>\n<p>Test generation currently is slow (about 10-15 seconds per test on average). However, a multiprocessing mode is supported (about 2 seconds per test on Apple M1). Generation of the Standard test suite takes about 8 hours (multiprocessing mode) or two days (single process mode).</p>\n<p>The reasons of slow performance are known and are to be alleviated in future. Currently, our top priority is to simplify adoption of the new test suites.</p>\n<h2><a name=\"testing-the-tests-4\" class=\"anchor\" href=\"https://ethresear.ch#testing-the-tests-4\"></a>Testing the tests</h2>\n<p>We have run the generated tests against <a href=\"https://github.com/Consensys/teku\" rel=\"noopener nofollow ugc\">Teku</a>, using Teku test runner and against the official executable Fork Choice spec (minimal/deneb), using a simple Python <a href=\"https://github.com/ericsson49/eth2.0-specs/blob/4a0745bd7c0ec6d6a216a8baf81bcb80c30ccaa3/tests/generators/fork_choice_generated/test_run.py\" rel=\"noopener nofollow ugc\">test runner</a>.</p>\n<h1><a name=\"test-generation-approach-5\" class=\"anchor\" href=\"https://ethresear.ch#test-generation-approach-5\"></a>Test generation approach</h1>\n<p>The test generation approach is a mix of model-based and fuzz testing.</p>\n<p>Principles:</p>\n<ul>\n<li>the Fork Choice spec is virtually “decomposed” into two parts: topological sorting of events and actual event processing</li>\n<li>tests are generated for the event processing part, the topological sorting part is addressed via event shuffling (time shift plus drop/duplication)</li>\n<li>models are used to describe the spec aspects that we want to cover. There are two flavors: trees of various shapes (for block trees and super-majority link trees) and predicates to be covered (<code>filter_block_tree</code>)</li>\n<li>for each model there can be multiple solutions, each solution can be seen as a template (e.g. SM link tree + block tree) which can be instantiated in multiple ways (varying validator actions)</li>\n<li>each test case can be mutated multiple times</li>\n</ul>\n<p>Tests are generated with four steps:</p>\n<ol>\n<li>Models (implemented using MiniZinc), describing abstract coverage aspects that we want to cover. Currently there are three models: <a href=\"https://github.com/ericsson49/eth2.0-specs/blob/4a0745bd7c0ec6d6a216a8baf81bcb80c30ccaa3/tests/generators/fork_choice_generated/model/minizinc/SM_links.mzn\" rel=\"noopener nofollow ugc\">SM link</a> (super-majority link) tree model, <a href=\"https://github.com/ericsson49/eth2.0-specs/blob/4a0745bd7c0ec6d6a216a8baf81bcb80c30ccaa3/tests/generators/fork_choice_generated/model/minizinc/Block_tree.mzn\" rel=\"noopener nofollow ugc\">Block tree</a> model and <a href=\"https://github.com/ericsson49/eth2.0-specs/blob/4a0745bd7c0ec6d6a216a8baf81bcb80c30ccaa3/tests/generators/fork_choice_generated/model/minizinc/Block_cover3.mzn\" rel=\"noopener nofollow ugc\">Block cover</a> model.</li>\n<li>For each model a set of solutions is produced. The models are parameterized, which affects the size of solution set generated.\n<ul>\n<li>SM link and block tree solutions are combined into a single block tree.</li>\n</ul>\n</li>\n<li>Each solution is instantiated using two test instantiators (<a href=\"https://github.com/ericsson49/eth2.0-specs/blob/4a0745bd7c0ec6d6a216a8baf81bcb80c30ccaa3/tests/generators/fork_choice_generated/instantiators/block_tree.py\" rel=\"noopener nofollow ugc\">block tree</a> and <a href=\"https://github.com/ericsson49/eth2.0-specs/blob/4a0745bd7c0ec6d6a216a8baf81bcb80c30ccaa3/tests/generators/fork_choice_generated/instantiators/block_cover.py\" rel=\"noopener nofollow ugc\">block cover</a>). The instantiation is randomized, i.e. a coin is flipped on each decision point. This results in a complete Fork Choice test case (i.e. <em>anchor state</em> plus a sequence of <em>tick</em> | <em>block</em> | <em>attestation</em> | <em>attester_slashing</em> events).</li>\n<li>Each test case is mutated via <a href=\"https://github.com/ericsson49/eth2.0-specs/blob/4a0745bd7c0ec6d6a216a8baf81bcb80c30ccaa3/tests/generators/fork_choice_generated/instantiators/mutation_operators.py\" rel=\"noopener nofollow ugc\">mutation</a> (shuffling) operators. Currently, there are thee mutation operator: time shift, drop and duplicate (with consequent shifting).</li>\n</ol>\n<p>The models are developed manually.<br>\nSolutions to the models are produced with a special <a href=\"https://github.com/ericsson49/eth2.0-specs/blob/4a0745bd7c0ec6d6a216a8baf81bcb80c30ccaa3/tests/generators/fork_choice_generated/generate_test_instances.py\" rel=\"noopener nofollow ugc\">generator</a>.<br>\nTest instantiators and mutations are performed with <a href=\"https://github.com/ericsson49/eth2.0-specs/blob/4a0745bd7c0ec6d6a216a8baf81bcb80c30ccaa3/tests/generators/fork_choice_generated/test_gen.py\" rel=\"noopener nofollow ugc\">test_gen.py</a>.</p>\n<p>After tests are generated, one can validate the produced test steps using <a href=\"https://github.com/ericsson49/eth2.0-specs/blob/4a0745bd7c0ec6d6a216a8baf81bcb80c30ccaa3/tests/generators/fork_choice_generated/test_run.py\" rel=\"noopener nofollow ugc\">test_run.py</a> script, which executes the steps using the pyspecs, performing prescribed checks.</p>\n<h1><a name=\"test-structure-6\" class=\"anchor\" href=\"https://ethresear.ch#test-structure-6\"></a>Test structure</h1>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Test group</th>\n<th>size (standard suite)</th>\n<th>parameters (solutions + variations + mutations)</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Block tree</td>\n<td>4096 tests</td>\n<td>1024*2*(1+1)</td>\n<td>focus on trees of varying shapes</td>\n</tr>\n<tr>\n<td>Block weight</td>\n<td>2048 tests</td>\n<td>8*64*(1+3)</td>\n<td>focus on producing block trees with varying weights</td>\n</tr>\n<tr>\n<td>Shuffling</td>\n<td>2048 tests</td>\n<td>8*4*(1+63)</td>\n<td>focus on shuffling/mutation operators</td>\n</tr>\n<tr>\n<td>Attester slashing</td>\n<td>1024 tests</td>\n<td>8*16*(1+7)</td>\n<td>focus on attester slashing</td>\n</tr>\n<tr>\n<td>Invalid messages</td>\n<td>1024 tests</td>\n<td>8*32*(1+3)</td>\n<td>focus on invalid messages</td>\n</tr>\n<tr>\n<td>Block cover</td>\n<td>3000 tests</td>\n<td>60*5*(1+9)</td>\n<td>cover various combinations of predicates from the <code>filter_block_tree</code> method</td>\n</tr>\n</tbody>\n</table>\n</div><h1><a name=\"future-steps-7\" class=\"anchor\" href=\"https://ethresear.ch#future-steps-7\"></a>Future steps</h1>\n<ul>\n<li>improve performance. Performance is adequate right now (for the initial adoption phase). But is the main blocker otherwise.</li>\n<li>more flexible test generation. More and better models, better instantiators, better mutation operators.</li>\n<li>coverage-guided fuzzing</li>\n<li>new test vector format (don’t need full test cases for fuzz testing, as need to compare against the FC spec anyway)</li>\n</ul>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/fork-choice-compliance-test-suites-test-generator/19954\">Read full topic</a></p>","link":"https://ethresear.ch/t/fork-choice-compliance-test-suites-test-generator/19954","pubDate":"Tue, 02 Jul 2024 20:00:49 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19954"},"source":{"@url":"https://ethresear.ch/t/fork-choice-compliance-test-suites-test-generator/19954.rss","#text":"Fork Choice compliance test suites & test generator"},"filter":false},{"title":"Ethereum Node Message Propagation Bandwidth Consumption","dc:creator":"yiannisbot","category":"Networking","description":"<h1><a name=\"summary-tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#summary-tldr-1\"></a>Summary &amp; TL;DR</h1>\n<p>The ProbeLab team (<a href=\"https://probelab.io/\" rel=\"noopener nofollow ugc\">probelab.io </a>) is carrying out a study on the performance of Gossipsub in Ethereum’s P2P network. Following from our previous post on the <a href=\"https://ethresear.ch/t/number-duplicate-messages-in-ethereums-gossipsub-network/19921\" class=\"inline-onebox\">Number Duplicate Messages in Ethereum's Gossipsub Network</a>, in this post we investigate bandwidth consumption at the GossipSub level, i.e., bandwidth consumption for message propagation. The target of the study is to identify the protocol components that consume the biggest share of network bandwidth. The study has been co-authored by <a class=\"mention\" href=\"https://ethresear.ch/u/cortze\">@cortze</a> and <a class=\"mention\" href=\"https://ethresear.ch/u/yiannisbot\">@yiannisbot</a>.</p>\n<p>For the purposes of this study, we have built a tool called <strong>Hermes, which acts as a GossipSub listener and tracer</strong> (<a href=\"https://github.com/probe-lab/hermes/\" rel=\"noopener nofollow ugc\">GitHub - probe-lab/hermes: A Gossipsub listener and tracer. </a>). Hermes subscribes to all relevant pubsub topics and traces all protocol interactions. The results reported here are from a 3.5hr trace.</p>\n<p><strong>Study Description:</strong> The distributed nature of p2p systems makes them generally less effective in computational, latency, and bandwidth consumption. This is due to the extra interactions between nodes needed to organize a p2p network without a central authority that bridges between peers. Thus, taking care of processes, such as peer or content discovery, content sharing, and message broadcasting often become a challenge, or bottleneck.</p>\n<p>Ethereum is not different in that respect. Message propagation takes a large portion of the network bandwidth used by a node in the Ethereum network. This study investigates bandwidth consumption at the GossipSub level. The target is to identify the protocol components that consume the biggest share of network bandwidth.</p>\n<p><strong>TL;DR:</strong> Despite the fact that the configuration of our <code>Hermes</code> node, which, in this case, doesn’t represent a standard node in the Ethereum network, the bandwidth consumption numbers of GossipSub validate that there’s plenty of space for optimization.</p>\n<p>We observed that a significant portion of bandwidth is spent on <code>SENT_IHAVE</code> messages (23.4% of the total bandwidth and 30% of the total outgoing bandwidth) and <code>RECV_IHAVE</code> messages (10% of the total bandwidth, and 42% of the total inbound bandwidth).</p>\n<p>More than anything, these findings validate the improvement recommendations made during our previous study on the “Effectiveness of Gossipsub’s gossip mechanism”: <a href=\"https://ethresear.ch/t/gossip-iwant-ihave-effectiveness-in-ethereums-gossipsusb-network/19686\" class=\"inline-onebox\">Gossip IWANT/IHAVE Effectiveness in Ethereum's Gossipsusb network</a></p>\n<p>Taking into account that a node doesn’t only receive duplicated messages but also generates duplicates to others, we strongly recommend pushing the <a href=\"https://github.com/libp2p/specs/pull/560\" rel=\"noopener nofollow ugc\">GossipSub1.2</a> initiative, as it will effectively eliminate the bandwidth wasted on receiving or generating duplicates, which amounts to ~42% of total bandwidth.</p>\n<h1><a name=\"results-on-bandwidth-consumption-2\" class=\"anchor\" href=\"https://ethresear.ch#results-on-bandwidth-consumption-2\"></a>Results on Bandwidth Consumption</h1>\n<blockquote>\n<p><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/eyes.png?v=12\" title=\":eyes:\" class=\"emoji\" alt=\":eyes:\" loading=\"lazy\" width=\"20\" height=\"20\"> NOTES: The bandwidth usage displayed in this study is limited to:</p>\n<ul>\n<li>The <code>Holesky</code> network</li>\n<li>The GossipSub RPC calls</li>\n<li>The following GossipSub topics:\n<ul>\n<li><code>beacon_block</code></li>\n<li><code>beacon_aggregate_and_proof</code></li>\n<li><code>sync_commmittee_contribution_and_proof</code></li>\n<li><code>attester_slashing</code></li>\n<li><code>proposer_slashing</code></li>\n<li><code>voluntary_exit</code> * (check <code>Hermes</code> issue → <a href=\"https://github.com/probe-lab/hermes/issues/24\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Broadcasting of invalid `voluntary_exit` messages to mesh peers · Issue #24 · probe-lab/hermes · GitHub</a>)</li>\n<li><code>bls_to_execution_change</code></li>\n</ul>\n</li>\n<li>The bandwidth of <code>SENT_IHAVE</code> and <code>RECV_IHAVE</code> RPC calls has been calculated based on the number of bytes per <code>topic</code>  strings and <code>msg_ids</code> that were inside.</li>\n</ul>\n</blockquote>\n<h2><a name=\"netin-vs-netout-3\" class=\"anchor\" href=\"https://ethresear.ch#netin-vs-netout-3\"></a>NetIn vs NetOut</h2>\n<p>The study starts with a general overview of what is the ratio of sent vs received bandwidth consumption. The following graph shows that on the <code>Hermes</code> node, the biggest share of the bandwidth comes from the data that we send out to the connected peers.</p>\n<p>The total outbound bandwidth is around 3 to 4 times higher than the inbound. Note that <code>Hermes</code> differs from a standard node in that it keeps more peer connections (around 250 peers). This clearly has a significant impact on bandwidth usage. That said, although the numbers are not representative of the bandwidth usage of a normal node in absolute terms, the percentage split still represents that of a normal node.</p>\n<p>Narrowing down, we observe a ratio of 700-800 KB/s for outgoing traffic and 200 KB/s for incoming traffic.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/f/4fb2e194b5b97ea9f84092740d059ad4447d2061.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/4fb2e194b5b97ea9f84092740d059ad4447d2061\" title=\"bandwidth-in-out\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/f/4fb2e194b5b97ea9f84092740d059ad4447d2061_2_517x309.jpeg\" alt=\"bandwidth-in-out\" data-base62-sha1=\"bn2YdJQu0qTJ9woJOCS7ZJq8IWB\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/f/4fb2e194b5b97ea9f84092740d059ad4447d2061_2_517x309.jpeg, https://ethresear.ch/uploads/default/optimized/3X/4/f/4fb2e194b5b97ea9f84092740d059ad4447d2061_2_775x463.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/f/4fb2e194b5b97ea9f84092740d059ad4447d2061_2_1034x618.jpeg 2x\" data-dominant-color=\"FAF9F9\"></a></div><p></p>\n<h2><a name=\"bandwidth-based-on-each-event-type-4\" class=\"anchor\" href=\"https://ethresear.ch#bandwidth-based-on-each-event-type-4\"></a>Bandwidth based on each event type</h2>\n<p>GossipSub sends multiple types of messages with different purposes. From control messages to keep the mesh stable to pure messages or gossip  <code>IHAVE</code> / <code>IWANT</code>  messages to ensure that the host didn’t miss any message. Each of these message types requires sending RPC calls, adding up to the total of sent and received network traffic.</p>\n<p>The following graphs isolate the bandwidth attributed to each of the events. The first one shows the raw KB/s over time, and the second one shows the percentage of each event over the aggregated total.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/3/b352576dc2b9350a99470bde3eb0710d0e710d3c.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/b352576dc2b9350a99470bde3eb0710d0e710d3c\" title=\"bandwidth-by-event\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/3/b352576dc2b9350a99470bde3eb0710d0e710d3c_2_517x309.jpeg\" alt=\"bandwidth-by-event\" data-base62-sha1=\"pAlSKDwvzy4cMRcBJ9DWkTI1OHO\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/3/b352576dc2b9350a99470bde3eb0710d0e710d3c_2_517x309.jpeg, https://ethresear.ch/uploads/default/optimized/3X/b/3/b352576dc2b9350a99470bde3eb0710d0e710d3c_2_775x463.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/3/b352576dc2b9350a99470bde3eb0710d0e710d3c_2_1034x618.jpeg 2x\" data-dominant-color=\"F7F6F6\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/b/ab8bda76fba67303a9b9991902f5ff1805c63175.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/ab8bda76fba67303a9b9991902f5ff1805c63175\" title=\"bandwidth-ratio-by-event\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/b/ab8bda76fba67303a9b9991902f5ff1805c63175_2_517x309.jpeg\" alt=\"bandwidth-ratio-by-event\" data-base62-sha1=\"otzhtJaZcdLr3nceJzttiOy4qGx\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/b/ab8bda76fba67303a9b9991902f5ff1805c63175_2_517x309.jpeg, https://ethresear.ch/uploads/default/optimized/3X/a/b/ab8bda76fba67303a9b9991902f5ff1805c63175_2_775x463.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/a/b/ab8bda76fba67303a9b9991902f5ff1805c63175_2_1034x618.jpeg 2x\" data-dominant-color=\"F6F6F8\"></a></div><p></p>\n<h3><a name=\"percentage-table-5\" class=\"anchor\" href=\"https://ethresear.ch#percentage-table-5\"></a>Percentage Table</h3>\n<pre><code>| Event | % of total BW | % of Received BW | % of Sent BW |\n| --- | --- | --- | --- |\n| RECV_GRAFT | 0.000367 | 0.001565 | ———————— |\n| RECV_IHAVE | 9.974349 | 42.537746 | ———————— |\n| RECV_IWANT | 2.368042 | 10.099021 | ———————— |\n| RECV_MSG  (duplicated) | 7.347250 | 31.333920 | ———————— |\n| RECV_MSG | 3.640691 | 15.526507 | ———————— |\n| RECV_PRUNE | 0.002973 | 0.012678 | ———————— |\n| RECV_SUBS | 0.114559 | 0.488562 | ———————— |\n| SENT_GRAFT | 0.002863 | ———————— | 0.003740 |\n| SENT_IHAVE | 23.404913 | ———————— | 30.573967 |\n| SENT_IWANT | 0.094569 | ———————— | 0.123536 |\n| SENT_MSG | 53.049257 | ———————— | 69.298539 |\n| SENT_PRUNE | 0.000164 | ———————— | 0.000214 |\n| SENT_SUBS | 0.000003 | ———————— | 0.000004 |\n</code></pre>\n<p>From the above graphs, we can observe that:</p>\n<ul>\n<li>The <code>SENT_MSG</code> event is the one that consumes the most network traffic, with a total of 53% of the total network traffic and 69% of the total sent traffic.<br>\nIt has a spiky oscillation between 500 to 700 KB/s, and it is clearly the most bandwidth consuming event.<br>\nIt is hard to define which is the ratio of duplicates that all those sent messages generate on the remote side. However, we could assume that it would follow a similar pattern to the <code>RECV_MSG</code> one (2 duplicate bytes per 1 original byte).</li>\n<li>Surprisingly, the <code>SENT_IHAVE</code> event follows <code>SENT_MSG</code>s in terms of consumed bandwidth with a total of 23.4% of the total bandwidth and 30% of the total outgoing bandwidth. Interestingly, subscribing to topics with a high frequency of messages (even if they are small in size), does have an impact on the bandwidth that we use sending those <code>IHAVE</code> messages.<br>\nEach <code>IHAVE</code> is limited to <code>5,000</code> message IDs; however, with a message ID of 40 bytes, it still adds up to a maximum of 200KBs in message IDs on every heartbeat (0.7s in the case of Ethereum).</li>\n<li><code>RECV_IHAVES</code> represent 10% of the total bandwidth, and 42% of the total inbound bandwidth, with an inbound network bandwidth requirement of 100KB/s.</li>\n<li>The above two points showcase that, far from being negligible on the overall value they provide, the total bandwidth used on <code>IHAVE</code> messages represents almost 400KB/s, consuming 23% of the total outgoing bandwidth and more than 40% of the incoming bandwidth.</li>\n<li>The <code>RECV_MSG</code> events remain in the fourth position with a representation of 11% of the total consumed bandwidth, where only 3.6% belong to unique or original messages, and the remaining 7.3% belong to duplicates. In terms of the overall inbound bandwidth, they represent 15% and 31%, respectively, for original and duplicated received messages.</li>\n<li>On a much lower ratio, the whole list of <code>RECV_IWANT</code> messages stays within a lower 2.3% of the total bandwidth usage, which represents 10% of the total received bytes.</li>\n</ul>\n<h2><a name=\"comparison-with-live-nodes-6\" class=\"anchor\" href=\"https://ethresear.ch#comparison-with-live-nodes-6\"></a>Comparison with live nodes</h2>\n<p>In order to validate the previous measurements taken from the GossipSub module at <code>Hermes</code>, we’ve compared the bandwidth usage ratios with standard running Ethereum nodes:</p>\n<ul>\n<li>Local Prysm node at home setup (Holesky) reports an average received network traffic of 386KB/s and a sent network traffic of 580KB/s.<br>\nAlthough the numbers might be slightly different, these measurements take the whole traffic of the Beacon Node docker container, which includes:\n<ul>\n<li>Peer discovery</li>\n<li>Requests/Responses like <code>beacon_blocs</code> or <code>blobs</code> by range or by root</li>\n</ul>\n</li>\n</ul>\n<p>The MigaLabs <a href=\"https://monitoreth.io/node_metrics#network-in-out\" rel=\"noopener nofollow ugc\">public dashboard</a> at <a href=\"https://monitoreth.io/node_metrics\" rel=\"noopener nofollow ugc\">monitor.eth</a> shows slightly bigger bandwidth usage than the ones we measured. However, it is unclear whether the measurement includes the Execution Layer. The reported bandwidth reports an average of 290KB/s inbound and 1.2MB/s outbound, although it doesn’t include many data points (5 points per hour) and the variation is noticeable.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/7/c7cf74da4a25ce8b98d757eeaebf56696d2c6aa6.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/c7cf74da4a25ce8b98d757eeaebf56696d2c6aa6\" title=\"migalabs\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/7/c7cf74da4a25ce8b98d757eeaebf56696d2c6aa6_2_517x315.jpeg\" alt=\"migalabs\" data-base62-sha1=\"svBunEWiCdQ7bxoz0bAfHwJe18i\" width=\"517\" height=\"315\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/7/c7cf74da4a25ce8b98d757eeaebf56696d2c6aa6_2_517x315.jpeg, https://ethresear.ch/uploads/default/optimized/3X/c/7/c7cf74da4a25ce8b98d757eeaebf56696d2c6aa6_2_775x472.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/7/c7cf74da4a25ce8b98d757eeaebf56696d2c6aa6_2_1034x630.jpeg 2x\" data-dominant-color=\"EEF3FA\"></a></div><p></p>\n<h1><a name=\"conclusions-and-takeaways-7\" class=\"anchor\" href=\"https://ethresear.ch#conclusions-and-takeaways-7\"></a>Conclusions and takeaways</h1>\n<p>Despite the fact that the configuration of our <code>Hermes</code> node, which, in this case, doesn’t represent a standard node in the Ethereum network, the bandwidth consumption numbers of GossipSub validate that there’s plenty of space for optimization.</p>\n<p>We observed that <strong>a significant portion of bandwidth is spent on <code>SENT_IHAVE</code> (23.4% of the total bandwidth and 30% of the total outgoing bandwidth) and <code>RECV_IHAVE</code> (10% of the total bandwidth, and 42% of the total inbound bandwidth)</strong>.</p>\n<p>More than anything, these findings validate the improvement recommendations made during our previous study on the “Effectiveness of Gossipsub’s gossip mechanism”: <a href=\"https://ethresear.ch/t/gossip-iwant-ihave-effectiveness-in-ethereums-gossipsusb-network/19686\" class=\"inline-onebox\">Gossip IWANT/IHAVE Effectiveness in Ethereum's Gossipsusb network</a></p>\n<p>Taking into account that a node doesn’t only receive duplicated messages but also generates duplicates to others, we strongly recommend pushing the <a href=\"https://github.com/libp2p/specs/pull/560\" rel=\"noopener nofollow ugc\">GossipSub1.2</a> initiative, as it will effectively eliminate the bandwidth wasted on receiving or generating duplicates, which amounts to ~42% of total bandwidth.</p>\n<p>Even currently though, the network bandwidth usage of a host in the Ethereum network (around 300 KB/s inbound and 1.1 MB/s outbound, including the EL) still constitutes a small percentage of the <a href=\"https://fairinternetreport.com/research/internet-speed-by-country/\" rel=\"noopener nofollow ugc\">average household</a> bandwidth availability, which varies between 8MB/s and 26MB/s depending on the region.</p>\n<p>For more details and <strong>weekly network health reports on Ethereum’s discv5 DHT network</strong> head over to <a href=\"https://probelab.io/\" rel=\"noopener nofollow ugc\">probelab.io</a>.</p>\n            <p><small>4 posts - 3 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/ethereum-node-message-propagation-bandwidth-consumption/19952\">Read full topic</a></p>","link":"https://ethresear.ch/t/ethereum-node-message-propagation-bandwidth-consumption/19952","pubDate":"Tue, 02 Jul 2024 14:39:15 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19952"},"source":{"@url":"https://ethresear.ch/t/ethereum-node-message-propagation-bandwidth-consumption/19952.rss","#text":"Ethereum Node Message Propagation Bandwidth Consumption"},"filter":false},{"title":"Fork Choice Attacks and Protections in EPBS","dc:creator":"terence","category":"Proof-of-Stake","description":"<h2><a name=\"introduction-1\" class=\"anchor\" href=\"https://ethresear.ch#introduction-1\"></a>Introduction</h2>\n<p>This post explores fork choice attacks through the perspective of ePBS, focusing on the new fork choice boost parameters and the rationale behind their design. We’ll begin by examining why these parameters are crucial, followed by a review of the existing designs. For background reading, I recommend reading <a href=\"https://ethresear.ch/t/payload-boosts-in-epbs/18769\">Payload Boosts in ePBS</a> by Potuz. Additionally, for a deeper understanding of how the LMD GHOST fork choice operates today, consider Ben Edgington’s section on fork choice in his book, <a href=\"https://eth2book.info/capella/part3/forkchoice/\" rel=\"noopener nofollow ugc\">Upgrading Ethereum</a>. Let’s dive in!</p>\n<h4><a name=\"references-2\" class=\"anchor\" href=\"https://ethresear.ch#references-2\"></a>References</h4>\n<p><a href=\"https://ethresear.ch/t/payload-boosts-in-epbs/18769\">Payload boosts in ePBS</a> - Feb/2024 By Potuz<br>\n<a href=\"https://ethresear.ch/t/sandwitch-attacks-on-epbs/19538/1\">Sandwitch attacks on ePBS</a> - May/2024 By Potuz</p>\n<h2><a name=\"fork-choice-attacks-today-3\" class=\"anchor\" href=\"https://ethresear.ch#fork-choice-attacks-today-3\"></a>Fork choice attacks today</h2>\n<p>We analyze these scenarios from both the attacker’s and the victim’s perspectives, focusing on two consecutive proposal slots, each with distinct proposers. Two primary types of attacks can emerge:</p>\n<ol>\n<li>The proposer of slot <span class=\"math\">n+1</span> attacks the proposer of slot <span class=\"math\">n</span>.</li>\n<li>The proposer of slot <span class=\"math\">n</span> attacks the proposer of slot <span class=\"math\">n+1</span>.</li>\n</ol>\n<p>To clarify, by “attack,” we mean an attempt to reorg the block out of the canonical chain. The motives behind such a reorg typically include:</p>\n<ol>\n<li>Stealing the content of the block.</li>\n<li>Increasing the time available to build the block, making a 24-second block more valuable than a 12-second one.</li>\n</ol>\n<h3><a name=\"ex-post-attack-4\" class=\"anchor\" href=\"https://ethresear.ch#ex-post-attack-4\"></a>Ex-Post attack</h3>\n<p>The first type of attack is a Ex-Post attack, where the proposer of slot <span class=\"math\">n+1</span> attempts to reorg the block from slot <span class=\"math\">n</span>. In this scenario, the proposer of <span class=\"math\">n+1</span> utilizes the <a href=\"https://eth2book.info/capella/part3/forkchoice/phase0/#proposer-boost\" rel=\"noopener nofollow ugc\">proposer boost</a> to gain an advantage and potentially reorg the block from slot <span class=\"math\">n</span>. Currently, the proposer boost is set at 40%. This means that as long as the block at slot <span class=\"math\">n</span> receives votes from more than 40% of the beacon committee, it is safe against a reorg. Typically, we define the percentage of the beacon committee that belongs to the attacker as <span class=\"math\">\\delta</span>. An attacker can successfully reorg a block if <span class=\"math\">\\delta &gt; 1 - PB</span>, which is 60% under today’s parameters.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/f/3f93dac13fced8dbaa43115f19cd6ae45668406d.png\" data-download-href=\"https://ethresear.ch/uploads/default/3f93dac13fced8dbaa43115f19cd6ae45668406d\" title=\"Screenshot 2024-06-26 at 12.57.24 PM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/f/3f93dac13fced8dbaa43115f19cd6ae45668406d_2_690x297.png\" alt=\"Screenshot 2024-06-26 at 12.57.24 PM\" data-base62-sha1=\"94qRa6yB9FmxWYQnfG0nT5DPwyV\" width=\"690\" height=\"297\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/f/3f93dac13fced8dbaa43115f19cd6ae45668406d_2_690x297.png, https://ethresear.ch/uploads/default/original/3X/3/f/3f93dac13fced8dbaa43115f19cd6ae45668406d.png 1.5x, https://ethresear.ch/uploads/default/original/3X/3/f/3f93dac13fced8dbaa43115f19cd6ae45668406d.png 2x\" data-dominant-color=\"EDE4E3\"></a></div><p></p>\n<h3><a name=\"ex-ante-attack-5\" class=\"anchor\" href=\"https://ethresear.ch#ex-ante-attack-5\"></a>Ex-Ante attack</h3>\n<p>The second type of attack is known as the Ex-Anteattack, where the proposer of slot <span class=\"math\">n</span> attempts to reorg the block from slot <span class=\"math\">n+1</span>. This type of attack is inherently difficult to pull off because the proposer boost grants a 40% advantage to the block at slot <span class=\"math\">n+1</span>. To successfully carry out this attack, the attacker’s beacon committee must withhold their attestations and block then release them synchronously which occurs shortly after the block at slot <span class=\"math\">n+1</span> is published. To reorg the block at slot <span class=\"math\">n+1</span>, the attacker’s beacon committee support must exceed the proposer boost. We can assert that an attacker can reorg a block if <span class=\"math\">\\delta &gt; PB</span>, which is 40% under today’s parameter.</p>\n<p>It is worth mentioning in Ex-Ante attack, attackers who propose multiple consecutive slots have an added advantage. For two slots, the effectiveness of the attack can be simplified to the expression <span class=\"math\">\\delta / 2 &gt; PB</span>, requiring only 20% of the stake per slot to reorg an honest block.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/c/ccb28f1581907f015d5780dae95dd78444ba59d8.png\" data-download-href=\"https://ethresear.ch/uploads/default/ccb28f1581907f015d5780dae95dd78444ba59d8\" title=\"Screenshot 2024-06-26 at 12.57.38 PM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/c/ccb28f1581907f015d5780dae95dd78444ba59d8_2_690x340.png\" alt=\"Screenshot 2024-06-26 at 12.57.38 PM\" data-base62-sha1=\"tcPXOipxqyVGi1rugZQ6DsNrmt2\" width=\"690\" height=\"340\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/c/ccb28f1581907f015d5780dae95dd78444ba59d8_2_690x340.png, https://ethresear.ch/uploads/default/original/3X/c/c/ccb28f1581907f015d5780dae95dd78444ba59d8.png 1.5x, https://ethresear.ch/uploads/default/original/3X/c/c/ccb28f1581907f015d5780dae95dd78444ba59d8.png 2x\" data-dominant-color=\"EDE2E1\"></a></div><p></p>\n<h2><a name=\"fork-choice-attacks-in-epbs-6\" class=\"anchor\" href=\"https://ethresear.ch#fork-choice-attacks-in-epbs-6\"></a>Fork choice attacks in ePBS</h2>\n<p>In the ePBS model, the introduction of a <strong>builder block between two proposer blocks</strong> complicates the landscape of potential attacks beyond what we see today. This addition expands the array of possible attack scenarios:</p>\n<h3><a name=\"pre-epbs-scenarios-7\" class=\"anchor\" href=\"https://ethresear.ch#pre-epbs-scenarios-7\"></a>Pre-ePBS Scenarios:</h3>\n<ol>\n<li><strong>Proposer <span class=\"math\">n+1</span> attacking proposer <span class=\"math\">n</span></strong> - This scenario concerns Ex-Post reorg safety.</li>\n<li><strong>Proposer <span class=\"math\">n</span> attacking proposer <span class=\"math\">n+1</span></strong> - This scenario concerns Ex-Ante reorg safety.</li>\n</ol>\n<h3><a name=\"post-epbs-scenarios-8\" class=\"anchor\" href=\"https://ethresear.ch#post-epbs-scenarios-8\"></a>Post-ePBS Scenarios:</h3>\n<ol>\n<li><strong>Proposer of <span class=\"math\">n+1</span> and builder of <span class=\"math\">n</span> collude and attack proposer of <span class=\"math\">n</span></strong> - This scenario concerns proposer Ex-Post reorg safety.</li>\n<li><strong>Proposer and builder of <span class=\"math\">n</span> collude and attack proposer of <span class=\"math\">n+1</span></strong> - This scenario concerns proposer Ex-Ante reorg safety.</li>\n<li><strong>Proposer of <span class=\"math\">n+1</span> and <span class=\"math\">n</span> collude and attack builder of <span class=\"math\">n</span></strong> - This scenario introduces builder safety, including reorg safety and withholding safety.</li>\n</ol>\n<p>Before we go into the specific attack scenarios under the ePBS framework, it’s important to establish the incentives for honest builder behavior. Similar to the proposer boost, builders are also incentivized through boosts for honest actions through <a href=\"https://ethresear.ch/t/payload-timeliness-committee-ptc-an-epbs-design/16054\">payload timeliness committee</a>.</p>\n<ul>\n<li><strong>Reveal Boost (<span class=\"math\">RB</span>)</strong>: Awarded to builders who timely reveal their payloads.</li>\n<li><strong>Withheld Boost (<span class=\"math\">WB</span>)</strong>: Granted if a builder, feeling unsafe about revealing the payload, opts to release a withheld message. This boost gives weight to the parent block of the committed consensus block.</li>\n</ul>\n<p>These boosts also ensure both builder <strong>reveal</strong> and <strong>withhold</strong> safety. Builder reveal safety means that if the builder acted honestly and revealed a payload in a timely fashion (as attested by the PTC), then the revealed payload should be on-chain. Builder withhold safety means that if a beacon block containing a builder’s header is withheld or revealed late, then that beacon block should not be the canonical head of the blockchain in the view of honest validators.</p>\n<p>To ensure clarity and maintain focus throughout our discussion, we will designate the boosts as follows: Reveal Boost (<span class=\"math\">RB</span>), Withheld Boost (<span class=\"math\">WB</span>), and Proposer Boost (<span class=\"math\">PB</span>). The specific values of these boosts will be displayed towards the end of the post. Now, let’s explore the first scenario: the proposer Ex-Post attack in ePBS.</p>\n<h3><a name=\"proposer-ex-post-attack-9\" class=\"anchor\" href=\"https://ethresear.ch#proposer-ex-post-attack-9\"></a>Proposer Ex-Post attack</h3>\n<p>As you may have noted, this scenario is similar to the Ex-Post attack today, except that the builder of <span class=\"math\">n</span> colludes with the proposer of <span class=\"math\">n+1</span>. We also assume that a portion of the beacon committee is part of the malicious team, represented by <span class=\"math\">\\delta</span>. The Ex-Post attack is successful if <span class=\"math\">WB + PB + \\delta &gt; 1 - \\delta</span>. This indicates that Ex-Post attack resistance is weaker in ePBS due to the added power of the withheld boost from the colluding builder.</p>\n<p>Let’s examine the benefits for the attacker in a successful attack:</p>\n<ul>\n<li>The block at <span class=\"math\">n+1</span> gains two slots worth of transactions by reorg out <span class=\"math\">n</span>, resulting in more time and more transactions, thereby increasing its block value.</li>\n<li>Since <span class=\"math\">n</span>'s payload was revealed as withheld, and both <span class=\"math\">n</span>'s builder and <span class=\"math\">n+1</span>'s proposer collude, there is no opportunity to steal <span class=\"math\">n</span>'s payload transaction content. They are all on the same team.</li>\n<li>From <span class=\"math\">n</span>'s proposer’s perspective, the loss includes the opportunity to propose a beacon block, and from the protocol’s perspective, it results in the loss of one slot worth of consensus liveness.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/c/bceef4d59d54e6590addac9fc886b98f4d419f29.png\" data-download-href=\"https://ethresear.ch/uploads/default/bceef4d59d54e6590addac9fc886b98f4d419f29\" title=\"Screenshot 2024-06-26 at 12.57.48 PM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/c/bceef4d59d54e6590addac9fc886b98f4d419f29_2_690x225.png\" alt=\"Screenshot 2024-06-26 at 12.57.48 PM\" data-base62-sha1=\"qXnJ1gNl05bHQXJCDbl0st1Z3aF\" width=\"690\" height=\"225\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/c/bceef4d59d54e6590addac9fc886b98f4d419f29_2_690x225.png, https://ethresear.ch/uploads/default/original/3X/b/c/bceef4d59d54e6590addac9fc886b98f4d419f29.png 1.5x, https://ethresear.ch/uploads/default/original/3X/b/c/bceef4d59d54e6590addac9fc886b98f4d419f29.png 2x\" data-dominant-color=\"ECEBEB\"></a></div><p></p>\n<h3><a name=\"proposer-ex-ante-attack-10\" class=\"anchor\" href=\"https://ethresear.ch#proposer-ex-ante-attack-10\"></a>Proposer Ex-Ante attack</h3>\n<p>Let’s move on to the second scenario: the proposer Ex-Ante attack in ePBS. In this scenario, we will examine the most extreme version where the builder’s Reveal Boost (<span class=\"math\">RB</span>) is leveraged for the Ex-Ante attack. What does this attack look like?</p>\n<p>The proposer of slot <span class=\"math\">n</span> withholds the block and the beacon committee, represented by <span class=\"math\">\\delta</span>, withholds the attestations. The attacking builder of slot <span class=\"math\">n</span> releases the payload on time to gain the <span class=\"math\">RB</span>. The Ex-Ante attack is successful if <span class=\"math\">RB + \\delta &gt; PB</span>. However, realistically, the proposer will try to split the beacon committee into portions seen (<span class=\"math\">x</span>) and not seen (<span class=\"math\">1-x</span>). This modifies the equation to <span class=\"math\">RB + x + \\delta &gt; PB + 1-x</span>.</p>\n<p>Let’s examine the benefits for the attacker in a successful attack:</p>\n<ul>\n<li>The block at slot <span class=\"math\">n</span> reorgs out slot <span class=\"math\">n+1</span>. Unlike a Ex-Post attack, the builder of slot <span class=\"math\">n</span> must commit and release the payload on time to gain the <span class=\"math\">RB</span>. Due to this commitment:\n<ul>\n<li>Even if the attack is successful, it only provides one slot of transactions without leading to more time and more transactions. The proposer of slot <span class=\"math\">n+2</span> benefits here.</li>\n<li>It cannot steal slot <span class=\"math\">n+1</span>'s transactions because the payload is pre-committed, leaving nothing to steal from the consensus block.</li>\n</ul>\n</li>\n</ul>\n<p>In other words, the Ex-Ante attack is less valuable than the Ex-Post attack if we assume the worst-case scenario for both.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/0/f/0fb72294c98dbb6a1be55419420ebf8144cfaa62.png\" data-download-href=\"https://ethresear.ch/uploads/default/0fb72294c98dbb6a1be55419420ebf8144cfaa62\" title=\"Screenshot 2024-06-26 at 12.57.58 PM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/0/f/0fb72294c98dbb6a1be55419420ebf8144cfaa62_2_690x263.png\" alt=\"Screenshot 2024-06-26 at 12.57.58 PM\" data-base62-sha1=\"2f1wGpugRr37GmsAmnwR3VpEas2\" width=\"690\" height=\"263\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/0/f/0fb72294c98dbb6a1be55419420ebf8144cfaa62_2_690x263.png, https://ethresear.ch/uploads/default/original/3X/0/f/0fb72294c98dbb6a1be55419420ebf8144cfaa62.png 1.5x, https://ethresear.ch/uploads/default/original/3X/0/f/0fb72294c98dbb6a1be55419420ebf8144cfaa62.png 2x\" data-dominant-color=\"ECEBEC\"></a></div><p></p>\n<h3><a name=\"builder-attacks-11\" class=\"anchor\" href=\"https://ethresear.ch#builder-attacks-11\"></a>Builder attacks</h3>\n<p>Finally, let’s move to the last section: proposers of <span class=\"math\">n</span> and <span class=\"math\">n+1</span> collude to attack the builder of <span class=\"math\">n</span>. We will divide this section into two parts. The first part will focus on reorg out the builder’s payload, and the second part will focus on making the payload part of the canonical chain even if the builder chooses to withhold it.</p>\n<h4><a name=\"payload-reorging-attack-12\" class=\"anchor\" href=\"https://ethresear.ch#payload-reorging-attack-12\"></a>Payload reorging attack</h4>\n<p>Let’s examine the first part. The proposer of slot <span class=\"math\">n</span> releases the block late / attempts to split the beacon committee view, resulting in <span class=\"math\">x</span> beacon committee members voting for the block and <span class=\"math\">1-x</span> not voting for it. The builder reveals the payload on time and gains a <span class=\"math\">RB</span>. The proposer of slot <span class=\"math\">n+1</span> could then reorg the payload by reorg the entire proposer block of slot <span class=\"math\">n</span>, which is more powerful than just reorganizing the payload itself. The attack is successful if <span class=\"math\">PB + 1 - x &gt; RB + x</span>.</p>\n<p>What does a successful attack provide to the attacker?</p>\n<ul>\n<li>Given that proposers of slots <span class=\"math\">n</span> and <span class=\"math\">n+1</span> are colluding, there is no extra slot advantage gained by reorg out the block at slot $n. It is essentially the same as not proposing a block at slot <span class=\"math\">n</span>.</li>\n<li>A minor advantage of the collusion between the two proposers is the ability to steal the payload transactions from slot <span class=\"math\">n</span>. This issue is mitigated if transactions are protected by binding them to slot $n. This scenario is known as a next-slot unbundling attack, which differs from same-slot unbundling. Same-slot unbundling is impossible in ePBS.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/5/e50f3d20a2b304825cb05436a2a3e610fbddcf4f.png\" data-download-href=\"https://ethresear.ch/uploads/default/e50f3d20a2b304825cb05436a2a3e610fbddcf4f\" title=\"Screenshot 2024-06-26 at 12.58.35 PM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e50f3d20a2b304825cb05436a2a3e610fbddcf4f_2_690x210.png\" alt=\"Screenshot 2024-06-26 at 12.58.35 PM\" data-base62-sha1=\"wGlZmhivExZmbhXE31kjqHprbZ5\" width=\"690\" height=\"210\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e50f3d20a2b304825cb05436a2a3e610fbddcf4f_2_690x210.png, https://ethresear.ch/uploads/default/original/3X/e/5/e50f3d20a2b304825cb05436a2a3e610fbddcf4f.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/5/e50f3d20a2b304825cb05436a2a3e610fbddcf4f.png 2x\" data-dominant-color=\"EAE8E9\"></a></div><p></p>\n<h4><a name=\"payload-withholding-attack-13\" class=\"anchor\" href=\"https://ethresear.ch#payload-withholding-attack-13\"></a>Payload withholding attack</h4>\n<p>Let’s look at the second part. The proposer of slot <span class=\"math\">n</span> releases the block late or tries to split the beacon committee view, resulting in <span class=\"math\">x</span> beacon committee members voting for the block and <span class=\"math\">1-x</span> not voting for it. The builder withholds the payload on time and gains a Withheld Boost (<span class=\"math\">WB</span>). The proposer of slot <span class=\"math\">n+1</span> could attempt to force the builder to fulfill unconditional payment by making the block at slot <span class=\"math\">n</span> canonical, which from the chain’s perspective, appears as if the builder did not release the payload. The attack is successful if <span class=\"math\">PB + x &gt; WB + 1 - x</span>.</p>\n<p>What does a successful attack provide to the attacker?</p>\n<ul>\n<li>The only plausible scenario for this attack is when the builder is not confident in revealing the payload and hence withholds it. In this case, the proposer of slot <span class=\"math\">n+1</span>, colluding with the proposer of slot <span class=\"math\">n</span>, wants to take the builder’s payment regardless.</li>\n<li>Another primary advantage is that the block at slot <span class=\"math\">n+1</span> can contain two slots’ worth of transactions since the builder submits an empty payload by withholding.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/f/5f04c5fc36d5b005e7dcc6c7839e90f40a4a0af7.png\" data-download-href=\"https://ethresear.ch/uploads/default/5f04c5fc36d5b005e7dcc6c7839e90f40a4a0af7\" title=\"Screenshot 2024-06-26 at 12.58.09 PM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/f/5f04c5fc36d5b005e7dcc6c7839e90f40a4a0af7_2_690x266.png\" alt=\"Screenshot 2024-06-26 at 12.58.09 PM\" data-base62-sha1=\"dyzAmVXHa4DOfATzFHIDC6hfmMD\" width=\"690\" height=\"266\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/f/5f04c5fc36d5b005e7dcc6c7839e90f40a4a0af7_2_690x266.png, https://ethresear.ch/uploads/default/original/3X/5/f/5f04c5fc36d5b005e7dcc6c7839e90f40a4a0af7.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/f/5f04c5fc36d5b005e7dcc6c7839e90f40a4a0af7.png 2x\" data-dominant-color=\"EBE9EA\"></a></div><p></p>\n<h3><a name=\"boost-numbers-14\" class=\"anchor\" href=\"https://ethresear.ch#boost-numbers-14\"></a>Boost numbers</h3>\n<p>Finally, let’s summarize the equations for each worst-case attack scenario if the attacker wins:</p>\n<ol>\n<li><strong>Proposers Ex-Post attack</strong>: <span class=\"math\">WB + PB + \\delta &gt; 1 - \\delta</span></li>\n<li><strong>Proposers Ex-Ante attack</strong>: <span class=\"math\">RB + x + \\delta &gt; PB + 1 - x</span></li>\n<li><strong>Builder reorg payload attack</strong>: <span class=\"math\">PB + 1 - x &gt; RB + x</span></li>\n<li><strong>Builder withhold payload attack</strong>: <span class=\"math\">PB + x &gt; WB + 1 - x</span></li>\n</ol>\n<p>Overall, we can derive that the parameters are approximately <span class=\"math\">PB = 20\\%</span>, <span class=\"math\">WB = 40\\%</span>, <span class=\"math\">RB = 40\\%</span>, and <span class=\"math\">\\delta = 20\\%</span>. This means we can tolerate a malicious beacon committee up to 20%, whereas today, this tolerance is 40%.</p>\n<p>The real question to ask is whether the worst-case scenario of a 20% attack even makes sense, as in the Ex-Ante attack, the builder must release the payload to perform the attack. Nevertheless, it certainly represents a degradation in fork choice. A 20% attack is significantly more dangerous in the Ex-Post attack than in the Ex-Ante attack due to the additional time available.</p>\n<p>Something we haven’t analyzed here is how multi-slot liveness may play a role in this context. Given (block, slot) voting and under worse network asynchrony conditions, we may experience prolonged empty slots, making recovery difficult. Solutions like a backoff scheme have been proposed, which require further thought and analysis.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/fork-choice-attacks-and-protections-in-epbs/19951\">Read full topic</a></p>","link":"https://ethresear.ch/t/fork-choice-attacks-and-protections-in-epbs/19951","pubDate":"Tue, 02 Jul 2024 14:24:34 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19951"},"source":{"@url":"https://ethresear.ch/t/fork-choice-attacks-and-protections-in-epbs/19951.rss","#text":"Fork Choice Attacks and Protections in EPBS"},"filter":false},{"title":"P2P ZK Light Client Bridge between Tron and Ethereum L2s","dc:creator":"alexhook","category":"Applications","description":"<p><em>By <a href=\"https://x.com/alexhooketh\" rel=\"noopener nofollow ugc\">Alex Hook</a>. Thanks to these people for inspiration, feedback and suggestions: <a href=\"https://x.com/alexanderchopan\" rel=\"noopener nofollow ugc\">accountless.eth</a>, <a href=\"https://x.com/pseudotheos\" rel=\"noopener nofollow ugc\">pseudotheos</a>, <a href=\"https://x.com/domothy\" rel=\"noopener nofollow ugc\">Domothy</a>, <a href=\"https://x.com/DoganEth\" rel=\"noopener nofollow ugc\">Dogan Alpaslan</a>, <a href=\"https://zkp2p.xyz\" rel=\"noopener nofollow ugc\">ZKP2P team</a></em></p>\n<hr>\n<p><strong>Abstract.</strong> USDT on the Tron Network has emerged as a dominant crypto application in the Third World countries. However, the current cartelized control of the Tron Network results in elevated transaction fees, capital concentration, and an ecosystem isolated from other crypto networks. We propose a design for a cost-effective, peer-to-peer bridge from USDT TRC20 to Ethereum L2 networks, utilizing zero-knowledge light verification of the Tron blockchain.</p>\n<h1><a name=\"introduction-1\" class=\"anchor\" href=\"https://ethresear.ch#introduction-1\"></a>Introduction</h1>\n<p>According to <a href=\"https://tokenterminal.com/terminal/datasets/stablecoins\" rel=\"noopener nofollow ugc\">Token Terminal</a>, USDT on Tron has achieved preeminence by several metrics, including outstanding supply, 30d transfer volume, number of transfers, and number of holders. At the time of writing, the second place by volume, DAI on Ethereum, has only ~20% less volume than it, but two orders of magnitude fewer holders and number of transfers. The second place by number of transfers, USDC on Base, has 5x fewer transfers.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/4/6476c0c44ca7866bfea5a4f35205a47fa7c74204.png\" data-download-href=\"https://ethresear.ch/uploads/default/6476c0c44ca7866bfea5a4f35205a47fa7c74204\" title=\"Screenshot 2024-06-27 at 8.00.11 PM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/4/6476c0c44ca7866bfea5a4f35205a47fa7c74204_2_690x459.png\" alt=\"Screenshot 2024-06-27 at 8.00.11 PM\" data-base62-sha1=\"ekKaNu8ucguOQdkgvdDfU0wTl7S\" width=\"690\" height=\"459\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/4/6476c0c44ca7866bfea5a4f35205a47fa7c74204_2_690x459.png, https://ethresear.ch/uploads/default/optimized/3X/6/4/6476c0c44ca7866bfea5a4f35205a47fa7c74204_2_1035x688.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/4/6476c0c44ca7866bfea5a4f35205a47fa7c74204.png 2x\" data-dominant-color=\"161618\"></a></div><p></p>\n<p>This shows Tron USDT’s monstrous levels of payment usage among individuals. Unsurprising—Tron team has done an extensive advertisement campaign for its payment solution in Africa and Latin America. Shortly after, the network effect spread it to the developing countries in Asia and Post-Soviet area.</p>\n<p>If we look at the areas of the largest prevalence of Tron USDT, a noteworthy pattern can be noticed. Tron USDT is largely used in the countries with weak economies and unsustainable local currencies: Türkiye, Lebanon, Zimbabwe, Venezuela, Argentina, and more. In these countries, traditional banking doesn’t provide people with options for reliable store of value and means of payment, as local currencies are unreliable, and foreign currencies are either banned for payment use or subject to strict control.</p>\n<h3><a name=\"problems-2\" class=\"anchor\" href=\"https://ethresear.ch#problems-2\"></a>Problems</h3>\n<p>It is fair to say that USDT on Tron is one of the largest crypto applications by usage today. Millions of people around the world are interacting with it every day. It’s massively used as a store of value, acts as a medium of exchange in isolated economies such as Northern Cyprus, Cuba, and Vietnam. <a href=\"https://mirror.xyz/0x8958D0c419BCDFB8A86b8c0089552bE015fbe364/ODhOuYjK80atc9_jGprXotSo3PNobT1PRLFtorXHBrA\" rel=\"noopener nofollow ugc\">Local P2P platforms are building their infrastructure around USDT on Tron</a>. However, its dominance presents certain challenges for the broader Web3 community:</p>\n<ul>\n<li>\n<p><em>A primary concern is the high degree of centralization</em> within the Tron Network. <a href=\"https://github.com/alexhooketh/tron-light-client/blob/cc3e037c5b71ba5e6216c8d19fee4dfe9d254e69/README.md\" rel=\"noopener nofollow ugc\">According to our research</a>, over the past 250 days there were only 28 unique block producers. The same entities are constantly winning the DPoS election due to delegations from the largest TRX holders. Most of these Super Representatives (block producers in Tron) <a href=\"https://tronscan.org/#/sr/representatives\" rel=\"noopener nofollow ugc\">lack any public information</a> beyond their status as block producers.</p>\n</li>\n<li>\n<p>Despite this centralization, <em>transaction fees on Tron remain among the highest in crypto</em>—<a href=\"https://developers.tron.network/docs/resource-model#energy\" rel=\"noopener nofollow ugc\">420 sun</a> (1 sun = 1e-6 TRX) per gas. At the <a href=\"https://coinmarketcap.com/currencies/tron/\" rel=\"noopener nofollow ugc\">TRX’s price of ~0.000035 ETH</a>, this roughly corresponds to Ethereum L1’s gas price of 14.7 gwei. The usual fee for USDT transfers in Tron is <strong>$1-1.5 in TRX</strong>, rendering small transfers barely economical. However, the usage is still very high, as Tron’s ecosystem is isolated and there’s no convenient way to interact with other ecosystems from it.</p>\n</li>\n</ul>\n<p>In contrast, the Ethereum ecosystem continues to thrive. Following the Dencun upgrade, transaction fees on rollups have drastically decreased to <a href=\"https://www.growthepie.xyz/fundamentals/transaction-costs\" rel=\"noopener nofollow ugc\">less than a cent</a> per ERC20 transfer. Combined with L2s, Ethereum DeFi <a href=\"https://defillama.com/chains\" rel=\"noopener nofollow ugc\">now comprises &gt;80% of the entire DeFi TVL</a>. <a href=\"https://l2beat.com/scaling/activity\" rel=\"noopener nofollow ugc\">Rollups alone consistently handle upwards of 100 TPS</a>, <a href=\"https://mirror.xyz/alexhook.eth/y9PTlM6tVr0H8X68r1LV2UwAnT9D6u1MEEiUFvcpyG0\" rel=\"noopener nofollow ugc\">with theoretical limits of 400-800 TPS</a> depending on the specific rollup. OP Mainnet has upgraded to Stage 1 trustlessness with all OP Chains and ZKsync catching up this summer. Arbitrum is working towards Stage 2.</p>\n<p>People in developed countries are already integrated with Ethereum. By allowing ones from developing countries to seamlessly move into it from Tron, we can unite these disparate ecosystems and mitigate the risks associated with increasing centralization and monopolization of Sun’s machine.</p>\n<h1><a name=\"rationale-3\" class=\"anchor\" href=\"https://ethresear.ch#rationale-3\"></a>Rationale</h1>\n<p>The protocol for cross-chain transfers from Tron should ideally possess the following characteristics:</p>\n<ul>\n<li><strong>Trust-minimized:</strong> The system should preclude the provision of incorrect information about the Tron blockchain or the theft of locked funds, except in the event of an attack on Tron’s consensus. In such a case, the security council authorized to stop the system can be established.</li>\n<li><strong>Permissionless liquidity supply:</strong> The protocol should allow any entity to provide liquidity at their preferred rate. This fosters fair competition among providers, potentially resulting in more favorable and flexible exchange rates based on order size.</li>\n<li><strong>Permissionless operation:</strong> While a centralized relay for light client updates and order fulfillment is acceptable, provided there exists a self-proposing mechanism in case of liveness failure, the relay must not serve as a source of trust. When feasible, on-chain operations should be implemented instead (e.g., a paymaster for gasless order claims).</li>\n<li><strong>As simple as possible from the Tron side:</strong> Gas fees on Tron are extremely high, so it may be not affordable for users to execute more than necessary on-chain. Moreover, USDT Tron users are mostly using wallets such as Trust Wallet, Exodus, hardware wallets, and local exchange accounts, that do not support contract calls or token approvals. The only Tron wallet with these features, TronLink, is not common among USDT Tron users.</li>\n<li><strong>Reasonably cheap on the destination side:</strong> Zero-knowledge proofs should be employed where possible to minimize costs. While the system can be more extensive than on the Tron side, it should still be optimized to keep user claim costs low.</li>\n<li><strong>Single liquidity hub with enshrined bridging:</strong> The protocol should be deployed on a single L2 network to prevent liquidity fragmentation. To mitigate protocol isolation, cross-chain token bridges can be integrated at the UI level, <a href=\"https://zkp2p.xyz/send\" rel=\"noopener nofollow ugc\">similarly to ZKP2P</a>.</li>\n<li><strong>USDC-native:</strong> Given USDC’s prevalence in the Ethereum ecosystem, the protocol can be based on USDC, effectively providing USDT-USDC swaps. However, USDC is virtually unknown in areas of extensive USDT Tron usage, so this difference should be addressed on UX level to reduce user distrust.</li>\n</ul>\n<h1><a name=\"trons-consensus-and-protocol-101-4\" class=\"anchor\" href=\"https://ethresear.ch#trons-consensus-and-protocol-101-4\"></a>Tron’s consensus and protocol 101</h1>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/1/81e8ead1ee5585f245d51ac55f4f1db43f3785d2.png\" data-download-href=\"https://ethresear.ch/uploads/default/81e8ead1ee5585f245d51ac55f4f1db43f3785d2\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/1/81e8ead1ee5585f245d51ac55f4f1db43f3785d2_2_540x500.png\" alt=\"image\" data-base62-sha1=\"ixeCejOInAPU2vMrquK9b0A0RuW\" width=\"540\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/1/81e8ead1ee5585f245d51ac55f4f1db43f3785d2_2_540x500.png, https://ethresear.ch/uploads/default/original/3X/8/1/81e8ead1ee5585f245d51ac55f4f1db43f3785d2.png 1.5x, https://ethresear.ch/uploads/default/original/3X/8/1/81e8ead1ee5585f245d51ac55f4f1db43f3785d2.png 2x\" data-dominant-color=\"E9ECF1\"></a></div><p></p>\n<p>Every 6 hours (7200 blocks), network participants delegate their TRX to validator candidates. The 27 candidates accumulating the most votes are elected as Super Representatives (SRs), who are then responsible for block production. Block producer selection follows a deterministic round-robin pattern. A block is considered finalized after receiving 18 confirmations, 2/3 of the SR set.</p>\n<p>The block production is an ECDSA signature over the SHA256 hash of the protobuf-encoded block header. That is, one block = one signature. The top 128 representatives, beyond the 27 SRs, are designated as Super Representative Partners, voting on blocks produced by SRs. However, <a href=\"https://developers.tron.network/docs/concensus#block-generation-mechanism\" rel=\"noopener nofollow ugc\">as producers are predictable and the longest-chain rule is applied</a>, there is no necessity in validating votes.</p>\n<p>Block header consists of the following elements:</p>\n<pre><code class=\"lang-auto\">message BlockHeader {\n  message raw {\n    int64 timestamp = 1;\n    bytes txTrieRoot = 2;\n    bytes parentHash = 3;\n    int64 number = 7;\n    bytes witness_address = 9;\n    int32 version = 10;\n  }\n  raw raw_data = 1;\n  bytes witness_signature = 2;\n}\n</code></pre>\n<p>Even though state root is formally specified in the protocol, it’s not added to the header. We assume this is for backward-compatibility purposes, as the current version of Tron Network does not merkleize state.</p>\n<p>The signature is made over a SHA256 hash of the serialized <code>raw_data</code> element. That is, by utilizing light verification, we can access only one transaction-specific element—the Merkle root of the transaction tree. However, in Tron, transactions carry their execution status, so we don’t need to access the state to validate the success of one-transaction operations, such as TRC20 transfer().</p>\n<pre><code class=\"lang-auto\">message Transaction {\n  ...\n  message Result {\n    enum code {\n      SUCESS = 0;\n      FAILED = 1;\n    }\n    enum contractResult {\n      DEFAULT = 0;\n      SUCCESS = 1;\n      REVERT = 2;\n      BAD_JUMP_DESTINATION = 3;\n      OUT_OF_MEMORY = 4;\n      PRECOMPILED_CONTRACT = 5;\n      STACK_TOO_SMALL = 6;\n      STACK_TOO_LARGE = 7;\n      ILLEGAL_OPERATION = 8;\n      STACK_OVERFLOW = 9;\n      OUT_OF_ENERGY = 10;\n      OUT_OF_TIME = 11;\n      JVM_STACK_OVER_FLOW = 12;\n      UNKNOWN = 13;\n      TRANSFER_FAILED = 14;\n      INVALID_CODE = 15;\n    }\n    int64 fee = 1;\n    code ret = 2;\n    contractResult contractRet = 3;\n    ...\n}\n</code></pre>\n<p>Votes for witnesses (representatives) are of a specific transaction type. This means that in order to calculate the votes, the light client has to download all transactions and re-execute ones of this type.</p>\n<pre><code class=\"lang-auto\">message Transaction {\n  message Contract {\n    enum ContractType {\n      ...\n      VoteWitnessContract = 4;\n      ...\n}\n</code></pre>\n<p>However, considering the fact that the SR set is almost static, we believe that it would be computationally cheaper to delegate choosing the canonical set to DAO or enshrine the set into the circuit.</p>\n<p>Normal contract calls, such as TRC20 transfer, have the <code>TriggerSmartContract</code> type and are nearly identical to ERC20 transactions. This means that we can prove the USDT transfer on Tron network using only the transaction root, which can be safely accessed on-chain using ZK light client relay.</p>\n<h1><a name=\"design-proposal-5\" class=\"anchor\" href=\"https://ethresear.ch#design-proposal-5\"></a>Design proposal</h1>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/b/4b4b8d0d74dfe0a7dd5991bce974eac97c8621fc.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/4b4b8d0d74dfe0a7dd5991bce974eac97c8621fc\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/b/4b4b8d0d74dfe0a7dd5991bce974eac97c8621fc_2_690x402.jpeg\" alt=\"image\" data-base62-sha1=\"aK5G0popcNRNLMaEk9IdJmFRNq4\" width=\"690\" height=\"402\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/b/4b4b8d0d74dfe0a7dd5991bce974eac97c8621fc_2_690x402.jpeg, https://ethresear.ch/uploads/default/optimized/3X/4/b/4b4b8d0d74dfe0a7dd5991bce974eac97c8621fc_2_1035x603.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/b/4b4b8d0d74dfe0a7dd5991bce974eac97c8621fc_2_1380x804.jpeg 2x\" data-dominant-color=\"F0F0F0\"></a></div><p></p>\n<p>The proposed cross-chain swap mechanism involves three primary entities: the <em>User</em>, the <em>Buyer</em> (or liquidity provider), and the <em>Relayer</em>. The process unfolds as follows:</p>\n<ol>\n<li>\n<p><em>The Buyer</em> locks USDC into the swap contract on the L2, specifying their exchange rate and Tron address for transfers.</p>\n</li>\n<li>\n<p><em>The User</em> selects a <em>Buyer</em> offering the most favorable rate with sufficient liquidity. <em>The User</em> then initiates a transaction on the L2 to temporarily lock a portion of the <em>Buyer’s</em> USDC. This step prevents liquidity depletion before order fulfillment. If supported by the L2, this transaction may be funded by a paymaster.</p>\n</li>\n<li>\n<p><em>The User</em> transfers the corresponding amount of Tron USDT to the <em>Buyer’s</em> specified address.</p>\n</li>\n<li>\n<p>Following 18 block confirmations (~54 seconds, ensuring finality), the <em>Relayer</em> retrieves the latest Tron block headers and generates a ZK proof to them. The circuit for light verification must contain the transaction root from the header as the public input so that it’s known to the relay contract. This proof is needed to efficiently prove the new Tron blocks and their transaction roots <em>to the relay contract</em>.</p>\n</li>\n<li>\n<p><em>The Relayer</em> obtains the finalized transaction from the Tron blockchain and generates a zero-knowledge proof of transaction inclusion against the transaction root. This proof is needed to efficiently prove the order fulfillment <em>to the swap contract</em>. Just like light client proofs, transaction proofs can be aggregated to minimize the costs of on-chain proof verification.</p>\n</li>\n<li>\n<p><em>The Relayer</em> submits these proofs to the respective smart contracts on the L2. Upon verification, the swap contract releases the funds to the <em>User</em> and allocates a small portion to the <em>Relayer</em> as compensation. In case of liveness failure, the <em>User</em> can generate and relay proofs themselves, removing the need for relayer fees.</p>\n</li>\n<li>\n<p><em>The Buyer</em> can exchange their acquired Tron USDT for USDC on the L2 through various means, including direct 1:1 exchange with issuers, and reinvest in the swap contract.</p>\n</li>\n</ol>\n<p>This system streamlines the user experience to just two primary actions: committing to the order on the destination chain and transferring Tron USDT to a specified address. The User receives the equivalent USDC on the L2 within approximately one minute. This system can even be used to accept payments in USDT Tron, requiring only a web browser with a connected wallet for order creation.</p>\n<p>For Buyers, liquidity provision is fully automated. They create a Tron wallet, and supply USDC with specified Tron address to the smart contract. When their liquidity is out, it is automatically removed. Received USDT can be spent and exchanged back to USDC at any time. This system is expected to provide higher exchange rates than the existing P2P platforms, as the rate is competitive and there’s no need to cover the costs of KYC and other web2-specific processes.</p>\n<p>Relayers require only a server running relayer and ZK prover software. As relayers do not serve as the source of trust, this role can be either permissionless or delegated to the development team, provided self-proposing functionality is supported.</p>\n<h1><a name=\"zk-light-client-poc-6\" class=\"anchor\" href=\"https://ethresear.ch#zk-light-client-poc-6\"></a>ZK Light Client PoC</h1>\n<p>We’ve written a proof-of-concept of ZK light verification of Tron blocks in Noir language. It receives the previous and new block IDs with a transaction root as the public input, and the block header as the private input. It does not implement round-robin checks and election mechanism for efficiency purposes, and the SR set is hardcoded into the circuit. The proof is generated in about 35 seconds on an M1 machine.</p>\n<p>For the production version of this system, it may be necessary to rewrite the circuits to STARK-based proof systems and/or implement GPU proving to improve proving speed.</p>\n<p>The source code can be found here: <a href=\"https://github.com/alexhooketh/zktron\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - alexhooketh/zktron: ZK light client for Tron Network written in Noir</a></p>\n<h1><a name=\"conclusion-7\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-7\"></a>Conclusion</h1>\n<p>The proposed P2P ZK Light Client Bridge between Tron and Ethereum L2s is a significant advancement in addressing the problems of Tron Network in a Web3 way. By leveraging zero-knowledge proofs and efficient light client verification, this system offers a trust-minimized, permissionless, and cost-effective solution for bridging the gap between these two prominent blockchain ecosystems.</p>\n<p>This bridge design addresses several key challenges:</p>\n<ol>\n<li>It mitigates the risks associated with the centralization of the Tron Network by providing users with seamless access to the more decentralized and robust Ethereum ecosystem.</li>\n<li>It significantly reduces transaction costs for users, particularly benefiting those in developing economies who rely heavily on USDT for daily transactions and value storage.</li>\n<li>It enhances liquidity and interoperability between Tron and Ethereum, expanding Ethereum ecosystem to the areas of extensive Tron usage.</li>\n<li>It maintains a high level of security through the use of ZK proofs, ensuring the integrity of cross-chain transactions without compromising on efficiency.</li>\n</ol>\n<p>By bridging these ecosystems, we can solve the problem of increasing influence of Tron, taking a significant step towards realizing the vision of a truly global, decentralized financial infrastructure that can benefit users across all economic backgrounds.</p>\n<p>We welcome feedback and questions from the community. Feel free to leave your comments, suggestions, or inquiries in the comments section below. <strong>Thank you for reading.</strong></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/p2p-zk-light-client-bridge-between-tron-and-ethereum-l2s/19931\">Read full topic</a></p>","link":"https://ethresear.ch/t/p2p-zk-light-client-bridge-between-tron-and-ethereum-l2s/19931","pubDate":"Fri, 28 Jun 2024 20:03:10 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19931"},"source":{"@url":"https://ethresear.ch/t/p2p-zk-light-client-bridge-between-tron-and-ethereum-l2s/19931.rss","#text":"P2P ZK Light Client Bridge between Tron and Ethereum L2s"},"filter":false},{"title":"Orbit SSF: solo-staking-friendly validator set management for SSF","dc:creator":"fradamt","category":"Economics","description":"<p><em>Much of the post came together during a week of in-person whiteboarding with <a href=\"https://rig.ethereum.org\" rel=\"noopener nofollow ugc\">RIG</a> and wannabe RIGs like myself, Ansgar and Toni. Thanks in particular to <a href=\"https://twitter.com/weboftrees\" rel=\"noopener nofollow ugc\">Anders</a>, <a href=\"https://twitter.com/adietrichs\" rel=\"noopener nofollow ugc\">Ansgar</a>, <a href=\"https://twitter.com/barnabemonnot\" rel=\"noopener nofollow ugc\">Barnabé</a>, <a href=\"https://twitter.com/soispoke\" rel=\"noopener nofollow ugc\">Thomas</a> for continued discussions and feedback, again to Anders for most of the ideas around individual incentives, and again to Barnabé for the diagrams about finality. The core idea that the post explores was originally proposed by Vitalik in <a href=\"https://ethresear.ch/t/sticking-to-8192-signatures-per-slot-post-ssf-how-and-why/17989#approach-3-rotating-participation-ie-committees-but-accountable-5\">this post</a></em>.</p>\n<h2><a name=\"where-we-are-1\" class=\"anchor\" href=\"https://ethresear.ch#where-we-are-1\"></a>Where we are</h2>\n<p>The <a href=\"https://notes.ethereum.org/@vbuterin/single_slot_finality\" rel=\"noopener nofollow ugc\">Single Slot Finality (SSF) roadmap</a> has <a href=\"https://notes.ethereum.org/@vbuterin/single_slot_finality#What-are-the-key-questions-we-need-to-solve-to-implement-single-slot-finality\" rel=\"noopener nofollow ugc\">three main components</a>:</p>\n<ul>\n<li>Consensus algorithm</li>\n<li>Signature aggregation</li>\n<li>Validator set economics</li>\n</ul>\n<p>Since the previously linked post, there has been a lot of progress on the consensus algorithm side, with <a href=\"https://ethresear.ch/t/a-simple-single-slot-finality-protocol/14920\">multiple</a> <a href=\"https://arxiv.org/abs/2310.11331\" rel=\"noopener nofollow ugc\">candidate</a> <a href=\"https://notes.ethereum.org/@fradamt/chained-3sf\" rel=\"noopener nofollow ugc\">protocols</a> and <a href=\"https://github.com/fradamt/ssf/tree/main/high_level\" rel=\"noopener nofollow ugc\">the beginning of a specification effort</a>. There have also been some effort to explore the design space of signature aggregation, both with a <a href=\"https://ethresear.ch/t/horn-collecting-signatures-for-faster-finality/14219\">networking</a> <a href=\"https://ethresear.ch/t/flooding-protocol-for-collecting-attestations-in-a-single-slot/17553\">focus</a> and a <a href=\"https://ethresear.ch/t/signature-merging-for-large-scale-consensus/17386\">cryptographic focus</a>. Still, we are likely not close to being able to reliably aggregate millions of signatures per slot, without increasing the slot time or validator requirements significantly. On the staking economics side, there has been lots of work over the last year, but for the most part focused on understanding <a href=\"https://mirror.xyz/barnabe.eth/v7W2CsSVYW6I_9bbHFDqvqShQ6gTX3weAtwkaVAzAL4\" rel=\"noopener nofollow ugc\">liquid staking</a> and <a href=\"https://mirror.xyz/barnabe.eth/96MD_A194uXLLjcOWePW3O2N3P-JG-SHtNxU0b40o50\" rel=\"noopener nofollow ugc\">restaking</a>, and on <em>stake</em> capping, i.e., constraining the amount of ETH staked (if you’re reading this, you’re probably already at least at a surface level familiar with the issuance conversation, in which case you might want to dig deeper and check out these posts <a href=\"https://ethresear.ch/t/properties-of-issuance-level-consensus-incentives-and-variability-across-potential-reward-curves/18448/1\">[1]</a> <a href=\"https://ethresear.ch/t/endgame-staking-economics-a-case-for-targeting/18751\">[2]</a>). Here, we are instead interested in <em>validator capping</em>, i.e., constraining the amount of validator identities in the system, or at least the ones actively participating at any given time, to satisfy technical constraints. Some ideas in this direction can be found in this <a href=\"https://ethresear.ch/t/sticking-to-8192-signatures-per-slot-post-ssf-how-and-why/17989#what-would-8192-signatures-per-slot-under-ssf-look-like-2\">recent post</a>, and in fact <a href=\"https://ethresear.ch/t/sticking-to-8192-signatures-per-slot-post-ssf-how-and-why/17989#approach-3-rotating-participation-ie-committees-but-accountable-5\">approach 3</a> from the post provides the foundation for this post. Moreover, a recent important development is that <a href=\"https://eips.ethereum.org/EIPS/eip-7251\" rel=\"noopener nofollow ugc\">EIP-7251 (MaxEB)</a> has been included in the <a href=\"https://github.com/ethereum/consensus-specs/blob/a3a6c916b236c9e8904090303f0c38ae49db1002/specs/electra/beacon-chain.md\" rel=\"noopener nofollow ugc\">Electra fork</a>. Validator effective balances will be allowed to be as high as 2048 ETH, enabling staking pools to <a href=\"https://notes.ethereum.org/@fradamt/maxeb-consolidation\" rel=\"noopener nofollow ugc\">consolidate their validators</a>, a new capability which we can leverage in our designs.</p>\n\n<h2><a name=\"goals-2\" class=\"anchor\" href=\"https://ethresear.ch#goals-2\"></a>Goals</h2>\n<p>With the goal of finding a design which can make its way into the protocol in a reasonable timeline, we are here going to focus on solutions that <em>do not</em> rely on large improvements in the signature aggregation process. We also do not think it is very realistic to propose significant increases of the slot time, which have many externalities. Given these technical constraints, let’s focus on a minimal set of properties that we ideally want to achieve:</p>\n<ul>\n<li><strong>Validator capping</strong>: at most <span class=\"math\">N</span> <em>active</em> validators at a time. For example, <span class=\"math\">N = 2^{15} \\approx 32k</span>, which we know we can handle because it is the size of a committee today. If we wanted to completely remove attestation aggregation, we would likely need to drop this number to a few thousands.</li>\n<li><strong>Solo staking viability</strong>: staking with 32 ETH is <em>guaranteed</em> to still be possible, <em>and</em> the solo staking yield should still not compare unfavorably to delegated staking yields.</li>\n<li><strong>High eventual economic security</strong>: More than <span class=\"math\">D_f</span> stake provides economic security, at least <em>eventually</em>. For example <span class=\"math\">D_f = 20M</span> ETH. Ideally, we also do not have to wait longer than today for it (two epochs).</li>\n<li><strong>Fast finality</strong>: at least <em>some</em> amount of economic security is available shortly after a block is proposed (think: 10 to 30 seconds, not over 10 minutes).</li>\n<li><strong>Optimally secure consensus protocol</strong>: the consensus protocol is (provably) resilient to ~1/2 adversaries under network synchrony, and 1/3 under partial synchrony.</li>\n</ul>\n<p>Without solo staking viability as defined here, we could simply raise the minimum balance, or go with approaches that allow for a low minimum balance but do not <em>guarantee</em> it, for example in the face of large stakers intentionally splitting their stake. Such solutions would likely have to lean on <a href=\"https://ethresear.ch/t/sticking-to-8192-signatures-per-slot-post-ssf-how-and-why/17989#approach-1-go-all-in-on-decentralized-staking-pools-3\">decentralized staking pools</a> or <a href=\"https://ethresear.ch/t/sticking-to-8192-signatures-per-slot-post-ssf-how-and-why/17989#approach-2-two-tiered-staking-4\">two-tier staking</a> to preserve the accessible nature of staking as it is today, or perhaps even to carve out a more tailored role for smaller stakers, as is suggested by <a href=\"https://ethresear.ch/t/unbundling-staking-towards-rainbow-staking/18683\">rainbow staking</a>. While there is merit to these approaches and we believe they (and more generally the role of solo staking/broad consensus participation) deserve further exploration, we are choosing here to only explore designs that are compatible with this narrow interpretation of solo staking viability.</p>\n<h2><a name=\"overview-of-approaches-3\" class=\"anchor\" href=\"https://ethresear.ch#overview-of-approaches-3\"></a>Overview of approaches</h2>\n<p>Validator capping, solo staking viability and high economic security immediately raise an issue: high economic security requires millions of ETH to participate in finalizing and a minimum balance of 32 ETH then implies a worst case of hundreds of thousands or millions of validators (~1M at the time of writing), which seems to conflict with validator capping. There are two main classes of approaches that attempt to deal with this problem:</p>\n<ul>\n<li><strong>Validator set rotation</strong>: the full validator set is allowed to be large, but only a subset is actively participating at any given time.</li>\n<li><strong>Economic validator set capping</strong>: the size of the full validator set is constrained through economic incentives. To <em>guarantee</em> a small validator set size we can for example <a href=\"https://notes.ethereum.org/@vbuterin/single_slot_finality#Economic-capping-of-total-validator-count\" rel=\"noopener nofollow ugc\">reduce issuance past the target validator count</a>. However, this leaves all stakers open to a cheap griefing attack, where a small amount of stake can have a disproportionate negative impact on issuance.</li>\n</ul>\n<p>In this post we are not going to focus on the latter approach <em>in isolation</em>, but we are going to propose a way to combine economic incentives with a form of validator set rotation.</p>\n<h2><a name=\"validator-set-rotation-4\" class=\"anchor\" href=\"https://ethresear.ch#validator-set-rotation-4\"></a>Validator set rotation</h2>\n<p>The current protocol also has to deal with the issue we have outlined in the previous section, and the chosen “solution” is precisely validator set rotation: only 1/32 of the validator set votes in any given slot. This design <a href=\"https://notes.ethereum.org/@vbuterin/serenity_design_rationale#Why-32-ETH-validator-sizes\" rel=\"noopener nofollow ugc\">trades off finality time</a>, and fails to satisfy our desired property of fast finality.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/3/83646288afbace1b452239618b34e83319531d0a.png\" data-download-href=\"https://ethresear.ch/uploads/default/83646288afbace1b452239618b34e83319531d0a\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/3/83646288afbace1b452239618b34e83319531d0a_2_690x388.png\" alt=\"\" data-base62-sha1=\"iKlCA32LycAi46S9VPKqAkwVfcK\" role=\"presentation\" width=\"690\" height=\"388\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/3/83646288afbace1b452239618b34e83319531d0a_2_690x388.png, https://ethresear.ch/uploads/default/optimized/3X/8/3/83646288afbace1b452239618b34e83319531d0a_2_1035x582.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/3/83646288afbace1b452239618b34e83319531d0a_2_1380x776.png 2x\" data-dominant-color=\"F2EBEB\"></a></div><p></p>\n<p>Let’s then explore whether we can use validator set rotation without giving up on fast finality or other properties.</p>\n<h3><a name=\"fast-rotation-5\" class=\"anchor\" href=\"https://ethresear.ch#fast-rotation-5\"></a>Fast rotation</h3>\n<p>One way to go about validator set rotation is to have committees which rotate fast, as in the current protocol. In order to avoid a high time-to-finality, we can use a different consensus protocol allowing for <a href=\"https://ethresear.ch/t/a-model-for-cumulative-committee-based-finality/10259\">committee-based finality</a>, i.e., such that even a committee can provide economic security proportional to its stake. In fact, the post linked above deals with <em>cumulative</em> committee-based finality, where the consensus protocol even allows for accumulation of economic security over multiple finalizations, such that <span class=\"math\">k</span> committees finalizing in a row results in <span class=\"math\">k</span> times the economic security that a single committee can provide. We get two birds with one stone, getting both fast (partial) finality and full <em>eventual</em> economic security. In particular, we could have full finality <em>in the same time as today</em> (which gives enough time for each committee to do its own finalization by voting twice), but with the big improvement that economic security accrues every slot, rather than all at once after two epochs.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/6/b6816fefcf5021bb672ed76029c844d1f311047d.png\" data-download-href=\"https://ethresear.ch/uploads/default/b6816fefcf5021bb672ed76029c844d1f311047d\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/6/b6816fefcf5021bb672ed76029c844d1f311047d_2_690x388.png\" alt=\"\" data-base62-sha1=\"q2wduFO5R7MYGIGZUtJuCPBHYHb\" role=\"presentation\" width=\"690\" height=\"388\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/6/b6816fefcf5021bb672ed76029c844d1f311047d_2_690x388.png, https://ethresear.ch/uploads/default/optimized/3X/b/6/b6816fefcf5021bb672ed76029c844d1f311047d_2_1035x582.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/6/b6816fefcf5021bb672ed76029c844d1f311047d_2_1380x776.png 2x\" data-dominant-color=\"F0E9E9\"></a></div><p></p>\n<p>This seems like a clear improvement on today’s protocol, so why are we not just doing it? An answer comes from the consensus protocol design space: it is not clear at this point how to have an optimally secure dynamically available protocol with <em>fast</em> rotating committees. In fact, much of the problems with the LMD-GHOST component of today’s protocol, or at least the <a href=\"https://ethresear.ch/t/reorg-resilience-and-security-in-post-ssf-lmd-ghost/14164#introduction-2\">fundamental ones</a>, come precisely from the interaction of multiple committees. In short, an adversary can accumulate weight across multiple committees, and use it to reorg honest blocks that have a single committee supporting them.</p>\n<p>For interested readers, there actually are optimally secure dynamically available consensus protocols that allow for committees (<a href=\"https://arxiv.org/abs/2209.03255\" rel=\"noopener nofollow ugc\">[1]</a> <a href=\"https://eprint.iacr.org/2022/1448.pdf\" rel=\"noopener nofollow ugc\">[2]</a> for example), but all known ones suffer from catastrophic failures under even short-lived asynchrony (<a href=\"https://arxiv.org/abs/2302.11326\" rel=\"noopener nofollow ugc\">[1]</a> <a href=\"https://arxiv.org/abs/2309.05347\" rel=\"noopener nofollow ugc\">[2]</a>). It is not known whether this is a fundamental limitation, but at least so far we do not know any protocol that gets around it.</p>\n<h3><a name=\"slow-rotation-6\" class=\"anchor\" href=\"https://ethresear.ch#slow-rotation-6\"></a>Slow rotation</h3>\n<p>There is however a simple way to avoid the problem altogether: giving up on <em>fast</em> committee rotation, and instead having a committee which rotates out slowly, for example by replacing a small percentage of it every slot. The upshot is that such a committee effectively acts as a full validator set, in the sense that its actions do not interact with those of other committees, as would be the case with fast rotation. We can in principle take any protocol that works when the whole validator set is able to participate at once, and make it work with this mechanism by slowing down the rotation sufficiently.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/c/4c21c0ca0871b1e7c6440325b3a3174df016793f.png\" data-download-href=\"https://ethresear.ch/uploads/default/4c21c0ca0871b1e7c6440325b3a3174df016793f\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/c/4c21c0ca0871b1e7c6440325b3a3174df016793f_2_690x389.png\" alt=\"\" data-base62-sha1=\"aRuBpte10OnGqL9pyadMTWF1PXx\" role=\"presentation\" width=\"690\" height=\"389\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/c/4c21c0ca0871b1e7c6440325b3a3174df016793f_2_690x389.png, https://ethresear.ch/uploads/default/optimized/3X/4/c/4c21c0ca0871b1e7c6440325b3a3174df016793f_2_1035x583.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/c/4c21c0ca0871b1e7c6440325b3a3174df016793f_2_1380x778.png 2x\" data-dominant-color=\"F0E8E9\"></a></div><p></p>\n<p>At a first glance, one obvious downside is that a full rotation of the validator set would be much slower than today, and thus so would finality. However, we could do things a bit differently, by decoupling the committee which votes for the available chain (LMD-GHOST votes) from those which vote for finality (Casper FFG votes). Only LMD-GHOST has problems with fast committee rotation, so we could have a slowly rotating committee whose votes count for LMD-GHOST and in parallel also fast rotating committees whose votes accumulate economic security over time, up to full finality in no more than today’s two epochs.</p>\n<p>Besides some amount of extra complexity in the consensus protocol, one remaining downside is that we leave a single committee “in charge” of LMD-GHOST for extended periods of time. Moreover, while linearly accumulating finality is a strict improvement over today’s step function finality, we do not achieve something even stronger, namely getting a high level of economic security immediately. This is of course impossible to achieve given the constraints we have laid out, <em>unless we make some assumptions about the stake distribution</em>, for example that it is <a href=\"https://notes.ethereum.org/@vbuterin/single_slot_finality#The-good-news-gains-from-enabling-voluntary-validator-balance-consolidation\" rel=\"noopener nofollow ugc\">Zipfian</a>, or anyway such that a large portion of the stake is concentrated in the first few thousand entities.</p>\n\n<h2><a name=\"orbit-ssf-stable-core-rotating-periphery-7\" class=\"anchor\" href=\"https://ethresear.ch#orbit-ssf-stable-core-rotating-periphery-7\"></a>Orbit SSF: Stable core, rotating periphery</h2>\n<p>Our starting point is <a href=\"https://ethresear.ch/t/sticking-to-8192-signatures-per-slot-post-ssf-how-and-why/17989#approach-3-rotating-participation-ie-committees-but-accountable-5\">approach 3 from this post</a>, where validators are (roughly) sampled by balance, so that validators with a lot of stake are always in the validator set. Contrast this with the previously considered validator set rotation approaches where validators were (implicitly) sampled by indices, as we do today, which results in each committee having small weight regardless of what the stake distribution looks like.</p>\n<p>We then consider adding consolidation incentives, to have stronger guarantees about the level of finality that we can reach with a single committee. The rotating parts of the committee can then rotate slowly, and we do not need to take on the extra consensus complexity of decoupling voting for the available chain and for the finality gadget. Moreover, there is never a small committee (in terms of stake) in charge of a critical consensus component: at all times, we can expect the active validator set to hold a meaningful fraction of the whole stake.</p>\n<h3><a name=\"active-validator-set-management-8\" class=\"anchor\" href=\"https://ethresear.ch#active-validator-set-management-8\"></a>Active validator set management</h3>\n<p>There are two key components here:</p>\n<ul>\n<li><em>Active validator set selection</em>: We set a stake threshold <span class=\"math\">T</span> (in principle it could also be set dynamically), and then define the probability of validator with stake <span class=\"math\">S</span> to be sampled in the active set to be <span class=\"math\">p(S) = \\min(\\frac{S}{T}, 1) = \n\\begin{cases}\n\\frac{S}{T} &amp; S \\le T \\\\ \n1 &amp; S \\ge T \n\\end{cases}</span><br>\nA validator with stake <span class=\"math\">S \\le T</span> is selected with probability <span class=\"math\">\\frac{S}{T}</span> proportional to its stake, whereas validators with stake <span class=\"math\">S \\ge T</span> are <em>always</em> in the validator set. The idea here is of course that it is helpful to have a stable core of large validators always in the active set, because they contribute a lot of economic security but still only add the same load as any other validator.</li>\n<li><em>Reward adjustment</em>: We adjust attestation rewards so that all validators still get compensated proportionally to their stake, regardless of whether they fall below or above the threshold <span class=\"math\">T</span>. To define the reward function, we take as reference the maximum attestation reward <span class=\"math\">R</span> that the protocol gives to a validator with stake <span class=\"math\">T</span>, for a single attestation (<span class=\"math\">R</span> can of course vary depending on the overall issuance level). Given <span class=\"math\">R</span>, the maximum reward for an attestation by a validator with stake <span class=\"math\">S</span> is <span class=\"math\">r(S) = R\\cdot\\max(1, \\frac{S}{T}) = \n\\begin{cases} \nR &amp; S \\le T \\\\\nR \\cdot \\frac{S}{T} &amp;S \\ge T\n\\end{cases}</span><br>\nOverall, the <em>expected</em> rewards of a validator with stake <span class=\"math\">S</span> are then <span class=\"math\">p(S)\\cdot r(S) = R\\cdot\\frac{S}{T} = \\frac{R}{T} \\cdot S</span>. In other words, <span class=\"math\">\\frac{R}{T}</span> per unit of stake, regardless of how it is distributed.  To help visualize this, here’s a plot of <span class=\"math\">p(S)</span>, <span class=\"math\">r(S)</span> and <span class=\"math\">p(S)\\cdot r(S)</span>, for <span class=\"math\">R = 2</span> (arbitrary value just for the plot) and <span class=\"math\">T = 1024</span>. Validators with less than <span class=\"math\">T</span> stake do have higher variance, because they only participate <span class=\"math\">\\frac{S}{T}</span> of the time, but over longer periods of time the variance will still very low, since attestation rewards are constant and very frequent.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/9/69e8f45397940a38df6d146660314fa29c2f790c.png\" data-download-href=\"https://ethresear.ch/uploads/default/69e8f45397940a38df6d146660314fa29c2f790c\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/9/69e8f45397940a38df6d146660314fa29c2f790c_2_690x355.png\" alt=\"\" data-base62-sha1=\"f6VeGDwB2D2UCdmEsfim0SsEgoY\" role=\"presentation\" width=\"690\" height=\"355\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/9/69e8f45397940a38df6d146660314fa29c2f790c_2_690x355.png, https://ethresear.ch/uploads/default/optimized/3X/6/9/69e8f45397940a38df6d146660314fa29c2f790c_2_1035x532.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/6/9/69e8f45397940a38df6d146660314fa29c2f790c_2_1380x710.png 2x\" data-dominant-color=\"FCFBFC\"></a></div><p></p>\n<h4><a name=\"validator-capping-9\" class=\"anchor\" href=\"https://ethresear.ch#validator-capping-9\"></a>Validator capping</h4>\n<p>We can easily compute the expected size of an active validator set <span class=\"math\">V_a</span> that is sampled this way from a full validator set <span class=\"math\">V</span> whose total deposit size is <span class=\"math\">D</span>:<br>\n<span class=\"math\">\\mathbb{E}[|V_a|] = \\sum_{i \\in V} p(S_i) = \\sum_{i \\in V} \\min(\\frac{S_i}{T}, 1) = \\frac{1}{T}\\sum_{i \\in V} \\min(S_i, T) \\le \\frac{1}{T}\\sum_{i \\in V} S_i = \\frac{D}{T}</span></p>\n<p>Basically, any validator with stake <span class=\"math\">S \\le T</span> contributes exactly <span class=\"math\">\\frac{S}{T}</span> to the expectation. Crucially, these contribution scale linearly in <span class=\"math\">S</span>: the only effect of splitting up to <span class=\"math\">T</span> stake into small validators is to increase the variance of the active validator set size, without affecting the expectation. As for validators with stake <span class=\"math\">S &gt; T</span>, they even decrease the expectation compared to the worst case, which is <span class=\"math\">\\frac{D}{T}</span>, equal to the full validator set size if all validators had <span class=\"math\">T</span> stake.</p>\n<p>For example, we can set <span class=\"math\">T = 4096</span> ETH, giving us a <em>maximum</em> expected active validator set size of <span class=\"math\">\\frac{120M}{4096} \\approx 30k</span>. If we were to employ stake capping (we will later discuss how to do so in this context) to ensure (or have high assurances) that <span class=\"math\">D</span> is bounded by (for example) <span class=\"math\">2^{25}M</span> ETH, we could even set <span class=\"math\">T = 1024</span> and still have an expected active validator set size of at most ~32k. There can of course be deviations from this expected size, but with high probability the actual active validator set size would always fall within reasonably narrow bounds, so we can have very strong guarantees about the maximum load that we would need to be able to handle. We look at this in more detail <a href=\"https://ethresear.ch#Validator-capping-active-validator-set-variance\">in the appendix</a>.</p>\n<h3><a name=\"incentivizing-consolidation-10\" class=\"anchor\" href=\"https://ethresear.ch#incentivizing-consolidation-10\"></a>Incentivizing consolidation</h3>\n<p>Let <span class=\"math\">D_a</span> be the active deposit size, i.e., the total stake of the active validator set, contrasted with the total deposit size <span class=\"math\">D</span>, the stake of the whole validator set. Optimistically, as long as there is sufficient consolidation, <span class=\"math\">D_a</span> will be high, a clear improvement over the <a href=\"https://ethresear.ch#Slow-rotation\">previous slow rotation approach</a>. Still, we would like this to be more than an optimistic property. The question we are left to answer is then how we can ensure, or at least highly incentivize, a high <span class=\"math\">\\frac{D_a}{D}</span> ratio. For example, we want to prevent that all validators keep 32 ETH balances (no one consolidates), which would result in <span class=\"math\">\\mathbb{E}[D_a] = \\frac{32}{T} D</span>, e.g., only <span class=\"math\">\\frac{D}{32}</span> with <span class=\"math\">T = 1024</span>. With today’s <span class=\"math\">D = 32M</span> ETH, the expected active deposit size would only be <span class=\"math\">1M</span> ETH. On the other hand, we do not want to reward consolidated validators disproportionately compared to small validators.</p>\n<p>We explore two complementary approaches:</p>\n<ul>\n<li><strong>Collective consolidation incentives</strong>, growing the size of the pie for the whole validator set when the set is more consolidated.</li>\n<li><strong>Individual consolidation incentives</strong>, accounting for the extra risk accruing from further individual consolidation.</li>\n</ul>\n<h4><a name=\"collective-consolidation-incentives-11\" class=\"anchor\" href=\"https://ethresear.ch#collective-consolidation-incentives-11\"></a>Collective consolidation incentives</h4>\n<p>The first approach we explore is to reward <em>everyone</em> for consolidation, spreading out the benefits beyond the consolidating validators so as to maintain rewards undifferentiated, while still providing an incentive to consolidate.</p>\n<p>A first proposal in this direction is to set the rewards based on <span class=\"math\">D_a</span>, rather than <span class=\"math\">D</span>. For example, we could use the same issuance curve <span class=\"math\">I</span> we use today, but where the deposit size used as input is <span class=\"math\">D_a</span> instead of <span class=\"math\">D</span>: the cumulative issuance would then be <span class=\"math\">I(D_a)</span>, and the resulting yield per unit of stake <span class=\"math\">\\frac{I(D_a)}{D}</span>. Notably, <span class=\"math\">I</span> is monotonically increasing, so, whenever <span class=\"math\">D_a &lt; D</span>, the cumulative issuance <span class=\"math\">I(D_a)</span> is less than the maximum issuance <span class=\"math\">I(D)</span> that would be possible at this deposit size, with full consolidation. The yield gap <span class=\"math\">\\frac{I(D) - I(D_a)}{D}</span> between the current yield and the yield with full consolidation then acts as a consolidation incentive.</p>\n<p>Consolidation incentives aside, another way to think about this proposal is that we simply pay for the economic security we get, at least from a single committee: if today our security budget for <span class=\"math\">X</span> amount of deposits is <span class=\"math\">Y</span>, as expressed by <span class=\"math\">I(X) = Y</span>, we would now be wiling to pay <span class=\"math\">Y</span> in order to get <span class=\"math\">X</span> amount of <em>active</em> deposits. To get an idea of what this looks like in practice, here’s a color plot of the yield for <span class=\"math\">(D, \\frac{D_a}{D})</span> (starting from <span class=\"math\">D = 1</span> to help the visualization).</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/f/afced2f656e5db107f33e22007ab6b5fdd5859fc.png\" data-download-href=\"https://ethresear.ch/uploads/default/afced2f656e5db107f33e22007ab6b5fdd5859fc\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/f/afced2f656e5db107f33e22007ab6b5fdd5859fc_2_623x500.png\" alt=\"\" data-base62-sha1=\"p5gFTZPPTproPBqzWH6pZ7NieCM\" role=\"presentation\" width=\"623\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/f/afced2f656e5db107f33e22007ab6b5fdd5859fc_2_623x500.png, https://ethresear.ch/uploads/default/original/3X/a/f/afced2f656e5db107f33e22007ab6b5fdd5859fc.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/f/afced2f656e5db107f33e22007ab6b5fdd5859fc.png 2x\" data-dominant-color=\"7D689B\"></a></div><p></p>\n<h4><a name=\"individual-consolidation-incentives-12\" class=\"anchor\" href=\"https://ethresear.ch#individual-consolidation-incentives-12\"></a>Individual consolidation incentives</h4>\n<p><em>Credit to Anders for raising the issue of differentiated risk and for proposing the kind of individual incentives we explore here</em></p>\n<p>Though our exploration of collective incentives has found them to be decently strong, there is one factor we have not considered: validators with stake <span class=\"math\">\\ll T</span> have a better risk profile than validators with stake <span class=\"math\">\\ge T</span>. This is because they are in the active only a fraction of the time, which means two things:</p>\n<ul>\n<li>In a staking pool, accidental slashing caused by a bad setup can be caught early with only a fraction of the validators being subject to it</li>\n<li>Tail risk of mass slashing or leaking, for example due to client bugs, is much lower, as in many cases this would only affect the active set. For a staking pool, this effectively caps the pool’s slashing exposure to a fraction of the stake, in almost all scenarios.</li>\n</ul>\n<p>We might then be unwilling to solely rely on collective incentives, which cannot properly account for the risk differentiation between consolidated and non consolidated validators, itself an individual anti-consolidation incentive. On the other hand, we are hesitant to use individual consolidation incentives, because differentiated rewards threaten our goal of solo staking viability. Faced with this dilemma, a potential approach to mitigate the consequences on solo staking viability is to try to set individual consolidation incentives that just offset the added risk from consolidation. The goal is for risk-adjusted rewards to be roughly equivalent for consolidated and non consolidated validators, so that the available choices of higher risk, higher reward and lower risk, lower rewards are similarly attractive. In particular, it is then at least in principle possible (though not guaranteed) to have a validator set where both setups coexist, so that we can aspire to both have a high consolidation ratio and solo staking viability.</p>\n<p>Concretely, here’s a way we could go about this. Given the base yield <span class=\"math\">y(D_a, D) = \\frac{I(D_a, D)}{D}</span>, we can adjust the yield of a validator with <span class=\"math\">S</span> stake to be <span class=\"math\">y(D_a, D)(1 + \\frac{\\min(S,T)}{T}g(\\frac{D_a}{D}))</span>, where <span class=\"math\">g(x)</span> is decreasing and <span class=\"math\">g(1) = 0</span>. In other words, a validator with <span class=\"math\">S</span> stake gets additional <em>consolidation yield</em> <span class=\"math\">y_c(D_a, D, S) = \\frac{\\min(S,T)}{T}g(\\frac{D_a}{D})y(D_a, D)</span>, or equivalently its yield increases by a factor of <span class=\"math\">\\frac{\\min(S,T)}{T}g(\\frac{D_a}{D})</span>, up to <span class=\"math\">g(\\frac{D_a}{D})</span> for fully consolidated validators with <span class=\"math\">S = T</span>. This factor decreases as <span class=\"math\">\\frac{D_a}{D}</span> grows, because there are diminishing returns to further consolidation (same reason why the staking yield falls as the total deposit size grows). In particular, it falls all the way to <span class=\"math\">0</span> if <span class=\"math\">\\frac{D_a}{D}</span> goes to <span class=\"math\">1</span>, restoring the base yield <span class=\"math\">y(D_a, D)</span> for everyone, and generally making the rewards less and less differentiated as more consolidation occurs. The idea is that an equilibrium will be reached where <span class=\"math\">g(\\frac{D_a}{D})</span> just about compensates for the additional risk from consolidating, and further consolidation is not incentivized. We can even set <span class=\"math\">g</span> to reach <span class=\"math\">0</span> at some lower level of consolidation that we are happy with, leaving more space for staking with non consolidated validators to be economically viable. For example, if <span class=\"math\">g(0.8) = 0</span>, then a validator with 32 ETH gets the same yield, and less risk, as a validator with 1024 ETH, even if 20% of the stake is made up of 32 ETH validators.</p>\n<p>Let’s now look at a specific form of <span class=\"math\">g</span>. The simplest possible choice is a linear function, which is fully determined by <span class=\"math\">g(0)</span>, the initial yield increase factor when there is no consolidation at all. The function is then simply <span class=\"math\">g(x) = g(0)(1 - x)</span>. For example <span class=\"math\">g(x) = \\frac{1-x}{4}</span>, where the maximum yield increase is 25%. The extra yield of a validator with stake <span class=\"math\">S</span> is:<br>\n<span class=\"math\">y_c(D_a, D, S) = g(0)\\frac{\\min(S,T)}{T} \\cdot y(D_a, D) \\cdot (1 - \\frac{D_a}{D})</span></p>\n<p>Let’s see what this looks like in combination with the collective incentives introduced <a href=\"https://ethresear.ch#Collective-consolidation-incentives\">in the previous section</a>, where issuance is based on <span class=\"math\">D_a</span>, i.e., <span class=\"math\">y(D_a, D) = \\frac{I(D_a)}{D}</span>, and <span class=\"math\">I</span> is the current issuance curve <span class=\"math\">I(x) = c\\sqrt{x}</span>. The maximum consolidation yield, or the yield advantage of a consolidated validator over a regular one, is:</p>\n<p><span class=\"math\">y_c(D_a, D, S=T) = g(0) \\cdot y(D_a, D) (1 - \\frac{D_a}{D})  = \\\\\n= g(0) \\cdot c \\cdot \\frac{\\sqrt{D_a}}{D}(1 - \\frac{D_a}{D}) = \\\\ g(0) \\cdot c \\cdot \\frac{1}{\\sqrt{D_a}} \\frac{D_a}{D}(1 - \\frac{D_a}{D})</span></p>\n<p>The next color plot shows <span class=\"math\">y_c(D_a, D, S=T)</span> as a function of <span class=\"math\">\\frac{D_a}{D}</span> and <span class=\"math\">D_a</span>, for <span class=\"math\">g(0) = \\frac{1}{4}</span> (some portion on the upper left corner is infeasible, because <span class=\"math\">D</span> would be <span class=\"math\">&gt; 120M</span>). Horizontally, the function looks like <span class=\"math\">x(1-x)</span>: the consolidation yield is low at low consolidation levels, when collective incentives are strong, and at high consolidation levels, when we don’t have a strong requirement for more consolidation and we are more worried about the economic viability of running non consolidated validators. Vertically it looks like <span class=\"math\">\\frac{1}{\\sqrt{y}}</span>, with the consolidation yield slowly falling off as <span class=\"math\">D_a</span> grows and we have less need for consolidation in general, since the economic security of the active set is determined by <span class=\"math\">D_a</span>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/c/fc72bbb9885865bf40afe632e841d2ab2ff06e70.png\" data-download-href=\"https://ethresear.ch/uploads/default/fc72bbb9885865bf40afe632e841d2ab2ff06e70\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/c/fc72bbb9885865bf40afe632e841d2ab2ff06e70_2_586x500.png\" alt=\"\" data-base62-sha1=\"A1g8wBtX7JtPMjUEgSaM9LKu2pa\" role=\"presentation\" width=\"586\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/c/fc72bbb9885865bf40afe632e841d2ab2ff06e70_2_586x500.png, https://ethresear.ch/uploads/default/original/3X/f/c/fc72bbb9885865bf40afe632e841d2ab2ff06e70.png 1.5x, https://ethresear.ch/uploads/default/original/3X/f/c/fc72bbb9885865bf40afe632e841d2ab2ff06e70.png 2x\" data-dominant-color=\"766D9D\"></a></div><p></p>\n<p>We can of course very easily modify any such function <span class=\"math\">g</span> so that the incentives fall to <span class=\"math\">0</span> after a certain consolidation level <span class=\"math\">r_0 \\in [0,1]</span>, by replacing <span class=\"math\">g</span> with <span class=\"math\">\\tilde{g}(x) = \\max(g(\\frac{x}{r_0}), 0)</span>, which squeezes <span class=\"math\">g</span> in the range <span class=\"math\">[0,r_0]</span> and sets the consolidation yield to <span class=\"math\">0</span> afterwards. For example, this is the consolidation yield with <span class=\"math\">r_0 = 80\\%</span>, starting from the previous <span class=\"math\">g(x) = \\frac{1-x}{4}</span>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/b/1bf37fb8df61c4442a5054ccdaf8d55b02c351f9.png\" data-download-href=\"https://ethresear.ch/uploads/default/1bf37fb8df61c4442a5054ccdaf8d55b02c351f9\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/b/1bf37fb8df61c4442a5054ccdaf8d55b02c351f9_2_573x500.png\" alt=\"\" data-base62-sha1=\"3ZgAjvFoa0GKzhRXjujMwX2Pbnj\" role=\"presentation\" width=\"573\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/b/1bf37fb8df61c4442a5054ccdaf8d55b02c351f9_2_573x500.png, https://ethresear.ch/uploads/default/original/3X/1/b/1bf37fb8df61c4442a5054ccdaf8d55b02c351f9.png 1.5x, https://ethresear.ch/uploads/default/original/3X/1/b/1bf37fb8df61c4442a5054ccdaf8d55b02c351f9.png 2x\" data-dominant-color=\"736296\"></a></div><p></p>\n\n\n\n<h2><a name=\"appendix-13\" class=\"anchor\" href=\"https://ethresear.ch#appendix-13\"></a>Appendix</h2>\n<h3><a name=\"validator-capping-active-validator-set-variance-14\" class=\"anchor\" href=\"https://ethresear.ch#validator-capping-active-validator-set-variance-14\"></a>Validator capping: active validator set variance</h3>\n<p>Let’s also get an upper bound on the variance of the active validator set size. <span class=\"math\">\\mathbb{V}[|V_a|] = \\mathbb{V}[\\sum_{i\\in V} \\chi_{\\{i \\in V_a\\}}] = \\sum_{i\\in V} \\mathbb{V}[\\chi_{\\{i \\in V_a\\}}]</span>, since each validator is sampled independently. Moreover, <span class=\"math\">\\mathbb{V}[\\chi_{\\{i \\in V_a\\}}] = 0</span> whenever <span class=\"math\">S_i \\ge T</span>, since validator <span class=\"math\">i</span> is then always in <span class=\"math\">V_a</span>.<br>\nFor <span class=\"math\">S_i &lt; T</span>, the variance is <span class=\"math\">\\mathbb{V}[\\chi_{\\{i \\in V_a\\}}] = p(S_i)(1 - p(S_i)) = \\frac{S_i}{T}(1 - \\frac{S_i}{T})</span>, which is maximized when <span class=\"math\">p(S_i) = \\frac{1}{2}</span>, or equivalently when <span class=\"math\">S_i = \\frac{T}{2}</span>, in which case <span class=\"math\">\\mathbb{V}[\\chi_{\\{i \\in V_a\\}}] = \\frac{1}{4}</span>. Therefore, <span class=\"math\">\\mathbb{V}[|V_a|] \\le \\frac{1}{4}|V|</span>.</p>\n<p>Concretely, say we keep a minimum balance of 32 ETH, so that the maximum validator set size <span class=\"math\">|V|</span> is ~4M. The standard deviation of <span class=\"math\">|V_a|</span> is then bounded by <span class=\"math\">\\frac{\\sqrt{|V|}}{2} \\approx 1000</span>. The probability of deviations beyond 10k is then vanishingly low. We can then even explicitly cap the active validator set size, say at 40k validators. Doing so introduces only a tiny correlation to the sampling of different validators, because sampling is completely unaffected other than in the exceedingly rare events of massive deviations.</p>\n<h3><a name=\"collective-incentives-15\" class=\"anchor\" href=\"https://ethresear.ch#collective-incentives-15\"></a>Collective incentives</h3>\n<h4><a name=\"quantifying-the-individual-effect-of-collective-consolidation-incentives-16\" class=\"anchor\" href=\"https://ethresear.ch#quantifying-the-individual-effect-of-collective-consolidation-incentives-16\"></a>Quantifying the individual effect of collective consolidation incentives</h4>\n<p>Let’s look into the consolidation incentives a bit more quantitatively. While it is true that there is always some consolidation incentive whenever consolidation is at all possible, we should also consider how strong these incentives are for various stakers. In particular, the strength of the incentives varies based on how large a staker is, because a consolidation increases yield <em>for everyone</em>, not just for the party which peforms it. In other words, the gains of a consolidation are socialized, to avoid having a sort of consolidation reward, which would effectively disadvantage smaller validators that cannot access it. Consolidation incentives are therefore stronger the larger a validator is. On the one hand, this means that sufficiently large validators have a strong incentive to consolidate, which means we should expect <span class=\"math\">D_a</span> to always represent at least a meaningful portion of the total stake <span class=\"math\">D</span>. On the other hand, it means that small but still meaningfully sized stakers (e.g. 1%) might not be particularly incentivized to consolidate.</p>\n<p>To quantify this, let’s look at how much of an issuance increase there is in the event of the full consolidation of a staker having a fraction <span class=\"math\">p</span> of the total stake <span class=\"math\">D</span>, when <span class=\"math\">\\frac{D_a}{D} = r</span>. Here we assume that the stake <span class=\"math\">pD</span> in question is initially not consolidated at all, and neglect the small effect it has on <span class=\"math\">D_a</span> (e.g. if <span class=\"math\">T = 1024</span>, a minimum balance validator only increases <span class=\"math\">D_a</span> by 1/32 of its stake). Issuance, and thus yield, increases by a factor of <span class=\"math\">\\frac{I(D_a + pD) - I(D_a)}{I(D_a)} = \\frac{I((r + p)D)}{I(rD)} - 1</span>. Plugging in the definition of <span class=\"math\">I</span>, we can simplify this to <span class=\"math\">\\sqrt{1 + \\frac{p}{r}} - 1</span>. As expected, the consolidation incentives grow with <span class=\"math\">p</span>. It is also expected that they fall with <span class=\"math\">r</span>, since the issuance curve <span class=\"math\">I</span> is concave. As it turns out, there’s no dependency on <span class=\"math\">D</span> for this particular form of <span class=\"math\">I</span>.</p>\n<p>We now plot <span class=\"math\">100(\\sqrt{1 + \\frac{p}{r}} - 1)</span>, the <em>percentage</em> of yield increase that every validator experiences when a fraction <span class=\"math\">p</span> of the stake is fully consolidated, starting from <span class=\"math\">D_a = rD</span>. We restrict <span class=\"math\">r</span> to the range <span class=\"math\">[0.1, 1]</span> for ease of visualization, because the consolidation incentives blow up for <span class=\"math\">r</span> near <span class=\"math\">0</span>, as we would wish. Notice that the minimum <span class=\"math\">r</span> is actually <span class=\"math\">1/32</span> for <span class=\"math\">T = 1024</span> and minimum balance 32 ETH.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/c/ccde75a7bf33c1105849424713dceee8fd5b151d.png\" data-download-href=\"https://ethresear.ch/uploads/default/ccde75a7bf33c1105849424713dceee8fd5b151d\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/c/ccde75a7bf33c1105849424713dceee8fd5b151d_2_598x500.png\" alt=\"\" data-base62-sha1=\"tem1kroyOKaBQXYVjWJIVIa3wKN\" role=\"presentation\" width=\"598\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/c/ccde75a7bf33c1105849424713dceee8fd5b151d_2_598x500.png, https://ethresear.ch/uploads/default/original/3X/c/c/ccde75a7bf33c1105849424713dceee8fd5b151d.png 1.5x, https://ethresear.ch/uploads/default/original/3X/c/c/ccde75a7bf33c1105849424713dceee8fd5b151d.png 2x\" data-dominant-color=\"7B709D\"></a></div><p></p>\n<p>On the other hand, the <em>absolute</em> yield increase <span class=\"math\">100\\cdot\\frac{I(D_a + pD) - I(D_a)}{D_a}</span> is not independent of <span class=\"math\">D</span>. We plot it here specifically for <span class=\"math\">D = 30M</span> ETH. For lower values of <span class=\"math\">D</span>, the consolidation incentives only get stronger in absolute terms.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/3/53bb8a566b7597b844788fa776551f98df5b36c3.png\" data-download-href=\"https://ethresear.ch/uploads/default/53bb8a566b7597b844788fa776551f98df5b36c3\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/3/53bb8a566b7597b844788fa776551f98df5b36c3_2_567x500.png\" alt=\"\" data-base62-sha1=\"bWJqSdQAyBUtYmkNMf9epAepaw3\" role=\"presentation\" width=\"567\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/3/53bb8a566b7597b844788fa776551f98df5b36c3_2_567x500.png, https://ethresear.ch/uploads/default/original/3X/5/3/53bb8a566b7597b844788fa776551f98df5b36c3.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/3/53bb8a566b7597b844788fa776551f98df5b36c3.png 2x\" data-dominant-color=\"755A8F\"></a></div><p></p>\n<p>Finally, we also plot the yearly ETH returns from consolidation, <span class=\"math\">(I(D_a + pD) - I(D_a))\\cdot \\frac{p}{r}</span>, again for <span class=\"math\">D = 30M</span> ETH.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/8/68a7e7faee22708549d1b4c2738e1016de2cf661.png\" data-download-href=\"https://ethresear.ch/uploads/default/68a7e7faee22708549d1b4c2738e1016de2cf661\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/8/68a7e7faee22708549d1b4c2738e1016de2cf661_2_578x500.png\" alt=\"\" data-base62-sha1=\"eVPort1z1I8g2c6cJ9PLb4e9vDr\" role=\"presentation\" width=\"578\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/8/68a7e7faee22708549d1b4c2738e1016de2cf661_2_578x500.png, https://ethresear.ch/uploads/default/original/3X/6/8/68a7e7faee22708549d1b4c2738e1016de2cf661.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/8/68a7e7faee22708549d1b4c2738e1016de2cf661.png 2x\" data-dominant-color=\"7C5D91\"></a></div><p></p>\n<h4><a name=\"generalizing-collective-incentives-17\" class=\"anchor\" href=\"https://ethresear.ch#generalizing-collective-incentives-17\"></a>Generalizing collective incentives</h4>\n<p>When <span class=\"math\">I</span> is our current issuance curve, <span class=\"math\">I(x) = c\\sqrt{x}</span>, we have that <span class=\"math\">I(D_a) = c\\sqrt{D_a} = c \\sqrt{D} \\sqrt{\\frac{D_a}{D}} = I(D)\\sqrt{\\frac{D_a}{D}}</span>. In other words, we can think about the previous proposal as incentivizing a high <span class=\"math\">\\frac{D_a}{D}</span> ratio by directly a  applying an issuance penalty based on it. More generally, we can let the issuance be <span class=\"math\">I(D_a, D) = I(D) \\cdot \\delta(\\frac{D_a}{D})</span> for any <span class=\"math\">\\delta</span> such that <span class=\"math\">\\delta(0) = 0</span> and <span class=\"math\">\\delta(1) = 1</span>. With this, the yield increase from consolidating is exactly <span class=\"math\">\\frac{I(D)}{D} \\cdot (\\delta(r + p) - \\delta(p))</span>, i.e., a fraction <span class=\"math\">\\delta(r + p) - \\delta(r)</span> of the maximum yield available at deposit size <span class=\"math\">D</span>. The percentage yield increase is instead <span class=\"math\">\\frac{\\delta(r + p) - \\delta(r)}{\\delta(r)}</span>. The simplest case is <span class=\"math\">\\delta(r) = r</span>, where <span class=\"math\">I(D_a, D) = I(D) \\cdot \\frac{D_a}{D}</span>, in which case the yield increase is simply <span class=\"math\">p \\frac{I(D)}{D}</span>, constant in <span class=\"math\">r</span>, and the percentage yield increase is <span class=\"math\">\\frac{p}{r}</span>.</p>\n<p>In this form, we can more clearly separate the design of incentives to stake from that of incentives to consolidate the stake: <span class=\"math\">I(D)</span> provides the <em>maximum</em> possible incentive to stake at a given total deposit level <span class=\"math\">D</span>, while <span class=\"math\">\\delta</span> regulates the incentive to consolidate at a given ratio <span class=\"math\">\\frac{D_a}{D}</span>. We can for example have <span class=\"math\">I</span> being concave, as it is currently, but <span class=\"math\">\\delta</span> linear as in the previous example: the protocol then considers stake deposits to have diminishing returns, while it believes consolidation to be equally valuable regardless of where <span class=\"math\">\\frac{D_a}{D}</span> currently sits.</p>\n<h4><a name=\"discouragement-attacks-18\" class=\"anchor\" href=\"https://ethresear.ch#discouragement-attacks-18\"></a>Discouragement attacks</h4>\n<p>At any point, it is possible to increase <span class=\"math\">D</span> while barely increasing <span class=\"math\">D_a</span>, by activating validators with minimum balance. Thus, the issuance <span class=\"math\">I(D_a)</span> is approximately constant, but distributed to more stake. This is the same <a href=\"https://ethresear.ch/t/reward-curve-with-tempered-issuance-eip-research-post/19171#h-53-discouragement-attacks-32\">discouragement attack</a> that would be possible with a constant issuance curve, or with issuance capped at some maximum value, where the yield also decreases like <span class=\"math\">\\frac{1}{D}</span>. While worse than today, where it decreases like <span class=\"math\">\\frac{1}{\\sqrt{D}}</span>, this discouragement attack is nothing like the ultra cheap griefing vector that would arise with if we were to <a href=\"https://notes.ethereum.org/@vbuterin/single_slot_finality#Economic-capping-of-total-validator-count\" rel=\"noopener nofollow ugc\">use issuance to target a validator count</a>. For example, say we started reducing issuance past our ideal target of ~30k validators, and were to go negative at 40k. Then, activating a few thousands minimum balance validators, in the order of 0.01% to 0.1% of the stake, would be enough to make yields go negative. On the other hand, in the context of the discouragement attack we are considering here, reducing yield by a factor of <span class=\"math\">k</span> requires increasing the deposit size by a factor of <span class=\"math\">k</span>. For example, halving issuance when <span class=\"math\">D = </span> 20M requires depositing another 20M.</p>\n<h4><a name=\"stake-capping-19\" class=\"anchor\" href=\"https://ethresear.ch#stake-capping-19\"></a>Stake capping</h4>\n<p>If we were to set the issuance based on <span class=\"math\">D_a</span>, we would not be able to immediately adopt any issuance curve that reduces issuance past some deposit size, like the ones discussed <a href=\"https://ethresear.ch/t/reward-curve-with-tempered-issuance-eip-research-post/19171/1\">here</a> and <a href=\"https://ethresear.ch/t/endgame-staking-economics-a-case-for-targeting/18751\">here</a>. The reason for that is simple: if issuance goes down past a certain value of <span class=\"math\">D_a</span>, but it turns out that the yield at that point is still attractive, the incentives are such that <span class=\"math\">D</span> would still grow (more stake wants yield at these levels) while <span class=\"math\">D_a</span> would not (growing <span class=\"math\">D_a</span> lowers yield). In fact, instead of consolidation incentives, we end up having incentives for splitting up stake over multiple validators, so as to decrease <span class=\"math\">D_a</span> and keep it at the point of maximum issuance! Meanwhile, stake capping is not achieved, at least not any more than we would already achieve it by capping issuance at the maximum value, rather than having it decrease afterwards.</p>\n<p>If we did want to adopt some form of stake capping, we would then need to do things a bit differently. We could let the issuance be <span class=\"math\">I(D_a, D) = I(D_a) - f(D)</span>, where <span class=\"math\">f</span> acts to reduce the issuance past some critical <em>total</em> deposit size. Intuitively, the goal is to try to ensure two things at once: that we have enough <span class=\"math\">D_a</span>, and that we do not have too much <span class=\"math\">D</span>. For example:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/8/c83ba4769d0fc0c8db841d28c0210dfdd3ab53d2.png\" data-download-href=\"https://ethresear.ch/uploads/default/c83ba4769d0fc0c8db841d28c0210dfdd3ab53d2\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/8/c83ba4769d0fc0c8db841d28c0210dfdd3ab53d2_2_690x227.png\" alt=\"\" data-base62-sha1=\"szlhcoivv3C1f39gOu2D53j1GDM\" role=\"presentation\" width=\"690\" height=\"227\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/8/c83ba4769d0fc0c8db841d28c0210dfdd3ab53d2_2_690x227.png, https://ethresear.ch/uploads/default/optimized/3X/c/8/c83ba4769d0fc0c8db841d28c0210dfdd3ab53d2_2_1035x340.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/8/c83ba4769d0fc0c8db841d28c0210dfdd3ab53d2_2_1380x454.png 2x\" data-dominant-color=\"FCFBFB\"></a></div><p></p>\n<p>To help visualizing the effect of this further, here are the cumulative issuance and yield while holding <span class=\"math\">\\frac{D_a}{D} = 0.8</span>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/0/4/044c55ed764d7dfddac4c2df5be73783c8017800.png\" data-download-href=\"https://ethresear.ch/uploads/default/044c55ed764d7dfddac4c2df5be73783c8017800\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/0/4/044c55ed764d7dfddac4c2df5be73783c8017800_2_690x230.png\" alt=\"\" data-base62-sha1=\"C1spzZDMLzgSjTKbE8OiZDLzzy\" role=\"presentation\" width=\"690\" height=\"230\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/0/4/044c55ed764d7dfddac4c2df5be73783c8017800_2_690x230.png, https://ethresear.ch/uploads/default/optimized/3X/0/4/044c55ed764d7dfddac4c2df5be73783c8017800_2_1035x345.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/0/4/044c55ed764d7dfddac4c2df5be73783c8017800_2_1380x460.png 2x\" data-dominant-color=\"FBFBFD\"></a></div><p></p>\n<p>Finally, here is a color plot of the yield in the <span class=\"math\">(D, \\frac{D_a}{D})</span> space. <span class=\"math\">D</span> starts at 2 to help the visualization be effective.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/4/744db3435b9b033af6e55309e19068c435be1ffb.png\" data-download-href=\"https://ethresear.ch/uploads/default/744db3435b9b033af6e55309e19068c435be1ffb\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/4/744db3435b9b033af6e55309e19068c435be1ffb_2_690x463.png\" alt=\"\" data-base62-sha1=\"gARReogoNl8zna20D2vLzhJY3N1\" role=\"presentation\" width=\"690\" height=\"463\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/4/744db3435b9b033af6e55309e19068c435be1ffb_2_690x463.png, https://ethresear.ch/uploads/default/original/3X/7/4/744db3435b9b033af6e55309e19068c435be1ffb.png 1.5x, https://ethresear.ch/uploads/default/original/3X/7/4/744db3435b9b033af6e55309e19068c435be1ffb.png 2x\" data-dominant-color=\"69AEA9\"></a></div><p></p>\n<h3><a name=\"individual-incentives-20\" class=\"anchor\" href=\"https://ethresear.ch#individual-incentives-20\"></a>Individual incentives</h3>\n<h4><a name=\"total-issuance-21\" class=\"anchor\" href=\"https://ethresear.ch#total-issuance-21\"></a>Total issuance</h4>\n<p>The total <em>extra</em> issuance is:</p>\n<p><span class=\"math\">I_c(D_a, D) = \\sum_{i \\in V} y_c(D_a, D, S_i) S_i = g(0) y(D_a, D)(1 - \\frac{D_a}{D}) \\sum_{i \\in V} p(S_i)S_i = \\\\ = g(0)y(D_a, D)\\cdot D_a(1 - \\frac{D_a}{D}) = g(0)I(D_a)\\cdot \\frac{D_a}{D}(1 - \\frac{D_a}{D}) = \\\\\n= g(0) \\sqrt{D} \\sqrt{\\frac{D_a}{D}}\\cdot \\frac{D_a}{D}(1 - \\frac{D_a}{D}) = g(0)I(D) \\sqrt{\\frac{D_a}{D}}\\cdot \\frac{D_a}{D}(1 - \\frac{D_a}{D})</span></p>\n<p>The total issuance then is:</p>\n<p><span class=\"math\">I_T(D_a, D) = I(D_a) + I_c(D_a, D) = I(D_a)(1 + g(0) \\frac{D_a}{D}(1 - \\frac{D_a}{D})) = \\\\\n= c \\sqrt{D} \\sqrt{\\frac{D_a}{D}}(1 + g(0)\\cdot \\frac{D_a}{D}(1 - \\frac{D_a}{D})) = \\\\\n= I(D) \\sqrt{\\frac{D_a}{D}} (1 + g(0)\\frac{D_a}{D}(1 - \\frac{D_a}{D})) = I(D) \\cdot h(\\frac{D_a}{D})</span>, where <span class=\"math\">h(x) = \\sqrt{x}(1 + g(0)x(1-x))</span>. For <span class=\"math\">g(0) = \\frac{1}{4}</span>, we have that <span class=\"math\">h(x) \\le 1</span> for <span class=\"math\">x \\in [0,1]</span>, so <span class=\"math\">I(D)</span> remains an upper bound on the total issuance.</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/5/4/543c7981de3b9feeff11aff29ac6556c3f9ad5cf.png\" alt=\"\" data-base62-sha1=\"c1bFMcZrRaXcIkPXUUEDXiUanGn\" role=\"presentation\" width=\"547\" height=\"435\"></p>\n<h4><a name=\"generalizing-individual-consolidation-incentives-22\" class=\"anchor\" href=\"https://ethresear.ch#generalizing-individual-consolidation-incentives-22\"></a>Generalizing individual consolidation incentives</h4>\n<p>More generally, we can choose any consolidation yield curve <span class=\"math\">y_c(D_a, D, S) = \\frac{\\min(S,T)}{T} y_c(D_a, D)</span>, not necessarily depending on <span class=\"math\">y(D_a, D)</span>, or even any curve <span class=\"math\">y_c(D_a, D, S)</span> with a different kind of dependency on <span class=\"math\">S</span>. An interesting example of the first kind is the curve <span class=\"math\">y_c(D_a, D, S) = \\frac{\\min(S,T)}{T} (y(D) - y(D_a, D))</span>, where <span class=\"math\">y_c(D_a, D, S)</span> essentially interpolates between the yield <span class=\"math\">y(D) = y(D_a = D, D)</span> that would be paid out to a fully consolidated validator set at deposit size <span class=\"math\">D</span>, and the base yield <span class=\"math\">y(D_a, D)</span> paid out at the current consolidation level. In other words, a validator with <span class=\"math\">T</span> stake always gets paid the maximum possible yield for deposit size <span class=\"math\">D</span>, <span class=\"math\">y(D)</span>, regardless of the consolidation level achieved by the whole validator set, while validators with minimum stake get paid closer to the base yield <span class=\"math\">y(D_a, D)</span>, and their yield linearly increases to <span class=\"math\">y(D)</span> as they consolidate. In this case, the consolidation incentives are quite a bit stronger at lower consolidation levels.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/2/5229207a5722061af774a3d38e53aa0d28a08a89.png\" data-download-href=\"https://ethresear.ch/uploads/default/5229207a5722061af774a3d38e53aa0d28a08a89\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/2/5229207a5722061af774a3d38e53aa0d28a08a89_2_573x500.png\" alt=\"\" data-base62-sha1=\"bIPgwmePdQuVbpyQmyyHGwdjaOd\" role=\"presentation\" width=\"573\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/2/5229207a5722061af774a3d38e53aa0d28a08a89_2_573x500.png, https://ethresear.ch/uploads/default/original/3X/5/2/5229207a5722061af774a3d38e53aa0d28a08a89.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/2/5229207a5722061af774a3d38e53aa0d28a08a89.png 2x\" data-dominant-color=\"766C9C\"></a></div><p></p>\n<p>While the absolute yield increase falls with <span class=\"math\">D_a</span>, the percentage yield increase from consolidating does not. As it turns out, it only depends on <span class=\"math\">\\frac{D_a}{D}</span>:<br>\n<span class=\"math\">\\frac{y_c(D_a, D)}{y(D_a, D)} = \\frac{y(D) - y(D_a, D)}{y(D_a, D)} =\n\\frac{y(D)}{y(D_a, D)} - 1 = \\sqrt{\\frac{D}{D_a}} - 1 </span></p>\n<p>In other words, this also fits the previous form <span class=\"math\">y_c(D_a, D, S) = \\frac{\\min(S,T)}{T} g(\\frac{D_a}{D}) y(D_a, D)</span>, with <span class=\"math\">g(x) = \\sqrt{\\frac{1}{x}} - 1</span> instead of a linear function.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/a/4ab4a1cd832f6644730fd660799e1167f71af570.png\" data-download-href=\"https://ethresear.ch/uploads/default/4ab4a1cd832f6644730fd660799e1167f71af570\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/a/4ab4a1cd832f6644730fd660799e1167f71af570_2_690x293.png\" alt=\"\" data-base62-sha1=\"aESkMqsbe5AMVaB57Ru9FCVKXGU\" role=\"presentation\" width=\"690\" height=\"293\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/a/4ab4a1cd832f6644730fd660799e1167f71af570_2_690x293.png, https://ethresear.ch/uploads/default/optimized/3X/4/a/4ab4a1cd832f6644730fd660799e1167f71af570_2_1035x439.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/a/4ab4a1cd832f6644730fd660799e1167f71af570_2_1380x586.png 2x\" data-dominant-color=\"F9F9F9\"></a></div><p></p>\n<p>Since <span class=\"math\">y(D_a, D) + y_c(D_a, D, S) \\le y(D)</span>, it still holds that <span class=\"math\">I(D)</span> is a bound on the total issuance. In fact, the total issuance can be worked out to be <span class=\"math\">I_T(D_a, D) = I(D_a) + I_c(D_a, D) = I(D) \\sqrt{\\frac{D_a}{D}}(1 + \\sqrt{\\frac{D_a}{D}} (1 - \\sqrt{\\frac{D_a}{D}})) = I(D) h(\\frac{D_a}{D})</span>, with <span class=\"math\">h(x) = \\sqrt{x}(1 + \\sqrt{x}(1 - \\sqrt{x})))</span>, which we compare here to the previous example:</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/8/e/8e42613ed48e495edae62b74cecc8f994f7499a9.png\" alt=\"\" data-base62-sha1=\"kiu1b4gGXQkdW7Ynxy73Oed55rz\" role=\"presentation\" width=\"547\" height=\"435\"></p>\n            <p><small>3 posts - 3 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/orbit-ssf-solo-staking-friendly-validator-set-management-for-ssf/19928\">Read full topic</a></p>","link":"https://ethresear.ch/t/orbit-ssf-solo-staking-friendly-validator-set-management-for-ssf/19928","pubDate":"Fri, 28 Jun 2024 07:22:10 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19928"},"source":{"@url":"https://ethresear.ch/t/orbit-ssf-solo-staking-friendly-validator-set-management-for-ssf/19928.rss","#text":"Orbit SSF: solo-staking-friendly validator set management for SSF"},"filter":false},{"title":"Number Duplicate Messages in Ethereum's Gossipsub Network","dc:creator":"yiannisbot","category":"Networking","description":"<h1><a name=\"summary-tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#summary-tldr-1\"></a>Summary &amp; TL;DR</h1>\n<p>The ProbeLab team (<a href=\"https://probelab.io/\" rel=\"noopener nofollow ugc\">probelab.io</a>) is carrying out a study on the performance of Gossipsub in Ethereum’s P2P network. Following from our previous post on the “<a href=\"https://ethresear.ch/t/gossipsub-network-dynamicity-through-grafts-and-prunes/19750\">Gossipsub Network Dynamicity through GRAFTs and PRUNEs</a>” in this post we investigate the number of messages and duplicated messages seen by our node, per topic. There is no public data on the overhead that broadcasting messages and control data over the network imply on each participating node.</p>\n<p>For the purposes of this study, we have built a tool called <strong>Hermes, which acts as a GossipSub listener and tracer</strong> (<a href=\"https://github.com/probe-lab/hermes/\" rel=\"noopener nofollow ugc\">GitHub - probe-lab/hermes: A Gossipsub listener and tracer.</a>). Hermes subscribes to all relevant pubsub topics and traces all protocol interactions. The results reported here are from a 3.5hr trace.</p>\n<p><strong>Study Description:</strong> Gossipsub’s design is inherently allowing for message duplicates. A brief model we develop shows that it’s normal to receive each message up to 3 extra times (as a duplicate). This excludes the gossip mechanism which propagates messages through the IHAVE/IWANT control message sequence.</p>\n<p><strong>TL;DR:</strong> We find that indeed duplicates through mesh stay in the order of 3 per message or below, which, however, doesn’t count for duplicates through gossip. For instance, there are edge cases where a message is requested (and responded to) through an IWANT message while the actual message is already in transit. Eventually, this results in an extra duplicate. We make two recommendations:</p>\n<ol>\n<li><strong>Reduce the number of concurrent <code>IWANT</code> messages we send through a limiting factor</strong> (somewhat similar to kademlia’s <code>alpha</code> parameter).</li>\n<li><strong>Lower the current <code>heartbeat</code> frequency (i.e., increasing the <code>heartbeat</code> interval) from 0.7 seconds to 1 second</strong> (as per the original protocol spec and recommendation). This would reduce the excessive <code>IHAVE</code> messages and reduce the chances of generating extra duplicates.</li>\n</ol>\n<h1><a name=\"background-2\" class=\"anchor\" href=\"https://ethresear.ch#background-2\"></a>Background</h1>\n<p><a href=\"https://github.com/libp2p/specs/blob/f25d0c22e5ef045c8c050bc91c297468de35f720/pubsub/gossipsub/gossipsub-v1.1.md\" rel=\"noopener nofollow ugc\">GossipSub</a> is a routing system that can be enabled on libp2p’s <a href=\"https://github.com/libp2p/specs/blob/f25d0c22e5ef045c8c050bc91c297468de35f720/pubsub/README.md\" rel=\"noopener nofollow ugc\">PubSub</a> message broadcasting protocol. This protocol organizes the message broadcasting channels on what is commonly known as Topics, where peers subscribed to a given topic keep a particular subset of connected peers for that particular topic. This subset of peer connections per topic is also known as “mesh”.</p>\n<p>In the case of GossipSub, the standard broadcasting mechanism of PubSub is extended with a few sets of enhancements that make it:</p>\n<ul>\n<li>more efficient than what is commonly called flooding, reducing the protocol’s bandwidth usage</li>\n<li>more resilient, as the protocol:\n<ul>\n<li>shares metadata of seen messages over sporadic Gossip messages (for censorship or Sybil attacks)</li>\n<li>keeps a local score for each mesh-connected peer to ensure healthy and useful connections, where each peer keeps connections with the highest scoring neighbours</li>\n<li>avoids sharing a message with peers that already sent the message to us</li>\n</ul>\n</li>\n</ul>\n<p>This all looks good on paper. However, there is still no public data on the overhead that broadcasting messages and control data over the network imply on each participating node. Even more importantly, how much room for improvement exists within the protocol and the implementations to make it more optimal.</p>\n<h2><a name=\"expected-results-3\" class=\"anchor\" href=\"https://ethresear.ch#expected-results-3\"></a>Expected Results</h2>\n<p>Message propagation through the GossipSub’s mesh considers some occasional duplicates that can arrive as the message might come from different peers within the mesh:</p>\n<p>Given:</p>\n<ul>\n<li><code>n</code> as the number of nodes in the graph</li>\n<li><code>k</code> as the mesh degree</li>\n<li><code>l</code> as the number of connections (links) between two nodes <span class=\"math\">l = \\frac{nk}{2}</span></li>\n</ul>\n<p>The number of links used to propagate a message to all nodes in the graph can be defined as <code>n-1 ~= n</code>. The links form a spanning tree with the message origin as root (<code>n</code> is big enough compared to the initial sender link, so that it can be considered negligible).</p>\n<p>The number of links not used to propagate a specific message corresponds to <span class=\"math\">l-n = \\frac{n(k-2)}{2}</span>.</p>\n<p>This means that on average each node will have 1 link used to receive a message, 1 to propagate it to a peer that doesn’t have it yet. And the rest <code>k-2</code>, to either send or receive the duplicate message.</p>\n<p>Assuming that <span class=\"math\">\\frac{k-2}{2}</span> links are used to send the message to peers that already have it, it means that we receive <span class=\"math\">\\frac{k-2}{2}</span> duplicate messages.</p>\n<p>In the case of Ethereum, <code>k=8</code>, and therefore, it follows that <span class=\"math\">\\frac{k-2}{2} = 3</span>. So, <strong>the expected value is to receive 3 duplicate messages for each message</strong>.</p>\n<h1><a name=\"results-4\" class=\"anchor\" href=\"https://ethresear.ch#results-4\"></a>Results</h1>\n<p>As previously introduced, this report aims to provide insights on:</p>\n<ul>\n<li>the number of duplicate messages that we receive per each shared message in the network,</li>\n<li>the extra bandwidth that we are spending on duplicates,</li>\n<li>any existing unexpected behavior or potential optimization that could be applied on GossipSub.</li>\n</ul>\n<blockquote>\n<p>NOTES:<br>\nThe numbers presented in the following sections belong to the same 3.5 hours run of <code>Hermes</code> as the previous studies, with the following extra configuration:</p>\n<ul>\n<li>The experiment is ran on the <code>Holesky</code> network</li>\n<li>Our node was subscribed to the following topics:\n<ul>\n<li><code>beacon_block</code></li>\n<li><code>beacon_aggregate_and_proof</code></li>\n<li><code>sync_commmittee_contribution_and_proof</code></li>\n<li><code>attester_slashing</code></li>\n<li><code>proposer_slashing</code></li>\n<li><code>voluntary_exit</code> * (check <code>Hermes</code> issue → <a href=\"https://github.com/probe-lab/hermes/issues/24\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Broadcasting of invalid `voluntary_exit` messages to mesh peers · Issue #24 · probe-lab/hermes · GitHub</a>)</li>\n<li><code>bls_to_execution_change</code></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2><a name=\"overall-number-of-messages-5\" class=\"anchor\" href=\"https://ethresear.ch#overall-number-of-messages-5\"></a>Overall Number of Messages</h2>\n<p>To give a little bit of context, the report starts by taking a look at the number of messages and the respective duplicates received over time. The following graph shows the number of <code>HANDLED</code> events by the libp2p-host in comparison with the <code>DELIVERED</code> and <code>DUPLICATED</code> ones.</p>\n<blockquote>\n<p>NOTE: In this report we will consider the <code>DELIVER</code> events as unique identifier of the arrival of a message. This is because the internal event tracer at the libp2p host notifies of the arrival of a unique message at multiple levels, which in turn, makes the <code>HANDLED</code> and <code>DELIVER</code> events at the arrival of a new message the exact same notification, just at different levels of the host.</p>\n</blockquote>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/5/65a05809dfbc2915a07ceadedbf9cd8d85f16fe8.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/65a05809dfbc2915a07ceadedbf9cd8d85f16fe8\" title=\"overall-number-of-events\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/5/65a05809dfbc2915a07ceadedbf9cd8d85f16fe8_2_517x309.jpeg\" alt=\"overall-number-of-events\" data-base62-sha1=\"ev1L6qSl7syrgmrIZtjuY2llzoA\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/5/65a05809dfbc2915a07ceadedbf9cd8d85f16fe8_2_517x309.jpeg, https://ethresear.ch/uploads/default/optimized/3X/6/5/65a05809dfbc2915a07ceadedbf9cd8d85f16fe8_2_775x463.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/6/5/65a05809dfbc2915a07ceadedbf9cd8d85f16fe8_2_1034x618.jpeg 2x\" data-dominant-color=\"FAF8F7\"></a></div><p></p>\n<ul>\n<li>The number of unique messages (i.e., <code>HANDLE_MESSAGE</code>) stays steady around the 3,000 and 3,200 unique messages per minute.</li>\n<li>By looking closer into the messages per topic (not shown here), we observe that the topic with the highest message frequency is the <code>beacon_aggregate_and_proof</code> one, receiving over 90% of the tracked unique messages.</li>\n<li>There are some duplicated spikes at the <code>beacon_block</code> topic that reach up to 60 duplicates  in some occasions.</li>\n<li>The number of duplicates seems to vary quite wildly over time, which can be related to the number of connections per mesh (as per the analysis done further up which showed that 3 duplicates per message are expected).</li>\n</ul>\n<h2><a name=\"number-of-duplicate-messages-6\" class=\"anchor\" href=\"https://ethresear.ch#number-of-duplicate-messages-6\"></a>Number of Duplicate Messages</h2>\n<p>When it comes to the actual number of <code>DUPLICATE</code> messages, the following figures show that number of duplicates can oscillate over time.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/d/edacb4d1d050448d2a5b17ef6c67ed0cb3ca42e0.png\" data-download-href=\"https://ethresear.ch/uploads/default/edacb4d1d050448d2a5b17ef6c67ed0cb3ca42e0\" title=\"duplicates-per-topic\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/d/edacb4d1d050448d2a5b17ef6c67ed0cb3ca42e0_2_517x309.png\" alt=\"duplicates-per-topic\" data-base62-sha1=\"xUzbhYcATSYazyzdVOOG41gMiKk\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/d/edacb4d1d050448d2a5b17ef6c67ed0cb3ca42e0_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/e/d/edacb4d1d050448d2a5b17ef6c67ed0cb3ca42e0_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/d/edacb4d1d050448d2a5b17ef6c67ed0cb3ca42e0.png 2x\" data-dominant-color=\"F8F6F5\"></a></div><p></p>\n<p>Clearly, the <code>beacon_block</code> topic seems to be the only one generating the largest number of spikes at times.</p>\n<h2><a name=\"cdf-of-duplicate-messages-7\" class=\"anchor\" href=\"https://ethresear.ch#cdf-of-duplicate-messages-7\"></a>CDF of Duplicate Messages</h2>\n<p>The following graph shows the Cumulative Distribution Function (CDF) of the duplicates per message per topic. In the graph, we can see that:</p>\n<ul>\n<li>smaller but more frequent messages like the <code>beacon_ggregate_and_proof</code> and <code>sync_commitee_contributions</code> do have fewer duplicates.\n<ul>\n<li>between 32% and 45% of the messages do not have any duplicates.</li>\n<li>50% of the messages are received with less than 2 duplicate messages, keeping the mean lower than the theoretical target of <code>3</code> duplicates per message.</li>\n<li>the upper tail shows that less than 10% of the messages get more than 4 duplicates, with a cap at 8-10 duplicates (i.e., the node’s mesh size, <code>D</code>).</li>\n</ul>\n</li>\n<li>the case of the <code>beacon_blocks</code> is completely different.\n<ul>\n<li>there are almost no recorded messages without duplicates (1%-2%).</li>\n<li>54% of the messages report the expected <code>3</code>  duplicates from the mesh</li>\n<li>Taking look at the tail of the CDF (shown in the dropdown plot further down) there are a few messages that were received up to 34 or 40 times.</li>\n</ul>\n</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/0/1/0153b674d22c5c90c7fee45cbf880ec5b865d548.png\" data-download-href=\"https://ethresear.ch/uploads/default/0153b674d22c5c90c7fee45cbf880ec5b865d548\" title=\"CDF-duplicates\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/0/1/0153b674d22c5c90c7fee45cbf880ec5b865d548_2_517x309.png\" alt=\"CDF-duplicates\" data-base62-sha1=\"bJPwVmfET6tLeQyWl4YQPYDdgc\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/0/1/0153b674d22c5c90c7fee45cbf880ec5b865d548_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/0/1/0153b674d22c5c90c7fee45cbf880ec5b865d548_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/0/1/0153b674d22c5c90c7fee45cbf880ec5b865d548.png 2x\" data-dominant-color=\"FAFBFA\"></a></div><p></p>\n<h2><a name=\"correlation-between-message-size-and-number-of-duplicates-8\" class=\"anchor\" href=\"https://ethresear.ch#correlation-between-message-size-and-number-of-duplicates-8\"></a>Correlation between Message Size and Number of Duplicates</h2>\n<p>From the CDF above there seems to be a pattern of “the bigger the size of the message, the more duplicates it has”. So we went a step further to investigate if there is indeed a correlation. The following graph shows that the correlation between the size of a message and the number of duplicates is somewhat present but is not a norm or at least doesn’t follow any fixed pattern.</p>\n<p>The figure is complemented by two auxiliary quartile plots or “boxplots”, which represent the given distribution of points of their respective axis, helping us understand that:</p>\n<ul>\n<li><code>sync_commmittee_contribution_and_proof</code> messages are the smallest ones in size, which also correlates with the smallest ratio of duplicate messages.</li>\n<li><code>beacon_aggregate_and_proof</code> messages are the second ones in size, having also a bigger tail of duplicates on the Y concentration plot.</li>\n<li><code>beacon_block</code> messages, despite being the ones with the widest variation in size, do not follow any particular pattern that could correlate the message size with the number of duplicates.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/b/fb40e85a2381cd48f38c553e329c3f0083a27196.png\" data-download-href=\"https://ethresear.ch/uploads/default/fb40e85a2381cd48f38c553e329c3f0083a27196\" title=\"msg-size-number-of-duplicates\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/b/fb40e85a2381cd48f38c553e329c3f0083a27196_2_383x374.png\" alt=\"msg-size-number-of-duplicates\" data-base62-sha1=\"zQGUmj0RcJ4b7t7Xb3gPJPbgAuO\" width=\"383\" height=\"374\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/b/fb40e85a2381cd48f38c553e329c3f0083a27196_2_383x374.png, https://ethresear.ch/uploads/default/optimized/3X/f/b/fb40e85a2381cd48f38c553e329c3f0083a27196_2_574x561.png 1.5x, https://ethresear.ch/uploads/default/original/3X/f/b/fb40e85a2381cd48f38c553e329c3f0083a27196.png 2x\" data-dominant-color=\"F1F4F2\"></a></div><p></p>\n<p>As such, we conclude that <strong>there is no correlation between message size and number of duplicates</strong>.</p>\n<h2><a name=\"arrival-time-of-duplicates-9\" class=\"anchor\" href=\"https://ethresear.ch#arrival-time-of-duplicates-9\"></a>Arrival Time of Duplicates</h2>\n<p>Reducing the number of duplicates has already been a topic of discussion in the community. There are already some proposals like <a href=\"https://github.com/libp2p/specs/blob/f25d0c22e5ef045c8c050bc91c297468de35f720/pubsub/gossipsub/gossipsub-v1.2.md\" rel=\"noopener nofollow ugc\">gossipsub1.2 </a> that spotted this large number of duplicated messages previously, proposing the addition of a new control <code>IDONTWANT</code> message that could not only notify other peers that we already got a message, but also cancel the <code>IWANT</code> ongoing messages.</p>\n<p>In order to see how effective the <code>IDONTWANT</code> control message would be, we’ve computed the time between the first delivery of each message and their respective first duplicate. This is done to validate that there is enough time to send the <code>IDONTWANT</code> message once a new message is received (prior to the message validation) and before the duplicate starts being sent over.</p>\n<p>The following graph gives the time between the delivery time of a message and the time to the first duplicated message in seconds.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/8/e87ebed2ebacfb8abd79473ceb14e2af58bc7b82.png\" data-download-href=\"https://ethresear.ch/uploads/default/e87ebed2ebacfb8abd79473ceb14e2af58bc7b82\" title=\"arrival-cdf\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/8/e87ebed2ebacfb8abd79473ceb14e2af58bc7b82_2_517x309.png\" alt=\"arrival-cdf\" data-base62-sha1=\"xaKk5a8MYdLbvQ71TzXe9xKjiV4\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/8/e87ebed2ebacfb8abd79473ceb14e2af58bc7b82_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/e/8/e87ebed2ebacfb8abd79473ceb14e2af58bc7b82_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/8/e87ebed2ebacfb8abd79473ceb14e2af58bc7b82.png 2x\" data-dominant-color=\"FAFBFA\"></a></div><p></p>\n<p>Results show that 50% of the duplicated beacon blocks arrive within 73 milliseconds, roughly an entire Round Trip Time (RTT) with a well connected peer. In practice, this means that <strong>the <code>IDONTWANT</code> message could prevent at least the other 50% of messages that arrive between 73 milliseconds and 2 seconds of the first arrival</strong>.</p>\n<p>We’ve spotted that a big part of the duplicated messages arrive from <code>IWANT</code> messages that we sent milliseconds before the arrival of the same message though the mesh.<br>\nThe <a href=\"https://github.com/libp2p/specs/blob/f25d0c22e5ef045c8c050bc91c297468de35f720/pubsub/gossipsub/gossipsub-v1.2.md\" rel=\"noopener nofollow ugc\">gossipsub1.2</a> proposal already contemplates <a href=\"https://github.com/libp2p/specs/blob/f25d0c22e5ef045c8c050bc91c297468de35f720/pubsub/gossipsub/gossipsub-v1.2.md#cancelling-iwant\" rel=\"noopener nofollow ugc\">this scenario</a>, where the same <code>IDONTWANT</code> message could break or stop any ongoing responses to <code>IWANT</code> messages for that <code>msgID</code>.</p>\n<p>In summary, we conclude that <strong>the <code>IDONTWANT</code> control message addition to Gossipsub will be a valuable enhancement that can indeed prevent the vast majority of duplicate messages</strong>.</p>\n<h1><a name=\"conclusions-and-takeaways-10\" class=\"anchor\" href=\"https://ethresear.ch#conclusions-and-takeaways-10\"></a>Conclusions and takeaways</h1>\n<blockquote>\n<p>This set of conclusions have been extracted from running the <code>go-libp2p</code>  implementation and, although it also involves the traces of how other implementations interact with Hermes, it might be a biased conclusion from the point of view of the Go implementation.</p>\n</blockquote>\n<ol>\n<li>\n<p>We have identified that there is no limit on the number of peers that we simultaneously send <code>IWANT</code> messages to for the same <code>msgID</code>.<br>\nWe identify that this has some benefits:</p>\n<ul>\n<li>Concurrently fetches the message from multiple actors.</li>\n<li>Bypasses bandwidth limitations of peer(s) we have sent <code>IWANT</code> messages to, since we have forwarded the <code>IWANT</code> message to multiple peers.</li>\n</ul>\n<p>However, it also has obvious downsides:</p>\n<ul>\n<li>\n<p>We receive multiple duplicates from the peers that respond to our simultaneous <code>IWANT</code> request, consuming more bandwidth on both ends.</p>\n</li>\n<li>\n<p>The message could be already on the wire through the mesh connections, so when the <code>IWANT</code> message responses arrive, the message was already delivered through the mesh.</p>\n</li>\n<li>\n<p>There is no track of who we contacted for a given message, given that Gossipsub is:</p>\n<ul>\n<li>forwarding the message only the first time we see it, and</li>\n<li>removing the peer that sent us the message from the list of peers we’re broadcasting the message to and forgetting about that peer.</li>\n</ul>\n<p>This makes the entire broadcasting process unaware of who sent us that message in <code>IHAVE</code>s, or who we are already contacting for a particular message - resulting in multiple duplicates.</p>\n</li>\n</ul>\n<p><a href=\"https://github.com/libp2p/specs/blob/f25d0c22e5ef045c8c050bc91c297468de35f720/pubsub/gossipsub/gossipsub-v1.2.md#cancelling-iwant\" rel=\"noopener nofollow ugc\">Canceling ongoing <code>IWANT</code>messages</a> with <code>IDONTWANT</code> messages, which is a proposal included in <a href=\"https://github.com/libp2p/specs/blob/f25d0c22e5ef045c8c050bc91c297468de35f720/pubsub/gossipsub/gossipsub-v1.2.md\" rel=\"noopener nofollow ugc\">gossipsub1.2</a> is a valuable enhancement that will limit the number of duplicates.</p>\n<h3><a name=\"recommendation-1-11\" class=\"anchor\" href=\"https://ethresear.ch#recommendation-1-11\"></a><strong>Recommendation 1</strong></h3>\n<p>We propose having a limiting factor (somewhat similar to kademlia’s <code>alpha</code> parameter), which would limit the number of concurrent <code>IWANT</code> messages we send for the same <code>msgID</code>.</p>\n<hr>\n<hr>\n</li>\n<li>\n<p>The gossiping mechanism of Gossipsub acts as a backup mechanism to the broadcasting/mesh propagation part of the protocol for those messages that didn’t manage to reach all nodes in the network. The more frequent gossiping is, the higher its contribution becomes to message propagation (i.e., more messages are being requested through <code>IWANT</code> requests because they have not reached the entirety of the network).</p>\n<p>An edge case that results from very frequent gossiping (i.e., small <code>heartbeat</code> interval) is that messages that are already in transit, but have not been downloaded completely, are being requested through an <code>IWANT</code> message. This inevitably results in a duplicate message once both messages arrive at their destination.</p>\n<p>It is hard to quantify how often the message responses to <code>IWANT</code> messages are indeed future duplicates, but it is still worth pointing out that high heartbeat frequency increases the chances of those edge cases.</p>\n<h3><a name=\"recommendation-2-12\" class=\"anchor\" href=\"https://ethresear.ch#recommendation-2-12\"></a>Recommendation 2</h3>\n<p>A quick and straightforward optimization is to <strong>lower the current <code>heartbeat</code> frequency (i.e., increasing the <code>heartbeat</code> interval) from 0.7 seconds to 1 second</strong> (as per the original protocol spec and recommendation). This would reduce the excessive <code>IHAVE</code> messages and reduce the chances of generating extra duplicates.</p>\n<hr>\n<hr>\n</li>\n<li>\n<p>We have spotted some edge cases that may occur due to the “lack” of control over the triggered events at GossipSub (<code>IHAVE</code>/ <code>IWANT</code>).</p>\n<p>It isn’t easy to judge from the logs whether those cases are just a matter of timing, as GossipSub replies to those events as interruptions (at least in the Go implementation), or if some of those cases are caused by a bug in one of the implementations.</p>\n<p>We found that <strong>the number of messages where we received multiple duplicates from the same peer to just 1% of the total number of <code>beacon_blocks</code> received</strong>. We, therefore, conclude that this is not critical or an issue that requires further investigation.</p>\n</li>\n</ol>\n<p>For more details and <strong>weekly network health reports on Ethereum’s discv5 DHT network</strong> head over to <a href=\"https://probelab.io/\" rel=\"noopener nofollow ugc\">probelab.io</a>.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/number-duplicate-messages-in-ethereums-gossipsub-network/19921\">Read full topic</a></p>","link":"https://ethresear.ch/t/number-duplicate-messages-in-ethereums-gossipsub-network/19921","pubDate":"Thu, 27 Jun 2024 08:48:46 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19921"},"source":{"@url":"https://ethresear.ch/t/number-duplicate-messages-in-ethereums-gossipsub-network/19921.rss","#text":"Number Duplicate Messages in Ethereum's Gossipsub Network"},"filter":false},{"title":"Estimating Validator Decentralization Using p2p Data","dc:creator":"jonasbostoen","category":"Networking","description":"<blockquote>\n<p>Written by <a href=\"https://x.com/mempirate\" rel=\"noopener nofollow ugc\">Jonas</a> &amp; <a href=\"https://x.com/namn_grg\" rel=\"noopener nofollow ugc\">Naman</a> from <a href=\"https://x.com/chainbound_\" rel=\"noopener nofollow ugc\">Chainbound</a>.<br><br>\nThis research was funded by the Robust Incentives Group at the Ethereum Foundation. This work is specifically related to ROP-8. Additional information can be found <a href=\"https://www.notion.so/bad7233658cc41f38b26e7b4f6cf6e8b?pvs=21\" rel=\"noopener nofollow ugc\">here</a>. We want to thank <a href=\"https://x.com/soispoke\" rel=\"noopener nofollow ugc\">soispoke</a>, the <a href=\"https://x.com/EthPandaOps\" rel=\"noopener nofollow ugc\">EF DevOps team</a>, <a href=\"https://migalabs.io/\" rel=\"noopener nofollow ugc\">MigaLabs</a> and <a href=\"https://probelab.io/\" rel=\"noopener nofollow ugc\">ProbeLab</a> for their advice and contributions!</p>\n</blockquote>\n<h2><a name=\"table-of-contents-1\" class=\"anchor\" href=\"https://ethresear.ch#table-of-contents-1\"></a>Table of Contents</h2>\n<ul>\n<li><a href=\"https://ethresear.ch#introduction\">Introduction</a></li>\n<li><a href=\"https://ethresear.ch#anatomy-of-a-validator\">Anatomy of a validator</a></li>\n<li><a href=\"https://ethresear.ch#attestation-duties-and-committees\">Attestation duties and committees</a></li>\n<li><a href=\"https://ethresear.ch#attestation-subnets\">Attestation subnets</a>\n<ul>\n<li><a href=\"https://ethresear.ch#subnet-types\">Subnet types</a></li>\n</ul>\n</li>\n<li><a href=\"https://ethresear.ch#validator-footprints\">Validator footprints</a></li>\n<li><a href=\"https://ethresear.ch#methodology\">Methodology</a>\n<ul>\n<li><a href=\"https://ethresear.ch#long-lived-subnets\">Long-lived subnets &amp; node metadata</a></li>\n<li><a href=\"https://ethresear.ch#short-lived-subnets\">Short-lived subnets</a></li>\n<li><a href=\"https://ethresear.ch#estimating-validator-counts\">Estimating validator counts</a></li>\n</ul>\n</li>\n<li><a href=\"https://ethresear.ch#architecture\">Architecture</a>\n<ul>\n<li><a href=\"https://ethresear.ch#crawler\">Crawler</a></li>\n<li><a href=\"https://ethresear.ch#consumer\">Consumer</a></li>\n</ul>\n</li>\n<li><a href=\"https://ethresear.ch#results\">Result</a></li>\n<li><a href=\"https://ethresear.ch#limitations\">Limitations</a></li>\n<li><a href=\"https://ethresear.ch#references\">References</a></li>\n</ul>\n<h2><a name=\"introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#introduction-2\"></a>Introduction</h2>\n<p>The geographical distribution of a validator set is <a href=\"https://collective.flashbots.net/t/decentralized-crypto-needs-you-to-be-a-geographical-decentralization-maxi/1385\" rel=\"noopener nofollow ugc\">one of the most critical factors</a> in determining a blockchain’s level of decentralization. Validator decentralization is vital for Ethereum. It enhances network security, resilience, and censorship resistance by distributing control and minimizing the risk of single points of failure or malicious attacks.</p>\n<p>It is well known that Ethereum has a <a href=\"https://beaconcha.in/charts/validators\" rel=\"noopener nofollow ugc\">very large</a> validator set, but <strong>is this validator set geographically distributed?</strong> Ethereum has a substantial amount  of beacon nodes running on the consensus layer network, with current estimates at around ~12,000 active nodes (<a href=\"https://nodewatch.io/\" rel=\"noopener nofollow ugc\">source</a>). A beacon node serves as a <em>potential</em> entrypoint into the network for validators, but it is not representative of the actual validator distribution.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/f/8f1dda810cb6cc5f9d3db8c3c592d8167d16710e.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/8f1dda810cb6cc5f9d3db8c3c592d8167d16710e\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/f/8f1dda810cb6cc5f9d3db8c3c592d8167d16710e_2_500x500.jpeg\" alt=\"image\" data-base62-sha1=\"kq4ePn5GSlTcVja0bZSn5dC7WbQ\" width=\"500\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/f/8f1dda810cb6cc5f9d3db8c3c592d8167d16710e_2_500x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/8/f/8f1dda810cb6cc5f9d3db8c3c592d8167d16710e_2_750x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/f/8f1dda810cb6cc5f9d3db8c3c592d8167d16710e_2_1000x1000.jpeg 2x\" data-dominant-color=\"8C7D75\"></a></div><br>\n<small><em>Probably not.</em></small><p></p>\n<p>In this article, we present the methodology and results of an investigation aiming to address this question. We start with some context about the logical components making up a validator, then proceed with some potential methods of identifying validators on the beacon P2P network. We then expand on our chosen methodology and finally present the results.</p>\n<h2><a name=\"anatomy-of-a-validator-3\" class=\"anchor\" href=\"https://ethresear.ch#anatomy-of-a-validator-3\"></a>Anatomy of a validator</h2>\n<p>An Ethereum validator is a virtual entity that consists of a balance, public key and other properties on the beacon chain. They are roughly responsible for 4 things:</p>\n<ol>\n<li>Proposing new blocks</li>\n<li>Voting on other block proposals (attesting)</li>\n<li>Aggregating attestations</li>\n<li>Slashing other validators in case they commit faults</li>\n</ol>\n<p>A <em>validator client</em> is the piece of software that executes these responsibilities for each of its registered validator keys (which can be many). But a validator client on its own cannot connect to the P2P beacon network to talk directly to other validators. Instead, it connects to an entity known as a <em>beacon node</em>, which is a standalone client that maintains the beacon chain and communicates with other beacon nodes.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/8/68536fc182f09a1eb2c1e4b89f380dd4aca9c326.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/68536fc182f09a1eb2c1e4b89f380dd4aca9c326\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/8/68536fc182f09a1eb2c1e4b89f380dd4aca9c326_2_495x500.jpeg\" alt=\"image\" data-base62-sha1=\"eSUpYglwr9kKf0Zn4wTZyTzSai2\" width=\"495\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/8/68536fc182f09a1eb2c1e4b89f380dd4aca9c326_2_495x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/6/8/68536fc182f09a1eb2c1e4b89f380dd4aca9c326_2_742x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/6/8/68536fc182f09a1eb2c1e4b89f380dd4aca9c326_2_990x1000.jpeg 2x\" data-dominant-color=\"F6F1F1\"></a></div><br>\n<small><em>Schematic of validator clients and a beacon node</em></small><p></p>\n<p>Beacon nodes can have a number of validators attached to them that ranges from zero to thousands. In fact, <a href=\"https://medium.com/@grandine/grandine-0-4-1-released-fb98daef6d60\" rel=\"noopener nofollow ugc\">it’s been reported</a> that in some Ethereum testnets client developers have been running upwards of 50k validators on a single machine. This separation of concerns makes our investigation somewhat harder: a simple crawl of the P2P network might give us a good overview of the set of online beacon nodes in real time, but this is not representative of the overall validator client distribution at all. Before we address this problem, we’ll take a closer look at validator duties and their footprint on the network.</p>\n<h2><a name=\"attestation-duties-and-committees-4\" class=\"anchor\" href=\"https://ethresear.ch#attestation-duties-and-committees-4\"></a>Attestation duties and committees</h2>\n<p>As mentioned above, one of the main responsibilities of a validator is voting on blocks by broadcasting <em>attestations</em>. These attestations express the view of a validator about which chain they think is correct. In more detail, they actually cast 2 different votes: one to express their view of the current head block, and one to help finalize past blocks. This is because Ethereum’s  consensus is a combination of <a href=\"https://arxiv.org/pdf/2003.03052\" rel=\"noopener nofollow ugc\">2 subprotocols</a>: LMD GHOST, a fork-choice rule, and a finality gadget called Casper FFG.</p>\n<p>These duties are assigned randomly every epoch (with some <a href=\"https://github.com/ethereum/consensus-specs/blob/29f39487de964683bbe13d11c7c58b3fe13dca10/specs/phase0/validator.md#lookahead\" rel=\"noopener nofollow ugc\">lookahead</a>) with RANDAO as the source of randomness. Validators get assigned to one slot per epoch at which they have to cast their attestation, which is just a message with the votes that is signed over with the validator BLS private key. These votes are then to be packed and stored in the next beacon block. However, if <a href=\"https://beaconcha.in/charts/validators\" rel=\"noopener nofollow ugc\">all 1 million validators</a> were to attest for every block, the network would be flooded with messages, and the proposer that is supposed to pack these attestations into their block would have trouble verifying all of those signatures in time. This would make Ethereum’s design goal of low resource validation unfeasible.</p>\n<p>To address these issues, the beacon network is subdivided into <em>committees</em>, which are subsets of the active validator set that distribute the overall workload. Committees have a minimum size of <span class=\"math\">128</span> validators, and there are <span class=\"math\">64</span> committees that are assigned per slot. But how is this achieved in practice? What network primitives do we require to enable such a logical separation?</p>\n<h2><a name=\"attestation-subnets-5\" class=\"anchor\" href=\"https://ethresear.ch#attestation-subnets-5\"></a>Attestation subnets</h2>\n<p>The Ethereum consensus P2P network is built with <a href=\"https://github.com/libp2p/specs/tree/master/pubsub/gossipsub\" rel=\"noopener nofollow ugc\">GossipSub</a>, a scalable pubsub protocol running on libp2p. Being a pubsub protocol, GossipSub supports publish/subscribe patterns and the segmentation of networks into logical components called <em>topics</em> (aka P2P overlays)<em>.</em> These are the networking primitives that underpin beacon committees.</p>\n<p>One example of a topic is the <a href=\"https://github.com/ethereum/consensus-specs/blob/29f39487de964683bbe13d11c7c58b3fe13dca10/specs/phase0/p2p-interface.md#beacon_block\" rel=\"noopener nofollow ugc\"><code>beacon_block</code></a> topic, which is a <em>global topic</em> on which new beacon blocks are broadcast. Every validator must subscribe to this topic in order to update their local view of the chain and perform their duties.</p>\n<p>The attestation overlays look quite a bit different. For each committee, we derive a subnet ID based on the committee index (0-64). The topic for the respective subnets then becomes <a href=\"https://github.com/ethereum/consensus-specs/blob/29f39487de964683bbe13d11c7c58b3fe13dca10/specs/phase0/p2p-interface.md#beacon_attestation_subnet_id\" rel=\"noopener nofollow ugc\"><code>beacon_attestation_{subnet_id}</code></a>. Every validator knows their upcoming attestation duties at least 1 epoch ahead of time and can join the correct subnet in advance. When they have to make an attestation, they broadcast it on this subnet.</p>\n<p>As mentioned before, these attestations are eventually supposed to make it into a beacon block. But since upcoming proposers might not be subscribed to these subnets, how does that work? This is where <em>attestation aggregators</em> come in. These are a subset of the beacon committees that are responsible for <em>aggregating</em> all of the attestations they see and broadcasting the aggregate attestations on the global <a href=\"https://github.com/ethereum/consensus-specs/blob/29f39487de964683bbe13d11c7c58b3fe13dca10/specs/phase0/p2p-interface.md#beacon_attestation_subnet_id\" rel=\"noopener nofollow ugc\"><code>beacon_aggregate_and_proof</code></a> topic. This topic is again a mandatory global topic that all validators will be subscribed to, thus providing a way for local unaggregated attestations to make it into the global view of the network. Per committee, there’s a target number of aggregators of <span class=\"math\">16</span>.</p>\n<h3><a name=\"subnet-types-6\" class=\"anchor\" href=\"https://ethresear.ch#subnet-types-6\"></a>Subnet types</h3>\n<p>These attestation subnets described above are ephemeral and directly tied to the validator duties. We call these <strong>short-lived</strong> attestation subnets. The problem with these ephemeral subnets is that they are not very robust, and could result in lost messages. To deal with this issue, the notion of a “<a href=\"https://github.com/ethereum/consensus-specs/issues/2749\" rel=\"noopener nofollow ugc\">subnet backbone</a>” was introduced.</p>\n<p>This backbone consists of <strong>long-lived</strong>, persistent subnet subscriptions that are not tied to validator duties but rather a <a href=\"https://github.com/ethereum/consensus-specs/blob/29f39487de964683bbe13d11c7c58b3fe13dca10/specs/phase0/p2p-interface.md#attestation-subnet-subscription\" rel=\"noopener nofollow ugc\">deterministic function</a> of the beacon node’s unique ID and the current epoch. These long-lived subnets are maintained for <span class=\"math\">256</span> epochs, or around 27 hours, and each beacon node has to subscribe to 2 of them. They are also advertised on the discovery layer, making it easier for beacon nodes with certain duties to find peers on the relevant subnets.</p>\n<h2><a name=\"validator-footprints-7\" class=\"anchor\" href=\"https://ethresear.ch#validator-footprints-7\"></a>Validator footprints</h2>\n<p>Returning to the separation of the beacon node and validator clients, there’s now a clear footprint that validators leave on the beacon node’s network identity: their short-lived subnet subscriptions. This will be the core of our methodology.</p>\n<h2><a name=\"methodology-8\" class=\"anchor\" href=\"https://ethresear.ch#methodology-8\"></a>Methodology</h2>\n<p>Generally, the beacon network consists of 3 domains:</p>\n<ul>\n<li>The discovery domain</li>\n<li>The Req/Resp domain</li>\n<li>The gossip domain</li>\n</ul>\n<p>Each of these domains provides some information about a beacon node.</p>\n<h3><a name=\"long-lived-subnets-node-metadata-9\" class=\"anchor\" href=\"https://ethresear.ch#long-lived-subnets-node-metadata-9\"></a>Long-lived subnets &amp; node metadata</h3>\n<p>At the <strong>discovery layer</strong> (<a href=\"https://github.com/ethereum/devp2p/blob/5713591d0366da78a913a811c7502d9ca91d29a8/discv5/discv5.md\" rel=\"noopener nofollow ugc\">discv5</a>), a beacon node’s identity consists of an <a href=\"https://github.com/ethereum/consensus-specs/blob/29f39487de964683bbe13d11c7c58b3fe13dca10/specs/phase0/p2p-interface.md#enr-structure\" rel=\"noopener nofollow ugc\">ENR</a> with some additional metadata. This metadata can roughly be represented as the following object:</p>\n<pre data-code-wrap=\"js\"><code class=\"lang-js\">{ \n\tpeer_id, \n\tip, \n\ttcp_port, \n\tudp_port, \n\tattnets, // Important\n\tfork_digest, \n\tnext_fork_version, \n\tnext_fork_epoch \n}\n</code></pre>\n<p>This metadata helps other peers connect to peers that are relevant to them, indeed, one of the extra metadata fields are the (long-lived) attestation subnets that this node is subscribed to!</p>\n<p>The <strong>Req/Resp domain</strong> is where the actual handshake happens. This is where nodes exchange <code>Status</code> messages that look like the following in order to establish a connection:</p>\n<pre data-code-wrap=\"js\"><code class=\"lang-js\">(\n  fork_digest: ForkDigest\n  finalized_root: Root\n  finalized_epoch: Epoch\n  head_root: Root\n  head_slot: Slot\n)\n</code></pre>\n<p>The underlying protocol used for the Req/Resp domain is (again) libp2p. On the lower levels, additional information like <code>client_version</code> is also exchanged when connections are set up.</p>\n<p>It is at this level that peers can also exchange <code>MetaData</code> objects to identify each other’s most up to date long-lived subnet subscriptions. The <a href=\"https://github.com/ethereum/consensus-specs/blob/29f39487de964683bbe13d11c7c58b3fe13dca10/specs/phase0/p2p-interface.md#metadata\" rel=\"noopener nofollow ugc\"><code>MetaData</code></a> object looks like this:</p>\n<pre data-code-wrap=\"js\"><code class=\"lang-js\">(\n  seq_number: uint64\n  attnets: Bitvector[ATTESTATION_SUBNET_COUNT]\n  ...\n)\n</code></pre>\n<h3><a name=\"short-lived-subnets-10\" class=\"anchor\" href=\"https://ethresear.ch#short-lived-subnets-10\"></a>Short-lived subnets</h3>\n<p>So far, we’ve only seen how nodes exchange metadata and their long-lived subnet subscriptions, which tell us nothing about potential validators. For that, we need the short-lived subnets, which we can only collect on the gossip domain. Our initial strategy was doing just that:</p>\n<ol>\n<li>Listen to incoming topic subscription requests</li>\n<li>Save and index them</li>\n</ol>\n<p>However, on an initial review of the data, we saw way too many beacon nodes that didn’t subscribe to any additional subnets besides their long-lived, mandatory subscriptions.</p>\n<p>Our assumption was that in order to publish data on a gossipsub topic, one needed to be subscribed to it. It turns out that this is not the case, and many clients have different behaviour to minimize bandwidth and CPU usage. Rather than subscribing to the subnet directly, the peer finds other peers that are subscribed to the required subnet beforehand and shares the attestation with them. The subscribed peers make sure to verify and forward these attestations. Remember that in theory, only attestation aggregators need to be listening to all incoming attestations in order to do their jobs. This is exactly what was happening, and explains why we had so little short-lived subnet observations.</p>\n<p>With this understanding, we could now tune our assumptions:</p>\n<ul>\n<li>For each subnet, there’s a target of <code>TARGET_AGGREGATORS_PER_COMMITTEE=16</code> aggregators per committee</li>\n<li>This means that on average, there will only be <span class=\"math\">16</span> validators per committee that will be subscribed to an additional short-lived subnet for the duration of an epoch</li>\n<li>This results in a maximum of <span class=\"math\">16 * 32 * 64 = 32768</span> useful observations per epoch</li>\n</ul>\n<p>With these assumptions in mind, we can start estimating validator counts.</p>\n<h3><a name=\"estimating-validator-counts-11\" class=\"anchor\" href=\"https://ethresear.ch#estimating-validator-counts-11\"></a>Estimating validator counts</h3>\n<p>For each observation, we subtract the number of long-lived subnets <span class=\"math\">S_l</span> from all subscribed subnets <span class=\"math\">S_{all}</span> to arrive at the number of short-lived subnets <span class=\"math\">S_s</span>:</p>\n<div class=\"math\">\nS_s = S_{all} - S_l\n</div>\n<p>Since we know aggregators are subscribed to one additional subnet per epoch, <span class=\"math\">S_s</span> will result in an estimated validator count for a certain beacon node in this epoch. Note that just one observation will not be enough to get an accurate estimate, because of the following reasons:</p>\n<ul>\n<li>It could be that a validator is not an aggregator for this epoch, and thus won’t subscribe to any subnets</li>\n<li>There could be overlap between the long-lived and short-lived subnets</li>\n</ul>\n<p>Due to this reason, we continuously try to collect observations for each known beacon node per epoch, and save the maximum estimated validator counts. Note also that the ceiling for validator estimations is at <span class=\"math\">64 - 2</span>, because that’s the maximum amount of short-lived subnets we can record. This is important! It means that for beacon nodes with more than <span class=\"math\">62</span> validators, we can not estimate how many there are, and just record the ceiling. We want to highlight again that this is just an estimation and won’t be a very accurate representation of the total number of validators.</p>\n<h2><a name=\"architecture-12\" class=\"anchor\" href=\"https://ethresear.ch#architecture-12\"></a>Architecture</h2>\n<p>In this section we’ll dive a bit deeper into the architecture. All the code for this is open source and can be found in this repository: <a href=\"https://github.com/chainbound/valtrack\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - chainbound/valtrack: An Ethereum validator crawler</a>. A lot of the crawler code is based on projects like <a href=\"https://github.com/probe-lab/hermes\" rel=\"noopener nofollow ugc\">Hermes</a> and <a href=\"https://github.com/migalabs/armiarma/\" rel=\"noopener nofollow ugc\">Armiarma</a>. An overview can be seen here:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/8/e856490bf2dd28b100abeb8c0f37e50f389e882b.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/e856490bf2dd28b100abeb8c0f37e50f389e882b\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/8/e856490bf2dd28b100abeb8c0f37e50f389e882b_2_690x305.jpeg\" alt=\"image\" data-base62-sha1=\"x9lDAThNmCeGPC4C8xt1R0touRd\" width=\"690\" height=\"305\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/8/e856490bf2dd28b100abeb8c0f37e50f389e882b_2_690x305.jpeg, https://ethresear.ch/uploads/default/optimized/3X/e/8/e856490bf2dd28b100abeb8c0f37e50f389e882b_2_1035x457.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/e/8/e856490bf2dd28b100abeb8c0f37e50f389e882b_2_1380x610.jpeg 2x\" data-dominant-color=\"F5F9F2\"></a></div><p></p>\n<h3><a name=\"crawler-13\" class=\"anchor\" href=\"https://ethresear.ch#crawler-13\"></a>Crawler</h3>\n<p>The crawler is the core component of the system. It will crawl the discv5 discovery DHT, find nodes that are on the correct network by looking at the metadata in their ENRs, and then try to connect with them. It will keep a local cache of known peers and try to reconnect every epoch to get updated observations.</p>\n<p>We outline 2 types of events (observations): <code>PeerDiscoveryEvent</code> and <code>MetadataReceivedEvent</code>. The second one is most relevant and contains the following fields:</p>\n<pre data-code-wrap=\"go\"><code class=\"lang-go\">type MetadataReceivedEvent struct {\n\tENR               string          `json:\"enr\"`\n\tID                string          `json:\"id\"`\n\tMultiaddr         string          `json:\"multiaddr\"`\n\tEpoch             int             `json:\"epoch\"`\n\tMetaData          *eth.MetaDataV1 `json:\"metadata\"`\n\tSubscribedSubnets []int64         `json:\"subscribed_subnets\"`\n\tClientVersion     string          `json:\"client_version\"`\n\tCrawlerID         string          `json:\"crawler_id\"`\n\tCrawlerLoc        string          `json:\"crawler_location\"`\n\tTimestamp         int64           `json:\"timestamp\"` // Timestamp in UNIX milliseconds\n}\n</code></pre>\n<p>Along with some metadata, this contains all of the fields required to apply the previously described methodology: <code>SubscribedSubnets</code> contains the actually subscribed subnets, obtained by listening on the GossipSub domain, and <code>MetaData</code> contains the peer’s long-lived subnets.</p>\n<p>All of these events are then sent to a persistent message queue, where they are stored until they’re read by the consumer.</p>\n<h3><a name=\"consumer-14\" class=\"anchor\" href=\"https://ethresear.ch#consumer-14\"></a>Consumer</h3>\n<p>The consumer turns the event logs into a stateful view of the network by implementing the methodology described above. It parses the short-lived subnets from the metadata events to get the estimated validator counts, and updates any existing entries in its stateful view. This stateful view is saved in a local sqlite database, which we expose over an API. The table schema roughly looks like this:</p>\n<pre data-code-wrap=\"sql\"><code class=\"lang-sql\">validator_tracker (\n\tpeer_id TEXT PRIMARY KEY,\n\tenr TEXT,\n\tmultiaddr TEXT,\n\tip TEXT,\n\tport INTEGER,\n\tlast_seen INTEGER,\n\tlast_epoch INTEGER,\n\tclient_version TEXT,\n\tpossible_validator BOOLEAN,\n\tmax_validator_count INTEGER,\n\tnum_observations INTEGER,\n\thostname TEXT,\n\tcity TEXT,\n\tregion TEXT,\n\tcountry TEXT,\n\tlatitude REAL,\n\tlongitude REAL,\n\tpostal_code TEXT,\n\tasn TEXT,\t\n\tasn_organization TEXT,\n\tasn_type TEXT\n)\n</code></pre>\n<p>We then join this data together with an IP location dataset to provide more information about geographical distribution.</p>\n<h2><a name=\"results-15\" class=\"anchor\" href=\"https://ethresear.ch#results-15\"></a>Results</h2>\n<p><a href=\"https://www.chainbound.io/\" rel=\"noopener nofollow ugc\">Chainbound</a> runs a <a href=\"https://github.com/chainbound/valtrack\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - chainbound/valtrack: An Ethereum validator crawler</a> deployment that pushes all data to Dune every 24 hours.</p>\n<blockquote>\n<p><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/bulb.png?v=12\" title=\":bulb:\" class=\"emoji\" alt=\":bulb:\" loading=\"lazy\" width=\"20\" height=\"20\"> Dune table link: <a href=\"https://dune.com/data/dune.rig_ef.validator_metadata\" rel=\"noopener nofollow ugc\">https://dune.com/data/dune.rig_ef.validator_metadata</a>.</p>\n</blockquote>\n<p><em>This data has been stripped of sensitive information such as IP addresses and exact coordinates. However, it retains information like city, coordinates with a precision of a 10km radius, and ASN information.</em></p>\n<p>An example dashboard leveraging this information can be seen <a href=\"https://chainbound.grafana.net/dashboard/snapshot/AmuaGRjfOrARoc7BWY9L43dD5jIgsgnf?orgId=1\" rel=\"noopener nofollow ugc\">here</a>.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/5/e5a141037b8bcb98e8247ccb94f3daeeb2d143ce.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/e5a141037b8bcb98e8247ccb94f3daeeb2d143ce\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e5a141037b8bcb98e8247ccb94f3daeeb2d143ce_2_690x360.jpeg\" alt=\"image\" data-base62-sha1=\"wLoPcaK1sTQjSqB8eaUjEMdLPK6\" width=\"690\" height=\"360\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e5a141037b8bcb98e8247ccb94f3daeeb2d143ce_2_690x360.jpeg, https://ethresear.ch/uploads/default/optimized/3X/e/5/e5a141037b8bcb98e8247ccb94f3daeeb2d143ce_2_1035x540.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/e/5/e5a141037b8bcb98e8247ccb94f3daeeb2d143ce_2_1380x720.jpeg 2x\" data-dominant-color=\"212220\"></a></div><p></p>\n<p>We also store the individual event logs, like PeerDiscoveryEvent and MetadataReceivedEvent. These are available on demand by sending an email to <a href=\"mailto:admin@chainbound.io\">admin@chainbound.io</a>.</p>\n<h2><a name=\"limitations-16\" class=\"anchor\" href=\"https://ethresear.ch#limitations-16\"></a>Limitations</h2>\n<ul>\n<li>The maximum number of validators we can estimate with this methodology per beacon node is 62, due to that being the maximum amount of short-lived subnet subscriptions. This will result in a significantly underreported total number of validators, but should still be able to provide a reasonable estimation of the geographical distribution.</li>\n<li>We failed to gather any meaningful data on Teku nodes over the 30-day period, which could signify an error in our P2P implementation and impact the results.</li>\n<li>These results will be skewed towards validators attached to beacon nodes that have opened P2P networking ports in their firewall, which will mostly be beacon nodes running on cloud providers. The reason for this is that our crawler can more easily connect to nodes that have exposed ports.</li>\n</ul>\n<h2><a name=\"references-17\" class=\"anchor\" href=\"https://ethresear.ch#references-17\"></a>References</h2>\n<ul>\n<li><a href=\"https://eth2book.info/capella/\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Upgrading Ethereum</a></li>\n<li><a href=\"https://hackmd.io/@dmarz/ethereum_overlays\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">The Hitchhiker's Guide to P2P Overlays in Ethereum Consensus - HackMD</a></li>\n<li><a href=\"https://github.com/ethereum/consensus-specs/tree/dev\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - ethereum/consensus-specs: Ethereum Proof-of-Stake Consensus Specifications</a></li>\n</ul>\n            <p><small>4 posts - 4 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/estimating-validator-decentralization-using-p2p-data/19920\">Read full topic</a></p>","link":"https://ethresear.ch/t/estimating-validator-decentralization-using-p2p-data/19920","pubDate":"Thu, 27 Jun 2024 08:33:30 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19920"},"source":{"@url":"https://ethresear.ch/t/estimating-validator-decentralization-using-p2p-data/19920.rss","#text":"Estimating Validator Decentralization Using p2p Data"},"filter":false},{"title":"Presenting Klaster - rethinking chain abstraction","dc:creator":"fichiokaku","category":"Applications","description":"<h1><a name=\"introduction-1\" class=\"anchor\" href=\"https://ethresear.ch#introduction-1\"></a>Introduction</h1>\n<p>We are witnessing an ever-growing list of new chains popping out, and attracting a high level of activity and transactions. Ethereum is also scaling nicely, and with the EIP-4844 it’s becoming increasingly cheaper to onboard as a user and start interacting with chains.</p>\n<p>This introduces fragmentation, which in our opinion is here to stay especially in a world where there will be hundreds of chains, users will demand fragmentation to be solved for. If we build solutions that kind of aggregate different assets in some sort of “centralized” service only to make all chains look like one and make it easy to move across chains, then we haven’t accomplished much.</p>\n<p>We propose a solution which abstracts away chains and solves for fragmentation by introducing <strong>Klaster</strong> - a network of nodes placed between the users and chains. This layer wraps multiple blockchain networks and makes it easy for users to execute complex transaction flows spanning across one or more chains - all of that approved by the single off-chain signature.</p>\n<p>By introducing the Klaster Nodes as a generic execution network, and defining how cross-chain transactions are being bundled and approved, we hope to set the standard for building chain abstracted applications. This goes beyond just a simple balance abstraction - spend your funds from one chain by interacting on another chain. It provides a “full” chain abstraction by allowing any arbitrary flow to be defined and executed.</p>\n<h1><a name=\"tldr-2\" class=\"anchor\" href=\"https://ethresear.ch#tldr-2\"></a>TL;DR</h1>\n<p>Klaster Protocol aims to position itself as a chain abstraction framework which allows dApps or Wallets to build complex cross-chain transaction bundles and let the users sign only once to execute these bundles across one or more blockchain networks.</p>\n<p>We introduce two key concepts:</p>\n<ul>\n<li><strong>iTx bundles</strong>: series of (possibly dependent) transactions spanning across many chains</li>\n<li><strong>Transaction Commitment Layer</strong>: network of nodes providing execution guarantees and offering orchestrated iTx execution across many blockchain networks</li>\n</ul>\n<p>Klaster Protocol leans on Smart Accounts and ERC-4337 EntryPoint and by introducing the economic incentives provides a reliable network of Klaster Nodes which anyone can use to build truly chain abstracted dApps while not sacrificing on the security, or taking the control from the user.</p>\n<h1><a name=\"klaster-3\" class=\"anchor\" href=\"https://ethresear.ch#klaster-3\"></a>Klaster</h1>\n<p>Klaster provides an infrastructure for building chain abstracted apps. Klaster does this by introducing a network of Nodes, which act as a <strong>Transaction Commitment Layer</strong>. This layer is placed between the dApp and multiple blockchain networks, It talks to the outside world (users, dApps) via <strong>interchain transactions (iTx)</strong>.</p>\n<p>Developers can use these primitives to:</p>\n<ul>\n<li>Build chain abstracted dApps (no switch network button)</li>\n<li>Define complex flows involving multiple chains without having to think of the specifics of how the flow will get executed</li>\n<li>Automate the execution of the dependent actions spanning across many chains</li>\n<li>Onboard the users from different chains and ecosystems into their dApp with a single user signature</li>\n</ul>\n<p>Users on the other hand:</p>\n<ul>\n<li>Can interact with chain abstracted dApps using any wallet they prefer</li>\n<li>Don’t have to care of where their funds are, the dApp will be able to spend their funds from other chains with a single user signature</li>\n<li>Don’t have to “lock” their funds in order for the dApp to consume their funds</li>\n<li>Can use any asset on any chain to pay for gas cost of the full iTx execution involving many transactions on different chains</li>\n</ul>\n<h2><a name=\"core-concepts-4\" class=\"anchor\" href=\"https://ethresear.ch#core-concepts-4\"></a>Core concepts</h2>\n<p>At its core, Klaster leans on its unique approach of <strong>separating transaction signing from<br>\nthe transaction execution</strong>.</p>\n<p>If we think about how the EOA is executing a transaction on an EVM - it’s all bundled in the same operation - sign &amp; execute happening simultaneously with the user having one EOA wallet popup and interacting with the chain/RPC.</p>\n<p>A more advanced approach can be seen with the Account Abstraction (ERC-4337), where users can approve their UserOp and then hand it over to the Bundler for execution. This approach is still bounded to one single chain - the one where the user’s smart account is deployed.</p>\n<p>Klaster Model breaks the boundaries of a single chain, and allows an account owner to approve a complex series of (possibly dependent) UserOps targeting different blockchain networks - with a single off-chain signature! This signature is then provided to the Klaster Node (what would be a bundler in AA), for orchestrating an execution across all the different chains.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/5/755b51c20b470de874fc70cf3589d99577681458.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/755b51c20b470de874fc70cf3589d99577681458\" title=\"photo_2024-06-26_14-25-17\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/5/755b51c20b470de874fc70cf3589d99577681458_2_690x388.jpeg\" alt=\"photo_2024-06-26_14-25-17\" data-base62-sha1=\"gKbvVdl5b0MbxGkSTU7mNJbVSkw\" width=\"690\" height=\"388\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/5/755b51c20b470de874fc70cf3589d99577681458_2_690x388.jpeg, https://ethresear.ch/uploads/default/optimized/3X/7/5/755b51c20b470de874fc70cf3589d99577681458_2_1035x582.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/7/5/755b51c20b470de874fc70cf3589d99577681458.jpeg 2x\" data-dominant-color=\"111126\"></a></div><p></p>\n<p>As seen from the illustration above, if the user wanted to bridge funds and then swap on the destination chain, they would usually execute two transactions, on two different applications (Bridge app &amp; then DEX app), while also having to pay for gas fees on two different chains.</p>\n<p>By splitting the signature from the execution, Klaster is able to convert two actions into one <strong>iTx bundle</strong> and then execute them through the Klaster Node. Klaster node will figure out the ordering of transactions, and execute them as user intended, while also covering for execution fees.</p>\n<h2><a name=\"interchain-transaction-itx-bundle-5\" class=\"anchor\" href=\"https://ethresear.ch#interchain-transaction-itx-bundle-5\"></a>Interchain Transaction (iTx bundle)</h2>\n<p><strong>Interchain Transaction (iTx)</strong> is the fundamental working unit used within the Klaster protocol. It’s a bundle of one or more blockchain transactions spanning across one or more blockchain networks. It fully describes what the user or the dApp is trying to achieve. One iTx, consisting of two transactions, might be: “bridge assets from chain A using some 3rd party bridge to chain B, and then swap bridged assets for something else on chain B”.</p>\n<p>From the Klaster Protocol perspective, one iTx bundle is actually a Merkle Tree of all the UserOps as leaves, and is defined by its Merkle Root hash (iTx hash): <strong>one iTx bundle = one unique iTx hash</strong>.</p>\n<p>Any on-chain interaction on any blockchain network can be converted to the UserOp and placed as a part of a bigger iTx Merkle Tree - meaning the iTx tree approach can be used to basically define any complex operation spanning across multiple blockchain networks provided that there’s at least some liquidity services connecting the chains.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/a/2a26e4bc6a55b451b319a567816c3f9fd11c8b5a.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/2a26e4bc6a55b451b319a567816c3f9fd11c8b5a\" title=\"photo_2024-06-26_14-27-23\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/a/2a26e4bc6a55b451b319a567816c3f9fd11c8b5a_2_690x388.jpeg\" alt=\"photo_2024-06-26_14-27-23\" data-base62-sha1=\"60TnJ5InGFe0a5l7hGbxUDxiBzI\" width=\"690\" height=\"388\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/a/2a26e4bc6a55b451b319a567816c3f9fd11c8b5a_2_690x388.jpeg, https://ethresear.ch/uploads/default/optimized/3X/2/a/2a26e4bc6a55b451b319a567816c3f9fd11c8b5a_2_1035x582.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/2/a/2a26e4bc6a55b451b319a567816c3f9fd11c8b5a.jpeg 2x\" data-dominant-color=\"090C1E\"></a></div><p></p>\n<p>Transaction Commitment Layer takes unsigned iTx requests, and <strong>commits</strong> to execute them in the specific time frame - and therefore provides a reliable execution layer capable of executing the parts of the iTx on different blockchain networks. This involves strategically determining the optimal order for executing the individual transactions within the bundle. For instance, if a transaction on Polygon relies on assets being transferred from Ethereum first, the node will ensure that the Ethereum transfer is finalized before proceeding with the Polygon transaction.</p>\n<h2><a name=\"high-level-protocol-overview-6\" class=\"anchor\" href=\"https://ethresear.ch#high-level-protocol-overview-6\"></a>High Level Protocol Overview</h2>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/4/44e74558671473aa21b67bb54151e8dea1ce9070.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/44e74558671473aa21b67bb54151e8dea1ce9070\" title=\"photo_2024-06-26_14-28-18\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/4/44e74558671473aa21b67bb54151e8dea1ce9070_2_690x388.jpeg\" alt=\"photo_2024-06-26_14-28-18\" data-base62-sha1=\"9PxXJWMlULz3fk0Ml7o63hEfXVe\" width=\"690\" height=\"388\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/4/44e74558671473aa21b67bb54151e8dea1ce9070_2_690x388.jpeg, https://ethresear.ch/uploads/default/optimized/3X/4/4/44e74558671473aa21b67bb54151e8dea1ce9070_2_1035x582.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/4/4/44e74558671473aa21b67bb54151e8dea1ce9070.jpeg 2x\" data-dominant-color=\"121229\"></a></div><p></p>\n<p>The following steps are involved for the user/dApp to interact with the Klaster Protocol:</p>\n<ol>\n<li>dApp defines a list of operations to be executed across one or many chains and bundle them together into the iTx</li>\n<li>dApp asks the Klaster Network for a quote (fee) for executing an iTx</li>\n<li>dApp receives back the iTx with included fee amount and cryptographic execution guarantees given by the Klaster Network</li>\n<li>User signs the iTx by signing its root iTx hash and then broadcasts the signed iTx back to the Klaster Network</li>\n</ol>\n<p>Once the Klaster Network receives the signed iTx, it will charge the user upfront by pulling the fee amount as defined in the quote, and it will start processing the transactions from the iTx bundle, executing them on the different blockchain networks in the correct order. The specifics of how the fee is being calculated and charged upfront is outlined in the technical breakdown section.</p>\n<h2><a name=\"chain-abstraction-vs-balance-abstraction-aave-example-7\" class=\"anchor\" href=\"https://ethresear.ch#chain-abstraction-vs-balance-abstraction-aave-example-7\"></a>Chain Abstraction vs Balance Abstraction (AAVE example)</h2>\n<p>While balance abstraction is a great step forward in solving for liquidity fragmentation, it’s not covering all bases. Let’s say we want to build a chain abstracted version of AAVE, where users can interact with the dApp not only by having the “balance” abstracted away (supply assets from one chain to AAVE deployed on another chain), but also having an <strong>AAVE “position” abstracted</strong> away which is a more dApp specific use-case.</p>\n<p>For example, a user might have 100 USDC supplied on AAVE on Optimism, but they want to switch the position to Base, and supply USDC there, because of better rates. Or there’s a bot that wants to do this periodically, in the user’s name and with the user’s approval.</p>\n<p>Right now, the user would have to unwind their position, find a bridge to use, move liquidity to Base and then resupply the USDC. This involves signing multiple transactions and switching between multiple frontends and blockchain networks / RPCs, not to mention also having some gas dust on these chains to be able to execute transactions in the first place. We believe this is unsustainable and there has to be a way of “standardizing” these interactions &amp; making life easier on the user facing side.</p>\n<p>By using Klaster protocol, this complicated “position” rebalancing operation can be converted to one simple iTx bundle containing three UserOps:</p>\n<ul>\n<li>[<em>Optimism</em>] UserOp1: unwinds AAVE USDC position on Optimism</li>\n<li>[<em>Optimism</em>] UserOp2: bridges 100 USDC to Base using some third party bridge (across bridge, for example)</li>\n<li>[<em>Base</em>] UserOp3: supplies 100 USDC on AAVE</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/a/aaccd85ed18ac9bacdc8cfe3806eb872019b0363.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/aaccd85ed18ac9bacdc8cfe3806eb872019b0363\" title=\"photo_2024-06-26_14-35-03\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/a/aaccd85ed18ac9bacdc8cfe3806eb872019b0363_2_690x390.jpeg\" alt=\"photo_2024-06-26_14-35-03\" data-base62-sha1=\"omY31xaFV6pEcJlwMaJ8dhocK5R\" width=\"690\" height=\"390\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/a/aaccd85ed18ac9bacdc8cfe3806eb872019b0363_2_690x390.jpeg, https://ethresear.ch/uploads/default/optimized/3X/a/a/aaccd85ed18ac9bacdc8cfe3806eb872019b0363_2_1035x585.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/a/a/aaccd85ed18ac9bacdc8cfe3806eb872019b0363.jpeg 2x\" data-dominant-color=\"121327\"></a></div><p></p>\n<p>The only thing the user would have to do from their side is provide one signature for the iTx and the balance reposition would be handled by the Klaster Protocol automatically. No gas required on the destination chain. No different apps involved. One simple signature. And we bet that if the developers are provided with tools like Klaster, many more other interesting use-cases might emerge other than the one we’re describing here.</p>\n<h1><a name=\"technical-breakdown-i-want-to-know-more-8\" class=\"anchor\" href=\"https://ethresear.ch#technical-breakdown-i-want-to-know-more-8\"></a>Technical Breakdown (I want to know more)</h1>\n<h2><a name=\"smart-accounts-itx-module-9\" class=\"anchor\" href=\"https://ethresear.ch#smart-accounts-itx-module-9\"></a>Smart Accounts - iTx Module</h2>\n<p>Using an iTx bundle in combination with Smart Contract Accounts allows for one very powerful feature to be implemented - and is there to help on the UX side: <strong>single signature iTx approvals</strong>.</p>\n<p>Smart Account modular architecture allows for building a standardized ERC-7579 module which “understands” iTx bundles and can be installed on top of existing smart account wallets or used to initialize new wallets as the UserOp model allows for providing the wallet initialization data as a UserOp parameter.</p>\n<p>A smart account owner can approve the whole iTx bundle of many chain transactions by only <strong>signing once</strong> - one off-chain signature of the iTx Merkle Root hash can be used to approve for executing all the transactions across many chains.</p>\n<p>As mentioned earlier, the tree is defined by its Merkle root hash - iTx hash. The smart contract owner signs the iTx hash with a signer. This typically is an EOA which is a common owner of all the smart accounts across different chains where the assets are being bridged and consumed, and by providing one signature, all of these operations are immediately executable.</p>\n<p>If the user doesn’t have a smart contract account on one or more blockchain networks - the accounts can be “lazy deployed” for the user - meaning, the iTx bundle can contain an operation which bridges some amount of funds to the “not yet created” account as the address of the smart account can be precomputed.</p>\n<p>By having the iTx validation module as a standardized module - Klaster protocol remains neutral &amp; unopiniated - it can work with different smart account providers.</p>\n<h2><a name=\"klaster-fees-node-selection-10\" class=\"anchor\" href=\"https://ethresear.ch#klaster-fees-node-selection-10\"></a>Klaster Fees &amp; Node Selection</h2>\n<p>The Klaster Transaction Commitment Layer consists of many Klaster Nodes - all of them being equal. Every Node is defined by its wallet address, and in order for nodes to join the network, they have to stake capital - this is how the nodes provide uptime &amp; execution guarantees.</p>\n<p>Klaster Nodes are taking care of the following:</p>\n<ol>\n<li>Estimating iTx fees &amp; responding to quote requests</li>\n<li>Committing to iTx execution (or rejecting the request)</li>\n<li>Executing fully signed iTx (if previously committed to execution)</li>\n</ol>\n<h3><a name=\"estimating-itx-fees-responding-to-quote-requests-11\" class=\"anchor\" href=\"https://ethresear.ch#estimating-itx-fees-responding-to-quote-requests-11\"></a>Estimating iTx fees &amp; responding to quote requests</h3>\n<p>When the user or the dApp asks the protocol for quotes, every node will estimate the total cost of executing the iTx on different chains. The node adds its own fee on top of the total cost, including the <strong>success execution tip</strong> (more on this in the “optimistic execution” chapter) and responds back with the full cost the user will have to pay in order for the node to do the job.</p>\n<h3><a name=\"committing-to-itx-execution-or-rejecting-the-request-12\" class=\"anchor\" href=\"https://ethresear.ch#committing-to-itx-execution-or-rejecting-the-request-12\"></a>Committing to iTx execution (or rejecting the request)</h3>\n<p>The user or the dApp chooses the best received quote by taking into account the total execution cost offered by each of the nodes, and their reputation. The dApp then connects directly with the selected node, and asks for a commitment - a guarantee from the node that they are going to execute the iTx in full, provided that the user pays for what the node asks for.</p>\n<p>The node commits to the iTx execution by</p>\n<ol>\n<li>Prepending the payment tx* in the list of the transactions in the iTx bundle</li>\n<li>Signing the root iTx hash with its own private key - essentially binding itself to the execution of the iTx</li>\n</ol>\n<p>*<em>A payment transaction generated and prepended by the node transfers some liquid asset from the user’s account to the node wallet address. The asset is selected by the user and the amount is calculated by the node to cover for all the execution costs + the node fee. This means that the user can pay for the execution on any chain and in any asset supported by the node.</em></p>\n<h3><a name=\"executing-fully-signed-itx-if-previously-committed-to-execution-13\" class=\"anchor\" href=\"https://ethresear.ch#executing-fully-signed-itx-if-previously-committed-to-execution-13\"></a>Executing fully signed iTx (if previously committed to execution)</h3>\n<p>Once the dApp receives the iTx which includes the payment transaction and the node commitment, the user is finally prompted to approve the full iTx bundle by signing the root iTx hash - essentially approving the execution of all the transactions contained in the bundle. The iTx bundle, whose root iTx hash has been signed by both the node (commitment) &amp; user (execution approval) is sent to back the selected node which:</p>\n<ol>\n<li>Verifies the iTx bundle integrity (calculates &amp; verifies merkle root)</li>\n<li>Verifies the commitment signature (make sure the node really did commit to this iTx)</li>\n<li>Verifies the user signature</li>\n<li>Collects the payment from the user (the first transaction in the iTx bundle)</li>\n<li>Once the payment is complete, proceeds to execute the rest of the operations by performing the optimistic execution algorithm</li>\n</ol>\n<p>If the node fails to execute the iTx bundle, the user can use the node commitment (node iTx signature) to initiate a slashing request and prove on-chain that the node actually promised to execute the iTx but failed to do so in a given timeframe.</p>\n<h2><a name=\"meta-paymaster-and-multichain-gas-refunds-14\" class=\"anchor\" href=\"https://ethresear.ch#meta-paymaster-and-multichain-gas-refunds-14\"></a>Meta Paymaster and Multichain Gas Refunds</h2>\n<p>For the node to be fully operational, they have to own the native coin balance on their wallet address for every chain they support - in order to be able to pay for gas and execute UserOps as a part of iTx bundle. By accepting the upfront payment from the user in one token and one chain, and then executing the transactions and subsidizing gas on one or more chains, Klaster Node acts in a way as a Meta Paymaster.</p>\n<p>The node executes UserOps contained in the iTx by routing them through the official ERC-4337 EntryPoint on different chains, and after receiving post-operation execution callbacks with the actual gas consumption data, the node will execute refunds for every processed UserOp, that is if actual UserOp cost (including the Klaster Node fee) was less than the maximum UserOp that was prepaid by the user. The process is illustrated below:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/c/9ca11c122eee71670ddf3e95a2ecee88cf427bcb.png\" data-download-href=\"https://ethresear.ch/uploads/default/9ca11c122eee71670ddf3e95a2ecee88cf427bcb\" title=\"klaster-meta-paymaster-latest\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/c/9ca11c122eee71670ddf3e95a2ecee88cf427bcb_2_569x500.png\" alt=\"klaster-meta-paymaster-latest\" data-base62-sha1=\"mlBEZLgyhBSYSQ9N480C2fNG6GD\" width=\"569\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/c/9ca11c122eee71670ddf3e95a2ecee88cf427bcb_2_569x500.png, https://ethresear.ch/uploads/default/optimized/3X/9/c/9ca11c122eee71670ddf3e95a2ecee88cf427bcb_2_853x750.png 1.5x, https://ethresear.ch/uploads/default/original/3X/9/c/9ca11c122eee71670ddf3e95a2ecee88cf427bcb.png 2x\" data-dominant-color=\"F7F5F5\"></a></div><p></p>\n<p>By relying on the official ERC-4337 EntryPoint for UserOp routing, the Klaster Protocol is staying compliant with the AA space, since most of the AA wallets today choose to trust and give control to one EntryPoint contract. Any existing AA wallet could technically activate the Klaster iTx module and gain cross-chain capabilities.</p>\n<h2><a name=\"optimistic-itx-execution-15\" class=\"anchor\" href=\"https://ethresear.ch#optimistic-itx-execution-15\"></a>Optimistic iTx Execution</h2>\n<p>Klaster Node is incentivized to execute UserOps from a given iTx bundle in the right order of events, without the user having to explicitly provide the order of events.</p>\n<p>The right order of events is implicitly deduced by the Klaster Node, by repeatedly simulating every UserOp, between the timestamp deadlines set by the user when defining UserOp, and waiting for the simulation to yield 0 <em>REVERT</em> opcodes in the simulated execution breakdown. Once this happens, Klaster Node “knows” all the preconditions have been met (whatever they may be) and will proceed to execute the UserOp as this maxmizes the profits for the Klaster Node.</p>\n<p>In our AAVE example from above, Klaster Node will wait for the bridge action to complete without having to be aware of which bridge is being used and what the estimated bridge time to destination might be. It’s not even aware of the context of any UserOp or the potential dependencies between those. The execution flow would look like this:</p>\n<ol start=\"0\">\n<li>\n<p>The Node executes the Payment UserOp (at index 0 in the list of UserOps). That way the Node charges for the full execution of all the other UserOps upfront and can proceed with the next steps</p>\n</li>\n<li>\n<p>The Node “sees” that out of three UserOps (<strong>unwind, bridge, supply</strong>), the only one with 0 REVERTs is the <strong>unwind</strong> operation, and it proceeds to execute the UserOp successfully (on Optimism)</p>\n</li>\n<li>\n<p>Afterward, another operation that yields 0 REVERTs is the bridge operation as the funds are now there to be bridged (unwinded position), so it proceeds to execute <strong>bridge</strong> action (on Optimism)</p>\n</li>\n<li>\n<p>Finally, once the funds arrive at the user’s dest chain smart account (whenever that may be, depending on the 3rd party bridge being used), the <strong>supply</strong> operation is executed which marks the full iTx execution as complete.</p>\n</li>\n</ol>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/b/bb781b0246065508b7a832ee5060408e61d20a87.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/bb781b0246065508b7a832ee5060408e61d20a87\" title=\"photo_2024-06-26_14-45-59\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/b/bb781b0246065508b7a832ee5060408e61d20a87_2_690x388.jpeg\" alt=\"photo_2024-06-26_14-45-59\" data-base62-sha1=\"qKqBVROVuFJal5ahEzMAhfZQb3h\" width=\"690\" height=\"388\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/b/bb781b0246065508b7a832ee5060408e61d20a87_2_690x388.jpeg, https://ethresear.ch/uploads/default/optimized/3X/b/b/bb781b0246065508b7a832ee5060408e61d20a87_2_1035x582.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/b/b/bb781b0246065508b7a832ee5060408e61d20a87.jpeg 2x\" data-dominant-color=\"101224\"></a></div><p></p>\n<p>By having this generic approach of not being aware of the context, iTx bundles can express pretty much any complex cross-chain flow. To incentivize the node to wait for the simulation success (0 REVERTs), but then also to execute the UserOp <strong>as soon as 0 REVERT is detected,</strong> Klaster fee will include the <strong>diminishing success tip</strong>. This fee can be collected by the Node only if the UserOp was executed with 0 REVERT status and the tip is fading to 0 as the UserOp execution moment is closing to the upper bound execution timestamp.</p>\n<p><em>It is still possible for some of the UserOps to fail, for example, 3rd party bridge not working properly. In that case - the node has fulfilled its obligation, as it’s recorded on-chain that the node “attempted” to execute the UserOp, although the funds haven’t reached the destination chain. In that case, the node is protected from slashing, while the user experienced a partially executed iTx. The funds are still owned by the user, and have remained on their wallet on one of the chains where the UserOp failed.</em></p>\n<h1><a name=\"integration-16\" class=\"anchor\" href=\"https://ethresear.ch#integration-16\"></a>Integration</h1>\n<p>dApp/Wallet developers will soon have access to the SDK, which in turn will allow for building chain abstracted applications much more efficiently, while staying neutral and not locking the developer to having to use any specific technology.</p>\n<p>The developers are free to use any bridges or 3rd party services as a part of the iTx bundle - depending on the level of security/speed they require, and to rely on different AA wallet providers as the smart account wallets used behind the scenes.</p>\n<p>On the user side, they have to sign once, and see their cross-chain intent being executed step by step without having to do any other action or even own gas funds on any of the chains they interact with.</p>\n<p>This is how we see it developed further and how dApps might integrate the SDK in order to provide cross-chain experience to the end user:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/5/65e8e1fa54439727f6d9a820b1d86e740f228025.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/65e8e1fa54439727f6d9a820b1d86e740f228025\" title=\"photo_2024-06-18_13-18-43\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/5/65e8e1fa54439727f6d9a820b1d86e740f228025_2_690x315.jpeg\" alt=\"photo_2024-06-18_13-18-43\" data-base62-sha1=\"exxaKL5HjNu0eIBhA9Tgu83F4rz\" width=\"690\" height=\"315\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/5/65e8e1fa54439727f6d9a820b1d86e740f228025_2_690x315.jpeg, https://ethresear.ch/uploads/default/original/3X/6/5/65e8e1fa54439727f6d9a820b1d86e740f228025.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/6/5/65e8e1fa54439727f6d9a820b1d86e740f228025.jpeg 2x\" data-dominant-color=\"191C1E\"></a></div><p></p>\n<h1><a name=\"demo-use-cases-17\" class=\"anchor\" href=\"https://ethresear.ch#demo-use-cases-17\"></a>Demo &amp; Use Cases</h1>\n<p>At the moment, we’re building a chain abstracted AAVE dApp - to showcase what the protocol can do in terms of UX improvements.</p>\n<p>The frontend will only contain two buttons: “supply” &amp; “borrow” without specifying the chains. When executing borrow or supply, user’s funds will be routed to any chain where the AAVE market’s rates are most favorable, regardless of the fact which chain the user’s funds are on.</p>\n<p>If the user wants to rebalance the existing position, again, it’s a one-click interaction for the user, but in the background, iTx is being executed by the Klaster Nodes.</p>\n<p>Some other interesting use cases:</p>\n<ul>\n<li>streamlined checkout flows</li>\n<li>easier onboarding to the SocialFi L2/L3 apps, as Klaster protocol works with AA by default, and many of these apps choose to have embedded wallets generated for the users behind the scenes</li>\n<li>building chain abstracted flavors of dapps that are natively multichain (DEXs, lending markets, NFT marketplaces)</li>\n<li>single-chain dApps can use the Klaster Stack to streamline onboarding flows, attracting users from various chains. With Klaster Stack, users can interact with the dApp in just one click, regardless of their original blockchain</li>\n</ul>\n<h1><a name=\"faq-18\" class=\"anchor\" href=\"https://ethresear.ch#faq-18\"></a>FAQ</h1>\n<p><strong>Q: Is Klaster a Blockchain Network?</strong><br>\nA: No.</p>\n<p><strong>Q: What’s the current development status?</strong></p>\n<p>A: Centralized Klaster Node including the SDK and the docs is in the testing phase and will be launched very soon. The decentralization phase including the slashing and multichain staking which in turn makes the network more reliable will most likely be rolled out later this year.</p>\n<p><strong>Q: What are the dangers of using Klaster Protocol?</strong></p>\n<p>A: Dangers are mostly related to the impaired UX.</p>\n<p>For example, malicous Klaster Node can refuse to process an iTx bundle in full - they only execute the Payment UserOp part of the iTx bundle. The user can still replay their UserOps manually and achieve the same effect but will have to pay for gas execution themselves. Nodes on the other hand get slashed in the decentralized model because the user can submit a proof of Node commiting to execute the iTx but failing to do so in a given timeframe - which is fully verifiable on-chain. As the AA wallets are used behind the scenes, the user is in full control of their funds, and the security is reduced to security of bridges used as an intermediary steps to move assets between chains. Klaster’s iTx-enabled AA wallet module is pending audits and the reports will be shared soon.</p>\n<p><strong>Q: Can I run my own node, and what are the advantages of running a node?</strong></p>\n<p>A: Klaster Protocol will host its own public node, with the implementation publicly available for everyone to take a look and verify the inner workings of the Node itself. While the initial version of the protocol is not decentralized in a sense of having a p2p networking implemented between public Klaster nodes, anyone can still choose to run their own Klaster Node either for their own purposes (only handling one single dApp) or even providing this node for others to connect to.</p>\n<p>New chains can spin up their own Klaster node to easily onboard users from other chains.</p>\n<p>Klaster Node if operational earns a % of the total gas processed and is another revenue stream for Node operators. To set up a node, one needs to have a wallet connected to the node, and funded with native coin on every chain which the Node operator decides to support.</p>\n<p><strong>Q: How does Klaster compare to other chain abstraction solutions?</strong></p>\n<p>A: For a start, we think we have a unique approach here in being highly focused on the UX part. We’re trying to stay as generic and as neutral as possible, and we’ve developed something that can be used today to fix the UX in some ways. Comparing to some other approaches we see being built in this space, Klaster’s main difference is that Klaster doesn’t work with liquidity nor does it require the Node operators to provide liquidity - meaning it’s easier to run the network and gain an initial base of Node operators. It doesn’t try to be “one solution fits all” which hides away blockchains completely, but rather a framework where, given the fact that the cross-chain action details are known upfront - it enables developers to easily define and build the action, and for the user to sign once and see the effects happening on different chains.</p>\n<p><strong>Q: Where does Klaster Protocol fit in the CAKE framework?</strong></p>\n<p>A: According to the CAKE Layer definitions, we’d say Klaster comes somewhere in the Settlement Layer (Execution part).</p>\n<p><strong>Q: Is Klaster Protocol a bridge?</strong></p>\n<p>A: Not really. Klaster Protocol can <em>wrap</em> bridges and other services to create a true cross-chain experience by having bridge action only there as a one step of the more comple iTx interaction.</p>\n<p><strong>Q: I want to know more about the slashing process. Why do the Nodes have to stake capital, and how does slashing work?</strong></p>\n<p>A: Klaster Nodes have to execute iTx bundles if they previously “promised” to the user they will do so. There has to be a way of punishing the Node for not doing their job - or even worse, collecting the fee payment from the user but never executing their desired intent. To make this possible, Klaster Nodes have to stake capital in order to be accepted by the network and allowed to execute iTx bundles on user’s behalf.</p>\n<p>Every UserOp contains lower and upper bound timestamps, and the interval between these are when the UserOp is considered valid and can be executed on-chain. When the Node builds a full iTx tree, and signs the root iTx hash with their private key - we say the Node is “commited” to the iTx. The user has received the full quote including the Node commitment, and can use this commitment to initiate a slashing procedure if the nonce of the user’s smart account was not increased by one in the given timeframe, on any chain where their UserOp was <strong>not executed</strong>.</p>\n<p><strong>Q: Is Klaster Protocol actually an Intent Solver network?</strong></p>\n<p>A: Not really. Intents mean the user describes the end-result state and <em>someone somehow</em> finds the solution to the steps (txs) required to achieve the desired outcome. Klaster takes a completely opposite approach. The design space of the intent solvers is just too big and solving for all cases using intents is simply too complicated. We say - let’s make the system more exact, in a sense that, we assume that the developers of either dApps or wallets will always know upfront what exactly they want to achieve - and then let’s give them tools and means of how to express this interaction (iTx bundle) while making it easy for users to approve and execute these iTx bundles.</p>\n<p>Klaster Protocol though is a great tool for Intent Solvers to express &amp; execute their “paths of execution” once they solve for some specific user’s request.</p>\n<p><strong>Q: What’s the role of AA Wallets in the Klaster Protocol?</strong></p>\n<p>A: AA Wallet is the only viable option for Klaster Protocol to work. Since we need to be able to have the user authorize many actions with only one signature - the only possibility for this to work is to actually use programmable smart contract wallets.</p>\n<p><strong>Q: How is the Node protected from users? How are the users protected from the Node?</strong></p>\n<p>A: The Node charges for its service fee plus all the other execution gas costs upfront. This way, the node might overcharge for the gas spendings, but the user will still get charged fairly if the actual gas spent was lower than what the node calculated. The Node will not commit to execute the iTx if the iTx looks risky - too short timespans for the UserOp execution, or the UserOp execution window which starts far away in the future (gas price spike risks).</p>\n<p>The user is protected from the Node by being the only owner of the AA Wallet which used to execute iTx steps. Even if the Klaster Network dies completely, the user can still access and manage funds. The Klaster Node can only do what the user explicitly signs &amp; approves.</p>\n<p><strong>Q: Does the user need to own the funds on the AA Wallet to interact with the Klaster Protocol in the first place?</strong></p>\n<p>A: Unfortunately yes. If the user’s coming with an EOA wallet and assets are held by this EOA, the user will have to execute at least one EOA transaction and move funds from this wallet to an iTx enabled AA wallet to be able to use Klaster for chain abstraction / gas abstraction purposes. Luckily, the EIP-7702 which is confirmed will improve this flow substantially.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/presenting-klaster-rethinking-chain-abstraction/19910\">Read full topic</a></p>","link":"https://ethresear.ch/t/presenting-klaster-rethinking-chain-abstraction/19910","pubDate":"Wed, 26 Jun 2024 13:13:35 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19910"},"source":{"@url":"https://ethresear.ch/t/presenting-klaster-rethinking-chain-abstraction/19910.rss","#text":"Presenting Klaster - rethinking chain abstraction"},"filter":false}]}}}