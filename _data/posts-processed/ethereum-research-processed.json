{"rss":{"@version":"2.0","@xmlns:discourse":"http://www.discourse.org/","@xmlns:atom":"http://www.w3.org/2005/Atom","@xmlns:dc":"http://purl.org/dc/elements/1.1/","channel":{"title":"Ethereum Research - Latest topics","link":"https://ethresear.ch/latest","description":"Latest topics","lastBuildDate":"Thu, 01 Aug 2024 23:46:47 +0000","atom:link":{"@href":"https://ethresear.ch/latest.rss","@rel":"self","@type":"application/rss+xml"},"item":[{"title":"Aligning DAO contributions with objectives","dc:creator":"lajarre","category":"Economics","description":"<h1><a name=\"aligning-dao-contributions-with-objectives-1\" class=\"anchor\" href=\"https://ethresear.ch#aligning-dao-contributions-with-objectives-1\"></a>Aligning DAO contributions with objectives</h1>\n<p>In this post, we’re approaching how to align DAO contributions in a setting where a clear goal is already defined.</p>\n<p>We will define an Objective Alignment Engine (OAE) as a class of mechanisms that fulfill this objective. We aim to define the contour of such mechanisms so that they optimize resource allocation and provide economic guarantees on the efficacy of incentives.</p>\n<p><em>A more complete description along with more concrete examples is available at <a href=\"https://www.notion.so/r-ag-oae-Objective-Alignment-Engine-6984df3b33cc468e85264a9b975437eb?pvs=21\" rel=\"noopener nofollow ugc\">[r.ag.oae] Objective Alignment Engine</a>.</em></p>\n<h2><a name=\"motivation-2\" class=\"anchor\" href=\"https://ethresear.ch#motivation-2\"></a>Motivation</h2>\n<p>Suppose a DAO where governance contributors are compensated based on a simple rule, like “the top 10 delegates by total votes delegates are paid $10k / month”. As protocol designers, this sounds suboptimal as we have no guarantees that the treasury is spent on the delegates who produce the most useful contributions to governance (e.g. produce the most complete proposals, or vote most consistently). Also, any such rules-based process inevitably becomes gameable under <a href=\"https://en.wikipedia.org/wiki/Goodhart%27s_law\" rel=\"noopener nofollow ugc\">Goodhart’s law</a>.</p>\n<p>We’d prefer that contributions were picked individually and reward contributors based on how aligned these contributions are with the overarching goals of the network (e.g., how much are such contributions participating in growth? or decentralization?).</p>\n<p>Importantly, we’d also prefer that there is an objective notion of alignment, enabling a mechanism that relies not only on individual preferences but as much as possible on eliciting information (as suggested in <a href=\"https://ethresear.ch/t/governance-mixing-auctions-and-futarchy/10772\">this post on mixing auctions and futarchy</a>).</p>\n<h2><a name=\"background-3\" class=\"anchor\" href=\"https://ethresear.ch#background-3\"></a>Background</h2>\n<p>On-chain protocols often struggle to align contributor incentives with network goals. While blockchains are designed to optimize resource spending for security, producing alignment with agreed-upon goals is typically left to external governance systems. OAE mechanisms bring contributions and incentives within the purview of the protocol designer.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/c/cc4f46fea1dfde8237a19aac23844864e00fd24f.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/cc4f46fea1dfde8237a19aac23844864e00fd24f\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/c/cc4f46fea1dfde8237a19aac23844864e00fd24f_2_690x389.jpeg\" alt=\"image\" data-base62-sha1=\"t9pfNEuGQSnrmwbAWB8K12AvcAv\" width=\"690\" height=\"389\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/c/cc4f46fea1dfde8237a19aac23844864e00fd24f_2_690x389.jpeg, https://ethresear.ch/uploads/default/optimized/3X/c/c/cc4f46fea1dfde8237a19aac23844864e00fd24f_2_1035x583.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/c/cc4f46fea1dfde8237a19aac23844864e00fd24f_2_1380x778.jpeg 2x\" data-dominant-color=\"33332F\"></a></div><p></p>\n<p>This approach aligns with the “skin in the game” and futarchy-like solutions suggested in <a href=\"https://vitalik.eth.limo/general/2021/08/16/voting3.html\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Moving beyond coin voting governance</a>. We’ll rely on the notion that there is a jury that is incentivized to produce a good judgment of whether contributions are aligned and scale this with additional mechanisms.</p>\n<h2><a name=\"assumptions-objective-definition-4\" class=\"anchor\" href=\"https://ethresear.ch#assumptions-objective-definition-4\"></a>Assumptions: objective definition</h2>\n<p>A central assumption that we take is that the DAO has a clearly defined objective. While this is theoretically difficult to achieve in a decentralized setting, most protocol values and visions are set initially by the core team and steered by a Foundation.</p>\n<p>For example, Ethereum focuses today on <a href=\"https://ethereum.org/en/roadmap/vision/\" rel=\"noopener nofollow ugc\">Scalability, Security, and Sustainability</a>, whereas Optimism has the <a href=\"https://optimism.io/vision\" rel=\"noopener nofollow ugc\">Superchain vision</a>.</p>\n<p>In the rest of this post, we assume an existing process produces a clear definition of an objective <span class=\"math\">o</span> (hence, the <em>Objective</em> part of the Alignment Engine).</p>\n<p>The existence of such an objective enables designing mechanisms that rely only on eliciting information from participants, namely whether a contribution is aligned or not with the objective.</p>\n<h2><a name=\"alignment-engine-5\" class=\"anchor\" href=\"https://ethresear.ch#alignment-engine-5\"></a>Alignment engine</h2>\n<h3><a name=\"jury-6\" class=\"anchor\" href=\"https://ethresear.ch#jury-6\"></a>Jury</h3>\n<p>Once an objective is defined, we want to set up a jury that can review any contribution and evaluate how aligned it is with the objective. This is the central part of this design.</p>\n<p>The main function of the jury is to produce ratings “aligned” / “misaligned” on contributions that are produced on the protocol.</p>\n<p>To produce alignment within the jury itself, we rely on mechanisms that incentivize truthful reporting but don’t rely on verifiable outcomes (like, BTC/USD quote). Possible such mechanisms are SchellingCoin or <a href=\"https://arxiv.org/abs/2306.04305\" rel=\"noopener nofollow ugc\">self-resolving prediction markets for unverifiable outcomes</a> (Srinivasan et al, 2023).</p>\n<p>To enable incentivization and notably negative rewards, we expect jurors to stake tokens ($ALIGN) and receive token emissions as rewards.</p>\n<h3><a name=\"dispute-resolution-7\" class=\"anchor\" href=\"https://ethresear.ch#dispute-resolution-7\"></a>Dispute resolution</h3>\n<p>Here we assume that most contributions can be unequivocally qualified as “aligned” or “misaligned” (ie there is a <em>clear</em> way to rate most contributions, as long as <span class=\"math\">o</span> is well defined).</p>\n<p>But equivocal cases will inevitably appear. When a contestable result is produced, a dispute resolution mechanism needs to be enforced (either an external one like a Kleros court or an Augur-style ALIGN token fork).</p>\n<h3><a name=\"calibration-8\" class=\"anchor\" href=\"https://ethresear.ch#calibration-8\"></a>Calibration</h3>\n<p>In general, a juror can be an agent making use of any tools available, including AI and prediction markets, to produce the best evaluations. But this leaves open the question of how to incentivize jurors to get better at their jobs so the jury doesn’t degenerate into a static committee.</p>\n<p>If part of the contributions have a ground truth to which their ratings can be compared (e.g. growth contributions that aim at increasing a key metric like TVL for a DeFi protocol or fees for an L2), jurors can be rewarded accordingly. This way, the mechanism can still leverage objective outcomes to improve its accuracy (or <em>be <a href=\"https://www.overcomingbias.com/p/meta-jury-markets\" rel=\"noopener nofollow ugc\">calibrated</a></em>).</p>\n<h3><a name=\"scaling-9\" class=\"anchor\" href=\"https://ethresear.ch#scaling-9\"></a>Scaling</h3>\n<p>Armed with such a jury, DAO contributions can theoretically be evaluated. To handle large numbers of contributions, two scaling options are available:</p>\n<ul>\n<li>Prediction markets: bettors predict jury decisions, creating “Aligned” and “Misaligned” tokens.</li>\n<li>Peer prediction: raters evaluate contributions, with a small percentage reviewed by the jury.</li>\n</ul>\n<p>Spam protection through staked curation or auctions ensures only valuable contributions are evaluated.</p>\n<h2><a name=\"rewards-distribution-10\" class=\"anchor\" href=\"https://ethresear.ch#rewards-distribution-10\"></a>Rewards distribution</h2>\n<p>With contribution evaluation in place, the last bit is to distribute contribution rewards to incentivize the most aligned contributions to be produced in the future.</p>\n<p>Aligned contributions receive rewards from treasury or token emissions, proportional to their alignment rating. Highly aligned contributions may be automatically implemented in proposal-like scenarios</p>\n<p>This produces a positive feedback loop where:</p>\n<ol>\n<li>Better-aligned contributions receive more rewards</li>\n<li>This incentivizes more aligned contributions in the future</li>\n<li>The protocol becomes more resistant to misaligned or captured governance over time.</li>\n</ol>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/e/7e67510d59620761b9c2941d8a4067b859bc6ebb.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/7e67510d59620761b9c2941d8a4067b859bc6ebb\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/e/7e67510d59620761b9c2941d8a4067b859bc6ebb_2_543x500.jpeg\" alt=\"image\" data-base62-sha1=\"i2dvZRif0cghJQd24wAFAIaZ6Nd\" width=\"543\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/e/7e67510d59620761b9c2941d8a4067b859bc6ebb_2_543x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/7/e/7e67510d59620761b9c2941d8a4067b859bc6ebb_2_814x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/7/e/7e67510d59620761b9c2941d8a4067b859bc6ebb_2_1086x1000.jpeg 2x\" data-dominant-color=\"32322E\"></a></div><p></p>\n<h2><a name=\"attacks-11\" class=\"anchor\" href=\"https://ethresear.ch#attacks-11\"></a>Attacks</h2>\n<p>Some potential limitations and related attacks include:</p>\n<ol>\n<li><strong>Equivocal objective definition.</strong> Attackers may exploit ambiguous objectives to reward misaligned contributions. This can be mitigated by updating the objective when the DAO observes that equivocation happens.</li>\n<li><strong>Jurors collusion and bribing.</strong> This can be countered with staking mechanisms, reputation systems, random juror selection, or shielded voting.</li>\n<li><strong>Peer prediction and prediction markets manipulation.</strong> Usual caveats and mitigations apply.</li>\n</ol>\n<h2><a name=\"questions-12\" class=\"anchor\" href=\"https://ethresear.ch#questions-12\"></a>Questions</h2>\n<p>Such OAE mechanisms rely on the existence of an objective <span class=\"math\">o</span>. We haven’t answered how such an objective can be defined in a general setting. There is an argument that leaving it to regular token-voting just pushes the problem around and the overall mechanism inherits some of the issues of both sub-mechanisms. However, it appears that splitting the problem in two has benefits, as, once an objective is defined, more deterministic outcomes can be achieved through mechanism design.</p>\n<p>Also, other kinds of mechanisms can be devised that rely on subjective evaluations. Including subjective evaluations might render objective definition superfluous. But relying on a jury whose jurors input their own preferences leaves the question open of how the jury achieves legitimacy. A solution would be to rely on a measure of juror reputation, as pioneered by Backfeed.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/aligning-dao-contributions-with-objectives/20204\">Read full topic</a></p>","link":"https://ethresear.ch/t/aligning-dao-contributions-with-objectives/20204","pubDate":"Thu, 01 Aug 2024 23:46:47 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20204"},"source":{"@url":"https://ethresear.ch/t/aligning-dao-contributions-with-objectives/20204.rss","#text":"Aligning DAO contributions with objectives"},"filter":false},{"title":"ShardDAG: Ordering and Exploitation in Sharded Blockchains","dc:creator":"JamesHenderson","category":"Sharding","description":"<h2><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>tl;dr</h2>\n<p>Ethereum’s design has moved away from state sharding; however, L2 architectures like zkSharding provide a unified protocol in which L2 dApps are composable yet scalable via state sharding, avoiding the need for state fragmentation emerging across distinct L2s. However, sharded systems are not without challenges. In particular, state sharding amplifies MEV exploitation and censorship problems that exist in non-sharded blockchains.</p>\n<p>We propose a shardDAG architecture for state sharded blockchains or multi-chain systems, combining protocol rules, rewards and penalties that constrain transaction exploitation [<a href=\"https://arxiv.org/abs/1904.05234\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">[1904.05234] Flash Boys 2.0: Frontrunning, Transaction Reordering, and Consensus Instability in Decentralized Exchanges</a>] and external influences like regulatory censorship  [<a href=\"https://www.mevwatch.info/\" rel=\"noopener nofollow ugc\">https://www.mevwatch.info/</a>, <a href=\"https://home.treasury.gov/news/press-releases/jy0916\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">U.S. Treasury Sanctions Notorious Virtual Currency Mixer Tornado Cash | U.S. Department of the Treasury</a>]. Constraints on exploitation and censorship are achieved using a DAG architecture that links shard blocks to each other. The DAG provides an enforceable order in which cross-shard transactions must be processed by each shard, thereby constraining manipulation of transaction processing order.</p>\n<h2><a name=\"motivation-2\" class=\"anchor\" href=\"https://ethresear.ch#motivation-2\"></a>Motivation</h2>\n<p>State sharded blockchains inherit magnified MEV exploitation and censorship problems that exist in non-sharded blockchains because transaction completion can require block proposers in many distinct shards, and each block proposer could exploit or censor transactions. Further, more severe transaction exploits are possible via inserting other exploitative transactions in intermediate blocks that occur between starting and finishing transaction processing.</p>\n<p>To understand this, the example below demonstrates a simple exploit scenario.</p>\n<p><em><strong>Exploit Example</strong></em></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/b/db208f14e2f3355a7d1d888bbc8b90e969102b97.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/db208f14e2f3355a7d1d888bbc8b90e969102b97\" title=\"BasicExploit\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/b/db208f14e2f3355a7d1d888bbc8b90e969102b97_2_690x445.jpeg\" alt=\"BasicExploit\" data-base62-sha1=\"vguk2i1o9S5mmhCMuXMDyExsNQb\" width=\"690\" height=\"445\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/b/db208f14e2f3355a7d1d888bbc8b90e969102b97_2_690x445.jpeg, https://ethresear.ch/uploads/default/optimized/3X/d/b/db208f14e2f3355a7d1d888bbc8b90e969102b97_2_1035x667.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/d/b/db208f14e2f3355a7d1d888bbc8b90e969102b97_2_1380x890.jpeg 2x\" data-dominant-color=\"4E4E4E\"></a></div><br>\nFigure 1: Two shard chains. Blocks 0 and 1 of shard <em>A</em> each contain cross-shard transactions <em>t</em> and <em>u</em>  respectively, whose destinations are shard <em>B</em>. Suppose <em>t</em> can be exploited if in shard <em>B</em> <em>u</em> is processed earlier than <em>t</em>. Then the system is dangerous for <em>t</em>’s user without enforceable ordering rules that ensure <em>t</em> must be processed before <em>u</em> in shard <em>B</em>.<p></p>\n<h2><a name=\"why-cross-shard-transaction-data-availability-matters-3\" class=\"anchor\" href=\"https://ethresear.ch#why-cross-shard-transaction-data-availability-matters-3\"></a>Why Cross-Shard Transaction Data Availability Matters</h2>\n<p>Punishment for censoring a cross-shard transaction (CST), or processing in an incorrect, exploitative order can only be enforced provided that</p>\n<p>i) It can be established that all the required data was available to the shard, and</p>\n<p>ii) The shard subsequently failed to process the data correctly.</p>\n<p>Therefore, a mechanism is required for establishing <em>verifiable</em> cross-shard (or cross-chain, or cross-rollup) transaction data availability. The broad steps in achieving this are illustrated in Fig. 2. Preventing exploitation requires enforceable rules for ordering the processing of transactions and CSTs; however, enforcing processing order requires that each shard receives the CSTs that it is required to process. To be able to receive CSTs, that CST data must be available. Thus, constraining exploitation rests upon ensuring CST data availability.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/b/7bee56e632f92d068ac45ccb5bf63a201b085725.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/7bee56e632f92d068ac45ccb5bf63a201b085725\" title=\"ShardDAG StrategySteps\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/b/7bee56e632f92d068ac45ccb5bf63a201b085725_2_690x154.jpeg\" alt=\"ShardDAG StrategySteps\" data-base62-sha1=\"hGlmRB3Rv32vxqCpxC8FzlMm0lv\" width=\"690\" height=\"154\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/b/7bee56e632f92d068ac45ccb5bf63a201b085725_2_690x154.jpeg, https://ethresear.ch/uploads/default/optimized/3X/7/b/7bee56e632f92d068ac45ccb5bf63a201b085725_2_1035x231.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/7/b/7bee56e632f92d068ac45ccb5bf63a201b085725_2_1380x308.jpeg 2x\" data-dominant-color=\"5C5C5C\"></a></div><br>\nFigure 2: Goal: ShardDAG ordering aims to constrain manipulation, exploitation and censorship of transactions and cross-shard transactions. Step 3: These constraints require enforceable protocol rules for ordering the processing of transactions and cross-shard transactions. Step 2: Fairly enforcing ordering rules requires on-chain acknowledgement of receipt of cross-shard transactions. Step 1: Receipt of cross-shard transactions requires cross-shard transaction data availability.<p></p>\n<h2><a name=\"step-3-a-preview-how-dags-provide-order-4\" class=\"anchor\" href=\"https://ethresear.ch#step-3-a-preview-how-dags-provide-order-4\"></a>Step 3. A Preview: How DAGs Provide Order</h2>\n<p>Our solution to the transaction and cross-shard transaction ordering problem involves linking shard chains into a shard directed acyclic graph or shardDAG, and then ordering processing according to the partial order specified within shard block subgraphs.</p>\n<p>ShardDAG ordering is previewed in Fig. 3. The distinct shard chains are connected to form a shardDAG, providing an enforceable ordering of cross-shard transactions amongst the shard chains. Unlike in Fig. 1, in Fig. 3’s shardDAG, an exploitative CST in a later block cannot be processed before a CST in an earlier block.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/8/48bb4910acfa00365d8e0b97b45be64b0e32e732.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/48bb4910acfa00365d8e0b97b45be64b0e32e732\" title=\"ShardDAG NonOverloaded Ordering\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/8/48bb4910acfa00365d8e0b97b45be64b0e32e732_2_193x500.jpeg\" alt=\"ShardDAG NonOverloaded Ordering\" data-base62-sha1=\"anpDmZETjVUw8C8k2cvC2lRyo2S\" width=\"193\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/8/48bb4910acfa00365d8e0b97b45be64b0e32e732_2_193x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/4/8/48bb4910acfa00365d8e0b97b45be64b0e32e732_2_289x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/8/48bb4910acfa00365d8e0b97b45be64b0e32e732_2_386x1000.jpeg 2x\" data-dominant-color=\"3F423A\"></a></div><br>\nFigure 3: Unlike the distinct shard chains in Fig. 1, the shardDAG (top) depicted here defines a partial ordering of shard blocks that fall under any particular block (here shard B block 2) and the cross-shard transactions that the blocks contain. (Middle) A Hasse diagram can be constructed to visualise a partial ordering of the shard blocks (for clarity lines connecting blocks have not been included). The shardDAG is topologically sorted (bottom) to produce a block containing an ordered set of transactions and CSTs. In general many topological sorts are possible, the block builder selects one, likely based on MEV.<p></p>\n<h2><a name=\"a-sharddag-for-data-availability-5\" class=\"anchor\" href=\"https://ethresear.ch#a-sharddag-for-data-availability-5\"></a>A ShardDAG for Data Availability</h2>\n<p>To establish cross-shard transaction data availability, the simple set of shard chains in Fig. 1 is extended to become a shardDAG that is crafted to incentivize data sharing. In this system all validators participate in a synchronization chain which aggregates and finalises state updates from shards that are each operated by distinct subsets of the total validator set. Transaction and CST processing is performed within shards only, hence the synchronization chain is not a processing bottleneck. Here the details of the synchronization chain are restricted to its involvement in the shardDAG—the broader function of the synchronization chain in the sharded system is beyond the scope of this post.</p>\n<p>To form a shardDAG, shard blocks include links to other shard blocks in the form of:</p>\n<ul>\n<li><strong>a hash to the previous shard block in the same shard, as in a typical blockchain,</strong></li>\n<li><strong>a set of hashes to other shards blocks in other shards,</strong></li>\n<li><strong>a hash to a (valid) synchronization block, equal to or later than the most recent synchronization block already used by prior shard blocks that are included in the subgraph.</strong></li>\n</ul>\n<p>The formation of a shardDAG is illustrated in Fig. 4, where for clarity only edges in the subgraph of the white block are shown. The thick arrows are the white block’s hashes to other blocks.</p>\n<p>The following is a central concept in the function of the shardDAG.</p>\n<p><strong>When a shard <span class=\"math\">A</span> creates a shard block that includes the hash <span class=\"math\">h</span> of another shard block or synchronization block, this inclusion acts as an acknowledgement that shard <span class=\"math\">A</span> has received the block headers and outboxes of cross-shard transactions for <span class=\"math\">h</span> and <span class=\"math\">h</span><em>’s</em> entire subgraph in the shardDAG.</strong></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/2/b2ba419c59a01907d08a616eb2b464634114c1d3.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/b2ba419c59a01907d08a616eb2b464634114c1d3\" title=\"SubGraphLowDetail\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/2/b2ba419c59a01907d08a616eb2b464634114c1d3_2_690x469.jpeg\" alt=\"SubGraphLowDetail\" data-base62-sha1=\"pv62BsYMnjDFdt1gNae1HRBjMA3\" width=\"690\" height=\"469\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/2/b2ba419c59a01907d08a616eb2b464634114c1d3_2_690x469.jpeg, https://ethresear.ch/uploads/default/optimized/3X/b/2/b2ba419c59a01907d08a616eb2b464634114c1d3_2_1035x703.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/2/b2ba419c59a01907d08a616eb2b464634114c1d3_2_1380x938.jpeg 2x\" data-dominant-color=\"383838\"></a></div><br>\nFigure 4: Illustration of the white block’s subgraph in the shard DAG. The white block’s header contains a list of hashes to other shard blocks (thick white arrows), and well as a single hash to a synchronization block (thick grey arrow). Thin grey edges trace the subgraph of the white block, beyond the blocks explicitly included in its header.<p></p>\n<h2><a name=\"step-2-enforcing-cst-receipt-6\" class=\"anchor\" href=\"https://ethresear.ch#step-2-enforcing-cst-receipt-6\"></a>Step 2. Enforcing CST Receipt</h2>\n<h3><a name=\"enforcing-cst-receipt-via-shard-chains-7\" class=\"anchor\" href=\"https://ethresear.ch#enforcing-cst-receipt-via-shard-chains-7\"></a>Enforcing CST Receipt via Shard Chains</h3>\n<p>To enforce shards to continually acknowledge receipt of new shard block data, the protocol specifies conditions on block validity. Suppose we have a shard block <span class=\"math\">b_i</span> and <span class=\"math\">b_i</span><em>’s</em> prior shard block <span class=\"math\">b_{i-1}</span> in the same shard as <span class=\"math\">b_i</span>.</p>\n<ul>\n<li><strong>[PARENT CONDITION]: For <span class=\"math\">b_i</span> to be a valid shard block, the graph difference of <span class=\"math\">b_i</span><em>’s</em> subgraph minus <span class=\"math\">b_{i-1}</span><em>’s</em> subgraph must contain shard blocks created by more than <span class=\"math\">F&gt;1</span> shards, where <span class=\"math\">F</span> is a system parameter controlling the branching of the DAG.</strong></li>\n</ul>\n<p><em>Example:</em></p>\n<p><em>In Fig. 4, the subgraph of the white shard A block only contains two blocks that are not in the subgraph of the previous shard A block, i.e. the white block itself, and the middle shard B block. If in this example F=1, then the white block is valid; however, if F&gt;1 then the white block is invalid.</em></p>\n<h3><a name=\"enforcing-cst-receipt-via-the-synchronization-chain-8\" class=\"anchor\" href=\"https://ethresear.ch#enforcing-cst-receipt-via-the-synchronization-chain-8\"></a>Enforcing CST Receipt Via the Synchronization Chain</h3>\n<p>The parent condition enforces receipt of CSTs, but does not guarantee that each CST reaches its destination so that transactions complete. Without additional rules it is possible (though unlikely) for sets of shards to create shard blocks whose subgraphs do not span all shards and therefore do not acknowledge receipt of CSTs from all shards, as illustrated in Fig. 6.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/9/c95bce910ccff1c8dbd9ffbaa913b546c5db043d.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/c95bce910ccff1c8dbd9ffbaa913b546c5db043d\" title=\"consensusParentCondition\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/9/c95bce910ccff1c8dbd9ffbaa913b546c5db043d_2_690x444.jpeg\" alt=\"consensusParentCondition\" data-base62-sha1=\"sJiFlI0Hn0xlOFVQMTnxxXf2x1X\" width=\"690\" height=\"444\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/9/c95bce910ccff1c8dbd9ffbaa913b546c5db043d_2_690x444.jpeg, https://ethresear.ch/uploads/default/optimized/3X/c/9/c95bce910ccff1c8dbd9ffbaa913b546c5db043d_2_1035x666.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/9/c95bce910ccff1c8dbd9ffbaa913b546c5db043d_2_1380x888.jpeg 2x\" data-dominant-color=\"444343\"></a></div><br>\nFigure 6: Despite the parent condition for valid shard blocks, it is possible (though unlikely) for shard subgraphs to not acknowledge receipt of CSTs from some other shards via shard block edges, indicated by the vertical dashed line. However, the synchronization parent condition eventually forces all shards to acknowledge all CSTs via synchronization block edges. Here the synchronization parent condition forces shard 4 to acknowledge receipt of the red CST (via the red edges) and therefore process it, because the dashed blue edge exceeds the limit (here <em>S</em>=2) of consecutive synchronization block hashes. For clarity only the subset of synchronization blocks edges that are relevant to illustrating the above point are shown.<p></p>\n<p>This is unlikely to occur in the shardDAG; however, the synchronization chain is used to ensure that it <em>cannot</em> occur via a further block validity condition:</p>\n<ul>\n<li><strong>[SYNCHRONIZATION PARENT CONDITION]: A valid shard block <em>b</em> cannot have more than <span class=\"math\">S</span> prior blocks from the same shard using the same synchronization block hash.</strong></li>\n</ul>\n<p>The value of <span class=\"math\">S</span> should be chosen depending on the ratio of rates of synchronization block to shard block creation. It is expected that synchronization blocks will be produced at a slower rate compared to shard blocks.</p>\n<p>A malicious shard can only produce <span class=\"math\">S</span> shard blocks before being forced to acknowledge receipt of new shard blocks via the synchronization chain. In Fig. 5, the red CST shard block will eventually be included in a synchronization block, in a worst case scenario waiting until a shard 1 validator becomes the synchronization block proposer. Thus, eventually all shards will acknowledge receiving the red CST, including the red CST’s destination shard, as indicated by the red arrows. The dashed blue arrow indicates that shard 4 block 3 would be invalid if it used this hash because more than <span class=\"math\">S</span> (here 2) consecutive shard blocks would hash to the same synchronization block.</p>\n<p>In this way, economically motivated validators (and especially synchronization block proposers) are motivated to share data so that finality can be reached and economic rewards can be distributed.</p>\n<h2><a name=\"step-1-enforcing-cst-data-availability-via-dag-edges-between-shards-9\" class=\"anchor\" href=\"https://ethresear.ch#step-1-enforcing-cst-data-availability-via-dag-edges-between-shards-9\"></a>Step 1. Enforcing CST Data Availability Via DAG Edges Between Shards</h2>\n<p>While the parent, and synchronization parent conditions force shards to acknowledge receipt of data, these rules do not force shards to <em>distribute</em> shard block data and establish data availability. Thus, the protocol specifies a rule on shard block finality to align data availability with economic incentives.</p>\n<ul>\n<li><strong>[CHILD CONDITION]: For a shard block <span class=\"math\">b</span> to be finalised within the synchronization chain, within the subgraph of any synchronization block, <span class=\"math\">b</span> must have child shard blocks created by more than <span class=\"math\">F</span> shards.</strong></li>\n</ul>\n<p>When a block satisfies the child condition its CSTs have been acknowledged as received by more than <em>F</em> other shards and the shard has therefore distributed its CST data.</p>\n<p>The child condition is illustrated in Fig. 5. For a shard block to acquire child shard blocks, other (honest) shards must first receive its subgraph data. Thus, shards are economically incentivised to possess and distribute data in their subgraphs.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/b/1b0c569adc1421ca246f774a9b776cda2aaa6465.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/1b0c569adc1421ca246f774a9b776cda2aaa6465\" title=\"ChildConditionEthREsearch\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/b/1b0c569adc1421ca246f774a9b776cda2aaa6465_2_688x500.jpeg\" alt=\"ChildConditionEthREsearch\" data-base62-sha1=\"3RhkeDD46aGIjVlhSUgVjmt1D25\" width=\"688\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/b/1b0c569adc1421ca246f774a9b776cda2aaa6465_2_688x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/1/b/1b0c569adc1421ca246f774a9b776cda2aaa6465_2_1032x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/1/b/1b0c569adc1421ca246f774a9b776cda2aaa6465_2_1376x1000.jpeg 2x\" data-dominant-color=\"353535\"></a></div><br>\nFigure 5: Illustration of the child condition for the subgraph of the upper left synchronization block. In this example <em>F</em>=2. The white block in finalised because it has child shard blocks from three shards, indicated by thick white arrows. In contrast, the bottom right shard block is not finalised because it only has one child shard block indicated by the thick grey arrow.<p></p>\n<h2><a name=\"step-3-an-enforceable-dag-partial-order-of-transaction-and-cst-processing-10\" class=\"anchor\" href=\"https://ethresear.ch#step-3-an-enforceable-dag-partial-order-of-transaction-and-cst-processing-10\"></a>Step 3. An Enforceable DAG Partial Order of Transaction and CST Processing</h2>\n<p>The shardDAG provides a verifiable, enforceable ordering of transactions and CSTs, which constrains exploits and guarantees (eventual) transaction processing. Transactions and cross-shard transactions must be processed in an order consistent with the partial order of the shard blocks that they are each created in.</p>\n<p>Suppose that shard <em>B</em> creates a new shard block <em>b</em>. As illustrated in Fig.3, the the steps involved in ordering the processing of CSTs and transactions are:</p>\n<ol>\n<li>First <span class=\"math\">b</span><em>’s</em> hashes (DAG edges) to other shard blocks and a synchronization block are chosen. Hashes are only chosen if corresponding subgraph CST data is available, otherwise correct ordering cannot be known and penalties may ensue.</li>\n<li>The protocol rules described earlier require that the validator creating and proposing <span class=\"math\">b</span> has all the CST data from <span class=\"math\">b</span><em>’s</em> subgraph, call these <span class=\"math\">T</span>. The set of pending CSTs <span class=\"math\">P</span> whose destination is shard <span class=\"math\">B</span>, and which have not already been processed in an existing shard <span class=\"math\">B</span> block are extracted from <span class=\"math\">T</span> and any new transactions are added to <span class=\"math\">P</span>.</li>\n<li>The set of pending transactions and CSTs, <span class=\"math\">P</span> are (partially) ordered according to the shardDAG ordering of the shard blocks that they were created in, retaining the order of multiple CSTs created within a single block. <span class=\"math\">P</span> is topologically sorted to create a totally ordered set of transactions and CSTs.</li>\n<li>Block size limits may constrain the number of transactions and cross-shard transactions included in a shard block. If this occurs, it is optional to introduce priority of transactions and CSTs as illustrated in Fig. 7, whereby block proposers select transactions and CSTs to include based on priority fees, and MEV. However, this comes at the cost of potentially allowing exploitative transaction insertion. Pending transactions and CSTs must be processed if allowed by block size limits; any unused block space must be too small to contain any unprocessed transaction or CST.</li>\n<li>New transactions that do not fit into block processing can be included in a shard block’s outbox of CSTs. Such transactions enter the shardDAG for ordering and will therefore be processed in a later block along with other pending transactions and CSTs not included in <span class=\"math\">b</span>.</li>\n</ol>\n<p>Validators should only sign a proposed block once they have verified that the block proposer has followed this protocol ordering. If an invalid ordering is used then the block is invalid and/or the signing validators are subjected to penalties. We reiterate that because ordering rules involve only on-chain data, data availability of CSTs and block headers enables any validator or node to verify correctness of ordering.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/0/9/09afd7f7cf81fd6dacfe88bcc2f4b6c7eab46c0f.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/09afd7f7cf81fd6dacfe88bcc2f4b6c7eab46c0f\" title=\"ShardDAG Overloaded Ordering Only\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/0/9/09afd7f7cf81fd6dacfe88bcc2f4b6c7eab46c0f_2_690x407.jpeg\" alt=\"ShardDAG Overloaded Ordering Only\" data-base62-sha1=\"1nH2vxvlS1jBdkATbBGafTTa63Z\" width=\"690\" height=\"407\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/0/9/09afd7f7cf81fd6dacfe88bcc2f4b6c7eab46c0f_2_690x407.jpeg, https://ethresear.ch/uploads/default/optimized/3X/0/9/09afd7f7cf81fd6dacfe88bcc2f4b6c7eab46c0f_2_1035x610.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/0/9/09afd7f7cf81fd6dacfe88bcc2f4b6c7eab46c0f_2_1380x814.jpeg 2x\" data-dominant-color=\"424138\"></a></div><br>\nFigure 7: An extension of Fig.3 when shard B is overloaded and unprocessed transactions and CSTs exceed maximum block size (left). The block builder selects transactions and CSTs to remove from the topological sort for the new block (middle), so that the remaining transactions and CSTs do not exceed block size limits (right). Removed CSTs will be processed in later blocks. This removal of transactions and CSTs is expected to be based on priority fees and MEV. Unprocessed new transactions (b2’) may be included in an outbox as data so that they enter shardDAG ordering for processing in a later block, like b0 and b1 in earlier blocks, but these outboxed transactions are not processed in the current block.<p></p>\n<h2><a name=\"summary-11\" class=\"anchor\" href=\"https://ethresear.ch#summary-11\"></a>Summary</h2>\n<p>In state-sharded blockchains, censorship and insertion of exploitative transactions part-way through transaction processing can be constrained by shardDAG transaction and CST ordering. These shardDAG constraints are derived from ordering, which enforces processing of earlier transactions and CSTs before later ones. ShardDAG ordering rests upon economic incentives that motivate validators to suitably participate in the shardDAG to receive block rewards and avoid penalties.</p>\n<p>DAGs are a natural tool to be used in ordered systems. The shardDAG broadens the use of DAGs in blockchain, beyond their more common application in consensus mechanisms. The shardDAG has been presented here in a unified state sharded system, but the ideas can be applied to sets of distinct rollups or blockchains.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/sharddag-ordering-and-exploitation-in-sharded-blockchains/20203\">Read full topic</a></p>","link":"https://ethresear.ch/t/sharddag-ordering-and-exploitation-in-sharded-blockchains/20203","pubDate":"Thu, 01 Aug 2024 23:12:07 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20203"},"source":{"@url":"https://ethresear.ch/t/sharddag-ordering-and-exploitation-in-sharded-blockchains/20203.rss","#text":"ShardDAG: Ordering and Exploitation in Sharded Blockchains"},"filter":false},{"title":"Inclusion List Timing Constraints","dc:creator":"terence","category":"Block proposer","description":"<p>Special thanks to <a class=\"mention\" href=\"https://ethresear.ch/u/julian\">@Julian</a>, <a class=\"mention\" href=\"https://ethresear.ch/u/barnabe\">@barnabe</a> and <a class=\"mention\" href=\"https://ethresear.ch/u/manav2401\">@manav2401</a> for the reviews</p>\n<h2><a name=\"background-1\" class=\"anchor\" href=\"https://ethresear.ch#background-1\"></a>Background</h2>\n<p>Inclusion list have been an active topic since the <a href=\"https://notes.ethereum.org/@vbuterin/pbs_censorship_resistance\" rel=\"noopener nofollow ugc\">early</a> <a href=\"https://ethresear.ch/t/how-much-can-we-constrain-builders-without-bringing-back-heavy-burdens-to-proposers/13808\">days</a>. <a href=\"https://notes.ethereum.org/@fradamt/forward-inclusion-lists\" rel=\"noopener nofollow ugc\">Various</a> <a href=\"https://notes.ethereum.org/@fradamt/H1TsYRfJc\" rel=\"noopener nofollow ugc\">designs</a> have emerged over time, each with inevitable trade-offs concerning <strong>What can be constrained within a single Ethereum slot?</strong>.<br>\nThis post explores these trade-offs from the perspectives of <strong>different actors</strong> involved in ILs and defines the dependencies required for each actor to fulfill their role in integrating ILs into the protocol. We will compare and contrast multiple designs, focusing on the limitations related to <strong>timing, security, and feasibility</strong>.</p>\n<p>First, we will outline some definitions.</p>\n<h2><a name=\"il-definitions-2\" class=\"anchor\" href=\"https://ethresear.ch#il-definitions-2\"></a>IL Definitions</h2>\n<p><strong>Slot Time</strong>: In the context of Ethereum, a slot refers to a fixed interval currently set at 12 seconds. During each slot, the proposer/builder proposes a block, attesters vote on the block, and an aggregator aggregates the votes. The proposer of subsequent slot includes aggregated votes in their block, and the cycle repeats. Today out-of-protocol builders have an ~8-second window to prepare for the next slot’s block. All actions are synchronized with these validator duty intervals, and <strong>IL should not extend the current slot time</strong>.</p>\n<p><strong>Inclusion List:</strong> An inclusion list (IL) is a list of transactions that a block proposer commits to including in a block. Depends on the conditional vs unconditional constraint, if these transactions are not included in the block, then the block cannot be considered canonical, assuming honest attesters who will vote against the block. The IL consists of the following options and requirements.</p>\n<ol>\n<li><strong>Satisfactory Requirement</strong>:\n<ul>\n<li><strong>Conditional</strong>: The IL does not need to be satisfied if the target block is full.\n<ul>\n<li><strong>Forward-Looking</strong>: If the IL cannot be satisfied in the current target block, does it still apply to subsequent blocks? <a href=\"https://ethresear.ch/t/cumulative-non-expiring-inclusion-lists/16520\">More in this post</a></li>\n</ul>\n</li>\n<li><strong>Unconditional</strong>: The IL needs to be satisfied. This typically means the IL has its own gas limit.</li>\n</ul>\n</li>\n<li><strong>Satisfactory Time</strong>:\n<ul>\n<li><strong>Same Slot IL</strong>: The IL is satisfied within the same slot, similar to users sending a transactions wanting to be included on chain. With sufficient base fee and tip, we can expect the transaction to be included the slot of. For example, an IL transaction for slot <code>n+1</code> is satisfied in slot <code>n+1</code>.</li>\n<li><strong>Next Slot IL</strong>: The IL is satisfied in the subsequent slot with one slot delay. For example, an IL transaction for slot <code>n+1</code> is satisfied in slot <code>n+2</code>.</li>\n</ul>\n</li>\n<li><strong>IL constructor</strong>: The actor responsible for preparing and broadcasting the IL to the network. This role can be fulfilled by a single entity (like a proposer) or by a committee where the protocol reaches consensus on individual ILs from its members. The consensus of IL may be reached by IL aggregate which represents IL committee’s vote.</li>\n<li><strong>IL Gas Limit</strong>: IL gas limit has an implication on the size of IL which dirrectly affects the network propagation time and node’s verification time.</li>\n<li><strong>IL Ordering In Block</strong>: When the IL becomes part of the block, the transactions may be required to be placed in a specific order. This order could be:\n<ul>\n<li><strong>Top of the Block</strong>: Transactions are placed at the beginning of the block.</li>\n<li><strong>Anywhere in the Block</strong>: Transactions are placed anywhere within the block.</li>\n<li><strong>Bottom of the Block</strong>: Transactions are placed at the end of the block.</li>\n</ul>\n</li>\n<li><strong>Liveness Guarantee</strong> The IL must be made available to the block builder to avoid stalling the chain’s liveness. The delivery method of the IL to the builder varies based on the trust model. If a single person constructs the IL, stricter requirements may be necessary, such as additional attester validation along with the block.</li>\n<li><strong>No Free DA</strong> An IL that has not been satisfied in execution cannot be part of the consensus, as it would grant free DA. Free DA has to be tightly coupled with consensus and should not be mistaken for free bandwidth or temporary data storage. While nodes can use a small amount of bandwidth or store temporary data with anti-dos measures in place, this should not be conflated with free DA.</li>\n</ol>\n<p><strong>Block Builder</strong>: The actor tasked with fulfilling the IL and broadcasting the resulting product (ie. a block that fulfills the IL) over the network. In the case of a solo validator, the block proposer serves as the block builder, and the product is the execution payload of the block. For a MEV-boost validator, the block builder handles the fulfillment, which returns the signed header to proposer, and the relay broadcasts the final block to the network. It is often the case that the block proposer cannot verify the satisfactory fulfillment of the IL when signing the header request. Relays have to verify the payload satisfies IL ahead of time or assume optimistic.</p>\n<p><strong>IL Transaction Invalidation</strong>: Transactions in an IL may become <strong>not includable</strong> at the time of inclusion due to invalidations, such as an incorrect nonce or insufficient balance. This situation can arise under different conditions. For example, when multiple parties are involved in constructing their version of ILs, the transactions from each party might render each other not includable. Similarly, if one party constructs the IL while another party broadcasts the block at the same moment, there can also be invalidations, leading to mutual exclusion of the IL transactions and block transactions.</p>\n<p><strong>Head Block</strong>: Often referred to as the parent block, the IL should be constructed on top of the chain’s head from the perspective of the node. The builder, responsible for constructing the block and satisfying the IL, should also build on top of the head block in order to make sure that block and inclusion list are aligned.<br>\n<strong>Constraint</strong>: If an IL is built on head <code>a</code>, then to satisfy the IL, the builder’s block must also be built on top of head <code>a</code>.</p>\n<h2><a name=\"il-timings-3\" class=\"anchor\" href=\"https://ethresear.ch#il-timings-3\"></a>IL Timings</h2>\n<p><strong>IL Preparation Time</strong>: This is the time required for a party to prepare the IL, which is constructed on top of the head block. The larger the IL may require longer time to prepare.</p>\n<p><strong>IL Propagation Time</strong>: This is the time required for the IL to propagate across the network to other nodes. Factors influencing this time include the size of the IL, the number of ILs (committee size), and the network’s gossip rules.</p>\n<p><strong>IL Verification Time</strong>: This is the time required to verify the IL. The IL must be valid, otherwise builders can get grieved. In some scenarios, attesters must verify the IL before considering the current slot block as the head (. In other cases, the proposer must verify the IL before proposing the next slot block. The point is that some parties must verify the IL beforehand, and it’s crucial to consider who is bearing this cost.</p>\n<p><strong>Block Preparation Time</strong>: This is the time required to build an execution block. The block can be constructed either by the proposer or the builder. The IL’s satisfactory requirements must be met in the block. This means the block builder must verify the IL, parent block and ensure that the block satisfies IL requirements.</p>\n<p><strong>Block Propagation Time</strong>: This is the time taken for a block to be transmitted across the network and received by all participants. It’s crucial that the block is received and verified by attesters promptly, as delays can lead to the block not being considered as the head of the chain, increasing the risk of reorg.</p>\n<p><strong>Block Verification Time</strong>: This is the time taken for a node to verify the block and IL. The focus here is on execution verification time, as consensus verification is typically fast. A block must be verified as execution valid and meet the IL requirements before it can be considered the head of the chain.</p>\n<p>Based on the timing definition provided, we can outline the following dependencies:</p>\n<ul>\n<li>The parent head block <code>n</code> must be released before attestation cut off. The difference is between start of the slot. Head release time = <span class=\"math\">T_{HR}</span></li>\n<li>The head block must be propagated to peers on time. Head propagation time = <span class=\"math\">T_{HP}</span></li>\n</ul>\n<ul>\n<li>The IL constructor must see and validate the parent head block before creating the IL. Head validator time = <span class=\"math\">T_{HV}</span></li>\n<li>The IL must be constructed and released using for example a local mem pool. IL construction time = <span class=\"math\">T_{ILC}</span></li>\n<li>The IL must propagate through the network to reach the builders. IL propagation time = <span class=\"math\">T_{ILP}</span></li>\n<li>The block builder needs to verify the IL before submitting a bid.  IL verification time = <span class=\"math\">T_{ILV}</span>\n<ul>\n<li>This requirement may change in the context of slot auctions.</li>\n</ul>\n</li>\n<li>The proposer must see the bids before submitting a block. Bid propagation time = <span class=\"math\">T_{BP}</span></li>\n<li>The attester must verify the block <code>n+1</code> before considering it as the head. We can reuse head verification time above.</li>\n</ul>\n<p>In short, we could summarize: A single Ethereum slot should not exceed the following durations, ensuring that the end-to-end IL is applied, and the block remains canonical on the chain: <span class=\"math\">SLOT &gt;= T_{HR}+T_{HP}+2 * T_{HV}+T_{ILC}+T_{ILP}+T_{ILV}+T_{BP}</span></p>\n<h1><a name=\"different-versions-of-il-4\" class=\"anchor\" href=\"https://ethresear.ch#different-versions-of-il-4\"></a>Different versions of IL</h1>\n<p>Different versions of IL have varying constraint trade-offs. Some examples taken from <a href=\"https://eips.ethereum.org/EIPS/eip-7547\" rel=\"noopener nofollow ugc\">EIP-7547</a> and <a href=\"https://ethresear.ch/t/fork-choice-enforced-inclusion-lists-focil-a-simple-committee-based-inclusion-list-proposal/19870\">FOCIL</a>.</p>\n<h4><a name=\"eip-7547-in-mev-boost-5\" class=\"anchor\" href=\"https://ethresear.ch#eip-7547-in-mev-boost-5\"></a>EIP-7547 in MEV-Boost</h4>\n<ul>\n<li>The block builders for slot <code>n</code> constructs a block for slot <code>n</code> after verifying the block for slot <code>n-1</code>.</li>\n<li>The block proposer of slot <code>n</code> constructs an IL for slot <code>n+1</code> after verifying the block for slot <code>n-1</code>.</li>\n<li>The IL for slot <code>n+1</code> and the block for slot <code>n</code> may invalidate each other if they are sent by different parties.</li>\n<li>The block proposer/builder of slot <code>n+1</code> requires the IL and the block for slot <code>n</code> to build a block.</li>\n<li>The block proposer of slot <code>n+1</code> needs the IL and the block for slot <code>n</code> to build an IL.</li>\n<li>Attesters for slot <code>n+1</code> need the IL and the block for slot <code>n</code> to attest to the block. The block for slot <code>n+1</code> must link to a valid IL <code>n+1</code>, or it cannot be canonical.</li>\n</ul>\n<h4><a name=\"eip-7547-in-epbs-eip-7732-6\" class=\"anchor\" href=\"https://ethresear.ch#eip-7547-in-epbs-eip-7732-6\"></a>EIP-7547 in ePBS (EIP-7732)</h4>\n<ul>\n<li>The block proposer of slot <code>n</code> selects the builder’s bid of slot <code>n</code> after verifying the execution block for slot <code>n-1</code>.</li>\n<li>The block proposer of slot <code>n</code> constructs an IL for slot <code>n+1</code> after verifying the execution block for slot <code>n-1</code>.</li>\n<li>Since the bid commits to the transactions, the IL for slot <code>n+1</code> and the bid for slot <code>n</code> may conflict. This is different in slot auction.</li>\n<li>The builder reveals the execution block at slot <code>n</code>’s 6-seconds mark.</li>\n<li>Subsequent block builders require the execution block at slot <code>n</code> and the IL for slot <code>n+1</code> to place bids for slot <code>n+1</code>. This is different in slot auction.</li>\n<li>Attesters for slot <code>n+2</code> verify that the execution block for slot <code>n+1</code> satisfies the IL and is valid. We gain an extra slot time for validation due to <a href=\"https://ethresear.ch/t/advantage-of-pipelining-consensus-and-execution-delayed-execution/19668\">delayed execution property</a>.</li>\n</ul>\n<h4><a name=\"focil-in-mev-boost-ignoring-il-aggregation-step-7\" class=\"anchor\" href=\"https://ethresear.ch#focil-in-mev-boost-ignoring-il-aggregation-step-7\"></a>FOCIL in MEV-Boost (Ignoring IL Aggregation Step)</h4>\n<ul>\n<li>The block builder of slot <code>n</code> constructs a block for slot <code>n</code> after verifying the block for slot <code>n-1</code>.</li>\n<li>The IL committee builds the IL for slot <code>n</code> after verifying the block for slot <code>n-1</code>.</li>\n<li>The IL committee for slot <code>n</code> releases the IL during slot <code>n-1</code>.</li>\n<li>Attesters for slot <code>n</code> lock their view on the ILs.</li>\n<li>The builder of slot <code>n</code> includes the IL transactions into the block for slot <code>n</code></li>\n<li>At the start of slot <code>n</code>, the proposer requests the builder’s head, signs it, and broadcasts it.</li>\n<li>Attesters for slot <code>n</code> verify that the block satisfies the IL committee’s requirements according to their locked view in slot <code>n-1</code>.</li>\n</ul>\n<h4><a name=\"focil-in-epbs-same-slot-version-8\" class=\"anchor\" href=\"https://ethresear.ch#focil-in-epbs-same-slot-version-8\"></a>FOCIL in ePBS (Same Slot Version)</h4>\n<ul>\n<li>The block proposer of slot <code>n</code> selects the builder’s bid for slot <code>n</code> after verifying the execution block for slot <code>n-1</code>.</li>\n<li>The IL committee for slot <code>n+1</code> constructs the IL for slot <code>n+1</code> after the builder reveals the execution block for slot <code>n</code>.</li>\n<li>Builders for slot <code>n+1</code> verify the IL and make bids for slot <code>n+1</code>.</li>\n<li>The block proposer of slot <code>n+1</code> selects the builder’s bid for slot <code>n+1</code>.</li>\n<li>Attesters for slot <code>n+2</code> verify that the execution block for slot <code>n+1</code> satisfies the IL and is valid, providing close to an extra slot time due to delayed execution.</li>\n</ul>\n<h4><a name=\"focil-in-epbs-next-slot-version-9\" class=\"anchor\" href=\"https://ethresear.ch#focil-in-epbs-next-slot-version-9\"></a>FOCIL in ePBS (Next Slot Version)</h4>\n<ul>\n<li>The block proposer of slot <code>n</code> selects the builder’s bid for slot <code>n</code> after verifying the execution block for slot <code>n-1</code>.</li>\n<li>The IL committee for slot constructs the IL for slot <code>n+2</code> after the builder reveals the execution block for slot <code>n</code>.</li>\n<li>Builders for slot <code>n+2</code> verify the IL and make bids for slot <code>n+2</code>.</li>\n<li>The block proposer of slot <code>n+2</code> selects the builder’s bid for slot `n+2.</li>\n<li>Attesters for slot <code>n+3</code> verify that the execution block for slot <code>n+2</code> satisfies the IL and is valid, providing close to an extra slot time due to delayed execution.</li>\n</ul>\n<h2><a name=\"il-contentions-10\" class=\"anchor\" href=\"https://ethresear.ch#il-contentions-10\"></a>IL Contentions</h2>\n<p>ILs may compete with initiatives as the following:</p>\n<p><strong>Shorter Slot Time Contentions with IL</strong>: With shorter slot times, ILs may not be constructed and fulfilled on time. A proposer that cannot fulfill an IL results in a liveness fault. One way to address this is to extend the IL satisfactory rule to the next slot or to multiple subsequent slots, but this approach introduces risks of denial-of-service (DoS) attacks and more transaction invalidation concerns. There is a trade-off here.</p>\n<p><strong>Higher Gas Limit Contentions with IL</strong>: With a higher block gas limit, it takes longer to verify the block, which reduces the time available to construct the IL after verifying the block. Additionally, with a higher IL gas limit, it takes longer to propagate and verify the IL, reducing the time available to fulfill the IL by building the block.</p>\n<p><strong>DVT Contentions with IL</strong>: Distributed Validator Technology (DVT) requires more exchanges between validators before signing. This process includes beacon chain duties such as attesting, proposing, and submitting ILs. These additional exchanges require time, and there is a need to ensure that the IL, especially in more complex forms, does not make DVT operations impractical.</p>\n<p><strong>AVS Contentions with IL</strong>: Active Validator Service (AVS) also require more actions from validators. The specific details depend on the AVS implementation, but generally, requiring more time from validators to perform certain tasks can create contention with fulfilling IL obligations.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/inclusion-list-timing-constraints/20198\">Read full topic</a></p>","link":"https://ethresear.ch/t/inclusion-list-timing-constraints/20198","pubDate":"Thu, 01 Aug 2024 16:02:42 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20198"},"source":{"@url":"https://ethresear.ch/t/inclusion-list-timing-constraints/20198.rss","#text":"Inclusion List Timing Constraints"},"filter":false},{"title":"Cross-rollup Synchronous Atomic Execution","dc:creator":"HankyungKo","category":"Layer 2","description":"<ul>\n<li><em>by Hankyung Ko(<a href=\"https://ethresear.ch/u/hankyungko\">@HankyungKo</a>) and Chanyang Ju(<a href=\"https://ethresear.ch/u/wooju\">@wooju</a>), Researcher at <a href=\"https://twitter.com/radius_xyz\" rel=\"noopener nofollow ugc\">Radius</a> . Thanks to</em> <a href=\"https://twitter.com/Hyunxukee\" rel=\"noopener nofollow ugc\"><em>Tariz</em></a> <em>and</em> <a href=\"https://twitter.com/ZeroKnight_eth\" rel=\"noopener nofollow ugc\"><em>AJ</em></a> <em>for reviewing this post.</em></li>\n<li><em>Your feedback and opinions are highly valued.</em></li>\n</ul>\n<p><em>Radius has designed a synchronous atomic execution solution for cross-rollup composability. This development is driven by our commitment to support rollups seeking improved composability and enhanced user experience. We will enable rollups to create their own shared sequencing layer, offering this as a service to make it widely accessible. By doing so, we ensure that atomic execution of bundled transactions is coordinated effectively across participating rollups.</em></p>\n<h1><a name=\"h-1-introduction-1\" class=\"anchor\" href=\"https://ethresear.ch#h-1-introduction-1\"></a>1. Introduction</h1>\n<hr>\n<p>Synchronous atomic execution allows multiple transactions from different rollups to be executed simultaneously and atomically in an all-or-nothing manner, significantly reducing latency compared to sequential execution. A naive approach to executing multiple cross-rollup transactions require each transaction to be finalized sequentially on L1. For <span class=\"math\">n</span> transactions, the total latency would be <span class=\"math\">n</span> times the L1 finalization period. In contrast, <strong><code>synchronous atomic execution</code></strong> enables all transactions to be executed at the same time, significantly reducing latency.</p>\n<p>While executing transactions simultaneously can reduce latency, it may raise concerns about security. For example, in a bundled transaction involving minting-and-burning across different rollups, there’s a risk that the burn could fail while the mint succeeds. To address this, we’ve designed our system to verify the atomicity of bundled transactions faster than the time it takes for block finalization. This approach ensures that security is maintained even with simultaneous execution. Our innovation improves composability across multiple rollups, providing a seamless, efficient, and secure user experience with real-time, all-or-nothing execution of cross-rollup transactions without delays.</p>\n<p>To implement this convenient and secure solution, Radius introduces a shared sequencer for rollups to guarantee the atomic execution of bundled transactions. Users create bundled transactions that depend on transactions across multiple rollups, and the shared sequencer manages the sequencing of bundled transactions for successful execution.</p>\n<blockquote>\n<p><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/point_right.png?v=12\" title=\":point_right:\" class=\"emoji\" alt=\":point_right:\" loading=\"lazy\" width=\"20\" height=\"20\"> It’s important to note that this shared sequencer is not a single entity controlled by Radius, but rather a set formed by aggregating existing sequencers from each rollup. A leader is selected from this set through a predefined process (<a href=\"https://docs.theradius.xyz/testnets/loggia-testnet-with-radius-avs/decentralized-sequencing\" rel=\"noopener nofollow ugc\">reference</a>) to manage sequencing.</p>\n<p>To prevent potential power abuse by the shared sequencer, Radius employs decentralized sequencing techniques, including encrypted mempool (<a href=\"https://ethresear.ch/t/mev-resistant-zk-rollups-with-practical-vde-pvde/12677\">PVDE</a> and <a href=\"https://ethresear.ch/t/radius-skde-enhancing-rollup-composability-with-trustless-sequencing/19185\">SKDE</a>). The shared sequencer has two main functions: determining transaction order and enforcing transaction reverts to maintain bundle atomicity.</p>\n<p>This article details on how our architecture addresses the second function, ensuring atomicity. Preventing potential abuse of the first function, transaction ordering, is also crucial. Radius addresses this concern through the encrypted mempool, ensuring that the shared sequencer cannot abuse its power regarding transaction ordering.</p>\n</blockquote>\n<h2><a name=\"h-1-requirements-of-the-synchronous-atomicity-solution-2\" class=\"anchor\" href=\"https://ethresear.ch#h-1-requirements-of-the-synchronous-atomicity-solution-2\"></a>1) Requirements of the synchronous atomicity solution</h2>\n<ul>\n<li><strong><code>Convenience</code>:</strong> Users can achieve greater benefits by utilizing atomic execution of cross-rollup bundled transactions, without compromising security.\n<ul>\n<li><strong>Bundle transactions</strong>: Users can bundle and execute multiple transactions across different rollups as one.</li>\n<li><strong>Atomic execution:</strong> The bundle transaction is guaranteed to execute simultaneously without failures. If a failure occurs, it is guaranteed to fail simultaneously.</li>\n<li><strong>Fast execution for bundle while maintaining security</strong>: Transactions are guaranteed to be executed faster than sequential execution (where each transaction waits for the previous one to finish). This allows users to strategize their next transactions more quickly. Additionally, atomic execution is cryptographically verified before finalization, ensuring that the security of the transactions is maintained even though they are executed more quickly.</li>\n</ul>\n</li>\n<li><strong><code>Security</code></strong>\n<ul>\n<li><strong>Minimized trust level</strong>: Aims to minimize the amount of trust users must place in key network participants like the shared sequencer and executors by:\n<ul>\n<li>Minimizing the number of parties that need to be trusted.</li>\n<li>Minimizing the duration for which trust is necessary.</li>\n<li>Ensuring early detection and verification of any malicious behavior by the shared sequencer and executors before blockchain finalization.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2><a name=\"h-2-main-idea-3\" class=\"anchor\" href=\"https://ethresear.ch#h-2-main-idea-3\"></a>2) Main Idea</h2>\n<p>We propose an architecture for synchronous atomic execution using the <code>shared sequencer</code>, <code>data availability (DA)</code>, and a <code>verification layer</code>.</p>\n<h3><a name=\"why-shared-sequencer-4\" class=\"anchor\" href=\"https://ethresear.ch#why-shared-sequencer-4\"></a>Why shared sequencer?</h3>\n<ul>\n<li>To satisfy the desired properties of convenience and security, it is necessary to handle bundled transactions across multiple rollups. Therefore, we propose a new entity called the shared sequencer, which is responsible for confirming the blocks of multiple rollups.</li>\n<li>The shared sequencer receives a cross-chain bundle and determines the block order for atomic execution.</li>\n<li>The shared sequencer is responsible to ensure the atomic execution of bundled transactions before confirming the block.</li>\n</ul>\n<h3><a name=\"new-responsibility-of-the-executor-5\" class=\"anchor\" href=\"https://ethresear.ch#new-responsibility-of-the-executor-5\"></a>New responsibility of the executor</h3>\n<ul>\n<li><strong>The executor, in agreement with the shared sequencer, has an added constraint:</strong> it must execute the transaction list committed by the shared sequencer.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/5/553162b8f7a0148ceedbd7bddbf19ce91d944f58.png\" data-download-href=\"https://ethresear.ch/uploads/default/553162b8f7a0148ceedbd7bddbf19ce91d944f58\" title=\"SAE_figure1\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/5/553162b8f7a0148ceedbd7bddbf19ce91d944f58_2_690x130.png\" alt=\"SAE_figure1\" data-base62-sha1=\"c9Eony1QNisRB3JvW0e2JVRmnhu\" width=\"690\" height=\"130\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/5/553162b8f7a0148ceedbd7bddbf19ce91d944f58_2_690x130.png, https://ethresear.ch/uploads/default/optimized/3X/5/5/553162b8f7a0148ceedbd7bddbf19ce91d944f58_2_1035x195.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/5/5/553162b8f7a0148ceedbd7bddbf19ce91d944f58_2_1380x260.png 2x\" data-dominant-color=\"F2F2F1\"></a></div><br>\n[Figure 1] The definition of roles and responsibilities of shared sequencer and executors<p></p>\n<h3><a name=\"conditions-for-synchronous-atomicity-6\" class=\"anchor\" href=\"https://ethresear.ch#conditions-for-synchronous-atomicity-6\"></a>Conditions for synchronous atomicity</h3>\n<ul>\n<li>Synchronous atomicity for bundle transaction is achieved if the following two conditions are independently verified:\n<ol>\n<li>All bundled transaction in the block committed by the shared sequencer should be atomic.</li>\n<li>The executor executes the same block as committed by the shared sequencer.</li>\n</ol>\n</li>\n</ul>\n<h2><a name=\"h-3-our-contributions-7\" class=\"anchor\" href=\"https://ethresear.ch#h-3-our-contributions-7\"></a>3) Our Contributions</h2>\n<ul>\n<li><strong>Designed a synchronous atomic execution solution</strong>:\n<ul>\n<li><strong>Security requirements definition</strong>: We have defined the security requirements for each entity involved in synchronous atomic execution, ensuring that all components operate securely and reliably.</li>\n<li><strong>Architecture design</strong>: We have designed a robust architecture that ensures security and efficiency. This architecture includes:\n<ul>\n<li><strong>User’s bundle transaction</strong>: We defined the structure and format of bundle transactions that users can create. These bundled transactions enable users to execute multiple transactions across different rollups simultaneously, ensuring atomic execution.</li>\n<li><strong>The bundler contract</strong>: We designed and implemented the bundler contract, which is responsible for handling and processing bundled transactions. This contract is called by the shared sequencer, and performs several critical functions:\n<ul>\n<li>Acts as a gateway smart contract for users to call the actual contracts they intend to execute.</li>\n<li>Allows the shared sequencer to enforce transaction reverts to guarantee the atomicity of the bundle transactions.</li>\n<li>Verifies the legitimacy of transactions initially created by the user.</li>\n<li>Charges transaction fees to users.</li>\n</ul>\n</li>\n<li><strong>Coordination process for the shared sequencer</strong>:  We developed a coordination process for the shared sequencer, which includes interaction with the full nodes (simulators) of each rollup. This process ensures that the shared sequencer can effectively manage and sequence transaction across multiple rollups, guaranteeing atomic execution.</li>\n<li><strong>Verification logic</strong>: We defined the verification logic to ensure that all transactions within a bundle meet the defined security requirements before finalization.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Demonstrated the feasibility of the architecture:</strong>\n<ul>\n<li><strong>Implementation</strong>: We have implemented the entire architecture, demonstrating its feasibility and effectiveness. Our implementation includes all components of the synchronous atomic execution solution, from the user’s bundle transaction creation to the coordination process for the shared sequencer.\n<ul>\n<li>The user’s bundled transaction is signed using MetaMask.</li>\n<li>Implemented on two Polygon CDKs:\n<ul>\n<li>Each Polygon CDK has an API that responds to the shared sequencer’s simulation requests.</li>\n<li>Each Polygon CDK has a deployed Bundler contract.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Demo</strong>: The demo scenario involves transferring tokens from Rollup A to Rollup B. In this scenario, the bundled transaction consists of two operations: burning the wrapped token on Rollup A and mint it on Rollup B. This demonstrates the practical application of our solution. (<a href=\"https://x.com/radius_xyz/status/1809120936270123468\" rel=\"noopener nofollow ugc\">Check out our Demo here!</a>)</li>\n</ul>\n</li>\n</ul>\n<h1><a name=\"h-2-definition-8\" class=\"anchor\" href=\"https://ethresear.ch#h-2-definition-8\"></a>2. Definition</h1>\n<hr>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/0/b/0bec5c1463e929939d860e125c34e05cbc6b4c34.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/0bec5c1463e929939d860e125c34e05cbc6b4c34\" title=\"SAE_figure2\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/0/b/0bec5c1463e929939d860e125c34e05cbc6b4c34_2_690x243.jpeg\" alt=\"SAE_figure2\" data-base62-sha1=\"1HtEkouONQUBdF8sbZ5D2nVphFq\" width=\"690\" height=\"243\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/0/b/0bec5c1463e929939d860e125c34e05cbc6b4c34_2_690x243.jpeg, https://ethresear.ch/uploads/default/optimized/3X/0/b/0bec5c1463e929939d860e125c34e05cbc6b4c34_2_1035x364.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/0/b/0bec5c1463e929939d860e125c34e05cbc6b4c34_2_1380x486.jpeg 2x\" data-dominant-color=\"F4F4F4\"></a></div><br>\n[Figure 2] Overview of transaction flow<p></p>\n<blockquote>\n<p><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/pushpin.png?v=12\" title=\":pushpin:\" class=\"emoji\" alt=\":pushpin:\" loading=\"lazy\" width=\"20\" height=\"20\"> <strong>The proposed architecture is based on the following assumptions.</strong></p>\n<ul>\n<li><strong>Scenario</strong>\n<ul>\n<li>Each Bundle Tx consists of two transactions: a <strong>Burn</strong> transaction and a <strong>Mint</strong> transaction of ERC20 contract (rToken), occurring on different chains (inspired by Hyperlane bridge scenario).</li>\n</ul>\n</li>\n<li><strong>Rollups</strong>\n<ul>\n<li>Each rollup has a simulation API implemented.</li>\n<li>The <code>Radius’ Bundler contract</code> is deployed on each rollup.</li>\n<li>The ERC20 rToken contract is also implemented on each rollup.</li>\n<li>The execute function of the Radius’ Bundler contract is accessible only by whitelisted <code>shared sequencers</code>.</li>\n<li>The ERC20 contract (rToken) grants burn and mint access rights to the Radius’ Bundler contract.</li>\n</ul>\n</li>\n<li><strong>Incentives and Penalties</strong> (Future work)\n<ul>\n<li>There are sufficient incentives for correct behavior and penalties for incorrect behavior for the <code>shared sequencer</code> and <code>Executor</code>.</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2><a name=\"h-1-operational-roles-and-security-requirements-of-entities-9\" class=\"anchor\" href=\"https://ethresear.ch#h-1-operational-roles-and-security-requirements-of-entities-9\"></a>1) Operational Roles and Security Requirements of Entities</h2>\n<p>In this section, we define the correct behavior and adversarial behavior of each entity in the architecture. The adversarial behaviors defined here will be analyzed in Section 4.</p>\n<ul>\n<li><strong><code>User</code>:</strong> The entity that generates cross-rollup bundled transactions and sends them to the shared sequencer for atomic execution.\n<ul>\n<li><strong>Adversarial behaviors</strong>\n<ul>\n<li>Creates invalid Bundle Tx:\n<ul>\n<li>The value of the BURN Tx and the MINT Tx do not match.</li>\n<li>Insufficient account balance for the tokens intended to be burned.</li>\n<li>Lacks the ability to pay the gas fee required for executing the transaction on at least one chain.</li>\n<li>Incorrectly signs the Bundle Tx.</li>\n</ul>\n</li>\n<li>Calls the MINT function without the shared sequencer’s assistance:\n<ul>\n<li>Attempts to execute the MINT Tx without creating a Bundle Tx.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong><code>Shared sequencer</code>:</strong> The entity responsible for receiving bundled transactions from users, creating and submitting blocks for multiple rollups, and ensuring the atomic execution of bundled transactions.\n<ul>\n<li><strong>Adversarial behaviors</strong>\n<ul>\n<li>Calls bundler contract without user’s consent.</li>\n<li>Fails to verify whether the Bundle Tx is executed atomically across all rollups.</li>\n<li>Forces the valid Bundle Tx to revert unnecessarily.</li>\n<li>Sends a different transaction list to the executor than the one committed to the DA after confirming the block.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong><code>Executor</code>:</strong> The entity specific to each rollup that executes the transaction list determined by the shared sequencer and uploads the resulting blocks to the Data Availability layer.\n<ul>\n<li><strong>Adversarial behaviors</strong>\n<ul>\n<li>Does not execute the transaction list as confirmed and provided by the shared sequencer.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong><code>Shared Prover</code>:</strong> The entity that generates zero-knowledge proofs to validate the atomic execution of bundled transactions across different chains based on data from the Data Availability layer.</li>\n</ul>\n<h2><a name=\"h-2-additional-components-10\" class=\"anchor\" href=\"https://ethresear.ch#h-2-additional-components-10\"></a>2) Additional Components</h2>\n<ul>\n<li><strong><code>Simulator</code>:</strong> The simulator refers to the full node of each rollup that the shared sequencer communicates with to validate the atomicity of bundled transactions before committing the block. This entity could be the same as the executor mentioned above.</li>\n<li><strong><code>Data Availability Layer (DA)</code>:</strong> The DA is a layer for storing data committed by the shared sequencer and executor to prove their honesty. The shared prover uses this information to verify the honesty of both entities.\n<ul>\n<li>Given a reliable <code>DA</code>, if the shared sequencer and executor each commit the minimum necessary information for the verification of synchronous atomicity to the DA, it can be quickly <code>verified</code> based on that information.</li>\n</ul>\n</li>\n<li><strong><code>Verification layer</code>:</strong> The verification layer is responsible for verifying the proofs generated by the shared prover and assisting with the appropriate actions if verification fails. This layer can either be part of the settlement layer or a dedicated layer focused solely on verification.</li>\n</ul>\n<h1><a name=\"h-3-synchronous-atomic-execution-architecture-11\" class=\"anchor\" href=\"https://ethresear.ch#h-3-synchronous-atomic-execution-architecture-11\"></a>3. Synchronous atomic execution architecture</h1>\n<hr>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/a/ea8cbd6739d8f45ec741d82a13f6f55f94907b38.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/ea8cbd6739d8f45ec741d82a13f6f55f94907b38\" title=\"SAE_figure3\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/a/ea8cbd6739d8f45ec741d82a13f6f55f94907b38_2_690x349.jpeg\" alt=\"SAE_figure3\" data-base62-sha1=\"xsVgev0pCd8U09hhDeFfOLb1CAw\" width=\"690\" height=\"349\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/a/ea8cbd6739d8f45ec741d82a13f6f55f94907b38_2_690x349.jpeg, https://ethresear.ch/uploads/default/optimized/3X/e/a/ea8cbd6739d8f45ec741d82a13f6f55f94907b38_2_1035x523.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/e/a/ea8cbd6739d8f45ec741d82a13f6f55f94907b38_2_1380x698.jpeg 2x\" data-dominant-color=\"F0F0F0\"></a></div><br>\n[Figure 3] The process of synchronous atomic execution architecture<p></p>\n<p>The architecture of Radius’s synchronous atomic execution ensures that bundled transactions are executed in an all-or-nothing manner within the same cycle, coordinated by the shared sequencer. Initially, the shared sequencer’s coordination is trusted optimistically, allowing each transaction to be executed independently on its respective rollup. Subsequently, the atomicity of these transactions is verified before the rollup blocks are finalized on L1.</p>\n<p>It can be divided into three main components: <strong>the bundler contract</strong>, <strong>the coordination process</strong>, and <strong>the verification process</strong>. This section will describe each of these components in detail.</p>\n<h2><a name=\"h-1-smart-contract-for-bundle-transaction-radiuss-bundler-contract-12\" class=\"anchor\" href=\"https://ethresear.ch#h-1-smart-contract-for-bundle-transaction-radiuss-bundler-contract-12\"></a>1) Smart <strong>Contract for Bundle Transaction (Radius’s Bundler contract)</strong></h2>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/0/b/0bec5c1463e929939d860e125c34e05cbc6b4c34.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/0bec5c1463e929939d860e125c34e05cbc6b4c34\" title=\"SAE_figure2\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/0/b/0bec5c1463e929939d860e125c34e05cbc6b4c34_2_690x243.jpeg\" alt=\"SAE_figure2\" data-base62-sha1=\"1HtEkouONQUBdF8sbZ5D2nVphFq\" width=\"690\" height=\"243\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/0/b/0bec5c1463e929939d860e125c34e05cbc6b4c34_2_690x243.jpeg, https://ethresear.ch/uploads/default/optimized/3X/0/b/0bec5c1463e929939d860e125c34e05cbc6b4c34_2_1035x364.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/0/b/0bec5c1463e929939d860e125c34e05cbc6b4c34_2_1380x486.jpeg 2x\" data-dominant-color=\"F4F4F4\"></a></div><br>\n[Figure 4] Overview of transaction flow<p></p>\n<p>We introduce a new smart contract called <code>Radius’s bundler contract</code>, designed to handle and process the users’ bundled transactions. It acts as a gateway to execute the users’ intended contracts.</p>\n<p>For example, as shown in the figure, suppose a user creates a bundled transaction that includes calling the Burn function of the rToken contract on Rollup A and the Mint function of the rToken contract on Rollup B. The shared sequencer receives this bundle and wraps it into a transaction that calls the Radius’s bundler contract. Each rollup then processes the transaction through a series of verification via the Radius contract, ultimately executing the user’s intended contract calls.</p>\n<h3><a name=\"key-features-of-the-bundler-contract-13\" class=\"anchor\" href=\"https://ethresear.ch#key-features-of-the-bundler-contract-13\"></a>Key features of the Bundler contract</h3>\n<ul>\n<li>Acts as a gateway smart contract for users to call the actual contracts they intend to execute.</li>\n<li>Allows the shared sequencer to enforce transaction reverts to guarantee the atomicity of the bundle transactions.</li>\n<li>Verifies the legitimacy of transactions initially created by the user.</li>\n<li>Charges transaction fees to users.</li>\n</ul>\n<h3><a name=\"how-is-the-bundler-contract-implemented-14\" class=\"anchor\" href=\"https://ethresear.ch#how-is-the-bundler-contract-implemented-14\"></a>How is the Bundler contract implemented?</h3>\n<p>The Bundler contract includes the following functions:</p>\n<ul>\n<li><code>execute</code>: Called by the shared sequencer, this function executes the user’s transaction after a series of verifications.</li>\n<li><code>deposit</code>: Allows users to deposit transaction fees in advance.</li>\n<li><code>withdraw</code>: Allows users to withdraw their deposited funds.</li>\n<li><code>addWhitelist</code>: Adds a sequencer to the whitelist.</li>\n<li><code>removeWhitelist</code>: Removes a specific sequencer from the whitelist</li>\n</ul>\n<h3><a name=\"how-is-the-execute-function-implemented-15\" class=\"anchor\" href=\"https://ethresear.ch#how-is-the-execute-function-implemented-15\"></a>How is the <code>execute</code> function implemented?</h3>\n<blockquote>\n<p><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/pushpin.png?v=12\" title=\":pushpin:\" class=\"emoji\" alt=\":pushpin:\" loading=\"lazy\" width=\"20\" height=\"20\"> The input parameters for the execute function are as follows:</p>\n<ul>\n<li><code>from</code>: User address</li>\n<li><code>bundle_tx_list</code>: Information of all transactions within the Bundle Tx</li>\n<li><code>index</code>: Current transaction’s index within the <code>bundle_tx_list</code></li>\n<li><code>bundle_tx_signature</code>: User’s signature for the Bundle Tx</li>\n<li><code>revert_flag</code>: Flag for enforcing revert\n<ul>\n<li>The sequencer includes a <strong>“revert_flag”</strong> in the data, which is set by the sequencer to forcibly revert the user’s transaction. If this value is set to true, the Bundler contract will revert the user’s transaction. This mechanism is designed to ensure the atomicity of the transactions defined in the bundle, preventing the execution of the remaining transactions if even one included in the bundle fails to execute.</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<ol>\n<li>Access control:\n<ul>\n<li>Verify that the call is made by a shared sequencer listed in the whitelist.</li>\n</ul>\n</li>\n<li>Check <code>revert_flag</code>:\n<ul>\n<li>If <code>revert_flag</code> == true, forcibly reverts the transaction.</li>\n</ul>\n</li>\n<li>Verify user’s transaction:\n<ul>\n<li>Decode the transaction’s data field.</li>\n<li>Ensure the user’s deposit is greater than the transaction fee.</li>\n<li>Verify the user’s bundled transaction signature.</li>\n<li>Check the Bundle Transaction validity\n<ul>\n<li>(In this scenario) Verify that the values to be minted and burned are identical.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Deduct transaction fee from user’s deposit (Exception handling required for early reverts):\n<ul>\n<li>Transfer the transaction fee to the shared sequencer from the contract’s deposited assets.</li>\n<li>Deduct the transaction fee from the user’s deposit.</li>\n</ul>\n</li>\n<li>Execute user’s intended contract:\n<ul>\n<li>Call the contract that the user intended to execute.</li>\n</ul>\n</li>\n</ol>\n<h2><a name=\"h-2-coordination-process-for-the-shared-sequencer-16\" class=\"anchor\" href=\"https://ethresear.ch#h-2-coordination-process-for-the-shared-sequencer-16\"></a>2) Coordination process for the shared sequencer</h2>\n<p>Radius’s shared sequencing technique separates the roles of sequencing and execution. The shared sequencer is responsible for deciding the block that atomically executes the user’s bundle transactions, while the block is built by each rollup’s executor. Therefore, if it can be ensured that the shared sequencer has coordinated the atomic execution of the bundle transactions and the executor has executed the block as determined by the shared sequencer, synchronous atomic execution is achieved.</p>\n<p>Coordination involves requesting simulations to the full nodes of each rollup for the respective transaction lists, collecting the simulated results, and, if some transactions within the bundle need to be reverted to maintain atomicity, forcibly reverting the remaining transactions to produce a transaction list that will be executed atomically. In other words, if the simulation results of the two transaction defined in the bundle are not the same (i.e., one is a revert and the other is a success), the transaction that yields a successful result is modified by setting its <code>revert_flag</code> to 1 to forcibly revert it. The transaction list is then updated with the modified transaction.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/d/4d77403de3cd9cacd9e96500481eda982fd6f53f.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/4d77403de3cd9cacd9e96500481eda982fd6f53f\" title=\"SAE_figure5\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/d/4d77403de3cd9cacd9e96500481eda982fd6f53f_2_690x493.jpeg\" alt=\"SAE_figure5\" data-base62-sha1=\"b3ig4ljMV1QnzIgzur7aNEnACcL\" width=\"690\" height=\"493\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/d/4d77403de3cd9cacd9e96500481eda982fd6f53f_2_690x493.jpeg, https://ethresear.ch/uploads/default/optimized/3X/4/d/4d77403de3cd9cacd9e96500481eda982fd6f53f_2_1035x739.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/d/4d77403de3cd9cacd9e96500481eda982fd6f53f_2_1380x986.jpeg 2x\" data-dominant-color=\"F7F6F6\"></a></div><br>\n[Figure 5] Example of a Simulation Process<p></p>\n<p>After finalizing the block, the shared sequencer commits to it. Later, the block information committed by the shared sequencer can be compared with the block executed by the executor to verify that the executor executed the block as agreed. The atomicity of the bundle transactions can be verified by examining the receipt committed by the executor after building the block, which shows the success status of each transaction and ensures that the shared sequencer did not forcibly revert all transactions. These two processes can be verified off-chain using ZKP systems such as RiscZero or SP1. This process is detailed in section 3.3.</p>\n<h2><a name=\"h-3-verification-process-for-the-shared-prover-17\" class=\"anchor\" href=\"https://ethresear.ch#h-3-verification-process-for-the-shared-prover-17\"></a>3) Verification process for the shared prover</h2>\n<p>We design a zk prover called  “Shared Prover” which allows us to verify that the shared sequencer and executor acted in accordance with the protocol’s intentions. The shared prover generates proof for the <strong>atomicity of the bundle transactions</strong> and their <strong>valid execution result</strong> according to the commitment.</p>\n<p>We leverage the DA layer to facilitate the sharing of the sequencer’s commitments and execution data across different chains. Utilizing the DA layer for data storage offers enhanced transparency and accessibility. Based on the DA (Data Availability) data, it can be confirmed that the user’s bundle transactions were executed atomically, and the validity of the execution result on different chains can be verified.</p>\n<p>The shared sequencer communicates with simulators to finalize the the list of transactions to be performed while ensuring atomicity, and the executor processes this list and then it uploads the resulting data to the DA layer.</p>\n<h3><a name=\"information-stored-in-the-da-18\" class=\"anchor\" href=\"https://ethresear.ch#information-stored-in-the-da-18\"></a>Information stored in the DA</h3>\n<ul>\n<li>\n<p><strong>Shared sequencer’s transactions list commitment</strong></p>\n<p>To settle transaction list, shared sequencer commits the following data with signature to the DA:</p>\n<ul>\n<li><code>chain ID</code></li>\n<li><code>block height</code></li>\n<li><code>transaction MPT root</code></li>\n<li><code>bundle transaction list</code></li>\n</ul>\n</li>\n<li>\n<p><strong>Executed Block data</strong></p>\n<p>After a block is executed on each chain, the entity who executed the block uploads the results to the DA.</p>\n</li>\n</ul>\n<h3><a name=\"atomicity-proofs-shared-sequencers-honesty-19\" class=\"anchor\" href=\"https://ethresear.ch#atomicity-proofs-shared-sequencers-honesty-19\"></a>Atomicity proofs (Shared sequencer’s honesty)</h3>\n<p>The shared prover retrieves the block execution results stored in the DA by the executor. In the atomicity proof, the following aspects are verified using zero-knowledge proofs:</p>\n<ul>\n<li>\n<p><strong>All-or-Nothing execution</strong></p>\n<ul>\n<li>\n<p>The receipt status for the bundle transactions must have the same value.</p>\n<p><span class=\"math\">assert! (\\text{receipt}(\\text{tx}_A).\\text{status} = \\text{receipt}(\\text{tx}_B).\\text{status})</span></p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Prevention of arbitrary manipulation of the shared sequencer’s revert flag</strong></p>\n<ul>\n<li>\n<p>There is a potential attack where a valid bundled transaction is reverted entirely, collecting fees from the user without executing the transaction. To prevent this, the atomicity proof checks that not all revert flags for the transactions are set to 1.</p>\n</li>\n<li>\n<p>Therefore, revert flags cannot be set to 1 simultaneously.</p>\n<p><span class=\"math\">\\text{assert!}~(\\text{tx}_A.\\text{revert_flag} \\times \\text{tx}_B.\\text{revert_flag} = 0)</span></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3><a name=\"proof-of-rollup-executors-honesty-20\" class=\"anchor\" href=\"https://ethresear.ch#proof-of-rollup-executors-honesty-20\"></a>Proof of Rollup executor’s honesty</h3>\n<p>To verify that the executor has honestly executed the block according to the transaction list committed be the shared sequencer, the shared prover also includes the relationship between the values committed by the shared sequencer and the MPT root of the transactions uploaded by the executor.</p>\n<h1><a name=\"h-4-security-analysis-21\" class=\"anchor\" href=\"https://ethresear.ch#h-4-security-analysis-21\"></a>4. Security analysis</h1>\n<hr>\n<ul>\n<li><strong>Individual Transaction Validity</strong>: The validity of individual transactions (e.g., insufficient user’s balance) is verified by the Bundler Contract, and transactions will fail if they do not pass this check.</li>\n<li><strong>Bundle Transaction Validity</strong>: The validity of the bundled transaction (e.g., discrepancy between mint and burn amounts) is also verified by the Bundler Contract, and the bundle will fail if it does not pass this check.</li>\n<li><strong>Atomicity of Successful Bundle Transactions</strong>: The shared sequencer is responsible for ensuring the atomicity of successfully executed bundled transactions. The honesty of the shared sequencer is verified by the shared prover and the verification layer.</li>\n<li><strong>Honesty of the Executor</strong>: If the shared sequencer has legitimately determined and committed the blocks for each rollup, the honesty of the executor is verified by the shared prover and the verification layer.</li>\n<li><strong>Prevention of Manipulation</strong>: Additionally, neither the shared prover nor the rollup executor can manipulate the user’s bundle transaction. The user’s signature prevents such tampering.</li>\n<li><strong>Integrity of Proofs and Verification</strong>: The shared prover and the verification layer perform proofs and verification based on authenticated data available in the Data Availability (DA) layer. As a result, they cannot alter the proof content. The worst they can do is to withhold performance.</li>\n</ul>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/cross-rollup-synchronous-atomic-execution/20193\">Read full topic</a></p>","link":"https://ethresear.ch/t/cross-rollup-synchronous-atomic-execution/20193","pubDate":"Thu, 01 Aug 2024 08:57:29 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20193"},"source":{"@url":"https://ethresear.ch/t/cross-rollup-synchronous-atomic-execution/20193.rss","#text":"Cross-rollup Synchronous Atomic Execution"},"filter":false},{"title":"Preconfirmation Bidding Increased Block Values on Holesky","dc:creator":"Evan-Kim2028","category":"Data Science","description":"<h1><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>TLDR</h1>\n<ul>\n<li>Since July 10, mev-commit 0.4.3 has enabled over 800 execution preconfirmations on Holesky, with increasing network participation.</li>\n<li>Providers issued 807 preconfirmations across 415 blocks. Bidders sent 4.24 ETH worth of bids.</li>\n<li>Average mev-commit block value was 0.0093 ETH compared to 0.0044 ETH for a vanilla block.</li>\n<li>Average total preconfirmation bids per mev-commit block was 0.0049 ETH, slightly higher than the average priority fees in the mev-commit block of 0.0045 ETH.</li>\n<li>Data shows that preconf bids contribute significantly to overall block value, despite limited participation for the nascent network.</li>\n</ul>\n<h1><a name=\"overview-2\" class=\"anchor\" href=\"https://ethresear.ch#overview-2\"></a>Overview</h1>\n<p>Since July 10, mev-commit 0.4.3 has been facilitating execution preconfirmations on Holesky tesnet. There has been an upwards trend of participation with currently 1 relay, 3 providers, 9 bidders, and <a href=\"https://validators.mev-commit.xyz/\" rel=\"noopener nofollow ugc\">27,000 validators</a> participating. From July 10 to July 29 (Holesky block range 1902173 to 2027932), providers have issued 807 preconfirmations across 415 Holesky blocks. Some examples of preconfirmation blocks:</p>\n<ul>\n<li><a href=\"https://holesky.etherscan.io/block/1943039\" rel=\"noopener nofollow ugc\">1943039</a> with 21 preconfs and .016 ETH worth of bids</li>\n<li><a href=\"https://holesky.etherscan.io/block/1986732\" rel=\"noopener nofollow ugc\">1986732</a> with 7 preconfs and .04 ETH worth of bids</li>\n<li><a href=\"https://holesky.etherscan.io/block/1986963\" rel=\"noopener nofollow ugc\">1986963</a> with 5 preconfs and .022 ETH worth of bids</li>\n</ul>\n<p>There are two caveats to these initial results. The first is that network participation is still growing. As more actors onboard or opt in to the network, the flow of preconfs is likely to increase. The second caveat is that Holesky does not have the same competitive use cases for preconfs as mainnet, and does not mirror mainnet Ethereum transacting behavior as closely as desired.</p>\n<p>The notebook used for analytics <a href=\"https://github.com/Evan-Kim2028/preconf_analytics/blob/e6fdb9886c600315d531b59cb13e6efccc7d56bd/notebooks/preconfs.ipynb\" rel=\"noopener nofollow ugc\">can be found here</a>. The data for these results can be replicated using the <a href=\"https://github.com/primev/mev_commit_sdk_py\" rel=\"noopener nofollow ugc\">mev-commit-sdk-py</a> repository to collect mev-commit events powered by Hypersync indexer. There is also <a href=\"http://explorer.testnet.mev-commit.xyz/app/discover\" rel=\"noopener nofollow ugc\">an explorer</a>, which is currently in development.</p>\n<h1><a name=\"bidding-behavior-3\" class=\"anchor\" href=\"https://ethresear.ch#bidding-behavior-3\"></a>Bidding Behavior</h1>\n<p>We observe 815 preconfirmation transactions, indicating a niche but valuable market segment compared to 4 million regular transactions. This significant difference suggests preconfs are currently used by a smaller subset of users who are testing preconfirmations.</p>\n<p>A total of 9 bidders participated, sending 4.24 ETH in bids compared to 0.13 ETH in priority fees, with an average preconfirmation bid of 0.005 ETH versus 0.00016 ETH for priority fees on the same transaction, indicating a heavier bidding preference for preconfirmations over priority fees.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/0/4/04d6296e99153e73f2e018b8c21b727582d0c89e.png\" data-download-href=\"https://ethresear.ch/uploads/default/04d6296e99153e73f2e018b8c21b727582d0c89e\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/0/4/04d6296e99153e73f2e018b8c21b727582d0c89e_2_563x500.png\" alt=\"image\" data-base62-sha1=\"GMKt8FrnwQuZOK2nZOerrm5xPE\" width=\"563\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/0/4/04d6296e99153e73f2e018b8c21b727582d0c89e_2_563x500.png, https://ethresear.ch/uploads/default/original/3X/0/4/04d6296e99153e73f2e018b8c21b727582d0c89e.png 1.5x, https://ethresear.ch/uploads/default/original/3X/0/4/04d6296e99153e73f2e018b8c21b727582d0c89e.png 2x\" data-dominant-color=\"E2E5F5\"></a></div><p></p>\n<p>Overall, priority fees totaled 544 ETH with the average preconfirmation bid being 0.0049 ETH, slightly higher than the average priority fee of 0.0045 ETH.</p>\n<h1><a name=\"block-value-4\" class=\"anchor\" href=\"https://ethresear.ch#block-value-4\"></a>Block Value</h1>\n<p>We hypothesized that preconfs would add an increase in block value, resulting in higher validator rewards per mev-commit block. On average, we observe 1.95 preconfirmation transactions per block compared to 42.3 total transactions. Average mev-commit block value was 0.0093 ETH compared to 0.0044 ETH for a vanilla block.</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/d/9/d97a557eefe85c83cef80122c55b8695d60307b1.png\" alt=\"image\" data-base62-sha1=\"v1TI2Nvm8aPn7KBQkY6u4YweQs9\" width=\"542\" height=\"474\"></p>\n<p>One limitation in comparing mev-commit blocks to vanilla Holesky blocks is that there are only ~400 mev-commit blocks compared to ~50,000 Holesky blocks. This is primarily due to the nascent mev-commit network participation rates. Additionally the average bid amount at 0.005 ETH seems on the higher side for Holesky blocks and may not accurately reflect mainnet amounts. However accurately pricing preconfirmations is a difficult task and has to be balanced with the presence of mev spikes on mainnet that can greatly skew results. We are actively researching how to price preconfirmations more effectively.</p>\n<p>We illustrate the block revenue breakdown over several days in the chart below for mev-commit blocks, showing the breakdown between preconfirmation bids and priority fees:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/0/c04ec97bff2be44d3e1f79915157487def6eb685.png\" data-download-href=\"https://ethresear.ch/uploads/default/c04ec97bff2be44d3e1f79915157487def6eb685\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/0/c04ec97bff2be44d3e1f79915157487def6eb685_2_690x409.png\" alt=\"image\" data-base62-sha1=\"rretr7OQhAPC33Y6NOinTJKlrSJ\" width=\"690\" height=\"409\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/0/c04ec97bff2be44d3e1f79915157487def6eb685_2_690x409.png, https://ethresear.ch/uploads/default/original/3X/c/0/c04ec97bff2be44d3e1f79915157487def6eb685.png 1.5x, https://ethresear.ch/uploads/default/original/3X/c/0/c04ec97bff2be44d3e1f79915157487def6eb685.png 2x\" data-dominant-color=\"F2EEEB\"></a></div><p></p>\n<p>Preconfirmation bids significantly contributed to increasing block value. On days such as July 11th, 18th, and 24th, preconfirmation bids markedly boosted total block value, highlighting their substantial impact.</p>\n<p>The charts below illustrate an outsized impact that preconfirmation bids on block value:</p>\n<ul>\n<li><strong>Preconf Bids per Block</strong>: Despite a smaller number of transactions, preconfirmation bids are consistently higher, often reaching up to 0.02 ETH.</li>\n<li><strong>Priority Fees per Block</strong>: While more frequent, priority fees are generally lower, seldom exceeding 0.01 ETH.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/3/43fe06dfdd10788ec3344bc9e8592e3773cf34a6.png\" data-download-href=\"https://ethresear.ch/uploads/default/43fe06dfdd10788ec3344bc9e8592e3773cf34a6\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/3/43fe06dfdd10788ec3344bc9e8592e3773cf34a6_2_690x312.png\" alt=\"image\" data-base62-sha1=\"9HueUEehY9LRUy9vWq2rczt99Vc\" width=\"690\" height=\"312\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/3/43fe06dfdd10788ec3344bc9e8592e3773cf34a6_2_690x312.png, https://ethresear.ch/uploads/default/original/3X/4/3/43fe06dfdd10788ec3344bc9e8592e3773cf34a6.png 1.5x, https://ethresear.ch/uploads/default/original/3X/4/3/43fe06dfdd10788ec3344bc9e8592e3773cf34a6.png 2x\" data-dominant-color=\"DDE8F2\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/0/1078d70fc113dfd6d3a0d5a291ef56a81a12f361.png\" data-download-href=\"https://ethresear.ch/uploads/default/1078d70fc113dfd6d3a0d5a291ef56a81a12f361\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/0/1078d70fc113dfd6d3a0d5a291ef56a81a12f361_2_690x317.png\" alt=\"image\" data-base62-sha1=\"2lIxmTkri3RHFlLatO9KiCOQ7ct\" width=\"690\" height=\"317\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/0/1078d70fc113dfd6d3a0d5a291ef56a81a12f361_2_690x317.png, https://ethresear.ch/uploads/default/original/3X/1/0/1078d70fc113dfd6d3a0d5a291ef56a81a12f361.png 1.5x, https://ethresear.ch/uploads/default/original/3X/1/0/1078d70fc113dfd6d3a0d5a291ef56a81a12f361.png 2x\" data-dominant-color=\"D4E4F0\"></a></div><p></p>\n<p>A notable example is block <a href=\"https://holesky.etherscan.io/block/1943039\" rel=\"noopener nofollow ugc\">1943039</a>, which had the highest number of preconfs with 21 out of 48 transactions. In this block, preconf bid revenue was 0.008 ETH, vastly outpacing the 0.0009 ETH from priority fees.</p>\n<p>These observations demonstrate that even a few preconfirmation transactions can substantially enhance block value due to their higher bid amounts.</p>\n<h1><a name=\"limitations-5\" class=\"anchor\" href=\"https://ethresear.ch#limitations-5\"></a>Limitations</h1>\n<p>As mentioned earlier, the caveats to our initial findings is that Holesky is a testnet and does not have the same types of competitive opportunities as Mainnet. Users tend to have less urgency on Holesky and this is reflected in smaller block sizes and lower priority fees.</p>\n<p>As a result, the preconf bids may not have the same relationship to priority fees on mainnet compared to testnet and may not accurately reflect the user’s true bidding preferences since testnet tokens are being used.</p>\n<h1><a name=\"closing-remarks-6\" class=\"anchor\" href=\"https://ethresear.ch#closing-remarks-6\"></a>Closing Remarks</h1>\n<p>This report initially touches on some preconfirmation bidding behavior observed through early mev-commit usage and offers insights into how preconf bids can increase validator rewards. We plan to follow up with a more detailed report on mev-commit protocol details such as the decay mechanism, rewards and slashing, settlement process, and revenue.</p>\n<p>We plan to onboard more bidders, providers and validators into the mev-commit ecosystem and conduct more tests in an environment that mimics mainnet more closely. We invite you to participate starting at <a href=\"https://docs.primev.xyz/get-started/welcome-to-primev\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Welcome to Primev - Documentation</a></p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/preconfirmation-bidding-increased-block-values-on-holesky/20190\">Read full topic</a></p>","link":"https://ethresear.ch/t/preconfirmation-bidding-increased-block-values-on-holesky/20190","pubDate":"Thu, 01 Aug 2024 02:58:46 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20190"},"source":{"@url":"https://ethresear.ch/t/preconfirmation-bidding-increased-block-values-on-holesky/20190.rss","#text":"Preconfirmation Bidding Increased Block Values on Holesky"},"filter":false},{"title":"Affiliated AMMs and permissionless solving for uniform price batch auctions","dc:creator":"sergioyuhjtman","category":"Decentralized exchanges","description":"<p>The idea of mitigating MEV through batch auctions is as old as the concept of MEV itself. They can both be traced back to <a href=\"https://www.reddit.com/r/ethereum/comments/2d84yv/miners_frontrunning/\" rel=\"noopener nofollow ugc\">this Reddit post</a> from August 2014<sup class=\"footnote-ref\"><a href=\"https://ethresear.ch#footnote-49420-1\" id=\"footnote-ref-49420-1\">[1]</a></sup>. Today, ten years later, this is still an ongoing discussion (see for instance <a href=\"https://ethresear.ch#references\">[UNIX]</a>, <a href=\"https://ethresear.ch#references\">[COW]</a>). To what extent can we reduce MEV by using batch auctions? Can we build batch auction protocols that are better than those existing today? In this article we propose an optimistic point of view for the first question and a candidate affirmative answer to the second question through concrete mechanisms.</p>\n<p><strong>Note:</strong> This article was primarily conceived while working at Flashbots Research for a year spanning 2023 and 2024. Special thanks to Christoph Schlegel.</p>\n<p>The article assumes that the reader is familiar with the concepts of MEV, batch auctions and AMMs in the context of decentralized exchange (DEX).</p>\n<h3><a name=\"a-cooperative-endeavour-between-traders-1\" class=\"anchor\" href=\"https://ethresear.ch#a-cooperative-endeavour-between-traders-1\"></a>A cooperative endeavour between traders</h3>\n<p>In the long term, on-chain traders will use those DEX protocols that are most convenient for them. Ideally, they would trade at market prices with no fee other than the gas cost, equalling the gas price of a transfer. Even though Ethereum’s reality is far from this, in my opinion we shouldn’t rush to dismiss the possibility. Carefully designed smart contracts jointly with off-chain mechanisms might help traders get close to this ideal<sup class=\"footnote-ref\"><a href=\"https://ethresear.ch#footnote-49420-2\" id=\"footnote-ref-49420-2\">[2]</a></sup>. It is likely that these clever designs are not out there yet.</p>\n<p>A very powerful idea is that the smart contract that settles trade orders does so in batches, enforcing uniform clearing prices. This has two fundamental properties:</p>\n<p>(a) The execution does not depend on the ordering of the trade orders.</p>\n<p>(b) Uniform clearing prices ensure that a user trading in one direction receives the same price as the other users trading in that same direction, and is a direct counterpart to the users trading in the other directions, with no room for intermediaries between them.</p>\n<p>The most famous (or even the only) live system implementing this mechanism on a blockchain is CoW protocol <a href=\"https://ethresear.ch#references\">[COW]</a> (see also <a href=\"https://ethresear.ch#references\">[SPEEDEX]</a>). Unfortunately, the sole existence of a uniform price batch auction mechanism is not enough to reach the ideal situation described above. MEV occurs through the reordering, censoring, or insertion of data by a privileged player. While according to (a) reordering trade orders has no effect in our case, it is still possible that privileged players censor and insert data. As a matter of fact, for the players who write a transaction or a block, it will always be physically possible to ignore some data and to include their own data, maybe even pretending that this new data was produced by someone else. Therefore, here we will simply abandon the search of a protocol that logically guarantees no censorship nor privileged insertions. Nevertheless, we will not rule out the possibility of a mechanism such that in normal market conditions and assuming wide adoption, the privileged players will be incentivized not to censor, and enjoy only a marginal advantage from last moment inclusions.</p>\n<p>While CoW protocol has achieved an interesting degree of adoption, it represents only a small fraction of Ethereum DEX activity —<a href=\"https://defillama.com/aggregators/chains/ethereum\" rel=\"noopener nofollow ugc\">around 1% these days</a>. CoW runs a centralized solving protocol.</p>\n<h3><a name=\"uniform-clearing-prices-and-walrasian-equilibrium-2\" class=\"anchor\" href=\"https://ethresear.ch#uniform-clearing-prices-and-walrasian-equilibrium-2\"></a>Uniform clearing prices and Walrasian equilibrium</h3>\n<p>A trade order can be understood as a mathematical function of the clearing prices. The output of the function is the traded amounts for each asset. Given a set of trade orders, there is typically only a limited set of valid clearing price vectors, maybe even only one. This situation perfectly corresponds to the concept of Walrasian equilibrium in a pure exchange market (see <a href=\"https://ethresear.ch#references\">[RGGM]</a>, <a href=\"https://ethresear.ch#references\">[FY]</a> and references therein). A Walrasian equilibrium is a vector of prices at which the supply of each good equals the demand for that good.</p>\n<p>Under very mild hypothesis, we can guarantee the existence of at least one equilibrium. The computational problem of finding equilibrium price vectors translates to the search of fixed points of a certain mapping.</p>\n<h3><a name=\"affiliated-amms-3\" class=\"anchor\" href=\"https://ethresear.ch#affiliated-amms-3\"></a>Affiliated AMMs</h3>\n<p>Decentralized exchange predominantly occurs through automated market makers (AMMs). Many researchers and industry actors have pointed out that AMM liquidity providers (LPs) typically receive worse prices than what the market has to offer at each time. This phenomenon is usually referred to as loss vs. rebalancing (LVR) and described as MEV suffered by the liquidity providers <a href=\"https://ethresear.ch#references\">[LVR]</a>, <a href=\"https://ethresear.ch#references\">[WLVR]</a>.</p>\n<p>There is a natural mechanism to attack this issue that no one seems to have considered yet<sup class=\"footnote-ref\"><a href=\"https://ethresear.ch#footnote-49420-3\" id=\"footnote-ref-49420-3\">[3]</a></sup>. Special AMMs may participate in a uniform price batch auction just like any other trader. These would be the affiliated AMMs. They would allow certain swaps depending on their state and execution price, only admitting the price from the batch. We can think of the allowed swaps as preprogrammed trade orders. To implement this, the contract that executes batches should be prepared to call affiliated swaps passing the batch prices. From now on, let us call <em>W</em> the smart contract that executes batches, i.e. the main contract of the system under consideration. Specially designed affiliated AMMs may be added <em>a posteriori</em> following specifications determined by the <em>W</em> contract<sup class=\"footnote-ref\"><a href=\"https://ethresear.ch#footnote-49420-4\" id=\"footnote-ref-49420-4\">[4]</a></sup>. It is possible that affiliated AMMs benefit by only allowing swaps coming from <em>W</em>. However, we do not need to discuss it at this point: the scheme allows to decouple the problem of choosing a specific AMM design. A multiplicity of them may coexist, and liquidity migration can happen seamlessly at any time. The existence of multiple AMMs affiliated to the same <em>W</em> contract does not entail liquidity fragmentation.</p>\n<p>Assuming wide adoption of the <em>W</em> contract and low incidence of censorship, we have clearing prices that are actual market prices, thus mitigating LVR and MEV.</p>\n<p>\n<br>\n</p><p><img src=\"https://ethresear.ch/uploads/default/original/3X/4/8/4824aef76acd0078806fd0c5418d95c44555a648.png\" data-base62-sha1=\"aicYfI24TxpRpYbEBhFkMxm5CYg\" alt=\"diagram\" width=\"642\" height=\"451\"></p>\n<p></p>\n<h3><a name=\"permissionless-solving-4\" class=\"anchor\" href=\"https://ethresear.ch#permissionless-solving-4\"></a>Permissionless solving</h3>\n<p>Once we have truly accepted that we cannot enforce censorship resistance for trade orders at code level, we may reasonably conjecture that the best we can do is to open the gates as much as possible in order to minimize censorship and democratize the system. The proposal is to let <em>W</em> allow anyone to execute a batch, as long as there are no price inconsistencies within each block. The block proposers, as always, will exercise their right to choose the transactions they prefer, possibly through a PBS mechanism <a href=\"https://ethresear.ch#references\">[PBS]</a>, <a href=\"https://ethresear.ch#references\">[MEV-BOOST]</a>. This feature achieves the maximum degree of decentralization possible at smart contract level for a batch auction system. The auction will occur at block building level. This is analogous to the usual permissionless access to AMMs, which is only regulated by the PBS apparatus or whatever mechanism adopted by the block proposers. Another example is UniswapX: their reactors allow anyone to be a <a href=\"https://docs.uniswap.org/contracts/uniswapx/guides/createfiller\" rel=\"noopener nofollow ugc\">filler</a>, though they don’t enforce uniform clearing prices.</p>\n<p>Let us explain why it is reasonable to expect that this mechanism will work well, i.e., that potential price manipulations by censoring orders are expected to be under control. The flow of the reasoning is as follows. We will first imagine the system flourished, running a large portion of Ethereum’s DEX volume. We will try to visualize this scenario and assess whether it is stable or if we should expect frequent price manipulations. Let us list some properties of the flourished scenario:</p>\n<p><strong>(1)</strong> Since there are many important tokens on Ethereum blockchain, we expect to have a main cluster of several tokens interconnected by swaps at each batch. This is desirable because it means the liquidity in one pair can benefit traders in other pairs (e.g., an order in pair A/B can be settled against orders in pairs B/C and C/A).</p>\n<p><strong>(2)</strong> By looking at how prices vary, it turns out that very-short-term volatility is easy to estimate. Only as an example, on a normal day the price of ETH measured in USD typically varies less than 0.1% in a 12s period, with some larger jumps occasionally. Uninformed traders may use this kind of magnitude for the slippage tolerance. Furthermore, public tools that monitor real time price movements can aid users to reduce the slippage tolerance depending on their preferences. Meanwhile, informed traders doing statistical arbitrage or plain arbitrage are expected to use very low values for the slippage tolerance when trading liquid assets. This will set a tight bound on the bounty that a malicious solver can obtain by deviating the price.</p>\n<p><strong>(3)</strong> We may assume the existence of honest solvers. As usual, the batch that generates more income for the block proposer should make it to the chain. Honest solvers will aim to maximize that income by maximizing inclusion. They will frequently need to discard some orders for various reasons, such as limited block space, or computation deadlines. As a result, we will often have more than one honest proposed batch. Trusted execution environments can be useful in increasing the transparency of honest solvers.</p>\n<p>When a malicious solver tries to manipulate the price, they have to beat the best honest solution. To this end, they will censor every order in one direction for a given pair A/B exceeding certain price threshold. By doing so, they will not only miss out on the gas fees of the censored orders, but also on orders in other pairs due to operating away from the market equilibrium prices (recall (1)). Because of this and (2) it is possible that in most cases it will not be profitable to manipulate the prices of the batch. In addition, we may have other off-chain mechansims to further prevent malicious solving. One such mechanism can be to use private channels between traders and honest solvers in certain cases.</p>\n<h3><a name=\"mev-a-zoom-out-analysis-5\" class=\"anchor\" href=\"https://ethresear.ch#mev-a-zoom-out-analysis-5\"></a>MEV: a zoom-out analysis</h3>\n<p>Total MEV extraction from Ethereum has been stable during the last two years, at levels above 250 kETH per year<sup class=\"footnote-ref\"><a href=\"https://ethresear.ch#footnote-49420-5\" id=\"footnote-ref-49420-5\">[5]</a></sup>. During this period, there haven’t been many innovations generating optimism about MEV reduction. This has led many people to believe that such levels of MEV are inevitable. The fundamental economic reason for the existence of MEV can be summarized by the concept of block proposer monopoly. If traders want to improve their situation, they need to coordinate by adopting a mechanism that gives them more bargaining power, a trade union. This is the principle underlying the concrete proposals presented here. A system that integrates the different types of liquidity and unifies the execution prices helps traders coordinate their orders around true market prices as described in (2).</p>\n<p>Reducing the incidence of MEV would be a great achievement, since it would allow the DEX volume to grow. On-chain trading would become more convenient than centralized alternatives in many cases, thus increasing the global value of the blockchain.</p>\n<h3><a name=\"final-remarks-6\" class=\"anchor\" href=\"https://ethresear.ch#final-remarks-6\"></a>Final remarks</h3>\n<p>(I) The above description of <em>W</em> is incomplete. Possibly the most important undefined aspect is how to cover gas and trade fees (by <em>gas fee</em> we mean the cost of gas usage as if it were a transfer). What kind of regulations should <em>W</em> implement regarding the operational cost or trade fees? Can the system work well at zero trade fee? See footnote [2]. These questions don’t seem very easy to answer. Fortunately, we will be able to continue iterating theory and practice.</p>\n<p>(II) If there are non-affiliated AMMs coexisting with <em>W</em>, the solvers of <em>W</em> can extract profit from them. Every time there is a price movement, it will be possible to find surplus-generating solutions. To find them, they need to consider non-affiliated AMMs as virtual agents of the batch, following a procedure explained in <a href=\"https://ethresear.ch#references\">[FY]</a>. This mathematical fact should act as an attractor of liquidity from traditional to affiliated AMMs.</p>\n<h3><a name=\"references-7\" class=\"anchor\" href=\"https://ethresear.ch#references-7\"></a>References</h3>\n<p><strong>[COW]</strong> CoW protocol, <a href=\"https://docs.cow.fi/cow-protocol\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">CoW Protocol | CoW Protocol Documentation</a>;</p>\n<p>Felix Leupold, <em>Gnosis Protocol v2 Fighting the MEV Crisis with Batch Auctions one CoW at a time</em>, <a href=\"https://www.youtube.com/watch?v=6MfcZGVeQsQ\" rel=\"noopener nofollow ugc\">https://www.youtube.com/watch?v=6MfcZGVeQsQ</a></p>\n<p><strong>[CF]</strong> Andrea Canidio, Robin Fritsch, <em>Arbitrageurs’ profits, LVR, and sandwich attacks: batch trading as an AMM design response</em>, <a href=\"https://arxiv.org/abs/2307.02074\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">[2307.02074] Arbitrageurs' profits, LVR, and sandwich attacks: batch trading as an AMM design response</a></p>\n<p><strong>[FB2]</strong> Philip Daian, Steven Goldfeder, Tyler Kell, Yunqi Li, Xueyuan Zhao, Iddo Bentov, Lorenz Breidenbach, Ari Juels, <em>Flash Boys 2.0: Frontrunning, Transaction Reordering, and Consensus Instability in Decentralized Exchanges</em> <a href=\"https://arxiv.org/abs/1904.05234\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">[1904.05234] Flash Boys 2.0: Frontrunning, Transaction Reordering, and Consensus Instability in Decentralized Exchanges</a></p>\n<p><strong>[FY]</strong> Sergio Yuhjtman, Flashbots, <em>Walraswap: a solution to uniform price batch auctions</em>, <a href=\"https://arxiv.org/abs/2310.12255\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">[2310.12255] Walraswap: a solution to uniform price batch auctions</a></p>\n<p><strong>[LVR]</strong> Jason Milionis, Ciamac C. Moallemi, Tim Roughgarden, Anthony Lee Zhang, <em>Automated Market Making and Loss-Versus-Rebalancing</em>, <a href=\"https://arxiv.org/pdf/2208.06046\" rel=\"noopener nofollow ugc\">https://arxiv.org/pdf/2208.06046</a></p>\n<p><strong>[MEV-BOOST]</strong> Flashbots, <em>MEV-Boost in a Nutshell</em>, <a href=\"https://boost.flashbots.net/\" rel=\"noopener nofollow ugc\">https://boost.flashbots.net/</a></p>\n<p><strong>[PBS]</strong> Ethereum Foundation, <em>Proposer-builder separation</em>, <a href=\"https://ethereum.org/en/roadmap/pbs/\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Proposer-builder separation | ethereum.org</a></p>\n<p><strong>[RGGM]</strong> Geoffrey Ramseyer, Mohak Goyal, Ashish Goel, David Mazières,</p>\n<p><em>Augmenting Batch Exchanges with Constant Function Market Makers</em>, <a href=\"https://arxiv.org/abs/2210.04929\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">[2210.04929] Augmenting Batch Exchanges with Constant Function Market Makers</a></p>\n<p><strong>[SPEEDEX]</strong> Geoffrey Ramseyer, Ashish Goel, and David Mazières, <em>SPEEDEX: A Scalable, Parallelizable, and Economically Efficient Decentralized EXchange</em>, <a href=\"https://www.usenix.org/conference/nsdi23/presentation/ramseyer\" rel=\"noopener nofollow ugc\">https://www.usenix.org/conference/nsdi23/presentation/ramseyer</a>, <a href=\"https://stellar.org/blog/developers/building-speedex-a-novel-design-for-decentralized-exchanges\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Stellar | Building SPEEDEX – A Novel Design for a Scalable Decentralized Exchange</a></p>\n<p><strong>[UNIX]</strong> Hayden Adams, Noah Zinsmeister, Mark Toda, Emily Williams, Xin Wan, Matteo Leibowitz, Will Pote, Allen Lin, Eric Zhong, Zhiyuan Yang, Riley Campbell, Alex Karys, Dan Robinson, <em>UniswapX</em> <a href=\"https://uniswap.org/whitepaper-uniswapx.pdf\" rel=\"noopener nofollow ugc\">https://uniswap.org/whitepaper-uniswapx.pdf</a></p>\n<p><strong>[WLVR]</strong> Cow DAO, <em>What is Loss-Versus-Rebalancing (LVR)?</em>, <a href=\"https://cow.fi/learn/what-is-loss-versus-rebalancing-lvr\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">What is Loss-Versus-Rebalancing (LVR)? - CoW DAO</a></p>\n<hr class=\"footnotes-sep\">\n\n<ol class=\"footnotes-list\">\n<li id=\"footnote-49420-1\" class=\"footnote-item\"><p>Though the origin of the name MEV and its systematic study started at <a href=\"https://ethresear.ch#references\">[FB2]</a>. <a href=\"https://ethresear.ch#footnote-ref-49420-1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"footnote-49420-2\" class=\"footnote-item\"><p>An example of a scenario close to this ideal is to allow a small trade fee that is sublinear in the traded amount. <a href=\"https://ethresear.ch#footnote-ref-49420-2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"footnote-49420-3\" class=\"footnote-item\"><p>The same general approach can be found in <a href=\"https://ethresear.ch#references\">[CF]</a>, as is apparent from the title. However the concrete mechanism described there is different from the one proposed here. Additionally, <a href=\"https://ethresear.ch#references\">[RGGM]</a> studies uniform price batches where AMMs swap at the prices of the batch. <a href=\"https://ethresear.ch#footnote-ref-49420-3\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"footnote-49420-4\" class=\"footnote-item\"><p>This can be implemented without calling ERC20 approvals between contracts. <a href=\"https://ethresear.ch#footnote-ref-49420-4\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"footnote-49420-5\" class=\"footnote-item\"><p>Most of the extracted MEV is being distributed through MEV-BOOST. See some numbers at <a href=\"https://mevboost.pics/\" rel=\"noopener nofollow ugc\">https://mevboost.pics/</a> and <a href=\"https://eigenphi.io/\" rel=\"noopener nofollow ugc\">https://eigenphi.io/</a>. <a href=\"https://ethresear.ch#footnote-ref-49420-5\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n            <p><small>4 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/affiliated-amms-and-permissionless-solving-for-uniform-price-batch-auctions/20187\">Read full topic</a></p>","link":"https://ethresear.ch/t/affiliated-amms-and-permissionless-solving-for-uniform-price-batch-auctions/20187","pubDate":"Wed, 31 Jul 2024 22:17:33 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20187"},"source":{"@url":"https://ethresear.ch/t/affiliated-amms-and-permissionless-solving-for-uniform-price-batch-auctions/20187.rss","#text":"Affiliated AMMs and permissionless solving for uniform price batch auctions"},"filter":false},{"title":"Ethereum + Industry of Integrations (IOI)","dc:creator":"knev","category":"Layer 2","description":"<p>(This is my first post here, so I hope that I have not missed any protocol)</p>\n<p>I’ve been integrating systems using IPSME, which lead to the Industry of Integrations concept <a href=\"https://root-interface.se/IOI\" rel=\"noopener nofollow ugc\">IOI</a>. IPSME defines an evolutionary architecture for integrations developed by the community.</p>\n<p>Demos of my work can be found here:<br>\n            <iframe src=\"https://www.youtube.com/embed/videoseries?list=PLc_eusB5PhcwzCIWFj3iLxlaRTBSEEIEG&amp;wmode=transparent&amp;rel=0&amp;autohide=1&amp;showinfo=1&amp;enablejsapi=1\" width=\"480\" height=\"360\" frameborder=\"0\" allowfullscreen=\"\" class=\"youtube-onebox\" seamless=\"seamless\" sandbox=\"allow-same-origin allow-scripts allow-forms allow-popups allow-popups-to-escape-sandbox allow-presentation\"></iframe>\n</p>\n<p>The concept of the IOI is such that: if any two system interfaces (APIs) are known and accessible, that (via the conventions of <a href=\"https://ipsme.dev\" rel=\"noopener nofollow ugc\">IPSME</a>) a translation can be created integrating the two APIs …​ And! That that translation can be monetized.</p>\n<p>The Ethereum blockchain is often linked to Oracles or Oracles services that are off-chain. AFAIK, Ethereum already support a pubsub (the basis for IPSME). The question is then if an IOI can be created within the Ethereum network. Namely, can integrations to external services be smart contracts so that integrations are on-chain and are re-usable by other developers. Is it possible that smart contract integration contains the logic so that the original developer can possibly monetize off building the integration. If the integrations can be reused, then the complexity for integrating with external systems can be reduced through the property of transitivity i.e., if A integrates with B and B with C, then A is integrated with C.</p>\n<p>I’m interested in doing exploratory research to see if IOI can be applied to Web3. I would like to ask here:</p>\n<ul>\n<li>Does this idea sound feasible with the Ethereum network?</li>\n<li>Are smart contacts powerful enough for protocol communication?</li>\n<li>Is it correct that Ethereum supports pubsub and can it be utilized for this?</li>\n<li>Would this idea alleviate the need for Oracle services/networks?</li>\n</ul>\n<p>I’m looking forward to your feedback.</p>\n            <p><small>7 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/ethereum-industry-of-integrations-ioi/20167\">Read full topic</a></p>","link":"https://ethresear.ch/t/ethereum-industry-of-integrations-ioi/20167","pubDate":"Sun, 28 Jul 2024 19:52:10 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20167"},"source":{"@url":"https://ethresear.ch/t/ethereum-industry-of-integrations-ioi/20167.rss","#text":"Ethereum + Industry of Integrations (IOI)"},"filter":false},{"title":"ePBS Metagame: SSP peacekeeping and alternative public service","dc:creator":"maxkoeg","category":"Economics","description":"<h3><a name=\"introduction-1\" class=\"anchor\" href=\"https://ethresear.ch#introduction-1\"></a><strong>Introduction</strong></h3>\n<p>Alongside Enshrined Proposer-Builder Separation, MEV-Burn is expected to produce a major shift in many on-chain economic and social dynamics. From reducing rugpool incentives to making ReOrg’s even less profitable, this rollout is sure to provide some tangible improvements to the Ethereum protocol, but what seems to get all too frequently overlooked is the on-chain behavioral impact.</p>\n<p>If you haven’t already, I would <em>strongly</em> recommend taking a peek at both <a href=\"https://ethresear.ch/t/dr-changestuff-or-how-i-learned-to-stop-worrying-and-love-mev-burn/17384\">how i learned to stop worrying and love mev-burn</a> by <a href=\"https://ethresear.ch/u/mikeneuder\">Mike Neuder</a>, and <a href=\"https://ethresear.ch/t/burn-incentives-in-mev-pricing-auctions/19856\">Burn incentives in MEV pricing auctions</a> by <a href=\"https://ethresear.ch/u/aelowsson\">aelowsson</a> as they both inspired me to write this piece and may help decipher some of the more technical details.</p>\n<p>As stated in <a href=\"https://ethresear.ch/u/aelowsson\">aelowsson</a>’s <a href=\"https://ethresear.ch/t/burn-incentives-in-mev-pricing-auctions/19856\">Burn incentives in MEV pricing auctions</a> there are five types of potential MEV-Burners within pricing auctions:</p>\n<aside class=\"quote no-group\" data-username=\"aelowsson\" data-post=\"1\" data-topic=\"19856\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://ethresear.ch/user_avatar/ethresear.ch/aelowsson/48/7611_2.png\" class=\"avatar\"><a href=\"https://ethresear.ch/t/burn-incentives-in-mev-pricing-auctions/19856/1\">Burn incentives in MEV pricing auctions</a></div>\n<blockquote>\n<p>(A) Public good builder, (B) For-profit public good builder, (C) Extortion racket, (D) Staker-initiated griefing, (E) Staker-initiated griefing cartel.</p>\n</blockquote>\n</aside>\n<h3><a name=\"pgb-overview-2\" class=\"anchor\" href=\"https://ethresear.ch#pgb-overview-2\"></a><strong>PGB Overview</strong></h3>\n<p>Narrowing in on the Public Goods division, there are several ways to be considered a Public Goods Builder; one being burn rates. Simply put, the more profits a builder dedicates to burning, the more ‘ultrasound’ Ethereum gets, the more deflationary Ether is, and ultimately, the more service is done to the public. This could be a strategy chosen over a For-Profit Builder if the operator determines that the potential social credit outweighs the mere profit a For-Profit Builder would contribute. Once again this motivation would apply to another type of Public Good Builder, an ‘Organic’ Builder. Instead of contributing high burn rates, this builder would rather exclude toxic MEV such as Sandwitching or even swear off censorship, creating a stronger Ethereum protocol rather than just making Ether more economically plausible. Both would be critical to maintaining the integrity and utility of Ethereum, and both can be used in harmony or to different degrees.</p>\n<p>In order for a PGB to be nominated to build a block, both a validator would need to value its reputation/social credit over its slot profit and a builder would go through the trouble to construct a public service block. Due to the random nature of POS, even if a validator were to choose a PGB for its block construction it would <em>not</em> experience a epoch-over-epoch profit increase, but a builder may. This is touched on later, but the social credit a PGB acquires could bring in more <em>business</em> while the randomness of validation ensures that a validator would not.</p>\n<p>Some of these public service examples have already been theorized, and many tend to restrict public good opportunities to <em>just</em> these examples. If you take anything away from this article, know that this ePBS social layer may be more dynamic than many predict it to be.</p>\n<h3><a name=\"case-study-3\" class=\"anchor\" href=\"https://ethresear.ch#case-study-3\"></a><strong>Case Study</strong></h3>\n<p>When choosing a block builder, validators have a choice; a choice of image; a choice of profit; and ultimately a choice that will contribute to the ePBS social layer. Once again, public service can be attractive to many builders still establishing their image. Potential for this public service can be found even in the ePBS vulnerability of Staker-initiated griefing. (theorized by <a href=\"https://ethresear.ch/u/aelowsson\">aelowsson</a>) Simply put, SSPs will do anything to remain the most profitable staking model, even if they need to sabotage or grief competing validators. By outbidding other builders, SSP-sponsored builders can achieve the slot held by an opposing validator and tank opposing SSP rewards. This then reduces the average user rewards for competing SSPs and drives users (and fees) to their own platform. One example of alternative public service resides within SSP peacekeeping. By reducing burn rates and including all MEV (including toxic) a for-profit model can be derived. Using liquidity developed via this method can then be used to outbid suspected SSP griefers or even direct bidding aggression at any SSP-sponsored builder, further enforcing ePBS and preventing large validators and builders from being run together again. However, looking past technical difficulties such as identifying SSP builders, this method also proves to be inefficient, as it offers minimal public credit, due to the fact it leverages harmful building practices to enforce SSP unity.</p>\n<h3><a name=\"pgb-efficiency-4\" class=\"anchor\" href=\"https://ethresear.ch#pgb-efficiency-4\"></a><strong>PGB Efficiency</strong></h3>\n<p>The efficiency of a public goods builder or PGB is multidimensional, to say the least. Two sections I’ll touch on are popularity efficiency and network improvement-based efficiency.</p>\n<p>PBE or Population-Based Efficiency is the simpler of the two and can be represented by the following equation:</p>\n<div class=\"math\">\nE = \\frac{pq}{ra}\n</div>\n<p>This equation combines a popularity index (<span class=\"math\">\\frac{q}{a}</span>) and a profit margin (<span class=\"math\">\\frac{p}{r}</span>); where <span class=\"math\">E</span> is relative efficiency, <span class=\"math\">p</span> is average slot profits, <span class=\"math\">q</span> is average builder pick rate after profit expenditure, <span class=\"math\">r</span> is average slot revenue and a is average builder pick rate before profit expendature.</p>\n<p>This equation represents the efficiency of a PGB’s ‘social marketing’. By sacrificing some slot profit a PGB can increase its pick rates and potentially increase its epoch-over-epoch profit or even just control more of the builder market. <em>Of course, all the while serving the Ethereum public.</em></p>\n<p>Another form of efficiency modeling is NIBE or Network Improvement Based Efficiency. This model bases the efficiency of a PGB on its actual public service. However, the idea is harder to put an equation behind, as each public service action contributes varying improvements to the network and each have their own relative values.</p>\n<h3><a name=\"the-social-layer-5\" class=\"anchor\" href=\"https://ethresear.ch#the-social-layer-5\"></a><strong>The Social Layer</strong></h3>\n<p>As ePBS rolls out and additional features like MEV burn hit the network, it’s clear that countless social impacts will arise. From SSP sabotage to even the PGB social dynamic, there are many opportunities for cliques, groups, and cartels to form. However, no matter what social problems may arise, any reputable builder will find a way to negate any nefarious builder patterns, and any reputable validators will find a way to support any honest builders. Ultimately, the idea of social credibility and the value of PGB’s may balance the many Immiscible groups that are predicted to form after the introduction of ePBS and MEV burn.</p>\n<p>Concluding this paper I would like to, once again, thank both <a href=\"https://ethresear.ch/u/aelowsson\">aelowsson</a> and <a href=\"https://ethresear.ch/u/mikeneuder\">Mike Neuder</a> for their wonderful research on MEV burn and pricing auctions respectively. Between PGB dynamics and ePBS metagame, there’s so much more to uncover in this field, so I would like to end by wrapping up this research on PGB dynamics and the resulting social layer by reminding everyone that there is still a world of research to be done.</p>\n            <p><small>5 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/epbs-metagame-ssp-peacekeeping-and-alternative-public-service/20162\">Read full topic</a></p>","link":"https://ethresear.ch/t/epbs-metagame-ssp-peacekeeping-and-alternative-public-service/20162","pubDate":"Sat, 27 Jul 2024 18:47:18 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20162"},"source":{"@url":"https://ethresear.ch/t/epbs-metagame-ssp-peacekeeping-and-alternative-public-service/20162.rss","#text":"ePBS Metagame: SSP peacekeeping and alternative public service"},"filter":false},{"title":"Rollup-Centric Considerations of Based Preconfimations","dc:creator":"CeciliaZ030","category":"Layer 2","description":"<p><em>Special thanks to <a href=\"https://x.com/Brechtpd\" rel=\"noopener nofollow ugc\">Brecht Devos</a>, <a href=\"https://twitter.com/linoscope\" rel=\"noopener nofollow ugc\">Lin Oshitani</a>, <a href=\"https://twitter.com/ConorMcMenamin9\" rel=\"noopener nofollow ugc\">Conor McMenamin</a>, <a href=\"https://medium.com/@jonas.bostoen\" rel=\"noopener nofollow ugc\">Jonas Bostoen</a>, <a href=\"https://twitter.com/ccpamatt\" rel=\"noopener nofollow ugc\">Christian Matt</a> for the reviews <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/tada.png?v=12\" title=\":tada:\" class=\"emoji\" alt=\":tada:\" loading=\"lazy\" width=\"20\" height=\"20\"></em></p>\n<p>TLDR;<br>\nThis article presents <a href=\"https://x.com/gwyneth_taiko\" rel=\"noopener nofollow ugc\">Gwyneth</a> from the <a href=\"https://x.com/taikoxyz\" rel=\"noopener nofollow ugc\">Taiko Labs</a>.  We outline the Taiko chain setup, discuss the profitability and timeliness of L2 block building, and explore how implementations of preconfirmations can configure blocktime and more efficient data publishing. We also address the issue of nondeterministic proposals caused by multiple preconfirmers through leader election, which affect UX for builders and users. The designs in this article are subject to change.</p>\n<h2><a name=\"background-the-simplest-taiko-chain-1\" class=\"anchor\" href=\"https://ethresear.ch#background-the-simplest-taiko-chain-1\"></a>Background: The Simplest Taiko Chain</h2>\n<p>At present, Taiko Labs is subsidizing block production by running proposers, effectively burning ETH to maintain a fast and inexpensive network. With that in mind, our effort on preconfirmations needs to be expedited, as we aim to facilitate profitable block building in the community without compromising security and throughput. This is the basic setup of the Taiko chain:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/1/f196c6e6be939ac54173b7e6802df9776c2728b6.png\" data-download-href=\"https://ethresear.ch/uploads/default/f196c6e6be939ac54173b7e6802df9776c2728b6\" title=\"Untitled (4)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/1/f196c6e6be939ac54173b7e6802df9776c2728b6_2_517x294.png\" alt=\"Untitled (4)\" data-base62-sha1=\"ytc6J9Llv0hG4rllfObXSm09Wse\" width=\"517\" height=\"294\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/1/f196c6e6be939ac54173b7e6802df9776c2728b6_2_517x294.png, https://ethresear.ch/uploads/default/optimized/3X/f/1/f196c6e6be939ac54173b7e6802df9776c2728b6_2_775x441.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/f/1/f196c6e6be939ac54173b7e6802df9776c2728b6_2_1034x588.png 2x\" data-dominant-color=\"FBFAFA\"></a></div><p></p>\n<ul>\n<li>\n<p>Decentralized proposers run their <a href=\"https://docs.taiko.xyz/core-concepts/taiko-nodes/\" rel=\"noopener nofollow ugc\">taiko-geth</a> to sync with the L2 mempool.</p>\n</li>\n<li>\n<p>When a batch of Tx constitutes a <strong>profitable block</strong>, the rational proposer <a href=\"https://github.com/taikoxyz/taiko-mono/blob/b89e97b1cd7795753bba57b8ca6caf8a77e22613/packages/protocol/contracts/L1/ITaikoL1.sol#L14\" rel=\"noopener nofollow ugc\">submits this block</a> to L1.</p>\n<ul>\n<li>The profitable criteria is the total tip collected from all Tx plus their MEV covers the costs to interact with L1 and prover:<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/6/261274c74370de26d6ec593f649377533be6ea83.png\" data-download-href=\"https://ethresear.ch/uploads/default/261274c74370de26d6ec593f649377533be6ea83\" title=\"Screen Shot 2024-07-05 at 12.54.04 PM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/6/261274c74370de26d6ec593f649377533be6ea83_2_690x50.png\" alt=\"Screen Shot 2024-07-05 at 12.54.04 PM\" data-base62-sha1=\"5qNGx5ZLfqOs6m4v0pYvbaWQ16b\" width=\"690\" height=\"50\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/6/261274c74370de26d6ec593f649377533be6ea83_2_690x50.png, https://ethresear.ch/uploads/default/optimized/3X/2/6/261274c74370de26d6ec593f649377533be6ea83_2_1035x75.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/2/6/261274c74370de26d6ec593f649377533be6ea83_2_1380x100.png 2x\" data-dominant-color=\"F3F3F3\"></a></div></li>\n</ul>\n</li>\n<li>\n<p>Taiko smart contract on L1 contains the decentralized ledger of L2 Tx batches. These batches will, inevitably, contain invalid Tx with vanilla proposing strategy, since the sequencing is not coordinated. For example:</p>\n<ul>\n<li>L2-75 has a Tx transferring 100 ETH from Alice to Bob without Alice’s correct signature</li>\n<li>L2-76 and 77 both contain a Tx from Cassy with nonce equaling 9;</li>\n</ul>\n<p>In such cases,  <a href=\"https://github.com/taikoxyz/taiko-mono/tree/ec6c179967b9ac93cd967ff3a1fe8b331fdb8256/packages/taiko-client\" rel=\"noopener nofollow ugc\">taiko-client</a>, similar to Ethereum’s consensus client, will witness the invalid Txs from the L1 ledger and exclude them from the actual block being synced to L2.</p>\n</li>\n<li>\n<p>Back to L2, each <a href=\"https://github.com/taikoxyz/taiko-mono/tree/ec6c179967b9ac93cd967ff3a1fe8b331fdb8256/packages/taiko-client\" rel=\"noopener nofollow ugc\">taiko-client</a> (fork of Ethereum’s consensus client), witnesses the L1 ledger and applies a deterministic rule that invalidates the above Txs. Subsequently, the client can form a correct batch constituting the next block and construct the blockhash.</p>\n</li>\n<li>\n<p>This blockhash is considered finalized when a prover submits proof of the execution of valid Txs, as well as the exclusion of invalid Txs from the state of the ledger.</p>\n</li>\n</ul>\n<p>As Vitalik noted, a based rollup can be a <a href=\"https://vitalik.eth.limo/general/2021/01/05/rollup.html\" rel=\"noopener nofollow ugc\">“total anarchy”</a> amid the chaos, but it remains functional as long as the decentralized ledger persists and the L2 network maintains synchronization. Taiko will continue to progress by inheriting <strong>L1 security and finality</strong>. However, proposers may still encounter challenges, resulting in a <strong>liveness</strong> issue due to lack of profitability.</p>\n<h2><a name=\"challenges-and-solutions-2\" class=\"anchor\" href=\"https://ethresear.ch#challenges-and-solutions-2\"></a>Challenges and Solutions</h2>\n<h3><a name=\"profitability-timing-game-in-l2-block-building-3\" class=\"anchor\" href=\"https://ethresear.ch#profitability-timing-game-in-l2-block-building-3\"></a>Profitability &amp; Timing Game in L2 Block Building</h3>\n<p>In the diagram below proposer Alice observes L2-75 upon confirming L1-100, and she creates L2-76 with blockhash 0xabc. Proposer Bob, attempting the same, causes a fork with an alternate blockhash 0xf3c. Both submit proposals to L1-100 and pay the current L1 transaction fee. However, since Alice’s transactions were incorporated first, Bob’s transaction reverts due to L1_UNEXPECTED_PARENT(), causing Bob to lose his proposing fee. Alice successfully earns the tip and MEV of L2-76, but she still needs to compensate the prover to validate her block afterward.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/8/c8a72e51d5473fb6e20d1824d69e4a3baf4c6921.png\" data-download-href=\"https://ethresear.ch/uploads/default/c8a72e51d5473fb6e20d1824d69e4a3baf4c6921\" title=\"Untitled (5)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/8/c8a72e51d5473fb6e20d1824d69e4a3baf4c6921_2_517x303.png\" alt=\"Untitled (5)\" data-base62-sha1=\"sD3G0FxhOeO3QJn3QvhbY2YvB6h\" width=\"517\" height=\"303\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/8/c8a72e51d5473fb6e20d1824d69e4a3baf4c6921_2_517x303.png, https://ethresear.ch/uploads/default/optimized/3X/c/8/c8a72e51d5473fb6e20d1824d69e4a3baf4c6921_2_775x454.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/8/c8a72e51d5473fb6e20d1824d69e4a3baf4c6921_2_1034x606.png 2x\" data-dominant-color=\"FCFBFC\"></a></div><p></p>\n<p>An L2 block is proposed to the rollup Contract as a raw transaction batch. Consequently, each node subscribing to the event derives the blockhash in their own execution clients. Despite this, the <strong>rollup state is finalized when the proposal is confirmed on L1 because block hash derivation is deterministic.</strong> We still need a proof to validate the block hash to rollup’s L1 ledger, enabling light clients to fetch the states and users to perform withdrawals. Hence, real-time proving solutions such as SGX are important because they enforce L2 state finality with high probability. Let’s recall:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/6/261274c74370de26d6ec593f649377533be6ea83.png\" data-download-href=\"https://ethresear.ch/uploads/default/261274c74370de26d6ec593f649377533be6ea83\" title=\"Screen Shot 2024-07-05 at 12.54.04 PM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/6/261274c74370de26d6ec593f649377533be6ea83_2_690x50.png\" alt=\"Screen Shot 2024-07-05 at 12.54.04 PM\" data-base62-sha1=\"5qNGx5ZLfqOs6m4v0pYvbaWQ16b\" width=\"690\" height=\"50\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/6/261274c74370de26d6ec593f649377533be6ea83_2_690x50.png, https://ethresear.ch/uploads/default/optimized/3X/2/6/261274c74370de26d6ec593f649377533be6ea83_2_1035x75.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/2/6/261274c74370de26d6ec593f649377533be6ea83_2_1380x100.png 2x\" data-dominant-color=\"F3F3F3\"></a></div><p></p>\n<p>Solving for MEV is a knapsack problem - the larger the knapsack, the more value extracted. It’s been well-studied that L1 proposers will play <a href=\"https://ethresear.ch/t/timing-games-implications-and-possible-mitigations/17612\">the timing game</a> to extend the MEV solving window as much as possible; the same logics apply to L2. Even worse, because L2 users typically tip much lower in an ecosystem with significantly less liquidity, the current 12s block time on Taiko is far less than enough for anyone to profit, which results in a <strong>liveness issue for decentralized proposing</strong>. This is why Taiko Labs operates an unprofitable proposer to sustain the 12s block time. Without taking measures, the L2 blocktime would be arbitrarily long if rational proposers play the timing game.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/e/9ea87c99a3e43e4879c1d6de369b3bb71d885276.png\" data-download-href=\"https://ethresear.ch/uploads/default/9ea87c99a3e43e4879c1d6de369b3bb71d885276\" title=\"Untitled (6)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/e/9ea87c99a3e43e4879c1d6de369b3bb71d885276_2_495x375.png\" alt=\"Untitled (6)\" data-base62-sha1=\"mDyq86hqSzfBvBpoR4AZqrnQlb8\" width=\"495\" height=\"375\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/e/9ea87c99a3e43e4879c1d6de369b3bb71d885276_2_495x375.png, https://ethresear.ch/uploads/default/optimized/3X/9/e/9ea87c99a3e43e4879c1d6de369b3bb71d885276_2_742x562.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/9/e/9ea87c99a3e43e4879c1d6de369b3bb71d885276_2_990x750.png 2x\" data-dominant-color=\"FAFAFA\"></a></div><p></p>\n<h3><a name=\"solving-blocktime-data-publishing-with-preconfirmations-4\" class=\"anchor\" href=\"https://ethresear.ch#solving-blocktime-data-publishing-with-preconfirmations-4\"></a>Solving Blocktime &amp; Data Publishing with Preconfirmations</h3>\n<p>Essentially, we’re facing a conflict in a <strong>UX property of L2 (blocktime) versus decentralized block building</strong>. In centralized L2, timeliness is easily managed by the centralized sequencer, while on L1, the beacon attestation enforces the time to publish the execution payload. Thus, we observe that timeliness must be enforced by some mechanism other than builders in the game. Whoever facilitates preconfirmations could also mandate blocktime.</p>\n<p><strong>A preconfirmer can periodically issue preconfirmations to builders for smaller sequenced batches, then batch publish the batches to reduce the data publishing costs.</strong> The periodic issuance of batches now constitutes L2 blocks. The L2 protocol, which allows the preconfirmer to opt in, can facilitate timeliness by ensuring preconfirmed blocks are released every T second. Now, we define <strong>T as the L2 blocktime</strong>, which can be adjusted faster to improve user experience.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/2/d204bb354780b7e25543312984493e2f719d2f72.png\" data-download-href=\"https://ethresear.ch/uploads/default/d204bb354780b7e25543312984493e2f719d2f72\" title=\"Untitled (7)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/2/d204bb354780b7e25543312984493e2f719d2f72_2_690x387.png\" alt=\"Untitled (7)\" data-base62-sha1=\"tXUp8OrRHiRB0YRrUsK2HUvR6T0\" width=\"690\" height=\"387\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/2/d204bb354780b7e25543312984493e2f719d2f72_2_690x387.png, https://ethresear.ch/uploads/default/optimized/3X/d/2/d204bb354780b7e25543312984493e2f719d2f72_2_1035x580.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/d/2/d204bb354780b7e25543312984493e2f719d2f72_2_1380x774.png 2x\" data-dominant-color=\"F8F7F7\"></a></div><p></p>\n<p>Regarding data publishing, Taiko currently publishes all encoded L2 transaction lists in blobs. This requires the proposer to cover the L1 gas fee for a whole blob regardless how much data is actually necessary, further reducing the block’s profitability. In Gwyneth, preconfirmations will allow for <strong>more batching of L2 blocks into blobs</strong> if the preconfirmer is assigned multiple L1 slots, which also implies the separation of sequencing commitment and data availability:</p>\n<ul>\n<li><strong>Preconfirmations Issuance ⇒ commit L2 sequencing</strong></li>\n<li><strong>Preconfirmations Delivery ⇒ data publishing to L1</strong></li>\n</ul>\n<p>Now we can characterize the L1 preconfirmer as the de facto L2 proposer, and the existing decentralized sequencer who submits batches as L2 builders - we just migrate the PBS architecture to L2. Moreover, this L2 PBS mechanism can use a similar pipeline as on L1, because the L2 proposer is exactly an L1 validator who runs something like <a href=\"https://github.com/flashbots/mev-boost.git\" rel=\"noopener nofollow ugc\">MEV-boost</a> with a preconfirmation add-on. The new fee model functions as follows:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/7/c7f1262f29380aea940d4c5152693be272949797.png\" data-download-href=\"https://ethresear.ch/uploads/default/c7f1262f29380aea940d4c5152693be272949797\" title=\"Screen Shot 2024-07-11 at 2.46.47 AM (1)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/7/c7f1262f29380aea940d4c5152693be272949797_2_460x212.png\" alt=\"Screen Shot 2024-07-11 at 2.46.47 AM (1)\" data-base62-sha1=\"swLFVIzZNBKMDG519RID6i0mVQb\" width=\"460\" height=\"212\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/7/c7f1262f29380aea940d4c5152693be272949797_2_460x212.png, https://ethresear.ch/uploads/default/optimized/3X/c/7/c7f1262f29380aea940d4c5152693be272949797_2_690x318.png 1.5x, https://ethresear.ch/uploads/default/original/3X/c/7/c7f1262f29380aea940d4c5152693be272949797.png 2x\" data-dominant-color=\"F4F4F4\"></a></div><p></p>\n<p>For clarification, L2 proposers are the preconfirmers who opt into the Gwyneth protocol to propose L2 blocks, and the preconfrmers are the L1 validators who can issue preconfirmations.</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/f/0/f01ebd831084ad709d4805fe4ff1b83327b3ce73.png\" alt=\"Screen Shot 2024-07-11 at 2.47.22 AM (1)\" data-base62-sha1=\"ygcs7R0NL3PpYPsKHWiXNUul41J\" width=\"372\" height=\"32\"></p>\n<p>Overall, preconfirmations enable Gwyneth blocks to be built in short and steady intervals by decentralized participants, while not compromising profitability. A deficiency of liveness caused by lacking liquidity on L2 will not jeopardize blocktime; in other words, users can always enjoy fast transaction confirmation. It also provides a clear model for L2 MEV compatible with the existing PBS pipeline.</p>\n<h3><a name=\"decentralized-block-proposing-with-pbs-5\" class=\"anchor\" href=\"https://ethresear.ch#decentralized-block-proposing-with-pbs-5\"></a>Decentralized Block Proposing with PBS</h3>\n<p>We have discussed how preconfirmation benefits L2 proposers. Now, let’s consider <strong>proposal inclusion</strong> from the perspective of L1 validators.</p>\n<p>Initially, we have a distinct group of L2 participants who compete to propose the next L2 batch by calling the <code>ProposeBlock</code> function in the Taiko smart contract. Their proposal transactions with encoded L2 batches are exposed in the public mempool, and L1 validators or builders will choose to include these proposals. Apparently, t<strong>he L1 parties can easily capture the transactions, stealing the L2 tip and MEV when producing the L1 block.</strong> We’re revisiting the PBS playbook. Rollup with permissionless sequencing can implement similar mechanisms to mitigate block stealing.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/1/d17ee918d3b13e915483a110c04c22af49e6fe0e.png\" data-download-href=\"https://ethresear.ch/uploads/default/d17ee918d3b13e915483a110c04c22af49e6fe0e\" title=\"Untitled (8)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/1/d17ee918d3b13e915483a110c04c22af49e6fe0e_2_517x260.png\" alt=\"Untitled (8)\" data-base62-sha1=\"tThH90mTJKLu8B0DhzgLzYmIzQG\" width=\"517\" height=\"260\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/1/d17ee918d3b13e915483a110c04c22af49e6fe0e_2_517x260.png, https://ethresear.ch/uploads/default/optimized/3X/d/1/d17ee918d3b13e915483a110c04c22af49e6fe0e_2_775x390.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/d/1/d17ee918d3b13e915483a110c04c22af49e6fe0e_2_1034x520.png 2x\" data-dominant-color=\"F8F6F8\"></a></div><p></p>\n<p>However, there’s no need for mitigation following the <a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">definition</a> of base rollup:</p>\n<blockquote>\n<p>A rollup is said to be based, or L1-sequenced, when its sequencing is driven by the base L1.</p>\n</blockquote>\n<p>In other words, all L2 proposers are L1 validators. Given access to both mempools, a builder can incorporate L2 batches in her L1 bundles, which is by far the most <strong>efficient paradigm for Gwyneth block-building</strong></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/8/68eae50a088bf3c631d1fb23e52d49855f0a0ad5.png\" data-download-href=\"https://ethresear.ch/uploads/default/68eae50a088bf3c631d1fb23e52d49855f0a0ad5\" title=\"Untitled (9)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/8/68eae50a088bf3c631d1fb23e52d49855f0a0ad5_2_517x249.png\" alt=\"Untitled (9)\" data-base62-sha1=\"eY8UOTIXqkKXxV8sy7V8BaaO7Up\" width=\"517\" height=\"249\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/8/68eae50a088bf3c631d1fb23e52d49855f0a0ad5_2_517x249.png, https://ethresear.ch/uploads/default/optimized/3X/6/8/68eae50a088bf3c631d1fb23e52d49855f0a0ad5_2_775x373.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/6/8/68eae50a088bf3c631d1fb23e52d49855f0a0ad5_2_1034x498.png 2x\" data-dominant-color=\"FAF9FA\"></a></div><p></p>\n<p>Recall also in PBS, validators have a choice to build the block natively without using <a href=\"https://github.com/flashbots/mev-boost.git\" rel=\"noopener nofollow ugc\">MEV-boost</a> connecting to external builders. The L1 validator, who’s also an L2 proposer, can issue consecutive preconfirmations to self-produce L2 blocks until her slot to propose. In this case, we may also omit the separate role of builders, and rewrite the fee model for L2 proposers:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/2/1291f379205c49d484fda26e97169d2671738cdd.png\" data-download-href=\"https://ethresear.ch/uploads/default/1291f379205c49d484fda26e97169d2671738cdd\" title=\"Screen Shot 2024-07-11 at 2.46.17 AM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/2/1291f379205c49d484fda26e97169d2671738cdd_2_517x90.png\" alt=\"Screen Shot 2024-07-11 at 2.46.17 AM\" data-base62-sha1=\"2Ehib0F4GG8NoIjJf9s32oole3j\" width=\"517\" height=\"90\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/2/1291f379205c49d484fda26e97169d2671738cdd_2_517x90.png, https://ethresear.ch/uploads/default/optimized/3X/1/2/1291f379205c49d484fda26e97169d2671738cdd_2_775x135.png 1.5x, https://ethresear.ch/uploads/default/original/3X/1/2/1291f379205c49d484fda26e97169d2671738cdd.png 2x\" data-dominant-color=\"F5F5F5\"></a></div><p></p>\n<p>With the inclusion model much simplified, we note that the L1 validator who includes the L2 proposal is the deterministic proposer of L2. Given Taiko’s current 12s blocktime, there is a one-to-one correspondence between each L1 and L2 block, hence the state of the chain at any slot is deterministic.</p>\n<h3><a name=\"nondeterministic-proposer-and-leader-election-6\" class=\"anchor\" href=\"https://ethresear.ch#nondeterministic-proposer-and-leader-election-6\"></a>Nondeterministic Proposer and Leader Election</h3>\n<p>Now, as we decouple the L1-to-L2 block correspondence with preconfirmation, we argue that <strong>nondeterminism is also introduced because, during the L1 epoch, multiple preconfirmers exist to perform sequencing concurrently.</strong></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/2/b24f24e1ef4885e714897d2f95d25f8c1f2582fb.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/b24f24e1ef4885e714897d2f95d25f8c1f2582fb\" title=\"Untitled (10)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/2/b24f24e1ef4885e714897d2f95d25f8c1f2582fb_2_660x500.jpeg\" alt=\"Untitled (10)\" data-base62-sha1=\"proypVMTnCRuUTMqfJP32jXdXSj\" width=\"660\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/2/b24f24e1ef4885e714897d2f95d25f8c1f2582fb_2_660x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/b/2/b24f24e1ef4885e714897d2f95d25f8c1f2582fb_2_990x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/2/b24f24e1ef4885e714897d2f95d25f8c1f2582fb_2_1320x1000.jpeg 2x\" data-dominant-color=\"F4F5F4\"></a></div><p></p>\n<p>If these preconfirmers are the subset of L2 proposers who produce blocks natively, everyone will start building on top of the latest finalized parent. This continues until the set of preconfirmations is settled, updating the head of the chain. Then, a proposer will restart with the new head and <strong>abandon their local ledger, resulting in previous preconfirmed transactions being reverted upon delivery</strong>. If the proposer does not restart and proposes the local fork with data publishing during their slot, <strong>that proposal will also revert</strong>. In such a case, the L2 will miss a slot to update; users will experience the <strong>chain halting</strong> until the next proposer comes on board. The malfunctioning proposer might be slashed depending on the protocol implementation.</p>\n<p>Considering builders in the PBS setting, who can send their sequenced batches to all L2 proposers in the current epoch, <strong>the head of the chain will appear nondeterministic</strong> to them, as all proposers will endorse different forks simultaneously. However, only the next-in-line proposer holds the source of truth, since her ledger will be settled first. <strong>Therefore, a rational builder should request preconfirmation only from the next-in-line proposer</strong>. Nonetheless, the protocol cannot prevent a malicious proposer from forcing his fork proposal through a regular transaction on Ethereum.</p>\n<p>There are two possible solutions: 1)  <strong>define the ledger held by the next-in-line proposer as canonical, which yields a leader selection protocol;</strong> 2) disable block proposals at the non-preconfirmed L1 slots, then fork proposals will likely be excluded by a rational next-in-line preconfirmer. The latter solution is sub-optimal because we still want to preserve the option of non-preconfirmed block proposals unless there are enough preconfirmers to achieve our desirable liveness.</p>\n<h4><a name=\"on-leader-election-7\" class=\"anchor\" href=\"https://ethresear.ch#on-leader-election-7\"></a>On Leader Election</h4>\n<p>In a decentralized setting at anytime, <strong>only one L1 validator should have exclusive write access to the L2 state</strong>, even if all opt-in participants can issue preconfirmations. <strong>Such systems are inherently finalized without any external finality gadget</strong>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/3/23c6258764b5d1c0ec9df8be0a3db5b6cd2132a8.png\" data-download-href=\"https://ethresear.ch/uploads/default/23c6258764b5d1c0ec9df8be0a3db5b6cd2132a8\" title=\"Untitled (11)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/3/23c6258764b5d1c0ec9df8be0a3db5b6cd2132a8_2_690x231.png\" alt=\"Untitled (11)\" data-base62-sha1=\"56teN9dWCZpFmg31VQX9DiGxqUo\" width=\"690\" height=\"231\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/3/23c6258764b5d1c0ec9df8be0a3db5b6cd2132a8_2_690x231.png, https://ethresear.ch/uploads/default/optimized/3X/2/3/23c6258764b5d1c0ec9df8be0a3db5b6cd2132a8_2_1035x346.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/2/3/23c6258764b5d1c0ec9df8be0a3db5b6cd2132a8_2_1380x462.png 2x\" data-dominant-color=\"F6F7F7\"></a></div><p></p>\n<p>On the other hand, an L2 builder who’s building the latest Gwyneth chain can only write to preconfirmed L1 block space from the next opt-in validator. Requesting preconfirmations from others is strictly prohibited because that creates a gap in the slot.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/d/3d2b9b203eda188c0ebc6520cdb249d14b114b14.png\" data-download-href=\"https://ethresear.ch/uploads/default/3d2b9b203eda188c0ebc6520cdb249d14b114b14\" title=\"Untitled (12)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/d/3d2b9b203eda188c0ebc6520cdb249d14b114b14_2_690x251.png\" alt=\"Untitled (12)\" data-base62-sha1=\"8J8yabF1GeMOeeupn9XVs0RO6Ec\" width=\"690\" height=\"251\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/d/3d2b9b203eda188c0ebc6520cdb249d14b114b14_2_690x251.png, https://ethresear.ch/uploads/default/optimized/3X/3/d/3d2b9b203eda188c0ebc6520cdb249d14b114b14_2_1035x376.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/3/d/3d2b9b203eda188c0ebc6520cdb249d14b114b14_2_1380x502.png 2x\" data-dominant-color=\"F5F6F6\"></a></div><p></p>\n<p>Essentially, we create a just-in-time market for exchanging L1/L2 block space. Instead of a JIT auction, Some suggest using <a href=\"https://ethresear.ch/t/execution-tickets/17944\">execution tickets</a> for an ahead-of-time auction, which means in the diagram above, the L1-104 proposer can sell L2-79 block space simultaneously while the L1-102 proposer sells L2-78. This establishes a one-to-one correspondence between L1/L2 slots in a more controlled manner, and since it allows all participants to buy and sell these rights, an ahead-of-time auction aligns better with the preconfirmation market. From the L2 perspective, the protocol’s sale of execution tickets can imply new fee models for value-capturing. <a href=\"https://ethresear.ch/t/preconfirmations-on-splitting-the-block-mev-boost-compatibility-and-relays/19837\">XGA-style preconfirmations</a> can be a good implementation.</p>\n<h2><a name=\"summary-8\" class=\"anchor\" href=\"https://ethresear.ch#summary-8\"></a>Summary</h2>\n<p>Taiko started as a rollup with decentralized proposers, with a protocol that deterministically derives L2 state as long as the ledger is finalized on L1. We realized that based sequencing, which unites L1 and L2 proposers, transforms our framework into something more simple and powerfull. Based sequencing will work, naively, with finality and security inherited from L1.</p>\n<p>Based sequencing may not work, in practice, considering builder profitability, bootstrapping liveness, and the configuration of fast blocktime. We discuss preconfirmations to tackle these challenges with some tweaks on timeliness and proposal mechanisms. However, having multiple validators who issue preconfirmations can cause the concurrent building of L2 forks. This introduces nondeterminism for the spectators of chains including builders, exchanges, and users, although fortunately, nondeterministic sequencing does not affect finality - <strong>most obstacles in based sequencing relate to essential UX properties for builders and users.</strong></p>\n<p>Despite some controversy, leader election could be a practical middle-ground solution. We anticipate a significant number of L1 proposers opting in as preconfirmations gain adoption. Consequently, <strong>proposer decentralization still remains close to the (at least theoretically) maximal achievable decentralization offered by a vanilla based rollup.</strong></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/0/40dd31cbef98940c5ba5f843d943f08e9ab8a7e2.png\" data-download-href=\"https://ethresear.ch/uploads/default/40dd31cbef98940c5ba5f843d943f08e9ab8a7e2\" title=\"Untitled (13)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/0/40dd31cbef98940c5ba5f843d943f08e9ab8a7e2_2_690x339.png\" alt=\"Untitled (13)\" data-base62-sha1=\"9fOsQ8XhNRdXUSAUWxqA5TC1wUq\" width=\"690\" height=\"339\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/0/40dd31cbef98940c5ba5f843d943f08e9ab8a7e2_2_690x339.png, https://ethresear.ch/uploads/default/optimized/3X/4/0/40dd31cbef98940c5ba5f843d943f08e9ab8a7e2_2_1035x508.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/0/40dd31cbef98940c5ba5f843d943f08e9ab8a7e2_2_1380x678.png 2x\" data-dominant-color=\"F8F8F8\"></a></div><p></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/rollup-centric-considerations-of-based-preconfimations/20160\">Read full topic</a></p>","link":"https://ethresear.ch/t/rollup-centric-considerations-of-based-preconfimations/20160","pubDate":"Sat, 27 Jul 2024 14:41:46 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20160"},"source":{"@url":"https://ethresear.ch/t/rollup-centric-considerations-of-based-preconfimations/20160.rss","#text":"Rollup-Centric Considerations of Based Preconfimations"},"filter":false},{"title":"Notes on the LVR of FM-AMM","dc:creator":"kosunghun317","category":"Economics","description":"<h1><a name=\"h-0-tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#h-0-tldr-1\"></a>0. TL;DR</h1>\n<p>We introduced and detailed the additional features of FM-AMM, as presented in [CF23]. We modeled the game between CEX-DEX arbitrageurs for arbitrage profit on FM-AMM and then solved it by finding the pure strategy Nash equilibrium. Lastly, we calculated the asymptotic LVR of FM-AMM in theoretical settings and compared its performance against the Uniswap V2-style fixed-rate fee CPMM through numerical simulations. Our observations indicated that the performance is heavily influenced by price volatility, transaction costs, and the size of the liquidity pool, with FM-AMM showing a reduced loss to arbitrageurs under specific conditions.</p>\n<h1><a name=\"h-1-introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#h-1-introduction-2\"></a>1. Introduction</h1>\n<p>Since LVR was introduced in [MMRZ22] and [MMR23], it has quickly become the standard for measuring the performance of AMMs. Numerous attempts have been made to reduce LVR through dynamic fee policies, and this research continues actively. However, batch trade execution has not received much attention, except in [CF23] and [GGMR22]. In [CF23], the authors proposed a function-maximizing automated market maker (FM-AMM), asserting it effectively eliminates LVR, and provided numerical simulations comparing its performance with various Uniswap V3 pools. They later <a href=\"https://forum.cow.fi/t/4-months-of-cow-amm-what-we-have-learned-and-the-next-steps/2432\" rel=\"noopener nofollow ugc\">claimed</a> that CoW-AMM (their implementation of FM-AMM) performed well in live settings too, which led to <a href=\"https://x.com/0x94305/status/1813690004331438306\" rel=\"noopener nofollow ugc\">debate</a> on Twitter regarding the legitimacy of their measurement methods. Although the debate focused more on whether markout is a useful metric for measuring performance, the existence of retail order flow and fluctuating transaction costs are also obstacles to precisely comparing their performance. In this article, we analyze the performance of FM-AMM and compare it to CPMM under fixed transaction costs and in the absence of retail order flow conditions like those in [N22] and [E24].</p>\n<p>In detail, we slightly modified their design and found a Nash equilibrium in a game where arbitrageurs strategically submit orders to the (slightly modified) FM-AMM to maximize their returns. The game is similar to the liquidity provision game introduced in [MC24], which is a special form of the generalized Tullock contest. The resulting equilibrium has many favorable properties: the solution always uniquely exists, and it is symmetric. Moreover, LVR decays inversely proportionally to the number of participants. This model assumes that the number of arbitrageurs, <span class=\"math\">N</span>, is pre-determined and transaction cost, <span class=\"math\">c</span>, is zero. We proceed to a model where the number of participants is determined endogenously according to <span class=\"math\">c</span>. In this setting, FM-AMM is not always superior; the result now depends on jump size, frequency, and cost. We provide numerical simulation results and suggest that FM-AMM fits well with rollup-based solutions.</p>\n<h1><a name=\"h-2-fm-amm-3\" class=\"anchor\" href=\"https://ethresear.ch#h-2-fm-amm-3\"></a>2. FM-AMM</h1>\n<p>In this section we fill the omitted details of FM-AMM introduced in [CF23] to handle the more general case. The underlying AMM curve introduced in [CF23] is:</p>\n<div class=\"math\">\ny_\\text{out} = \\frac{x_\\text{in}}{X + 2x_\\text{in}}Y,\n</div>\n<p>where <span class=\"math\">x_\\text{in}</span> is the amount of token <span class=\"math\">X</span> the trader is willing to sell, and <span class=\"math\">y_\\text{in}</span> is the amount of token <span class=\"math\">Y</span> that she will receive. However, this is the simplest case where only a single side of order is submitted in batch. Authors of original paper handled the case such that both side of orders exist in the same batch by assuming users only specify the amount of token X to buy or sell. Unfortunately, this is hard to implement in fully on-chain manner since whether the trader has enough capital to buy specified amount of token X is not guaranteed before the batch is settled (Selling is not problematic; we can pull the token from trader and keep it by settlement). We generalize the formula to handle broader range of cases. Let <span class=\"math\">X, Y</span> be reserves of pool, <span class=\"math\">T</span> be total supply of LP tokens before batch settlement, <span class=\"math\">x_\\text{in}, y_\\text{in}</span> be aggregate amount of each token that traders are willing to sell, and <span class=\"math\">x_\\text{mint}, y_\\text{mint}</span> be aggregate amount of each token provided from LPs. The fundamental equation we will start with is:</p>\n<div class=\"math\">\n\\begin{align}\\begin{bmatrix}x_{\\text{mint}} \\\\y_{\\text{mint}}\\end{bmatrix}&amp;=x_{\\text{mint}} \\begin{bmatrix}1 \\\\p\\end{bmatrix}+\\begin{bmatrix}0 \\\\2\\alpha\\end{bmatrix}\\\\\\begin{bmatrix}x_{\\text{in}} \\\\y_{\\text{in}}\\end{bmatrix}&amp;=x_{\\text{in}} \\begin{bmatrix}1 \\\\p\\end{bmatrix}+\\begin{bmatrix}0 \\\\\\beta\\end{bmatrix}\\\\\\begin{bmatrix}x_1 \\\\y_1\\end{bmatrix}&amp;=\\begin{bmatrix}x_0 \\cdot \\frac{y_0 + \\alpha + \\beta}{y_0 + 2(\\alpha + \\beta)} \\\\y_0 + \\alpha + \\beta\\end{bmatrix}\\end{align}\n</div>\n<p>Here, the <span class=\"math\">p</span> is the clearing price, and <span class=\"math\">\\alpha, \\beta</span> are the net swap amount for swapping and minting, respectively. In short, among the submitted orders, we swap only part of them, <span class=\"math\">\\alpha</span> and <span class=\"math\">\\beta</span>, then exchange the rest via p2p without changing the spot price. The fact that</p>\n<div class=\"math\">\n\\begin{bmatrix}x_{\\text{mint}} \\\\y_{\\text{mint}} - 2\\alpha\\end{bmatrix}, \\begin{bmatrix}x_{\\text{in}} \\\\y_{\\text{in}} - \\beta\\end{bmatrix}, \\begin{bmatrix}x_1 \\\\y_1\\end{bmatrix}\n</div>\n<p>are all parallel gives us following matrix equation:</p>\n<div class=\"math\">\n\\begin{equation}\\begin{bmatrix}2x_0 + 2x_{\\text{mint}} &amp; 2x_{\\text{mint}} \\\\2x_{\\text{in}} &amp; 2x_{\\text{in}} + x_0\\end{bmatrix}\\begin{bmatrix}\\alpha \\\\\\beta\\end{bmatrix}=\\begin{bmatrix}x_0 y_{\\text{mint}} - x_{\\text{mint}} y_0 \\\\x_0 y_{\\text{in}} - x_{\\text{in}} y_0\\end{bmatrix}\\end{equation}\n</div>\n<p>Note that the determinant of matrix in LHS is always strictly positive so above equation is not singular. <span class=\"math\">\\alpha, \\beta</span>  are:</p>\n<div class=\"math\">\n\\begin{align} (\\alpha, \\beta) = \\left( \\frac{\\frac{x_{0} y_{mint}}{2} + x_{in} y_{mint} - \\frac{x_{mint} y_{0}}{2} - x_{mint} y_{in}}{x_{0} + 2 x_{in} + x_{mint}}, \\  \\frac{x_{0} y_{in} - x_{in} y_{0} - x_{in} y_{mint} + x_{mint} y_{in}}{x_{0} + 2 x_{in} + x_{mint}}\\right) \\end{align}\n</div>\n<p>The clearing price, <span class=\"math\">p_c</span>, is:</p>\n<div class=\"math\">\n\\begin{align} \np_c = \\frac{y_{0} + 2 y_{in} + y_{mint}}{x_{0} + 2 x_{in} + x_{mint}}\n\\end{align}\n</div>\n<p><span class=\"math\">x_\\text{out}, y_\\text{out}</span> are:</p>\n<div class=\"math\">\n\\begin{align}\n(x_\\text{out}, y_\\text{out}) &amp;= \n\\left( \\frac{y_{in} \\left(x_{0} + 2 x_{in} + x_{mint}\\right)}{y_{0} + 2 y_{in} + y_{mint}}, \\  \\frac{x_{in} \\left(y_{0} + 2 y_{in} + y_{mint}\\right)}{x_{0} + 2 x_{in} + x_{mint}}\\right) \\\\\n&amp;= \\left(\\frac{y_\\text{in}}{p_c}, p_c x_\\text{in} \\right) \\\\\n\\end{align} \n</div>\n<p>It is straight forward to find <span class=\"math\">x_2, y_2</span>, the reserves after minting LP tokens, and <span class=\"math\">t</span>, the newly issued LP token amount, so we would skip on them here.</p>\n<p>Above construction charges no fee. To keep price same even after charging fee, we will take <span class=\"math\">1/(1 + \\gamma)</span> portion of input and <span class=\"math\">\\gamma</span> portion of output as fee. So the effective fee rate will be   <span class=\"math\">\\frac{2 \\gamma}{1+ \\gamma}</span>, which is approximately <span class=\"math\">2 \\gamma</span>. Considering arbitrageurs it may better to take fee fully on input, though.</p>\n<h1><a name=\"h-3-model-4\" class=\"anchor\" href=\"https://ethresear.ch#h-3-model-4\"></a>3. Model</h1>\n<p>In this section, we describe the model upon which our analysis is based. We model a normal form game involving strategic arbitrageurs. This means that each player is unaware of the bids of others, and all bids are submitted simultaneously. Additionally, each player’s bid is never censored. Although this assumption does not perfectly reflect the current state of blockchains, ongoing cryptographic developments and improved market designs, such as inclusion lists, will help bridge the gap between theory and reality. This formulation is almost the same as that of [CM24]; the only difference is that players now “take” mispriced liquidity instead of providing it to the AMM.</p>\n<h2><a name=\"h-31-automated-market-maker-5\" class=\"anchor\" href=\"https://ethresear.ch#h-31-automated-market-maker-5\"></a>3.1. Automated Market Maker</h2>\n<p>For the AMM, we will use the FM-AMM introduced in Section 2. Note that the AMM itself is not a player; we assume that the LPs of the AMM are passive investors who will not take any action in the short term.</p>\n<h2><a name=\"h-32-arbitrageurs-6\" class=\"anchor\" href=\"https://ethresear.ch#h-32-arbitrageurs-6\"></a>3.2. Arbitrageurs</h2>\n<p>We assume that all players are homogeneous. They are risk-neutral and can execute trades of any size and in any direction on CEX without any slippage. Their sole goal is to maximize profit.</p>\n<h2><a name=\"h-33-strategic-game-of-liquidity-taking-7\" class=\"anchor\" href=\"https://ethresear.ch#h-33-strategic-game-of-liquidity-taking-7\"></a>3.3. Strategic Game of Liquidity Taking</h2>\n<p>First, we solve the game with <span class=\"math\">N</span> players where <span class=\"math\">N</span> is given exogenously, without considering transaction costs. Then, we introduce a strictly positive transaction cost <span class=\"math\">c</span> and derive <span class=\"math\">N</span> from the equilibrium condition. We will restrict our interest to conditions with positive trading fees, which guarantees the uniqueness of the equilibrium. Players observe the pool reserves <span class=\"math\">X</span>, <span class=\"math\">Y</span>, and the external true price <span class=\"math\">P</span>. Then, they submit bids <span class=\"math\">(x_i, y_i)</span>, which are the amounts of tokens to sell to the pool. The clearing price will be:</p>\n<div class=\"math\">\n\\begin{align}\nP_c = \\frac{Y + 2\\sum^N_{i=1} y_i }{X + 2\\sum^N_{i=1} x_i} \\tag{1} \\\\\n\\end{align}\n</div>\n<p>The utility function is the arbitrage profit after charging the swap fee (and transaction cost, if applicable). The utility of player <span class=\"math\">i</span>, <span class=\"math\">U_i</span>, is:</p>\n<div class=\"math\">\n\\begin{align}\nU_i = -(1 + \\gamma)(P x_i + y_i) + (1 - \\gamma)\\left(\\frac{P}{P_c}y_i + P_c x_i\\right) \\tag{2}\n\\end{align}\n</div>\n<p>Now, we are ready to find the equilibrium.</p>\n<h1><a name=\"h-4-equilibrium-analysis-8\" class=\"anchor\" href=\"https://ethresear.ch#h-4-equilibrium-analysis-8\"></a>4. Equilibrium Analysis</h1>\n<h2><a name=\"h-41-n-is-determined-exogenously-and-transaction-cost-c-is-zero-9\" class=\"anchor\" href=\"https://ethresear.ch#h-41-n-is-determined-exogenously-and-transaction-cost-c-is-zero-9\"></a>4.1. <span class=\"math\">N</span> is Determined Exogenously, and Transaction Cost <span class=\"math\">c</span> is Zero</h2>\n<p>We first introduce the following lemma:</p>\n<div class=\"math\">\n\\text{Lemma. The player } i\\text{'s best response is submitting a bid with at least one 0 component, that is, either } (x_i, 0) \\text{ or } (0, y_i).\n</div>\n<p>The proof is straightforward. Assume <span class=\"math\">(x_i, y_i)</span> and <span class=\"math\">(x'_i, y'_i)</span> result in the same clearing price. Then <span class=\"math\">x_i \\leq x'_i</span> if and only if <span class=\"math\">y_i \\leq y'_i</span>. Combining these and subtracting the utility of one from the other yields the desired result.</p>\n<p>Meanwhile, the first order condition and the profitability condition give us that the best response is, when <span class=\"math\">P_{-i}</span> is defined as <span class=\"math\">P_{-i} = \\frac{Y + 2\\sum^N_{j \\neq i} y_j }{X + 2\\sum^N_{j \\neq i} x_j}</span>, submitting <span class=\"math\">x_i</span> or <span class=\"math\">y_i</span> such that the following holds:</p>\n<div class=\"math\">\n\\begin{align}\nP_c = \n\\begin{cases} \n\\sqrt{\\frac{1 - \\gamma}{1 + \\gamma} P P_{-i}} &amp; \\text{if } \\frac{1 - \\gamma}{1 + \\gamma} P \\geq P_{-i} \\\\\n\\sqrt{\\frac{1 + \\gamma}{1 - \\gamma} P P_{-i}} &amp; \\text{if } \\frac{1 + \\gamma}{1 - \\gamma} P \\leq P_{-i}\n\\end{cases}. \\tag{3}\n\\end{align}\n</div>\n<p>Otherwise, it is better not to submit any order (i.e., bid). One can think of <span class=\"math\">\\frac{1+\\gamma}{1-\\gamma}P_{-i}</span> and <span class=\"math\">\\frac{1-\\gamma}{1+ \\gamma}P_{-i}</span> as the threshold prices such that arbitrage becomes profitable. Note that this holds for every <span class=\"math\">i</span>, so <span class=\"math\">P_{-i} = P_{-j}</span> for every <span class=\"math\">i</span> and <span class=\"math\">j</span>, which tells us the equilibrium is symmetric and always exists.</p>\n<p>From now on, we only consider the external price to be sufficiently higher than the pool’s spot price, <span class=\"math\">Y/X</span>. The opposite case can be solved in a similar manner. It is clear that <span class=\"math\">x_\\text{eq} = 0</span> for the case we are dealing with. Then, <span class=\"math\">(3)</span> is equivalent to:</p>\n<div class=\"math\">\n\\begin{align}\n\\frac{Y + 2Ny_\\text{eq}}{X} = \\sqrt{\\frac{1-\\gamma}{1+\\gamma}P\\cdot \\frac{Y + 2 (N-1) y_\\text{eq}}{X}} \\tag{4}\n\\end{align}\n</div>\n<p>Solving <span class=\"math\">(4)</span> yields that</p>\n<div class=\"math\">\n\\begin{align}\ny_\\text{eq} = \\frac{1}{4N^2}\\left[ (N - 1) \\cdot \\frac{1-\\gamma}{1+\\gamma} \\cdot PX -2NY +  \\sqrt{(N-1)^2 + 4N \\cdot \\frac{Y}{X} \\cdot \\frac{1+\\gamma}{1-\\gamma} \\cdot \\frac{1}{P}} \\cdot \\frac{1-\\gamma}{1+\\gamma}\\cdot PX \\right] \\tag{5}\n\\end{align}\n</div>\n<p>From now on, we will proceed with radical approximations due to its complexity. Although we do not provide any rigorous proof for the validity of such approximations, we will see it works well in the simulations later. Let <span class=\"math\">P_0 = \\frac{Y}{X}</span> and <span class=\"math\">\\varepsilon = \\frac{1-\\gamma}{1+\\gamma} \\cdot \\frac{P}{P_0} - 1</span>, that is, the price difference between the threshold price and the external price. Approximating <span class=\"math\">y_\\text{eq}</span> with <span class=\"math\">\\varepsilon</span> through a Taylor series gives us a simpler form:</p>\n<div class=\"math\">\n\\begin{align}\ny_\\text{eq} &amp;=  \\frac{Y}{4N^2}\\left[ (N-1) \\cdot (1+ \\varepsilon) - 2N +(1+\\varepsilon)\\sqrt{(N-1)^2 +\\frac{4N}{1+\\varepsilon}}\\right] \\tag{6} \\\\\n&amp;\\approx \\frac{Y}{2(N+1)} \\varepsilon + o(\\varepsilon^2) \\tag{7}\n\\end{align}\n</div>\n<p>Using <span class=\"math\">(7)</span>, one can compute the profit of individual arbitrageurs and the total loss of the AMM against arbitrageurs:</p>\n<div class=\"math\">\n\\begin{align}\nARB &amp;\\approx L\\sqrt{P_0}\\cdot\\left(\\frac{1+\\gamma}{2(N+1)^2}\\right)\\cdot\\varepsilon^2 \\tag{8} \\\\\nLVR &amp;\\approx (1+\\gamma)\\cdot L\\sqrt{P_0}\\cdot\\left(\\frac{N}{2(N+1)^2}\\right)\\cdot\\varepsilon^2 \\tag{9}\n\\end{align}\n</div>\n<p>Thus, assuming the transaction cost is <span class=\"math\">0</span>, for any <span class=\"math\">N</span>, every <span class=\"math\">N</span> arbitrageur will submit identical bids and they will share the profit equally, while each individual arbitrageur’s profit will decay by <span class=\"math\">O(N^{-2})</span>. Moreover, as <span class=\"math\">N </span> goes to infinity the clearing price <span class=\"math\">P_c</span> converges to threshold price, and therefore the stationary distribution of price discrepancy will be as same as that of fixed fee rate CPMM in [MMR23].</p>\n<h2><a name=\"h-42-transaction-cost-is-not-free-and-the-number-of-arbitrageurs-is-determined-endogenously-10\" class=\"anchor\" href=\"https://ethresear.ch#h-42-transaction-cost-is-not-free-and-the-number-of-arbitrageurs-is-determined-endogenously-10\"></a>4.2. Transaction Cost is Not Free, and the Number of Arbitrageurs is Determined Endogenously</h2>\n<p>Now we extend the model in 4.1 to a more realistic one by adopting a nonzero transaction cost <span class=\"math\">c</span>. The utility function remains the same as in <span class=\"math\">(2)</span>, except we have an additional term <span class=\"math\">-c</span>. Since this term disappears when we take the derivative, the best response remains the same as long as it is profitable. Thus, the solution is not much different from <span class=\"math\">(7)</span>, except <span class=\"math\">N</span> is replaced with <span class=\"math\">N^{*}</span>, where <span class=\"math\">N^{*}</span> is the largest integer that satisfies <span class=\"math\">L\\sqrt{P_0}\\cdot\\left(\\frac{1+\\gamma}{2(N^{*}+1)^2}\\right)\\cdot\\varepsilon^2 \\geq c</span>. Then, the LVR will be:</p>\n<div class=\"math\">\n\\begin{align}\nLVR &amp;\\approx (1+\\gamma) \\cdot  L \\sqrt{P_0} \\cdot\\varepsilon^2 \\cdot \\frac{N^{*}}{2(N^{*}+1)^2} \\tag{10} \\\\\n&amp;\\approx cN^{*} \\tag{11} \\\\\n&amp;\\approx c \\left \\lfloor \\varepsilon\\sqrt{\\frac{1+\\gamma}{2c} \\cdot L \\sqrt{P_0}}- 1 \\right\\rfloor \\tag{12} \\\\\n&amp;\\leq \\varepsilon\\sqrt{(1+\\gamma)2c \\cdot L \\sqrt{P_0}} \\tag{13}\n\\end{align}\n</div>\n<h2><a name=\"h-43-comparison-with-cpmm-11\" class=\"anchor\" href=\"https://ethresear.ch#h-43-comparison-with-cpmm-11\"></a>4.3. Comparison with CPMM</h2>\n<p>The derivation of the LVR for CPMM has already been studied extensively, so we will simply present the result:</p>\n<div class=\"math\">\n\\begin{align}\nLVR_\\text{CPMM} \\approx \\frac{1}{1-\\gamma} \\cdot L \\sqrt{P_0} \\cdot \\frac{\\varepsilon^2}{4}, \\tag{14}\n\\end{align}\n</div>\n<p>where <span class=\"math\">\\gamma</span> is the fee rate taken from the input and <span class=\"math\">\\varepsilon</span> is again the price difference between the external price and the threshold price, in this case, <span class=\"math\">\\frac{P_0}{1-\\gamma}</span>. In short, the LVR of CPMM grows faster than that of FM-AMM as <span class=\"math\">\\varepsilon</span> (the price difference) and <span class=\"math\">L\\sqrt{P_0}</span> (the initial pool size) grow. From this, we can predict that the performance of FM-AMM will be better in larger pools compared to CPMM.</p>\n<p>FM-AMM performance is affected by the transaction cost <span class=\"math\">c</span>, while CPMM is not affected as long as the arbitrageur’s profit is greater than <span class=\"math\">c</span>. This implies that FM-AMM suits well with rollup settings that have longer block times (resulting in higher volatility between blocks) and low transaction costs.</p>\n<h1><a name=\"h-5-simulations-12\" class=\"anchor\" href=\"https://ethresear.ch#h-5-simulations-12\"></a>5. Simulations</h1>\n<p>Due to the nonzero transaction cost, finding an analytic solution for instantaneous LVR or the stationary distribution of price discrepancy is no longer straightforward. Therefore, we proceed with numerical simulations. You can check the code used <a href=\"https://github.com/kosunghun317/FMAMM_LVR/tree/main/notebooks\" rel=\"noopener nofollow ugc\">here</a>. This code is largely copy-pasted with minor tweaks from <a href=\"https://github.com/alexnezlobin/simulations/tree/main\" rel=\"noopener nofollow ugc\">this source</a>. Swap fees are fixed at 0.3% across all simulations (i.e., <span class=\"math\">\\gamma_\\text{FMAMM} = 0.0015</span>, <span class=\"math\">\\gamma_\\text{CPMM} = 0.003</span>).</p>\n<h2><a name=\"h-51-distribution-of-lvr-13\" class=\"anchor\" href=\"https://ethresear.ch#h-51-distribution-of-lvr-13\"></a>5.1. Distribution of LVR</h2>\n<p>In this section, we observe the distribution of LVR under several cases without iterating over many parameters. Note that the variance is always greater in FM-AMM; this is because the price is not corrected perfectly under the nonzero transaction cost condition.</p>\n<p>The conditions of the first case are L1 (12-second block time), $10 transaction cost, with 5% daily volatility and $100M pool size.<br>\n<img src=\"https://ethresear.ch/uploads/default/original/3X/1/0/101edc5f8de31543cda7c084f2d7e98e3e522ebf.png\" alt=\"image\" data-base62-sha1=\"2iBL1TnH7ZHHI0uLDlXJCdvlwLR\" width=\"604\" height=\"450\"></p>\n<p>The second is L1, $10 transaction cost, with 10% volatility and $100M pool size.<br>\n<img src=\"https://ethresear.ch/uploads/default/original/3X/a/4/a49fb0096777435725991cf46954abd43c9a26a8.png\" alt=\"image\" data-base62-sha1=\"nukqVEeo5rolK17fbIJ0xQYzPa8\" width=\"597\" height=\"450\"><br>\nAs predicted, FM-AMM outperforms CPMM as volatility increases.</p>\n<p>Next one is L1 with congestion; transaction cost went up to $30.<br>\n<img src=\"https://ethresear.ch/uploads/default/original/3X/f/3/f3a2fc79c45044e5ef9c61b01a5ae50b913299d7.png\" alt=\"image\" data-base62-sha1=\"yLjdKgnYaR7eR8QFdsb3ftbUus7\" width=\"597\" height=\"450\"><br>\nThis fits to our prediction well, too. As tx cost increases FM-AMM loses more than CPMM.</p>\n<p>The last result is L1 with congestion, but with smaller liquidity ($10M).<br>\n<img src=\"https://ethresear.ch/uploads/default/original/3X/f/8/f82923769edf0a3f8df22d9c2327ee0473eae369.png\" alt=\"image\" data-base62-sha1=\"zpkyccQhoPHgrEfvPnp7313E4yd\" width=\"597\" height=\"450\"><br>\nThis result is a bit contradictory to our initial guess: usually, smaller liquidity conditions are more favorable to CPMM, as LVR per pool value of FM-AMM increases as the pool value gets smaller. To clarify this, we will run simulations over various parameters and compare the performances.</p>\n<h2><a name=\"h-52-performance-comparisons-14\" class=\"anchor\" href=\"https://ethresear.ch#h-52-performance-comparisons-14\"></a>5.2. Performance Comparisons</h2>\n<p>Below are the numerical simulations of LVR for CPMM and FM-AMM under various parameters. Swap fees are set at 0.3% for both of them. Blue regions indicate where CPMM performs better, while grey regions indicate where FM-AMM performs better. Note that the results in the low volatility and high-cost regions are not as reliable due to the very few trades occurring in these conditions.</p>\n<p>First is the cases for L1:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/f/3f4b7c4f8afa28b742eb494cce687ca245b9ded3.png\" data-download-href=\"https://ethresear.ch/uploads/default/3f4b7c4f8afa28b742eb494cce687ca245b9ded3\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/f/3f4b7c4f8afa28b742eb494cce687ca245b9ded3_2_690x196.png\" alt=\"image\" data-base62-sha1=\"91VO53jHKSmYG6k4FQvPczrQSfF\" width=\"690\" height=\"196\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/f/3f4b7c4f8afa28b742eb494cce687ca245b9ded3_2_690x196.png, https://ethresear.ch/uploads/default/optimized/3X/3/f/3f4b7c4f8afa28b742eb494cce687ca245b9ded3_2_1035x294.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/3/f/3f4b7c4f8afa28b742eb494cce687ca245b9ded3_2_1380x392.png 2x\" data-dominant-color=\"394E60\"></a></div><br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/c/2c339052835747c3057c1c6d6b4456033db13814.png\" data-download-href=\"https://ethresear.ch/uploads/default/2c339052835747c3057c1c6d6b4456033db13814\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/c/2c339052835747c3057c1c6d6b4456033db13814_2_690x196.png\" alt=\"image\" data-base62-sha1=\"6j1tYK4Rv89SsLEsJdnsa9wkL2s\" width=\"690\" height=\"196\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/c/2c339052835747c3057c1c6d6b4456033db13814_2_690x196.png, https://ethresear.ch/uploads/default/optimized/3X/2/c/2c339052835747c3057c1c6d6b4456033db13814_2_1035x294.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/2/c/2c339052835747c3057c1c6d6b4456033db13814_2_1380x392.png 2x\" data-dominant-color=\"344861\"></a></div><br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/1/21678b78eb6b694ff0938209d8de97d84a713df9.png\" data-download-href=\"https://ethresear.ch/uploads/default/21678b78eb6b694ff0938209d8de97d84a713df9\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/1/21678b78eb6b694ff0938209d8de97d84a713df9_2_690x196.png\" alt=\"image\" data-base62-sha1=\"4LvBdq2ei4WqgFGVWkWeQ2YqDfb\" width=\"690\" height=\"196\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/1/21678b78eb6b694ff0938209d8de97d84a713df9_2_690x196.png, https://ethresear.ch/uploads/default/optimized/3X/2/1/21678b78eb6b694ff0938209d8de97d84a713df9_2_1035x294.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/2/1/21678b78eb6b694ff0938209d8de97d84a713df9_2_1380x392.png 2x\" data-dominant-color=\"2F4361\"></a></div><br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/b/7b8453c6492353e30665d40174ad349c53cc73da.png\" data-download-href=\"https://ethresear.ch/uploads/default/7b8453c6492353e30665d40174ad349c53cc73da\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/b/7b8453c6492353e30665d40174ad349c53cc73da_2_690x196.png\" alt=\"image\" data-base62-sha1=\"hCGeNtOX2xgf8Z9kHh3MjvLy6x4\" width=\"690\" height=\"196\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/b/7b8453c6492353e30665d40174ad349c53cc73da_2_690x196.png, https://ethresear.ch/uploads/default/optimized/3X/7/b/7b8453c6492353e30665d40174ad349c53cc73da_2_1035x294.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/7/b/7b8453c6492353e30665d40174ad349c53cc73da_2_1380x392.png 2x\" data-dominant-color=\"2E4160\"></a></div><br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/a/ba04ccc1440d5207217bb4056c6d9cc2e2d03291.png\" data-download-href=\"https://ethresear.ch/uploads/default/ba04ccc1440d5207217bb4056c6d9cc2e2d03291\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/a/ba04ccc1440d5207217bb4056c6d9cc2e2d03291_2_690x196.png\" alt=\"image\" data-base62-sha1=\"qxB5LNkTTBzDTqAtBoeuat0D2bT\" width=\"690\" height=\"196\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/a/ba04ccc1440d5207217bb4056c6d9cc2e2d03291_2_690x196.png, https://ethresear.ch/uploads/default/optimized/3X/b/a/ba04ccc1440d5207217bb4056c6d9cc2e2d03291_2_1035x294.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/a/ba04ccc1440d5207217bb4056c6d9cc2e2d03291_2_1380x392.png 2x\" data-dominant-color=\"2D4060\"></a></div><br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/f/cf2266ce32541a90a009ee96c05f24714ebf7da6.png\" data-download-href=\"https://ethresear.ch/uploads/default/cf2266ce32541a90a009ee96c05f24714ebf7da6\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/f/cf2266ce32541a90a009ee96c05f24714ebf7da6_2_690x196.png\" alt=\"image\" data-base62-sha1=\"tyoxzhrkNdpoxIbdwUhiGTogasm\" width=\"690\" height=\"196\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/f/cf2266ce32541a90a009ee96c05f24714ebf7da6_2_690x196.png, https://ethresear.ch/uploads/default/optimized/3X/c/f/cf2266ce32541a90a009ee96c05f24714ebf7da6_2_1035x294.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/f/cf2266ce32541a90a009ee96c05f24714ebf7da6_2_1380x392.png 2x\" data-dominant-color=\"2D4160\"></a></div><br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/a/daec56f47b5ff0e9cfe26e087f4588f0ce99ebe5.png\" data-download-href=\"https://ethresear.ch/uploads/default/daec56f47b5ff0e9cfe26e087f4588f0ce99ebe5\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/a/daec56f47b5ff0e9cfe26e087f4588f0ce99ebe5_2_690x196.png\" alt=\"image\" data-base62-sha1=\"veGrwApfi44whMMDnEiXm4QqNWB\" width=\"690\" height=\"196\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/a/daec56f47b5ff0e9cfe26e087f4588f0ce99ebe5_2_690x196.png, https://ethresear.ch/uploads/default/optimized/3X/d/a/daec56f47b5ff0e9cfe26e087f4588f0ce99ebe5_2_1035x294.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/d/a/daec56f47b5ff0e9cfe26e087f4588f0ce99ebe5_2_1380x392.png 2x\" data-dominant-color=\"2D4060\"></a></div><br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/f/8f7211259a315e71a052cac3a52055de1eabbda8.png\" data-download-href=\"https://ethresear.ch/uploads/default/8f7211259a315e71a052cac3a52055de1eabbda8\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/f/8f7211259a315e71a052cac3a52055de1eabbda8_2_690x196.png\" alt=\"image\" data-base62-sha1=\"ksYFgLsAVQT0T6k5qn30eHaIC2Q\" width=\"690\" height=\"196\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/f/8f7211259a315e71a052cac3a52055de1eabbda8_2_690x196.png, https://ethresear.ch/uploads/default/optimized/3X/8/f/8f7211259a315e71a052cac3a52055de1eabbda8_2_1035x294.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/f/8f7211259a315e71a052cac3a52055de1eabbda8_2_1380x392.png 2x\" data-dominant-color=\"2E4260\"></a></div><br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/c/cc23d7506e2cc23e5b29ae96faee7ed609588d70.png\" data-download-href=\"https://ethresear.ch/uploads/default/cc23d7506e2cc23e5b29ae96faee7ed609588d70\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/c/cc23d7506e2cc23e5b29ae96faee7ed609588d70_2_690x196.png\" alt=\"image\" data-base62-sha1=\"t7UbYk1yY1sYNsylUx071r0MOjK\" width=\"690\" height=\"196\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/c/cc23d7506e2cc23e5b29ae96faee7ed609588d70_2_690x196.png, https://ethresear.ch/uploads/default/optimized/3X/c/c/cc23d7506e2cc23e5b29ae96faee7ed609588d70_2_1035x294.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/c/cc23d7506e2cc23e5b29ae96faee7ed609588d70_2_1380x392.png 2x\" data-dominant-color=\"2E4260\"></a></div><br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/2/a2153b4ce8fb4ee42360ccff33df0b311aa457e4.png\" data-download-href=\"https://ethresear.ch/uploads/default/a2153b4ce8fb4ee42360ccff33df0b311aa457e4\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/2/a2153b4ce8fb4ee42360ccff33df0b311aa457e4_2_690x196.png\" alt=\"image\" data-base62-sha1=\"n7QQ0kIiAOOzLJpGsRGS6Cyg9mc\" width=\"690\" height=\"196\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/2/a2153b4ce8fb4ee42360ccff33df0b311aa457e4_2_690x196.png, https://ethresear.ch/uploads/default/optimized/3X/a/2/a2153b4ce8fb4ee42360ccff33df0b311aa457e4_2_1035x294.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/a/2/a2153b4ce8fb4ee42360ccff33df0b311aa457e4_2_1380x392.png 2x\" data-dominant-color=\"2E4160\"></a></div><p></p>\n<p>Following are the special cases for based rollup (tx cost = $0.05, block time = 12 sec) and typical L2s (tx cost = 0.01, block time = 2 sec), respectively:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/4/e463cf577f86a2492c5fb4e0f15d30284212bf6d.png\" data-download-href=\"https://ethresear.ch/uploads/default/e463cf577f86a2492c5fb4e0f15d30284212bf6d\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/4/e463cf577f86a2492c5fb4e0f15d30284212bf6d_2_690x196.png\" alt=\"image\" data-base62-sha1=\"wAqHIcRfbTF0TGvIQHxmaznEs2N\" width=\"690\" height=\"196\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/4/e463cf577f86a2492c5fb4e0f15d30284212bf6d_2_690x196.png, https://ethresear.ch/uploads/default/optimized/3X/e/4/e463cf577f86a2492c5fb4e0f15d30284212bf6d_2_1035x294.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/e/4/e463cf577f86a2492c5fb4e0f15d30284212bf6d_2_1380x392.png 2x\" data-dominant-color=\"3E4E5E\"></a></div><br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/5/55c066b2d8b4c15d67d1eb5eb9ad1008d4840ecd.png\" data-download-href=\"https://ethresear.ch/uploads/default/55c066b2d8b4c15d67d1eb5eb9ad1008d4840ecd\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/5/55c066b2d8b4c15d67d1eb5eb9ad1008d4840ecd_2_690x196.png\" alt=\"image\" data-base62-sha1=\"ceANL8LM94BTzkaKDEdbXWp7UiV\" width=\"690\" height=\"196\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/5/55c066b2d8b4c15d67d1eb5eb9ad1008d4840ecd_2_690x196.png, https://ethresear.ch/uploads/default/optimized/3X/5/5/55c066b2d8b4c15d67d1eb5eb9ad1008d4840ecd_2_1035x294.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/5/5/55c066b2d8b4c15d67d1eb5eb9ad1008d4840ecd_2_1380x392.png 2x\" data-dominant-color=\"3B4B5F\"></a></div><p></p>\n<h2><a name=\"h-53-discussion-15\" class=\"anchor\" href=\"https://ethresear.ch#h-53-discussion-15\"></a>5.3. Discussion</h2>\n<p>It is clear that FM-AMM performs better under certain conditions, including L2s and L1 with low transaction costs, and this partially explains why the results in [CF23] was rather mixed and defer by each pair. Due to its nature of forcing competition over price between arbitrageurs, it performs well even in high volatility conditions. Notably, this is achieved without raising the swap fee, which typically results in losing retail order flow. Thus, FM-AMM can lose less to arbitrageurs while not sacrificing retail order flow.</p>\n<h1><a name=\"h-6-conclusion-16\" class=\"anchor\" href=\"https://ethresear.ch#h-6-conclusion-16\"></a>6. Conclusion</h1>\n<p>As the authors of [CF23] claimed, FM-AMM indeed achieves superior performance under certain conditions, even without raising swap fees. It suits L2s particularly well. However, our analysis is based on several non-realistic assumptions, especially the (short-term) censorship resistance assumption and simultaneous bid submission. Future research will focus on more relaxed conditions to provide a more comprehensive evaluation.</p>\n<h1><a name=\"h-7-references-17\" class=\"anchor\" href=\"https://ethresear.ch#h-7-references-17\"></a>7. References</h1>\n<p>[MMRZ22] J. Milionis, C. C. Moallemi, T. Roughgarden, and A. L. Zhang. Automated Market Making and Loss-Versus-Rebalancing, <em>arXiv preprint <a href=\"https://arxiv.org/abs/2208.06046\" rel=\"noopener nofollow ugc\">arXiv:2208.06046</a></em>, 2022.<br>\n[MMR23] J. Milionis, C. C. Moallemi, and T. Roughgarden. Automated Market Making and Arbitrage Profits in the Presence of Fees, <em>arXiv preprint <a href=\"https://arxiv.org/abs/2305.14604\" rel=\"noopener nofollow ugc\">arXiv:2305.14604</a></em>, 2023.<br>\n[GGMR22] G. Ramseyer, M. Goyal, A. Goel, and D. Mazières. Augmenting Batch Exchanges with Constant Function Market Makers, <em>arXiv preprint <a href=\"https://arxiv.org/abs/2210.04929\" rel=\"noopener nofollow ugc\">arXiv:2210.04929</a></em>, 2022.<br>\n[CF23] A. Canidio and A. Fritsch. Arbitrageurs’ profits, LVR, and sandwich attacks: batch trading as an AMM design response, <em>arXiv preprint <a href=\"https://arxiv.org/abs/2307.02074\" rel=\"noopener nofollow ugc\">arXiv:2307.02074</a></em>, 2023.<br>\n[CM24] D. Crapis and J. Ma. The Cost of Permissionless Liquidity Provision in Automated Market Makers, <em>arXiv preprint <a href=\"https://arxiv.org/abs/2402.18256\" rel=\"noopener nofollow ugc\">arXiv:2402.18256</a></em>, 2024.<br>\n[N22] A. Nezlobin. Ethereum Block Times, MEV, and LP returns, <em>Medium article <a href=\"https://medium.com/@alexnezlobin/ethereum-block-times-mev-and-lp-returns-5c13dc99e80\" rel=\"noopener nofollow ugc\">Ethereum Block Times, MEV, and LP returns</a></em>, 2022<br>\n[E24] A. Elsts. CEX/DEX arbitrage, transaction fees, block times, and LP profits, <em>Ethresearch Forum article <a href=\"https://ethresear.ch/t/cex-dex-arbitrage-transaction-fees-block-times-and-lp-profits/19444\">CEX/DEX arbitrage, transaction fees, block times, and LP profits</a></em>, 2024</p>\n            <p><small>5 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/notes-on-the-lvr-of-fm-amm/20151\">Read full topic</a></p>","link":"https://ethresear.ch/t/notes-on-the-lvr-of-fm-amm/20151","pubDate":"Fri, 26 Jul 2024 06:21:02 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20151"},"source":{"@url":"https://ethresear.ch/t/notes-on-the-lvr-of-fm-amm/20151.rss","#text":"Notes on the LVR of FM-AMM"},"filter":false},{"title":"A design for APS-burn in the context of a Decentralized L2","dc:creator":"simbro","category":"Layer 2","description":"<h1><a name=\"aps-burn-in-the-context-of-a-decentralized-l2-1\" class=\"anchor\" href=\"https://ethresear.ch#aps-burn-in-the-context-of-a-decentralized-l2-1\"></a>APS-burn in the context of a Decentralized L2</h1>\n<h1><a name=\"overview-2\" class=\"anchor\" href=\"https://ethresear.ch#overview-2\"></a>Overview</h1>\n<p>We propose a design for Attester-Proposer-Separation that is tailored for the context of a decentralized L2. This design is intended to operate in the context of an L2 with its own validator set, running some sort of BFT consensus protocol, with single slot finality.</p>\n<p>This design is based on the <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\" rel=\"noopener nofollow ugc\">APS-burn design</a> from <a class=\"mention\" href=\"https://ethresear.ch/u/barnabe\">@barnabe</a>, but with some notable differences. It assumes that there are short block times, preferably one second, and no longer than 2 seconds, and that each block is final within the scope of the canonical L2 chain (prior to being finalized on L1) . This design aims to obtain the benefits of APS in an L2 context, while aiming to mitigate censorship, and mitigate the negative externalities of multi-block MEV. These properties are achieved using a sealed-bid auction, similar in principle to the <a href=\"https://ethresear.ch/t/sealed-execution-auction/20060\">Sealed execution auction</a> proposal from Anders, but in an L2 context.</p>\n<p>To understand the motivation behind this design, as well as its trade-offs, see the “benefits” and “risks” sections below.</p>\n<p>DO NOT read this post if:</p>\n<ul>\n<li>You are trying to keep up with the important developments in Ethereum and attempting to determine which posts are important and which aren’t. This post is intended for soliciting early feedback on a design that is specific to decentralized rollups, and is not a finalized proposal.</li>\n</ul>\n<p>DO read this post if:</p>\n<ul>\n<li>You are trying to decentralize a rollup, and are considering adopting an PoS consensus protocol, and are interested in exploring ideas within the design space.</li>\n</ul>\n<h1><a name=\"related-reading-3\" class=\"anchor\" href=\"https://ethresear.ch#related-reading-3\"></a>Related Reading</h1>\n<ul>\n<li><a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\" rel=\"noopener nofollow ugc\">More pictures about proposers and builders - Barnabé Monnot</a></li>\n<li><a href=\"https://arxiv.org/abs/2301.13321\" rel=\"noopener nofollow ugc\">Censorship Resistance in On-Chain Auctions - Elijah Fox, Mallesh Pai, Max Resnick</a></li>\n<li><a href=\"https://ethresear.ch/t/sealed-execution-auction/20060\">Sealed execution auction - Anders Elowsson</a></li>\n<li><a href=\"https://ethresear.ch/t/on-block-space-distribution-mechanisms/19764\">On block-space distribution mechanisms - Mike Neuder</a></li>\n<li><a href=\"https://mirror.xyz/0x03c29504CEcCa30B93FF5774183a1358D41fbeB1/CPYI91s98cp9zKFkanKs_qotYzw09kWvouaAa9GXBrQ\" rel=\"noopener nofollow ugc\">Block vs. Slot Auction PBS - Julian Ma<br>\n</a></li>\n</ul>\n<p>MEV Burn related reading:</p>\n<ul>\n<li><a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590\">MEV burn—a simple design</a></li>\n<li><a href=\"https://ethresear.ch/t/the-price-is-right-realigning-proposer-builder-incentives-with-predictive-mev-burn/18656\">The price is right: Realigning proposer-builder incentives with predictive MEV-burn</a></li>\n<li><a href=\"https://ethresear.ch/t/dr-changestuff-or-how-i-learned-to-stop-worrying-and-love-mev-burn/17384\">Dr. changestuff or: how i learned to stop worrying and love mev-burn</a></li>\n<li><a href=\"https://ethresear.ch/t/in-a-post-mev-burn-world-some-simulations-and-stats/17092\">In a post MEV-Burn world - Some simulations and stats</a></li>\n</ul>\n<h1><a name=\"description-4\" class=\"anchor\" href=\"https://ethresear.ch#description-4\"></a>Description</h1>\n<p>We propose a method whereby the right to propose a future block is obtained via an on-chain auction.</p>\n<p>For every slot <span class=\"math\">n</span>, the auction for block proposal rights starts at slot <span class=\"math\">n - t</span> and runs for <span class=\"math\">k</span> slots. The auction closes at slot <span class=\"math\">(n - t) + k</span>. During the period between <span class=\"math\">n - t</span> and <span class=\"math\">(n - t) + k</span>, bids are submitted to an on-chain smart contract. Each bid specifies an amount of some defined token that will be burned as part of the block that will be proposed at slot <span class=\"math\">n</span>. The winning bid is the bid that burns the most tokens.</p>\n<p>During the auction between slot <span class=\"math\">n - t</span> and <span class=\"math\">(n - t) + k</span>, bids are posted on-chain as sealed commitments. After the auction closes at slot <span class=\"math\">k</span>, there is a buffer period of <span class=\"math\">b</span> blocks in which no new bids are accepted by the smart contract for slot <span class=\"math\">n</span>. After this buffer period, and up to slot <span class=\"math\">n</span>, bidders post their opened commitments, which reveal the amount they are bidding. The block that is proposed to the network at slot <span class=\"math\">n</span>, must be from the same address specified in the highest bid in the auction for slot <span class=\"math\">n</span>, and also burn the amount of tokens specified in the bid.</p>\n<p>Each bid is composed of the height of the slot being bidded on, the address that will propose the block, and an amount of MEV that will be burned in the block.</p>\n<h3><a name=\"mitigating-multi-block-mev-5\" class=\"anchor\" href=\"https://ethresear.ch#mitigating-multi-block-mev-5\"></a>Mitigating multi-block MEV</h3>\n<p>By incorporating a sealed bid auction, we can mitigate concerns around multi-block MEV. One of the main concerns with various APS designs is that it allows bidders to bid on block proposal rights for a contiguous segment of slots. If a bidder knows that they have the rights to slot <span class=\"math\">n</span>, then they can bid higher than anyone else for slot <span class=\"math\">n+1</span>, because they know that they can employ lucrative multi-block MEV strategies such as censoring price oracle updates or censoring sell orders on a trading pair to drive up the price etc.</p>\n<p>In order to mitigate this concern, it is imperative that the bidders have no guarantee of having won the auction for slot <span class=\"math\">n</span> while the auction for slot <span class=\"math\">n+1</span> is open.</p>\n<p>As an illustrative example, consider the following instantiation where bidders bid for the right to propose a block 12 slots in the future <span class=\"math\">(t = 12)</span>, and they have 4 slots in which to submit bids <span class=\"math\">(k = 4)</span>, followed by a buffer phase in which the on-chain auction will not accept bids <span class=\"math\">(b = 2)</span> followed by the reveal phase.</p>\n<p>As you can see from the following visualization, is we assume that all bids for the slot <span class=\"math\">n</span> auction are revealed at slot <span class=\"math\">(n - t) + k + b</span> then the bidder for slot <span class=\"math\">n</span> only finds out that they have won block proposal rights for slot <span class=\"math\">n</span> after the auction for slot <span class=\"math\">n+1</span> and slot <span class=\"math\">n+2</span> have already closed.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/2/12de37869ca318f21a59cb84c3ddab8f309c90ee.png\" data-download-href=\"https://ethresear.ch/uploads/default/12de37869ca318f21a59cb84c3ddab8f309c90ee\" title=\"L2_APS-burn\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/2/12de37869ca318f21a59cb84c3ddab8f309c90ee_2_690x280.png\" alt=\"L2_APS-burn\" data-base62-sha1=\"2GUGTXcZdSg2rqfjdOoon3b4BL8\" width=\"690\" height=\"280\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/2/12de37869ca318f21a59cb84c3ddab8f309c90ee_2_690x280.png, https://ethresear.ch/uploads/default/optimized/3X/1/2/12de37869ca318f21a59cb84c3ddab8f309c90ee_2_1035x420.png 1.5x, https://ethresear.ch/uploads/default/original/3X/1/2/12de37869ca318f21a59cb84c3ddab8f309c90ee.png 2x\" data-dominant-color=\"F3F6F3\"></a></div><p></p>\n<h3><a name=\"censorship-6\" class=\"anchor\" href=\"https://ethresear.ch#censorship-6\"></a>Censorship</h3>\n<p>Censorship is a concern with any on-chain auction (ref: <a href=\"https://arxiv.org/abs/2301.13321\" rel=\"noopener nofollow ugc\">Censorship Resistance in On-Chain Auctions</a>). Obviously block builders are highly incentivized to censor any transactions to the on-chain auction that that carry bids that aren’t their own, which means that the only bids that will make it to the on-chain contract are from block builders that already have proposal rights to slots, as these builders will likely only include their own transactions to the auction contract.</p>\n<p>The only way to fully mitigate censorship is through some form of <a href=\"https://eips.ethereum.org/EIPS/eip-7547\" rel=\"noopener nofollow ugc\">inclusion lists</a>, or a design that facilitates <a href=\"https://ethresear.ch/t/concurrent-block-proposers-in-ethereum/18777\">multiple concurrent block proposers</a>. We propose that this sort of mechanism is an integral part of this design, but the exact details of the mechanism employed are out of scope for this piece.</p>\n<p>However, even without an inclusion list / MCP mechanism, censorship of auction transactions becomes prohibitively expensive quite quickly. This is because every transaction that is censored has associated transaction fees that can be collected by some other block builder, which they can use to increase their bids with. The censoring block builder will therefore incur a competitive disadvantage for every bid they censor. Moreover, the censoring block builder will incur the cost of each bid they censor for every block they propose, resulting in a linear increase in cost over time. In other words, If <span class=\"math\">n</span> blocks are proposed, and <span class=\"math\">k</span> transactions are censored per block, the total cost incurred by the censoring block builder becomes:</p>\n<p><span class=\"math\">CoC=n\\times\\sum_{i=1}^{k}C_{i}</span></p>\n<h3><a name=\"collateralization-and-penalties-7\" class=\"anchor\" href=\"https://ethresear.ch#collateralization-and-penalties-7\"></a>Collateralization and Penalties</h3>\n<p>This design requires that bidders are collateralized in order to submit bids, and that this collateral is slashed under certain circumstances:</p>\n<ul>\n<li>If bid commitments are not revealed, this can incur penalties. The reason for this is to prevent bidders from submitting multiple bids and then just revealing them conditionally based on what other bidders reveal (as detailed in <a href=\"https://arxiv.org/pdf/2301.12532\" rel=\"noopener nofollow ugc\">this paper</a> - h/t <a class=\"mention\" href=\"https://ethresear.ch/u/quintuskilbourn\">@quintuskilbourn</a> for this). Obviously censorship resistance is important in order to prevent these penalties from being used for griefing attacks.</li>\n<li>If the winner of an auction for slot <span class=\"math\">n</span>, does not propose a block for slot <span class=\"math\">n</span>, they are slashed.</li>\n<li>If the winner of an auction for slot <span class=\"math\">n</span>, equivocates and proposes more than one block for slot <span class=\"math\">n</span>, they are slashed.</li>\n<li>If the proposed block is valid, and is from the auction winner, but does not burn the amount of MEV that was stipulated in the winning bid, the collateral is slashed.</li>\n</ul>\n<p>There are two ways to approach collateralization:</p>\n<h4><a name=\"h-1-per-bidder-collateralization-8\" class=\"anchor\" href=\"https://ethresear.ch#h-1-per-bidder-collateralization-8\"></a>1 | Per-Bidder-Collateralization</h4>\n<p>This requires that a block builders / bidders posts some collateral on-chain, and that this will be subject to slashing conditions. Once the collateral is posted, the bidder can participate in any number of auctions and submit any number of bids. The collateral can be withdrawn at any stage, but is subject to some defined delay period.</p>\n<h4><a name=\"h-2-per-bid-bonding-9\" class=\"anchor\" href=\"https://ethresear.ch#h-2-per-bid-bonding-9\"></a>2 | Per-Bid-Bonding</h4>\n<p>Bidders do not need to be collateralized, but each individual bid will require a bond. In the case of the winning bid, the bond is returned when the block for the slot is delivered. In the case of not winning the bid, the bond is returned only if the bid commitment was revealed.</p>\n<p>As a side note: per-bid-bonding can also potentially be used to prevent bids being revealed earlier through some side-channel, by allowing anyone to cancel their bid before the auction closes and withdraw their bond if they reveal the pre-image. Once the auction is closed, then only the original bidder can withdraw the bond.</p>\n<p>There are subtle trade-offs between the two approaches:</p>\n<ul>\n<li>\n<p>Per-bid-bonding could potentially be more centralizing, as it favors better capitalized bidders. With a slot <span class=\"math\">n+t</span> auction with a per-bid bond of <span class=\"math\">S</span>, then bidders will need <span class=\"math\">t \\times S</span> to participate in every auction.</p>\n</li>\n<li>\n<p>On the other hand, this potentially improves censorship resistance to a degree, as the same bidder can bid from different addresses, reducing the scope for targeted censorship of specific rival block builders.</p>\n</li>\n</ul>\n<h3><a name=\"preventing-bids-from-being-revealed-early-10\" class=\"anchor\" href=\"https://ethresear.ch#preventing-bids-from-being-revealed-early-10\"></a>Preventing bids from being revealed early</h3>\n<p>It’s not entirely clear what the incentives would be for bidders to reveal their bids early, but the effect of revealing bids early will undermine the value of a sealed-bid auction, and will allow for multi-block MEV strategies to be employed. We can imagine a scenario whereby somebody constructs a mechanism employing ZKPs to allow bidders to reveal their bids, in order to understand if their bid is lower than another bid, which would give them the option to bid higher. This could be a useful tool for participants in the auction.</p>\n<p>To mitigate against the risks of bidders revealing their bids early, it should be impossible, or very hard, to prove what the bid was. There are a number of ways of accomplishing this:</p>\n<h4><a name=\"using-threshold-encryption-11\" class=\"anchor\" href=\"https://ethresear.ch#using-threshold-encryption-11\"></a>Using threshold encryption</h4>\n<p>The validators will use distributed-key-generation (DKG) to create a threshold encryption key, which is part of the headers for every block. The BFT round leader will also be responsible for collecting the keys from validators, posting the encryption key, and also gossipping the decryption key at the right time, so that it can also be included in the block headers. This will allow bidders to encrypt their bids when they are posted on-chain. It will also allow them to decrypt their bids locally to ascertain if they have won the block proposal rights for slot <span class=\"math\">n</span>. At this stage it should be deterministically known to all parties who have won the slot <span class=\"math\">n</span> auction.</p>\n<p>Upon receiving a new block for slot <span class=\"math\">n</span>, validators will examine the amount of MEV burned in the block as well as the address of the proposer. They will take these two pieces of data and encrypt them using the threshold encryption key for the auction for slot <span class=\"math\">n</span>. If there is a bid that exactly matches the ciphertext, and that bid is from the proposer that is proposing the block, and is correctly collateralized, and most importantly, if there is no higher bid in the auction, then that block is accepted. This construction can be strengthened by imposing slashing conditions on entities that propose blocks that do not have a winning bid associated with it.</p>\n<p>The benefit of this approach is that it precludes any possibility of revealing bids early, assuming an honest majority of validators. However, it does add some extra complexity to the consensus layer, as well as the overhead of establishing clear and reliable public transmission of threshold encryption keys.</p>\n<h4><a name=\"using-a-verifiable-delay-function-12\" class=\"anchor\" href=\"https://ethresear.ch#using-a-verifiable-delay-function-12\"></a>Using a Verifiable Delay Function</h4>\n<p>In order to reveal a commitment, the smart contract must verify an accompanying Verifiable Delay Function (VDF) proof. The VDF ensures that any bid must take at least <span class=\"math\">d</span> seconds to produce a proof for. While there is nothing to stop bidders revealing their bids, it makes it difficult for bidders to prove what they bid, as the proof will take approximately <span class=\"math\">d</span> seconds to produce.</p>\n<p>There are multiple VDF schemes that can be employed. Such a scheme was proposed by Nomadic Labs (see <a href=\"https://eprint.iacr.org/2023/977.pdf\" rel=\"noopener nofollow ugc\">Timed Commitments Revisited</a>).</p>\n<p>Note that in this scheme, the commit binding is deterministic, so not completely resilient to revealing bids. In the specific scheme, if the bidder shares the values used to generate the commitment (i.e., <span class=\"math\">G</span>, <span class=\"math\">g</span>, <span class=\"math\">e</span>, <span class=\"math\">k</span>, and <span class=\"math\">ct</span>), others can reproduce the commitment <span class=\"math\">\\psi</span>, thereby revealing the bid. Further work is needed to understand the complexity involved in doing this in a ZKP, in order to understand whether the complexity is sufficient to discourage revealing of bids. If needed, we would change the scheme to use a key derivation function that is suboptimal for use within zk circuits, resulting in inefficient proof generation, and therefore a similar level of effort required to create the actual VDF proof.</p>\n<p>Note that while it is possible to just use VDFs by themselves without the complexity of a commit-reveal scheme, this has the drawback of allowing bidders to produce multiple VDFs concurrently in order to retain the option of conditional bidding.</p>\n<h1><a name=\"risks-concerns-13\" class=\"anchor\" href=\"https://ethresear.ch#risks-concerns-13\"></a>Risks / Concerns</h1>\n<h4><a name=\"reduced-competitiveness-in-bidding-14\" class=\"anchor\" href=\"https://ethresear.ch#reduced-competitiveness-in-bidding-14\"></a>Reduced Competitiveness in Bidding</h4>\n<p>Bids are a bet on averages, this can potentially have more centralizing effects than a JIT block auction, because it precludes any opportunistic MEV strategies that capitalize on MEV spikes, which could prevent block builders that exist on these strategies from participating. Also, because it is a bet on averages, the system may favor the most well capitalized block builders.</p>\n<p>Also, because we are using a sealed-bid auction, participants are not bidding in response to each other’s bids. This removes the natural competitiveness that drives up prices, and so the overall level of bidding is likely to be somewhat lower.</p>\n<h4><a name=\"l2-reorg-resistance-15\" class=\"anchor\" href=\"https://ethresear.ch#l2-reorg-resistance-15\"></a>L2 reorg resistance</h4>\n<p>This design assumes a BFT consensus protocol with single-slot-finality, wherein reorgs do not occur in the normal case. If reorgs are a concern, one can adapt the above design to include a second buffer phase at the end of the reveal phase but before slot <span class=\"math\">n</span>. This would force any incentivized reorg to be at least as deep as the size of the second buffer phase, making it much more expensive, and so disincentivizing malicious reorgs.</p>\n<h1><a name=\"benefits-16\" class=\"anchor\" href=\"https://ethresear.ch#benefits-16\"></a>Benefits</h1>\n<h4><a name=\"the-benefit-of-aps-is-that-there-is-no-longer-a-requirement-for-mev-boost-relays-17\" class=\"anchor\" href=\"https://ethresear.ch#the-benefit-of-aps-is-that-there-is-no-longer-a-requirement-for-mev-boost-relays-17\"></a>The benefit of APS is that there is no longer a requirement for mev-boost relays</h4>\n<p>The reason is that there is no negotiation between proposers and relayers (in terms of the proposer being the BFT round leader, who proposes blocks to the validator set). In the mev-boost scenario, the relayers are required in order to give some assurance to the builder that the proposer will not unbundle their block and steal the MEV, and also to give assurance to the proposer that the builder will in fact release the block on time, and not cause the proposer to get slashed. This is necessary to maintain PBS (unless ePBS is implemented), without which searcher bots will engage in PGAs which will cause significant and adverse network congestion.</p>\n<h4><a name=\"it-reduces-the-centralizing-effects-of-mev-on-the-validator-set-18\" class=\"anchor\" href=\"https://ethresear.ch#it-reduces-the-centralizing-effects-of-mev-on-the-validator-set-18\"></a>It reduces the centralizing effects of MEV on the validator set</h4>\n<p>While mev-boost already does this in terms of democratizing access to MEV, there are still some centralizing effects from having MEV flowing to validators. For example, co-locating validator nodes close to relays means that validators can benefit from reduced latency and the higher bids that emerge in the final milliseconds of the slot. This latency advantage has compelling economies of scale for larger staking pools, which drives both economic and geographic centralization.</p>\n<h4><a name=\"strengthens-pos-tokenomic-design-19\" class=\"anchor\" href=\"https://ethresear.ch#strengthens-pos-tokenomic-design-19\"></a>Strengthens PoS tokenomic design</h4>\n<p>For L2s that maintain their own gas token, APS simplifies the modeling of token rewards and penalties with regards to the validator set. This is because MEV no longer flows to the validators, which makes the validator risk/reward profile more deterministic and easier to reason about. Validators will just receive rewards as designed by the protocol and nothing more, which makes it easier to design PoS tokenomics. APS-burn also acts as a natural token sink, strengthening the tokenomics by having a deflationary effect on the token itself.</p>\n<hr>\n<h1><a name=\"future-work-20\" class=\"anchor\" href=\"https://ethresear.ch#future-work-20\"></a>Future Work</h1>\n<p>As well as soliciting early feedback and peer review, we plan to work on determining how best to model this design so that we can understand the trade-offs in the design choices such as threshold encryption or VDFs, parameterization of the on-chain auction, per-bidder-collateralization or per-bid-bonding, and to understand the extent to which we can confidently predict the behavior of participants.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/a-design-for-aps-burn-in-the-context-of-a-decentralized-l2/20146\">Read full topic</a></p>","link":"https://ethresear.ch/t/a-design-for-aps-burn-in-the-context-of-a-decentralized-l2/20146","pubDate":"Thu, 25 Jul 2024 10:16:16 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20146"},"source":{"@url":"https://ethresear.ch/t/a-design-for-aps-burn-in-the-context-of-a-decentralized-l2/20146.rss","#text":"A design for APS-burn in the context of a Decentralized L2"},"filter":false},{"title":"The case for decentralization increasing efficiency is overstated","dc:creator":"captgouda24","category":"Economics","description":"<p>Block-building on Ethereum has become quite centralized. 90% of blocks are auctioned off through MEV-Boost. Numerous solutions have been proposed, including anonymous inclusion lists and execution tickets. People are concerned about this, both for essentially ideological reasons, and for reasons of efficiency. Blockchains have an ethos of being open to all people, whether or not that is maximally efficient. There is a tradeoff between efficiency (in the sense of getting each block built in the most efficient way, by the most efficient builders) and “fairness”, or including all transactions, if people’s use of the chain is unaffected by the degree of centralization. If blockchain users are concerned their transactions will eventually be sanctioned and rendered worthless, they may avoid that blockchain, or avoid cryptocurrencies altogether. Thus, seemingly inefficient decentralization may be optimal for the blockchain as a whole, and would be unanimously preferred by all blockbuilders to the present equilibrium.</p>\n<p>I am concerned, however, that the efficiency case is overstated. Imagine there is a firm so efficient at MEV extraction that they build all of the blocks on chain. If them doing so would cause people to leave the blockchain altogether, then they are incentivized to not bid on some blocks at all.</p>\n<p>In “<a href=\"https://ethresear.ch/t/on-block-space-distribution-mechanisms/19764\">On block-space distribution mechanisms</a>”, Neuder, Garavmidi, and Roughgarden propose execution-tickets as a mechanism for distributing block-building rights, using a proportional all-pay auction. Bidders buy lottery tickets for the right to build a block. In the example given, they have two buyers, buyer 1 with value 4, and buyer 2 with value 2. Under a perfectly efficient system, buyer one always gets the block, at price 2+epsilon. Under their all-pay system, buyer 1 bids 8/9th and buyer 2 bids 4/9th, with them receiving the block rights 2/3rds and 1/3rd of the time, respectively.</p>\n<p>Under the description of the example, however, this necessarily <em>cannot</em> improve efficiency. If excessive centralization would scare away some users from using the chain at all, the winning monopolist is incentivized to give away some of the block. The value of efficiency is already reflected in their valuations. If you assume that their valuation is always higher, then you are assuming that there is no efficiency case whatsoever. You only have an ideological case, which is fine on its own terms — but you should not mix and match arguments which overstate your case. Note too that we are only caring about one side of the ledger, those who want their transactions to be included. Mightn’t it be possible that some people are repulsed by crypto’s shady reputation?</p>\n<p>Nor should this necessarily apply in cases of monopolistic competition. To simply not bid is not the only way to redistribute blocks. If it were the case, the main block-builders would indeed be stuck in a prisoner’s dilemma — they could choose not to bid, but they would have to all do it. If, however, the winners hold another auction for the block, with some of the fairness raising characteristics as before, they can decentralize to the extent which is optimal for them.The drawback is that now the builders internalize a smaller portion of the gains. There is a free-rider problem with decentralization. However, as the market becomes more decentralized, doubtless people will be less concerned about censorship.</p>\n<p>The efficiency argument for decentralization therefore much smaller than it would appear. There should probably be a split between allocatively efficient auctions for blocks, and allocatively fair but inefficient markets. What is the right split between the two? It is highly unlikely that it is optimal to only sell blocks in one way all the time.</p>\n<p>I think that this is an ideal question for a prediction market. The right amount of decentralization is a macro question. You’re not going to be able to A/B test it in a couple days. Your choices are trying to influence people’s choice in the long run, and answer the question: what is the long run amount of decentralization that maximizes the amount of capital put on the chain. Is there any better use of prediction markets than this? I am somewhat agnostic to the exact method of determining the split — and have no opinions whatsoever as to the proper proportion.</p>\n<p><em>This post was first posted on my blog <a href=\"https://nicholasdecker.substack.com/p/the-case-for-blockchain-decentralization\" rel=\"noopener nofollow ugc\">here</a>. Thank you for reading this, please tell me if you disagree.</em></p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/the-case-for-decentralization-increasing-efficiency-is-overstated/20140\">Read full topic</a></p>","link":"https://ethresear.ch/t/the-case-for-decentralization-increasing-efficiency-is-overstated/20140","pubDate":"Wed, 24 Jul 2024 18:48:55 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20140"},"source":{"@url":"https://ethresear.ch/t/the-case-for-decentralization-increasing-efficiency-is-overstated/20140.rss","#text":"The case for decentralization increasing efficiency is overstated"},"filter":false},{"title":"Builder Bidding Behaviors in ePBS","dc:creator":"terence","category":"Economics","description":"<p>Special thanks to <a class=\"mention\" href=\"https://ethresear.ch/u/soispoke\">@soispoke</a> for the review</p>\n<h1><a name=\"background-1\" class=\"anchor\" href=\"https://ethresear.ch#background-1\"></a>Background</h1>\n<p>Builder bidding strategies in the MEV-Boost world have been studied extensively over some time. Numerous <a href=\"https://arxiv.org/html/2312.14510v3\" rel=\"noopener nofollow ugc\">excellent resources</a>, <a href=\"https://arxiv.org/abs/2407.13931\" rel=\"noopener nofollow ugc\">literature</a>, <a href=\"https://ethresear.ch/t/game-theoretic-model-for-MEV-Boost-auctions-mma/16206\">game-theoretic models</a>, and <a href=\"https://collective.flashbots.net/t/MEV-Boost-builder-bids-archive/3561\" rel=\"noopener nofollow ugc\">archives</a> capture the current builder bidding behaviors on how to win block building right for an Ethereum slot. Today, builder bidding war for MEV-Boost is a complex interplay between latencies, relays, and strategy effectiveness. In this post, we argue that builder bidding strategies become simpler in ePBS world and we highlight the key differences in how bidding strategies change under the new ePBS market space rules, strategy limitations, and reduced latency benefits in ePBS.</p>\n<h1><a name=\"market-spaces-2\" class=\"anchor\" href=\"https://ethresear.ch#market-spaces-2\"></a>Market Spaces</h1>\n<p>Here, we summarize three types of market spaces. The first one is MEV-Boost. The second and third ones are ePBS. MEV-Boost is push + pull based market space, meaning the builders push the bids to the relays, and the proposer pulls the bids from the relays. ePBS contains two types of market spaces: the P2P Bid Gossip Netwok, which is push-based, and the Builder RPC Endpoint, which is pull-based.</p>\n<ul>\n<li><strong>MEV-Boost market space</strong>\n<ul>\n<li><strong>Push + pull-based</strong>: The builders push bids to the relay, and the proposer pulls the bids from the relay.</li>\n</ul>\n</li>\n<li><strong>ePBS market spaces</strong>\n<ul>\n<li><strong>P2P market space</strong>\n<ul>\n<li><strong>Push-based</strong>. The builder pushes the bid to the p2p network.</li>\n</ul>\n</li>\n<li><strong>Builder RPC market space</strong>\n<ul>\n<li><strong>Pull-based</strong>. The proposer pulls the bids from the builder RPC end points.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>We define the following market space characteristics given how the consensus <a href=\"https://github.com/ethereum/consensus-specs/pull/3828\" rel=\"noopener nofollow ugc\">spec</a> is written today. Builder-API is still <strong>TBD</strong> for ePBS.</p>\n<h2><a name=\"mev-boost-market-space-3\" class=\"anchor\" href=\"https://ethresear.ch#mev-boost-market-space-3\"></a>MEV-Boost Market Space</h2>\n<ul>\n<li><strong>Open auction</strong>: Builders that subscribe to the relay’s feed can see the every builder’s latest bid.</li>\n<li><strong>Continuous auction</strong>: Builders can bid multiple times and cancel previous bids.</li>\n<li><strong>Auction termination</strong>: The auction terminates when the proposer calls <code>getHeader</code> and when the relay returns the header to the proposer to sign. The relay may delay the header response for a timing game. This means the relayer has the final control over when the auction terminates.</li>\n<li><strong>Profit sharing</strong>: Some relays take the difference between the winning bid and the second-highest bid received from builders. This difference goes to the relay, with a portion potentially refunded to the builder. This transforms the auction dynamic into a second-price auction. However, not all relays adopt this approach, and complete trust in the relay is mandatory.</li>\n<li>We assume the market space doesn’t verify block contents from the builder, hence it is an <a href=\"https://github.com/michaelneuder/optimistic-relay-documentation/blob/4fb032e92080383b7b5d8af5675ef2bf9855adc3/towards-ePBS.md\" rel=\"noopener nofollow ugc\"><strong>optimistic market space</strong></a>. The only delay is when the builder sends the block to the relay.</li>\n</ul>\n<h2><a name=\"epbs-p2p-market-space-4\" class=\"anchor\" href=\"https://ethresear.ch#epbs-p2p-market-space-4\"></a>ePBS P2P Market Space</h2>\n<ul>\n<li><strong>Open auction</strong>: Anyone can subscribe and listen to the P2P network for gossiped builder bids.</li>\n<li><strong>Single bid auction</strong>: To prevent DOS attacks on the P2P network, the current spec only allows builders to submit a single bid and above a certain minimum value. Any subsequent bid will be dropped by the nodes. There is no cancellation support over the P2P network.</li>\n<li><strong>Auction termination</strong>: The auction terminates when the proposer proposes the block which includes the builder’s bid. The proposer could play a timing game here and has the final control over when the auction terminates.</li>\n<li><strong>Profit sharing</strong>: The bid specifies the value, and the proposer gets the full value on the consensus layer as long as the consensus block that includes the bid remains canonical. There’s no profit sharing with 3rd parties.</li>\n<li>The market space is still <strong>optimistic</strong> and doesn’t need to verify the execution contents at inclusion time. If the execution block later becomes invalid or fails to reveal, the proposer still gets unconditional payment. The only delay here is the builder sending the bid to the P2P network. This delay is argubly <strong>longer</strong> than using a relay in MEV-Boost market space.</li>\n</ul>\n<h2><a name=\"epbs-builder-rpc-market-space-5\" class=\"anchor\" href=\"https://ethresear.ch#epbs-builder-rpc-market-space-5\"></a>ePBS Builder RPC Market Space</h2>\n<p>Note: The <a href=\"https://github.com/ethereum/builder-specs\" rel=\"noopener nofollow ugc\">Builder API</a> is undefined at this moment. This section is based on what we think the ePBS Builder API might look like, but it’s highly subjective to change and open for feedback. Below outlines one version of Builder API which we have been thinking.</p>\n<ul>\n<li><strong>Private auction</strong>: Only the proposer can request a bid from the builder. The proposer will sign the <code>getHeader</code> request using the builder’s public key. The builder’s bid remains private until requested by the proposer. Builders can’t sniff other builders’ bids unless the builder API allows this or the builder voluntarily opens their bids to the public.</li>\n<li><strong>Single</strong> (maybe multiple?) <strong>bid auction</strong>: Builders allow proposers to request a bid once, and any subsequent requests will result in an error. Builders may also allow proposers to request bids multiple times without error; this specific detail is undefined, and it’s unclear what the Nash outcome is here. If builders allow multiple requests, then the builder must ensure previous bids are canceled.</li>\n<li><strong>Auction termination</strong>: The auction terminates when the proposer requests the header and the proposer receives the header. The builder can play a timing game, but this may backfire and lead to the proposer using another builder’s bid. Builder timing game will not work here, but proposer timing games are still relevant.</li>\n<li><strong>Profit sharing</strong>: Same as the P2P market space.</li>\n<li>The market space is still <strong>optimistic</strong>, and the delay here is the builder returning the bid to the proposer. This delay is shorter than the P2P market space and likely the same as MEV-Boost if the builder is well co-located.</li>\n</ul>\n<h1><a name=\"builder-bidding-profiles-under-epbs-6\" class=\"anchor\" href=\"https://ethresear.ch#builder-bidding-profiles-under-epbs-6\"></a>Builder Bidding Profiles under ePBS</h1>\n<p>In the <a href=\"https://arxiv.org/abs/2312.14510\" rel=\"noopener nofollow ugc\">Strategic Bidding Wars in On-chain Auctions</a>, four profiles of builder behavior are listed in MEV-Boost auction:</p>\n<ul>\n<li><strong>Naive Behavior</strong>: Aggressively updates bids based on their valuation as long as the aggregated signal surpasses their profit margin.</li>\n<li><strong>Adaptive Behavior</strong>: Monitors the current highest bid and places a bid if able to outbid by a small constant. Defaults to the naive strategy if unable to outbid.</li>\n<li><strong>Last Minute Behavior</strong>: Reveals valuation at the final possible moment before auction termination to minimize the reaction window for other players.</li>\n<li><strong>Bluff Behavior</strong>: Initially places high bids (bluff) and later reverts to actual valuation, leveraging bid cancellation to compel other players to disclose their valuations.</li>\n</ul>\n<p>Given the new market space in ePBS, we will examine which strategies are viable under the auction rules.</p>\n<h3><a name=\"p2p-market-space-7\" class=\"anchor\" href=\"https://ethresear.ch#p2p-market-space-7\"></a>P2P Market Space</h3>\n<ul>\n<li><strong>Naive, Adaptive, and Bluff Behaviors</strong>: These strategies are harder to execute since bids can only be sent once. The builder might use different staked addresses, each sending one bid. However, this requires staking on the consensus layer for each address, assuming payment is handled on the consensus layer. Additionally, bluffing is not possible because bids cannot be canceled.</li>\n<li><strong>Last Minute Behavior</strong>: This is the <strong>only</strong> possible strategy. Builders will reveal their valuation at the final moment before auction termination to minimize the reaction window for other players.</li>\n</ul>\n<h3><a name=\"builder-rpc-market-space-8\" class=\"anchor\" href=\"https://ethresear.ch#builder-rpc-market-space-8\"></a>Builder RPC Market Space</h3>\n<ul>\n<li><strong>Naive, Adaptive, Bluff, and Last Minute Behavior</strong>: For similar reasons to the P2P market space, these strategies are not possible. Additionally, the auction is private, meaning builders cannot see each other’s bids. Most importantly, the auction has shifted from push-based to pull-based, so the builder no longer has control over when to submit bids. The only way for builders to get their bids to the proposer is through the proposer’s request.</li>\n</ul>\n<p>We conclude that builders’ bidding strategies are heavily limited under ePBS. For P2P, only last-minute bidding is possible. For Builder RPC, builders can only respond to the proposer as it is a pull-based model.</p>\n<h1><a name=\"market-space-considerations-9\" class=\"anchor\" href=\"https://ethresear.ch#market-space-considerations-9\"></a>Market Space Considerations</h1>\n<p>We add a few more concerns in this section that was emphasized in the MEV-Boost market space but may no longer be relevant in ePBS market space.</p>\n<h2><a name=\"latency-and-dos-concerns-10\" class=\"anchor\" href=\"https://ethresear.ch#latency-and-dos-concerns-10\"></a>Latency and DOS Concerns</h2>\n<p>Different market spaces impose varying latency constraints. In the P2P market space, builders push bids to the proposers, and the market operates as a large P2P gossip network constrained by anti-DOS measures. With 1 million validators, the worst-case scenario could mean 1 million bids. Due to these concerns, rules like disallowing multiple bids and ensuring bids are above certain values are necessary. The P2P network is inherently slow, so we don’t foresee serious bidders using it to win bids. However, the P2P market space is valuable for maintaining a good <strong>baseline for competitive bids</strong> that isn’t latency-sensitive. If builders using RPC collude to drive bid prices low, an <strong>altruistic builder</strong> over P2P can ensure the bid value baseline remains healthy and competitive with minimal effort. The baseline P2P bid value may also be used for burning in future iterations, as it only requires a 1/n honest assumption.</p>\n<p>In the builder RPC market space, which is pull-based, latency matters significantly. Instead of two latencies (global and individual) defined in the MEV-Boost market space, there’s only one individual delay to consider: how fast the builder can return the bids to the proposer. Delaying the return of <code>getHeader</code> may result in proposer missing builder’s bid.</p>\n<h2><a name=\"auction-interval-uncertainty-11\" class=\"anchor\" href=\"https://ethresear.ch#auction-interval-uncertainty-11\"></a>Auction Interval Uncertainty</h2>\n<p>The auction interval uncertainty becomes clearer in ePBS because MEV-Boost middleware and relays no longer control the timing of when the block gets returned to the proposer or released to the network. The proposer either uses the pushed bids from the P2P network or pulls bids from the builders RPC. The proposer has the final say on the auction interval cut-off. From the builder RPC market space perspective, it will keep updating its bids until the proposer requests them.</p>\n<h3><a name=\"new-bluff-behavior-under-epbs-12\" class=\"anchor\" href=\"https://ethresear.ch#new-bluff-behavior-under-epbs-12\"></a>New: Bluff Behavior under ePBS</h3>\n<p>In ePBS, proposers or builders may attempt to bluff other builders. This may not be scalable given the nature of the single bid auction over P2P and the fact that every builder is a validator and needs to have a stake on the beacon chain. One bluff strategy is for the proposer of next slot to reveal a high value P2P bid, intentionally stating that this is the bid it will include for the next slot unless others can beat it. This helps set the base price and forces everyone else to beat it. However, the proposer doesn’t have to include its bid.</p>\n<p>Although it’s obvious that anyone can see that the bid comes from the proposer and just ignore it, the proposer may use sybil validators to perform the same bluff. However, it’s still unclear how scalable this strategy is, given that one bid equals one validator.</p>\n<h1><a name=\"open-questions-13\" class=\"anchor\" href=\"https://ethresear.ch#open-questions-13\"></a>Open questions</h1>\n<p>The current ePBS market space design and requirements leave some open questions. We will summarize the open questions here for feedback:</p>\n<ul>\n<li>\n<p><strong>P2P Market Space Conditions</strong>:</p>\n<ul>\n<li>Every builder can only submit one bid, and the subsequent bids get dropped. Are there any advantages to allowing multiple bids here? If yes, then how many?</li>\n<li>Every builder’s bid needs to be above a certain value to deter DOS attacks. What should the value be?\n<ul>\n<li>We can look at current or past empirical data here.</li>\n</ul>\n</li>\n<li>There’s a tradeoff between the number of bids allowed and the minimal values. If we set the values high, we may allow multiple bids.</li>\n<li>Is there a strong argument for requiring bid cancellation?</li>\n</ul>\n</li>\n<li>\n<p><strong>Builder RPC Market Space’s Builder API Interface</strong>:</p>\n<ul>\n<li>What does the Builder API interface look like?\n<ul>\n<li>We want to leverage the existing Builder API and aim for minimal changes.</li>\n<li>When the proposer makes a header request to the builder, what should the request look like? Can we use the current get header request with a signature, or should we modify it?</li>\n<li>Do we allow multiple getHeader requests, such as continuous polling from the proposer, or do we enforce a common standard?</li>\n</ul>\n</li>\n<li>What kind of auction is most ideal?\n<ul>\n<li>Sealed second-price auction may be most ideal.</li>\n<li>How to design this over Builder API?</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Comparing MEV-Boost Market Space to ePBS Market Space</strong>:</p>\n<ul>\n<li>Do we lose anything in the ePBS market space that is important to maintain from the MEV-Boost market space?</li>\n</ul>\n</li>\n<li>\n<p><strong>Implications of staking pools also bidding:</strong></p>\n<ul>\n<li>Pools that hold a significant chunk of validators could be in a privileged position for submitting bids and manipulating the market extensively compared to a builder that doesn’t hold as many keys.\n<ul>\n<li>Is there an advantage to this asymmetry?</li>\n<li>Will we see staking pools and builders teaming up, and how will this dynamic play out?</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n            <p><small>15 posts - 6 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/builder-bidding-behaviors-in-epbs/20129\">Read full topic</a></p>","link":"https://ethresear.ch/t/builder-bidding-behaviors-in-epbs/20129","pubDate":"Tue, 23 Jul 2024 13:44:07 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20129"},"source":{"@url":"https://ethresear.ch/t/builder-bidding-behaviors-in-epbs/20129.rss","#text":"Builder Bidding Behaviors in ePBS"},"filter":false},{"title":"Enabling standardized on chain executions through modular accounts","dc:creator":"EugeRe","category":"Execution Layer Research","description":"<p><strong>Enabling standardized on chain executions through Modular Accounts</strong></p>\n<p><strong>Introduction</strong></p>\n<p>This blogpost is intended to be an extension from a previous work “ <a href=\"https://ethresear.ch/t/self-sovereign-identity-and-account-abstraction-for-privacy-preserving-cross-chain-user-operations-across-roll-ups/19599\">Self-sovereign identity and account abstraction for privacy preserving cross chain user operations across roll ups</a> ” with the intent of proposing a system implementation of network features. In the previous work I tried to envision a system combining a three-layered architecture that I will briefly summarize here:</p>\n<ol>\n<li>An application layer comprises wallets and other service apps to facilitate the generation and management of Verifiable Credentials, set a permission logic for compiling user operation objects through apps.</li>\n<li>A network layer based on different L2s, which include a Keystore contract and Smart Contract Accounts. This layer is responsible for generating Zero-Knowledge Proofs (ZKPs) and Merkle proofs for Sequencers. The Keystore contract manages encryption keys and user authentication, ensuring the correct key pairing for Verifiable Credentials and Operations. Smart Contract Accounts verify user operations, by validating ZK cryptographic proofs to ensure the integrity of the signatures of the transactions before they are executed.</li>\n<li>A sequencing layer which interconnects L2s with Ethereum main-net and manages the execution of batches of transactions anchoring Roll-up IDs to sequencing networks batching, validation cross chain atomic transactions via the Keystore roll-up, and the Roll-up contract within Ethereum’s slots.</li>\n</ol>\n<p>Today, I am trying to focus on some elements on the 1 and 2 layer, sitting in the conjunction between External Owned Accounts and Contract Accounts trying to envision an implementation pathway for the adoption of standardized on chain execution.</p>\n<p><strong>The concept</strong></p>\n<p>To facilitate the adoption of blockchain based services globally there is a need for standardizing secure, privacy and regulatory-compliant on chain executions to scale. As we move towards a more decentralized future, ensuring cyber security, data minimization from origination to processing, and improving UX in executing on chain operations is crucial.</p>\n<p>This blog post introduces a framework based on the ERC 7579 proposal, which integrates a module to lavage onchain verifiable credentials and zero-knowledge (zk) proofs in the context of modular smart accounts. This framework aims to standardize onchain executions by separating user authentication and transaction authorization while preserving privacy and regulatory requirements throughout the transaction lifecycle.</p>\n<p>The core function of the system described involves validating zk proofs generated by VCs to authenticate users and authorize operations. This makes the Validation Module the most appropriate choice, as it is designed to validate user operations before they are executed.</p>\n<p>The Validation Module allows for checking the validity and authenticity of zk proofs, ensuring that only legitimate user operations are processed.</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/c/1c3ddecf471befecea0769a9e94397e93d1a0bb7.png\" data-download-href=\"https://ethresear.ch/uploads/default/1c3ddecf471befecea0769a9e94397e93d1a0bb7\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/c/1c3ddecf471befecea0769a9e94397e93d1a0bb7_2_455x153.png\" alt=\"\" data-base62-sha1=\"41PVoIUhjVS88yBRvEuIwi8sk8n\" width=\"455\" height=\"153\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/c/1c3ddecf471befecea0769a9e94397e93d1a0bb7_2_455x153.png, https://ethresear.ch/uploads/default/optimized/3X/1/c/1c3ddecf471befecea0769a9e94397e93d1a0bb7_2_682x229.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/1/c/1c3ddecf471befecea0769a9e94397e93d1a0bb7_2_910x306.png 2x\" data-dominant-color=\"15516E\"></a></div><p></p>\n<p>For reference, the framework considers a minimal set of ERC for implementation:</p>\n<ul>\n<li>\n<p><a href=\"https://eips.ethereum.org/EIPS/eip-7579#modules\">ERC 7579</a> - Minimal Modular Smart Accounts: to set a module to validate user operations by verifying ZK proofs derived from verifiable credentials (VCs) ensuring that user operations are authenticated and authorized before execution.</p>\n</li>\n<li>\n<p><a href=\"https://eips.ethereum.org/EIPS/eip-1271\">ERC 1271</a> - Standard Signature Validation Method for Contracts: to standardize how smart contracts validate signatures, defining the function to verify the validity of a signature, crucial for transaction authorization.</p>\n</li>\n<li>\n<p><a href=\"https://eips.ethereum.org/EIPS/eip-4337\">ERC 4337</a> - Account Abstraction Using Alt Mempool: to abstract account management and operations, enabling more complex and user-friendly interactions allowing smart contract accounts to handle user operations and transaction executions.</p>\n</li>\n<li>\n<p><a href=\"https://eips.ethereum.org/EIPS/eip-165\">ERC 165</a> - Standard Interface Detection: to allow contracts to declare support for certain interfaces and enabling smart contracts to query and interact with other contracts that implement specific interfaces.</p>\n</li>\n</ul>\n<p><strong>High-level process flow</strong></p>\n<p>The framework leverages the strengths of different proposals to create a robust, secure, and privacy-preserving onchain execution environment.</p>\n<p>I list here a high-level overview:</p>\n<ol>\n<li>Users issue on chain merklized Verifiable Credentials (VCs) through a contract identifier operated by an issuer. These credentials are stored in the user’s identity wallet (EOA)</li>\n<li>Users generate and validate ZK proofs derived from their VCs through a contract verifier to access service apps and compile User Operation objects.</li>\n<li>Smart Contract Account entry point perform canonical verification loop according ERC 4337.</li>\n<li>The validation module verifies the zk proofs against the VCs in the execution loop and upon successful validation, the module calls the isValidSignature function as defined by ERC 1271 to authorize entry point to executeUserOps.</li>\n<li>Smart contract Account entry point executes onchain operations and distributes the fees to the Bundler address.</li>\n</ol>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/0/8054bf5b0b25390eb19a159f9c698f66c091eb2f.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/8054bf5b0b25390eb19a159f9c698f66c091eb2f\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/0/8054bf5b0b25390eb19a159f9c698f66c091eb2f_2_643x237.jpeg\" alt=\"\" data-base62-sha1=\"ijgGAiwDLpnfIqjEcqRYCjRzEC3\" width=\"643\" height=\"237\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/0/8054bf5b0b25390eb19a159f9c698f66c091eb2f_2_643x237.jpeg, https://ethresear.ch/uploads/default/optimized/3X/8/0/8054bf5b0b25390eb19a159f9c698f66c091eb2f_2_964x355.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/0/8054bf5b0b25390eb19a159f9c698f66c091eb2f_2_1286x474.jpeg 2x\" data-dominant-color=\"FBFBFA\"></a></div><p></p>\n<p><strong>Market &amp; Business Considerations</strong></p>\n<p>This framework offers significant value for large-scale enterprise services requiring validation logic before authorizing onchain operations. By integrating SSI and zk proofs, enterprises can ensure privacy and regulatory compliance while enhancing security and efficiency. The separation of authentication and authorization further strengthens the system’s robustness.</p>\n<p>Here a short list of valuable use cases that would fit nicely with this logic:</p>\n<ol>\n<li><strong>Trading</strong>: A DeFi platform allows users to interact with various financial services such as lending, borrowing, and trading. The platform issues VCs containing user identity and KYC information. Whenever a user wants to execute a financial transaction, they submit a zk proofs on VC and compile user operations objects along as operation request. The Validation Module verifies the zk proof against the stored VC and upon successful verification, the entry point is executing the operations on chain.</li>\n<li><strong>DAOs</strong>: a decentralized voting system allows DAO members to vote for grants allocation privacy preserving and reducing conflict of interest. Voters authenticate themselves using VCs and zk proofs to cast their votes and upon the voting completion the entry point executes grants allocations on chain according to the voting results.</li>\n<li><strong>Supply chain</strong>: a management system tracks the manufacturing and logistics of goods, participants in the supply chain authenticate using VCs and zk proofs to update and access the status of goods up to the distributor and at the moment of the sale the entry point execute onchain rewards, or payment premiums, to the different members.</li>\n</ol>\n<p><strong>Conclusion &amp; further thoughts</strong></p>\n<p>When we look forward to what kind of functionalities we would like to have as user for the future I believe there has been a big trend in providing standardization through native abstraction, modularity, and functional collaboration between EOAs and SCAs. Considering the future road map of Ethereum in Pectra, <a href=\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-7702.md\">EIP 7702</a> sets the way for a new transaction type which enables account properties of both externally owned accounts (EOAs) and Smart Contract Accounts (SCAs). Furthering looking ahead, there is a way to set “native account abstraction” by <a href=\"https://github.com/ethereum/RIPs/blob/master/RIPS/rip-7560.md\">RIP 7560</a> and <a href=\"https://eips.ethereum.org/EIPS/eip-7562\">ERC 7562</a> which align with ERC 4337 rules at least on validation rules.</p>\n<p>A side of this is also important <a href=\"https://eips.ethereum.org/EIPS/eip-7212\">EIP 7212</a> proposes a precompiled contract to perform signature verifications using the secp256r1 elliptic curve. This curve, also known as P-256, is widely supported in modern devices like Apple’s Secure Enclave, Webauthn, and Android Keychain, and Passkeys. This would allows more efficient and flexible management of accounts by transaction signs in mobile devices. Both EIP 7702 and EIP 7212 are potentially taking place in Pectra.</p>\n<p>Network harmonization is a key capability of every growing community, in this context personally I see value in further exploring the use of keystore contracts, session keys and passkeys as additional features to provide security, flexibility and usability to the product experience.</p>\n<p>Passkeys can be used to authenticate users providing a smoother UX while combining strong user authentication. Session keys can improve security of communication at application level, meaning when users are interacting with dapps for using market services, and keystore contract could represent an reliable solution for setting a functional framework for operating key sessions.</p>\n<p>The shared focus on improving account flexibility and security through different methods highlights the committment of the community’s to address scalability, usability, and security concerns within the Ethereum network. In this setting collaboration between EOAs and SCAs, and additional features as passkeys keystore contracts can live in a modular setting where specific modules enforce optional rules for executions, and different cryptographic tecniques could ensure data minimization for controllers and processors.</p>\n            <p><small>4 posts - 3 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/enabling-standardized-on-chain-executions-through-modular-accounts/20127\">Read full topic</a></p>","link":"https://ethresear.ch/t/enabling-standardized-on-chain-executions-through-modular-accounts/20127","pubDate":"Mon, 22 Jul 2024 12:43:52 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20127"},"source":{"@url":"https://ethresear.ch/t/enabling-standardized-on-chain-executions-through-modular-accounts/20127.rss","#text":"Enabling standardized on chain executions through modular accounts"},"filter":false},{"title":"Diseconomies of Scale: Anti-Correlation Penalties (EIP-7716)","dc:creator":"Nero_eth","category":"Proof-of-Stake","description":"<h1><a name=\"diseconomies-of-scale-anti-correlation-penalties-eip-7716-1\" class=\"anchor\" href=\"https://ethresear.ch#diseconomies-of-scale-anti-correlation-penalties-eip-7716-1\"></a>Diseconomies of Scale: Anti-Correlation Penalties (EIP-7716)</h1>\n<blockquote>\n<p>Special thanks to <a href=\"https://x.com/dapplion\">DappLion</a> and <a href=\"https://x.com/VitalikButerin\">Vitalik</a> for their collaborative effort on the overall concept, and <a href=\"https://x.com/weboftrees\">Anders</a> and <a href=\"https://x.com/_julianma\">Julian</a> for their valuable feedback on this post!</p>\n</blockquote>\n<p>Ethereum relies on a decentralized set of validators to ensure properties like credible neutrality and censorship resistance. Validators <a href=\"https://ethereum.org/en/staking/\">stake</a> a certain amount of ETH to participate in Ethereum’s consensus and secure the network. In return, validators receive rewards directly from the protocol (<a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675\">#issuance</a>) as well as execution layer rewards when proposing a block, which include transaction fees and <a href=\"https://ethereum.org/en/developers/docs/mev/\">MEV</a> from the blocks they propose (<a href=\"https://boost.flashbots.net/\">#mevboost</a>). As of today, thousands, if not tens of thousands, of small-sized entities run validators from their homes despite several disadvantages. These include the risk and responsibility of operating and maintaining a node, the technical burden associated with setup and upkeep, potential downtime, and the lack of a liquid staking token that would otherwise provide flexibility and liquidity.</p>\n<p>With the ongoing maturation of Ethereum’s PoS, we’ve encountered various <strong>centralizing forces</strong> inherent to the current protocol:</p>\n<ul>\n<li><strong>EL Reward Variance</strong>: While attestation rewards are distributed fairly evenly, the rewards for proposing a block can vary significantly. This variation arises because <a href=\"https://ethereum.org/en/developers/docs/mev/\">MEV</a> is extremely spiky, resulting in a few outlier blocks with proposer profits exceeding 10 ETH. Large operators running many validators have better chances of capturing these “juicy” blocks. Although over many years the earnings of individual validators should average out, the future remains uncertain. Assuming 1 million validators and 2,628,000 slots per year, the probability of being selected as a proposer is ~0.0001%. On average, a validator can expect to propose <span class=\"math\">\\frac{1,000,000}{365.25 \\times 7200} = 2.628</span> blocks per year (there are 7200 slots per day). From April 2023 to April 2024, the percentage of blocks with more than 10 ETH was 0.004041%. Statistically, a single validator will eventually propose a block with more than 10 ETH of MEV, but it’s unknown whether this will happen this year or in ten years, and by then, MEV issues might be resolved. While solo stakers literally participate in a lottery, large operators can average their profits and plan for the future with greater certainty.<br>\nOver 1 year, the probability of a random validator getting at least one block with &gt;10 ETH profits is 0.1%:</li>\n</ul>\n<div class=\"math\">\nP(\\text{at least one 10} \\, \\text{ETH} \\, \\text{block}) = 1 - (1 - 0.0004041)^n = 1 - (1 - 0.0004041)^{2.628}\n</div>\n<p>If you control 1% of all validators (~10k validators), the probability of getting at least one block with more than 10 ETH of MEV climbs to approximately 99.99% over one year.</p>\n<p>The following chart shows the <strong>cumulative sum of MEV-Boost payments</strong> on the y-axis and the <strong>cumulative number of MEV-Boost payments</strong> on the x-axis. We can see that 90% of all blocks distribute around 44% of the total value, leaving 56% to be distributed to the lucky 10% of proposers.</p>\n<div align=\"center\">\n<p>\n  </p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/e/aed0a28f0f91206549c0993488907698504ef2dc.png\" data-download-href=\"https://ethresear.ch/uploads/default/aed0a28f0f91206549c0993488907698504ef2dc\" title=\"Bk31ssG_R.png\"><img width=\"600\" src=\"https://ethresear.ch/uploads/default/optimized/3X/a/e/aed0a28f0f91206549c0993488907698504ef2dc_2_600x428.png\" data-base62-sha1=\"oWu4QSXDXzPsmp5iGqq69mA9XTC\" height=\"428\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/e/aed0a28f0f91206549c0993488907698504ef2dc_2_600x428.png, https://ethresear.ch/uploads/default/original/3X/a/e/aed0a28f0f91206549c0993488907698504ef2dc.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/e/aed0a28f0f91206549c0993488907698504ef2dc.png 2x\" data-dominant-color=\"F8F7F9\"></a></div>\n<p></p>\n</div>\n<ul>\n<li>\n<p><strong>Reorgs</strong>: “<em><a href=\"https://ethresear.ch/t/change-fork-choice-rule-to-mitigate-balancing-and-reorging-attacks/11127\">Honest reorgs</a></em>” occur when the proposer of slot <span class=\"math\">n_{1}</span> orphans the block of the proposer of slot <span class=\"math\">n_{0}</span> because that block hasn’t received at least 40% of the slot’s committee members’ votes. By using <a href=\"https://notes.ethereum.org/@casparschwa/H1T0k7b85\">proposer boost</a>, these “<em>weak</em>” blocks (those with less than 40% attestations) can be reorged by the next proposer to penalize the previous proposer for poor performance, such as being late and therefore rugging some attesters for their correct head votes. Reorgs can have centralizing forces and the more stake an entity holds, the more strategically it can decide whether to reorg a particular block. Large-scale operators have more safety because they can ensure their own validators never vote to reorg their own blocks. Essentially, all nodes of an entity can coordinate to always vote for the current slot’s block rather than its parent if the current block comes from that entity. This coordination potentially allows large entities to risk broadcasting their block later in the slot while still having a high probability of the block becoming canonical. <a href=\"https://ethresear.ch/t/deep-diving-attestations-a-quantitative-analysis/20020\">Analysis has shown</a> that <strong>by second 4</strong> of the slot, <strong>40% of all attestations</strong> for that slot <strong>have been seen</strong>. A large operator, who controls many validators and knows that these validators will never vote to reorganize its blocks, can slightly delay block propagation without significantly increasing its risk. The same principle applies when a single entity owns consecutive slots. In theory, this entity could wait until the end of the slot (or even longer) before publishing its block. Then, it could use the next slot to solidify that weak block into the chain by leveraging proposer boost.</p>\n</li>\n<li>\n<p><strong>Proposer Timing Games</strong>: <a href=\"https://timing.pics/\">Proposer timing games</a> (also see <a href=\"https://eprint.iacr.org/2023/760\">[1]</a>, <a href=\"https://arxiv.org/abs/2305.09032\">[2]</a>) is a term that summarizes a strategy applied by some block proposers in which they delay their proposal to give the builder more time for extracting MEV. This leads to increased profits for the proposer but <a href=\"https://ethresear.ch/t/deep-diving-attestations-a-quantitative-analysis/20020\">evidently</a> comes with a negative impact on other proposers and especially attesters. Proposer timing games are risky because late blocks have an increased chance of being reorged. In general, large-size operators face lower risks when playing timing games than small-size entities. This stems from the fact that larger operators are on average more sophisticated and have better connectivity in the P2P network: What might be a late block for an Australian validator (go <a href=\"https://x.com/sassal0x\">sassal</a> <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/crown.png?v=12\" title=\":crown:\" class=\"emoji\" alt=\":crown:\" loading=\"lazy\" width=\"20\" height=\"20\">) might be just in time for a US-based Coinbase validator. Thus, the lower the latency, the more a validator can risk delaying.</p>\n</li>\n</ul>\n<div class=\"math\">\n\\textbf{The above symptoms are all exacerbated by one thing, namely...}\n</div>\n<div class=\"math\">\n\\underline{\\mathbf{economies\\ of\\ scale.}}\n</div>\n<p><a href=\"https://en.wikipedia.org/wiki/Economies_of_scale\">Economies of scale</a> are nothing new and the crypto landscape isn’t immune either. Looking at Wikipedia, it is defined as “<em>the cost advantages that enterprises obtain due to their scale of operation […]</em>”, and the same applies to Ethereum staking:</p>\n<div align=\"center\">\n  <div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/5/e548616102366792be17847ac823b351c9f94170.png\" data-download-href=\"https://ethresear.ch/uploads/default/e548616102366792be17847ac823b351c9f94170\" title=\"ryZMFz-_R.png\"><img width=\"400\" src=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e548616102366792be17847ac823b351c9f94170_2_400x359.png\" data-base62-sha1=\"wIkpJf5CD5VtrxmqiGrokVTirpS\" height=\"359\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e548616102366792be17847ac823b351c9f94170_2_400x359.png, https://ethresear.ch/uploads/default/optimized/3X/e/5/e548616102366792be17847ac823b351c9f94170_2_600x538.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/5/e548616102366792be17847ac823b351c9f94170.png 2x\" data-dominant-color=\"F7F7F7\"></a></div>\n</div>\n<p>Large operators like Coinbase, Kraken, or Kiln can leverage economies of scale to make staking even more profitable. This allows them to offer rewards competitive with those of solo stakers, even after taking their cut. To illustrate this, consider a simple example (the exact numbers are not important here):</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Entity</th>\n<th>Validators on one Node</th>\n<th>Hardware Costs</th>\n<th>Other Costs</th>\n<th>Total Cost ($)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Solo Staker</td>\n<td>1 validator</td>\n<td>1 Intel NUC ($ 1,200)</td>\n<td>$ 5,000</td>\n<td>$ 6,200</td>\n</tr>\n<tr>\n<td>Coinbase</td>\n<td>1,000 validators</td>\n<td>1 Intel NUC ($ 1,200)</td>\n<td>$ 50,000</td>\n<td>$ 51,200</td>\n</tr>\n</tbody>\n</table>\n</div><blockquote>\n<p>For more realistic numbers, refer to the latest EthStaker survey published <a href=\"https://paragraph.xyz/@ethstaker/staking-survey-2024\">here</a>. By allocating 10x as much in <em>Other Costs</em> for large operators, we account for the increased complexity of setting up multiple validators on one machine. This is realistic enough for the point we’re making here.</p>\n</blockquote>\n<p>We can see the effects of economies of scale: the machine used by Coinbase will generate 1,000 times the profits compared to solo stakers, while the costs are only eight times higher. As a result, the ROI for large-scale operators is significantly better.</p>\n<p>Using one hardware device for multiple validators is just one piece of the puzzle. Others include:</p>\n<ul>\n<li>Cloud service provider</li>\n<li>ISPs</li>\n<li>Geographical locations</li>\n<li>Maintenance responsibilities</li>\n<li>Client software</li>\n<li>And many more…</li>\n</ul>\n<p>In all these categories, the goal is maximum diversity to minimize the risk of external factors degrading or damaging the network. Despite this goal, economically rational players might prefer a one-stop-shop solution, such as running a Lighthouse + Geth node on a Google/AWS/Hetzner instance located in central Europe, maintained by a dedicated team of specialists. While this setup may perform well in terms of efficiency, Ethereum should not create incentives that further exacerbate centralization.</p>\n<div align=\"center\">\n<p>\n  <img width=\"400\" src=\"https://ethresear.ch/uploads/default/original/3X/b/a/bac447c3b4a914807987ea637a010bceb40febef.png\" data-base62-sha1=\"qEdkXVD6v2negvqc7y3Wl4G2HJd\" height=\"392\">\n</p>\n</div>\n<p><strong>But who is large-scale and whose not?</strong></p>\n<p>The protocol itself does not know which validator is operated by which entity. From the protocol’s perspective, a Coinbase validator looks the same as a solo staker. Therefore, to prevent correlations from emerging, we cannot simply scale rewards and penalties based on the market share of the entity behind a validator. For more on this topic, I recommend Barnabé’s post, <em><a href=\"https://barnabe.substack.com/p/seeing-like-a-protocol\">“Seeing Like a Protocol”</a></em>.</p>\n<p>Fortunately, <strong>economies of scale inherently come with correlations</strong>, which is something the protocol can be made aware of. Leveraging economies of scale may linearly scale with correlations, thus we can implement rules to dynamically scale economic incentives and steer the validator set toward diversification.</p>\n<div align=\"center\">\n<p>\n  </p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/9/697934a0c70e654fbc603e570f422269f8116551.png\" data-download-href=\"https://ethresear.ch/uploads/default/697934a0c70e654fbc603e570f422269f8116551\" title=\"BJbZ1XWuR.png\"><img width=\"400\" src=\"https://ethresear.ch/uploads/default/optimized/3X/6/9/697934a0c70e654fbc603e570f422269f8116551_2_400x358.png\" data-base62-sha1=\"f33OBhCLdLmKr2t6xvNtBbXTLy1\" height=\"358\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/9/697934a0c70e654fbc603e570f422269f8116551_2_400x358.png, https://ethresear.ch/uploads/default/optimized/3X/6/9/697934a0c70e654fbc603e570f422269f8116551_2_600x537.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/9/697934a0c70e654fbc603e570f422269f8116551.png 2x\" data-dominant-color=\"F8F8F8\"></a></div>\n<p></p>\n</div>\n<p>Penalizing correlated faults isn’t something new to Ethereum. In the current <a href=\"https://eth2book.info/capella/part2/incentives/slashing/\">slashing</a> mechanism, a “malicious” validator is initially penalized by a reduction of 1/32 of their effective balance when they are slashed. After being halfway through the withdrawal period, they are subject to an additional penalty (the <em><a href=\"https://eth2book.info/capella/part2/incentives/slashing/\">correlation penalty</a></em>) that scales with the number of validators (specifically their stake) who were slashed around the same time (+/- 18 days). Therefore, a solo staker accidentally voting for two different head blocks, which is a slashable offense, would lose significantly less than a party with a 20% market share (assuming all 20% collectively fail).</p>\n<p>In the end, the goal must be to incentivize validators to diversify their setup. As shown in the following example, we want validators to reduce their correlation with other validators, making the whole network more robust against external influences.</p>\n<div align=\"center\">\n<p>\n  </p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/7/678299142da4a042b47e07270b8ccfc7c644e393.png\" data-download-href=\"https://ethresear.ch/uploads/default/678299142da4a042b47e07270b8ccfc7c644e393\" title=\"ry5bkuMO0.png\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/7/678299142da4a042b47e07270b8ccfc7c644e393_2_690x229.png\" data-base62-sha1=\"eLGZ1FctKqC9VaccHCSQiLAltAL\" width=\"690\" height=\"229\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/7/678299142da4a042b47e07270b8ccfc7c644e393_2_690x229.png, https://ethresear.ch/uploads/default/original/3X/6/7/678299142da4a042b47e07270b8ccfc7c644e393.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/7/678299142da4a042b47e07270b8ccfc7c644e393.png 2x\" data-dominant-color=\"ECEEF9\"></a></div>\n<p></p>\n</div>\n<h2><a name=\"eip-7716-2\" class=\"anchor\" href=\"https://ethresear.ch#eip-7716-2\"></a>EIP-7716</h2>\n<p>The goal of “<a href=\"https://eips.ethereum.org/EIPS/eip-7716\">EIP-7716: Anti-Correlation Attestation Penalties</a>” is to get us closer to diseconomies of scale. The more homogeneous an entity’s staking setup, the more it should be penalized while non-correlated setups profit from the proposed changes.</p>\n<p>With anti-correlation penalties, the previous “<em>economies of scale vs number of validators</em>” might be more like the following:</p>\n<div align=\"center\">\n<p>\n  </p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/0/e0a2bcab530fcb98384c27b1765434ef0121fdd3.png\" data-download-href=\"https://ethresear.ch/uploads/default/e0a2bcab530fcb98384c27b1765434ef0121fdd3\" title=\"S179FsfOA.png\"><img width=\"400\" src=\"https://ethresear.ch/uploads/default/optimized/3X/e/0/e0a2bcab530fcb98384c27b1765434ef0121fdd3_2_400x359.png\" data-base62-sha1=\"w3dCb1H8g1idyCrYjkfW3hMYP9p\" height=\"359\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/0/e0a2bcab530fcb98384c27b1765434ef0121fdd3_2_400x359.png, https://ethresear.ch/uploads/default/optimized/3X/e/0/e0a2bcab530fcb98384c27b1765434ef0121fdd3_2_600x538.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/0/e0a2bcab530fcb98384c27b1765434ef0121fdd3.png 2x\" data-dominant-color=\"F5F5F5\"></a></div>\n<p></p>\n</div>\n<p>Anti-correlation penalties were first described by Vitalik in an <a href=\"https://ethresear.ch/t/supporting-decentralized-staking-through-more-anti-correlation-incentives/19116\">ethresearch post</a>. After some <a href=\"https://ethresear.ch/t/analysis-on-correlated-attestation-penalties/19244\">initial analyses</a> and a more <a href=\"https://ethresear.ch/t/a-concrete-proposal-for-correlated-attester-penalties/19341\">concrete proposal</a> available, the <a href=\"https://eips.ethereum.org/EIPS/eip-7716\">EIP</a> is now at the point where everyone is invited to look into the inner workings of correlated penalties and leave feedback.</p>\n<p>In short, the EIP proposes to multiply the missed (source) vote penalty by a penalty factor that ranges from 0 to 4 but equals 1 on average <em>(notably, this is important to not touch the issuance policy)</em>.</p>\n<h4><a name=\"how-does-7716-work-3\" class=\"anchor\" href=\"https://ethresear.ch#how-does-7716-work-3\"></a>How does 7716 work?</h4>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Symbol</th>\n<th>Description</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>penalty_factor</code></td>\n<td><span class=\"math\">p</span></td>\n<td>Penalty scaling factor</td>\n<td>dynamic</td>\n</tr>\n<tr>\n<td><code>net_excess_penalties</code></td>\n<td><span class=\"math\">p_{exc}</span></td>\n<td>Net excess penalties</td>\n<td>dynamic</td>\n</tr>\n<tr>\n<td><code>non_participating_balance</code></td>\n<td><span class=\"math\">balance_{non\\_attesting}</span></td>\n<td>Sum balance of not/wrong attesting validators</td>\n<td>dynamic</td>\n</tr>\n<tr>\n<td><code>PENALTY_ADJUSTMENT_FACTOR</code></td>\n<td><span class=\"math\">p_{adjustment}</span></td>\n<td>Penalty adjustment factor</td>\n<td>2**12</td>\n</tr>\n<tr>\n<td><code>MAX_PENALTY_FACTOR</code></td>\n<td><span class=\"math\">p_{max}</span></td>\n<td>Maximum penalty factor</td>\n<td>4</td>\n</tr>\n<tr>\n<td><code>EXCESS_PENALTY_RECOVERY_RATE</code></td>\n<td><span class=\"math\">p_{recovery}</span></td>\n<td>Rate by which the excess penalty decreases</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n</div><blockquote>\n<p>The final values for the constants are still to be decided.</p>\n</blockquote>\n<p>The penalty factor <span class=\"math\">p</span> scales the slot penalties to a maximum of <code>MAX_PENALTY_FACTOR</code>, or down. It’s determined the following:</p>\n<div class=\"math\">\np = \\min\\left(\\frac{balance_{non\\_attesting}\\ \\times\\ p_{adjustment}}{\\max(p_{excess},\\ 0.5)\\times\\ balance_{total}\\ +\\ 1},\\ p_{max} \\right)\n</div>\n<p>and from the <a href=\"https://github.com/ethereum/consensus-specs/blob/816d338bd09ffc8e83097c4db1764ba834f3adca/specs/_features/correlated_penalties/beacon_chain.md\">pyspec implementation</a>; h/t <a href=\"https://x.com/dapplion\">dapplion</a>:</p>\n<pre data-code-wrap=\"python\"><code class=\"lang-python\">penalty_factor = min(\n    ((total_balance - participating_balance) * PENALTY_ADJUSTMENT_FACTOR) // \n    (max(self.net_excess_penalties, 0.5) * total_balance + 1),\n    MAX_PENALTY_FACTOR\n)\n</code></pre>\n<p>The formula calculates the penalty factor as a ratio of the “penalty weight” of non-attesting validators to the net excess penalty scaled by the balance of all validators. A higher penalty adjustment factor increases the sensitivity of the penalty factor. Conversely, a higher net excess penalty leads to a lower penalty factor.</p>\n<p>Finally, this is how the <code>penalty_factor</code> variable would be used:</p>\n<pre><code class=\"lang-auto\">def get_flag_index_deltas(state: BeaconState, flag_index: int) -&gt; Tuple[Sequence[Gwei], Sequence[Gwei]]:\n    \"\"\"\n    Return the deltas for a given ``flag_index`` by scanning through the participation flags.\n    \"\"\"\n    ...\n    for index in get_eligible_validator_indices(state):\n        base_reward = get_base_reward(state, index)\n        if index in unslashed_participating_indices:\n            if not is_in_inactivity_leak(state):\n                reward_numerator = base_reward * weight * unslashed_participating_increments\n                rewards[index] += Gwei(reward_numerator // (active_increments * WEIGHT_DENOMINATOR))\n        elif flag_index != TIMELY_SOURCE_FLAG_INDEX:\n            # [New in correlated_penalties]\n            slot = committee_slot_of_validator(state, index, previous_epoch)\n            penalty_factor = compute_penalty_factor(state, slot) \n            penalties[index] += Gwei(penalty_factor * base_reward * weight // WEIGHT_DENOMINATOR)\n    return rewards, penalties\n</code></pre>\n<p>We check if we are dealing with source votes (line 12), derive the slot in which the validator was supposed to vote (line 14), compute the penalty factor (line 15), and multiply it by the base reward (line 16).</p>\n<blockquote>\n<p>Although source votes might be a good starting point, the concept can be equally appied to head and target votes.</p>\n</blockquote>\n<p>The <span class=\"math\">p_{exc}</span> is updated at the end of each slot using:</p>\n<div class=\"math\">\np_{exc} = \\max(p_{recovery},\\ p_{exc} + p) - p_{recovery}\n</div>\n<p>Which equals to:</p>\n<pre data-code-wrap=\"python\"><code class=\"lang-python\">net_excess_penalties = max(\n        EXCESS_PENALTY_RECOVERY_RATE, \n        net_excess_penalties + penalty_factor\n    ) - EXCESS_PENALTY_RECOVERY_RATE\n</code></pre>\n<p>We can observe the following dynamics:</p>\n<ul>\n<li>If the balance of non-attesting validators increases, the penalty factor also increases.</li>\n<li>If the balance of non-attesting validators remains the same, the penalty factor approaches 1.</li>\n<li>If the balance of non-attesting validators decreases, the penalty factor can go below 1 for a while and then approach 1 afterward.</li>\n</ul>\n<p>When the <code>non_participating_balance</code> continuously increases for several rounds, the <code>penalty_factor</code> and the <code>net_excess_penalties</code> also increase. This continues until the <code>non_participating_balance</code> stops increasing. Then, the <code>net_excess_penalties</code> and the <code>penalty_factor</code> start decreasing together.</p>\n<p>With the <code>net_excess_penalties</code> keeping track of the excess penalties of past epochs, the formula can self-regulate what constitutes a “large” number of misses and what does not.</p>\n<p>This mechanism ensures that the sum of penalties doesn’t change with this EIP—only the distribution does.</p>\n<h2><a name=\"some-faqs-4\" class=\"anchor\" href=\"https://ethresear.ch#some-faqs-4\"></a>Some FAQs</h2>\n<h3><a name=\"h-1-wouldnt-that-be-even-worse-for-solo-stakers-5\" class=\"anchor\" href=\"https://ethresear.ch#h-1-wouldnt-that-be-even-worse-for-solo-stakers-5\"></a>1. Wouldn’t that be even worse for solo stakers?</h3>\n<p>No. Solo stakers, commonly referred to as small-scale operators or individuals running 1-10 validators from home, are expected to behave in a very uncorrelated manner compared to larger operators. Although factors like geographical location and client software can impact correlations, solo stakers are likely to be offline at different times than large-scale operators such as Coinbase or Kraken. As a result, the penalties solo stakers receive are smaller than those in the current system. In contrast, if a large-scale operator’s staking setup has a bug causing all their validators to fail to attest, the correlation is clear and the penalties are higher.</p>\n<p>This expectation was first confirmed in an <a href=\"https://ethresear.ch/t/analysis-on-correlated-attestation-penalties/19244\">initial analysis</a> on anti-correlation penalties, which showed that solo stakers and Rocketpool operators would have been better off, while large-scale operators would have received higher penalties on average.</p>\n<h3><a name=\"h-2-wouldnt-that-discourage-people-from-using-minority-clients-6\" class=\"anchor\" href=\"https://ethresear.ch#h-2-wouldnt-that-discourage-people-from-using-minority-clients-6\"></a>2. Wouldn’t that discourage people from using minority clients?</h3>\n<p>No. In fact, it encourages using minority clients. Using the majority clients leads to higher correlations. For example, if the Lighthouse client has a bug causing attesters to vote for the wrong source, the correlation is high and the penalty increases. Conversely, if all Lodestar attesters fail, it is considered a much smaller collective fault. The correlation penalty is more forgiving to a small minority than to a majority client. So, even if minority clients are expected to have more bugs, correlation penalties can steer validators toward using them.</p>\n<h3><a name=\"h-3-why-would-it-benefit-decentralization-7\" class=\"anchor\" href=\"https://ethresear.ch#h-3-why-would-it-benefit-decentralization-7\"></a>3. Why would it benefit decentralization?</h3>\n<p>Anti-correlation penalties effectively differentiate between small and large operators without relying on validators that have consolidated their stake or other out-of-protocol solutions. By introducing economic incentives for diversified behavior, we benefit small players who are already “anti-correlated” while encouraging large players to reduce the impact of external factors such as one-node setups, or cloud providers on their staking operations.</p>\n<h3><a name=\"h-4-wouldnt-that-just-lead-to-big-parties-investing-in-increased-fault-tolerance-while-even-increasing-the-correlations-8\" class=\"anchor\" href=\"https://ethresear.ch#h-4-wouldnt-that-just-lead-to-big-parties-investing-in-increased-fault-tolerance-while-even-increasing-the-correlations-8\"></a>4. Wouldn’t that just lead to big parties investing in increased fault tolerance while even increasing the correlations?</h3>\n<p>If big parties invest in increased fault tolerance, it’s still beneficial. Enhancing fault tolerance is difficult and expensive. At some point, it becomes cheaper to invest in anti-correlation than in further fault tolerance improvements. While large operators might have to move validators from popular cloud platforms to different environments, solo stakers running their nodes from home can continue as they are. Anything that costs large operators money but is free for solo stakers (=diseconomies of scale) fosters decentralization.</p>\n<div align=\"center\">\n<p>\n  </p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/5/25f018bc53924b32c0a7c1deb29b0a0f3075daf1.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/25f018bc53924b32c0a7c1deb29b0a0f3075daf1\" title=\"HyW84oMdA.jpg\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/5/25f018bc53924b32c0a7c1deb29b0a0f3075daf1_2_690x216.jpeg\" data-base62-sha1=\"5pC4p7hIgEbIqXKP7njc8XjjVwl\" width=\"690\" height=\"216\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/5/25f018bc53924b32c0a7c1deb29b0a0f3075daf1_2_690x216.jpeg, https://ethresear.ch/uploads/default/optimized/3X/2/5/25f018bc53924b32c0a7c1deb29b0a0f3075daf1_2_1035x324.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/2/5/25f018bc53924b32c0a7c1deb29b0a0f3075daf1_2_1380x432.jpeg 2x\" data-dominant-color=\"F6F5F6\"></a></div>\n<p></p>\n</div>\n<p>The main argument is, that no matter how big operators react, either going for anti-correlation or, doing the opposite, putting all validators on a single extremely robust node, both cost money and reduce their APY. As fault tolerance has its limits, there is no escape from harsher penalties other than diversifying.</p>\n<div align=\"center\">\n<p>\n  </p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/2/72c96a75749cc73c7789fac6f4fd97834924d1d5.png\" data-download-href=\"https://ethresear.ch/uploads/default/72c96a75749cc73c7789fac6f4fd97834924d1d5\" title=\"BJL374W_0.png\"><img width=\"328\" src=\"https://ethresear.ch/uploads/default/optimized/3X/7/2/72c96a75749cc73c7789fac6f4fd97834924d1d5_2_328x500.png\" data-base62-sha1=\"gnrXIc1e3ckCwhtUbGRfBfcnTFz\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/2/72c96a75749cc73c7789fac6f4fd97834924d1d5_2_328x500.png, https://ethresear.ch/uploads/default/original/3X/7/2/72c96a75749cc73c7789fac6f4fd97834924d1d5.png 1.5x, https://ethresear.ch/uploads/default/original/3X/7/2/72c96a75749cc73c7789fac6f4fd97834924d1d5.png 2x\" data-dominant-color=\"B0A9B6\"></a></div>\n<p></p>\n</div>\n<h3><a name=\"h-5-this-sounds-super-dangerous-as-i-could-be-penalized-for-32-eth-just-by-missing-a-single-source-vote-9\" class=\"anchor\" href=\"https://ethresear.ch#h-5-this-sounds-super-dangerous-as-i-could-be-penalized-for-32-eth-just-by-missing-a-single-source-vote-9\"></a>5. This sounds super dangerous, as I could be penalized for 32 ETH just by missing a single source vote.</h3>\n<p>This is incorrect since the penalty_factor variable is capped at 4 (to be analyzed). Capping ensures that the correlation penalties never get out of hand.</p>\n<h3><a name=\"h-6-why-only-focus-on-source-votes-and-not-do-the-same-for-head-and-target-votes-10\" class=\"anchor\" href=\"https://ethresear.ch#h-6-why-only-focus-on-source-votes-and-not-do-the-same-for-head-and-target-votes-10\"></a>6. Why only focus on source votes and not do the same for head and target votes?</h3>\n<p>This is a good question and since research on that topic is still at the very beginning this isn’t decided yet. An argument against head and target votes is the fact that they depend on external factors: as shown in <a href=\"https://ethresear.ch/t/analysis-on-correlated-attestation-penalties/19244\">previous analysis</a>, head votes are sensitive to proposer timing games. So, if those timing games become more and more the standard, less well-connected validators (oftentimes solo stakers) could potentially be worse off. However, <a href=\"https://ethresear.ch/t/analysis-on-correlated-attestation-penalties/19244\">this</a> analysis showed that it would be the opposite and in the long run, small-size stakers would profit from anti-correlation penalties. The same applies to target votes that are harder to get right in the first slot of an epoch compared to every other slot. Nevertheless, in the long run, this should smooth out across validators, allowing us to do anti-correlation penalties for all parts of an attestation, source-, target-, and head votes.</p>\n<h2><a name=\"useful-links-11\" class=\"anchor\" href=\"https://ethresear.ch#useful-links-11\"></a>Useful links:</h2>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Url</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://eips.ethereum.org/EIPS/eip-7716\" class=\"inline-onebox\">EIP-7716: Anti-correlation attestation penalties</a></td>\n<td>EIP-7716 (draft)</td>\n</tr>\n<tr>\n<td><a href=\"https://ethresear.ch/t/a-concrete-proposal-for-correlated-attester-penalties/19341\" class=\"inline-onebox\">A concrete proposal for correlated attester penalties</a></td>\n<td>Original Proposal</td>\n</tr>\n<tr>\n<td><a href=\"https://ethereum-magicians.org/t/eip-7716-anti-correlation-attestation-penalties/20137\" class=\"inline-onebox\">EIP-7716: Anti-correlation attestation penalties - EIPs - Fellowship of Ethereum Magicians</a></td>\n<td>EthMagicians Post</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/dapplion/anti-correlation-penalties-faq\" class=\"inline-onebox\">GitHub - dapplion/anti-correlation-penalties-faq: Anti correlation penalties FAQ</a></td>\n<td>EthBerlin Project</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/igorline/lighthouse/pull/1\" class=\"inline-onebox\">Impement anti-correlation attestation penalties eip by igorline · Pull Request #1 · igorline/lighthouse · GitHub</a></td>\n<td>Lighthouse Implementation</td>\n</tr>\n<tr>\n<td><a href=\"https://ethresear.ch/t/analysis-on-correlated-attestation-penalties/19244\" class=\"inline-onebox\">Analysis on ''Correlated Attestation Penalties''</a></td>\n<td>Quantitative Analysis</td>\n</tr>\n</tbody>\n</table>\n</div>\n            <p><small>6 posts - 4 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/diseconomies-of-scale-anti-correlation-penalties-eip-7716/20114\">Read full topic</a></p>","link":"https://ethresear.ch/t/diseconomies-of-scale-anti-correlation-penalties-eip-7716/20114","pubDate":"Sat, 20 Jul 2024 08:56:40 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20114"},"source":{"@url":"https://ethresear.ch/t/diseconomies-of-scale-anti-correlation-penalties-eip-7716/20114.rss","#text":"Diseconomies of Scale: Anti-Correlation Penalties (EIP-7716)"},"filter":false},{"title":"Commit-Boost: Proposer Platform to Safely Make Commitments","dc:creator":"DrewVanderWerff","category":"Proof-of-Stake","description":"<p><em>The following post is an introduction to some and an update to others on a community effort called <a href=\"https://x.com/Commit_Boost\" rel=\"noopener nofollow ugc\">Commit-Boost</a>. Much of this has already been discussed in various public domains / presentations / documentation. Thank you to all the countless teams that already have contributed / committed to contributing to this effort including researchers, validators, builders, relays, client teams, consulting firms, teams building commitment protocols, L2s, restaking platforms, shared sequencers, wallets, and countless others. Please reach out if you would like to contribute to this effort for Ethereum.</em></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/d/adc1d52f519c3c2bb0d61cd00f9c796e249eba81.png\" data-download-href=\"https://ethresear.ch/uploads/default/adc1d52f519c3c2bb0d61cd00f9c796e249eba81\" title=\"Commit-Boost\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/d/adc1d52f519c3c2bb0d61cd00f9c796e249eba81_2_408x375.png\" alt=\"Commit-Boost\" data-base62-sha1=\"oN7T0bNXEKR978rhE2TNZcDNZGV\" width=\"408\" height=\"375\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/d/adc1d52f519c3c2bb0d61cd00f9c796e249eba81_2_408x375.png, https://ethresear.ch/uploads/default/optimized/3X/a/d/adc1d52f519c3c2bb0d61cd00f9c796e249eba81_2_612x562.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/d/adc1d52f519c3c2bb0d61cd00f9c796e249eba81.png 2x\" data-dominant-color=\"C6C4DA\"></a></div><p></p>\n<p><strong>TL;DR</strong></p>\n<ul>\n<li>Due to the risks developing for Ethereum, core development, and its validator set, a group of teams / individuals are working on developing a public good called Commit-Boost</li>\n<li><a href=\"https://github.com/Commit-Boost/commit-boost-client\" rel=\"noopener nofollow ugc\">Commit-Boost</a> is an open-source public good that is fully compatible with <a href=\"https://github.com/flashbots/mev-boost\" rel=\"noopener nofollow ugc\">MEV-Boost</a> but acts as a light-weight validator platform to safely make commitments</li>\n<li>Specifically, Commit-Boost is a new Ethereum validator sidecar that is focused on standardizing the last mile of communication between validators and proposer commitment protocols</li>\n<li>Commit-Boost has been designed with safety and modularity at its core, with the goal of not limiting the market downstream including stakeholders, flows, proposer commitments, enforcement mechanisms, etc.</li>\n<li>While we should always be skeptical of out-of-protocol solutions that directly impact infrastructure this close to the Ethereum protocol layer, if we are going to rely on these solutions, we believe they should be developed, sustained, and governed in a way that encompasses many of the views <a href=\"https://collective.flashbots.net/t/toward-an-open-research-and-development-process-for-mev-boost/464\" rel=\"noopener nofollow ugc\">previously voiced</a> by the community. We have tried to embrace this and strive to model Commit-Boost after it</li>\n</ul>\n<p><strong>Background</strong></p>\n<ul>\n<li>Proposer commitments have been an important part of Ethereum’s history. Today, we already see the power of commitments where over 90% of validators give up their autonomy and make a wholesale commitment that outsources block building to a sophisticated actor called a block builder</li>\n<li>However, most are starting to agree on a common denominator: in the future, beacon proposers will face a broader set of options of what they may “commit\" to–be it inclusions lists or preconfs or other types of commitments such as long-dated blockspace futures–compared to just an external or local payload they see today</li>\n<li>A <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\" rel=\"noopener nofollow ugc\">post</a> from Barnabe captures this well; during block construction, the validator “…creates the specs, or the template, by which the resulting block must be created, and the builders engaged by the proposer are tasked with delivering the block according to its specifications”</li>\n<li>While this all seems great, the challenge is that many teams building commitments are creating new sidecars driving fragmentation and risks for Ethereum</li>\n<li>For Ethereum, there are going to be significant challenges and increased risks during upgrades if there are a handful of sidecars that validators are running</li>\n<li>For validators, these risks potentially take us to a world where proposers will need to make decisions on which teams to “bet on” and which sidecars they will need to run to participate in what those teams are offering</li>\n<li>For homestakers, this is difficult and they likely will be unable to participate in more than one of these commitments</li>\n<li>For sophisticated actors, this increases the attack vector and operational complexity as more and more sidecars are required to be run</li>\n<li>Another side effect of this is validators are somewhat locked into using a specific sidecar due to limited operational capacity and the switching costs of running a different sidecar (i.e., vendor lock-in). The higher the switching costs, the more embedded network effects could become if these sidecars only support certain downstream actors / proposer commitment protocols</li>\n<li>This also could create a dynamic where core out-of-protocol infrastructure supporting Ethereum which should be a public good, starts being used for monetization, distribution, or other purposes</li>\n<li>Due to these dynamics, various teams and individuals across the community are driving the development and testing of open-source / public good software called Commit-Boost. This effort includes researchers, validators, builders, relays, client teams, consulting firms, protocols building commitments, L2s, restaking platforms, and countless others across the community</li>\n</ul>\n<p><strong>Commit-Boost Overview</strong></p>\n<p>Commit-Boost is a community-driven, open-source project developing an unopinionated validator platform to enable safe interactions with commitments. Some of its features include:</p>\n<ul>\n<li>Unification: Core devs will be able to interact and work with one standard during Ethereum forks / upgrades / when and if things go wrong</li>\n<li>Backward compatibility + more: Commit-Boost is not only backward compatible with MEV-Boost, but will improve the life of validators who only run MEV-Boost through increased reporting, telemetry / other off-the-shelf tools validators can employ</li>\n<li>Opt-in without running more sidecars: Commit-Boost will allow proposers who want to opt into other commitments do so without having to run multiple sidecars</li>\n<li>Robust support: Commit-Boost the software is supported by a not-for-profit entity. This team will be focused on security and robustness through policies and procedures with follow-the-sun type models where there is support 24/7 if / when things go wrong. This team will also be focused on testing and adjustments needed during hard forks and have a team to interact with to help during adoption, improvements, and sustainment</li>\n<li>Not VC-backed public good: This team and effort will not be VC-backed. There is no monetization plan. The entity will not be able to sell itself and will not start any monetizable side businesses</li>\n</ul>\n<p><strong>Robustness, Sustainability, and Security</strong></p>\n<ul>\n<li>Commit-Boost is being developed as a fully open-source project with contributions from teams across the Ethereum tech stack including from validators, client teams, relays, builders, consulting firms, researchers, and many others. This effort with input and support from these teams will help develop a robust product integrating many perspectives</li>\n<li>Commit-Boost will go through code reviews and audits once fully developed</li>\n<li>As noted below, there also will be a full-time team that helps maintain and upgrade the software with their core focus on 100% uptime and when there are bugs, robust processes to quickly address and fix</li>\n<li>The software stack is also built with the validator at the core and includes off-the-shelf tools for monitoring as well as reducing and proactively addressing any risks that may arise</li>\n<li>Last, this public good software will have minimal, but critical open governance around future upgrades with input across the Ethereum</li>\n</ul>\n<p><strong>Team Supporting / Governance of Commit-Boost Software</strong></p>\n<ul>\n<li>Entity supporting the software: Not-for-profit entity</li>\n<li>Multiple-person team: Multiple devs that focus on transparency, sustainment / development, and research with an initial focus around Commit-Boost the software</li>\n<li>Transparency: Open-source <a href=\"https://github.com/Commit-Boost/commit-boost-client\" rel=\"noopener nofollow ugc\">repo</a> and governance calls (see below)</li>\n<li>Sustainment / Development: 24/7 follow-the-sun coverage and highly engaged with client teams around upgrades / early in getting testnet support</li>\n<li>Research: Helping with open-source research across Ethereum</li>\n<li>Governance: This is still a WIP, but at a minimum will run a Commit-Boost, ACD-like calls (first one coming soon) to engage with stakeholders and drive consensus on upgrades / help coordinate around hard forks. A credibly neutral community member will lead these calls / this process that has experience with running governance processes over critical software within the Ethereum community</li>\n<li>Funding: All grants</li>\n</ul>\n<p><strong>Where Will the Grants Come From</strong></p>\n<p>The team is in the process of applying for grants from across the ecosystem. We are initially applying to a few organizations across the community that are supporting grants across research organizations and firms focused on PBS and staking. If teams are interested in providing a grant, feel free to comment below / reach out.</p>\n<p><strong>Technical Roadmap</strong></p>\n<p>Commit-Boost is currently in the MVP phase with <a href=\"http://holesky.beaconcha.in/slot/2022891\" rel=\"noopener nofollow ugc\">testing</a> underway in Holesky with multiple validators. This includes the full functionality of a PBS Module implementing MEV-Boost with additional telemetry and metrics collection. We are continuing the development and feature set of Commit-Boost targeting production-ready software and audits kicking off at the end of Q3. More details are in the Commit-Boost <a href=\"https://github.com/Commit-Boost/commit-boost-client/issues\" rel=\"noopener nofollow ugc\">repo</a> and we are keen to get feedback / engage with the community around these.</p>\n<p>Some near-term high-level highlights from the roadmap include:</p>\n<ul>\n<li>Optimized and functional MEV-Boost module including multiple metrics for reporting and extensions such as configurable timing for get_header / get_payload calls</li>\n<li>Pre-made dashboards on Grafana for all core services</li>\n<li>Improved reliability and integrations for incident response</li>\n<li>R&amp;D / spec signing mechanism to fit as many validator set-ups as possible</li>\n<li>Expanding modularity and optionality (i.e., supporting different types of signatures and modules)</li>\n</ul>\n<p><strong>Commit-Boost Design Principles</strong></p>\n<ul>\n<li>Built for validators: Platform that not only can help validators today (i.e., can improve the lives of validators even if they just run an MEV-Boost module) but allows validators to be ready for the market of tomorrow (i.e., preconfs, inclusion lists, etc)</li>\n<li>Neutrality: No opinions, the platform will be proposer commitment agnostic, relay agnostic, transaction flow agnostic, etc. The goal is to build a platform that doesn’t limit the design space downstream while reducing risks of fragmentation for validators and Ethereum</li>\n<li>Unified: Validators run one core sidecar with the ability to opt into many different commitments</li>\n<li>Safety: Open-source code developed with input by the community with community reviews / audits</li>\n<li>Reduce risks: Modularized and transparency are core to reducing risk / overhead for the proposer to manage commitments and their broader operational processes</li>\n<li>Values aligned: Public good with no plans for monetization. We will continuously ask ourselves: would Vitalik run Commit-Boost and can this be designed in a way to increase the decentralization of Ethereum block construction</li>\n</ul>\n<p><strong>From the Perspective of the Proposer</strong></p>\n<p>More details on what it takes to run Commit-Boost as a node operator can be found <a href=\"https://commit-boost.github.io/commit-boost-client/get_started/overview\" rel=\"noopener nofollow ugc\">here</a>. Please note that this has not been finalized and over the next few weeks we will be making updates (see roadmap / milestones above).</p>\n<ul>\n<li>Run a single sidecar with support for MEV-Boost and other proposer commitments protocols, such as precons / other commitments</li>\n<li>Out-of-the-box support for metrics reporting and dashboards to have clear insight around what is happening in your validator seen through dashboards such as Grafana</li>\n<li>Plug-in system to add custom modules, i.e., receive a notification on Telegram if a relay fails to deliver a block</li>\n<li>Standardized way to provide a signature to opt into a commitment</li>\n<li>Creates constraints / condition sets and pass these constraints downstream</li>\n</ul>\n<p><strong>From the Perspective of the Proposer Commitment Protocol / Module Creator</strong></p>\n<p>More details on what it takes to build a module / metrics can be found <a href=\"https://commit-boost.github.io/commit-boost-client/category/developing\" rel=\"noopener nofollow ugc\">here</a>. Please note that this has not been finalized and over the next few weeks we will finalize moving parts that impact module creators (see roadmap / milestones above).</p>\n<ul>\n<li>A modular platform to develop and distribute proposer commitments protocols</li>\n<li>A single API to interact with validators</li>\n<li>Support for hard-forks and new protocol requirements</li>\n</ul>\n<p><strong>Architecture of Commit-Boost</strong></p>\n<p>More details can be found in the Commit-Boost <a href=\"https://commit-boost.github.io/commit-boost-client/\" rel=\"noopener nofollow ugc\">documentation</a>. However, below is a schematic of Commit-Boost. This proposed architecture allows proposers to run one sidecar, but still retain the ability to opt into a network of proposer commitment modules. More specifically, with this middleware, the proposer will only need to (in the case of delegation / light weight commitments) run one sidecar and limit their responsibilities to only selecting which module / proposer commitment protocol they would like to subscribe to.</p>\n<p>It is important to note that the below depiction contains just a few examples of proposer commitment modules that can run on Commit-Boost. The design space for modules is completely open / not gated by the Commit-Boost software and proposers will be responsible for opting into the commitments they wish to subscribe to (i.e., a proposer is responsible for which modules they will subscribe to).</p>\n<p><strong>Terminology</strong></p>\n<ul>\n<li>Proposer: entity, staking pool NoOp, or DVT cluster with the right to propose the next block</li>\n<li>Commitment: a constraint or condition that the proposer choses and agrees to via a signature</li>\n<li>Key Manager: some proposers use key managers or remote signers as part of their proposer / validator duties. Please note, that Commit-Boost is being designed in a way where it does not require validators to run key managers and working on solutions for monolithic set-ups</li>\n<li>Consensus Client: for example, Lighthouse or Teku (see <a href=\"https://ethereum.org/en/developers/docs/nodes-and-clients/\" rel=\"noopener nofollow ugc\">here</a> for more details)</li>\n<li>Commitment Modules: community-built modules allowing proposers to make commitment, including some of the logic of the proposer commitment protocol</li>\n<li>Signer API: The signer API is one of the core components around Commit-Boost. This is used to provide signatures from the proposer to the proposer commitment protocol. This is still in the design but proxy signatures will be used in nearly all cases (there are some outlier cases). For more details on the API please see <a href=\"https://commit-boost.github.io/commit-boost-client/api/\" rel=\"noopener nofollow ugc\">here</a>. For an example of how to communicate with the Signer API, please see <a href=\"https://commit-boost.github.io/commit-boost-client/developing/commit-module\" rel=\"noopener nofollow ugc\">here</a></li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/a/ca4fdf7f738261cf46b1505dc56198da182592dc.png\" data-download-href=\"https://ethresear.ch/uploads/default/ca4fdf7f738261cf46b1505dc56198da182592dc\" title=\"Schematic\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/a/ca4fdf7f738261cf46b1505dc56198da182592dc_2_690x411.png\" alt=\"Schematic\" data-base62-sha1=\"sRJzJ0TTcP5BoPdmLMWIJjE903a\" width=\"690\" height=\"411\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/a/ca4fdf7f738261cf46b1505dc56198da182592dc_2_690x411.png, https://ethresear.ch/uploads/default/original/3X/c/a/ca4fdf7f738261cf46b1505dc56198da182592dc.png 1.5x, https://ethresear.ch/uploads/default/original/3X/c/a/ca4fdf7f738261cf46b1505dc56198da182592dc.png 2x\" data-dominant-color=\"EDEFF1\"></a></div><p></p>\n<p>Using this as a middleware instead of direct modification to the consensus client or running a sidecar per commitment will allow for each component to be sustained independently and will provide for cross proposer commitment compatibility. This will also allow for a bit of time for the market to play out, but via a public good, standardize the last mile of communication to help address the risks (discussed in the background section above) developing. Once the market does play out, and the community is able to observe some dynamics (the good and the bad), we can and should push for CL changes.</p>\n<p><strong>Resources</strong></p>\n<ul>\n<li><a href=\"https://github.com/Commit-Boost\" rel=\"noopener nofollow ugc\">Commit-Boost Repo</a></li>\n<li>Commit-Boost <a href=\"https://commit-boost.github.io/commit-boost-client/\" rel=\"noopener nofollow ugc\">documentation</a></li>\n<li>List of presentations</li>\n<li>Original post on ETH Research, read more <a href=\"https://ethresear.ch/t/based-proposer-commitments-ethereum-s-marketplace-for-proposer-commitments/19517\">here</a></li>\n<li>First presentation to the community can be found <a href=\"https://www.youtube.com/watch?v=jrm4ZUoj9xY&amp;list=PLJqWcTqh_zKHDFarAcF29QfdMlUpReZrR&amp;index=11\" rel=\"noopener nofollow ugc\">here</a></li>\n<li>Second presentation at zuBerlin can be found <a href=\"https://streameth.org/zuberlin/watch?session=66681afef9b8e98b1ec95fdd\" rel=\"noopener nofollow ugc\">here</a></li>\n<li>zuBerlin Devnet notion can be found <a href=\"https://twisty-wednesday-4be.notion.site/ZuBerlin-Preconfs-Devnet-b693047f41e7407cadac0170a6711dea\" rel=\"noopener nofollow ugc\">here</a></li>\n<li>Mev-Boost Community call <a href=\"https://www.youtube.com/watch?v=UgoFjNkkTac\" rel=\"noopener nofollow ugc\">here</a></li>\n<li>Espresso / One Balance Sequencing day here (this will be updated when the link is ready)</li>\n<li>Gattaca MEV Day here (this will be updated when the link is ready)</li>\n</ul>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/commit-boost-proposer-platform-to-safely-make-commitments/20107\">Read full topic</a></p>","link":"https://ethresear.ch/t/commit-boost-proposer-platform-to-safely-make-commitments/20107","pubDate":"Fri, 19 Jul 2024 14:33:05 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20107"},"source":{"@url":"https://ethresear.ch/t/commit-boost-proposer-platform-to-safely-make-commitments/20107.rss","#text":"Commit-Boost: Proposer Platform to Safely Make Commitments"},"filter":false},{"title":"What is \"RealTPS\" in Blockchain","dc:creator":"rrhlrmrr","category":"Tools","description":"<p>Authors: <a href=\"https://x.com/Kyungmin7984\" rel=\"noopener nofollow ugc\">@Kyungmin</a> <a href=\"https://github.com/bicoCrypto\" rel=\"noopener nofollow ugc\">@bicoCrypto</a> <a href=\"https://github.com/solmingming\" rel=\"noopener nofollow ugc\">@solmingming</a> Members of <a href=\"https://x.com/DecipherGlobal\" rel=\"noopener nofollow ugc\">@DecipherGlobal</a> SNU Blockchain Research Center</p>\n<h2><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>TL;DR</h2>\n<p>The current concept of TPS (Transactions Per Second) in blockchain is being disclosed in an ambiguous and opaque manner, conflicting with blockchain’s core value of transparency. This article reconsiders the definition of transactions in blockchain, compares theoretical figures with actual measurements, evaluates existing measurement tools, introduces our self-developed tool, and proposes a more accurate and transparent TPS measurement method.</p>\n<h2><a name=\"problem-2\" class=\"anchor\" href=\"https://ethresear.ch#problem-2\"></a>Problem</h2>\n<p>The biggest change in the transition from Web2 to Web3 is decentralization. This has led to improved system accessibility and increased information transparency. However, there is still opaque information in the blockchain ecosystem, with TPS being a prime example.</p>\n<p>In transaction processing systems, especially financial systems, TPS is a crucial performance indicator. However, the TPS information currently provided in blockchain is limited to simple figures, with detailed information about measurement methods and processes remaining opaque.</p>\n<p>While blockchain smart contracts are operated transparently through verification and auditing, we still rely on the foundation’s system for the blockchain nodes themselves, lacking verification procedures similar to smart contracts.</p>\n<h2><a name=\"tps-in-traditional-web2-3\" class=\"anchor\" href=\"https://ethresear.ch#tps-in-traditional-web2-3\"></a>TPS in traditional Web2</h2>\n<p>When discussing blockchain TPS, VISA’s processing capability is often mentioned as a comparison. <a href=\"https://www.reddit.com/r/nanocurrency/comments/82438o/visa_is_capable_of_performing_24000_transactions/\" rel=\"noopener nofollow ugc\">VISA officially announced a processing capability of 24,000 TPS</a>, but <a href=\"https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/\" rel=\"noopener nofollow ugc\">this has been questioned</a>:</p>\n<p>In centralized Web2 systems, it’s difficult to verify such issues. However, blockchain (Web3) systems are decentralized and their code is managed as open source, making it possible to verify TPS.</p>\n<h2><a name=\"tps-in-web3-4\" class=\"anchor\" href=\"https://ethresear.ch#tps-in-web3-4\"></a>TPS in Web3</h2>\n<p>In blockchain systems with public nodes and permissionless nodes, anyone can participate in the network, operate nodes, and access the system. Even without connecting to the mainnet or testnet, the source code is publicly available, allowing independent network construction or modification after forking.</p>\n<p>Ethereum and most EVM-compatible blockchains publish high TPS figures. For example, Avalanche C-Chain is introduced as capable of achieving 4,500 TPS. However, information on how this figure was measured is not provided.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/4/748ee3c646e8c2964dd294eefe5aa1491ce65b45.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/748ee3c646e8c2964dd294eefe5aa1491ce65b45\" title=\"Image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/4/748ee3c646e8c2964dd294eefe5aa1491ce65b45_2_690x378.jpeg\" alt=\"Image\" data-base62-sha1=\"gD7wDCIxOZdV4Affpqc6j9vdYSp\" width=\"690\" height=\"378\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/4/748ee3c646e8c2964dd294eefe5aa1491ce65b45_2_690x378.jpeg, https://ethresear.ch/uploads/default/optimized/3X/7/4/748ee3c646e8c2964dd294eefe5aa1491ce65b45_2_1035x567.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/7/4/748ee3c646e8c2964dd294eefe5aa1491ce65b45.jpeg 2x\" data-dominant-color=\"373555\"></a></div><p></p>\n<h2><a name=\"time-to-define-transaction-5\" class=\"anchor\" href=\"https://ethresear.ch#time-to-define-transaction-5\"></a>Time to Define Transaction</h2>\n<p>In EVM blockchains, the term “Transaction” is used in various contexts:</p>\n<ul>\n<li>SendTransaction: Simply refers to the act of sending a transaction, without guaranteeing the final state or completeness of the transaction.</li>\n<li>PendingTransaction: The state where a transaction is waiting in the node’s memory pool (Mempool).</li>\n<li>QueuedTransaction: Similar to Pending, waiting in the node’s memory pool, but distinguished in the serialization process through Nonce.</li>\n<li>ConfirmedTransaction: The state where a transaction receipt has been issued, indicating the transaction has succeeded or failed.</li>\n</ul>\n<p>We believe that TPS should be calculated based on ConfirmedTransactions when measuring. Based on this, we propose the following formula for calculating TPS:<br>\nTPS = BlockGasLimit / (TxGasUsed * BlockCreationTime)</p>\n<p>Currently, Avalanche C-Chain’s BlockGasLimit is 15,000,000<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/9/c909ced7994a754fc7875e8dd1730093faedad3e.png\" data-download-href=\"https://ethresear.ch/uploads/default/c909ced7994a754fc7875e8dd1730093faedad3e\" title=\"Tx Gaslimit\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/9/c909ced7994a754fc7875e8dd1730093faedad3e_2_690x225.png\" alt=\"Tx Gaslimit\" data-base62-sha1=\"sGsZ4y6Ey58W84yDKiIjfGzDPPw\" width=\"690\" height=\"225\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/9/c909ced7994a754fc7875e8dd1730093faedad3e_2_690x225.png, https://ethresear.ch/uploads/default/optimized/3X/c/9/c909ced7994a754fc7875e8dd1730093faedad3e_2_1035x337.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/9/c909ced7994a754fc7875e8dd1730093faedad3e_2_1380x450.png 2x\" data-dominant-color=\"181719\"></a></div><p></p>\n<p>Even assuming the simplest transaction (TxGasUsed = 21,000) and the shortest block creation time (BlockCreationTime = 1 second), the theoretical maximum TPS is 715. This shows a significant difference from the officially announced 4,500 TPS. (The actual measured value would naturally be even lower)</p>\n<p>We speculate that this difference may occur due to:</p>\n<ul>\n<li>The transaction standard used in TPS calculation may not be ConfirmedTransaction</li>\n<li>The Avalanche version that achieved 4,500 TPS may differ from the version currently used in public nodes</li>\n<li>Differences in TPS measurement methods and methodologies</li>\n</ul>\n<p>Such opaque information raises questions about the reliability and accuracy of TPS figures.<br>\nMonad has published a critical analysis of these limitations of blockchain TPS: <a href=\"https://www.monad.xyz/wtf-is-tps\" rel=\"noopener nofollow ugc\">WTF is TPS?</a></p>\n<h2><a name=\"tps-benchmark-tools-6\" class=\"anchor\" href=\"https://ethresear.ch#tps-benchmark-tools-6\"></a>TPS Benchmark Tools</h2>\n<p>There are currently two main blockchain TPS benchmark tools in use:</p>\n<ol>\n<li><a href=\"https://github.com/hyperledger/caliper\" rel=\"noopener nofollow ugc\">Hyperledger Caliper</a>: Developed by the Hyperledger Foundation</li>\n<li><a href=\"https://github.com/drandreaskrueger/chainhammer\" rel=\"noopener nofollow ugc\">ChainHammer</a>: Recommended by Quorum (a private blockchain developed by ConsenSys)<br>\nNote: ChainHammer’s most recent commit was 2 years ago, making it essentially outdated.</li>\n</ol>\n<p>Caliper is written in JavaScript and is a highly complete project. However, there are doubts about whether it is optimized for measuring “blockchain” TPS:</p>\n<ol>\n<li>TPS measurement on a single node:<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/7/67bd0b50a563472ac93dafc3fa2e17effa0919e8.png\" data-download-href=\"https://ethresear.ch/uploads/default/67bd0b50a563472ac93dafc3fa2e17effa0919e8\" title=\"Figure2\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/7/67bd0b50a563472ac93dafc3fa2e17effa0919e8_2_690x389.png\" alt=\"Figure2\" data-base62-sha1=\"eNIcHc4GI05U9XExGgTvsGf9K9q\" width=\"690\" height=\"389\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/7/67bd0b50a563472ac93dafc3fa2e17effa0919e8_2_690x389.png, https://ethresear.ch/uploads/default/optimized/3X/6/7/67bd0b50a563472ac93dafc3fa2e17effa0919e8_2_1035x583.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/7/67bd0b50a563472ac93dafc3fa2e17effa0919e8.png 2x\" data-dominant-color=\"F8F8F8\"></a></div></li>\n</ol>\n<p>The core of blockchain is distributed storage of data through consensus. However, Caliper only conducts TPS measurements on a single node, which can measure the TPS of individual nodes but does not accurately reflect the TPS of the entire blockchain network. (The transaction propagation process is not considered)</p>\n<ol>\n<li>Limitation of measurement from a single account:<br>\nIn EVM, EOA (Externally Owned Account) has a Nonce value, causing transactions to be processed sequentially.<br>\nWhile 2024 was predicted to be the era of parallel EVM, current parallel processing technology still proceeds in an optimistic manner, requiring re-execution in case of conflicts. (Cases requiring re-execution can hardly be considered true parallel execution.)<br>\nTherefore, execution from a single account versus multiple accounts can have a significant impact on TPS.</li>\n</ol>\n<h2><a name=\"antpsan-ti-tps-7\" class=\"anchor\" href=\"https://ethresear.ch#antpsan-ti-tps-7\"></a>AnTPS(An-ti TPS)</h2>\n<p>To improve these limitations, we have developed our own blockchain benchmark tool, AnTPS, using Golang: <a href=\"https://github.com/decipherhub/AnTPS\" rel=\"noopener nofollow ugc\">Github</a><br>\nFeatures include:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/0/f0cff11ba6f328b500e85b78f194763580ca940c.png\" data-download-href=\"https://ethresear.ch/uploads/default/f0cff11ba6f328b500e85b78f194763580ca940c\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/0/f0cff11ba6f328b500e85b78f194763580ca940c_2_690x283.png\" alt=\"image\" data-base62-sha1=\"ymk6Ajc7MwJznl71YJNmFBkDpFi\" width=\"690\" height=\"283\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/0/f0cff11ba6f328b500e85b78f194763580ca940c_2_690x283.png, https://ethresear.ch/uploads/default/optimized/3X/f/0/f0cff11ba6f328b500e85b78f194763580ca940c_2_1035x424.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/f/0/f0cff11ba6f328b500e85b78f194763580ca940c_2_1380x566.png 2x\" data-dominant-color=\"BEBEBE\"></a></div><p></p>\n<ul>\n<li>Transparently providing measurement environment/results.</li>\n<li>Conducting measurements on at least two or more nodes.</li>\n<li>Supporting measurement cases for both single and multiple accounts.</li>\n<li>Supporting various scenarios during measurement (ERC20/721/1155/NativeToken).</li>\n<li>Supporting not only local environment measurements but also Cloud environments through IaC.</li>\n</ul>\n<p>Our goal is to overcome the limitations of existing tools while providing information transparently.<br>\nWe welcome your opinions and feedback. Thank you.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/what-is-realtps-in-blockchain/20098\">Read full topic</a></p>","link":"https://ethresear.ch/t/what-is-realtps-in-blockchain/20098","pubDate":"Fri, 19 Jul 2024 03:52:11 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20098"},"source":{"@url":"https://ethresear.ch/t/what-is-realtps-in-blockchain/20098.rss","#text":"What is \"RealTPS\" in Blockchain"},"filter":false},{"title":"Based Preconfirmations with Multi-round MEV-Boost","dc:creator":"linoscope","category":"Layer 2","description":"<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/b/fb1798cc79775d7958124717d6ba5cc97c1aa008.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/fb1798cc79775d7958124717d6ba5cc97c1aa008\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/original/3X/f/b/fb1798cc79775d7958124717d6ba5cc97c1aa008.jpeg\" alt=\"image\" data-base62-sha1=\"zPgoRZKypQhJYD3l7g5edTJShKw\" width=\"690\" height=\"394\" data-dominant-color=\"9C959A\"></a></div><p></p>\n<p>By <a href=\"https://twitter.com/linoscope\" rel=\"noopener nofollow ugc\">Lin Oshitani</a> (<a href=\"https://switchboard.nethermind.io/\" rel=\"noopener nofollow ugc\">Nethermind Switchboard</a>, <a href=\"https://www.nethermind.io/nethermind-research\" rel=\"noopener nofollow ugc\">Nethermind Research</a>). Many thanks to <a href=\"https://twitter.com/ConorMcMenamin9\" rel=\"noopener nofollow ugc\">Conor</a> for the detailed back-and-forth on crafting this document and to <a href=\"https://www.linkedin.com/in/aikaterini-panagiota-stouka/\" rel=\"noopener nofollow ugc\">Aikaterini</a>, <a href=\"https://x.com/ElenaPetreska0x\" rel=\"noopener nofollow ugc\">Elena</a>, <a href=\"https://twitter.com/smartprogrammer\" rel=\"noopener nofollow ugc\">Ahmad</a>, <a href=\"https://twitter.com/aj_jalan\" rel=\"noopener nofollow ugc\">Anshu</a>, <a href=\"https://twitter.com/swp0x0\" rel=\"noopener nofollow ugc\">Swapnil</a>, <a href=\"https://twitter.com/tkstanczak\" rel=\"noopener nofollow ugc\">Tomasz</a>, <a href=\"https://twitter.com/totorovirus\" rel=\"noopener nofollow ugc\">Jinsuk</a>, <a href=\"https://twitter.com/0xQuintus\" rel=\"noopener nofollow ugc\">Quintus</a>, <a href=\"https://x.com/ceciliaz030\" rel=\"noopener nofollow ugc\">Ceciliaz</a>, and <a href=\"https://twitter.com/Brechtpd\" rel=\"noopener nofollow ugc\">Brecht</a> for the helpful comments and/or review. This work was partly funded by Taiko. The views expressed are my own and do not necessarily reflect those of the reviewers or Taiko.</p>\n<h1><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>TL;DR</h1>\n<p>As we outlined in our previous post <a href=\"https://ethresear.ch/t/strawmanning-based-preconfirmations/19695\">Strawmanning Based Preconfirmations</a>, naive implementations of based preconfirmations introduce many negative externalities that require thoughtful consideration.</p>\n<p>In this post, we will expand on the negative externalities of based preconfirmations by examining them through the lens of the L1 PBS pipeline. Then, we propose <em>multi-round MEV-Boost</em>, a modification of MEV-Boost that enables based preconfirmations by running multiple rounds of MEV-Boost auctions within a single slot. This approach inherits the L1 PBS pipeline and mitigates the negative externalities of based preconfirmations as a result.</p>\n<h1><a name=\"motivation-2\" class=\"anchor\" href=\"https://ethresear.ch#motivation-2\"></a>Motivation</h1>\n<p>As Justin Drake <a href=\"https://ethresear.ch/t/based-rollups-superpowers-from-l1-sequencing/15016#:~:text=a%20based%20rollup%20is%20one%20where%20the%20next%20L1%20proposer%20may%2C%20in%20collaboration%20with%20L1%20searchers%20and%20builders%2C%20permissionlessly%20include%20the%20next%20rollup%20block%20as%20part%20of%20the%20next%20L1%20block\">defines</a> in the original post, based rollups are rollups “where the next L1 proposer may, in collaboration with L1 searchers and builders, permissionlessly include the next rollup block as part of the next L1 block”. Using the <a href=\"https://flashbots.mirror.xyz/bqCakwfQZkMsq63b50vib-nibo5eKai0QuK7m-Dsxpo\" rel=\"noopener nofollow ugc\">MEV supply chain</a> diagram, based rollups can be illustrated below:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/c/ac29f931cf332c1b1b38334158920d6807f499f1.png\" data-download-href=\"https://ethresear.ch/uploads/default/ac29f931cf332c1b1b38334158920d6807f499f1\" title=\"Based Rollups (5) (1)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/c/ac29f931cf332c1b1b38334158920d6807f499f1_2_690x346.png\" alt=\"Based Rollups (5) (1)\" data-base62-sha1=\"oz23fZoj3sXo8MPnf2b735Dyqzf\" width=\"690\" height=\"346\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/c/ac29f931cf332c1b1b38334158920d6807f499f1_2_690x346.png, https://ethresear.ch/uploads/default/original/3X/a/c/ac29f931cf332c1b1b38334158920d6807f499f1.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/c/ac29f931cf332c1b1b38334158920d6807f499f1.png 2x\" data-dominant-color=\"FBFAFA\"></a></div><p></p>\n<p>Notice that the L2 transactions, represented as the red line, go through the same process as the L1 transactions, represented as the black line. By effectively “piggybacking” the L1 PBS pipeline, based rollups provide two key benefits:</p>\n<ul>\n<li><strong>Benefit 1</strong>: Since no additional actors (and thus no additional choke points) are introduced for L2 sequencing, based rollups fully inherit L1 censorship resistance, liveness, and credible neutrality.</li>\n<li><strong>Benefit 2</strong>: Since the L1 and L2 transactions are sequenced by the same entity (the builder), based rollups enable not only synchronous L2-L2 composability but also synchronous L1-L2 composability.</li>\n</ul>\n<p>Based rollups are great. They solve L2 fragmentation and sequencer decentralization while enabling L1 composability and inheriting L1’s censorship resistance, liveness, and credible neutrality. They are the only rollups that can have these properties simultaneously.</p>\n<p>However, they have one large drawback: they also inherit the 12-second L1 block time. To address the slow confirmation time, Justin introduced <a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">base preconfirmations</a>. In this approach, L1 proposers can opt into providing preconfirmations for based rollup L2 transactions, as shown below:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/e/6e65221a830715cead4428b2724688ce66d7520c.png\" data-download-href=\"https://ethresear.ch/uploads/default/6e65221a830715cead4428b2724688ce66d7520c\" title=\"Based Preconf (2) (1)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/e/6e65221a830715cead4428b2724688ce66d7520c_2_690x346.png\" alt=\"Based Preconf (2) (1)\" data-base62-sha1=\"fKBcjG3axZJngTRk0HOLvltDJcU\" width=\"690\" height=\"346\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/e/6e65221a830715cead4428b2724688ce66d7520c_2_690x346.png, https://ethresear.ch/uploads/default/original/3X/6/e/6e65221a830715cead4428b2724688ce66d7520c.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/e/6e65221a830715cead4428b2724688ce66d7520c.png 2x\" data-dominant-color=\"FBFAFA\"></a></div><p></p>\n<p>Since providing preconfirmations requires technical sophistication, most based preconfirmation designs include a delegation mechanism that allows validators to outsource the preconfirmation duty to a designated preconfer, as illustrated below:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/9/f9346fd068da5aa3ae0e57fceccc6c2af223b958.png\" data-download-href=\"https://ethresear.ch/uploads/default/f9346fd068da5aa3ae0e57fceccc6c2af223b958\" title=\"Based Preconf with delegation (2)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/9/f9346fd068da5aa3ae0e57fceccc6c2af223b958_2_690x346.png\" alt=\"Based Preconf with delegation (2)\" data-base62-sha1=\"zyzeAVb2uUipx8qTLNJ40wYwHwI\" width=\"690\" height=\"346\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/9/f9346fd068da5aa3ae0e57fceccc6c2af223b958_2_690x346.png, https://ethresear.ch/uploads/default/original/3X/f/9/f9346fd068da5aa3ae0e57fceccc6c2af223b958.png 1.5x, https://ethresear.ch/uploads/default/original/3X/f/9/f9346fd068da5aa3ae0e57fceccc6c2af223b958.png 2x\" data-dominant-color=\"FAF9F9\"></a></div><p></p>\n<p>Notice that L2 and L1 transactions no longer share the block-building pipeline. As such, the benefits of based rollups are diminished:</p>\n<ul>\n<li>On benefit 1: We introduced an additional choke point to the system, the preconfer, which can censor L2 transactions or degrade L2 liveness by going down. As a result, the inheritance of L1 censorship resistance and liveness are degraded.</li>\n<li>On benefit 2: We now have two parallel block-building entities: one for L1 (the builder) and another for L2 (the preconfer). Consequently, L1-L2 composability now requires coordination between the builder and the preconfer. This adds complexity and can lead to <em>builder-preconfer integration</em>, where the proposer delegates not only their preconfirmation right but also the whole block-building right to the preconfer ahead of their slot.</li>\n</ul>\n<p>In summary, by introducing preconfirmations, we lost the below structure:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/c/ac29f931cf332c1b1b38334158920d6807f499f1.png\" data-download-href=\"https://ethresear.ch/uploads/default/ac29f931cf332c1b1b38334158920d6807f499f1\" title=\"Based Rollups (5) (1)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/c/ac29f931cf332c1b1b38334158920d6807f499f1_2_690x346.png\" alt=\"Based Rollups (5) (1)\" data-base62-sha1=\"oz23fZoj3sXo8MPnf2b735Dyqzf\" width=\"690\" height=\"346\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/c/ac29f931cf332c1b1b38334158920d6807f499f1_2_690x346.png, https://ethresear.ch/uploads/default/original/3X/a/c/ac29f931cf332c1b1b38334158920d6807f499f1.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/c/ac29f931cf332c1b1b38334158920d6807f499f1.png 2x\" data-dominant-color=\"FBFAFA\"></a></div><p></p>\n<p>As a result, many of the benefits of based rollups are diminished.</p>\n<p>So, what if we keep this pipeline but run it multiple times within a slot to achieve fast preconfirmations? This brings us to the main contribution of this document: <em>Multi-round MEV-Boost</em>.</p>\n<h1><a name=\"multi-round-mev-boost-3\" class=\"anchor\" href=\"https://ethresear.ch#multi-round-mev-boost-3\"></a>Multi-round MEV-Boost</h1>\n<p>At a high level, Multi-round MEV-Boost, or <em>MR-MEV-Boost</em> (pronounced “<em>mister-mev-boost</em>”, h/t <a href=\"https://twitter.com/ConorMcMenamin9\" rel=\"noopener nofollow ugc\">Conor</a> for the idea on the pronounciation :)) for short, works as follows:</p>\n<ul>\n<li>Split each slot into a fixed number of <em>rounds, e</em>.g., 4 rounds with 3 seconds each.</li>\n<li>Within each round, run a single MEV-Boost auction. As a result of the auction, a single <em>partial block</em> (a.k.a <em>partial payload</em>) will be signed and published, i.e., the partial block will be <em>preconfirmed</em>.</li>\n<li>The full block is created and published at the end of the slot. The full block should contain the partial blocks in the exact order they were preconfirmed without inserting any transactions before or in between.</li>\n</ul>\n<h2><a name=\"refresher-mev-boost-4\" class=\"anchor\" href=\"https://ethresear.ch#refresher-mev-boost-4\"></a>Refresher: MEV-Boost</h2>\n<p>Before diving deeper into the proposed protocol, let’s quickly review today’s <a href=\"https://docs.flashbots.net/flashbots-mev-boost/introduction\" rel=\"noopener nofollow ugc\">MEV-Boost</a> PBS pipeline used in L1 Ethereum.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/e/fe199d4c844c9230a675292724deb29c9e03a3df.png\" data-download-href=\"https://ethresear.ch/uploads/default/fe199d4c844c9230a675292724deb29c9e03a3df\" title=\"MEV-Boost\"><img src=\"https://ethresear.ch/uploads/default/original/3X/f/e/fe199d4c844c9230a675292724deb29c9e03a3df.png\" alt=\"MEV-Boost\" data-base62-sha1=\"AfS9Gqf5mSLTXhQwZENfR398TdJ\" width=\"609\" height=\"500\" data-dominant-color=\"F8F8F8\"></a></div><p></p>\n<ol>\n<li>Builders send the <code>header</code>, <code>payload</code>, and <code>bid</code> to the relayer.</li>\n<li>The relayer checks the validity (the <code>bid</code> is correct, the <code>payload</code> does not contain invalid transactions, etc), stores the <code>payload</code>, and then sends the <code>header</code> and <code>bid</code> to the proposer.</li>\n<li>The proposer selects the header with the highest bid, signs it, and then sends the signed header to the relayer.</li>\n<li>The relayer propagates the signed header and corresponding payload to the network.</li>\n</ol>\n<h2><a name=\"protocol-description-5\" class=\"anchor\" href=\"https://ethresear.ch#protocol-description-5\"></a>Protocol Description</h2>\n<p>In this section, we describe the MR-MEV-Boost protocol.</p>\n<h3><a name=\"protocol-flow-overview-6\" class=\"anchor\" href=\"https://ethresear.ch#protocol-flow-overview-6\"></a>Protocol Flow Overview</h3>\n<p>To incentivize proposers to provide preconfirmations, we introduce a <em>preconf transaction</em>, where the payment of a <em>preconf tip</em> is conditioned on being preconfirmed. It will include the following information on top of the transaction payload itself:</p>\n<ul>\n<li><code>tip</code>: The preconfirmation tip paid for being preconfirmed.</li>\n<li><code>target_slot</code>: The latest slot in which the preconf transaction can be included.</li>\n<li><code>target_round</code>: The latest round within the <code>target_slot</code> in which the preconf transaction can be included.</li>\n</ul>\n<p>The <a href=\"https://ethresear.ch#preconf-transaction\">Preconf Transaction</a> section will discuss the encoding and enforcement of these conditions.</p>\n<p>Using this new transaction type, MR-MEV-Boost works as follows:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/a/7a4dc3f4c38b4184016390e2e48dc44e5630da74.png\" data-download-href=\"https://ethresear.ch/uploads/default/7a4dc3f4c38b4184016390e2e48dc44e5630da74\" title=\"MR-MEV-Boost\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/a/7a4dc3f4c38b4184016390e2e48dc44e5630da74_2_252x500.png\" alt=\"MR-MEV-Boost\" data-base62-sha1=\"hrWRvNqnv9o5v3YXh3P3LSOqABu\" width=\"252\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/a/7a4dc3f4c38b4184016390e2e48dc44e5630da74_2_252x500.png, https://ethresear.ch/uploads/default/optimized/3X/7/a/7a4dc3f4c38b4184016390e2e48dc44e5630da74_2_378x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/7/a/7a4dc3f4c38b4184016390e2e48dc44e5630da74_2_504x1000.png 2x\" data-dominant-color=\"F9F9F9\"></a></div><p></p>\n<ol>\n<li>Users submit preconf transactions to the builders. The submission can be through any order flow pipeline used in current L1, such as:\n<ul>\n<li>Public mempool.</li>\n<li>Private order flow.</li>\n<li>Order flow auctions on <a href=\"https://mevblocker.io/\" rel=\"noopener nofollow ugc\">MEVBlocker</a>, <a href=\"https://docs.flashbots.net/flashbots-protect/mev-share\" rel=\"noopener nofollow ugc\">MEV-Share</a>, <a href=\"https://writings.flashbots.net/the-future-of-mev-is-suave\" rel=\"noopener nofollow ugc\">SUAVE</a>, etc.</li>\n</ul>\n</li>\n<li>The builders build <code>partial_payload</code>s. The partial payload built by the builders should only include preconf transactions with <code>target_slot</code> and <code>target_round</code> at or after the current block/round. To commit to this, the builder signs the <code>merkle_root</code> (denoted as <code>sig_b</code> ) and becomes subject to builder slashing condition 1, described in the <a href=\"https://ethresear.ch#slashing-conditions\">slashing condition section</a>.</li>\n<li>The relayer checks the validity (e.g., the <code>bid</code> is correct, the <code>partial_payload</code> does not contain invalid transactions, etc.), stores the <code>partial_payload</code>, and then sends the <code>merkle_root</code> and <code>bid</code> to the proposer.</li>\n<li>Proposer signs (denoted as <code>sig_p</code>) and returns the selected <code>merkle_root</code> together with the current <code>round</code>.</li>\n<li>The relay publishes the selected <code>partial_payload</code> and the associated round and signatures to the preconf network. Note that the preconf network is different from the existing L1 p2p network. Only entities interested in the preconfirmed state (partial block builders, relays, full-node providers, etc.) must subscribe to the preconf network.</li>\n<li>End users—or, more precisely, the L2/L1 full nodes to which they are connected—verify that the <code>merkle_root</code> is signed by the proposer and is associated with the current <code>round</code>. Upon confirmation, they accept the <code>partial_payload</code> as preconfirmed and execute it to update to the latest preconfirmed state.</li>\n<li>\n<ol>\n<li>to 6. is repeated multiple rounds within the slot. The number of rounds within each slot will be fixed. The final round will run concurrently with the full block MEV-Boost auction at 8.-11.</li>\n</ol>\n</li>\n<li>to 11. The MEV-Boost auction is conducted for the full block. An important difference with the usual L1 MEV-Boost auction is that the <code>merkle_proofs</code> are propagated from the builder to the proposer. These proofs prove that the <code>partial_payload</code>s are included in the full block in the order they were preconfirmed without any other transaction being inserted before or between them. By validating these proofs, the proposer can ensure that the proposer slashing condition 2, described in the <a href=\"https://ethresear.ch#slashing-conditions\">slashing conditions section</a>, is not violated without needing to trust the relayer (h/t to <a href=\"https://twitter.com/Brechtpd\" rel=\"noopener nofollow ugc\">Brecht</a> for the idea of using Merkle proofs here).</li>\n</ol>\n<h3><a name=\"preconf-transaction-7\" class=\"anchor\" href=\"https://ethresear.ch#preconf-transaction-7\"></a>Preconf Transaction</h3>\n<p>Let’s consider the encoding of the preconf transactions. For L2s, the additional fields can be introduced as custom encodings of the transactions. For L1, they can be implemented through an <a href=\"https://eips.ethereum.org/EIPS/eip-4337\" rel=\"noopener nofollow ugc\">ERC-4337</a>-style entry point contract that wraps the contract calls with additional information.</p>\n<p>To enforce the expiration, the L2 execution layer (or <a href=\"https://github.com/ethereum-optimism/specs/blob/b1c9b7985b65bd2d065a414f5ad0552f36e48540/specs/protocol/derivation.md#deriving-the-transaction-list\" rel=\"noopener nofollow ugc\">derivation layer</a>) and L1 entry point contract will filter out preconf transactions with expired <code>target_slot</code>. On the other hand, since the L1 is unaware of the concept of rounds, expiration based on <code>target_round</code> will be enforced via builder slashing condition 1, explained in the next section.</p>\n<h3><a name=\"slashing-conditions-8\" class=\"anchor\" href=\"https://ethresear.ch#slashing-conditions-8\"></a>Slashing Conditions</h3>\n<p>To ensure that the full block matches with the preconfed partial blocks, the proposer will be subject to:</p>\n<ul>\n<li><strong>Proposer slashing condition 1</strong>: The proposer must not sign two conflicting <code>merkle_root</code>s within the same round.</li>\n<li><strong>Proposer slashing condition 2</strong>: The final <code>full_payload</code> should contain all the <code>partial_payload</code>s in the order they are signed and published without any other transaction being inserted before or in between.</li>\n</ul>\n<p>Furthermore, to crypto-economically enforce the expiration of preconf transactions, the builder will be subject to:</p>\n<ul>\n<li><strong>Builder slashing condition 1:</strong> Each <code>partial_payload</code> must only include preconf transactions with <code>target_slot</code> and <code>target_round</code> at or after the current slot/round.</li>\n</ul>\n<p>We impose this condition on the builder rather than the proposer because the proposer does not see the partial payload when signing. An alternative approach would be to make this a proposer slashing condition and require the relayer to ensure the condition is not violated. However, this would necessitate the proposer trusting the relayer to avoid being slashed rather than only relying on the relayer to avoid missing a slot, as is currently done in L1 MEV-Boost.</p>\n<h3><a name=\"user-actions-9\" class=\"anchor\" href=\"https://ethresear.ch#user-actions-9\"></a>User Actions</h3>\n<p>To mitigate the <a href=\"https://ethresear.ch/t/strawmanning-based-preconfirmations/19695#problem-4-fair-exchange-7\">fair exchange problem</a>, wallets or full nodes to which end users are connected should take the actions below:</p>\n<ul>\n<li><strong>User action 1</strong>: Stop submitting preconf transactions if preconfirmed <code>partial_payload</code>s are not published in a timely manner. For example, if we have 4 rounds in a slot, then stop submitting preconf transactions if a <code>partial_payload</code> is not published every 3 seconds.</li>\n<li><strong>User action 2</strong>: Set <code>target_slot</code> and <code>target_round</code> to a reasonably close block and round (e.g., one or two rounds ahead). By doing so, builders are required to respond in a timely manner to preconfirmation transactions to avoid the preconfirmation transactions being invalidated.</li>\n</ul>\n<p>More on how the fair exchange is addressed is described in the <a href=\"https://ethresear.ch#analysis\">analysis section</a>.</p>\n<h3><a name=\"l1-l2-composability-10\" class=\"anchor\" href=\"https://ethresear.ch#l1-l2-composability-10\"></a>L1-L2 Composability</h3>\n<p>Since the partial payloads can contain both L1 and L2 transactions, builders can ensure L1-L2 composability by including L1-L2 transaction bundles in the partial payloads.</p>\n<h3><a name=\"non-opted-in-slots-11\" class=\"anchor\" href=\"https://ethresear.ch#non-opted-in-slots-11\"></a>Non-opted-in Slots</h3>\n<p>When the current L1 slot’s proposer has not opted in as a preconfer, L1 transactions will be proposed by the current proposer, while L2 transactions will be proposed by the next opted-in preconfer in the lookahead (we follow Justin’s <a href=\"https://ethresear.ch/t/based-preconfirmations/17353#:~:text=proposer%20lookahead%E2%80%94higher%20precedence%20for%20smaller%20slot%20numbers\">original based preconfirmation design</a> here). This results in two simultaneous MEV-Boost auctions: the usual L1 MEV-Boost auction signed by the current L1 proposer and the MR-MEV-Boost auction signed by the next preconfer. As a result, L1-L2 composability and L1 preconfirmation will be lost during these non-opted-in slots. Note that this limitation applies to all off-protocol preconfirmation designs.</p>\n<h1><a name=\"analysis-12\" class=\"anchor\" href=\"https://ethresear.ch#analysis-12\"></a>Analysis</h1>\n<p>In this section, we will perform an initial analysis of the proposed protocol and identify its drawbacks.</p>\n<h3><a name=\"have-we-solved-the-problems-13\" class=\"anchor\" href=\"https://ethresear.ch#have-we-solved-the-problems-13\"></a>Have we solved the problems?</h3>\n<p>Let’s revisit the problems raised in the <a href=\"https://ethresear.ch/t/strawmanning-based-preconfirmations/19695\">Strawmanning Based Preconfirmations</a> post and see if and how MR-MEV-Boost addresses them.</p>\n<p><strong>Problem 1: Latency race</strong></p>\n<p>Latency races are when searchers fight to be the first to access the preconfer, leading to colocation or vertical integration. With MR-MEV-Boost, this issue is largely mitigated by preconfirming batches and conducting auctions within the batch, as it promotes competition based on price rather than speed. It is generally acknowledged that batch auctions help reduce latency wars compared to continuous first-come, first-served ordering, as described in <a href=\"https://academic.oup.com/qje/article/130/4/1547/1916146\" rel=\"noopener nofollow ugc\">this paper</a> and <a href=\"https://ethresear.ch/t/latency-arms-race-concerns-in-blockspace-markets/14957\">this post</a>.</p>\n<p><strong>Problem 2: Congestion</strong></p>\n<p>Congestion issues arise when searchers flood the rollup with probabilistic arbitrage attempts. With MR-MEV-Boost, this issue is mitigated as searchers are incentivized to participate in auctions rather than resort to spam.</p>\n<p><strong>Problem 3: Tip pricing</strong></p>\n<p>The MEV-Boost auction will handle the tip pricing of the preconfirmation. Furthermore, by introducing batching and auctions within the batch, proposers can price the preconfirmation tips more effectively (hence capturing revenue) than by providing a continuous stream of per-transaction preconfirmations.</p>\n<p><strong>Problem 4: Fair exchange</strong></p>\n<p>Let’s see how MR-MEV-Boost addresses the <a href=\"https://ethresear.ch/t/strawmanning-based-preconfirmations/19695#problem-3-tip-pricing-6\">fair exchange problem</a>, where the proposer withholds publishing preconfirmations to the user. Note that preconfers are incentivized to withhold preconf promises as much as possible to maximize their opportunity to reorder and insert transactions, thereby increasing their MEV.</p>\n<p>There are two cases to consider:</p>\n<ul>\n<li>If the proposer withholds preconfirming partial payload (i.e., stops signing <code>merkle_root</code>s of <code>partial_payload</code>s), users will stop sending preconfirmation requests (user action 1), reducing the proposer’s order flow and, consequently, revenue.</li>\n<li>If the proposer intentionally publishes empty partial payloads, pending preconf transactions will expire after a few rounds (user action 2 and builder slashing condition 1), reducing the proposer’s order flow and, consequently, revenue.</li>\n</ul>\n<p>In summary, end users monitor and enforce proposers’ honest behavior by linking the proposers’ revenue to the timely preconfirmation of partial payloads.</p>\n<p>A potential alternative would be to introduce a committee to monitor and attest to the timely releases of partial payloads. However, this would require additional trust assumption to an external committee unless we enshrine the protocol into the L1. More on enshrinement in the <a href=\"https://ethresear.ch#future-direction\">future direction section</a>.</p>\n<p><strong>Problem 5: Liveness</strong></p>\n<p>With existing based preconfirmation designs where preconfirmation duties are delegated ahead of the slot, liveness relies on this single external entity for the duration of the preconfer’s slot(s). On the other hand, with MR-MEV-Boost, liveness concerns are reduced as we do not introduce such “lock-in” to a specific entity before the slot. If some builders or relayers are unavailable, others can step in to maintain functionality. Moreover, even if the entire multi-round MEV-Boost pipeline fails, proposers still have the option to construct their own partial blocks and preconfirm them independently.</p>\n<p><strong>Problem 6: Early auctions</strong></p>\n<p>Early auctions are not introduced as preconfirmations are provided through the MEV-Boost JIT auctions.</p>\n<h2><a name=\"round-interval-14\" class=\"anchor\" href=\"https://ethresear.ch#round-interval-14\"></a>Round Interval</h2>\n<p>How short can each round in MR-MEV-Boost be? If it is too long, it will degrade the user experience; if it is too short, it will impose excessive network and hardware requirements on builders and relays, thus hurting decentralization.</p>\n<p>In each round, the relayer has two tasks:</p>\n<ul>\n<li>(A) Run the partial block auction.</li>\n<li>(B) Propagate the partial block.</li>\n</ul>\n<p>Task (A) consists of the time it takes the builder to construct the block, the time it takes the relay to validate the block, and two network round-trips: one between the builder and the relay and another between the relay and the proposer. Assuming that <a href=\"https://x.com/SheaKetsdever/status/1808509437700665543\" rel=\"noopener nofollow ugc\">block construction</a>, validation, and network round-trips take 500 milliseconds each, we get a ballpark estimate of 2 seconds.</p>\n<p>For task (B), considering L1 allocates 4 seconds for block propagation and 8 seconds for consensus, and no consensus is needed for partial blocks, a good upper bound for propagation time is 4 seconds. In practice, it should be much shorter because only block builders, relays, and full-node providers need to receive these partial blocks, and they have better network bandwidth and lower latency than average validators. Let’s assume 1-2 seconds for this analysis.</p>\n<p>Combining 2 seconds for (A) and 1-2 seconds for (B) gives us 3-4 seconds per round.</p>\n<p>These estimates are highly approximate, and further research and analysis are needed. Additionally, making the interval too short will intensify latency races toward the end of the batch duration, as described <a href=\"https://ethresear.ch/t/latency-arms-race-concerns-in-blockspace-markets/14957#auction-designs-for-transaction-ordering-2\">here</a>, and should be considered.</p>\n<h2><a name=\"drawbacks-15\" class=\"anchor\" href=\"https://ethresear.ch#drawbacks-15\"></a>Drawbacks</h2>\n<p>Next, we will outline the drawbacks of this protocol when compared to existing based preconfirmation designs, such as the one described in the <a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">original post</a>. An analysis of more general drawbacks of preconfirmations will be reserved for future work.</p>\n<h3><a name=\"no-speed-of-light-continuous-preconfirmations-16\" class=\"anchor\" href=\"https://ethresear.ch#no-speed-of-light-continuous-preconfirmations-16\"></a>No Speed-of-light Continuous Preconfirmations</h3>\n<p>MR-MEV-Boost does not provide speed-of-light preconfirmations with hundreds of milliseconds latency, like <a href=\"https://docs.arbitrum.io/how-arbitrum-works/sequencer\" rel=\"noopener nofollow ugc\">Arbitrum’s first-come-first-serve sequencer</a>. Instead, it offers preconfirmations in batches with a few seconds of latency between them, similar to <a href=\"https://docs.optimism.io/connect/resources/glossary#time-slot\" rel=\"noopener nofollow ugc\">Optimism’s approach</a>.</p>\n<p><a href=\"https://solana.com/\" rel=\"noopener nofollow ugc\">Solana</a> and <a href=\"https://www.jito.wtf/\" rel=\"noopener nofollow ugc\">Jito</a> provide an interesting case study on continuous versus batched preconfirmations. In Solana’s “continuous block building,” the leader streams (i.e., preconfirms) processed transactions continuously. Combined with Solana’s fixed low fee, continuous block building led to network spamming and latency races, causing validators to <a href=\"https://www.jito.network/blog/solving-the-mev-problem-on-solana-a-guide-for-stakers/\" rel=\"noopener nofollow ugc\">waste 58% of their time processing failed arbitrages</a>. Jito addressed this by introducing a 200ms “speed bump” (batches) and a mev-geth style bundle auction for batches, achieving an 80% share with their Jito validator client. This example indicates that that continuous preconfirmations are likely unsustainable due to spam and that batching and some auction for each batch are required. For more details, watch this informative talk by Zano Sherwani, co-founder of Jito, <a href=\"https://www.youtube.com/watch?v=c-O_JZI2QAA\" rel=\"noopener nofollow ugc\">here</a>.</p>\n<h3><a name=\"relay-burden-17\" class=\"anchor\" href=\"https://ethresear.ch#relay-burden-17\"></a>Relay Burden</h3>\n<p>MR-MEV-Boost introduces additional burdens to the relays without incentives. Instead of managing a single round of MEV-Boost auctions, relayers must handle multiple rounds within a single slot, each within a limited timeframe. If the cost of operating a relayer increases too much, it may lead to further relayer centralization and <a href=\"https://collective.flashbots.net/t/builderelay/2688/1\" rel=\"noopener nofollow ugc\">builder-relay integration</a>, or alternatively, no relayer may opt to support MR-MEV-Boost. Relayer incentives are a <a href=\"https://www.gate.io/learn/articles/the-pursuit-of-relay-incentivization/1257\" rel=\"noopener nofollow ugc\">long-lasting problem</a> in L1, and MR-MEV-Boost likely worsen this situation.</p>\n<p>One way to mitigate the issue is to incorporate <a href=\"https://frontier.tech/optimistic-relays-and-where-to-find-them\" rel=\"noopener nofollow ugc\">optimistic relay</a> schemes to reduce the relayer’s operational costs. With this approach, relayers optimistically assume the honesty of the block-builder and skip the validation work for payloads sent from the builder. If the builder is later found to deviate from honest behavior, their collateral will be used to refund the proposer. Optimistic relaying would be especially helpful as it allows relayers to bypass the need to validate the based rollup transactions when verifying partial blocks.</p>\n<p>Another potential solution is for the proposers to share the preconfirmation tip revenue with the relay to compensate for the additional workload.</p>\n<h3><a name=\"blob-efficiency-18\" class=\"anchor\" href=\"https://ethresear.ch#blob-efficiency-18\"></a>Blob Efficiency</h3>\n<p>So far, we have blurred the line between L1 and L2 preconfirmations. This is somewhat intentional, as L2 transactions are included within L1 transactions. However, there are cases where the difference becomes important.</p>\n<p>Consider a scenario where the L2 transactions within a round cannot fill an entire blob. If we only support preconfirmations for L2 transactions by preconfirming the L1 transactions that contain them, we face a problem. Proposers would either have to preconfirm partially filled blob transactions at the end of the round or wait for another round to collect enough transactions to fill the blob.</p>\n<p>One solution is to allow proposers to commit to a batch of L2 transactions without linking them to a specific L1 transaction. This would let the builder of the final full block aggregate the L2 transactions into one or more L1 blobs at the end of the slot.</p>\n<h3><a name=\"issues-with-mev-boost-19\" class=\"anchor\" href=\"https://ethresear.ch#issues-with-mev-boost-19\"></a>Issues with MEV-Boost</h3>\n<p>MR-MEV-Boost inherits the existing L1 MEV-Boost pipeline, which also means that we inherit many of MEV-Boost’s downsides, such as <a href=\"https://arxiv.org/pdf/2305.19037\" rel=\"noopener nofollow ugc\">reliance on a handful of relays and builders</a>. However, based rollups aim to inherit the security of L1, not to exceed it. Therefore, being “as bad as” L1 is the best we can do as a based solution.</p>\n<h1><a name=\"future-direction-20\" class=\"anchor\" href=\"https://ethresear.ch#future-direction-20\"></a>Future Direction</h1>\n<p>MR-MEV-Boost can be generalized as <em>partial-block preconfirmations</em>, where the proposer incrementally builds the block by committing to and publishing partial blocks during their slot.</p>\n<p>One future direction would be to enshrine partial-block preconfirmations into the L1 protocol to achieve faster block times. This aligns with Vitalik’s <a href=\"https://vitalik.eth.limo/general/2024/06/30/epochslot.html\" rel=\"noopener nofollow ugc\">recent post</a> and offers several benefits over off-protocol designs like MR-MEV-Boost:</p>\n<ul>\n<li>Removes “non-opted-in” proposers, enabling L1 preconfirmations and L1-L2 composability for all slots.</li>\n<li>Fully utilizes Ethereum’s validator set, potentially introducing lightweight <a href=\"https://ethresear.ch/t/payload-timeliness-committee-ptc-an-epbs-design/16054\">PTC</a>-like attestations for timely partial payload releases.</li>\n<li>Opens doors to increase the block times without degrading UX, which may help enable <a href=\"https://ethereum.org/en/roadmap/single-slot-finality/\" rel=\"noopener nofollow ugc\">single-slot finality</a>.</li>\n</ul>\n<h1><a name=\"related-work-21\" class=\"anchor\" href=\"https://ethresear.ch#related-work-21\"></a>Related Work</h1>\n<p>In his <a href=\"https://dba.xyz/were-all-building-the-same-thing/\" rel=\"noopener nofollow ugc\">latest post</a>, Jon Charbonneau explains in great detail how based rollups/preconfirmations work and the centralization risk of based preconfirmations.</p>\n<p>Furthermore, partial-block preconfirmations are closely related to <a href=\"https://ethresear.ch/t/how-much-can-we-constrain-builders-without-bringing-back-heavy-burdens-to-proposers/13808\">inclusion list</a> research, as both can be viewed under the broader concept of “partial-block building,” where different parts of a block are constructed at different times by different entities. For example, the <a href=\"https://research.eigenlayer.xyz/t/mev-boost-liveness-first-relay-design/15\" rel=\"noopener nofollow ugc\">MEV-Boost++ proposal</a> from Kyodo (EigenLayer) resembles MR-MEV-Boost, as both enable early commitment to partial blocks by imposing additional slashing conditions on the proposer.</p>\n<h1><a name=\"conclusion-22\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-22\"></a>Conclusion</h1>\n<p>We introduce MR-MEV-Boost, a design that enables based preconfirmations by running multiple rounds of MEV-Boost auctions within a single slot. By inheriting the L1 PBS pipeline, MR-MEV-Boost mitigates many of the negative externalities of based preconfirmations while retaining the benefits of based rollups.</p>\n<p>At <a href=\"https://switchboard.nethermind.io/\" rel=\"noopener nofollow ugc\">Nethermind Switchboard</a>, we actively research and tackle the open challenges of based preconfirmations. We are also collaborating closely with Taiko to develop <a href=\"https://github.com/NethermindEth/Taiko-Preconf-AVS/blob/6b21d85d329986a2a9725048e56be3a45d463dcc/Docs/design-doc.md\" rel=\"noopener nofollow ugc\">a PoC for based preconfirmations</a> compatible with L2 PBS, including MR-MEV-Boost. Stay tuned for more updates!</p>\n            <p><small>5 posts - 3 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/based-preconfirmations-with-multi-round-mev-boost/20091\">Read full topic</a></p>","link":"https://ethresear.ch/t/based-preconfirmations-with-multi-round-mev-boost/20091","pubDate":"Thu, 18 Jul 2024 06:47:13 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20091"},"source":{"@url":"https://ethresear.ch/t/based-preconfirmations-with-multi-round-mev-boost/20091.rss","#text":"Based Preconfirmations with Multi-round MEV-Boost"},"filter":false},{"title":"A Note On Securely Finding Minimum Mean Cycle","dc:creator":"0xvon","category":"Privacy","description":"<p>This study is supported by an Ethereum Foundation R&amp;D grant and is a collaborative work with Enrico ( <a class=\"mention\" href=\"https://ethresear.ch/u/enricobottazzi\">@enricobottazzi</a> ), Masato ( <a class=\"mention\" href=\"https://ethresear.ch/u/0xvon\">@0xvon</a> ) and Nam ( <a href=\"https://github.com/namnc\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">namnc (Nam Ngo) · GitHub</a> ) from Ethereum Foundation.</p>\n<p><strong>Abstract</strong></p>\n<p>Executing graph optimization algorithms such as the Minimum Mean Cycle (MMC) while preserving privacy has significant potential for handling sensitive information between users and companies. For example, it enables multilateral netting to solve the Minimum Cost Flow (MCF) problem [4] without disclosing mutual debts, making it highly relevant for processes like netting among multinational corporations. Aly et. al. [2] proposed an algorithm using Multi-Party Computation (MPC) to execute the MMC problem. However, this approach is based on Karp’s algorithm [1], which was found by Chaturvedi et al. [3] to occasionally fail to detect cycles. In this study, we propose a revised protocol that corrects this issue and enhances its efficiency. We implemented our protocol using MP-SPDZ and confirmed that it correctly identifies the MMC, similar to traditional protocols. Our findings indicate that our proposed protocol operates correctly and more efficiently than Aly’s protocol, which reduces the time/round complexity from <span class=\"math\">O(|V|^5)</span> to <span class=\"math\">O(|V|^3)</span> and the space complexity from <span class=\"math\">O(|V|^4)</span> to <span class=\"math\">O(|V|^2)</span>. Furthermore, we discuss potential improvements for even more efficient algorithms.</p>\n<h1><a name=\"h-1-introduction-1\" class=\"anchor\" href=\"https://ethresear.ch#h-1-introduction-1\"></a>1. Introduction</h1>\n<h3><a name=\"h-1-1-importance-of-graph-theory-optimization-2\" class=\"anchor\" href=\"https://ethresear.ch#h-1-1-importance-of-graph-theory-optimization-2\"></a>1-1. Importance of Graph Theory Optimization</h3>\n<p>Graph theory optimization problems play a crucial role in various domains, from computer science and engineering to economics and finance. These problems involve finding the most efficient way to navigate, connect, or utilize network structures, and solutions to these problems have far-reaching implications for improving systems and processes.</p>\n<p>One of the representative problems in graph theory optimization is the Minimum Cost Flow (MCF) problem, which aims to find the least costly way to send a certain amount of flow through a network. The MCF problem is foundational in numerous applications, providing critical insights and optimizations.</p>\n<p>In the financial sector, particularly in Netting, the Minimum Cost Flow (MCF) problem is often addressed to optimize the settlement of transactions and reduce systemic risk [4]. Netting involves aggregating multiple financial obligations to streamline transactions, minimize risk, and enhance efficiency. However, one of the critical challenges in this context is maintaining the privacy and confidentiality of sensitive financial data. Traditional methods for solving the MCF problem may require exposing transaction details, leading to significant privacy concerns and potential security risks.</p>\n<p>Beyond netting, the MMC problem and its solutions have a wide array of applications across various fields:</p>\n<ul>\n<li><strong>Network Security:</strong> Enhancing security measures by optimizing the flow of information and resources while minimizing potential points of vulnerability.</li>\n<li><strong>Supply Chain Management</strong>: Streamlining logistics and distribution networks to reduce costs and improve delivery times.</li>\n<li><strong>Urban Planning</strong>: Developing efficient transportation systems by optimizing traffic flow and reducing congestion.</li>\n</ul>\n<p>The Minimum Mean Cycle (MMC) problem is a crucial component in solving the MCF problem. The MMC problem focuses on identifying cycles in directed graphs with the minimum average weight, which is essential for detecting inefficient paths and optimizing network performance. By incorporating the MMC problem into the solution of the MCF problem, we can achieve more accurate and efficient outcomes.</p>\n<p>To address the privacy concerns inherent in solving the MCF problem, we explore the use of Multi-Party Computation (MPC) to securely solve the MMC problem. MPC is a cryptographic approach that allows multiple parties to collaboratively compute a function over their inputs while keeping those inputs private. By applying MPC techniques, we can solve the MMC problem without exposing sensitive data, thus preserving the privacy of financial transactions and other confidential information.</p>\n<h3><a name=\"h-1-2-previous-work-3\" class=\"anchor\" href=\"https://ethresear.ch#h-1-2-previous-work-3\"></a>1-2. Previous Work</h3>\n<p>Aly et al. [2] proposed a method to solve Karp’s MMC algorithm [1] using Multi-Party Computation. However, this approach has some problems and suffers from significant computational complexity and time consumption. Additionally, the Karp’s algorithm [1] was found by Chaturvedi et al . [3] to occasionally fail to detect cycles.</p>\n<h3><a name=\"h-1-3-our-contribution-4\" class=\"anchor\" href=\"https://ethresear.ch#h-1-3-our-contribution-4\"></a>1-3. Our Contribution</h3>\n<p>in this study, we propose a novel approach that not only addresses these shortcomings but also offers a more efficient and practical solution for securely solving the MMC problem using MPC. Our proposed protocol aims to reduce computational and time complexities, enhance cycle detection accuracy, and ensure robust privacy protection. Our experimental results demonstrate a significant improvement in efficiency, with a reduction in time complexity from <span class=\"math\">O(|V|^5)</span> to <span class=\"math\">O(|V|^3)</span> and space complexity from <span class=\"math\">O(|V|^4)</span> to <span class=\"math\">O(|V|^2)</span>.</p>\n<h1><a name=\"h-2-minimum-mean-cycle-problem-5\" class=\"anchor\" href=\"https://ethresear.ch#h-2-minimum-mean-cycle-problem-5\"></a>2. Minimum Mean Cycle Problem</h1>\n<p>Minimum Mean Cycle Problem and its solution is defined by Karp in 1978 [1].</p>\n<h3><a name=\"h-2-1-problem-definition-6\" class=\"anchor\" href=\"https://ethresear.ch#h-2-1-problem-definition-6\"></a>2-1. Problem Definition</h3>\n<p>Given a connected graph <span class=\"math\">G(V,E)</span> where <span class=\"math\">V</span> is a set of nodes and <span class=\"math\">E</span> is a set of edges, with defining these parameters:</p>\n<ul>\n<li><span class=\"math\">c_{i,j} \\in C</span> denotes the <strong>cost</strong> on the edge <span class=\"math\">(i,j)</span>.</li>\n<li><span class=\"math\">d^k(i)</span> denotes the minimum cost from node <span class=\"math\">s</span> to <span class=\"math\">i</span> that contains exactly <span class=\"math\">k</span> edges.</li>\n</ul>\n<p>First of all, for any cycle <span class=\"math\">X</span>, the mean cycle is defined by:</p>\n<div class=\"math\">\n\\begin{equation}\n\\mu (X) = \\frac{\\sum_{uv \\in X} c_{uv}}{|X|}\n\\end{equation}\n</div>\n<p>Thus, the minimum mean cycle is:</p>\n<div class=\"math\">\n\\begin{equation}\n\\mu ^* = \\min_{cycle X} \\mu (X)\n\\end{equation}\n</div>\n<p>Minimum Mean Cycle (MMC) Problem is the problem to find this <span class=\"math\">\\mu ^*</span>.</p>\n<h3><a name=\"h-2-2-efficient-mmc-7\" class=\"anchor\" href=\"https://ethresear.ch#h-2-2-efficient-mmc-7\"></a>2-2. Efficient MMC</h3>\n<p>The MMC problem is known as NP-hard, and Karp introduces an efficient algorithm for solving it. The solution is followed by 2 steps.</p>\n<p>The first step, we call it as <strong>Walk</strong>, is to calculates <span class=\"math\">d^k(i)</span>, which denotes minimum cost from node <span class=\"math\">s</span> to <span class=\"math\">i</span> that contains exactly <span class=\"math\">k</span> edges. Walk can be computed via the recurrence:</p>\n<div class=\"math\">\n\\begin{equation}\nd^k(j) = \\min_{(i,j) \\in E} d^{k-1}(i)+c_{ij}\n\\end{equation}\n</div>\n<p>Initially, <span class=\"math\">d^0(j)=\\infty</span>, except for the source node <span class=\"math\">d^0(s)=0</span></p>\n<p>The second step is to calculate the minimum mean cycle by:</p>\n<div class=\"math\">\n\\begin{equation}\n\\mu^* = \\min_{j \\in V} \\max_{0 \\leq k \\leq |V|-1} \\left[ \\frac{d^V(j) - d^k(j)}{|V| - k} \\right]\n\\end{equation}\n</div>\n<p>See Karp’s paper [1] for a proof of equation (4). Overall algorithmic complexity is <span class=\"math\">O(|V| \\cdot |E|)</span>, and the first step has a significant impact on the entire algorithm.</p>\n<h1><a name=\"h-3-alys-secure-mmc-protocol-8\" class=\"anchor\" href=\"https://ethresear.ch#h-3-alys-secure-mmc-protocol-8\"></a>3. Aly’s Secure MMC Protocol</h1>\n<p><strong>Notation</strong></p>\n<ul>\n<li><span class=\"math\">[a]</span> denotes secret shared or encrypted values of <span class=\"math\">a</span></li>\n<li><span class=\"math\">[z] = _{[c]} [x]:[y]</span> denotes the assignment that if <span class=\"math\">[c]</span> is one, <span class=\"math\">[x]</span> is assigned to <span class=\"math\">[z]</span> or <span class=\"math\">[y]</span> otherwise.</li>\n</ul>\n<h3><a name=\"h-3-1-protocol-9\" class=\"anchor\" href=\"https://ethresear.ch#h-3-1-protocol-9\"></a>3-1. Protocol</h3>\n<p>Aly et. al. [2] provide algorithmic solutions to MMC problem in a secure multi-party and distributed setting. This protocol is constructed by 2 sub-protocols:</p>\n<ol>\n<li><span class=\"math\">walk([C],[b]) \\rightarrow [A],[walks]</span></li>\n<li><span class=\"math\">mmc([A],[walks]) \\rightarrow [\\text{min-cost}], [\\text{min-cycle}]</span></li>\n</ol>\n<p>This corresponds to Steps 1 and 2 of Karp’s Algorithm in section 2.</p>\n<p>In first sub-protocol, we have two inputs. The cost matrix <span class=\"math\">[C]_{ij}</span> denotes the cost of edge <span class=\"math\">(i,j)</span>. It represents <span class=\"math\">[\\infty]</span> for non-existing edges. The viable matrix <span class=\"math\">[b]_{ij}</span> denotes 1 if edge <span class=\"math\">(i,j)</span> doesn’t exist, and 0 otherwise.</p>\n<p>From these inputs, we outputs two values. One is the 2-dimensional walk cost matrix <span class=\"math\">[A]</span> which <span class=\"math\">[A]_{jk}</span> records <span class=\"math\">d^k(j)</span>. The other is 4-dimensional walk path matrix <span class=\"math\">[walks]</span> which <span class=\"math\">[walks]_{ijkl}</span> records the number of times the edge <span class=\"math\">(i,j)</span> is traversed by the shortest walk of length <span class=\"math\">k</span> from <span class=\"math\">s</span> to <span class=\"math\">l</span>. The algorithm is detailed as Protocol 3-1.</p>\n<hr>\n<p><strong>Protocol 3-1. Aly’s Walk Protocol</strong></p>\n<hr>\n<p><strong>Input</strong>: A matrix of shared costs <span class=\"math\">[C]_{ij}</span> for <span class=\"math\">i,j \\in \\{1,2,...,|V|\\}</span>, a binary matrix on viable adges <span class=\"math\">[b]_{ij}</span> for <span class=\"math\">i,j \\in \\{1,2,...,|V|\\}</span>.</p>\n<p><strong>Output</strong>: A matrix of walk costs <span class=\"math\">[A]_{ik}</span> for <span class=\"math\">i \\in \\{1,2,...,|V|\\}</span> and <span class=\"math\">k \\in \\{0,1,...,|V|\\}</span>, a wak matrix <span class=\"math\">[walks]_{ijkl}</span> for <span class=\"math\">i,j,k,l \\in \\{1,2,...,|V|\\}</span> encoding these walks.</p>\n<ol>\n<li><span class=\"math\">[A] \\leftarrow [\\infty], [A]_{00} \\leftarrow [0], [C] \\leftarrow [C] + [\\infty](1-[b])</span></li>\n<li><strong>for</strong> <span class=\"math\">k \\leftarrow 1</span> to <span class=\"math\">|V|+1</span> do\n<ol>\n<li><strong>for</strong> <span class=\"math\">j \\leftarrow 1</span> to <span class=\"math\">|V|</span> do\n<ol>\n<li><strong>for</strong> <span class=\"math\">i \\leftarrow 1</span> to <span class=\"math\">|V|</span> do\n<ol>\n<li><span class=\"math\">[c] \\leftarrow [A]_{ik-1} + [C]_{ij} &lt; [A]_{jk}</span></li>\n<li><span class=\"math\">[A]_{jk} \\leftarrow _{[c]} [A]_{ik-1} + [C]_{ij} : [A]_{jk}</span></li>\n<li><span class=\"math\">[walks]_{..kj} \\leftarrow _{[c]} [walks]_{..k-1i} : [walks]_{..kj}</span></li>\n<li><span class=\"math\">[walks]_{ijkj} \\leftarrow _{[c]} [walks]_{ijkj} + 1 : [walks]_{ijkj}</span></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n</ol>\n<hr>\n<p>In second sub-protocol, we have two outputs. <span class=\"math\">[\\text{min-cost}]</span> is the minimum mean cost. <span class=\"math\">[\\text{min-cycle}]</span> denotes the 2-dimensional cycle matrix which <span class=\"math\">[\\text{min-cycle}]_{jk}</span> is 1 if edge <span class=\"math\">(j,k)</span> is included in the cycle achieving <span class=\"math\">\\mu ^*</span> and 0 otherwise. Here, <span class=\"math\">\\text{min-cycle}</span> is s-j path with <span class=\"math\">|V|</span> edges whose cost is <span class=\"math\">d^{|V|}(j)</span>, minus the s-j path with k edges whose cost is <span class=\"math\">d^{k}(j)</span>. The details are provided as protocol 3-2. We note that we use the theorem that <span class=\"math\">\\frac{a}{b}&gt;\\frac{c}{d} \\iff ad&gt;bc</span> to make a comparison of <span class=\"math\">\\frac{d^V(j) - d^k(j)}{|V| - k}</span> without calculating the inverse.</p>\n<hr>\n<p><strong>Protocol 3-2. Aly’s MMC Protocol</strong></p>\n<hr>\n<p><strong>Input:</strong> A matrix of walk costs <span class=\"math\">[A]_{ik}</span> for <span class=\"math\">i \\in \\{1,2,...,|V|\\}</span> and <span class=\"math\">k \\in \\{0,2,...,|V|\\}</span>, a walk matrix <span class=\"math\">[walks]_{ijkl}</span> for <span class=\"math\">i,j,k,l \\in \\{1,2,...,|V|\\}</span> encoding these walks.</p>\n<p><strong>Output</strong>: The cost of the minimum mean cycle <span class=\"math\">[\\text{min-cost}]</span>, a matrix with the minimum mean cycle <span class=\"math\">[\\text{min-cycle}]_{ij}</span> for <span class=\"math\">i,j \\in \\{1,2,...,|V|\\}</span></p>\n<ol>\n<li>\n<p><strong>for</strong> <span class=\"math\">j \\leftarrow 1</span> to <span class=\"math\">|V|</span> do</p>\n<ol>\n<li><span class=\"math\">[\\text{max-cycle}],[\\text{max-cost}] \\leftarrow \\phi</span></li>\n<li><strong>for</strong> <span class=\"math\">k \\leftarrow |V|</span> to <span class=\"math\">1</span> do\n<ol>\n<li><span class=\"math\">[\\text{a-num}] \\leftarrow [A]_{j(|V|+1)} - [A]_{jk}</span></li>\n<li><span class=\"math\">[\\text{a-den}] \\leftarrow |V|-k</span></li>\n<li><span class=\"math\">[c] \\leftarrow [\\text{k-num}] \\cdot [\\text{a-den}] &lt; [\\text{a-num}] \\cdot [\\text{k-den}]</span></li>\n<li><span class=\"math\">[\\text{k-num}] \\leftarrow _{[c]} [\\text{a-num}]  : [\\text{k-num}]</span></li>\n<li><span class=\"math\">[\\text{k-den}] \\leftarrow _{[c]} [\\text{a-den}]  : [\\text{k-den}]</span></li>\n<li><span class=\"math\">[\\text{max-cycle}] \\leftarrow _{[c]} [walks]_{..|V|j} - [walks]_{..kj} : [\\text{max-cycle}]</span></li>\n<li><span class=\"math\">[\\text{max-cost}] \\leftarrow _{[c]} [A]_{jk} : [\\text{max-cost}]</span></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n<li><span class=\"math\">[c] \\leftarrow [\\text{j-num}] \\cdot [\\text{k-den}] &lt; [\\text{k-num}] \\cdot [\\text{j-den}]</span></li>\n<li><span class=\"math\">[\\text{j-num}] \\leftarrow _{[c]} [\\text{k-num}]  : [\\text{j-num}]</span></li>\n<li><span class=\"math\">[\\text{j-den}] \\leftarrow _{[c]} [\\text{k-den}]  : [\\text{j-den}]</span></li>\n<li><span class=\"math\">[\\text{min-cycle}] \\leftarrow _{[c]} [\\text{max-cycle}] : [\\text{min-cycle}]</span></li>\n<li><span class=\"math\">[\\text{min-cost}] \\leftarrow _{[c]} [\\text{max-cost}] : [\\text{min-cost}]</span></li>\n</ol>\n</li>\n<li>\n<p><strong>end</strong></p>\n</li>\n</ol>\n<hr>\n<p><strong>Complexity</strong></p>\n<p>This method requires <span class=\"math\">O(|V|^5)</span> time/round complexity, from the conditional assignments to <span class=\"math\">|V| \\times |V|</span> elements in <span class=\"math\">[walks]</span> matrix for <span class=\"math\">|V|^3</span> loops (line i-3~4 of Protocol 1). And this method requires <span class=\"math\">O(|V|^4)</span> space complexity, due to 4-dimensional <span class=\"math\">[walks]</span> matrix.</p>\n<h3><a name=\"h-3-2-problem-in-alys-protocol-10\" class=\"anchor\" href=\"https://ethresear.ch#h-3-2-problem-in-alys-protocol-10\"></a>3-2. Problem in Aly’s Protocol</h3>\n<p>Aly’s protocol implements Karp algorithm [1] in the secure manner. In karp’s alrogithm, we determine <span class=\"math\">\\text{min-cycle}</span> like s-j path with <span class=\"math\">|V|</span> edges whose cost is <span class=\"math\">d^{|V|}(j)</span>, minus the s-j path with k edges whose cost is <span class=\"math\">d^{k}(j)</span>. However, Chaturvedi and McConnell [3] provides an counterexample which the cycle couldn’t detected with this method. Furthermore, they prove the following lemma.</p>\n<p><strong>Lemma 1</strong><br>\nLet <span class=\"math\">j</span> be a vertex such that there exists <span class=\"math\">k</span>, where <span class=\"math\">j</span> and <span class=\"math\">k</span> are a minimizing pair. Every cycle on the length <span class=\"math\">|V|</span> edge progression from <span class=\"math\">s</span> to <span class=\"math\">j</span> of cost <span class=\"math\">d^{|V|}(j)</span> is a cycle of minimum mean cost. (See the proof on their paper [3].)</p>\n<p>This lemma means that the cycle can be detected by traversing the edge progression from the last edge and marking the vertices visited by the walk until a previous marked vertex is encountered, from s-j path with <span class=\"math\">|V|</span> edges whose cost is <span class=\"math\">d^{|V|}(j)</span>.</p>\n<h1><a name=\"h-4-cm-based-secure-mmc-protocol-11\" class=\"anchor\" href=\"https://ethresear.ch#h-4-cm-based-secure-mmc-protocol-11\"></a>4. CM-based Secure MMC Protocol</h1>\n<p><strong>Notation</strong></p>\n<ul>\n<li><span class=\"math\">[a]</span> denotes secret shared or encrypted values of <span class=\"math\">a</span></li>\n<li><span class=\"math\">[z] = _{[c]} [x]:[y]</span> denotes the assignment that if <span class=\"math\">[c]</span> is one, <span class=\"math\">[x]</span> is assigned to <span class=\"math\">[z]</span> or <span class=\"math\">[y]</span> otherwise.</li>\n</ul>\n<h3><a name=\"h-4-1-protocol-12\" class=\"anchor\" href=\"https://ethresear.ch#h-4-1-protocol-12\"></a>4-1. Protocol</h3>\n<p>We propose a protocol that converts the minimum mean cycle detection from Aly’s protocol to one with Lemma1. In addition, a few changes have been made to the data structure. We name it “<strong>CM-based Securely MMC Protocol</strong>”, taking the initials of Chaturvedi and McConnell, who proposed Lemma 1.</p>\n<p>CM-based protocol is constructed by 3 sub-protocols:</p>\n<ol>\n<li><span class=\"math\">walk([C],[b]) \\rightarrow [A],[ep]</span></li>\n<li><span class=\"math\">mmc</span>\n<ol>\n<li><span class=\"math\">mmcn([A],[ep]) \\rightarrow [\\text{min-cost}],[\\text{minimizing-node}]</span></li>\n<li><span class=\"math\">extract\\text{-}cycle([\\text{minimizing-node}],[ep]) \\rightarrow [\\text{min-cycle}]</span></li>\n</ol>\n</li>\n</ol>\n<p>Here, Aly’s second sub-protocol is divided into CM-based second and third sub-protocols.</p>\n<p>In fist sub-protocol, For the most part, it is the same as Protocol 3-1, with one difference: Instead of <span class=\"math\">[walks]</span>, we record the edge progression in a 2-dimensional matrix called <span class=\"math\">[ep]</span>, which <span class=\"math\">[ep]_{jk}</span> means the edge that passes before one of <span class=\"math\">j</span> in the shortest s-j path with k edges. This change eliminates the need for extra <span class=\"math\">|V|^2</span> loops to update <span class=\"math\">[walks]_{..kj}</span>. The algorithm is detailed as Protocol 4-1.</p>\n<hr>\n<p><strong>Protocol 4-1. CM-based Walk Protocol</strong></p>\n<hr>\n<p><strong>Input</strong>: A matrix of shared costs <span class=\"math\">[C]_{ij}</span> for <span class=\"math\">i,j \\in \\{1,2,...,|V|\\}</span>, a binary matrix on viable adges <span class=\"math\">[b]_{ij}</span> for <span class=\"math\">i,j \\in \\{1,2,...,|V|\\}</span>.</p>\n<p><strong>Output</strong>: A matrix of walk costs <span class=\"math\">[A]_{ik}</span> for <span class=\"math\">i \\in \\{1,2,...,|V|\\}</span> and <span class=\"math\">k \\in \\{0,1,...,|V|\\}</span>, a matrix of walk edge progressions <span class=\"math\">[ep]_{ij}</span> for <span class=\"math\">i,j \\in \\{1,2,...,|V|\\}</span>.</p>\n<ol>\n<li><span class=\"math\">[A] \\leftarrow [\\infty], [A]_{00} \\leftarrow [0], [C] \\leftarrow [C] + [\\infty](1-[b])</span></li>\n<li><strong>for</strong> <span class=\"math\">k \\leftarrow 1</span> to <span class=\"math\">|V|+1</span> do\n<ol>\n<li><strong>for</strong> <span class=\"math\">j \\leftarrow 1</span> to <span class=\"math\">|V|</span> do\n<ol>\n<li><strong>for</strong> <span class=\"math\">i \\leftarrow 1</span> to <span class=\"math\">|V|</span> do\n<ol>\n<li><span class=\"math\">[c] \\leftarrow [A]_{ik-1} + [C]_{ij} &lt; [A]_{jk}</span></li>\n<li><span class=\"math\">[A]_{jk} \\leftarrow _{[c]} [A]_{ik-1} + [C]_{ij} : [A]_{jk}</span></li>\n<li><span class=\"math\">[ep]_{jk} \\leftarrow _{[c]} i : [ep]_{jk}</span></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n</ol>\n<hr>\n<p>In (a) of the 2nd sub-protocol, instead of computing <span class=\"math\">[\\text{min-cycle}]</span>, we detect the node <span class=\"math\">j</span> that achieves mmc. We call it minimizing node.</p>\n<p>The algorithm is detailed as Protocol 4-2-a.</p>\n<hr>\n<p><strong>Protocol 4-2-a. CM-based MMCN Protocol</strong></p>\n<hr>\n<p><strong>Input:</strong> A matrix of walk costs <span class=\"math\">[A]_{ik}</span> for <span class=\"math\">i \\in \\{1,2,...,|V|\\}</span> and <span class=\"math\">k \\in \\{0,2,...,|V|\\}</span>, a matrix of walk progressions <span class=\"math\">[ep]_{ij}</span> for <span class=\"math\">i,j \\in \\{1,2,...,|V|\\}</span>.</p>\n<p><strong>Output</strong>: The cost of the minimum mean cycle <span class=\"math\">[\\text{min-cost}]</span>, the node achieving the minimum mean cycle <span class=\"math\">[\\text{minimizing-node}]</span>.</p>\n<ol>\n<li>\n<p><strong>for</strong> <span class=\"math\">j \\leftarrow 1</span> to <span class=\"math\">|V|</span> do</p>\n<ol>\n<li>\n<p><span class=\"math\">[\\text{max-cost}] \\leftarrow \\phi</span></p>\n</li>\n<li>\n<p><strong>for</strong> <span class=\"math\">k \\leftarrow |V|</span> to <span class=\"math\">1</span> do</p>\n<ol>\n<li><span class=\"math\">[\\text{a-num}] \\leftarrow [A]_{j(|V|+1)} - [A]_{jk}</span></li>\n<li><span class=\"math\">[\\text{a-den}] \\leftarrow |V|-k</span></li>\n<li><span class=\"math\">[c] \\leftarrow [\\text{k-num}] \\cdot [\\text{a-den}] &lt; [\\text{a-num}] \\cdot [\\text{k-den}]</span></li>\n<li><span class=\"math\">[\\text{k-num}] \\leftarrow _{[c]} [\\text{a-num}]  : [\\text{k-num}]</span></li>\n<li><span class=\"math\">[\\text{k-den}] \\leftarrow _{[c]} [\\text{a-den}]  : [\\text{k-den}]</span></li>\n<li><span class=\"math\">[\\text{max-cost}] \\leftarrow _{[c]} [A]_{jk} : [\\text{max-cost}]</span></li>\n</ol>\n</li>\n<li>\n<p><strong>end</strong></p>\n</li>\n<li>\n<p><span class=\"math\">[c] \\leftarrow [\\text{j-num}] \\cdot [\\text{k-den}] &lt; [\\text{k-num}] \\cdot [\\text{j-den}]</span></p>\n</li>\n<li>\n<p><span class=\"math\">[\\text{j-num}] \\leftarrow _{[c]} [\\text{k-num}]  : [\\text{j-num}]</span></p>\n</li>\n<li>\n<p><span class=\"math\">[\\text{j-den}] \\leftarrow _{[c]} [\\text{k-den}]  : [\\text{j-den}]</span></p>\n</li>\n<li>\n<p><span class=\"math\">[\\text{minimizing-node}] \\leftarrow _{[c]} j : [\\text{minimizing-node}]</span></p>\n</li>\n<li>\n<p><span class=\"math\">[\\text{min-cost}] \\leftarrow _{[c]} [\\text{max-cost}] : [\\text{min-cost}]</span></p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>end</strong></p>\n</li>\n</ol>\n<hr>\n<p>In (b) of the 2nd sub-protocol, from <span class=\"math\">[\\text{minimizing-node}]</span>, we construct a back pointer which indicates s-j path with <span class=\"math\">|V|</span> edges whose cost is <span class=\"math\">d^{|V|}(j)</span> and extract a cycle from the back pointer. Compared to Protocol 3-2, instead of expanding <span class=\"math\">[\\text{min-cycle}]</span> directly from <span class=\"math\">[walks]</span>, the additional protocol is required. We follow Lemma 1 and consider any cycle included in the back pointer as a minimum mean cycle. The algorithm is detailed as Protocol 4-2-b.</p>\n<hr>\n<p><strong>Protocol 4-2-b. CM-based Extract-Cycle Protocol</strong></p>\n<hr>\n<p><strong>Input:</strong> A minmizing node <span class=\"math\">[\\text{minimizing-node}]</span>, a matrix of walk progressions <span class=\"math\">[ep]_{ij}</span> for <span class=\"math\">i,j \\in \\{1,2,...,|V|\\}</span>.</p>\n<p><strong>Output</strong>: A matrix with the minimum mean cycle <span class=\"math\">[\\text{min-cycle}]_{ij}</span> for <span class=\"math\">i,j \\in \\{1,2,...,|V|\\}</span></p>\n<ol>\n<li><span class=\"math\">[\\text{backpointers}]_{0} \\leftarrow [\\text{minimizing-node}]</span>, <span class=\"math\">[\\text{next-index}] \\leftarrow [\\text{minimizing-node}]</span></li>\n<li><strong>for</strong> <span class=\"math\">k \\leftarrow |V|</span> to <span class=\"math\">1</span> do\n<ol>\n<li><span class=\"math\">[\\text{val}] \\leftarrow [0]</span></li>\n<li><strong>for</strong> <span class=\"math\">j \\leftarrow 0</span> to <span class=\"math\">|V|-1</span> do\n<ol>\n<li><span class=\"math\">[match] = j == [\\text{next-index}]</span></li>\n<li><span class=\"math\">[\\text{val}] = _{[\\text{match}]} [ep]_{jk}:[\\text{val}]</span></li>\n<li><span class=\"math\">[\\text{match-index-matrix}]_{jk} = [match]</span></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n<li><span class=\"math\">[\\text{next-index}] = [\\text{val}]</span></li>\n<li><span class=\"math\">[\\text{backpointers}].append([\\text{val}])</span></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n<li><strong>for</strong> <span class=\"math\">i \\leftarrow 0</span> to <span class=\"math\">|V|-1</span> do\n<ol>\n<li><span class=\"math\">[\\text{counter}] \\leftarrow [0]</span></li>\n<li><strong>for</strong> <span class=\"math\">k \\leftarrow 0</span> to <span class=\"math\">|V|</span> do\n<ol>\n<li><span class=\"math\">[\\text{counter}] = [\\text{counter}] + [\\text{match-index-matrix}]_{ik}</span></li>\n</ol>\n</li>\n<li><span class=\"math\">[c] = [\\text{counter}] &gt;= 2</span></li>\n<li><span class=\"math\">[\\text{cycle-node}] = _{[c]} i : [\\text{cycle-node}]</span></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n<li><span class=\"math\">[\\text{min-cycle}] \\leftarrow [0],[\\text{counter}] \\leftarrow [0]</span></li>\n<li><strong>for</strong> <span class=\"math\">k \\leftarrow |V|</span> to <span class=\"math\">1</span> do\n<ol>\n<li><span class=\"math\">[\\text{edge-from}] \\leftarrow [\\text{backpointers}]_k</span></li>\n<li><span class=\"math\">[c] = [\\text{edge-from}] [\\text{cycle-node}]</span></li>\n<li><span class=\"math\">[\\text{counter}] = [\\text{counter}] + [c]</span></li>\n<li><span class=\"math\">[c_0] = [\\text{counter}] + 1</span></li>\n<li><strong>for</strong> <span class=\"math\">j \\leftarrow 0</span> to <span class=\"math\">|V|-1</span> do\n<ol>\n<li><span class=\"math\">[c_1] = [\\text{match-index-matrix}]_{jn-k}</span></li>\n<li><span class=\"math\">[c_2] = [c_0]*[c_1]</span></li>\n<li><strong>for</strong> <span class=\"math\">i \\leftarrow 0</span> to <span class=\"math\">|V|-1</span> do\n<ol>\n<li><span class=\"math\">[c_3] = [\\text{match-index-matrix}]_{jn-k+1}</span></li>\n<li><span class=\"math\">[\\text{min-cycle}]_{ji} = [\\text{min-cycle}]_{ji} + ([c_2] * [c_3])</span></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n</ol>\n</li>\n<li><strong>end</strong></li>\n</ol>\n<hr>\n<p><strong>Complexity</strong><br>\nThis ****method requires <span class=\"math\">O(|V|^3)</span> multiplications or communication rounds, from the conditional assignments of <span class=\"math\">[A],[ep],[\\text{min-cycle}]</span> for <span class=\"math\">|V|^3</span> loops (line i-2~3 of Protocol 4-1 and like iii-3 of Protocol 4-2-b). And this method requires <span class=\"math\">O(|V|^2)</span> space complexity, largely due to 2-dimensional matrixes. A table comparing the Complexity of each protocol is shown in Table 4-1 below.</p>\n<p><strong>Table 4-1. Complexity Analysis of Secure MMC Protocols</strong></p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th>multiplications/communication rounds complexity</th>\n<th>space complexity</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Aly’s</td>\n<td><span class=\"math\">O(|V|^5)</span></td>\n<td><span class=\"math\">O(|V|^4)</span></td>\n</tr>\n<tr>\n<td>CM-based</td>\n<td><span class=\"math\">O(|V|^3)</span></td>\n<td><span class=\"math\">O(|V|^2)</span></td>\n</tr>\n</tbody>\n</table>\n</div><h3><a name=\"h-4-2-implementation-13\" class=\"anchor\" href=\"https://ethresear.ch#h-4-2-implementation-13\"></a>4-2. Implementation</h3>\n<p>We have implemented CM-based Securely MMC protocol in naive secret sharing scheme using Python MP-SPDZ. And we confirmed that the minimum mean cycle was found reliably in a number of random edges, including the counterexamples shown by Chaturvedi et al [3].</p>\n<h1><a name=\"h-5-conclusion-14\" class=\"anchor\" href=\"https://ethresear.ch#h-5-conclusion-14\"></a>5. Conclusion</h1>\n<p>In this study, we have proposed a more efficient protocol for solving the Minimum Mean Cycle (MMC) problem using Multi-Party Computation (MPC). Our CM-based approach not only addresses but also significantly improves upon the issues identified in Aly’s protocol. Specifically, our protocol reduces the time/round complexity from <span class=\"math\">O(|V|^5)</span> to <span class=\"math\">O(|V|^3)</span> and the space complexity from <span class=\"math\">O(|V|^4)</span> to <span class=\"math\">O(|V|^2)</span> compared to Aly’s protocol.</p>\n<p>Despite these advancements, the complexity remains super-quadratic in terms of the number of nodes, which can pose practical challenges for very large graphs. To mitigate this limitation, we propose the following strategies:</p>\n<ul>\n<li>By exposing the graph’s topography, we can optimize the edge search to include only the minimum necessary edges, thereby reducing the time/round complexity to <span class=\"math\">O(|V|^2 \\cdot |E|)</span>. This approach, however, requires a trade-off with some degree of privacy.</li>\n<li>Implementing simpler algorithms that provide approximate or sub-optimal solutions, such as Greedy Algorithms and Distributed Algorithms, can further enhance practicality. These algorithms can significantly reduce computational overhead while delivering sufficiently accurate results for many applications.</li>\n</ul>\n<p>In summary, our protocol offers a substantial improvement over existing methods, paving the way for more efficient and practical solutions to the MMC problem in secure computation settings. Future work will focus on refining these strategies to further balance the trade-offs between efficiency, accuracy, and privacy.</p>\n<h1><a name=\"reference-15\" class=\"anchor\" href=\"https://ethresear.ch#reference-15\"></a>Reference</h1>\n<ol>\n<li>Richard M. Karp, “A characterization of the minimum cycle mean in a digraph”, Discrete Mathematics, Volume 23, Issue 3, 1978, Pages 309-311, ISSN 0012-365X, <a href=\"https://doi.org/10.1016/0012-365X(78)90011-0\" rel=\"noopener nofollow ugc\">https://doi.org/10.1016/0012-365X(78)90011-0</a>.</li>\n<li>Aly, A., Van Vyve, M. (2015). Securely Solving Classical Network Flow Problems. In: Lee, J., Kim, J. (eds) Information Security and Cryptology - ICISC 2014. ICISC 2014. Lecture Notes in Computer Science(), vol 8949. Springer, Cham. <a href=\"https://doi.org/10.1007/978-3-319-15943-0_13\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Securely Solving Classical Network Flow Problems | SpringerLink</a></li>\n<li>Mmanu Chaturvedi, Ross M. McConnell, “A note on finding minimum mean cycle”, Information Processing Letters, Volume 127, 2017, Pages 21-22, ISSN 0020-0190, <a href=\"https://doi.org/10.1016/j.ipl.2017.06.007\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Redirecting</a>.</li>\n<li>Fleischman, T.; Dini, P. “Mathematical Foundations for Balancing the Payment System in the Trade Credit Market”, J. Risk Financial Manag. 2021, 14, 452. <a href=\"https://doi.org/10.3390/jrfm14090452\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">JRFM | Free Full-Text | Mathematical Foundations for Balancing the Payment System in the Trade Credit Market</a></li>\n</ol>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/a-note-on-securely-finding-minimum-mean-cycle/20073\">Read full topic</a></p>","link":"https://ethresear.ch/t/a-note-on-securely-finding-minimum-mean-cycle/20073","pubDate":"Mon, 15 Jul 2024 07:09:02 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20073"},"source":{"@url":"https://ethresear.ch/t/a-note-on-securely-finding-minimum-mean-cycle/20073.rss","#text":"A Note On Securely Finding Minimum Mean Cycle"},"filter":false},{"title":"Sealed execution auction","dc:creator":"aelowsson","category":"Block proposer","description":"<h1><a name=\"sealed-execution-auction-1\" class=\"anchor\" href=\"https://ethresear.ch#sealed-execution-auction-1\"></a>Sealed execution auction</h1>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/e/3e0cf08f2021a1cbbe0156d52c8482dba0a00ba6.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/3e0cf08f2021a1cbbe0156d52c8482dba0a00ba6\" title=\"Sealed execution auction\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/e/3e0cf08f2021a1cbbe0156d52c8482dba0a00ba6_2_690x394.jpeg\" alt=\"Sealed execution auction\" data-base62-sha1=\"8QVkeltn8Rz45YyyzX6NHgYyPAO\" width=\"690\" height=\"394\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/e/3e0cf08f2021a1cbbe0156d52c8482dba0a00ba6_2_690x394.jpeg, https://ethresear.ch/uploads/default/optimized/3X/3/e/3e0cf08f2021a1cbbe0156d52c8482dba0a00ba6_2_1035x591.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/3/e/3e0cf08f2021a1cbbe0156d52c8482dba0a00ba6_2_1380x788.jpeg 2x\" data-dominant-color=\"A7959A\"></a></div><p></p>\n<p>By <a href=\"https://x.com/weboftrees\">Anders</a>.</p>\n<p><em>While working on the <a href=\"https://ethresear.ch/t/mev-resistant-dynamic-pricing-auction-of-execution-proposal-rights/20024\">dynamic pricing auction</a> I though of another way to hold the auction that also seems interesting. Posting a rough sketch here, although I am not yet certain of its viability. Thanks to <a href=\"https://x.com/drakefjustin\">Justin</a>, <a href=\"https://x.com/barnabemonnot\">Barnabé</a> and <a href=\"https://x.com/terencechain\">Terence</a>.</em></p>\n<h2><a name=\"introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#introduction-2\"></a>Introduction</h2>\n<p>In the process of enshrining proposer–builder separation (<a href=\"https://github.com/ethereum/EIPs/pull/8711\">ePBS</a>), it has been <a href=\"https://mirror.xyz/barnabe.eth/LJUb_TpANS0VWi3TOwGx_fgomBvqPaQ39anVj3mnCOg\">suggested</a> that attesting and execution proposing should be more fully separated. Proposals such as <a href=\"https://ethresear.ch/t/execution-tickets/17944\">execution tickets</a> (ETs) and <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\">execution auctions</a> (EAs) strive to allocate the right to propose execution blocks to entities other than the validators. This also facilitates <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590\">MEV burn</a>. There have been concerns (<a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590/4\">1</a>, <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590/23\">2</a>, <a href=\"https://ethresear.ch/t/dr-changestuff-or-how-i-learned-to-stop-worrying-and-love-mev-burn/17384/3\">3</a>) around insufficient early bidding in the MEV pricing auctions with a base fee floor used in EA. By <a href=\"https://ethresear.ch/t/burn-incentives-in-mev-pricing-auctions/19856\">considering the staking metagame</a>, this issue is potentially resolved, but the resulting attester–builder integration can then by itself be <a href=\"https://ethresear.ch/t/burn-incentives-in-mev-pricing-auctions/19856#risks-associated-with-attester-builder-integration-14\">problematic</a>. There is also a general concern that the decided-upon auction design will <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\">induce MEV</a>, and no definite specification among <a href=\"https://ethresear.ch/t/on-block-space-distribution-mechanisms/19764#preliminaries-12\">several alternatives</a> for the auction design in ET. For this reason, it seems fruitful to explore an auction that facilitates true separation and does not induce MEV. One such mechanism recently proposed is the <a href=\"https://ethresear.ch/t/mev-resistant-dynamic-pricing-auction-of-execution-proposal-rights/20024\">MEV resistant dynamic pricing auction</a>. In the context of Vickrey auctions of execution rights, <a href=\"https://forum.arbitrum.foundation/t/constitutional-aip-proposal-to-adopt-timeboost-a-new-transaction-ordering-policy/25167\">Timeboost</a> under consideration by Arbitrum can also be mentioned.</p>\n<p>This post proposes a <a href=\"https://en.wikipedia.org/wiki/Vickrey_auction\">Vickrey</a> slot auction in two rounds to select a forthcoming execution proposer (akin to EA), referred to as a sealed execution auction (SEA). Staked builders make sealed bids for the right to propose an execution block. Bids are observed by attesters and then collated by the beacon proposer. In subsequent steps, builders reveal their bids, attesters observe the revealed bids, and the proposer once again collates them. The right to propose a forthcoming execution block is awarded to the highest bidder, paying according to the second-highest bid, with the payment burned.</p>\n<h2><a name=\"auction-3\" class=\"anchor\" href=\"https://ethresear.ch#auction-3\"></a>Auction</h2>\n<h3><a name=\"staked-builders-4\" class=\"anchor\" href=\"https://ethresear.ch#staked-builders-4\"></a>Staked builders</h3>\n<p>Builders are staked at a level sufficient for the protocol to penalize them if they fail to reveal committed bids. The stake can also serve as a deposit account to pay for winning bids, or this account can be managed separately.</p>\n<h3><a name=\"sealed-bids-5\" class=\"anchor\" href=\"https://ethresear.ch#sealed-bids-5\"></a>Sealed bids</h3>\n<p>Figure 1 gives an overview of the auction. In the first round, each builder has the opportunity to make one sealed bid over a public P2P layer. There might be a small fee for making a bid, as a further anti-Sybil measure. Attesters observe the sealed bids that have come in at time <span class=\"math\">T_1</span>. Around two seconds later, at <span class=\"math\">T_2</span>, the beacon proposer collates sealed bids (including any bids it finds after <span class=\"math\">T_1</span>), and broadcasts them in a structure. This structure may be a beacon block if the auction proceeds over two slots (see <a href=\"https://ethresear.ch/t/sealed-execution-auction/20060#timeline-15\">Timeline</a>). At <span class=\"math\">T_3</span>, attesters observe the structure and make sure that all previously observed bids at <span class=\"math\">T_1</span> have been included. If the bids were included in a beacon block, they will attest to the block contingent on correct and timely collation. If not included in a beacon block and the proposer equivocates on the structure, the subsequent block must be rejected.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/9/e9efaf529cceda171c770e9160ed477ff7093303.png\" data-download-href=\"https://ethresear.ch/uploads/default/e9efaf529cceda171c770e9160ed477ff7093303\" title=\"Figure 1\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/9/e9efaf529cceda171c770e9160ed477ff7093303_2_690x347.png\" alt=\"Figure 1\" data-base62-sha1=\"xnuLVAFfql94liRdPoOXEXF395h\" width=\"690\" height=\"347\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/9/e9efaf529cceda171c770e9160ed477ff7093303_2_690x347.png, https://ethresear.ch/uploads/default/optimized/3X/e/9/e9efaf529cceda171c770e9160ed477ff7093303_2_1035x520.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/e/9/e9efaf529cceda171c770e9160ed477ff7093303_2_1380x694.png 2x\" data-dominant-color=\"F2ECF1\"></a></div><p></p>\n<p><strong>Figure 1.</strong> Sealed execution auction. Staked builders submit sealed bids before <span class=\"math\">T_1</span> and the proposer collates them at <span class=\"math\">T_2</span>. At <span class=\"math\">T_3</span> attesters ensure that all bids they observed at <span class=\"math\">T_1</span> are part of the collated structure. Builders unseal the bids after <span class=\"math\">T_3</span> and attesters observe them at <span class=\"math\">T_4</span>. The proposer then collates bids in a beacon block at <span class=\"math\">T_5</span> and attesters attests to the block at <span class=\"math\">T_6</span> contingent on correct collation. The highest unsealed bid wins, paying a fee corresponding to the second highest bid. The fee is burned. Builders that did not unseal their bids are penalized.</p>\n<h3><a name=\"revealed-bids-6\" class=\"anchor\" href=\"https://ethresear.ch#revealed-bids-6\"></a>Revealed bids</h3>\n<p>In the second round, after the <span class=\"math\">T_3</span> deadline, builders unseal their bids. They should not release before <span class=\"math\">T_3</span>, because then the proposer can collude with other builders to release a bid structure with some bids placed after other bids were revealed. However, they do not need to observe the proposer’s structure before release, and can proceed right after the <span class=\"math\">T_3</span> mark.</p>\n<p>Attesters observe unsealed bids at <span class=\"math\">T_4</span>. The proposer collates all unsealed bids it can find, including them in the beacon block at around <span class=\"math\">T_5</span>. It may also include bids that were never unsealed, so that the associated builder can be penalized (this is a strict requirement in the single-slot design, because then the sealed bids have not been included in a previous beacon block). The highest bid is selected as the forthcoming execution proposer, and the second highest bid value is deducted from the winner’s balance and burned. At <span class=\"math\">T_6</span>, attesters attest to the beacon block, contingent on a correct collation by the beacon proposer.</p>\n<h2><a name=\"rationale-7\" class=\"anchor\" href=\"https://ethresear.ch#rationale-7\"></a>Rationale</h2>\n<p>Collusion between builders and proposers to reduce the burn as in the MEV burn design is arguably resolved; without stakers actively burning each others’ MEV revenue.</p>\n<ul>\n<li>There is no longer a stable equilibrium to rely on for colluding parties, such as late bidding.</li>\n<li>The proposer no longer has leverage to punish early bidders by electing another builder.</li>\n<li>Chiseling at a cartel is trivial, simply by truthful bidding.</li>\n<li>Every bid fulfills a real purpose, as opposed to early bids in MEV pricing auctions.</li>\n<li>There is no avenue for discouragement attacks, since there is no substantial proposer revenue to remove.</li>\n</ul>\n<h2><a name=\"penalization-8\" class=\"anchor\" href=\"https://ethresear.ch#penalization-8\"></a>Penalization</h2>\n<p>Several actions must be penalized. If the proposer omits an observed sealed bid in the first round or an observed revealed bid in the second round, the proposer’s block must be rejected by attesters. If the proposer fails to release the structure of the sealed bids in the first round or the revealed bids in the second round in a timely manner (reaching attesters before <span class=\"math\">T_3</span> and <span class=\"math\">T_6</span> respectively), the proposer’s block must also be rejected by attesters. <em>Edit 18-07-24:</em> As mentioned in the previous section and also further discussed in the next, a builder that does not unseal its bid on time will be penalized. This is facilitated in Figure 1 by including the sealed bid in the beacon block.</p>\n<p>It is possible that a builder made a mistake and will be unable to pay for its bid, if the bid is higher than its staked amount. This will be penalized by burning some proportion of the stake, for example corresponding to the amount of the actual winning bid, some fixed amount of ETH, or its entire stake. In any case, if its unbacked bid is the highest, the builder will not win the auction. The second highest bid will instead be selected as the execution proposer, paying the third highest bid, etc. If the bid underpinning the fee (normally the second highest bid) lacks funds, the bid below it will be set to underpin the fee.</p>\n<h2><a name=\"builder-proposer-collusion-and-possible-remedies-9\" class=\"anchor\" href=\"https://ethresear.ch#builder-proposer-collusion-and-possible-remedies-9\"></a>Builder–proposer collusion and possible remedies</h2>\n<p>A potential cause for concern is the following scenario: a builder determines that it would not like to unseal its bid (potentially after observing other builders’ unsealed bids). It does not want to subject itself to a penalty, so it colludes with the proposer to have it miss the slot. Is this a cause for concern? This ultimately depends on if the builder benefits more by <em>not</em> revealing its bid than the proposer loses from a missed proposal. This could be the case when bidding for the right to propose the current or next slot, and the expected MEV falls drastically between bid commit and reveal (i.e., a <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\">value-in-flight</a> problem). Another potential cause for concern is if the value instead increases drastically. The proposer might then pose an ultimatum to the winning builder: “send me some part of expected profits, or I will fail to propose”. A failed proposal would leave the builder without rights for the slot. An <a href=\"https://en.wikipedia.org/wiki/Ultimatum_game\">ultimatum game</a> emerges. The other builders might also be inclined to pay the proposer, in order to starve off competition, and the winning builder would then also need to pay the proposer to ensure it proposes.</p>\n<p>While the outlined collusion scenarios may be a bit speculative, it can still be interesting to explore possible remedies. A few directions then spring to mind:</p>\n<h4><a name=\"h-1-penalize-beacon-proposers-for-missed-beacon-blocks-10\" class=\"anchor\" href=\"https://ethresear.ch#h-1-penalize-beacon-proposers-for-missed-beacon-blocks-10\"></a>1. Penalize beacon proposers for missed beacon blocks</h4>\n<p>Proposers already lose out on revenue if they miss their block. However, this loss might not be a sufficient deterrent. It would therefore be beneficial to also penalize proposers if they miss their blocks. Otherwise, if the penalty applied to a builder is substantially higher than the loss from missed proposals for the proposer, that builder penalty will be less meaningful. Builders could seek to collude to let the proposer take the fall. In essence, if the value to the builder, its competitors, or the proposer, of having the builder not win the auction, is higher than the loss to the proposer of not proposing, then collusion or an ultimatum game may emerge.</p>\n<h4><a name=\"h-2-require-subsequent-beacon-proposers-to-conclude-the-auction-11\" class=\"anchor\" href=\"https://ethresear.ch#h-2-require-subsequent-beacon-proposers-to-conclude-the-auction-11\"></a>2. Require subsequent beacon proposers to conclude the auction</h4>\n<p>Is it possible to have the next beacon proposer conclude the auction? This depends to some extent on the <a href=\"https://ethresear.ch/t/sealed-execution-auction/20060#timeline-15\">Timeline</a> of the auction.</p>\n<ul>\n<li><strong>Single-slot design:</strong> In the single-slot design, attesters do not signal if they rejected a block because of an incorrect initial structure, a late structure, or an incorrect or missing beacon block. A way to deal with this is that the next proposer presents the correct outcome of the auction, in its own view, and that the attesters of <span class=\"math\">n+2</span> either reject or confirm the new block based on the proposed outcome. But this means that these attesters must also have tracked events in the previous slot as they unfolded, and any split views (e.g., from a rather late sealed builder bid) may persist for several blocks in a row.</li>\n<li><strong>Two-slot design:</strong> If the auction commences over two slots, there will be an agreed-upon set of committed sealed bids, or the first beacon block will have been rejected. The second step of the auction can then be concluded in a subsequent slot without requiring attesters to have observed the commit-phase. The requirement is to still have attesters make an observation of unsealed bids sometime before the proposer deadline. But that point need not necessarily be taken from the earlier slot. A benefit is that this might starve off split views.</li>\n</ul>\n<p>One thing to note is that if a builder finds it worthwhile to pay the first proposer to not propose, in order to avoid revealing a bid without being penalized, it might be willing to pay also a second proposer for not proposing. However, the price will go up, and the number of potential collusion partners scheduled to propose in a row may not be too large. It should also be noted that when auctioning off rights for slot <span class=\"math\">n+i</span>, there is a requirement that the delay until the conclusion of the auction does not surpass <span class=\"math\">i</span>. In other words, it will only be possible to repeat a failed auction around <span class=\"math\">i</span> times. Note that this requirement is also due to the fact that the order in which auctioned off execution rights are provided cannot be altered ex post, since the expected MEV for slots may vary.</p>\n<h4><a name=\"h-3-skip-the-beacon-proposal-reveal-12\" class=\"anchor\" href=\"https://ethresear.ch#h-3-skip-the-beacon-proposal-reveal-12\"></a>3. Skip the beacon proposal reveal</h4>\n<p>Is it possible to skip the beacon proposal reveal? If all bids are unsealed, the outcome will be evident to every participant. The mechanism can then be designed such that the winning builder safely can propose its block at the assigned slot, even if a proposer has not collated the outcome and presented a winner. The previous option 2 is focused on concluding the auction via a beacon proposal in time before the execution proposal, but the point here is that the auction does not need to be concluded by the proposer as long as the outcome is evident to the builder and can be verified by attesters when the builder proposes its block. The sealed bids must then have been included in a beacon block, as in the two-slot design.</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Threshold_cryptosystem\">Threshold decryption</a> via a committee of attesters (h/t Barnabé) is one option here. The bids are decrypted by a committee, and the winner made evident to the builders/forthcoming proposer and attesters. There would still be liveness concerns, but collusion would be more difficult. It can be noted that as long as all builders unseal their bids in a timely manner (even without threshold decryption), the winning builder can proceed with the proposal. Always penalizing builders that do not unseal their bids before <span class=\"math\">T_4</span> could then seem sufficient, but the issue is that split views would emerge in potential designs. In any case, the outcome would also at some point need to be included in a block, to process payment and penalties.</p>\n<h4><a name=\"h-4-auction-of-a-future-slot-to-reduce-value-in-flight-13\" class=\"anchor\" href=\"https://ethresear.ch#h-4-auction-of-a-future-slot-to-reduce-value-in-flight-13\"></a>4. Auction of a future slot to reduce value-in-flight</h4>\n<p>The Vickrey auction is truthful, allowing builders to bid their true value at the commit deadline. Since value-in-flight is the most likely cause for collusion, auctioning off a slot further removed from the present will temper the issue.</p>\n<h4><a name=\"auctioning-off-multiple-slots-14\" class=\"anchor\" href=\"https://ethresear.ch#auctioning-off-multiple-slots-14\"></a>Auctioning off multiple slots</h4>\n<p>Note that to avoid having a failed beacon proposal result in a missing execution proposal, there is also the option to sell the right to two execution proposals in the subsequent slot (with builders bidding their <a href=\"https://en.wikipedia.org/wiki/Vickrey_auction\">inverse demand curve</a> and paying according to the second and third highest bids).</p>\n<h2><a name=\"timeline-15\" class=\"anchor\" href=\"https://ethresear.ch#timeline-15\"></a>Timeline</h2>\n<p>This section presents two hypothetical timelines for the auction, either when only including unsealed bids in the beacon block (single-slot auction) or when including both sealed and unsealed bids in separate beacon blocks (two-slot auction).</p>\n<h3><a name=\"single-slot-auction-16\" class=\"anchor\" href=\"https://ethresear.ch#single-slot-auction-16\"></a>Single-slot auction</h3>\n<p>Example of a slot auction with a tight schedule enacted mostly during a single slot <span class=\"math\">n</span>, auctioning off execution proposal rights for a later slot <span class=\"math\">n+i</span>.</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th><span class=\"math\">T_x</span></th>\n<th>Time</th>\n<th>Overview</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span class=\"math\">T_1</span></td>\n<td>4s</td>\n<td><strong>Sealed bid deadline</strong></td>\n<td>Attesters of slot <span class=\"math\">n+1</span> observe all sealed bids. Builders must have broadcast them some time before this point to ensure eligibility.</td>\n</tr>\n<tr>\n<td><span class=\"math\">T_2</span></td>\n<td>6s</td>\n<td><strong>Proposer collates bids</strong></td>\n<td>The proposer of slot <span class=\"math\">n+1</span> releases a structure containing all sealed bids it can find.</td>\n</tr>\n<tr>\n<td><span class=\"math\">T_3</span></td>\n<td>8s</td>\n<td><strong>Attesters observe collation</strong></td>\n<td>Attesters of slot <span class=\"math\">n+1</span> observe the proposer’s structure to ensure it contains all bids they had seen at <span class=\"math\">T_1</span> and that the release of this structure is timely.</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><span class=\"math\">T_4</span></td>\n<td>10s</td>\n<td><strong>Revealed bid deadline</strong></td>\n<td>Attesters of slot <span class=\"math\">n+1</span> observe unsealed bids. Builders must have broadcast them some time before this point (but after <span class=\"math\">T_3</span>) to ensure eligibility.</td>\n</tr>\n<tr>\n<td><span class=\"math\">T_5</span></td>\n<td>0s (12s)</td>\n<td><strong>Proposer collates in beacon block</strong></td>\n<td>The proposer of slot <span class=\"math\">n+1</span> includes every unsealed bid it can find in the  block, also indicating sealed bids that were never unsealed. A winner is declared.</td>\n</tr>\n<tr>\n<td><span class=\"math\">T_6</span></td>\n<td>4s (12+4s)</td>\n<td><strong>Attesters confirm collation</strong></td>\n<td>Attesters of slot <span class=\"math\">n+1</span> confirm that the proposer fulfilled its role and collated bids in a timely manner by attesting to the block.</td>\n</tr>\n</tbody>\n</table>\n</div><p>Note that builders can unseal their bids directly after <span class=\"math\">T_3</span>. This should allow attesters of slot <span class=\"math\">n+1</span> to observe revealed bids at 10s. However, if needed, the entire schedule could be pushed back slightly.</p>\n<h3><a name=\"two-slot-auction-17\" class=\"anchor\" href=\"https://ethresear.ch#two-slot-auction-17\"></a>Two-slot auction</h3>\n<p>Here is an example of a schedule for the two-slot auction:</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th><span class=\"math\">T_x</span></th>\n<th>Time</th>\n<th>Overview</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span class=\"math\">T_1</span></td>\n<td>10s</td>\n<td><strong>Sealed bid deadline</strong></td>\n<td>Attesters of slot <span class=\"math\">n+1</span> observe all sealed bids. Builders must have broadcast them some time before this point to ensure eligibility.</td>\n</tr>\n<tr>\n<td><span class=\"math\">T_2</span></td>\n<td>0s (12s)</td>\n<td><strong>Proposer collates bids</strong></td>\n<td>The proposer of slot <span class=\"math\">n+1</span> includes all sealed bids it can find in its beacon block.</td>\n</tr>\n<tr>\n<td><span class=\"math\">T_3</span></td>\n<td>4s (12+4s)</td>\n<td><strong>Attesters confirm collation</strong></td>\n<td>Attesters of slot <span class=\"math\">n+1</span> confirm that the proposer fulfilled its role and collated bids in a timely manner by attesting to the block.</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><span class=\"math\">T_4</span></td>\n<td>8s (12+8s)</td>\n<td><strong>Revealed bid deadline</strong></td>\n<td>Attesters of slot <span class=\"math\">n+2</span> observe unsealed bids. Builders must have broadcast them some time before this point (but after <span class=\"math\">T_3</span>) to ensure eligibility.</td>\n</tr>\n<tr>\n<td><span class=\"math\">T_5</span></td>\n<td>0s (12+12s)</td>\n<td><strong>Proposer collates in beacon block</strong></td>\n<td>The proposer of slot <span class=\"math\">n+2</span> includes every unsealed bid it can find in the  block, potentially indicating sealed bids that were never unsealed. A winner is declared.</td>\n</tr>\n<tr>\n<td><span class=\"math\">T_6</span></td>\n<td>4s (12+12+4s)</td>\n<td><strong>Attesters confirm collation</strong></td>\n<td>Attesters of slot <span class=\"math\">n+2</span> confirm that the proposer collated all unsealed bids by attesting to the block.</td>\n</tr>\n</tbody>\n</table>\n</div>\n            <p><small>6 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/sealed-execution-auction/20060\">Read full topic</a></p>","link":"https://ethresear.ch/t/sealed-execution-auction/20060","pubDate":"Sat, 13 Jul 2024 16:30:07 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20060"},"source":{"@url":"https://ethresear.ch/t/sealed-execution-auction/20060.rss","#text":"Sealed execution auction"},"filter":false},{"title":"Staking Rights Auctions","dc:creator":"felipeargento","category":"Economics","description":"<p>This post was written by <a class=\"mention\" href=\"https://ethresear.ch/u/pedroargento\">@pedroargento</a> but his account seems unable to post it, so he asked me to do it. I’m not too aware of the necessities/constraints of the ether issuance debate - but this seems quite interesting for defi protocols as well. Anyway, here it goes:</p>\n<hr>\n<p>Hey everyone,</p>\n<p>A friend of mine just watched the “What’s the Issue with Issuance?” talk by Christine Kim, Caspar Schwarz-Schilling, and Ansgar Dietrichs at EthCC. They said that the key points discussed around Ethereum’s issuance reminded them of a proposal I wrote in the past for Cartesi and CTSI.</p>\n<p>The significant issues mentioned were the high (and growing) percentage of ether staked, how having too much ether staked isn’t necessarily beneficial for the network, how LST providers might be in a \"winner take all ‘’ situation and etc. Both Ansgar and Justin Drake suggested aiming for around 20-25% staked ether (ball park estimates).</p>\n<p>It seems to me that the auction mechanism I proposed for the CTSI staking economy could really help to address these issues, by making the staking system much more expressive. The idea also allows participants to pay negative issuance for the right to earn MEV, which not only tackles the problem of excessive ether staking, but might also helps to balance MEV discrepancies.</p>\n<p>I’m not an expert in this research area, but based on the feedback from the EthCC talk, it seems like my proposal aligns well with the direction Ethereum is aiming to take. I’m sharing this here on the Ethereum Research forum in hopes that it can contribute to the ongoing conversation and possibly offer a viable solution to the current challenges with Ethereum’s issuance models.</p>\n<p>Looking forward to your thoughts and feedback!</p>\n<h1><a name=\"staking-rights-auctions-1\" class=\"anchor\" href=\"https://ethresear.ch#staking-rights-auctions-1\"></a>Staking Rights Auctions</h1>\n<p>A popular solution to reward users for staking is to mint new tokens and distribute them among stakers. Besides the obvious incentive to gain extra tokens, the inflation created penalizes those who choose not to participate. The challenge is how to measure the opportunity costs of users and how to choose the appropriate issuance amount to achieve a target participation rate, while avoiding exceedingly high inflation rates.</p>\n<p>Some projects have a fixed emission rate while others have a dynamic inflation function, which is higher when the participation is below desired and lower otherwise. There are three key problems with these methods:</p>\n<ul>\n<li>\n<p>You need strong assumptions about users’ risk preferences to tailor the parameters of the function;</p>\n</li>\n<li>\n<p>Users have little information about the mining income they will get as it depends on the number of total staked funds.</p>\n</li>\n<li>\n<p>The methods don’t allow for differentiation between players with different risk preferences;</p>\n</li>\n<li>\n<p>It is hard to determine a balanced inflation target.</p>\n</li>\n</ul>\n<p>As a countermeasure to these three issues, I’m proposing a staking system based on a novel mechanism called staking rights, detailed in the sections below.</p>\n<h2><a name=\"the-mechanism-of-staking-rights-2\" class=\"anchor\" href=\"https://ethresear.ch#the-mechanism-of-staking-rights-2\"></a>The Mechanism of Staking Rights</h2>\n<p>Staking rights give node operators the right to participate in staking. Without the rights, operators cannot be selected in the lottery that chooses the node that will generate the next block.</p>\n<p>Rights are transitory. At the end of each staking cycle, a set of rights expires and ceases to exist. Conversely, new rights are created and made available for purchase through an auction.</p>\n<p>Staking rights always have a final value of 1 token, which is delivered to the account that purchased it at the precise time of their expiry. When users buy a staking right for a price of less than 1 token, the difference between the price paid and the unit value is proportional to their perceived opportunity of the staking right. In that case, the difference is minted and locked in staking together with the price paid, totaling 1 token staked per right sold.</p>\n<p>Here is an example. Suppose that the desired staking participation rate is 50% of the circulating supply of 1 thousand tokens. In this case, the system creates and auctions 500 staking rights, each scheduled to pay 1 token at the end of the cycle.</p>\n<blockquote>\n<p>Circulating supply: 1000<br>\nTarget participation: 500 (50%)<br>\nStaking rights issued: 500<br>\nAuction price = 0.97</p>\n</blockquote>\n<p>Assume that each staking right is sold for <span class=\"math\">0.97</span> in the auction, thereby generating <span class=\"math\">0.03</span> new tokens. The staking rights buyer at the end of the staking cycle would be rewarded 1 token obtaining a <span class=\"math\">3.09\\%</span> return <span class=\"math\">(0.03/0.97)</span>. The total inflation generated for the network would be <span class=\"math\">15</span> tokens (<span class=\"math\">0.03</span> per right * <span class=\"math\">500</span> rights) or <span class=\"math\">1.5\\%</span>.</p>\n<p>With this system, the user knows exactly how much return they will get for their staked tokens, independent of how many rights are sold or how many other stakers exist. There are also no assumptions about risk preferences, buyers will state them through bidding. This method also allows for bigger differentiation between users: instead of asking for a binary decision (stake or not to stake), we allow users to signal at what price they would be willing to stake.</p>\n<p>The system can offer staking rights with different staking cycle periods: 2 weeks, 1 month, 3 months, etc. This achieves two objectives (1) differentiate between users who are willing to stake long term from short term players and, mainly, (2) decrease volatility in token emission. After all, if all staking cycles end at the same time, all new staking rights will be subjected to the same market conditions that may not represent the average behavior of stakers.</p>\n<p>With different staking periods, in each cycle only a small number of staking rights will need to be created to replace the expired ones. This is because in each cycle there is going to be a mix of active staking rights bought at different points in time.</p>\n<p>User risk preferences can be stated in the form of a discount rate, the rate used to convert future values (promises of payouts) to the present. The discount rate is the income that makes one indifferent between gaining money in the present or in the future. For example, with a discount rate of 10% a year, one would be indifferent between receiving 100 dollars today or 110 dollars a year from now.</p>\n<p>The discount rate of a user can be translated to a staking right value using it to compute the present value of all incentives that can be paid by staking the right.</p>\n<p>Staking rights give the owner three sources of incentives, provided that the owner remained active within the network:</p>\n<ul>\n<li>\n<p>Staking right’s unit value (paid at the end of the cycle)</p>\n</li>\n<li>\n<p>Block producer’s tips</p>\n</li>\n<li>\n<p>Mine extractable Value</p>\n</li>\n</ul>\n<p>Below is an example of staking rights holder cash flows for a six month locked period.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/8/28063c3ac2b9e1cd18ed0e7aa69be283c8125261.png\" data-download-href=\"https://ethresear.ch/uploads/default/28063c3ac2b9e1cd18ed0e7aa69be283c8125261\" title=\"Chart\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/8/28063c3ac2b9e1cd18ed0e7aa69be283c8125261_2_624x385.png\" alt=\"\" title=\"Chart\" data-base62-sha1=\"5I4snSHGGB8YnuwZdcdZLEgMzNT\" width=\"624\" height=\"385\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/8/28063c3ac2b9e1cd18ed0e7aa69be283c8125261_2_624x385.png, https://ethresear.ch/uploads/default/optimized/3X/2/8/28063c3ac2b9e1cd18ed0e7aa69be283c8125261_2_936x577.png 1.5x, https://ethresear.ch/uploads/default/original/3X/2/8/28063c3ac2b9e1cd18ed0e7aa69be283c8125261.png 2x\" data-dominant-color=\"FAFAF9\"></a></div><p></p>\n<p>The price to be paid for the staking can be easily calculate based on the return demanded by the staker</p>\n<blockquote>\n<p>Given:<br>\na staking right in a staking cycle of 12 weeks that pays rewards every 2 weeks<br>\n<span class=\"math\">MEV_t</span> the expected mine reward for time <span class=\"math\">t</span><br>\n<span class=\"math\">NF_t</span> the expected network fees for time <span class=\"math\">t</span><br>\n<span class=\"math\">UV</span> the staking right unit value<br>\n<span class=\"math\">i</span> the 2-week return expected by the user<br>\nThe price <span class=\"math\">P</span> will be calculated as:</p>\n<div class=\"math\">\nP= \\frac {UV} {(1+i)^6} + \\sum_ {t=1}^{6} \\frac {MEV_t + NF_t} {(1+i)^t}\n</div>\n</blockquote>\n<p>The staking rights can be sold through a closed price auction of Nth price, which means that the higher bid wins the token but will pay the price of the highest loser bid. For example, If 500 tokens are sold and the 501st highest bid was 0.98, all 500 tokens will cost 0.98. This type of auction, also known as a Vickrey auction (or Dutch auction), ensures all players bid their true valuation of the staking right, revealing their true risk preferences.</p>\n<blockquote>\n<p><strong>Proof</strong><br>\nIts not 100% applicable to this specific auction, but a classical proof from Game Theory can give the intuition why the paid price being the lowest winning bid incentivizes truthfully reporting:</p>\n<p>Given user <span class=\"math\">i</span> has a valuation <span class=\"math\">B_i</span> for a staking right. They can bid <span class=\"math\">B_+ &gt;B_i</span> or <span class=\"math\">B_- &lt; B_i</span> and the <span class=\"math\">N</span>-th price of the auction ends up being <span class=\"math\">B_n</span>.</p>\n<p>If they bids <span class=\"math\">B_+</span> there are two possibilities:</p>\n<ol>\n<li>\n<p><span class=\"math\">B_n &lt; B_i</span></p>\n</li>\n<li>\n<p><span class=\"math\">B_+ &gt; B_n &gt; B_i</span></p>\n</li>\n</ol>\n<p>In (1) they would get <span class=\"math\">(B_i - B_n)</span> independent of bidding <span class=\"math\">B_+</span> or <span class=\"math\">B_i</span> and in (2) they would lose <span class=\"math\">(B_i — B_+)</span> that would be larger than <span class=\"math\">(B_n — B_i)</span>. In neither case they have incentive to bid <span class=\"math\">B_+</span>.</p>\n<p>If they bids <span class=\"math\">B_-</span> there are two possibilities:</p>\n<ol start=\"3\">\n<li>\n<p><span class=\"math\">B_n &lt; B_-</span></p>\n</li>\n<li>\n<p><span class=\"math\">B_- &lt; B_n &lt; B_i</span></p>\n</li>\n</ol>\n<p>In (3) they would get <span class=\"math\">(B_i — B_n)</span> independent of bidding <span class=\"math\">B_-</span> or <span class=\"math\">B_i</span> and in (4) they would not get the token, making it better to bid <span class=\"math\">Bi</span> and have the chance to win.</p>\n<p>In all possible cases there is no incentive to bid <span class=\"math\">B_+</span> or <span class=\"math\">B_-</span>, making <span class=\"math\">B_i</span> the dominant Nash-Bayesian equilibrium.</p>\n</blockquote>\n<p>This system also allows for deflation, if the value of the auction ends up above 1 unit. This would make sense if people are expecting such a high reward from the fees and MEV that they are willing to burn a certain amount of tokens in order to participate.</p>\n<h2><a name=\"inflation-control-mechanisms-3\" class=\"anchor\" href=\"https://ethresear.ch#inflation-control-mechanisms-3\"></a>Inflation Control Mechanisms</h2>\n<p>Besides the burning possibility, its possible to add parameters in the auction to help manage inflation. Although its unclear to me at this time how those parameters could be decided by the Ethereum ecosystem, I’m presenting them anyway. Contributions are welcomed as always.</p>\n<p><strong>First</strong>. Auction reserve prices: In the worst-case scenario, where all rights are sold in the auction with a price close to zero, the inflation will be the number of rights sold, divided by the total supply (50% in our previous example).</p>\n<p>A reserve price means that only bids above a certain value will be considered valid. If we choose a reserve price of 0.7, the worst-case scenario in our example would be an inflation of 15%.</p>\n<p>With a reserve price, it is possible to choose an acceptable inflation range and guarantee it will be complied with at all times.</p>\n<p><strong>Second</strong>. The number of issued tokens: The number of tokens directly affects the inflation. If only 100 tokens are issued (out of a total supply of one thousand), the worst-case scenario for inflation would be 10%.</p>\n<p>These two variables need to be controlled dynamically in order to make sure the inflation is never higher than a previously determined ceiling. The number of tokens issued will depend not only on the target participation rate but also on the value of bids from the auction. This number will be capped so that the total newly minted tokens are limited to the maximum inflation. The total newly minted tokens can be calculated as the difference between the face value and the highest bid not honored (the Dutch auction price) times the number of tokens issued.</p>\n<blockquote>\n<p>Let <span class=\"math\">CAP</span> be the maximum number of minted ETH desired</p>\n<p>Let <span class=\"math\">N_ {max}</span> be the maximum number of staking rights necessary to achieve the target participation rate</p>\n<p>Let <span class=\"math\">B(i)</span> be the <span class=\"math\">i</span>-th largest bid from the auction results</p>\n<p>Let <span class=\"math\">N</span> be the number of staking rights issued</p>\n<p><span class=\"math\">N</span> will be chosen as the result of the optimization problem:</p>\n<div class=\"math\">\n\\begin{aligned}\n\\max_{} \\quad &amp; N\\\\\n\\textrm{s.t.} \\quad &amp; N * (1-B(N+1)) \\le CAP\\\\\n\\quad &amp; N \\le N_ {max} \\\\\n\\end{aligned}\n</div>\n</blockquote>\n<p>More precisely, suppose that we sort all the bids made during the auction in decreasing order and plot them as in the figure below.</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/f/4/f4dd92342507c13ba5e872d205c15c90bf308b60.png\" alt=\"m1\" data-base62-sha1=\"yWbdqZxWaI5pyou3KIWZdvdT8yc\" width=\"477\" height=\"318\"></p>\n<p>Then N staking rights will be issued in order to preserve the maximum number of ETH issued (CAP). Therefore, we can dynamically choose the minimum value B(N+1) such that the inflation is within the predetermined bounds.</p>\n<p>The deflation case is depicted in the figure below:</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/7/3/736de5fac6d3efefd1b613297221521da4f9d64b.png\" alt=\"m2\" data-base62-sha1=\"gt8mE0F0f3n53Lyql24dVXoVjVp\" width=\"459\" height=\"318\"></p>\n<p>It is important to note that there is no way around the tradeoff between participation rate and inflation, to control the later there is the need to sacrifice the former. The advantage brought by the system of staking rights auction is that we maximize participation, while limiting the inflation and allowing workers to express their economic preferences.</p>\n            <p><small>2 posts - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/staking-rights-auctions/20059\">Read full topic</a></p>","link":"https://ethresear.ch/t/staking-rights-auctions/20059","pubDate":"Sat, 13 Jul 2024 14:53:13 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20059"},"source":{"@url":"https://ethresear.ch/t/staking-rights-auctions/20059.rss","#text":"Staking Rights Auctions"},"filter":false},{"title":"Bitfinity: A new sharded blockchain","dc:creator":"MaxC","category":"Sharding","description":"<p>Using threshold BLS signatures we design a new blockchain that implements sharding, separating tokens from EVM processors. Bitfinity is linearly scalable and fast.<br>\nBitfinity implements seamless cross-shard communication.</p>\n<aside class=\"onebox pdf\" data-onebox-src=\"https://github.com/bitfinity-network/whitepapers/blob/163145326e321c87956b2f881159f73b7a6409fb/Bitfinity_Network.pdf\">\n  <header class=\"source\">\n\n      <a href=\"https://github.com/bitfinity-network/whitepapers/blob/163145326e321c87956b2f881159f73b7a6409fb/Bitfinity_Network.pdf\" target=\"_blank\" rel=\"noopener nofollow ugc\">github.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <a href=\"https://github.com/bitfinity-network/whitepapers/blob/163145326e321c87956b2f881159f73b7a6409fb/Bitfinity_Network.pdf\" target=\"_blank\" rel=\"noopener nofollow ugc\"><span class=\"pdf-onebox-logo\"></span></a>\n\n<h3><a href=\"https://github.com/bitfinity-network/whitepapers/blob/163145326e321c87956b2f881159f73b7a6409fb/Bitfinity_Network.pdf\" target=\"_blank\" rel=\"noopener nofollow ugc\">Bitfinity_Network.pdf</a></h3>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n<p>\nUsing sharding techniques we also implement seamless cross-chain settlement and can bridge over Bitcoin to the EVM.</p>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://bitfinity.network/\">\n  <header class=\"source\">\n      <img src=\"https://ethresear.ch/uploads/default/original/3X/9/6/966040c1403c32d7669b160eb35a33dc860db193.png\" class=\"site-icon\" data-dominant-color=\"000000\" width=\"32\" height=\"32\">\n\n      <a href=\"https://bitfinity.network/\" target=\"_blank\" rel=\"noopener nofollow ugc\">bitfinity.network</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    \n\n<h3><a href=\"https://bitfinity.network/\" target=\"_blank\" rel=\"noopener nofollow ugc\">Bitfinity EVM</a></h3>\n\n  <p>Bitfinity is a blazingly-fast, next-gen EVM, serving as a Layer Two for Bitcoin and other assets - utilising threshold signature schemes and built on the IC. Use Bitfinity to deploy advanced Solidity smart contracts.</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/bitfinity-a-new-sharded-blockchain/20054\">Read full topic</a></p>","link":"https://ethresear.ch/t/bitfinity-a-new-sharded-blockchain/20054","pubDate":"Fri, 12 Jul 2024 23:34:33 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20054"},"source":{"@url":"https://ethresear.ch/t/bitfinity-a-new-sharded-blockchain/20054.rss","#text":"Bitfinity: A new sharded blockchain"},"filter":false},{"title":"Searcher Competition in Block Building","dc:creator":"kakia89","category":"Economics","description":"<p>In a new paper with Christoph Schlegel (<a class=\"mention\" href=\"https://ethresear.ch/u/jcschlegel\">@jcschlegel</a>), Benny Sudakov and Danning Sui(<a class=\"mention\" href=\"https://ethresear.ch/u/sui414\">@sui414</a>), we look at the distribution of MEV rewards between the validator and searchers. We model the interaction between all players using tools from cooperative game theory. Namely, for any coalition of players, we define a (maximum achievable) value the coalition can derive by creating the best block together. The validator is a special player, that is needed to create any value. In other words, it has a veto power. However, searchers are the ones that find (arbitrage) opportunities which derive a value. Searchers can be substitutes or complements of each other into finding opportunities. The outcome of this interaction is payoff vector, specifying how much each player gets. In the core of the game payoffs are such that any coalition gets paid at least as much as the value they produce themselves.<br>\nFirst, we study a structure of the core, which is always non-empty set of payoff vectors. Then, we focus on the searcher-optimum allocation and show that each searcher obtains its marginal contribution. In a stochastic model, where each opportunity is independently found with the same probability by each searcher, we show that if this probability is mildly high in the number of searchers, validator gets all rewards. In other words, core is just a single payoff vector. While if this probability is low, with a constant probability the validator can get zero payment, as the searchers are complements of each other. We extend some results to the blocks with bounded size.<br>\nOn the empirical side, we observe that if there is a high competition of searchers, validator rewards are increasing (in absolute terms), which aligns with our theoretical predictions.<br>\nFor more details check out the paper: <a href=\"https://arxiv.org/abs/2407.07474\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">[2407.07474] Searcher Competition in Block Building</a>. Any feedback is welcome.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/searcher-competition-in-block-building/20044\">Read full topic</a></p>","link":"https://ethresear.ch/t/searcher-competition-in-block-building/20044","pubDate":"Thu, 11 Jul 2024 11:00:11 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20044"},"source":{"@url":"https://ethresear.ch/t/searcher-competition-in-block-building/20044.rss","#text":"Searcher Competition in Block Building"},"filter":false},{"title":"L2 Asset Interoperability via Two-way Canonical Bridges","dc:creator":"wdai","category":"Layer 2","description":"<h2><a name=\"motivation-1\" class=\"anchor\" href=\"https://ethresear.ch#motivation-1\"></a>Motivation</h2>\n<p>One key problem with the L2 scaling solutions is that assets natively minted on L2s can only be used on the L2 of issuance but it cannot be bridged back to L1 or other L2s, without utilizing external bridges. This creates fragmentation. At the time of writing, there is already half as much natively-minted assets ($12b) on Eth L2s compared to canonical bridged assets ($24b), according to L2Beat.</p>\n<p>Shared settlement layers only solve this problem for L2s using the same shared settlement layer. The ecosystem remain fragmented once more shared settlement layer show up.</p>\n<p>We propose <strong>two-way canonical bridges</strong> as a solution, where L2-minted assets can be <strong>reverse-canonically bridged</strong> to L1. It is simply an ERC-1155-like interface that an L2 settlement contracts adopt, plus additional precompiles added to the L2 execution environment.</p>\n<h2><a name=\"two-way-canonical-bridges-2\" class=\"anchor\" href=\"https://ethresear.ch#two-way-canonical-bridges-2\"></a>Two-way Canonical Bridges</h2>\n<p>Below is a highlevel description of two-way canonical bridging.</p>\n<ul>\n<li>The L2 settlement contract becomes the ledger of record for all native assets issued on it (that have been reverse-canonically-bridged). The settlement contract (on L1) shall implement the ERC-1155 interface, where the asset id field denotes the L2 asset address.</li>\n<li>To send an L2-native asset to an L1 address, the L2 users simply send the asset to a prespecified system address, which shall results in the L2 settlement contract on L1 issuing ERC-1155 tokens to itself. Next, L2-&gt;L1 call mechanisms can be utilized to move the newly-issued asset to any desired destination. This is done within the same L2 transaction.</li>\n<li>To send a reverse-canonically-wrapped asset back to its L2 of origin, a special <code>burnAndDeposit</code> function on the L2 settlement contract can be called.</li>\n<li>Since the L2 settlement contract is an ERC-1155 contract, L1 EOAs and other L2s can simply hold assets or wrap them as normal. This requires the L2 canonical bridge to support wrapping of ERC-1155 assets.</li>\n<li>In normal usage, it is expected that the only holders of the ERC-1155 tokens issued by an L2 settlement contract are other L2 settlement contracts. This means that the state overhead on L1 is small.</li>\n</ul>\n<p>Additional consideration:</p>\n<ul>\n<li>The safety of an asset is maintained without additional trust assumptions because the L2 settlement contract acts as the ledger of record for all outstanding assets (those owned by other L1 addresses).</li>\n<li>It is assumed that any assets that is reverse-canonically-bridged to L1 addresses is done at the risk of the user initiating the bridging.</li>\n<li>In practice, end-users can utilize fast liquidity bridges while crosschain liquidity providers utilize the two-way canonical bridges to rebalance.</li>\n<li>This mechanism can extend to L3s on L2s. An asset issued on an L3 can be reverse canonically-bridged to L2 and then reverse canonically-bridged back to L1. We’d need the 1155 ids on the settlement contract to be able to represent the 1155 asset id on L2 alongside with the asset address–this can be done via hashing for example.</li>\n</ul>\n<h3><a name=\"acknowledgements-3\" class=\"anchor\" href=\"https://ethresear.ch#acknowledgements-3\"></a>Acknowledgements</h3>\n<p>Thanks to Shumo Chu for review and comments.</p>\n            <p><small>7 posts - 5 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/l2-asset-interoperability-via-two-way-canonical-bridges/20039\">Read full topic</a></p>","link":"https://ethresear.ch/t/l2-asset-interoperability-via-two-way-canonical-bridges/20039","pubDate":"Wed, 10 Jul 2024 22:20:35 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20039"},"source":{"@url":"https://ethresear.ch/t/l2-asset-interoperability-via-two-way-canonical-bridges/20039.rss","#text":"L2 Asset Interoperability via Two-way Canonical Bridges"},"filter":false},{"title":"MEV resistant dynamic pricing auction of execution proposal rights","dc:creator":"aelowsson","category":"Block proposer","description":"<h1><a name=\"mev-resistant-dynamic-pricing-auction-of-execution-proposal-rights-1\" class=\"anchor\" href=\"https://ethresear.ch#mev-resistant-dynamic-pricing-auction-of-execution-proposal-rights-1\"></a>MEV resistant dynamic pricing auction of execution proposal rights</h1>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/9/3903954c39a134bc9b9fc6b919977da400390b97.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/3903954c39a134bc9b9fc6b919977da400390b97\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/9/3903954c39a134bc9b9fc6b919977da400390b97_2_500x500.jpeg\" alt=\"\" data-base62-sha1=\"88mTlP3WM4xrZEw08ytMz9368R1\" width=\"500\" height=\"500\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/9/3903954c39a134bc9b9fc6b919977da400390b97_2_500x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/3/9/3903954c39a134bc9b9fc6b919977da400390b97_2_750x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/3/9/3903954c39a134bc9b9fc6b919977da400390b97_2_1000x1000.jpeg 2x\" data-dominant-color=\"A79FA0\"></a></div><p></p>\n<p><em>Execution proposal of marriage between EA and ET through an auction sequenced by RANDAO (she said yes).</em></p>\n<p>By <a href=\"https://x.com/weboftrees\">Anders</a>. Special thanks to <a href=\"https://x.com/barnabemonnot\">Barnabé</a> for helping me improve the clarity of this post. Thanks also for valuable feedback to <a href=\"https://x.com/soispoke\">Thomas</a>, <a href=\"https://x.com/_julianma\">Julian</a>, and <a href=\"https://x.com/fradamt\">Francesco</a>.</p>\n<h2><a name=\"h-1-introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#h-1-introduction-2\"></a>1. Introduction</h2>\n<h3><a name=\"h-11-background-3\" class=\"anchor\" href=\"https://ethresear.ch#h-11-background-3\"></a>1.1 Background</h3>\n<p>As part of the effort to enshrine proposer–builder separation (<a href=\"https://ethresear.ch/t/minimal-epbs-beacon-chain-changes/18653\">ePBS</a>), the role of beacon validators as execution proposers has come under <a href=\"https://mirror.xyz/barnabe.eth/LJUb_TpANS0VWi3TOwGx_fgomBvqPaQ39anVj3mnCOg\">scrutiny</a>. <a href=\"https://ethresear.ch/t/execution-tickets/17944\">Execution tickets</a> (ET), first introduced as <a href=\"https://www.youtube.com/watch?v=IrJz4GZW-VM\">attester–proposer separation</a>, is a mechanism for selecting the execution proposer by random draw from a ticket pool, aiming to detach beacon validators from the selection process. However, the mechanism for selling tickets has not been settled, with several <a href=\"https://ethresear.ch/t/on-block-space-distribution-mechanisms/19764#preliminaries-12\">alternatives</a> under consideration. A notable <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\">concern</a> is that the sale of execution tickets may induce maximal extractable value (MEV). If the mechanism is administered by the consensus layer and the beacon proposer is given too much influence over the price or over the selection of purchasers, the design risks repeating one of the issues it was intended to resolve, with a new source of MEV becoming a concern. An execution layer vending machine raises similar <a href=\"https://x.com/barnabemonnot/status/1805859642213269739\">questions</a>. Therefore, a MEV resistant auction mechanism could be desirable if pursuing ETs.</p>\n<p><a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\">Execution auctions</a> (EA) is a related mechanism for selecting a future execution proposer, omitting the ticket pool. It  relies on a <a href=\"https://ethresear.ch/t/burn-incentives-in-mev-pricing-auctions/19856\">MEV pricing auction</a>, where bidders first make bids that set a <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590\">floor to the MEV burn</a>, and finally bid through tips in order to be selected by the proposer. Concerns have been raised (<a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590/4\">1</a>, <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590/23\">2</a>, <a href=\"https://ethresear.ch/t/dr-changestuff-or-how-i-learned-to-stop-worrying-and-love-mev-burn/17384/3\">3</a>) regarding the viability of MEV pricing auctions due to insufficient bid incentives in the initial phase. It has <a href=\"https://ethresear.ch/t/burn-incentives-in-mev-pricing-auctions/19856\">recently been suggested</a> that this concern is resolved by considering the staking metagame, in which stakers must bid early to deprive other stakers of revenue. However, this resolution implies that EAs will lead to increased staker–builder integration, which might also be a <a href=\"https://ethresear.ch/t/burn-incentives-in-mev-pricing-auctions/19856#risks-associated-with-attester-builder-integration-14\">cause for concern</a>. For this reason, it seems fruitful to explore an alternative auction mechanism also when selecting the execution proposer without leveraging a ticket pool.</p>\n<h3><a name=\"h-12-overview-of-proposal-4\" class=\"anchor\" href=\"https://ethresear.ch#h-12-overview-of-proposal-4\"></a>1.2 Overview of proposal</h3>\n<p>This post introduces a dynamic pricing auction with MEV resistance to sell execution proposal rights. Builders hold reserves in a debit account and place binding purchase order for a ticket (ET) or an execution proposal slot (similar to EA). The final price adapts dynamically based on the total outstanding as well as currently incoming orders/tickets, with some similarities to, e.g., <a href=\"https://github.com/ethereum/EIPs/blob/f93b530c60dc7a88e5b811f9cbdf865ecc1b9b97/EIPS/eip-1559.md\">EIP-1559</a>, and the payment is burned. Orders are delimited at the slot level through attester observations to remove agency from the beacon proposers facilitating the auction, thus inducing less new MEV. This produces a high aggregate MEV burn. In one version of the design, dubbed execution ticket auction (ETA), orders that came in during the same slot are sequenced for proposal by leveraging the <a href=\"https://eth2book.info/capella/part2/building_blocks/randomness/#the-randao\">RANDAO</a>. In another version only applicable to ETs, orders that came in during the same slot are minted collectively into tickets. Due to the current limitations of the RANDAO, the mechanism is only capable of auctioning off proposal rights at least one epoch in advance.</p>\n<h2><a name=\"h-2-purchase-process-5\" class=\"anchor\" href=\"https://ethresear.ch#h-2-purchase-process-5\"></a>2. Purchase process</h2>\n<p>Figure 1 presents the proposed purchase mechanism. Builders send purchase orders (for one ticket/execution slot at a time) over a public P2P layer. They specify a maximum price and hold a debit account within consensus to guarantee that their purchase orders are backed by sufficient funds. This account is funded using a separate transaction (see the discussion).</p>\n<p>Beacon attesters observe all orders up to an observation deadline, enacted for example 2 seconds before the slot boundary. The beacon proposer collects all orders (there will be one purchase order per slot on average), including orders they may have found during the last few seconds of their slot. Orders are added as a group to the beacon block and will later be popped from a virtual first-in first-out (FIFO) queue scheduled across blocks. This queue may be just one slot long, depending on implementation.</p>\n<p>Attesters reject the block if the beacon proposer fails to include a purchase order that they observed. The mechanism thus far has similarities to MEV pricing auctions (e.g., <a href=\"https://ethresear.ch/t/committee-driven-mev-smoothing/10408\">MEV smoothing</a>, <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590\">MEV burn</a>, <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\">EA</a>), but attesters are tasked with simply observing all purchases, instead of setting a bid floor. Another design that might come to mind is inclusion lists (ILs) in the style of <a href=\"https://ethresear.ch/t/fork-choice-enforced-inclusion-lists-focil-a-simple-committee-based-inclusion-list-proposal/19870\">FOCIL</a>, but there is no new active participant in the form of an IL committee.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/0/702bb78973cad1e335953a439305f91bf34e2132.png\" data-download-href=\"https://ethresear.ch/uploads/default/702bb78973cad1e335953a439305f91bf34e2132\" title=\"Figure 1\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/0/702bb78973cad1e335953a439305f91bf34e2132_2_690x424.png\" alt=\"Figure 1\" data-base62-sha1=\"g0j8Fpmo2L9DfyXSqafbcbpuhhg\" width=\"690\" height=\"424\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/0/702bb78973cad1e335953a439305f91bf34e2132_2_690x424.png, https://ethresear.ch/uploads/default/optimized/3X/7/0/702bb78973cad1e335953a439305f91bf34e2132_2_1035x636.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/7/0/702bb78973cad1e335953a439305f91bf34e2132_2_1380x848.png 2x\" data-dominant-color=\"EFEFF0\"></a></div><p></p>\n<p><strong>Figure 1.</strong> Schematic overview of the purchase process. Orders in blue, backed by builders’ debit accounts, are observed by attesters (purple arrows). Beacon proposers subsequently add all incoming orders to the beacon block (dark red arrow). A validity check is performed to ensure that orders are fully backed. Orders are finally processed—using either RANDAO to determine the sequence in cases where several orders came in during the associated slot (yellow), or otherwise using collective minting (red). In ETA, orders are directly queued for proposal.</p>\n<p>Once a slot’s orders have been added to the beacon block, a validity check is performed on builders that included at least one new order (cyan in Figure 1). If a builder’s outstanding (not yet processed) orders across the queue are not fully backed by its debit account, all the builder’s pending orders are discarded. A penalty may also be applied. Orders are  priced directly upon being added or, e.g., at the time of sequencing, as described in Section 4. The determined purchase price is charged from the debit account and burned. The remaining ETH of the purchase order is subsequently virtually released such that it can be used to back new purchase orders. Orders are then sequenced and either queued for proposal (yellow arrow) or added to the ticket pool (red arrow), as described in Section 3.</p>\n<h2><a name=\"h-3-sequencing-process-6\" class=\"anchor\" href=\"https://ethresear.ch#h-3-sequencing-process-6\"></a>3. Sequencing process</h2>\n<p>The purchase orders from the same slot are added unsequenced to the beacon block. The subsequent sequencing of orders from the same slot varies between designs.</p>\n<h3><a name=\"h-31-et-minting-of-execution-tickets-7\" class=\"anchor\" href=\"https://ethresear.ch#h-31-et-minting-of-execution-tickets-7\"></a>3.1 ET – Minting of execution tickets</h3>\n<p>The natural strategy for ETs is <em>collective minting</em>, wherein all orders from the same slot mint a ticket at the same time, as indicated by the red arrow in Figure 1. The RANDAO used for ETA in the next subsection could also be applied to ETs using the same setup (dashed yellow arrow). However, the only real benefit (which remains marginal) is to facilitate a more even replenishment of the ticket pool.</p>\n<h3><a name=\"h-32-eta-orders-sequenced-by-randao-8\" class=\"anchor\" href=\"https://ethresear.ch#h-32-eta-orders-sequenced-by-randao-8\"></a>3.2 ETA – orders sequenced by RANDAO</h3>\n<p>Purchase orders that came in during the same slot can be sequenced directly by the RANDAO, completely skipping a ticket pool. Perhaps <em>execution ticket auction</em> (ETA) would be a proper moniker. Indeed, with this design, a buyer will have an <em>Estimated Time of Arrival</em> for their order, which suitably cannot be precisely known beforehand if there is more than one order in the slot. Barnabé’s discussion (<a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\">1</a>, <a href=\"https://x.com/barnabemonnot/status/1805872045302898807\">2</a>) on the topic of ETs and determinism is relevant here.</p>\n<p>Orders can only be sequenced after the RANDAO has been updated. Therefore, there is an initial ineligibility window <span class=\"math\">W</span> during which orders cannot lead to an execution proposal. The RANDAO updates every 32 slots, but the proposed mechanism does not guarantee a new order every slot; in fact, the mode will be zero orders in a slot. Consequently, the safe distance between auction and slot proposal will need to be somewhat longer than 32 slots. Sequenced orders can be understood as sitting in a second FIFO queue while waiting to propose. Note that ETA could set the queue to hold as many proposal rights as the ticket pool, if desirable.</p>\n<h2><a name=\"h-4-dynamic-pricing-9\" class=\"anchor\" href=\"https://ethresear.ch#h-4-dynamic-pricing-9\"></a>4. Dynamic pricing</h2>\n<h3><a name=\"h-41-ticket-saturation-and-delta-10\" class=\"anchor\" href=\"https://ethresear.ch#h-41-ticket-saturation-and-delta-10\"></a>4.1 Ticket saturation and delta</h3>\n<p>The exploration of dynamic pricing will refer to processed orders as “tickets”, although in the ETA design these are just sitting in the ordered queue waiting to propose. The protocol strives to ensure that there are <span class=\"math\">\\hat{T}</span> outstanding tickets at any time. The price of a new ticket should be determined by the current number of outstanding tickets <span class=\"math\">T</span> as well as the current supply of purchases and purchase orders <span class=\"math\">T_p</span>, measured over some window of length <span class=\"math\">W_T</span>, which in some versions can be only one slot long.</p>\n<p>Define the ticket saturation as <span class=\"math\">T_s=T-\\hat{T}</span>. If <span class=\"math\">T_s&lt;0</span>, there are too few tickets, and the protocol would in general like to sell more than one ticket per slot. If <span class=\"math\">T_s&gt;0</span>, there are too many, and it would in general like to sell fewer than one. The delta <span class=\"math\">T_{\\delta}=T_p-W_T</span> gives purchase orders relative to an expectation of one ticket per slot, which is the rate at which tickets are consumed by execution proposers. If <span class=\"math\">T_{\\delta}&lt;0</span>, the protocol is selling fewer than one ticket per slot and would in general like to sell more. If <span class=\"math\">T_{\\delta}&gt;0</span>, it sells more than one and would in general like to sell fewer.</p>\n<p>If both <span class=\"math\">T_s</span> and <span class=\"math\">T_{\\delta}</span> are negative, the protocol should decrease the ticket price to sell more tickets. If both <span class=\"math\">T_s</span> and <span class=\"math\">T_{\\delta}</span> are positive, it should increase the price to sell fewer. The less trivial question is how to approach a situation when one of the variables is negative and the other is positive, how to window sales, and how quickly to adjust the price.</p>\n<h3><a name=\"h-42-dynamic-pricing-mechanism-11\" class=\"anchor\" href=\"https://ethresear.ch#h-42-dynamic-pricing-mechanism-11\"></a>4.2 Dynamic pricing mechanism</h3>\n<h4><a name=\"h-421-overview-12\" class=\"anchor\" href=\"https://ethresear.ch#h-421-overview-12\"></a>4.2.1 Overview</h4>\n<p>The price of tickets adjusts on a relative basis, just like in EIP-1559, gradually shifting by some proportion of the current price each slot. To improve MEV resistance and adapt to the problem at hand, three differences to EIP-1559 however seem useful: (1) the price should depend on orders included in the current slot, not only the preceding; (2) the block should never be “full”, lest the ticket price becomes very high; (3) the mechanism should be “two-dimensional” in the sense that it accounts for both ticket saturation and delta.</p>\n<p>This subsection begins by exploring the simplest realization of such a pricing mechanism, which will then gradually be expanded. In the simplest design, <span class=\"math\">W_T=1</span>, and orders can be priced directly when added to the beacon block. If there is one new order (<span class=\"math\">T_{\\delta}=0</span>) and the number of outstanding tickets is as desired (<span class=\"math\">T_s=0</span>), the price stays the same. If there are many new orders (a sudden spike in the expected MEV), the pricing mechanism will hike the price substantially. For example, if 100 orders were to come in, the purchase price for them could rise by orders of magnitude; the exact specification would need to be determined based on other auction paramters such as the size of the ticket pool. Builders will of course track incoming orders in real time and update their estimate of the final purchase price. Therefore, even during a sudden rise in expected MEV, there will only be new orders up to the point where the deduced price matches expected MEV.</p>\n<p>As another option, <span class=\"math\">W_T</span> can be longer, setting the price <span class=\"math\">W</span> slots after orders have been added to the beacon block. In Figure 1, <span class=\"math\">W=3</span>. An asymmetric window spanning 4 slots up to and including the processing slot is then an option. The most important benefit is MEV resistance during spikes, as will be further discussed in Section 4.3. Other potential benefits include better pricing granularity, a more complete picture when pricing orders, and the marginal simplification in ETA from pricing and sequencing orders at the same. Of course, it can be argued that the picture already is “complete” in the sense that builders can indicate expected MEV already at the current slot, albeit they may not be fully equipped to evaluate incoming orders in real-time. It can also be argued that <span class=\"math\">W&gt;0</span> and <span class=\"math\">W_T&gt;1</span> needlessly increase uncertainty and analytical complexity for builders as well as developers. As an example, builders may place an order several slots before a spike, but still need to pay closer to the real expected value of the MEV they are about to receive (priced closer to proposal time).</p>\n<h4><a name=\"h-422-equations-13\" class=\"anchor\" href=\"https://ethresear.ch#h-422-equations-13\"></a>4.2.2 Equations</h4>\n<p>A rudimentary example will now be provided. Should this general mechanism be pursued, the exact price controller would have to be determined by reasoning about how quickly the price should adapt to changes in the willingness to buy tickets, sensitivity to ticket saturation, interplay between saturation and delta, sensitivity to MEV induction (see the next subsection), and by running simulations of the purchase process.</p>\n<p>Ticket saturation and delta from the previous subsection is first weighed by window length and desired number of outstanding tickets</p>\n<div class=\"math\">\nw_s=\\frac{T_s}{c_s\\hat{T}}, \\quad w_{\\delta}=\\frac{T_{\\delta}}{c_{\\delta}W_T},\n</div>\n<p>using the constants <span class=\"math\">c_s=2^3</span> and <span class=\"math\">c_{\\delta}=2^6</span>. The percentage change <span class=\"math\">w</span> to the ticket price applied each slot is</p>\n<div class=\"math\">\nw=(1+w_s)(1+w_{\\delta})^k.\n</div>\n<p>This post uses <span class=\"math\">k=2</span>, ensuring a non-linear price response as <span class=\"math\">T_{\\delta}</span> grows. This can be particularly relevant at shorter windows <span class=\"math\">W_T</span>. Setting <span class=\"math\">k=3</span> is also viable. The constant <span class=\"math\">c_{\\delta}</span> can then alternatively be increased to offer better pricing granularity at a lower ticket delta, while still offering some guarantees regarding the maximum number of orders that may come in during one slot. The price <span class=\"math\">p</span> updates from its level at the previous slot <span class=\"math\">p_0</span> to its level at the present slot <span class=\"math\">p_1</span> as</p>\n<div class=\"math\">\np_1=w \\times p_0.\n</div>\n<h4><a name=\"h-423-visualizations-14\" class=\"anchor\" href=\"https://ethresear.ch#h-423-visualizations-14\"></a>4.2.3 Visualizations</h4>\n<p>Figure 2 illustrates what a pricing schedule according to <span class=\"math\">w</span> would look like for the outlined equations, with <span class=\"math\">\\hat{T}=4096</span> and <span class=\"math\">W_T=32</span>. The yellow band stipulates no price change (<span class=\"math\">w=1</span>), and passes through the intersection of the black lines, which correspond to a neutral ticket delta (x-axis) and saturation (y-axis). There have been suggestions of much <a href=\"https://www.youtube.com/watch?v=IrJz4GZW-VM\">higher</a> <span class=\"math\">\\hat{T}</span>. This issue relates to a wide range of <a href=\"https://ethresear.ch/t/economic-analysis-of-execution-tickets/18894\">considerations</a> that are not the focus of this post.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/8/383433ceb5b2bfb3db8a88907125d3d913dc871b.png\" data-download-href=\"https://ethresear.ch/uploads/default/383433ceb5b2bfb3db8a88907125d3d913dc871b\" title=\"Figure 2\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/8/383433ceb5b2bfb3db8a88907125d3d913dc871b_2_668x500.png\" alt=\"Figure 2\" data-base62-sha1=\"81cA2X3xDJh8wsLvYBM8kqj51OP\" width=\"668\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/8/383433ceb5b2bfb3db8a88907125d3d913dc871b_2_668x500.png, https://ethresear.ch/uploads/default/optimized/3X/3/8/383433ceb5b2bfb3db8a88907125d3d913dc871b_2_1002x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/3/8/383433ceb5b2bfb3db8a88907125d3d913dc871b_2_1336x1000.png 2x\" data-dominant-color=\"D5D798\"></a></div><p></p>\n<p><strong>Figure 2.</strong> Rudimentary example for <span class=\"math\">W_T=32</span> of a percentage change in ticket price  that varies with delta in ticket sales and the overall saturation of tickets in the pool. Black lines indicate a neutral delta (one ticket sold per slot) and saturation (<span class=\"math\">T=\\hat{T}</span>).</p>\n<p>Figure 3 instead shows a pricing schedule when <span class=\"math\">W_T=1</span> using the same equation and settings as previously. If no orders come in during the measured slot, <span class=\"math\">T_{\\delta}=-1</span>. Note that the colormap is log-scaled to capture the large increase in <span class=\"math\">w</span> that is instituted if 64 orders were to come in during a single slot. When <span class=\"math\">T_W=32</span> (Figure 2), a large jump in orders would affect the price for 32 consecutive slots (assuming an asymmetric window), before the purchase takes place, and so <span class=\"math\">w</span> will naturally be lower on a per-slot basis.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/f/4f34c0d1471b29367616a9d71dc0a1fe156cfd73.png\" data-download-href=\"https://ethresear.ch/uploads/default/4f34c0d1471b29367616a9d71dc0a1fe156cfd73\" title=\"Figure 3\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/f/4f34c0d1471b29367616a9d71dc0a1fe156cfd73_2_659x500.png\" alt=\"Figure 3\" data-base62-sha1=\"biGK5tIG3wkv0wQsVDuj8Hj5oEX\" width=\"659\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/f/4f34c0d1471b29367616a9d71dc0a1fe156cfd73_2_659x500.png, https://ethresear.ch/uploads/default/optimized/3X/4/f/4f34c0d1471b29367616a9d71dc0a1fe156cfd73_2_988x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/f/4f34c0d1471b29367616a9d71dc0a1fe156cfd73_2_1318x1000.png 2x\" data-dominant-color=\"92C888\"></a></div><p></p>\n<p><strong>Figure 3.</strong> Rudimentary example for <span class=\"math\">W_T=1</span> of a percentage change in ticket price that varies with delta in ticket sales and the overall saturation of tickets in the pool. Black lines indicate a neutral delta (one ticket sold in the slot) and saturation (<span class=\"math\">T=\\hat{T}</span>).</p>\n<p>The relative change at <span class=\"math\">W_T=1</span> for different <span class=\"math\">T_{\\delta}</span> is shown in Figure 4, at a neutral ticket saturation (<span class=\"math\">T_s=0</span>). The price change instituted with this setting for between 0 to 4 orders is {0.969, 1, 1.031 1.063 1.096}. The same granularity can be preserved at lower quantities of orders while further raising the price at higher quantities, by increasing <span class=\"math\">k</span>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/1/b1cd5d40cffb62dcaa44cc90cb317c9a4f0ebb76.png\" data-download-href=\"https://ethresear.ch/uploads/default/b1cd5d40cffb62dcaa44cc90cb317c9a4f0ebb76\" title=\"Figure 4\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/1/b1cd5d40cffb62dcaa44cc90cb317c9a4f0ebb76_2_690x325.png\" alt=\"Figure 4\" data-base62-sha1=\"pmUvcg4wWb5Omxv0oMDzf2J7QW2\" width=\"690\" height=\"325\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/1/b1cd5d40cffb62dcaa44cc90cb317c9a4f0ebb76_2_690x325.png, https://ethresear.ch/uploads/default/optimized/3X/b/1/b1cd5d40cffb62dcaa44cc90cb317c9a4f0ebb76_2_1035x487.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/1/b1cd5d40cffb62dcaa44cc90cb317c9a4f0ebb76_2_1380x650.png 2x\" data-dominant-color=\"F9F9FA\"></a></div><p></p>\n<p><strong>Figure 4.</strong> Rudimentary example for <span class=\"math\">W_T=1</span>, focusing on the relative price change <span class=\"math\">w</span> across <span class=\"math\">T_{\\delta}</span> at a neutral saturation. If 60 orders come in during a single slot, the price rises sharply.</p>\n<p>Figure 5 instead plots the response at <span class=\"math\">T_{\\delta}=-1</span> across <span class=\"math\">T_s</span>. In other words, it shows how the price would change if no purchase orders are registered.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/8/885e3dfacabd2f85c9ee4480a30e67576cb30f5b.png\" data-download-href=\"https://ethresear.ch/uploads/default/885e3dfacabd2f85c9ee4480a30e67576cb30f5b\" title=\"Figure 5\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/8/885e3dfacabd2f85c9ee4480a30e67576cb30f5b_2_690x312.png\" alt=\"Figure 5\" data-base62-sha1=\"jsmQCEMhwb1hs5UPdido8aPas1d\" width=\"690\" height=\"312\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/8/885e3dfacabd2f85c9ee4480a30e67576cb30f5b_2_690x312.png, https://ethresear.ch/uploads/default/optimized/3X/8/8/885e3dfacabd2f85c9ee4480a30e67576cb30f5b_2_1035x468.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/8/885e3dfacabd2f85c9ee4480a30e67576cb30f5b_2_1380x624.png 2x\" data-dominant-color=\"F7F7F8\"></a></div><p></p>\n<p><strong>Figure 5.</strong> Rudimentary example for <span class=\"math\">W_T=1</span>, focusing on the relative price change <span class=\"math\">w</span> across <span class=\"math\">T_s</span> when no purchase order comes in.</p>\n<h3><a name=\"h-43-windowing-and-slot-surge-pricing-15\" class=\"anchor\" href=\"https://ethresear.ch#h-43-windowing-and-slot-surge-pricing-15\"></a>4.3 Windowing and slot surge pricing</h3>\n<p>In the outlined pricing mechanism, there is a remaining opportunity for the beacon proposer to derive some MEV at shorter windows <span class=\"math\">T_W</span>. This happens during a sudden spike in interest for purchasing tickets between the point where attesters have observed purchase orders and the slot boundary.</p>\n<p>Let <span class=\"math\">n_a</span> be the equilibrium quantity of orders that would have come in during a slot if a spike happened before the attester observation deadline (purple arrows in Figure 1). Builders keep track of incoming orders and calculate the current ticket price, which when compared to the updated expected MEV <span class=\"math\">V_e</span> produces <span class=\"math\">n_a</span> orders. If a spike comes in after the attester deadline, the proposer has exclusivity and could (be paid to) include only a subset of the orders <span class=\"math\">n_p</span>. The surplus MEV for the proposer emerges from providing a lower expected purchase price for each order it lets through. This is a monopoly pricing regime, wherein the proposer sells spots at a price approaching <span class=\"math\">V_e-p_1</span>. It determines <span class=\"math\">n_p</span> to maximize its revenue <span class=\"math\">R(n_p)</span>, in accordance with the revenue function:</p>\n<div class=\"math\">\n\\text{Maximize} \\quad R(n) = n (V_e(n) - p_1(n)).\n</div>\n<p>Here, <span class=\"math\">p_1(n)</span> is based on the price equation provided in the previous subsection. Also note that if many purchase orders come in, <span class=\"math\">V_e</span> might gradually fall (if there is a temporary spike); hence <span class=\"math\">V_e(n)</span>.</p>\n<p><em>Quick edit: some additions/adjustments and referring to the previous subsection, which I had forgotten to do.</em></p>\n<p>As mentioned in the previous subsection, longer windows <span class=\"math\">W_T</span> serve to further starve off MEV. The reason is now clear: bids of the present slot will with longer windows be priced based on information coming in also during subsequent slots. This means that the proposer has less leverage during a sudden spike, since builders will need to pay based on bids that are also observed by attesters (at the fair market price). In Figure 2, the price would be set 32 slots after inclusion in the block, influenced by the bids in these slots. Another way to achieve a similar effect without longer windows is to charge according to the price calculated during the next slot. Here it is important to note that bidders of the next slot cannot materially grief bidders of the present slot. They will also have to pay close to the price of bidders in the current slot, since the price cannot fall substantially between slots at short windows, only rise (also note the discussion of max price in Section 4.4). Yet the downside of heightened uncertainty for builders regarding pricing can be important to keep in mind.</p>\n<p>If the price surges more quickly from a high quantity of purchased tickets within a single slot, the proposer’s potential revenue could also be reduced. Proposers can then sell fewer spots. Furthermore, by letting the price in the next slot not shift as much, oscillations in bid quantity (and potentially price) can be tempered. One way to achieve this is to let <span class=\"math\">w</span> rise more quickly with an increase in bids, set the price in the current slot as previously</p>\n<div class=\"math\">\np_1=w \\times p_0,\n</div>\n<p>but to not incorporate the full price change when setting the value <span class=\"math\">p^*_0</span> that will be used as <span class=\"math\">p_0</span> when pricing the next slot</p>\n<div class=\"math\">\np^*_0=\\left(1+\\frac{1-w}{c_w}\\right) \\times p_0.\n</div>\n<p>The constant <span class=\"math\">c_w</span> is then set above 1. During a spike in expected value up to a new baseline <span class=\"math\">V_e</span>, the price would then theoretically stay rather fixed (at a new higher level) for subsequent slots, with the number of orders in each slot gradually decreasing, until it proceeds at the regular pace of one purchase order per slot. Yet note that if <span class=\"math\">V_e</span> rises from a temporary opportunity, there will be a bit more MEV for the proposer to extract still, because a lot of the value can depend on getting in early. This further depends on if the mechanism is ET or ETA and the size of the ticket pool. It is also important to note that a price surge means giving up some bid granularity. The discussion offers some further thoughts on bid granularity and the proposer’s ability to extract MEV.</p>\n<p>As a concluding remark, it should always be remembered that a big ticket pool acts to temper fluctuations in the expected value of tickets. The buyer does not necessarily buy the right to sell tickets within the next couple of epochs, but rather within the next couple of hours, days, weeks or months, depending on the setting for <span class=\"math\">\\hat{T}</span>—and it turns out that when measured over longer periods, the level of the MEV has been <a href=\"https://youtu.be/IrJz4GZW-VM?feature=shared&amp;t=1241\">very stable</a> in Ethereum.</p>\n<h3><a name=\"h-44-the-role-of-a-maximum-price-16\" class=\"anchor\" href=\"https://ethresear.ch#h-44-the-role-of-a-maximum-price-16\"></a>4.4 The role of a maximum price</h3>\n<p>Each buyer assigns a max price to the order. This is the value that needs to be backed by the debit account. If the max price is insufficient at the time of pricing, such that the actual price is higher, the builder does not receive a ticket/slot. Yet builders could make unbacked orders to starve off competitors, which would bring down the purchase price. It seems desirable to not force builders to analyze the balances of every competitor to determine which bids are real and which are “fake”. One simple way to avoid such a situation is to penalize builders for placing orders that turn out to be unbacked at the time of purchase. This can potentially be combined with setting a validity rule requiring some minimum max price, either relative to the prevailing price at bid time, or/and as a fixed overall minimum.</p>\n<p>Penalizing builders however exacerbates another potential issue. During an unforeseen spike in expected MEV, there are circumstances where a builder could “liquidate” its competitors’ bids if the current purchase price is close to their stipulated maximum. A builder could enter new bids forcing other builders out, to penalize them and gain cheaper tickets. For this reason, the mechanism could reduce gameability and the risks as well as improve capital efficiency for builders by stipulating an absolute maximum purchase price. A builder that bids the absolute maximum is guaranteed to not get liquidated and will always receive a ticket. This does not mean that the protocol will burn less MEV, merely that in times of extremely high expected MEV, there will temporarily be a higher quantity of bids, wherein each order has a lower chance of actually getting one of the desirable profitable slots.</p>\n<p>What should the absolute maximum be set to if this path is pursued? In <a href=\"https://flashbots-data.s3.us-east-2.amazonaws.com/index.html\">data</a> provided by <a href=\"https://www.flashbots.net/\">Flashbots</a> spanning 2.7 million blocks between the last quarter of 2022 and the third quarter of 2023, the maximum average <a href=\"https://hackmd.io/@flashbots/quantifying-REV\">REV</a> across 64 slots is 19.5 ETH. The peak average is skewed by a few spurious blocks with REV of several 100 ETH that may have been hard to predict beforehand. This average does therefore not represent a realistic expected MEV for builders bidding many slots in advance. Expand the window by a factor of 4 to 256 and the maximum average falls almost by a factor of 4, to 5.25. Setting the absolute maximum to 5 ETH would thus presumably not influence the auction even in times of extreme market conditions, since that price would hardly ever be reached.</p>\n<h2><a name=\"h-5-discussion-17\" class=\"anchor\" href=\"https://ethresear.ch#h-5-discussion-17\"></a>5. Discussion</h2>\n<p>A MEV resistant dynamic pricing auction for selling execution proposal rights has been presented, relevant to the research of both ETs and EAs. It seeks to remove agency from the beacon proposer, thus inducing less MEV. This is achieved by having every order result in a sale, and every order coming in during the same slot having the same expected sales price. The execution ticket auction (ETA) sequences orders directly for proposal by leveraging the RANDAO. Orders that came in during the same slot can otherwise be minted collectively into tickets, with sequencing pursued at a later stage in accordance with the ET proposal.</p>\n<p>If pursuing this auction mechanism, the dynamic pricing step would require substantial analysis. One sensitive part is the balance between moderating changes in the supply of orders while still offering sufficient pricing granularity. A high <span class=\"math\">k</span> can be useful here. Another potential avenue is to hold the auction less frequently. The expected timing of orders within the slot would also be interesting to study—orders can be placed early to starve off others, or late to gain better information. One could even theorize that some builders will wait until after the attester deadline, and then pay the proposer a small fee for exclusive post-deadline inclusion (the benefit being to avoid race conditions).</p>\n<p>Transactions to fund or withdraw from a builder’s debit account would need to be synchronized with the validity check to avoid race conditions. It may be convenient to expand the role of the debit account if it is desirable to subject builders to slashing or penalties at the execution proposal stage. In other words, the debit account might also function as a stake.</p>\n<p>Just as with MEV pricing auctions, attesters accepting or rejecting a block based on some observation deadline is potentially sensitive. However, this particular design should hopefully be less so, since there will only be one order on average per block to observe, and less value (even potentially negative) in bidding later in the block. A potential benefit of an auction administered instead at the execution layer is the “endogenous” component, facilitating a higher burn; the value of a ticket increases if the current ticket holder can extract value from future ticket holders through MEV. However, this direction raises gameability concerns if a single actor can come to monopolize the auction (ILs may here be useful). A MEV resistant mechanism, as here proposed, originating at the consensus layer, therefore seems like a viable direction.</p>\n<p>It might seem tempting to replicate some facets of the proposed design for transaction processing: making the protocol more MEV resistant by having attesters observe transactions, the protocol sequence them by RANDAO, and the price adjust in a slot-delimited fashion. However, the requirements for transactions are different than for the purchase orders of execution rights analyzed in this post (e.g., time, quantity). Translating the ideas of this post directly to transaction processing might therefore unfortunately be difficult. Yet the proposed mechanism could perhaps lend some inspiration going forward.</p>\n<p>It should be noted that multi-block MEV is a separate topic of concern. The proposed mechanism is resistant to inducing MEV at the purchase stage but does not preclude multi-block MEV. This is a general issue and an underexplored topic at this point in time. Censorship resistance is likewise an important problem not addressed by the auction mechanism. Various strategies, such as ILs (<a href=\"https://ethresear.ch/t/fork-choice-enforced-inclusion-lists-focil-a-simple-committee-based-inclusion-list-proposal/19870\">1</a>, <a href=\"https://ethresear.ch/t/one-bit-per-attester-inclusion-lists/19797\">2</a>, <a href=\"https://ethresear.ch/t/unconditional-inclusion-lists/18500\">3</a>), have been proposed. Whether the presented auction mechanism can be one part of an overall architecture that also tackles other issues remains to be explored.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/mev-resistant-dynamic-pricing-auction-of-execution-proposal-rights/20024\">Read full topic</a></p>","link":"https://ethresear.ch/t/mev-resistant-dynamic-pricing-auction-of-execution-proposal-rights/20024","pubDate":"Tue, 09 Jul 2024 10:52:26 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20024"},"source":{"@url":"https://ethresear.ch/t/mev-resistant-dynamic-pricing-auction-of-execution-proposal-rights/20024.rss","#text":"MEV resistant dynamic pricing auction of execution proposal rights"},"filter":false},{"title":"Deep Diving Attestations - A quantitative analysis","dc:creator":"Nero_eth","category":"Data Science","description":"<h1><a name=\"deep-diving-attestations-1\" class=\"anchor\" href=\"https://ethresear.ch#deep-diving-attestations-1\"></a>Deep Diving Attestations</h1>\n<p><em>I want to provide some quantitative stats on…</em></p>\n<ul>\n<li><em>Head</em>-, <em>target</em>-, and <em>source</em> votes,</li>\n<li>The individual node operators’ attestation performance, including the best and worst validators,</li>\n<li>Attestation <em>timing</em> and <em>inclusion delay</em>, and</li>\n<li>The impact of <em>MEV-Boost, CL clients, Proposer Timing Games</em> and <em>Big Blocks with Blobs</em> on attestation accuracy.</li>\n</ul>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/2/a/2a11d5d44000665f0ed449873280783c5e163cd6.png\" alt=\"doge\" data-base62-sha1=\"60agt9sKBsL0HUK9DTHZ6ETjn2C\" width=\"459\" height=\"458\"></p>\n<p><em>Many thanks to <a href=\"https://x.com/casparschwa\">Caspar</a>, <a href=\"https://x.com/dapplion\">DappLion</a>, <a href=\"https://x.com/barnabemonnot\">Barnabé</a> and <a href=\"https://x.com/potuz_eth\">Potuz</a> for their feedback and review!</em></p>\n<h2><a name=\"data-2\" class=\"anchor\" href=\"https://ethresear.ch#data-2\"></a>Data</h2>\n<p>I use data ranging from slot 9,169,184 to slot 9,392,415, amounting to 6,975 epochs, 31 days of data.<br>\nThe goal is to provide some initial results from analyzing attestations, as a warm-up for analyzing correlated attestation penalties (<a href=\"https://eips.ethereum.org/EIPS/eip-7716\">EIP-7716</a>).<br>\nSome of the data is collected by myself using custom parsing scripts. Other data was provided by <a href=\"https://ethpandaops.io/\">EthPandaOps</a>. This includes timing data collected from running nodes of <strong>every client</strong> in the regions <strong>Sydney</strong>, <strong>Helsinki</strong>, and <strong>San Francisco</strong>, with all nodes being <strong>subscribed to all subnets</strong>. For classifying CL clients, the <a href=\"https://github.com/sigp/blockprint\">blockprint</a> tool was used.</p>\n<blockquote>\n<p>Importantly, my solo staker categorization is done very conservatively to avoid confusing professional entities with solo stakers. In total, my dataset contains 8,488 validators classified as solo stakers.</p>\n</blockquote>\n<p>The code for creating the charts is published in <a href=\"https://github.com/nerolation/eth-deep-diving-attestations\">this repo.</a></p>\n<h2><a name=\"attestations-3\" class=\"anchor\" href=\"https://ethresear.ch#attestations-3\"></a>Attestations</h2>\n<h3><a name=\"the-basics-4\" class=\"anchor\" href=\"https://ethresear.ch#the-basics-4\"></a>The Basics</h3>\n<p><a href=\"https://eth2book.info/capella/part2/consensus/\">Attestations</a> are at the core of Ethereum. Through attesting to past checkpoints, Ethereum’s validators agree on a state to become irreversible (<a href=\"https://eth2book.info/capella/part2/consensus/casper_ffg/\">Casper FFG</a>). Furthermore, validators use attestations to agree upon the tip of the chain, deciding which transactions get confirmed and which don’t (<a href=\"https://eth2book.info/capella/part2/consensus/lmd_ghost/\">LMD GHOST</a>).<br>\nEvery validator, backed by its stake, participates in every epoch and is randomly assigned a slot, during which it is expected to broadcast its view of the chain through attesting.</p>\n<p><strong>An attestation contains three things:</strong></p>\n<ul>\n<li>A <em>source</em> vote: The block (and all predecessors) to be finalized</li>\n<li>A <em>target</em> vote: The block (and all predecessors) to be justified (=pre-finalized)</li>\n<li>A <em>head</em> vote: The block seen as the head of the chain.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/8/98c353dd9366c270a1d3ef3b75c9efaec79c4fcd.png\" data-download-href=\"https://ethresear.ch/uploads/default/98c353dd9366c270a1d3ef3b75c9efaec79c4fcd\" title=\"epochslotvalidator\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/8/98c353dd9366c270a1d3ef3b75c9efaec79c4fcd_2_690x182.png\" alt=\"epochslotvalidator\" data-base62-sha1=\"lNp3U1hqvFp1dMXFQPnHfHvoLZX\" width=\"690\" height=\"182\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/8/98c353dd9366c270a1d3ef3b75c9efaec79c4fcd_2_690x182.png, https://ethresear.ch/uploads/default/optimized/3X/9/8/98c353dd9366c270a1d3ef3b75c9efaec79c4fcd_2_1035x273.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/9/8/98c353dd9366c270a1d3ef3b75c9efaec79c4fcd_2_1380x364.png 2x\" data-dominant-color=\"ECEFF0\"></a></div><p></p>\n<p>Since the <a href=\"https://ethereum.org/en/history/\">Deneb hardfork</a> that included <a href=\"https://eips.ethereum.org/EIPS/eip-7045\">EIP-7045</a>, attestations for a slot in epoch N can be included up until the end of epoch N+1. However, <a href=\"https://eth2book.info/capella/part2/incentives/rewards/\">inclusion doesn’t guarantee a reward</a>:<br>\nTo be rewarded, a validator must ensure its source vote is included within 5 slots. The target vote has to be included within 32 slots to be rewarded. Head votes must be included in the following slot to be eligible for a reward.</p>\n<p>As of today, Ethereum counts <a href=\"https://beaconcha.in/charts/validators\">~1.03</a> million validators. This means we have 1.03 million votes every epoch, ~32,000 every slot. In one day, with 225 epochs, there are approximately 225 million attestations. This data grows quite fast.</p>\n<p>If the <strong>source vote</strong> is <strong>invalid</strong>, then the <strong>target</strong> and <strong>head vote</strong> <strong>MUST</strong> be <strong>invalid</strong> too.</p>\n<p>A slot can be broken down into 3 phases:<br>\n<img src=\"https://ethresear.ch/uploads/default/original/3X/f/3/f3248a045ba6759fb78e4845294714b5abf18072.png\" alt=\"slottime (2)\" data-base62-sha1=\"yGWjdNG47KqD5gHpp6cCCxHAMw2\" width=\"633\" height=\"91\"></p>\n<ol>\n<li>Validators attest when they have seen a block for the current slot or at second 4 in the slot - the attestation deadline. A block broadcasted at second 0 in the slot has 4 seconds to be seen by all relevant validators and collect votes. Late blocks risk not receiving enough attestations and being reorged by a subsequent block.</li>\n<li>Between second 4 and 8 in the slot, attestations are <a href=\"https://eth2book.info/capella/part2/building_blocks/aggregator/\">aggregated</a> and broadcasted by selected validators.</li>\n<li>Eventually, the subsequent block proposer includes them into its block.</li>\n</ol>\n<blockquote>\n<p>For more in-depth explanations check out this post by Georgios and Mike on “<a href=\"https://www.paradigm.xyz/2023/04/mev-boost-ethereum-consensus\">Time, slots, and the ordering of events in Ethereum Proof-of-Stake</a>”.</p>\n</blockquote>\n<h3><a name=\"definitions-5\" class=\"anchor\" href=\"https://ethresear.ch#definitions-5\"></a>Definitions</h3>\n<p><strong>Missed vs. Failed:</strong></p>\n<ul>\n<li>A validator can either <strong>miss</strong> its attestation (<em>missed</em>) or attest to a <strong>wrong</strong> checkpoint (<em>failed</em>).</li>\n<li><strong>Missed attestations</strong> can happen if the node running the validator is out of sync or offline.</li>\n<li><strong>Voting for a wrong checkpoint</strong>, e.g. a wrong head, can have various reasons like receiving a block too late, being out of sync or even having a bug, etc.</li>\n<li><strong>Regardless of the reason, a <em>failed</em> vote tells us one important fact about a validator—it is online.</strong></li>\n</ul>\n<p>In the following, we’ll also need the term <em><strong>“high-performing validator”</strong></em> which is a validator that hasn’t failed to cast a correct and timely head vote over the complete time frame analyzed.</p>\n<h3><a name=\"attestation-inclusion-delay-6\" class=\"anchor\" href=\"https://ethresear.ch#attestation-inclusion-delay-6\"></a>Attestation Inclusion Delay</h3>\n<p>In the best case, attestations are included in the block of the <strong>next slot</strong>, causing a <strong>delay of 1</strong>. Sometimes, especially when the next proposer is offline or gets reorged, attestations are not included in the next slot. Then, the validator misses out on the rewards from the correct head vote, even though the attestation can still be included in a later block.</p>\n<p>The following chart shows the distribution of the inclusion delay over seconds 1-63 and the <strong>clients the attesters were using</strong>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/5/b52032561b50bc6d79d4c6393a20510b9f8ac404.png\" data-download-href=\"https://ethresear.ch/uploads/default/b52032561b50bc6d79d4c6393a20510b9f8ac404\" title=\"correct_head_delay_clients\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/5/b52032561b50bc6d79d4c6393a20510b9f8ac404_2_690x316.png\" alt=\"correct_head_delay_clients\" data-base62-sha1=\"pQjoZxfqx1BzIQQH7wr3xDaVtEE\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/5/b52032561b50bc6d79d4c6393a20510b9f8ac404_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/b/5/b52032561b50bc6d79d4c6393a20510b9f8ac404_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/b/5/b52032561b50bc6d79d4c6393a20510b9f8ac404.png 2x\" data-dominant-color=\"F8F7F7\"></a></div><p></p>\n<ul>\n<li>95.85% of attestations are included in the next slot.</li>\n<li>~1.2% of attestations are included in the slot after the next.</li>\n<li>When a new epoch begins, old attestations are again picked up and finally included.\n<ul>\n<li>This is weird (<em>but there’ll be an explanation little down below</em>).</li>\n<li>Attestations of validators of all clients are affected.</li>\n</ul>\n</li>\n</ul>\n<p><strong>This raises the question, “<em>what are clients doing?</em>”</strong></p>\n<p>Examples include slots <strong><a href=\"https://beaconcha.in/slot/9267438#attestations\">9267438</a></strong> with a delay of 35 (5250 validators), <strong><a href=\"https://beaconcha.in/slot/9267425#attestations\">9267425</a></strong> with a delay of 52 (1813 validators), or slot <strong><a href=\"https://beaconcha.in/slot/9267427#attestations\">9267427</a></strong> with a delay of 36 slots (1305 validators).</p>\n<p>What if those late attestations were already included earlier and were later just included again (h/t <a href=\"https://github.com/dapplion\">dapplion</a>)? To analyze that, we reproduce the above chart but separate by <em><strong>first inclusion</strong></em> and <em><strong>every following inclusion</strong></em>:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/8/a8cfb4ec1e6b9486dbafddb9587eeb55be1b3d1c.png\" data-download-href=\"https://ethresear.ch/uploads/default/a8cfb4ec1e6b9486dbafddb9587eeb55be1b3d1c\" title=\"correct_head_delay_reinclusion\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/8/a8cfb4ec1e6b9486dbafddb9587eeb55be1b3d1c_2_690x316.png\" alt=\"correct_head_delay_reinclusion\" data-base62-sha1=\"o5ndVxO5epPvUaQJQnS7HrOkCh6\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/8/a8cfb4ec1e6b9486dbafddb9587eeb55be1b3d1c_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/a/8/a8cfb4ec1e6b9486dbafddb9587eeb55be1b3d1c_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/8/a8cfb4ec1e6b9486dbafddb9587eeb55be1b3d1c.png 2x\" data-dominant-color=\"F9F7F6\"></a></div><p></p>\n<p>First, it is interesting that almost <strong>half of the attestations included with a delay of 2 slots</strong> (note: best is 1) <strong>have already been included in an earlier slot</strong>. This is possible because proposers are free to pick attestations that have already been included in the past 63 slots and include them again. Additionally, a block can contain the same attestations multiple times, aggregated differently.</p>\n<p>We can see that the majority of the attestations included in the second hump with a delay of around 35 slots are <strong>reincluded</strong> attestations.</p>\n<p>This raises the question, “<em>why does this occur with a delay of more than 32 slots?</em>”</p>\n<p>In <strong>percentage</strong> terms, we can see the <em>first inclusion</em> share reducing over an increasing delay:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/e/5e9f624dcd52ea92cbfedbd5d0da5ebf1f2113e3.png\" data-download-href=\"https://ethresear.ch/uploads/default/5e9f624dcd52ea92cbfedbd5d0da5ebf1f2113e3\" title=\"correct_head_delay_reinclusion_per\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/e/5e9f624dcd52ea92cbfedbd5d0da5ebf1f2113e3_2_690x316.png\" alt=\"correct_head_delay_reinclusion_per\" data-base62-sha1=\"dv4mnaChZL8f0Uc2zH6RkJsh1MD\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/e/5e9f624dcd52ea92cbfedbd5d0da5ebf1f2113e3_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/5/e/5e9f624dcd52ea92cbfedbd5d0da5ebf1f2113e3_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/e/5e9f624dcd52ea92cbfedbd5d0da5ebf1f2113e3.png 2x\" data-dominant-color=\"F7BF87\"></a></div><p></p>\n<p>To dig deeper into this reinclusion finding, let’s check the <strong>CL clients that built the blocks</strong> that included attestations with &gt;32 slots delay:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/2/62e38ffb13e5375a76e8d567990bbf2dfcd0c9e6.png\" data-download-href=\"https://ethresear.ch/uploads/default/62e38ffb13e5375a76e8d567990bbf2dfcd0c9e6\" title=\"correct_head_delay_clients_proposers\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/2/62e38ffb13e5375a76e8d567990bbf2dfcd0c9e6_2_690x316.png\" alt=\"correct_head_delay_clients_proposers\" data-base62-sha1=\"e6OldZMa4oRuXNAE66hUsiiHjW6\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/2/62e38ffb13e5375a76e8d567990bbf2dfcd0c9e6_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/6/2/62e38ffb13e5375a76e8d567990bbf2dfcd0c9e6_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/2/62e38ffb13e5375a76e8d567990bbf2dfcd0c9e6.png 2x\" data-dominant-color=\"F7F4F2\"></a></div><p></p>\n<p>We can see quite clearly that it’s mainly Prysm proposers who include attestations that have already been included earlier, which is very likely a bug.</p>\n<blockquote>\n<p>The fact that the plot also shows other clients affected might stem from inaccuracies in classifying clients probabilisticly.</p>\n</blockquote>\n<p><em>The Prysm team was notified.</em></p>\n<p><strong>Edit</strong>: <em>The Prysm team was faster in fixing the bug than I was in finishing this post.</em></p>\n<p><strong>Fix</strong>: <a href=\"https://github.com/prysmaticlabs/prysm/pull/14156#event-13323121631\" class=\"inline-onebox\">Increase attestation seen cache exp time to two epochs by terencechain · Pull Request #14156 · prysmaticlabs/prysm · GitHub</a></p>\n<h2><a name=\"missedfailed-attestations-7\" class=\"anchor\" href=\"https://ethresear.ch#missedfailed-attestations-7\"></a>Missed/Failed Attestations</h2>\n<h3><a name=\"missedfailed-head-votes-8\" class=\"anchor\" href=\"https://ethresear.ch#missedfailed-head-votes-8\"></a>Missed/Failed Head Votes</h3>\n<p><strong>Head votes</strong> are the <strong>most difficult</strong> part of an attestation. They need to be cast correctly and timely. Per <a href=\"https://github.com/ethereum/consensus-specs/blob/1642610bd5994d344fb1b6a9f44ec0e14a527580/specs/phase0/validator.md#attesting\">honest validator spec</a>, <strong>validators have 4 seconds</strong> to receive and validate a block for the current slot. If no block is received until second 4, validators attest to the block in the previous slot. <strong>Timeliness in the context of head votes means 1 slot.</strong> Although older head votes can be included, there is no reward for the respective validator.</p>\n<blockquote>\n<p>The legend is ordered in descending order by the sum of missed votes.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/3/2317707179ceb2e3d59cebbda6ca85119edb590e.png\" data-download-href=\"https://ethresear.ch/uploads/default/2317707179ceb2e3d59cebbda6ca85119edb590e\" title=\"missed_head_votes_over_date\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/3/2317707179ceb2e3d59cebbda6ca85119edb590e_2_690x380.png\" alt=\"missed_head_votes_over_date\" data-base62-sha1=\"50qVE6q70t9xp0XQ4aq2TUq0uC2\" width=\"690\" height=\"380\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/3/2317707179ceb2e3d59cebbda6ca85119edb590e_2_690x380.png, https://ethresear.ch/uploads/default/optimized/3X/2/3/2317707179ceb2e3d59cebbda6ca85119edb590e_2_1035x570.png 1.5x, https://ethresear.ch/uploads/default/original/3X/2/3/2317707179ceb2e3d59cebbda6ca85119edb590e.png 2x\" data-dominant-color=\"DCDAD5\"></a></div><p></p>\n</blockquote>\n<p><strong>On average, we observe around ~500 missed or wrong head votes out of ~32k validators per slot and ~16k, out of ~1m, per epoch. This represents around 1.56%.</strong></p>\n<blockquote>\n<p>The entity labeled as <em>unidentified</em> may consist of multiple independent parties, including solo stakers and entities that haven’t been identified yet, and it has a total market share of 20% of all validators.</p>\n</blockquote>\n<p>Assuming every node operator performs equally, the market share of each entity should reflect its share of missed head votes. However, this is not the case and we see certain node operators being superior compared to others.</p>\n<p><strong>The following chart visualizes the delta in the expected number of missed head votes based on market share and the actual number of missed attestations.</strong><br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/8/e8d1dd7c62c93050023fb71efe83f237a54d055b.png\" data-download-href=\"https://ethresear.ch/uploads/default/e8d1dd7c62c93050023fb71efe83f237a54d055b\" title=\"delta_missed_head_votes\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/8/e8d1dd7c62c93050023fb71efe83f237a54d055b_2_690x335.png\" alt=\"delta_missed_head_votes\" data-base62-sha1=\"xdCpfld0EQLrAKlDQPRekIUYHHB\" width=\"690\" height=\"335\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/8/e8d1dd7c62c93050023fb71efe83f237a54d055b_2_690x335.png, https://ethresear.ch/uploads/default/optimized/3X/e/8/e8d1dd7c62c93050023fb71efe83f237a54d055b_2_1035x502.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/8/e8d1dd7c62c93050023fb71efe83f237a54d055b.png 2x\" data-dominant-color=\"F1F2F2\"></a></div><p></p>\n<p>While entities such as <em>Kiln</em>, <em>Ether_fi</em>, <em>Lido</em>, <em>Renzo</em>, <em>Figment</em>, and <em>Stakefish</em> perform better than the average, we observe that Rocketpool validators, Kraken validators, and solo stakers miss up to 3% more head votes than their market share.</p>\n<p><strong>Focusing on the slot indices in epochs, we distinguish between missing a head vote due to being offline and voting for the wrong head.</strong></p>\n<p>The following chart shows the average number of missed/wrong head votes over the slots of an epoch:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/9/f975b9422a722e62e609aa65aaa40ecc1f722ac7.png\" data-download-href=\"https://ethresear.ch/uploads/default/f975b9422a722e62e609aa65aaa40ecc1f722ac7\" title=\"failed_missed_head_votes\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/9/f975b9422a722e62e609aa65aaa40ecc1f722ac7_2_690x316.png\" alt=\"failed_missed_head_votes\" data-base62-sha1=\"zAP6WgGXD2KQ5yz2VLmSyidJ6cv\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/9/f975b9422a722e62e609aa65aaa40ecc1f722ac7_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/f/9/f975b9422a722e62e609aa65aaa40ecc1f722ac7_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/f/9/f975b9422a722e62e609aa65aaa40ecc1f722ac7.png 2x\" data-dominant-color=\"F7EADC\"></a></div><p></p>\n<p>From the above chart, we can infer:</p>\n<ul>\n<li>There is a fairly <strong>constant number of <em>missed</em> head votes</strong>.\n<ul>\n<li><strong>This is expected</strong> as <em>lost-key validators</em> contribute a constant portion to that category.</li>\n</ul>\n</li>\n<li>The beginning of an epoch, particularly the first slot, has significantly more wrong head votes than the rest.\n<ul>\n<li><strong>This is expected</strong> because the proposer in the first slot has to carry out the <strong>epoch transition</strong>. It must then broadcast that block to reach all attesters. T</li>\n</ul>\n</li>\n<li>The average amount of missed/wrong head votes is <strong>3 times larger</strong> in the first slot of an epoch than in the epochs 2-32.</li>\n</ul>\n<p>Focusing on missed head votes and CL clients, we cannot see anything suspicious in the following chart:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/7/f7cbecfb8118dcd5ca0e37e04df641e8c1c994e4.png\" data-download-href=\"https://ethresear.ch/uploads/default/f7cbecfb8118dcd5ca0e37e04df641e8c1c994e4\" title=\"failed_missed_head_votes_over_clclient\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/7/f7cbecfb8118dcd5ca0e37e04df641e8c1c994e4_2_690x287.png\" alt=\"failed_missed_head_votes_over_clclient\" data-base62-sha1=\"zm6QkqQXC5J5TrebUL0vUOf4VVy\" width=\"690\" height=\"287\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/7/f7cbecfb8118dcd5ca0e37e04df641e8c1c994e4_2_690x287.png, https://ethresear.ch/uploads/default/optimized/3X/f/7/f7cbecfb8118dcd5ca0e37e04df641e8c1c994e4_2_1035x430.png 1.5x, https://ethresear.ch/uploads/default/original/3X/f/7/f7cbecfb8118dcd5ca0e37e04df641e8c1c994e4.png 2x\" data-dominant-color=\"DED7CE\"></a></div><p></p>\n<p>In general, it looks like all CL clients are affected by early-in-epoch misses the same:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/5/75c8e90cf46709ceb37998916b3ea77c7b9dfe88.png\" data-download-href=\"https://ethresear.ch/uploads/default/75c8e90cf46709ceb37998916b3ea77c7b9dfe88\" title=\"failed_missed_head_votes_over_clclient_over_slot\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/5/75c8e90cf46709ceb37998916b3ea77c7b9dfe88_2_690x316.png\" alt=\"failed_missed_head_votes_over_clclient_over_slot\" data-base62-sha1=\"gNYjndghA4eOQZJ6mfg5ap4qlIY\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/5/75c8e90cf46709ceb37998916b3ea77c7b9dfe88_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/7/5/75c8e90cf46709ceb37998916b3ea77c7b9dfe88_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/7/5/75c8e90cf46709ceb37998916b3ea77c7b9dfe88.png 2x\" data-dominant-color=\"EEEBE9\"></a></div><p></p>\n<h3><a name=\"missedfailed-target-votes-9\" class=\"anchor\" href=\"https://ethresear.ch#missedfailed-target-votes-9\"></a>Missed/Failed Target Votes</h3>\n<p>Target votes are already easier to get right. The only exception is the first slot of an epoch that follows the <strong>epoch boundary</strong>: In such cases, the head vote equals the target vote and validators having their target vote wrong tend to vote for the parent block (=the block in the last slot of the previous epoch) instead.</p>\n<p>On average, we observe around 150 missed target votes per slot and 4,800 per epoch. This represents around <strong>0.48%</strong> of all validators.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/7/570b69e8ccefa7585e259961fa4afa09206a1663.png\" data-download-href=\"https://ethresear.ch/uploads/default/570b69e8ccefa7585e259961fa4afa09206a1663\" title=\"missed_target_votes_over_date\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/7/570b69e8ccefa7585e259961fa4afa09206a1663_2_690x380.png\" alt=\"missed_target_votes_over_date\" data-base62-sha1=\"cq1ZBJnq2Kyrx5uC72yhnFlNBET\" width=\"690\" height=\"380\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/7/570b69e8ccefa7585e259961fa4afa09206a1663_2_690x380.png, https://ethresear.ch/uploads/default/optimized/3X/5/7/570b69e8ccefa7585e259961fa4afa09206a1663_2_1035x570.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/7/570b69e8ccefa7585e259961fa4afa09206a1663.png 2x\" data-dominant-color=\"CFD2D1\"></a></div><p></p>\n<p>Visualizing the same over the different CL clients, we see all clients affected to extents close to their market share.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/8/b8284e30b6f3f61ed8a95d5989a6417c275f82bc.png\" data-download-href=\"https://ethresear.ch/uploads/default/b8284e30b6f3f61ed8a95d5989a6417c275f82bc\" title=\"failed_missed_target_votes_over_clclient\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/8/b8284e30b6f3f61ed8a95d5989a6417c275f82bc_2_690x287.png\" alt=\"failed_missed_target_votes_over_clclient\" data-base62-sha1=\"qh8cVFhzbtsVNxscKFTDyOg8Y5m\" width=\"690\" height=\"287\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/8/b8284e30b6f3f61ed8a95d5989a6417c275f82bc_2_690x287.png, https://ethresear.ch/uploads/default/optimized/3X/b/8/b8284e30b6f3f61ed8a95d5989a6417c275f82bc_2_1035x430.png 1.5x, https://ethresear.ch/uploads/default/original/3X/b/8/b8284e30b6f3f61ed8a95d5989a6417c275f82bc.png 2x\" data-dominant-color=\"D9CFC4\"></a></div><p></p>\n<p>Looking at the entities that perform better than others, we again see operators such as Lido, Renzo, Mantle, Coinbase, etc. outperforming the average.</p>\n<blockquote>\n<p>Notably, Lido isn’t a single NO but consists of multiple operators that I combined for simplicity.</p>\n</blockquote>\n<p>On the other hand, Rocketpool validators and solo stakers perform worse and miss up to 3% more target votes than expected.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/2/32fd263353a3e550dfd8c878b8f9c3b8231d6965.png\" data-download-href=\"https://ethresear.ch/uploads/default/32fd263353a3e550dfd8c878b8f9c3b8231d6965\" title=\"delta_missed_target_votes\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/2/32fd263353a3e550dfd8c878b8f9c3b8231d6965_2_690x335.png\" alt=\"delta_missed_target_votes\" data-base62-sha1=\"7h4f4XEMUcHSdv4PJSlmxLwfw8d\" width=\"690\" height=\"335\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/2/32fd263353a3e550dfd8c878b8f9c3b8231d6965_2_690x335.png, https://ethresear.ch/uploads/default/optimized/3X/3/2/32fd263353a3e550dfd8c878b8f9c3b8231d6965_2_1035x502.png 1.5x, https://ethresear.ch/uploads/default/original/3X/3/2/32fd263353a3e550dfd8c878b8f9c3b8231d6965.png 2x\" data-dominant-color=\"F5F6F6\"></a></div><p></p>\n<p>As seen in <a href=\"https://ethresear.ch/t/the-second-slot-itch-statistical-analysis-of-reorgs/16333\">previous analysis</a> on reorgs, epoch boundaries can cause troubles for certain validators when it comes to proposing a block.<br>\n<strong>Blocks are more frequently reorged if they are proposed in the first or second slot of an epoch.</strong> Thus, we would expect those blocks to be responsible for the largest split-views among validators, causing some to attest to the current block, and others to the parent block.</p>\n<p>Even though expected, we can see that the slot index in an epoch has a major impact on failed target votes:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/0/20b331e0885aaa2efed7972a75ecbe489ab8dd26.png\" data-download-href=\"https://ethresear.ch/uploads/default/20b331e0885aaa2efed7972a75ecbe489ab8dd26\" title=\"failed_missed_target_votes\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/0/20b331e0885aaa2efed7972a75ecbe489ab8dd26_2_690x316.png\" alt=\"failed_missed_target_votes\" data-base62-sha1=\"4FhcxiMZKhtGsdy0n9xbR9TPeaa\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/0/20b331e0885aaa2efed7972a75ecbe489ab8dd26_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/2/0/20b331e0885aaa2efed7972a75ecbe489ab8dd26_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/2/0/20b331e0885aaa2efed7972a75ecbe489ab8dd26.png 2x\" data-dominant-color=\"F7F7F7\"></a></div><p></p>\n<p><strong>Target votes are the hardest to get right at the beginning of an epoch.</strong> This is visible in the above diagram showing the <strong>first slot of an epoch with 18x more wrong target votes</strong> than other slots. The thing is, timely and correct target votes bring twice as many rewards than head or source votes.</p>\n<p>Although looking problematic, I’d argue this isn’t a big issue. A target vote at the beginning of an epoch is essentially just a head vote, and the relative share of failures in the first slot at 6.4% is still relatively low. Furthermore, it is a known fact that epoch boundaries come with many different cascading effects including missed slots, which also contributes to the above finding.</p>\n<blockquote>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/c/2c3c18e5acdc7080ad46101a7f05e775a50edb35.png\" data-download-href=\"https://ethresear.ch/uploads/default/2c3c18e5acdc7080ad46101a7f05e775a50edb35\" title=\"failed_missed_target_votes_over_clclient_over_slot\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/c/2c3c18e5acdc7080ad46101a7f05e775a50edb35_2_690x316.png\" alt=\"failed_missed_target_votes_over_clclient_over_slot\" data-base62-sha1=\"6jjLwkb16uEoRJfDvWBPd0FFtjv\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/c/2c3c18e5acdc7080ad46101a7f05e775a50edb35_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/2/c/2c3c18e5acdc7080ad46101a7f05e775a50edb35_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/2/c/2c3c18e5acdc7080ad46101a7f05e775a50edb35.png 2x\" data-dominant-color=\"F8F7F7\"></a></div><br>\nThis phenomenon seems to be agnostic to CL clients.<p></p>\n</blockquote>\n<h3><a name=\"missedfailed-source-votes-10\" class=\"anchor\" href=\"https://ethresear.ch#missedfailed-source-votes-10\"></a>Missed/Failed Source Votes</h3>\n<p>Source votes are easy to get correct and even validators that are slightly out of sync have a good chance to vote for the right source checkpoint. This is because the to-be-voted-for checkpoint is at least 6.4 minutes (<em>=1 epoch</em>) in the past. Wrong source votes indicate that the validator is either out of sync or on a completely different chain. Thus, target and head votes must be incorrect if the source vote is wrong.</p>\n<blockquote>\n<p>For source votes one cannot differentiate between <em>missed</em> and <em>failed</em> because wrong source votes never make it onchain and are ignored by proposers/validators.</p>\n</blockquote>\n<p>On average, we observe around 100 missed source votes per slot, 3,200 per epoch.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/1/61f31f5346adcf9f2b85495f01d371c64e2bff69.png\" data-download-href=\"https://ethresear.ch/uploads/default/61f31f5346adcf9f2b85495f01d371c64e2bff69\" title=\"missed_source_votes_over_date\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/1/61f31f5346adcf9f2b85495f01d371c64e2bff69_2_690x380.png\" alt=\"missed_source_votes_over_date\" data-base62-sha1=\"dYvcw5IW0hC3M6HRI01j4oa5Cwp\" width=\"690\" height=\"380\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/1/61f31f5346adcf9f2b85495f01d371c64e2bff69_2_690x380.png, https://ethresear.ch/uploads/default/optimized/3X/6/1/61f31f5346adcf9f2b85495f01d371c64e2bff69_2_1035x570.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/1/61f31f5346adcf9f2b85495f01d371c64e2bff69.png 2x\" data-dominant-color=\"CDCFD0\"></a></div><p></p>\n<p>Similar to head and target votes, we observe an increased number of missed source votes at the beginning of an epoch. This MIGHT be related to the increased reorg probability at the beginning of an epoch but more analysis would be needed to confirm that.<br>\nIn general, validators usually have ample time (at least 32 slots) to cast their source vote. However, if their head vote is incorrect, it might result in the entire attestation being ignored by an aggregator and, consequently, not being recorded onchain.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/f/1f1e51c85696870bc5d10d561a9814172f0ef750.png\" data-download-href=\"https://ethresear.ch/uploads/default/1f1e51c85696870bc5d10d561a9814172f0ef750\" title=\"missed_source_votes_over_slot\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/f/1f1e51c85696870bc5d10d561a9814172f0ef750_2_690x380.png\" alt=\"missed_source_votes_over_slot\" data-base62-sha1=\"4rhLagfIXVKN0FdKkQDGEqoW2bK\" width=\"690\" height=\"380\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/f/1f1e51c85696870bc5d10d561a9814172f0ef750_2_690x380.png, https://ethresear.ch/uploads/default/optimized/3X/1/f/1f1e51c85696870bc5d10d561a9814172f0ef750_2_1035x570.png 1.5x, https://ethresear.ch/uploads/default/original/3X/1/f/1f1e51c85696870bc5d10d561a9814172f0ef750.png 2x\" data-dominant-color=\"DADBDD\"></a></div><p></p>\n<h2><a name=\"best-and-worst-validators-11\" class=\"anchor\" href=\"https://ethresear.ch#best-and-worst-validators-11\"></a>Best and Worst Validators</h2>\n<p>Validators cast a vote in every epoch and quickly checking <a href=\"https://beaconcha.in/\">beaconcha.in</a>, more than 99.9% of validators are active in every epoch.</p>\n<p>By summing up correct head votes, we can determine the best and worst-performing validators.</p>\n<p><strong>The following chart visualizes the average missed/failed head votes per slot over the validator IDs:</strong></p>\n<blockquote>\n<p>Withdrawn validators are excluded.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/4/94c96b54be8347449d0d060223ba0a9333dd3013.png\" data-download-href=\"https://ethresear.ch/uploads/default/94c96b54be8347449d0d060223ba0a9333dd3013\" title=\"head_votes_over_validator_ids\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/4/94c96b54be8347449d0d060223ba0a9333dd3013_2_690x316.png\" alt=\"head_votes_over_validator_ids\" data-base62-sha1=\"leecFJmT9BT4opwBc9cQ1EEwVeb\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/4/94c96b54be8347449d0d060223ba0a9333dd3013_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/9/4/94c96b54be8347449d0d060223ba0a9333dd3013_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/9/4/94c96b54be8347449d0d060223ba0a9333dd3013.png 2x\" data-dominant-color=\"D3E2EE\"></a></div><p></p>\n</blockquote>\n<p>We can see that the missed slot rate is slightly <strong>increasing with increasing validator IDs,</strong> with outliers for the validators with IDs 0-30k, 300k-330k, and 780k-790k.<br>\nThe best validators are the group with IDs from 50k-60k.</p>\n<p><strong>Over four weeks, most validators miss around 20-30 head votes:</strong></p>\n<p>The following chart has a <strong>logarithmic y-axis</strong> to make sure we can also see the last bar on the very right that consists of validators that have never attested in the 4 weeks analyzed.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/7/2757547120b4ca4f9068e3fe491289fa8dec1f06.png\" data-download-href=\"https://ethresear.ch/uploads/default/2757547120b4ca4f9068e3fe491289fa8dec1f06\" title=\"failed_missed_head_per_validator_dist_per\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/7/2757547120b4ca4f9068e3fe491289fa8dec1f06_2_690x316.png\" alt=\"failed_missed_head_per_validator_dist_per\" data-base62-sha1=\"5C1IVI6ujiGR6uhCuZUsSpz3AB8\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/7/2757547120b4ca4f9068e3fe491289fa8dec1f06_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/2/7/2757547120b4ca4f9068e3fe491289fa8dec1f06_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/2/7/2757547120b4ca4f9068e3fe491289fa8dec1f06.png 2x\" data-dominant-color=\"DFE8F0\"></a></div><p></p>\n<h3><a name=\"the-peak-of-performance-best-validators-12\" class=\"anchor\" href=\"https://ethresear.ch#the-peak-of-performance-best-validators-12\"></a>The peak of performance (best validators)</h3>\n<p>For the following, I use data ranging from epoch 292,655 to epoch 293,105, not the entire time frame analyzed, due to the sheer amount of data involved.</p>\n<p><em><strong>High-performers</strong></em> are defined as validators who haven’t missed voting for the correct head during a time frame of 3 days, starting from the last slot analyzed and going backward.</p>\n<p>The following table shows the largest node operators (sorted in descending order by market share) and the percentage of high-performing validators within 3 days compared to the total number of validators for each entity:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/7/5713faed8326eeee5afcdddcf300a1bbdd15e691.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/5713faed8326eeee5afcdddcf300a1bbdd15e691\" title=\"performer_table\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/7/5713faed8326eeee5afcdddcf300a1bbdd15e691_2_422x500.jpeg\" alt=\"performer_table\" data-base62-sha1=\"cqklwWUJ8HowuuLJCVlFwqDZiTL\" width=\"422\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/7/5713faed8326eeee5afcdddcf300a1bbdd15e691_2_422x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/5/7/5713faed8326eeee5afcdddcf300a1bbdd15e691_2_633x750.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/5/7/5713faed8326eeee5afcdddcf300a1bbdd15e691.jpeg 2x\" data-dominant-color=\"ECE5DF\"></a></div><p></p>\n<p>^ The entities in <em><strong>green</strong></em> have <em><strong>more</strong></em> high-performing validators than the average.</p>\n<p><strong>The shares visualized using a bar chart look like the following:</strong></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/0/50ed0ae6c74385c61c57a0e9c89ac9beef1e5d64.png\" data-download-href=\"https://ethresear.ch/uploads/default/50ed0ae6c74385c61c57a0e9c89ac9beef1e5d64\" title=\"topperformer_percentage\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/0/50ed0ae6c74385c61c57a0e9c89ac9beef1e5d64_2_690x316.png\" alt=\"topperformer_percentage\" data-base62-sha1=\"bxU3EUqBQOcSt7bvdopYsMKs25C\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/0/50ed0ae6c74385c61c57a0e9c89ac9beef1e5d64_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/5/0/50ed0ae6c74385c61c57a0e9c89ac9beef1e5d64_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/0/50ed0ae6c74385c61c57a0e9c89ac9beef1e5d64.png 2x\" data-dominant-color=\"EEF3F8\"></a></div><p></p>\n<p>We can see that the average high-performer rate is around 0-5% for the shown entities.<br>\n<strong>The outliers are <em>Everstake</em>, <em>Frax Finance</em> and <em>Rockx</em>.</strong></p>\n<p><em>So, what are those 3 parties doing differently than others?</em></p>\n<p><strong>There are two strategies an entity might apply:</strong></p>\n<ol>\n<li><em>Attest early</em> to ensure their vote has enough time to travel through the network and reach the next proposer for inclusion.</li>\n<li><em>Attest late</em> to ensure they vote for the correct head of the chain. The longer a validator waits, the easier it is to determine the head of the chain as other validators have already voted -&gt; <em>the risk is that the vote might not reach the next proposer in time</em>.</li>\n</ol>\n<p>The latter strategy may be referred to as <em><strong><a href=\"https://ethresear.ch/t/timing-games-implications-and-possible-mitigations/17612#attester-timing-games-9\">attester timing games</a></strong></em>.</p>\n<p><em>But what is better?</em></p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/a/1/a19d7ddccff2f47d6d73e80b5e2b5f1b96572091.png\" alt=\"Screenshot from 2024-06-27 20-22-27\" data-base62-sha1=\"n3IipQJkGlDPJ4CYadeNz0cPzYl\" width=\"587\" height=\"311\"></p>\n<p>I asked my Twitter friends, and the majority voted for ‘seen later,’ indicating validators are playing timing games for increased attestation accuracy.</p>\n<p>In truth, both are right.</p>\n<p>The following chart shows the distributions of attestation-seen timestamps of high-performing validators vs. the rest (non-high-performing validators):</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/a/8acfc992ada1a3b0a22ce9f1cfb036a7f191ab8e.png\" data-download-href=\"https://ethresear.ch/uploads/default/8acfc992ada1a3b0a22ce9f1cfb036a7f191ab8e\" title=\"high_performer_vs_rest_timing\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/a/8acfc992ada1a3b0a22ce9f1cfb036a7f191ab8e_2_690x304.png\" alt=\"high_performer_vs_rest_timing\" data-base62-sha1=\"jNZ4y02PYVKkevPhRPW9xbzO22a\" width=\"690\" height=\"304\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/a/8acfc992ada1a3b0a22ce9f1cfb036a7f191ab8e_2_690x304.png, https://ethresear.ch/uploads/default/optimized/3X/8/a/8acfc992ada1a3b0a22ce9f1cfb036a7f191ab8e_2_1035x456.png 1.5x, https://ethresear.ch/uploads/default/original/3X/8/a/8acfc992ada1a3b0a22ce9f1cfb036a7f191ab8e.png 2x\" data-dominant-color=\"F6F2ED\"></a></div><p></p>\n<p>We can see that the largest share of head votes from <strong>high-performers</strong> is seen between <strong>second 2 and 3</strong> in the slot. We observe another spike right <strong>after second 5</strong> in the slot. For all other validators (cf. <em>rest</em>), the majority of head votes arrive between <strong>second 4 and 5</strong>.</p>\n<p><strong>This points towards:</strong></p>\n<ul>\n<li>Most attesters are exceptionally good because they are <strong>faster</strong> than others.</li>\n<li>Some attesters are exceptionally good because they might <strong>wait longer</strong> for more accuracy.</li>\n</ul>\n<p><strong>&gt; Early attestations by high-performing validators are seen some milliseconds earlier than the rest.<br>\n&gt; Late attestations by high-performing validators are seen about 0.5 seconds later than the rest.</strong></p>\n<p>It is worth noting that every high-performing validator can be part of both groups, e.g., attesting late to ‘weak’ blocks (cf. epoch boundaries) and early for ‘strong’ blocks.<br>\nValidators with great network connectivity can afford to wait slightly longer. Furthermore, at any second in the slot, validators with great connectivity have more information available than other validators.</p>\n<blockquote>\n<p>A simple example is Coinbase: Technically, every Coinbase validator can be made aware of the votes of other Coinbase validators before voting. With a 10% market share, this provides significant additional security when voting on the correct head.</p>\n</blockquote>\n<p>By examining the head votes received/seen timings among the largest entities, we can clearly observe the differences. The best performers—Everstake, Frax Finance, and Rockx—typically attest between 4 and 6 seconds into the slot. While these entities outperform others, the following chart does not necessarily indicate a specific strategy being applied.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/2/c22c5adbedc46936379f5e7d1a775f4ad183cb0c.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/c22c5adbedc46936379f5e7d1a775f4ad183cb0c\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/2/c22c5adbedc46936379f5e7d1a775f4ad183cb0c_2_300x500.jpeg\" alt=\"image\" data-base62-sha1=\"rHJES7GruUaKsddKHwEUCujXEhS\" width=\"300\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/2/c22c5adbedc46936379f5e7d1a775f4ad183cb0c_2_300x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/c/2/c22c5adbedc46936379f5e7d1a775f4ad183cb0c_2_450x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/2/c22c5adbedc46936379f5e7d1a775f4ad183cb0c_2_600x1000.jpeg 2x\" data-dominant-color=\"F3F2F1\"></a></div><p></p>\n<blockquote>\n<p>And for a deeper dive into this topic check out <a href=\"https://ethereum.github.io/beaconrunner/notebooks/thunderdome/thunderdome.html\">this simulation</a> by Barnabé that goes into the depth of strategic attesting behavior.</p>\n</blockquote>\n<p><strong>Finally, we get the following timings for the attestations over different CL clients:</strong><br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/0/e01321bc4823cb594799d2c67012c599e352cfcd.png\" data-download-href=\"https://ethresear.ch/uploads/default/e01321bc4823cb594799d2c67012c599e352cfcd\" title=\"head_timing_cl_clients\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/0/e01321bc4823cb594799d2c67012c599e352cfcd_2_690x345.png\" alt=\"head_timing_cl_clients\" data-base62-sha1=\"vYfWt05LRgGsNnLCYKL6TprKSgR\" width=\"690\" height=\"345\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/0/e01321bc4823cb594799d2c67012c599e352cfcd_2_690x345.png, https://ethresear.ch/uploads/default/optimized/3X/e/0/e01321bc4823cb594799d2c67012c599e352cfcd_2_1035x517.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/0/e01321bc4823cb594799d2c67012c599e352cfcd.png 2x\" data-dominant-color=\"598DB6\"></a></div><p></p>\n<h3><a name=\"we-like-them-for-what-they-are-worst-validators-13\" class=\"anchor\" href=\"https://ethresear.ch#we-like-them-for-what-they-are-worst-validators-13\"></a>We like them for what they are… (worst validators)</h3>\n<p>Other validators are <em>less performant</em> than others. This becomes obvious by looking at the number of missed attestations over time.</p>\n<p>First, let’s consider the validators who are offline. There are various reasons for validators to go offline, and occasionally, random validators might experience brief outages. However, there is a small subset of validators that are very likely to remain permanently offline.</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/5/7/57134b955a3de1691a15cf2678146f66c1e04126.png\" alt=\"lost_keys\" data-base62-sha1=\"cqiSxYxG3onftrZMXz0vsW97KbI\" width=\"456\" height=\"193\"></p>\n<p>We observed 139 validators, representing 0.014% of all validators, who were permanently offline in the 4 weeks analyzed.<br>\nNow, one can argue that being offline for over 4 weeks doesn’t mean the validator is permanently offline. While this is fair, validators who have never cast any vote provide a good upper-bound estimate for the number of permanently offline validators who might have lost their keys.</p>\n<p>Within those offline validators, we identify 12 solo stakers, 37 rocketpool validators, and 90 belonging to the category unidentified (=<em>20% market share, including many many actual solo stakers</em>).</p>\n<p><strong>Most offline validators have low validator IDs:</strong><br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/d/2d0d6b73c9b05e0a3a4bc6ee7b5d020b4c98f24b.png\" data-download-href=\"https://ethresear.ch/uploads/default/2d0d6b73c9b05e0a3a4bc6ee7b5d020b4c98f24b\" title=\"head_votes_over_offline_validator_ids\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/d/2d0d6b73c9b05e0a3a4bc6ee7b5d020b4c98f24b_2_690x316.png\" alt=\"head_votes_over_offline_validator_ids\" data-base62-sha1=\"6qyeKboLMQdxatryF8ql8p0chBh\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/d/2d0d6b73c9b05e0a3a4bc6ee7b5d020b4c98f24b_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/2/d/2d0d6b73c9b05e0a3a4bc6ee7b5d020b4c98f24b_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/2/d/2d0d6b73c9b05e0a3a4bc6ee7b5d020b4c98f24b.png 2x\" data-dominant-color=\"F8FAFB\"></a></div><p></p>\n<p>We can see spikes around 730k and 870k, but the <strong>largest portion comes from OG validators</strong> with low IDs, those activated before the Merge. This is both expected and unexpected:</p>\n<ul>\n<li>OG stakers are generally crypto-native individuals who can securely manage private keys.</li>\n<li>OG stakers are generally solo stakers who are less sophisticated.</li>\n</ul>\n<p>Based on the above, it seems the latter is more likely to hold true.</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/e/7/e70bfc6416b8a68b815f9835f7fe8e5076a340d5.png\" alt=\"ogvalidator\" data-base62-sha1=\"wXVYtfpCjQ6eKk0vo6lBCebasw5\" width=\"457\" height=\"411\"></p>\n<br>\n<p>Moving the focus to the bad validators that miss more than the mean but not all slots in the analyzed time frame, the bar chart looks like the following:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/5/e535223a575fe5764af70e6d31676c70b7c09e3c.png\" data-download-href=\"https://ethresear.ch/uploads/default/e535223a575fe5764af70e6d31676c70b7c09e3c\" title=\"head_votes_over_bad_validator_ids\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e535223a575fe5764af70e6d31676c70b7c09e3c_2_690x316.png\" alt=\"head_votes_over_bad_validator_ids\" data-base62-sha1=\"wHFb6IfmSp2JzLkDOuzrdKxMiyE\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e535223a575fe5764af70e6d31676c70b7c09e3c_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/e/5/e535223a575fe5764af70e6d31676c70b7c09e3c_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/5/e535223a575fe5764af70e6d31676c70b7c09e3c.png 2x\" data-dominant-color=\"D2E1EE\"></a></div><p></p>\n<p><strong>If low-id validators aren’t offline they perform quite well.</strong> Looking at the above graph, the largest share of “bad” validators can be found at the IDs 900k-1m.</p>\n<h2><a name=\"attestations-big-blocks-and-blobs-14\" class=\"anchor\" href=\"https://ethresear.ch#attestations-big-blocks-and-blobs-14\"></a>Attestations, Big Blocks, and Blobs</h2>\n<p><strong>Big blocks and blocks with many blocks are expected to receive fewer attestations.</strong> This is because certain validators might struggle to download and validate the block fast enough and therefore vote for another block.</p>\n<p>With <a href=\"https://www.eip4844.com/\">EIP-4844</a> going live, the <a href=\"https://ethresear.ch/t/on-block-sizes-gas-limits-and-scalability/18444\">block size</a> consists of 3 parts:</p>\n<ul>\n<li>EL Payload (~85 KB)</li>\n<li>Beacon Block (excl. EL payload) / CL Part (~5 KB)</li>\n<li>Blobs (~384 KB)</li>\n</ul>\n<p>Previous analysis showed that the average beacon block size excl. blobs is around 90 KiB. One blob has a size of 128 KiB. As a result, on average, we get blocks (incl. blobs) of size <code>nr_blobs * 128 + 90</code>, with the blob being the main contributor to the size of a block.</p>\n<p><strong>More blobs mean more data that needs to be transmitted across the globe. Thus, we can expect more failed head votes for blocks with 6 blobs than those with one blob.</strong></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/6/76d5ade603b46d1fe148a918bda24f4fe3866fd6.png\" data-download-href=\"https://ethresear.ch/uploads/default/76d5ade603b46d1fe148a918bda24f4fe3866fd6\" title=\"failed_missed_head_size_boxplot\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/6/76d5ade603b46d1fe148a918bda24f4fe3866fd6_2_690x316.png\" alt=\"failed_missed_head_size_boxplot\" data-base62-sha1=\"gXg989yCmfSrzoWrvC9VE45pKPY\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/6/76d5ade603b46d1fe148a918bda24f4fe3866fd6_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/7/6/76d5ade603b46d1fe148a918bda24f4fe3866fd6_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/7/6/76d5ade603b46d1fe148a918bda24f4fe3866fd6.png 2x\" data-dominant-color=\"E7EEF4\"></a></div><p></p>\n<p>This expectation holds when looking at the above boxplot diagram:<br>\n → <strong>The median missed head votes doubles going from 0 to 6 blobs.</strong></p>\n<p><em><strong>Let’s get more granular…</strong></em></p>\n<p>The following visualizes the block size incl. blobs in MiB over the failed head votes per slot.</p>\n<blockquote>\n<p>This chart shows only wrong/failed head votes and excludes offline validators.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/f/4ffabf4ebdf70341da81e69e95094040f0f6591e.png\" data-download-href=\"https://ethresear.ch/uploads/default/4ffabf4ebdf70341da81e69e95094040f0f6591e\" title=\"failed_missed_head_size_scatter\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/f/4ffabf4ebdf70341da81e69e95094040f0f6591e_2_690x316.png\" alt=\"failed_missed_head_size_scatter\" data-base62-sha1=\"bpwWvQjR0uJ5biFg6Bw6K5azKgu\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/f/4ffabf4ebdf70341da81e69e95094040f0f6591e_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/4/f/4ffabf4ebdf70341da81e69e95094040f0f6591e_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/4/f/4ffabf4ebdf70341da81e69e95094040f0f6591e.png 2x\" data-dominant-color=\"F2F5F8\"></a></div><p></p>\n</blockquote>\n<p><strong>For the sizes above 0.8 MiB, which are most likely blocks with 6 blobs, we can see more weak blocks than for 0 blob blocks. “Weak” because up to 32k attesters of that slot, up to 99%, voted for a different block.</strong><br>\nThe only way that block still made it into the canonical chain is the next validator building on top of it instead of reorging that block out.</p>\n<p>In the analyzed month, we observe 401 blocks with &gt;31k attesters voting for different blocks that still made it into the canonical chain. 233 of them carried 6 blobs. Assuming most validators attest at the latest at second 4 of a slot, those blocks must have been propagated very late such that validators already attested to a different block before seeing it.<br>\nThis can be confirmed by plotting the “first seen” time of those weak blocks over the seconds in a slot, comparing it to all other blocks:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/3/b3e8a77964031d2b79681810e8f527c7c95a1699.png\" data-download-href=\"https://ethresear.ch/uploads/default/b3e8a77964031d2b79681810e8f527c7c95a1699\" title=\"hist_late_performer\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/3/b3e8a77964031d2b79681810e8f527c7c95a1699_2_690x304.png\" alt=\"hist_late_performer\" data-base62-sha1=\"pFxVrzcMw5Qma18HeTXf1fUoKCd\" width=\"690\" height=\"304\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/3/b3e8a77964031d2b79681810e8f527c7c95a1699_2_690x304.png, https://ethresear.ch/uploads/default/optimized/3X/b/3/b3e8a77964031d2b79681810e8f527c7c95a1699_2_1035x456.png 1.5x, https://ethresear.ch/uploads/default/original/3X/b/3/b3e8a77964031d2b79681810e8f527c7c95a1699.png 2x\" data-dominant-color=\"F6F4F1\"></a></div><p></p>\n<p>The chart shows that most blocks are seen between second 1 and 2 in the slot. For those weak blocks, it’s between second 4 and 5, right after the attestation deadline.</p>\n<p>We can confirm this by looking at the attestation timing over the seconds in a slot. We can see that 80% of the attestations are seen 5 seconds into the slot. A block propagated at second 4 in the slot will likely miss out on at least ~40% of all possible attestations, no matter how fast it propagates through the network.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/2/42fe46361f7b2a22bd61c0195f719a57df04d64d.png\" data-download-href=\"https://ethresear.ch/uploads/default/42fe46361f7b2a22bd61c0195f719a57df04d64d\" title=\"attestations_cdf\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/2/42fe46361f7b2a22bd61c0195f719a57df04d64d_2_690x304.png\" alt=\"attestations_cdf\" data-base62-sha1=\"9yEiaQZevVpS9KhUsbOgDTuBjqt\" width=\"690\" height=\"304\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/2/42fe46361f7b2a22bd61c0195f719a57df04d64d_2_690x304.png, https://ethresear.ch/uploads/default/optimized/3X/4/2/42fe46361f7b2a22bd61c0195f719a57df04d64d_2_1035x456.png 1.5x, https://ethresear.ch/uploads/default/original/3X/4/2/42fe46361f7b2a22bd61c0195f719a57df04d64d.png 2x\" data-dominant-color=\"FBFBFC\"></a></div><p></p>\n<p><em><strong>Are blobs the problem?</strong></em></p>\n<p>The following chart shows the first seen time of 1-blob blocks vs 6-blob blocks:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/d/9d9090203cef36a8e47a8b59e7a8e3b54be815ae.png\" data-download-href=\"https://ethresear.ch/uploads/default/9d9090203cef36a8e47a8b59e7a8e3b54be815ae\" title=\"hist_late_performer_blobs\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/d/9d9090203cef36a8e47a8b59e7a8e3b54be815ae_2_690x304.png\" alt=\"hist_late_performer_blobs\" data-base62-sha1=\"mtSGDioMKCWWxVLd82jNVbP2OXs\" width=\"690\" height=\"304\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/d/9d9090203cef36a8e47a8b59e7a8e3b54be815ae_2_690x304.png, https://ethresear.ch/uploads/default/optimized/3X/9/d/9d9090203cef36a8e47a8b59e7a8e3b54be815ae_2_1035x456.png 1.5x, https://ethresear.ch/uploads/default/original/3X/9/d/9d9090203cef36a8e47a8b59e7a8e3b54be815ae.png 2x\" data-dominant-color=\"F3ECE4\"></a></div><p></p>\n<p>We can see that despite 6-blobs blocks being seen later in the slot, the delta is rather small, not to say negligible. At the time of the block arriving, the blobs should have already been seen.</p>\n<p>In the past, the fact that a user was (not) using <strong><a href=\"https://github.com/flashbots/mev-boost\">MEV-Boost</a></strong> impacted different performance metrics. Thus, let’s plot MEV-Boost users vs. local builders for completeness:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/9/c9c92b7f095017be8e86eac8b4a486a6c1dfdaec.png\" data-download-href=\"https://ethresear.ch/uploads/default/c9c92b7f095017be8e86eac8b4a486a6c1dfdaec\" title=\"hist_late_performer_mevboost\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/9/c9c92b7f095017be8e86eac8b4a486a6c1dfdaec_2_690x304.png\" alt=\"hist_late_performer_mevboost\" data-base62-sha1=\"sN4Yw7CV3o3QDoTxadbM6Lk560s\" width=\"690\" height=\"304\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/9/c9c92b7f095017be8e86eac8b4a486a6c1dfdaec_2_690x304.png, https://ethresear.ch/uploads/default/optimized/3X/c/9/c9c92b7f095017be8e86eac8b4a486a6c1dfdaec_2_1035x456.png 1.5x, https://ethresear.ch/uploads/default/original/3X/c/9/c9c92b7f095017be8e86eac8b4a486a6c1dfdaec.png 2x\" data-dominant-color=\"F1EBE5\"></a></div><p></p>\n<p>Finally, comparing three of the largest relays, we get the following image:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/6/56eedd8200ca5e5c778261aee74f9405630c1677.png\" data-download-href=\"https://ethresear.ch/uploads/default/56eedd8200ca5e5c778261aee74f9405630c1677\" title=\"hist_mevboost_relays\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/6/56eedd8200ca5e5c778261aee74f9405630c1677_2_690x304.png\" alt=\"hist_mevboost_relays\" data-base62-sha1=\"cp2PooSbAtHeDhNXsMuY4W88mFN\" width=\"690\" height=\"304\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/6/56eedd8200ca5e5c778261aee74f9405630c1677_2_690x304.png, https://ethresear.ch/uploads/default/optimized/3X/5/6/56eedd8200ca5e5c778261aee74f9405630c1677_2_1035x456.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/6/56eedd8200ca5e5c778261aee74f9405630c1677.png 2x\" data-dominant-color=\"E7EBDD\"></a></div><p></p>\n<p>While most relays such as Ultra Sound, BloXroute, Agnostic Gnosis, or Flashbots show a very similar curve, we can see the Titan relay having two peaks instead of just one.<br>\nThis means that some blocks going through the Titan relay are first seen in the p2p network between 2.5-3 seconds into the slot, which is very late.</p>\n<p>Notable, those late blocks of Titan still became canonical, pointing towards proposer timing games.</p>\n<h2><a name=\"attestations-and-proposer-timing-games-15\" class=\"anchor\" href=\"https://ethresear.ch#attestations-and-proposer-timing-games-15\"></a>Attestations and Proposer Timing Games</h2>\n<p>Next, let’s look at the impact of Proposer Timing Games on attestations.<br>\nWe refer to Proposer Timing Games (see <a href=\"https://eprint.iacr.org/2023/760\">[1]</a>, <a href=\"https://arxiv.org/abs/2305.09032\">[2]</a>) if block proposers delay their block proposal to give the builders more time for MEV extraction.<br>\nInstead of asking the relay for a block in second 0 in the block, a proposer can delay this, e.g. until second 2 in the slot, and maximize profits. This comes with the risk of not getting enough attestations and being reorged out.</p>\n<p><em>Find some real-time visuals on timing games at <a href=\"https://timing.pics/\">timing.pics</a>.</em></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/5/c563eb0043362562f84cb3fb2f823a14c92dce14.png\" data-download-href=\"https://ethresear.ch/uploads/default/c563eb0043362562f84cb3fb2f823a14c92dce14\" title=\"timing_games2\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/5/c563eb0043362562f84cb3fb2f823a14c92dce14_2_373x499.png\" alt=\"timing_games2\" data-base62-sha1=\"sac8mJQ0q7I3jDFUD31ZNnKKkyU\" width=\"373\" height=\"499\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/5/c563eb0043362562f84cb3fb2f823a14c92dce14_2_373x499.png, https://ethresear.ch/uploads/default/original/3X/c/5/c563eb0043362562f84cb3fb2f823a14c92dce14.png 1.5x, https://ethresear.ch/uploads/default/original/3X/c/5/c563eb0043362562f84cb3fb2f823a14c92dce14.png 2x\" data-dominant-color=\"A3A7A1\"></a></div><p></p>\n<p><strong>Proposer timing games are expected to negatively impact validators’ attestation performance</strong>, although this hasn’t been thoroughly analyzed yet. The concern is that <strong>proposer timing games could have cascading effects</strong>: attesters might slightly <strong>delay their attestations</strong> to ensure they vote for the correct head of the chain. Knowing proposers are playing timing games, it might be rational to delay the attestation too. <strong>Such strategies can be harmful to the network’s overall health.</strong></p>\n<blockquote>\n<p>For more info on the impact of proposer timing games on attestations, check out <a href=\"https://ethresear.ch/t/timing-games-implications-and-possible-mitigations/17612\">Caspar’s post</a> on it.</p>\n</blockquote>\n<p>The following graph shows the average number of missed head votes over the seconds in a slot. The <a href=\"https://github.com/flashbots/relay-specs\">relays’ Data API</a> (<em>bidsReceived</em> endpoint) was used for the in-slot timestamps.</p>\n<blockquote>\n<p>Multiple prior analyses showed that using the bidsReceived timestamps provides a <em>good enough</em> approximation of actual propagation timings. Notably, bidReceived <strong>must come earlier</strong> than the block’s propagation timing.</p>\n</blockquote>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/6/763882ecc1e817832856f802783d3aa9643ce8ca.png\" data-download-href=\"https://ethresear.ch/uploads/default/763882ecc1e817832856f802783d3aa9643ce8ca\" title=\"failed_missed_head_votes_over_timing\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/6/763882ecc1e817832856f802783d3aa9643ce8ca_2_690x316.png\" alt=\"failed_missed_head_votes_over_timing\" data-base62-sha1=\"gRPpPJd8yMtt6VclbnppOyrwMQ2\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/6/763882ecc1e817832856f802783d3aa9643ce8ca_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/7/6/763882ecc1e817832856f802783d3aa9643ce8ca_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/7/6/763882ecc1e817832856f802783d3aa9643ce8ca.png 2x\" data-dominant-color=\"F8EADB\"></a></div><p></p>\n<p>The above chart shows that the number of missed head votes increases rapidly with being 1 - 1.2 seconds into the slot. The longer a proposer waits the fewer attestations its block is expected to receive.</p>\n<p><strong>We can see that the number of missed head votes per slot increases to an average of &gt;4k (12.5% of the committee) for late blocks published more than 1.7 seconds into the slot.</strong><br>\nThis sounds bad although the numbers are still relatively low compared to the 32k validators that attest in each slot.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/4/540d12e9110a2a48ced72b152688d78d5ab1cc8a.png\" data-download-href=\"https://ethresear.ch/uploads/default/540d12e9110a2a48ced72b152688d78d5ab1cc8a\" title=\"failed_missed_head_votes_over_timing_per\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/4/540d12e9110a2a48ced72b152688d78d5ab1cc8a_2_690x316.png\" alt=\"failed_missed_head_votes_over_timing_per\" data-base62-sha1=\"bZy7kb2AFCP43HJBrsU4Hy1HRz4\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/4/540d12e9110a2a48ced72b152688d78d5ab1cc8a_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/5/4/540d12e9110a2a48ced72b152688d78d5ab1cc8a_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/4/540d12e9110a2a48ced72b152688d78d5ab1cc8a.png 2x\" data-dominant-color=\"FAF7F5\"></a></div><p></p>\n<p>Proposing a block with a <em>bid received</em> timestamp of over 2 seconds causes an average of 5k attestations to be missed. This represents about 15% of the committee.</p>\n            <p><small>5 posts - 4 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/deep-diving-attestations-a-quantitative-analysis/20020\">Read full topic</a></p>","link":"https://ethresear.ch/t/deep-diving-attestations-a-quantitative-analysis/20020","pubDate":"Tue, 09 Jul 2024 08:02:31 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20020"},"source":{"@url":"https://ethresear.ch/t/deep-diving-attestations-a-quantitative-analysis/20020.rss","#text":"Deep Diving Attestations - A quantitative analysis"},"filter":false},{"title":"Mantis: Driving Ethereum’s Cross-Domain Future","dc:creator":"0xBrainjar2","category":"Applications","description":"<p>Author: <a href=\"https://x.com/0xbrainjar\" rel=\"noopener nofollow ugc\">0xbrainjar</a></p>\n<p>Reviewers: <a href=\"https://x.com/ComposableSyd\" rel=\"noopener nofollow ugc\">Sydney Sweck</a> &amp; <a href=\"https://x.com/0xBrMazoRoig\" rel=\"noopener nofollow ugc\">Bruno Mazorra</a></p>\n<h1><a name=\"summary-1\" class=\"anchor\" href=\"https://ethresear.ch#summary-1\"></a>Summary</h1>\n<p>Recently, Composable <a href=\"https://twitter.com/Picasso_Network/status/1775512007963500772\" rel=\"noopener nofollow ugc\">launched its IBC Ethereum mainnet connection</a>. The <a href=\"https://www.ibcprotocol.dev/\" rel=\"noopener nofollow ugc\">IBC Protocol</a> is emerging as the gold standard for cross-chain communication, as we have previously explored in our comparison analysis <a href=\"https://medium.com/@Picasso_Network/ibc-as-the-end-game-of-bridging-a-comparison-analysis-on-trust-dcc01e0d9377\" rel=\"noopener nofollow ugc\">here</a>. IBC’s trust levels parallel that of ZK bridging, which is limited to the Ethereum ecosystem and its layer 2s. Originally, the IBC Protocol was also limited to one ecosystem: the Interchain, which includes Cosmos SDK chains and the Cosmos Hub. However, IBC has now been expanded outside of the Interchain/Cosmos ecosystem for the first time by Composable’s Picasso Network.</p>\n<p>IBC Ethereum a significant milestone, marking the first time that trust-minimized bridging is available between Ethereum and other IBC-enabled chains including the Cosmos hub, Cosmos SDK chains, Polkadot and Kusama parachains, Solana, and more ecosystems soon. Moreover, this was a huge technological feat, given that this connection required architecting a light client on Ethereum. While various projects were exploring the concept of Ethereum light clients at the time, there were no light clients fully available on Ethereum when we began development.</p>\n<p>Now, Composable is in the process of launching a product that aims to bring more utility to cross-domain Ethereum operations: Multi-chain Agnostic Trust-minimized Intent Settlement, or Mantis. This framework serves as a vertically integrated intent pipeline, complete with expression, execution, and settlement. Ultimately, Mantis strives to establish a decentralized market for cross-domain intent expression through a permissionless solver network and intent-settlement framework. Through Ethereum IBC and now Mantis, Ethereum will be optimally positioned to continue in its role as the leading hub of DeFi; new cross-chain use cases to and from Ethereum will be generated, enabling the flow of new liquidity and users to Ethereum, with all of the complexities abstracted away to improve the user experience.</p>\n<p>The present article thus summarizes Mantis from our recently-published Mantis Whitepaper and Litepaper. Moreover, this post details how Mantis can benefit Ethereum and other IBC-enabled ecosystems.</p>\n<h1><a name=\"about-mantis-2\" class=\"anchor\" href=\"https://ethresear.ch#about-mantis-2\"></a>About Mantis</h1>\n<h2><a name=\"the-industry-need-3\" class=\"anchor\" href=\"https://ethresear.ch#the-industry-need-3\"></a>The Industry Need</h2>\n<p>Mantis is a relevant protocol within the present DeFi space for a number of reasons, as it aims to fulfill a number of challenges currently facing the space:</p>\n<ul>\n<li><strong>Optimizing UX and Execution:</strong> There has always been a need in the space to optimize both user experience (UX) and execution. If this is accomplished, capital efficiency and value accrual can be maximized for all participants.</li>\n<li><strong>Combatting Centralization Trends:</strong> In the multi-chain bridging space, there has been an increased reliance upon centralized structures. Unfortunately, there has been a lack of decentralized solutions that rival the speed and cost of centralized structures.</li>\n<li><strong>Facilitating Trust-Minimized Interoperability:</strong> Many bridging structures in place today require putting trust in third-party intermediaries, making them vulnerable to attack. However, new technologies are being introduced with the launch of trust-minimized bridging structures like the <a href=\"https://www.ibcprotocol.dev/\" rel=\"noopener nofollow ugc\">IBC Protocol</a>, which powers the <a href=\"http://picasso.xyz\" rel=\"noopener nofollow ugc\">Picasso Network</a>. These developments enable generalized message passing and synchronization of protocols and applications across multiple blockchain ecosystems.</li>\n<li><strong>Delivering Intent-Centricity:</strong> Intents are another new area of development in the DeFi space that are positioned to further assist in resolving user experience and execution issues. However, many intents solutions are not cross-chain interoperable, and are not vertically integrated with execution and settlement solutions, rendering them unable to accrue value from pay for orderflow.</li>\n</ul>\n<p>With Mantis, Composable addresses these present unmet needs in the DeFi space. Overall, our thesis is that cross-domain interoperability widens the intent solution space. We hypothesize that this increased choice in solutions results in value in the form of better user outcomes.</p>\n<h2><a name=\"architecture-4\" class=\"anchor\" href=\"https://ethresear.ch#architecture-4\"></a>Architecture</h2>\n<p>Mantis accomplishes its functionalities via the Mantis protocol and rollup, a cross-domain auction mechanism, as well as their synergies with the Inter-Blockchain Communication (IBC) Protocol and the Picasso Network. Moreover, a commitment mechanism between chains allows conditions in the other parts of the architecture to be carried out cross-domain.</p>\n<h3><a name=\"the-mantis-protocol-rollup-5\" class=\"anchor\" href=\"https://ethresear.ch#the-mantis-protocol-rollup-5\"></a>The Mantis Protocol &amp; Rollup</h3>\n<p>The Mantis protocol facilitates optimal execution of cross-domain intents via a competition of solvers. Users sign intents, which are contained on a private rollup mempool. Solvers are staked agents that can a) observe the transactions on the mempool and b) post solutions in the auctioneer contract. The auctioneer contract scores the solutions in terms of users utility maximization. The winner of the auction is responsible for settling the outcome of the intent to the solution settlement contracts in the final chain expressed by the intent.</p>\n<p>The Mantis protocol lives on the Mantis Solana Virtual Machine (SVM) rollup. This rollup serves as a coordination and settlement layer for cross-domain intents, in addition providing a framework for cross-domain block proposals and credible commitments. The rollup further allows for assets to be staked and restaked to provide crypto-economic security along the proof-of-stake model. This includes staking both the native token of Solana (SOL) as well as liquid staked token versions of SOL. These assets are staked into the bridge contract of the rollup, which then sends them to the proper place for staking or restaking.</p>\n<p>The Mantis rollup also provides developers with a simplified mechanism for designing cross-domain decentralized applications (cdApps), which are defined by their inclusion of scoring, solvers, solution settlement, and cross-domain integrity proofs. An SDK is provided to further enhance the development and integration process.</p>\n<h3><a name=\"cross-domain-auctions-6\" class=\"anchor\" href=\"https://ethresear.ch#cross-domain-auctions-6\"></a>Cross-Domain Auctions</h3>\n<p>Mantis plans to introduce cross-domain combinatorial auctions, with the goal of accomplishing the following:</p>\n<ul>\n<li>Optimized cross-domain MEV extraction*</li>\n<li>Cross-domain intent solution atomic settlement</li>\n<li>Efficient blockspace allocation</li>\n<li>Increased distribution of revenue to validators selling items separately</li>\n</ul>\n<p>*We would like to take a moment here to reflect on MEV and our goals surrounding this concept. MEV is an evolving term with a number of interpretations. Initially MEV stood for miner extractable value, representing the maximum profit an agent (miner or validator) in proof-of-work blockchain systems could incur from its monopolistic rights over transaction inclusion. With the advent of proof-of-stake systems, MEV has become more often described as maximal extractible value, as miners are largely obsolete. Maximal extractible value still refers to the value that agents derive from strategically reordering and including transactions, but now these agents are frequently searchers.</p>\n<p>A number of negative ramifications have been reported from these MEV extraction mechanisms. Thus, Flashbots introduced MEV-geth to Ethereum, which implemented a centralized combinatorial auction where searchers can express complex preferences in bundles. Then, this auction system was decentralized by MEV-Boost, allowing anyone to propose their block by bidding at auction. With the introduction of proposer-builder separation, validators on Ethereum now derive value from their monopolistic power over their slots.</p>\n<p>As one can see, value from rearranging and including/excluding transactions can now be carried out by a number of parties in a number of manners. In addition to the extraction by validators, miners, and searchers, builders can also derive profits and users themselves can derive financial benefits from these mechanisms by using protocols such as Flashbots Protect, MEV blocker and Cow Protocol . Therefore, it becomes difficult to define exactly what value accrual mechanisms can be considered MEV.</p>\n<p>Another complicating factor in the definition of MEV is that some of the aforementioned value accrual mechanisms have an inverse relationship. Most importantly, there is tension between the profits made by validators and other sellers from MEV and the overall welfare of the system (i.e. total value accrued to all users of the system, including end users, solvers, searchers, stakers, etc.). When overall profits to sellers are maximized, overall welfare goes down.</p>\n<p>Thus, the goal of Mantis is not necessarily to maximize MEV extraction. Rather, the goal is to maximize overall welfare.One way in which we hope to achieve this is via our mechanisms designed to allocate blockspace efficiently to the users valuing it the most, such as our cross-domain auctions.</p>\n<p>Initially, these auctions will be just-in-time to allow builders to express atomically. For two domains, this will involve two simultaneous English auctions with a unique combinatorial block take-it-or-leave it offer. Buyers can place send blocks with bids for the independent blocks and combinatorial blocks. The problems with this approach are the risk of double-signing and the high level of trust placed in the relay.</p>\n<p>Therefore, Mantis aims to later introduce a future combinatorial blockspace market, where the rights to future blockspace on multiple domains can be bought and sold. The new crypto-economic primitive of restaking (such as that being facilitated by the Picasso Network) enables block proposers to issue credible commitments about future block construction. These are promises to build blocks in accordance with specific conditions laid out by execution ticket holders if certain payment thresholds are met. Tickets exist outside of a domain’s consensus protocol and will be exchanged via a combinatorial batch auction where buyers express combinatorial valuations over the tickets and sellers express reserve prices. Then, tickets can be traded or sold in a secondary market. This aims to decrease the monopoly of block sellers while increasing market efficiency.</p>\n<h3><a name=\"the-ibc-protocol-7\" class=\"anchor\" href=\"https://ethresear.ch#the-ibc-protocol-7\"></a>The IBC Protocol</h3>\n<p>The <a href=\"https://www.ibcprotocol.dev/\" rel=\"noopener nofollow ugc\">IBC Protocol</a> facilitates communication between different blockchain ecosystems. <a href=\"https://medium.com/picasso-network/why-ibc-everywhere-is-the-key-to-cross-chain-defi-041bed829acd\" rel=\"noopener nofollow ugc\">Compared to other cross-chain communication protocols</a>, the benefits of IBC are that it is <a href=\"https://medium.com/@Picasso_Network/ibc-as-the-end-game-of-bridging-a-comparison-analysis-on-trust-dcc01e0d9377\" rel=\"noopener nofollow ugc\">trustless</a>, secure, censorship-resistant, permissionless, fast, cost-effective, and natively interoperable. For these reasons, Mantis has opted to use IBC as its mechanism for cross-chain communication.</p>\n<p>Composable has expanded the reach of the IBC so that it not only connects the <a href=\"https://hub.cosmos.network/\" rel=\"noopener nofollow ugc\">Cosmos Hub</a> and <a href=\"https://v1.cosmos.network/sdk\" rel=\"noopener nofollow ugc\">Cosmos SDK</a> chains that it originally linked, but also interoperates with <a href=\"https://polkadot.network/\" rel=\"noopener nofollow ugc\">Polkadot</a> and <a href=\"https://kusama.network/\" rel=\"noopener nofollow ugc\">Kusama</a> parachains, <a href=\"https://ethereum.org/en/\" rel=\"noopener nofollow ugc\">Ethereum</a>, and <a href=\"https://solana.com/\" rel=\"noopener nofollow ugc\">Solana</a>. Creating these novel connections required a significant amount of technical development, given that many blockchains lack different components needed for IBC-compatibility.</p>\n<p>In the case of Ethereum, the following components needed to be architected in order to enable IBC-compatibility:</p>\n<ul>\n<li><strong>ZK Circuit:</strong> This program is able to output a proof given a set of inputs. This proof can then be easily verified to ensure that each computational step that was run inside the circuit was done so correctly. In Picasso’s solution, the ZK circuit connects SNARK ED-25519 signatures to a prover. ED-25519 is a digital signature algorithm (DSA) that offers small key and signature sizes and fast computation being impervious to many common attacks to other DSAs.</li>\n<li><strong>Tendermint Light Client on Ethereum:</strong> We constructed a <a href=\"https://docs.tendermint.com/v0.34/tendermint-core/light-client.html\" rel=\"noopener nofollow ugc\">Tendermint light client</a> on Ethereum, which lives as an Ethereum smart contract and is able to communicate over IBC with the light client on Picasso.</li>\n<li><strong>Ethereum Light Client on the Picasso Chain:</strong> We also created a CosmWasm contract in the Wasm client of the Picasso Cosmos SDK chain to complete the Ethereum IBC connection.</li>\n<li><strong>IBC Stack on Ethereum:</strong> We created a modified IBC stack for Ethereum that consists of Solidity smart contracts on Ethereum. Through this IBC stack, all BC components can operate on Ethereum, facilitating Ethereum’s interoperability with IBC.</li>\n<li><strong>Hyperspace Relayer:</strong> The Composable Foundation’s <a href=\"https://informal.systems/blog/comparing-hyperspace-hermes\" rel=\"noopener nofollow ugc\">Hyperspace relayer</a> connects the two light clients involved in Ethereum IBC by transferring IBC packets between them. Hyperspace is the first event-driven, chain-agnostic IBC relayer that is based on ibc-rs (the Rust implementation of IBC). Hyperspace can thus relay packets between any IBC-enabled chains.</li>\n<li><strong>Prover:</strong> This entity interacts with the relayer and proves to the verifier that something is true without revealing other information. On Picasso, what is being proved is various transactions sent between Ethereum and IBC. In particular, this prover is a rapid SNARK prover living on the Picasso Cosmos SDK chain.</li>\n<li><strong>Verifier:</strong> Verifiers receive a proof from provers and validate this claim. This prover-verifier relationship results in the production of zero-knowledge proofs, as Ethereum explains <a href=\"https://ethereum.org/en/zero-knowledge-proofs/\" rel=\"noopener nofollow ugc\">here</a>.</li>\n</ul>\n<h3><a name=\"the-picasso-network-its-restaking-pool-8\" class=\"anchor\" href=\"https://ethresear.ch#the-picasso-network-its-restaking-pool-8\"></a>The Picasso Network &amp; Its Restaking Pool</h3>\n<p>The <a href=\"https://picasso.xyz/\" rel=\"noopener nofollow ugc\">Picasso Network</a> aims to deliver ecosystem-agnosticism to DeFi. It executes on this vision via the Picasso Layer 1, a Cosmos SDK blockchain that acts as an IBC hub between Cosmos and non-Cosmos IBC-enabled chains.</p>\n<p>Picasso is the first censorship-resistant, natively-secured cross-ecosystem interoperability solution. The Picasso Network further emphasizes trust-minimization by drawing on the trustless IBC protocol. While a multisig is initially being used for upgradability of IBC contracts on Picasso, the end goal is to transition to decentralized governance.</p>\n<p>Picasso is a critical component of Mantis as it allows the Mantis framework to be cross-chain capable over IBC. Specifically, Mantis transactions are grouped into IBC bundles for shipment based on domain. These bundles are then sent from the Mantis rollup over Picasso IBC and out to relevant blockchains for settlement.</p>\n<p>Moreover, a restaking pool on Picasso coordinates the agents that have a combination of stake in different chains. Commitments formed between these actors draw upon this restaking pool.</p>\n<h2><a name=\"development-roadmap-9\" class=\"anchor\" href=\"https://ethresear.ch#development-roadmap-9\"></a>Development Roadmap</h2>\n<p>The development for Mantis will be carried out in the following steps:</p>\n<ol>\n<li>\n<p><strong>Enabling cross-domain swaps:</strong> integrating with IBC bridges and automated market makers across different chains to facilitate seamless asset swaps</p>\n</li>\n<li>\n<p><strong>Setting up the foundational architecture:</strong> establishing a robust framework that includes the initial design of the Mantis architecture and the development of standards for scoring mechanisms and IBC for intent-based mechanisms</p>\n</li>\n<li>\n<p><strong>Implementing cross-domain intent-based mechanisms:</strong> developing application programming interfaces (APIs) and software development kits (SDKs) that enable users to create and manage cross-domain intents, along with implementing an open-source solver that solves these intents</p>\n</li>\n<li>\n<p><strong>Enriching the restaking layer:</strong> building out the restaking layer of Mantis to have additional functionality (simultaneously to step 3)</p>\n</li>\n<li>\n<p><strong>Creating cross-domain MEV auctions:</strong> developing an auction system that efficiently allocates blockspace (simultaneously to step 3)</p>\n</li>\n<li>\n<p><strong>Deploying block proposal commitments:</strong> enhancing the infrastructure for block proposals and establishing a credible commitment mechanism across domains, including robust fraud-proof mechanisms to maintain trust and security.</p>\n</li>\n<li>\n<p><strong>Completing public launch and scaling:</strong> focusing on officially releasing all functionalities and documentation for Mantis</p>\n</li>\n</ol>\n<h1><a name=\"benefits-to-ethereum-10\" class=\"anchor\" href=\"https://ethresear.ch#benefits-to-ethereum-10\"></a>Benefits to Ethereum</h1>\n<p>Mantis supports Ethereum’s continued role as a leader in DeFi as the space becomes increasingly cross-chain. Composable has already connected Ethereum to the IBC, and therefore, to our trust-minimized bridge. This connection will drive new usership and liquidity to Ethereum from Solana, Cosmos, Polkadot, and Kusama. It will also enable the development of new use cases for ETH outside of Ethereum and on these other networks. Through such new use cases in new locations, DeFi users who do not currently hold ETH will likely be incentivized to do so, and existing users may be incentivized to hold more ETH. Thus, the Ethereum network is positioned to expand its reach even further into the cross-domain DeFi landscape, helping the ecosystem to maintain its reputation as a leader in the space.</p>\n<p>Another benefit Mantis aims to deliver is chain abstraction. Mantis provides a mechanism for Ethereum and other domains to easily be participants in cross-chain DeFi without the blockchain, its layer 2s, or any protocols in the ecosystem needing to make significant modifications. Now that Ethereum is integrated with IBC, its innumerable DeFi protocols and applications can be leveraged from within Mantis. A user simply puts their intent for a transaction into the Mantis user interface, and the rest is handled for them. For example, A user may be looking to swap ETH for USDC. Once they input this intent, Solvers on Mantis compete to come up with the best execution route. For the sake of this example, perhaps the best price for this swap is through an ETH-USDC pool on Uniswap. The solver who has proposed the best settlement route wins the rights to settle the solution, routing the funds through Uniswap for the swap, and then back to the user. Once the transaction is settled as specified, the solver is rewarded. In this manner, all parties benefit: new traffic is routed through Uniswap in this example (or more generally, any other protocol or protocols providing best execution), the user has a streamlined experience with optimized settlement, and the solver is rewarded for their role.</p>\n<h1><a name=\"conclusion-11\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-11\"></a>Conclusion</h1>\n<p>Mantis provides the architecture needed for IBC-enabled chains like Ethereum to easily participate in the cross-domain future. This will help Ethereum continue its role at the forefront of DeFi as the industry continues to embrace multi-domain operations.</p>\n<h1><a name=\"references-more-about-composable-12\" class=\"anchor\" href=\"https://ethresear.ch#references-more-about-composable-12\"></a>References &amp; More About Composable</h1>\n<p>Composable is dedicated to improving DeFi’s accessibility, quality, transparency, efficiency, and security. Our ultimate vision is for the Composable ecosystem to become an execution hub for chain-agnostic transactions. We are actualizing our mission by working to unite the DeFi space, building an ecosystem and a range of infrastructure to support trustless cross-chain operations.</p>\n<ul>\n<li><a href=\"https://assets.website-files.com/65b28e756a8eda2e91e76ca4/6656289f21123d6215091555_MANTIS%20Whitepaper.pdf\" rel=\"noopener nofollow ugc\">Mantis Whitepaper</a></li>\n<li><a href=\"https://assets.website-files.com/65b28e756a8eda2e91e76ca4/6655e8e69277b97e9c11c793_MANTIS%20Litepaper.pdf\" rel=\"noopener nofollow ugc\">Mantis Litepaper</a></li>\n<li><a href=\"https://www.mantis.app/\" rel=\"noopener nofollow ugc\">Mantis app</a></li>\n<li><a href=\"https://www.composable.finance/\" rel=\"noopener nofollow ugc\">Composable website</a></li>\n<li><a href=\"https://twitter.com/ComposableFin\" rel=\"noopener nofollow ugc\">Composable X/twitter</a></li>\n<li><a href=\"http://discord.gg/composable\" rel=\"noopener nofollow ugc\">Composable Discord</a></li>\n<li><a href=\"https://t.me/composable_chat\" rel=\"noopener nofollow ugc\">Composable Telegram</a></li>\n<li><a href=\"https://github.com/ComposableFi/\" rel=\"noopener nofollow ugc\">Composable GitHub</a></li>\n</ul>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/mantis-driving-ethereum-s-cross-domain-future/20009\">Read full topic</a></p>","link":"https://ethresear.ch/t/mantis-driving-ethereum-s-cross-domain-future/20009","pubDate":"Mon, 08 Jul 2024 13:16:05 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-20009"},"source":{"@url":"https://ethresear.ch/t/mantis-driving-ethereum-s-cross-domain-future/20009.rss","#text":"Mantis: Driving Ethereum’s Cross-Domain Future"},"filter":false},{"title":"Maximum Viable Security: A New Framing for Ethereum Issuance","dc:creator":"xadcv","category":"Economics","description":"<h1><a name=\"maximum-viable-security-a-new-framing-for-ethereum-issuance-1\" class=\"anchor\" href=\"https://ethresear.ch#maximum-viable-security-a-new-framing-for-ethereum-issuance-1\"></a><strong>Maximum Viable Security: A New Framing for Ethereum Issuance</strong></h1>\n<p><em>by <a href=\"http://x.com/artofkot\" rel=\"noopener nofollow ugc\">@artofkot</a>, <a href=\"http://x.com/damcnuta\" rel=\"noopener nofollow ugc\">@damcnuta</a>, <a href=\"http://x.com/sonyasunkim\" rel=\"noopener nofollow ugc\">@sonyasunkim</a>, <a href=\"http://x.com/adcv_\" rel=\"noopener nofollow ugc\">@adcv_</a></em></p>\n<p><em>Appreciate feedback from <a href=\"http://x.com/ppclunghe\" rel=\"noopener nofollow ugc\">@ppclunghe</a>, <a href=\"https://x.com/ks_kulk\" rel=\"noopener nofollow ugc\">@ks_kulk</a>, <a href=\"http://x.com/lazyleger\" rel=\"noopener nofollow ugc\">@lazyleger</a>, <a href=\"https://cryptecon.org/team-detail-ce/items/juan-beccuti.html\" rel=\"noopener nofollow ugc\">Juan Beccuti</a>, <a href=\"https://x.com/entigdd\" rel=\"noopener nofollow ugc\">@entigdd</a>, <a href=\"https://x.com/stakesaurus\" rel=\"noopener nofollow ugc\">@stakesaurus</a>, <a href=\"http://x.com/hasufl\" rel=\"noopener nofollow ugc\">@hasufl</a>, <a href=\"http://x.com/lex_node\" rel=\"noopener nofollow ugc\">@lex_node</a>, <a href=\"https://x.com/_vshapovalov\" rel=\"noopener nofollow ugc\">@_vshapolapov</a>, <a href=\"http://x.com/brettpalatiello\" rel=\"noopener nofollow ugc\">@brettpalatiello</a></em></p>\n<hr>\n<p><strong>Table of Contents</strong></p>\n<ul>\n<li><strong><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#tldr-embrace-security-2\">TLDR: Embrace security</a></strong></li>\n<li><strong><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-1-the-foundations-of-the-maximum-viable-security-mvs-framework-3\">1. The foundations of the Maximum Viable Security (“MVS”) framework</a></strong>\n<ul>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-11-ethereum-has-a-clear-goal-build-a-secure-and-sovereign-distributed-system-for-everyone-4\">1.1. Ethereum has a clear goal: build a secure and sovereign distributed system for everyone</a></li>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-12-a-diverse-staking-economy-is-key-5\">1.2. A diverse staking economy is key</a>\n<ul>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-121-stakers-6\">1.2.1. Stakers</a></li>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-122-validating-entities-7\">1.2.2. Validating entities</a></li>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-123-entities-decentralization-8\">1.2.3. Entities’ decentralization</a></li>\n</ul>\n</li>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-13-there-is-no-future-proof-safe-level-of-security-9\">1.3. There is no future-proof safe level of Security</a></li>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-14-reframing-the-discourse-expansion-over-efficiency-10\">1.4. Reframing the discourse: expansion over efficiency</a></li>\n</ul>\n</li>\n<li><strong><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-2-analysis-of-ethereum-issuance-reduction-proposal-within-the-mvs-framework-11\">2. Analysis of Ethereum Issuance reduction proposal within the MVS framework</a></strong>\n<ul>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-21-the-assumption-that-ethereum-overpays-for-security-is-wrong-less-issuance-may-lead-to-centralization-of-the-validator-set-12\">2.1. The assumption that Ethereum overpays for security is wrong: less issuance may lead to centralization of the validator set</a>\n<ul>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-211-etf-inflows-would-exacerbate-centralization-in-the-context-of-a-33-stake-cap-13\">2.1.1 ETF inflows would exacerbate centralization in the context of a 33% stake cap</a></li>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-212-staked-eth-concentration-with-cexs-doesnt-necessarily-have-to-happen-with-a-higher-stake-cap-14\">2.1.2 Staked ETH concentration with CEXs doesn’t necessarily have to happen with a higher stake cap</a></li>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-213-mvi-effect-on-the-ratio-of-solo-stakers-15\">2.1.3 MVI effect on the ratio of solo stakers</a></li>\n</ul>\n</li>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-22-lst-dominance-and-cost-modeling-are-inadequate-arguments-for-issuance-reduction-19\">2.2. LST dominance and cost-modeling are inadequate arguments for issuance reduction</a>\n<ul>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-221-issuance-as-a-cost-is-a-reductive-framing-20\">2.2.1. Issuance as a cost is a reductive framing</a></li>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-222-stakers-getting-higher-real-vs-nominal-yield-is-not-significant-21\">2.2.2. Stakers getting higher real vs nominal yield is not significant</a></li>\n<li><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-223-reducing-lst-dominance-shouldnt-be-a-primary-objective-of-ethereums-monetary-policy-22\">2.2.3. Reducing LST dominance shouldn’t be a primary objective of Ethereum’s monetary policy</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992#h-3-putting-it-all-together-23\">3. Putting it all together</a></strong></li>\n</ul>\n<hr>\n<h2><a name=\"tldr-embrace-security-2\" class=\"anchor\" href=\"https://ethresear.ch#tldr-embrace-security-2\"></a>TLDR: Embrace security</h2>\n<p>Given Ethereum’s goal of building a secure and sovereign distributed system, we believe viewing Ethereum’s monetary policy through the lens of Minimum Viable Issuance (MVI) is not appropriate. Instead, we propose Maximum Viable Security (MVS) as a new framework for the community to consider in the Ethereum issuance debate. That is,</p>\n<p>From: <strong>Minimum Viable Issuance (MVI)</strong> – minimize issuance, without compromising security.<br>\n→<br>\nTo: <strong>Maximum Viable Security (MVS)</strong> – maximize security, without compromising scarcity.</p>\n<p>After covering the motivation and foundations behind MVS, we evaluate Ethereum issuance reduction proposals through the MVS lens. We show that issuance reduction can compromise security and neutrality in a direct way, through staked ETH concentration with Centralized Exchanges – and this effect, on balance, far outweighs the advantages of cutting the issuance.</p>\n<h2><a name=\"h-1-the-foundations-of-the-maximum-viable-security-mvs-framework-3\" class=\"anchor\" href=\"https://ethresear.ch#h-1-the-foundations-of-the-maximum-viable-security-mvs-framework-3\"></a>1. The foundations of the Maximum Viable Security (“MVS”) framework</h2>\n<h3><a name=\"h-11-ethereum-has-a-clear-goal-build-a-secure-and-sovereign-distributed-system-for-everyone-4\" class=\"anchor\" href=\"https://ethresear.ch#h-11-ethereum-has-a-clear-goal-build-a-secure-and-sovereign-distributed-system-for-everyone-4\"></a>1.1. Ethereum has a clear goal: build a secure and sovereign distributed system for everyone</h3>\n<blockquote>\n<p><code>There are many goals of this project; one key goal is to facilitate transactions between consenting individuals who would otherwise have no means to trust one another.</code><br>\n<em>Source: Ethereum Yellow Paper (<a href=\"https://ethereum.github.io/yellowpaper/paper.pdf\" rel=\"noopener nofollow ugc\">link</a>)</em></p>\n</blockquote>\n<p>The growth of Ethereum’s market capitalization from 0 to $400bn today underscores the market’s confidence in its current and future potential. This value hinges on Ethereum’s ability to validate state changes transparently, securely, and sovereignly.</p>\n<p>Security is a crucial part of the value proposition. Without sybil resistance and slashing defense (programmable or social) against 34% double-signing attacks, a settlement layer would not be trusted by participants. A secure validation layer is the most scalable (<a href=\"https://unenumerated.blogspot.com/2017/02/money-blockchains-and-social-scalability.html\" rel=\"noopener nofollow ugc\">link</a>) foundation for providing transaction settlement with incorruptible finality.</p>\n<p>Sovereignty is equally important – Ethereum should be able to defend against more subtle 51% attacks such as short-range reorgs and censoring (<a href=\"https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/attack-and-defense/#attackers-with-50-stake\" rel=\"noopener nofollow ugc\">link</a>), and should be able to resist coercion by state actors. If Ethereum loses sovereignty (aka autonomy), it loses its value as a neutral settlement mechanism:</p>\n<blockquote>\n<p><code>\"Decentralization\" is the broad distribution of a system's intrinsic/accepted forms of power, protecting users against arbitrary exercises of power from the recognized legitimate 'authorities' within the system's logic (e.g., validators). \"Autonomy\" is the system's resistance against extrinsic/unaccepted forms of power, protecting users against all exercises of power from authorities outside the system's logic (e.g., government authorities).</code><br>\n<em>Source: lex_node (<a href=\"https://twitter.com/lex_node/status/1799489646042165662\" rel=\"noopener nofollow ugc\">link</a>)</em></p>\n</blockquote>\n<p>While 34% attacks are costly and 51% attacks are to some extent bounded by reputation and social slashing, a gradual coercion by state actors on independent validators is more feasible, and can even be unintentional. For instance, the European Securities and Markets Authority (ESMA) recently suggested (<a href=\"https://www.esma.europa.eu/press-news/consultations/consultation-technical-standards-specifying-certain-requirements-mica-3rd#responses\" rel=\"noopener nofollow ugc\">link</a>) viewing MEV as a form of market manipulation subject to notification requirements from validators. Such regulations could make it impracticable for node operators to continue to function in Europe. In a worst-case outcome, these regulations could propagate to the rest of the world and impose artificial restrictions on how the consensus algorithm works.</p>\n<p>High autonomy is therefore maintained through robust decentralization among validators, which includes:</p>\n<ul>\n<li><strong>Client software diversity</strong>: running different types of validator software to avoid concentration risk from bugs.</li>\n<li><strong>Node operator diversity</strong>: different, independent entities running validator software to prevent individual node operators reaching higher levels of control.</li>\n<li><strong>Geographic and jurisdictional diversity</strong>: different levels of base-level infrastructure — such as connectivity to the internet, power supply, law authorities and jurisdictions — that are capable of influencing node operators.</li>\n</ul>\n<h3><a name=\"h-12-a-diverse-staking-economy-is-key-5\" class=\"anchor\" href=\"https://ethresear.ch#h-12-a-diverse-staking-economy-is-key-5\"></a>1.2. A diverse staking economy is key</h3>\n<h4><a name=\"h-121-stakers-6\" class=\"anchor\" href=\"https://ethresear.ch#h-121-stakers-6\"></a>1.2.1. Stakers</h4>\n<p>Stakers fall into three main categories:</p>\n<ol>\n<li><strong>Retail and Institutions</strong>: These participants delegate their staking to Centralized Exchanges (CEXs)</li>\n<li><strong>On-chain Actors</strong>: They delegate their staking to Decentralized Staking Middleware (DSM), such as Liquid Staking Tokens (LSTs) or decentralized pools, as well as Liquid Restaking Token protocols (LRTs) and Centralized Staking Providers (CSPs).</li>\n<li><strong>Solo Stakers</strong>: These users choose not to delegate and run validators independently</li>\n</ol>\n<h4><a name=\"h-122-validating-entities-7\" class=\"anchor\" href=\"https://ethresear.ch#h-122-validating-entities-7\"></a>1.2.2. Validating entities</h4>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/4/e4e64e83cbc59b58fdfe0316e37c8b548dfb52d8.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/e4e64e83cbc59b58fdfe0316e37c8b548dfb52d8\" title=\"tg_image_4158519118\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/4/e4e64e83cbc59b58fdfe0316e37c8b548dfb52d8_2_690x469.jpeg\" alt=\"tg_image_4158519118\" data-base62-sha1=\"wEWiaD9TEEMmgkYnnsQJVbKbhUs\" width=\"690\" height=\"469\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/4/e4e64e83cbc59b58fdfe0316e37c8b548dfb52d8_2_690x469.jpeg, https://ethresear.ch/uploads/default/optimized/3X/e/4/e4e64e83cbc59b58fdfe0316e37c8b548dfb52d8_2_1035x703.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/e/4/e4e64e83cbc59b58fdfe0316e37c8b548dfb52d8_2_1380x938.jpeg 2x\" data-dominant-color=\"E2ECEE\"></a></div><br>\n<em>Note: CSP numbers do not include capital delegated from DSM/LRTs. The above numbers are approximate and for illustration purposes; they are our best estimates from Dune (<a href=\"https://dune.com/hildobby/eth2-staking\" rel=\"noopener nofollow ugc\">1</a>, <a href=\"https://dune.com/lido/eth-deposits-stats\" rel=\"noopener nofollow ugc\">2</a>), as of June 30th 2024.</em><p></p>\n<p>A hypothetical scenario where most ETF Ether is staked with custodial services, like Coinbase, suggests that this is where most of future inflows will likely originate. Recent Bitcoin ETFs have seen ~$15b of inflows. Proportionally applied to Ethereum, this could mean about 4m ETH. Notably, 8 out of 11 Bitcoin ETFs use Coinbase as their custodian, a pattern that may repeat with ETH.</p>\n<h4><a name=\"h-123-entities-decentralization-8\" class=\"anchor\" href=\"https://ethresear.ch#h-123-entities-decentralization-8\"></a>1.2.3. Entities’ decentralization</h4>\n<p>Contributions to decentralization and thus censorship resistance and neutrality can be approximated as follows: Solo Stakers &gt; Decentralized Staking Middleware &gt; Liquid Restaking Protocols &gt; Centralized Staking Providers &gt; CEXs.</p>\n<ul>\n<li><strong>Solo Stakers</strong>: Contribute the most to decentralization because each adds an additional validator</li>\n<li><strong>DSM</strong>: Efficiently distribute delegated stake among many parties, bonded via reputation (Lido) or collateral (Rocket Pool, Lido’s Community Staking Module). Their impact on Ethereum’s decentralization is measurable and significant, with data on operational diversity publicly available and regularly updated (<a href=\"https://app.hex.tech/8dedcd99-17f4-49d8-944e-4857a355b90a/app/3f7d6967-3ef6-4e69-8f7b-d02d903f045b/latest\" rel=\"noopener nofollow ugc\">link</a>). The Herfindahl-Hirschmann Index (HHI) can also provide a useful proxy on the effect on validation concentration (<a href=\"https://dune.com/steakhouse/hhi\" rel=\"noopener nofollow ugc\">link</a>)</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/4/b4d2e88d63be2c26d7397166220ad2752e954a34.png\" data-download-href=\"https://ethresear.ch/uploads/default/b4d2e88d63be2c26d7397166220ad2752e954a34\" title=\"dune_hhi\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/4/b4d2e88d63be2c26d7397166220ad2752e954a34_2_690x411.png\" alt=\"dune_hhi\" data-base62-sha1=\"pNDOstzgflCF047tswrc2A3ppuA\" width=\"690\" height=\"411\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/4/b4d2e88d63be2c26d7397166220ad2752e954a34_2_690x411.png, https://ethresear.ch/uploads/default/optimized/3X/b/4/b4d2e88d63be2c26d7397166220ad2752e954a34_2_1035x616.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/4/b4d2e88d63be2c26d7397166220ad2752e954a34_2_1380x822.png 2x\" data-dominant-color=\"E7E7E7\"></a></div><p></p>\n<ul>\n<li><strong>Restaking Infrastructure</strong>: While not cost-optimized for native staking, these protocols distribute stake among fewer node operators without aggregating it under one entity</li>\n<li><strong>Centralized Staking Providers</strong>: Risk aggregating large amounts of stake, but competition among them can bolster decentralization if many can sustain independent businesses</li>\n<li><strong>CEXs</strong>: Benefit the most from the power law distribution of AUM, often driving staked ETH concentration. Coinbase, for instance, is the largest node operator with nearly 15% market share.</li>\n</ul>\n<h3><a name=\"h-13-there-is-no-future-proof-safe-level-of-security-9\" class=\"anchor\" href=\"https://ethresear.ch#h-13-there-is-no-future-proof-safe-level-of-security-9\"></a>1.3. There is no future-proof safe level of Security</h3>\n<p>Anders Lowsson suggests (<a href=\"https://ethresear.ch/t/reward-curve-with-tempered-issuance-eip-research-post/\">link</a>) that Ethereum should reduce its issuance, arguing that “excessive incentives for staking, beyond what is necessary for security, can unfortunately over time turn into perverse subsidies, with many downsides.” However, this raises the question of what constitutes “adequate incentives for staking” and what level of security is truly necessary.</p>\n<blockquote>\n<p><code>What exactly is \"neutrality\"? I see that term being used in handwavy fashion, especially when scaling comes up, and it's hard to know what we mean by \"preserving credible neutrality\" at the moment. Would be nice to get some info there. :)</code><br>\n<em>Source: eawosikaa (<a href=\"https://x.com/eawosikaa/status/1808005717976047799\" rel=\"noopener nofollow ugc\">link</a>)</em></p>\n</blockquote>\n<p>Today’s global capital markets are valued in the hundreds of trillions of dollars, while Ethereum represents only a tiny fraction of that. For Ethereum to become a neutral settlement layer for the world, its cost of corruption would need to be in the hundreds of billions, if not trillions, of dollars, to capture the value that could be extracted in a possible attack. For context, large value payment systems (excluding retail payments) cleared quadrillions of dollars in value in 2022 (<a href=\"https://data.bis.org/topics/CPMI_FMI/tables-and-dashboards/BIS,CPMI_T9,1.0?view=value&amp;dimensions=REP_CTY%3AUS\" rel=\"noopener nofollow ugc\">link</a>). In comparison, over the past 12mos, stablecoin transfer value on Ethereum just about cleared $8tn, or 0.5% (<a href=\"https://www.theblock.co/data/stablecoins/usd-pegged/adjusted-on-chain-volume-of-stablecoins-monthly\" rel=\"noopener nofollow ugc\">link</a>). This is consistent with the proportion of market capitalization of Ethereum relative to global capital markets (well under 1% as well).</p>\n<p>The slightest risk of insufficient security would stagnate Ethereum’s growth – decentralization and the resulting neutrality is Ethereum’s <span class=\"hashtag-raw\">#1</span> competitive advantage. No risk should be taken to erode that, and instead, we should seek to strengthen it even further. To answer Emmanuel’s question, in our framing, we would use “neutrality” interchangeably with “sovereignty” and “autonomy”: ability to defend against censorship and coercion attacks (<a href=\"https://nakamoto.com/credible-neutrality/\" rel=\"noopener nofollow ugc\">link</a>). Such that the cost of “coercion” is always higher than the benefit from manipulating the state.</p>\n<p>Anders’ argument assumes that a 34% double-singing attack is so costly and 51% censorship attack is so unlikely today, that the network can afford to focus on strengthening other layers. If Ethereum were already a major part of the world’s capital markets, this argument might hold more weight, as incremental risks would be smaller. However, reducing today the network’s most crucial features—security and sovereignty—would compromise the network’s ability to grow.</p>\n<p>Currently, Ethereum’s social layer serves as the final defense (<a href=\"https://ercwl.medium.com/the-case-for-social-slashing-59277ff4d9c7\" rel=\"noopener nofollow ugc\">link</a>) against norm violations that threaten its credible neutrality. However, this social layer is structurally fragile. It requires constant vigilance from the community so that enforcement can occur on a daily basis. Yet, as Ethereum grows, massive new inflows might bypass today’s social layer altogether. If a large bank, say, staked $1tn worth of Ether with a CEX, what chance does a community of open source developers have to enforce social norms? The key question, as Emmanuel points out, is: What is the threshold for security that Ethereum needs today and in the future? The MVI proposal, in our view, fails to address this critical question, focusing instead on the other effects of reducing the security budget.</p>\n<h3><a name=\"h-14-reframing-the-discourse-expansion-over-efficiency-10\" class=\"anchor\" href=\"https://ethresear.ch#h-14-reframing-the-discourse-expansion-over-efficiency-10\"></a>1.4. Reframing the discourse: expansion over efficiency</h3>\n<p>Ethereum should balance incentives for all stakeholders to ensure the highest level of security. This balance involves weighing long-term sustainability and expansion vs short-term efficiency to create enduring security value.</p>\n<p>MVS suggests that instead of asking “how much could we reduce issuance for staking efficiency”, we should be asking “how much network incentivisation do we need to perpetuate decentralization to maintain and expand security”.</p>\n<p>Strategically, MVI and MVS represent two different paths for Ethereum’s growth. MVI focuses on minimizing costs, benefiting ETH holders in the short term. MVS, on the other hand, emphasizes building a long-lasting moat around the network, optimizing long-term value creation for all stakeholders, including ETH holders.</p>\n<p>Ethereum’s unique appeal lies in its secure, credibly neutral blockspace. Unlike commodity blockspace, which competes on price, secure blockspace competes on features. Similar to the advanced chip industry, where success depends on computational ability rather than price, Ethereum should compete on the magnitude of security it offers. This security creates an enduring competitive advantage, accelerating value creation across the ecosystem.</p>\n<p>There is a subtlety in that the market cap of Ethereum is a variable that contributes to security, and so minimizing issuance can be seen as bolstering security. Superficially, there is a reflexive effect, where Ethereum’s security both causes and is driven by its market cap. However, we believe that Ethereum’s security making ETH valuable is the primary causation, and therefore security needs to be prioritized. Below we illustrate diagrammatically the alternative value creation paths for Ethereum contributors deciding between MVS and MVI.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/f/1f2963c356b0018f378fbf4fe73ef79e641aa362.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/1f2963c356b0018f378fbf4fe73ef79e641aa362\" title=\"tg_image_2418175601\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/f/1f2963c356b0018f378fbf4fe73ef79e641aa362_2_530x500.jpeg\" alt=\"tg_image_2418175601\" data-base62-sha1=\"4rFtFLb99BGLrP51Agg3FhitQQy\" width=\"530\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/f/1f2963c356b0018f378fbf4fe73ef79e641aa362_2_530x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/1/f/1f2963c356b0018f378fbf4fe73ef79e641aa362_2_795x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/1/f/1f2963c356b0018f378fbf4fe73ef79e641aa362_2_1060x1000.jpeg 2x\" data-dominant-color=\"F4F4F4\"></a></div><p></p>\n<h2><a name=\"h-2-analysis-of-ethereum-issuance-reduction-proposal-within-the-mvs-framework-11\" class=\"anchor\" href=\"https://ethresear.ch#h-2-analysis-of-ethereum-issuance-reduction-proposal-within-the-mvs-framework-11\"></a>2. Analysis of Ethereum Issuance reduction proposal within the MVS framework</h2>\n<p>We posit that, under the MVS framework, Ethereum issuance reduction proposals risk creating downstream effects that would compromise Ethereum’s security value. Overall, we believe that ETH’s moneyness stands to increase with greater security and autonomy, to a degree that far outweighs the downsides of issuance or externalities such as capital gains taxes.</p>\n<h3><a name=\"h-21-the-assumption-that-ethereum-overpays-for-security-is-wrong-less-issuance-may-lead-to-centralization-of-the-validator-set-12\" class=\"anchor\" href=\"https://ethresear.ch#h-21-the-assumption-that-ethereum-overpays-for-security-is-wrong-less-issuance-may-lead-to-centralization-of-the-validator-set-12\"></a>2.1. The assumption that Ethereum overpays for security is wrong: less issuance may lead to centralization of the validator set</h3>\n<h4><a name=\"h-211-etf-inflows-would-exacerbate-centralization-in-the-context-of-a-33-stake-cap-13\" class=\"anchor\" href=\"https://ethresear.ch#h-211-etf-inflows-would-exacerbate-centralization-in-the-context-of-a-33-stake-cap-13\"></a>2.1.1 ETF inflows would exacerbate centralization in the context of a 33% stake cap</h4>\n<p>Lowering the target stake ratio (<a href=\"https://ethresear.ch/t/endgame-staking-economics-a-case-for-targeting/18751\">link</a>) could lead to a concentration of staked ETH with Centralized Exchanges (CEXs), driving capital away from decentralized alternatives.</p>\n<p>Consider a scenario where a 33% cap (equivalent to 40.6 million staked ETH) is implemented, and the curve enacts a sharp drop of yield to zero as stake ratio increases from 30% (36.6 million ETH) to 33% (40.6 million ETH). Suppose Ether ETFs are launched in the US, attracting significant capital inflows. If these ETFs use Coinbase as their custodian (as 8 out of 11 BTC ETF issuers do), this could lead to $15 billion in inflows, adding approximately 4.5 million ETH to Coinbase’s custody. The simulated impact on the validation market might look like this; the 40.1m max staked ETH being slightly lower then 40.6 represents the fact that when yield becomes extremely low there is no marginal staker at all on the market.</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th><strong>Illustrative impact on validation market with a 33% MVI limit</strong></th>\n<th style=\"text-align:center\"><strong>Current composition</strong></th>\n<th style=\"text-align:center\"><strong>Effect in 4 years</strong></th>\n<th style=\"text-align:center\"><strong>Future composition</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ETH staked</td>\n<td style=\"text-align:center\">33.1m</td>\n<td style=\"text-align:center\">+7m</td>\n<td style=\"text-align:center\">40.1m</td>\n</tr>\n<tr>\n<td>ETH held with Coinbase</td>\n<td style=\"text-align:center\">17.5m</td>\n<td style=\"text-align:center\">+4.5m (ETFs)</td>\n<td style=\"text-align:center\">22m</td>\n</tr>\n<tr>\n<td>ETH held &amp; staked with Coinbase</td>\n<td style=\"text-align:center\">4.3m</td>\n<td style=\"text-align:center\">+10m</td>\n<td style=\"text-align:center\">14.3m</td>\n</tr>\n<tr>\n<td>ETH staked on-chain via LSTs/LRTs</td>\n<td style=\"text-align:center\">13.7m</td>\n<td style=\"text-align:center\">-2m</td>\n<td style=\"text-align:center\">11.7</td>\n</tr>\n<tr>\n<td>ETH staked by other entities</td>\n<td style=\"text-align:center\">15.1</td>\n<td style=\"text-align:center\">-1m</td>\n<td style=\"text-align:center\">14.1</td>\n</tr>\n</tbody>\n</table>\n</div><ol>\n<li>Market forces and fiduciary duties ensure that CEXs like Coinbase squeeze the maximum amount of profit from staking-as-a-service (for their customers and ETF issuers), and long-term the majority of their holdings are staked.</li>\n</ol>\n<p>We model the above impact by assigning a 10m staked ETH inflow to Coinbase. When Coinbase’s stake reaches 7.8 million, total staked ETH will be about 36.6 million, causing rewards to drop sharply. Consequently:</p>\n<ol start=\"2\">\n<li>Lido stETH and other LST/LRT users, being sophisticated on-chain actors, will seek higher rewards elsewhere. The switching cost of moving capital on-chain is extremely low, so there is no incentive for capital to stay – the capital will leave for higher yields in DeFi.</li>\n<li>CSPs will exit these protocols since the 5% fee from middleware won’t cover their costs.</li>\n</ol>\n<p>We model the above two impacts by assigning a 2 million ETH outflow to LSTs/LRTs and a 1 million ETH outflow to other entities.</p>\n<ol start=\"4\">\n<li>Meanwhile, CEXs like Coinbase can continue offering staking products because their marginal costs are extremely low, and can even be offset by other business segments. Their customers may remain loyal or lack alternatives due to regulations or unsophisticated nature of the user base. This can happen despite Coinbase having higher fees (25%) compared to better-performing alternatives (5-15%).</li>\n</ol>\n<p>In this scenario, Coinbase could control 14.3 million ETH, surpassing the 33% network control threshold independently, while Lido and other DSMs lose market share.</p>\n<h4><a name=\"h-212-staked-eth-concentration-with-cexs-doesnt-necessarily-have-to-happen-with-a-higher-stake-cap-14\" class=\"anchor\" href=\"https://ethresear.ch#h-212-staked-eth-concentration-with-cexs-doesnt-necessarily-have-to-happen-with-a-higher-stake-cap-14\"></a>2.1.2 Staked ETH concentration with CEXs doesn’t necessarily have to happen with a higher stake cap</h4>\n<p>Without the cap, both CEXs and on-chain market segments could coexist without putting pressure on each other due to sufficient demand for staking. LSTs, LRTs and CSPs wouldn’t face the dramatic yield decrease that would occur when Coinbase’s stake reaches 7.8 million ETH. Some might argue that Coinbase would undercut other staking providers by lowering its 25% fee. However, this is uncertain. Coinbase’s customer base seems inelastic, meaning the most profitable strategy might be to maintain or even increase their fees. In addition, even if Coinbase goes after the on-chain market and lowers their fees, the market may not be fully efficient – some people might prefer to stick with LSTs due to their decentralization preference.</p>\n<p>In a highly segmented market, margins don’t need to uniformly compress, leaving space for both CEXs/CSPs and LSTs/restaking segments to thrive. LSTs and CEXs serve distinct market segments. For CEXs, the most profitable approach is to charge high fees from retail and institutional clients (e.g., Coinbase’s 25%) without directly competing with LSTs. Targeting stake ratios could stifle the market for on-chain actors but not significantly affect the market for retail and institutional clients.</p>\n<p>Thus, in the absence of a stake cap, the coexistence of various staking actors could lead to a more balanced distribution of staked ETH across different market segments.</p>\n<h4><a name=\"h-213-mvi-effect-on-the-ratio-of-solo-stakers-15\" class=\"anchor\" href=\"https://ethresear.ch#h-213-mvi-effect-on-the-ratio-of-solo-stakers-15\"></a>2.1.3 MVI effect on the ratio of solo stakers</h4>\n<h5><a name=\"the-importance-of-this-effect-is-overrated-16\" class=\"anchor\" href=\"https://ethresear.ch#the-importance-of-this-effect-is-overrated-16\"></a>The importance of this effect is overrated</h5>\n<p>Approximately 30 million ETH is delegated, while only 3 million is solo staked. It is evident that delegation dominates as a modality of staking. The key issue is ETH concentration with CEXs, rather than the interaction between solo stakers and LSTs.</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><strong>Grouping</strong></th>\n<th style=\"text-align:center\"><strong>Approximate stake</strong></th>\n<th style=\"text-align:center\"><strong>Type</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">CEXs</td>\n<td style=\"text-align:center\">10m</td>\n<td style=\"text-align:center\">Delegated</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">LSTs, LRTs, CSPs</td>\n<td style=\"text-align:center\">20m</td>\n<td style=\"text-align:center\">Delegated</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Solo stakers</td>\n<td style=\"text-align:center\">3m</td>\n<td style=\"text-align:center\">Solo staked</td>\n</tr>\n</tbody>\n</table>\n</div><h5><a name=\"lsts-and-csps-can-also-contribute-to-overall-network-quality-17\" class=\"anchor\" href=\"https://ethresear.ch#lsts-and-csps-can-also-contribute-to-overall-network-quality-17\"></a>LSTs and CSPs can also contribute to overall network quality</h5>\n<p>While solo stakers are often seen as the backbone of Ethereum’s network security, the contributions of LSTs and centralized staking providers are undervalued.</p>\n<p>There is a lot of nuance to the emergent risks of malicious actors emerging from LSTs such as Lido. There certainly are risks (cf. Mike Neuder’s extensive post on the subject, <a href=\"https://notes.ethereum.org/@mikeneuder/magnitude-and-direction\" rel=\"noopener nofollow ugc\">link</a>). However, there are also many benefits to deterministic stake allocation to professional or larger node operators. It’s possible for solo stakers to have different motivations than an LST whose main objective is to decentralize Ethereum validation (<a href=\"https://research.lido.fi/t/lido-dao-vibe-alignment-purpose-mission-vision/\" rel=\"noopener nofollow ugc\">link</a>). Some of the most noteworthy examples of malicious proposers, for example, have come from solo validators, such as those involved in the April 3rd, 2023 MEV Boost exploit (<a href=\"https://collective.flashbots.net/t/post-mortem-april-3rd-2023-mev-boost-relay-incident-and-related-timing-issue/\" rel=\"noopener nofollow ugc\">link</a>).</p>\n<p>Centralized staking providers and LSTs are quantifiably more performant validators than solo stakers. There is significant existing data (<a href=\"http://rated.network/\" rel=\"noopener nofollow ugc\">link</a>) today to quantify proposer effectiveness and attester effectiveness, which drive fewer missed slots and attestations, faster block propagation and chain finalization. Overall the network is much more stable and responsive with professional validators than it would otherwise be, but also more decentralized.</p>\n<h5><a name=\"issuance-reductions-would-likely-decrease-the-share-of-solo-stakers-18\" class=\"anchor\" href=\"https://ethresear.ch#issuance-reductions-would-likely-decrease-the-share-of-solo-stakers-18\"></a>Issuance reductions would likely decrease the share of solo stakers</h5>\n<p>Some argue that solo stakers are less elastic with respect to yield, because they are as a cohort more heterogeneous than other validating entities, and hence have a steeper supply curve.</p>\n<p>However, our simplified analysis of Ethereum validator economics shows this argument is flawed. Solo stakers in fact have much higher fixed costs, making them much less adaptable to a low issuance rates compared to larger node operators. Specifically,</p>\n<p>For solo stakers:</p>\n<ul>\n<li>Staking APR is lower and closer to the Median staking APR (i.e. 2.4% per Rated, <a href=\"https://explorer.rated.network/network?network=mainnet&amp;timeWindow=1d&amp;rewardsMetric=average&amp;geoDistType=all&amp;hostDistType=all&amp;soloProDist=stake\" rel=\"noopener nofollow ugc\">link</a>) than scale node operators due to the unpredictability of proposer rewards, tips and MEV</li>\n<li>The costs of running a single validator include hardware (32 GB RAM, 4 TB SSD) and electricity. Home internet plans are sufficient for solo stakers, so broadband cost is assumed to be 0 (no incremental cost).</li>\n<li>In this set up, 100% of solo staker’s total costs are fixed costs. Assuming hardware depreciation of 5 years, profit margins are &gt;90% to solo stakers</li>\n<li>We exclude the need to reserve 32 ETH in capital as collateral, which brings the capital outlay (though not outright investment) significantly higher</li>\n</ul>\n<p>Then consider, on the opposite end of the spectrum, a large centralized node operator with 100,000 validators:</p>\n<ul>\n<li>Staking APR is higher and closer to the Average staking APR (i.e. 3.3% per Rated, <a href=\"https://explorer.rated.network/network?network=mainnet&amp;timeWindow=1d&amp;rewardsMetric=average&amp;geoDistType=all&amp;hostDistType=all&amp;soloProDist=stake\" rel=\"noopener nofollow ugc\">link</a>) as stake pooling smoothes the unpredictable components of both CL (proposer rewards) and EL (tips + MEV) rewards</li>\n<li>Costs include hardware but also significant operational costs including technical and marketing staff</li>\n<li>Hardware and internet are fixed costs, electricity is a variable cost and staff costs can be seen as a semi-variable cost\n<ul>\n<li>Employment footprint can be eventually adjusted should the top line be negatively impacted</li>\n</ul>\n</li>\n<li>Counting half of the maintenance &amp; growth spend as fixed and the other half as variable, we arrive at fixed costs representing 64% of the large node operators’ total costs (i.e. much less than solo stakers). Profit margins are also lower than those of solo stakers</li>\n</ul>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Assumptions</th>\n<th style=\"text-align:right\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ETH ($)</td>\n<td style=\"text-align:right\">3,500</td>\n</tr>\n<tr>\n<td>Average staking APR</td>\n<td style=\"text-align:right\">3.3%</td>\n</tr>\n<tr>\n<td>Median staking APR</td>\n<td style=\"text-align:right\">2.4%</td>\n</tr>\n<tr>\n<td>MVI reduction assumed</td>\n<td style=\"text-align:right\">2.0%</td>\n</tr>\n</tbody>\n</table>\n</div><div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th><strong>Illustrative Annual P/L</strong></th>\n<th style=\"text-align:center\"><strong>Current</strong></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td style=\"text-align:center\"><strong>Solo Staker</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>Large Node Operator</strong></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:center\"><strong>Quantity</strong></td>\n<td style=\"text-align:center\"><strong>$</strong></td>\n<td style=\"text-align:center\"><strong>Quantity</strong></td>\n<td style=\"text-align:center\"><strong>$</strong></td>\n</tr>\n<tr>\n<td># of validators</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">112,000</td>\n<td style=\"text-align:center\">100,000</td>\n<td style=\"text-align:center\">11,200,000,000</td>\n</tr>\n<tr>\n<td>Staking APR</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">2.4%</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">3.3%</td>\n</tr>\n<tr>\n<td>Staking income</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">2,677</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">367,360,000</td>\n</tr>\n<tr>\n<td>Commission</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">10%</td>\n<td style=\"text-align:center\">36,736,000</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td><strong>Hardware cost</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>800</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>7,750,000</strong></td>\n</tr>\n<tr>\n<td>Computer/servers</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">800</td>\n<td style=\"text-align:center\">350</td>\n<td style=\"text-align:center\">7,000,000</td>\n</tr>\n<tr>\n<td>Backup servers</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">100</td>\n<td style=\"text-align:center\">750,000</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td><strong>Operational cost</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>74</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>19,794,780</strong></td>\n</tr>\n<tr>\n<td>Electricity</td>\n<td style=\"text-align:center\">70Wh, $0.12/kWh</td>\n<td style=\"text-align:center\">74</td>\n<td style=\"text-align:center\">750Wh/server, $0.12/kWh</td>\n<td style=\"text-align:center\">354,780</td>\n</tr>\n<tr>\n<td>Internet connection</td>\n<td style=\"text-align:center\">No incremental cost</td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">540GB/month/val @ $0.03/GB</td>\n<td style=\"text-align:center\">19,440,000</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td><strong>Maintenance &amp; growth</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>0</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>11,400,000</strong></td>\n</tr>\n<tr>\n<td>Technical staff</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">70</td>\n<td style=\"text-align:center\">8,400,000</td>\n</tr>\n<tr>\n<td>Marketing/admin staff</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">30</td>\n<td style=\"text-align:center\">3,000,000</td>\n</tr>\n<tr>\n<td>Cybersecurity/miscellaneous</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">1,000,000</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td><strong>Total cost (assume 5Y hardware depreciation)</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>234</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>32,744,780</strong></td>\n</tr>\n<tr>\n<td>o/w fixed cost</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">100%</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">64%</td>\n</tr>\n<tr>\n<td>o/w variable cost</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">0%</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">36%</td>\n</tr>\n<tr>\n<td><strong>Payback period on capex (months)</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>3.9</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>23.3</strong></td>\n</tr>\n<tr>\n<td><strong>Annual income/loss</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>2,443</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>3,991,220</strong></td>\n</tr>\n<tr>\n<td><strong>Profit margin (excl. ETH at stake)</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>91.3%</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>10.9%</strong></td>\n</tr>\n</tbody>\n</table>\n</div><p>In the event that MVI reduces staking APR for all stakers (e.g. -200bps), the below scenario analysis helps visualize how different stakers may be impacted differently. High level:</p>\n<ul>\n<li>Solo stakers have very limited, if no, way of adjusting their underlying costs. 100% of the reduced staking rewards will fall through to the bottom line, resulting in a dramatic reduction in profit margin. As a result, the payback period on capex (i.e. hardware) multiplies from 3.9 months to 47.2 months in our example, without considering the need to raise 32 ETH to activate a validator to begin with. This raises the question of whether incremental demand from new solo stakers could be sustained in the post-MVI world</li>\n<li>Meanwhile, large node operators have more levers to pull to protect their profits and capex payback periods\n<ul>\n<li>As in Scenario 1, node operators can raise their commission</li>\n<li>As in Scenario 2, node operators can raise their commission and reduce variable costs, notably staff costs</li>\n<li>With very minor changes to their structure they can come back to prior levels of profit</li>\n</ul>\n</li>\n</ul>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th><strong>Illustrative Annual P/L</strong></th>\n<th style=\"text-align:center\"><strong>If staking APR reduces by 200bps</strong></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td style=\"text-align:center\"><strong>Solo Staker</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>Large Node Operator - Scenario 1</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>Large Node Operator - Scenario 2</strong></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:center\"><strong>Quantity</strong></td>\n<td style=\"text-align:center\"><strong>$</strong></td>\n<td style=\"text-align:center\"><strong>Quantity</strong></td>\n<td style=\"text-align:center\"><strong>$</strong></td>\n<td style=\"text-align:center\"><strong>Quantity</strong></td>\n<td style=\"text-align:center\"><strong>$</strong></td>\n</tr>\n<tr>\n<td># of validators</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">112,000</td>\n<td style=\"text-align:center\">100,000</td>\n<td style=\"text-align:center\">11,200,000,000</td>\n<td style=\"text-align:center\">100,000</td>\n<td style=\"text-align:center\">11,200,000,000</td>\n</tr>\n<tr>\n<td>Staking APR</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong><em>0.4%</em></strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong><em>1.3%</em></strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong><em>1.3%</em></strong></td>\n</tr>\n<tr>\n<td>Staking income</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">437</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">143,360,000</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">143,360,000</td>\n</tr>\n<tr>\n<td>Commission</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong><em>25%</em></strong></td>\n<td style=\"text-align:center\">35,840,000</td>\n<td style=\"text-align:center\"><strong><em>25%</em></strong></td>\n<td style=\"text-align:center\">35,840,000</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td><strong>Hardware cost</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>800</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>7,750,000</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>7,750,000</strong></td>\n</tr>\n<tr>\n<td>Computer/servers</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">800</td>\n<td style=\"text-align:center\">350</td>\n<td style=\"text-align:center\">7,000,000</td>\n<td style=\"text-align:center\">350</td>\n<td style=\"text-align:center\">7,000,000</td>\n</tr>\n<tr>\n<td>Backup servers</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">100</td>\n<td style=\"text-align:center\">750,000</td>\n<td style=\"text-align:center\">100</td>\n<td style=\"text-align:center\">750,000</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td><strong>Operational cost</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>74</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>19,794,780</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>19,794,780</strong></td>\n</tr>\n<tr>\n<td>Electricity</td>\n<td style=\"text-align:center\">70Wh, $0.12/kWh</td>\n<td style=\"text-align:center\">74</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">354,780</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">354,780</td>\n</tr>\n<tr>\n<td>Internet connection</td>\n<td style=\"text-align:center\">No incremental cost</td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">19,440,000</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">19,440,000</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td><strong>Maintenance &amp; growth</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>0</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>11,400,000</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>10,504,000</strong></td>\n</tr>\n<tr>\n<td>Technical staff</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">70</td>\n<td style=\"text-align:center\">8,400,000</td>\n<td style=\"text-align:center\"><strong><em>64</em></strong></td>\n<td style=\"text-align:center\">7,739,789</td>\n</tr>\n<tr>\n<td>Marketing/admin staff</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">30</td>\n<td style=\"text-align:center\">3,000,000</td>\n<td style=\"text-align:center\"><strong><em>28</em></strong></td>\n<td style=\"text-align:center\">2,764,211</td>\n</tr>\n<tr>\n<td>Cybersecurity/miscellaneous</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">1,000,000</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">1,000,000</td>\n</tr>\n<tr>\n<td></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td><strong>Total cost (assume 5Y hardware depreciation)</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>234</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>32,744,780</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>31,848,780</strong></td>\n</tr>\n<tr>\n<td>o/w fixed cost</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">100%</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">64%</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">66%</td>\n</tr>\n<tr>\n<td>o/w variable cost</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">0%</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">36%</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">34%</td>\n</tr>\n<tr>\n<td><strong>Payback period on capex (months)</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>47.2</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>30.0</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>23.3</strong></td>\n</tr>\n<tr>\n<td><strong>Annual income/loss</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>203</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>3,095,220</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>3,991,220</strong></td>\n</tr>\n<tr>\n<td><strong>Profit margin (excl. ETH at stake)</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>46.5%</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>8.6%</strong></td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><strong>11.1%</strong></td>\n</tr>\n</tbody>\n</table>\n</div><p><em>Illustrative figures can be found <a href=\"https://docs.google.com/spreadsheets/d/1tr7VJqzJLiywf34_debHa20wfjU5d8db1eYrJWU0i3Q/edit?gid=0#gid=0\" rel=\"noopener nofollow ugc\">here</a></em></p>\n<p>Due to the presence of a higher proportion of fixed costs, solo stakers (and smaller node operators alike) will show higher sensitivity to changes in staking rewards compared to larger node operators. The corollary is that as MVI reduces staking reward APR, the marginal players may be priced out, leading to a greater centralization of stake. This would exacerbate the already decreasing trend of solo stakers alongside Ethereum’s issuance compression over time.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/7/c75ca71bdb5bbc1207a30f9439fd1dc937b2aa59.png\" data-download-href=\"https://ethresear.ch/uploads/default/c75ca71bdb5bbc1207a30f9439fd1dc937b2aa59\" title=\"dune_marketshare\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/7/c75ca71bdb5bbc1207a30f9439fd1dc937b2aa59_2_690x411.png\" alt=\"dune_marketshare\" data-base62-sha1=\"srDwvg5bLLmlhSqnQeLkcjGgYnn\" width=\"690\" height=\"411\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/7/c75ca71bdb5bbc1207a30f9439fd1dc937b2aa59_2_690x411.png, https://ethresear.ch/uploads/default/optimized/3X/c/7/c75ca71bdb5bbc1207a30f9439fd1dc937b2aa59_2_1035x616.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/7/c75ca71bdb5bbc1207a30f9439fd1dc937b2aa59_2_1380x822.png 2x\" data-dominant-color=\"A47D76\"></a></div><br>\n<em>Source: Dune (<a href=\"https://dune.com/queries/3852057/6478867\" rel=\"noopener nofollow ugc\">link</a>)</em><p></p>\n<h3><a name=\"h-22-lst-dominance-and-cost-modeling-are-inadequate-arguments-for-issuance-reduction-19\" class=\"anchor\" href=\"https://ethresear.ch#h-22-lst-dominance-and-cost-modeling-are-inadequate-arguments-for-issuance-reduction-19\"></a>2.2. LST dominance and cost-modeling are inadequate arguments for issuance reduction</h3>\n<h4><a name=\"h-221-issuance-as-a-cost-is-a-reductive-framing-20\" class=\"anchor\" href=\"https://ethresear.ch#h-221-issuance-as-a-cost-is-a-reductive-framing-20\"></a>2.2.1. Issuance as a cost is a reductive framing</h4>\n<p>“Issuance as a cost” concerns the dilution effect on native ETH holders and the potential welfare loss due to externalities like taxes.</p>\n<p>The first component focuses on the direct impact of issuance. It redistributes network ownership from unstaked ETH holders to staked ETH holders. High issuance rates force ETH holders to stake to avoid dilution. This increases Ethereum’s security and neutrality but comes with inconvenience and some risk for native ETH holders – which, under MVS, doesn’t qualify as strongly undesirable. Moreover, the cumulative effect could even be seen as beneficial, to the extent that more stake landing with a distributed set of validators justifies investors’ inconvenience.</p>\n<p>The second component addresses additional costs for stakers due to taxes. ETH holders who earn staking rewards may face tax obligations, creating additional sell pressure. However, this concern is specific to certain jurisdictions and points in time. Furthermore, the impact of this sell pressure on Ethereum’s overall functionality is questionable. Assuming 3.5% staking rewards, a $400bn ETH market cap, and 30% average taxes paid by all stakers, we get $4.2bn in annual sell pressure. Given Ethereum’s daily trading volume is in billions, absorbing 1% sell pressure over a year seems immaterial. Furthermore, LSTs such as wstETH may even provide an efficient way to postpone the tax payments, since the tax event might be triggered only when wstETH is sold.</p>\n<p>Even though ETH market cap is significant in determining attack costs, the relatively minor effect of sell pressure does not provide enough security benefits to justify reducing issuance. The trade-offs include potential staked ETH concentration, loss of sovereignty, and a more substantial decrease in market cap as a result.</p>\n<h4><a name=\"h-222-stakers-getting-higher-real-vs-nominal-yield-is-not-significant-21\" class=\"anchor\" href=\"https://ethresear.ch#h-222-stakers-getting-higher-real-vs-nominal-yield-is-not-significant-21\"></a>2.2.2. Stakers getting higher real vs nominal yield is not significant</h4>\n<p>This argument, while mathematically beautiful (<a href=\"https://notes.ethereum.org/@mikeneuder/subsol#3-Scaled-Root-Curve-alternative-issuance\" rel=\"noopener nofollow ugc\">link</a>), is not significant in magnitude. It does not affect security and neutrality in any way; in fact, it is not at all clear if there is any benefit to Ethereum in fewer stakers getting higher real yield compared to more stakers getting less real yield. In addition, this analysis assumes concave supply curves with respect to nominal yield, while it is possible that at a higher staking ratio we should adjust our analysis to concave supply curves with respect to real yield.</p>\n<h4><a name=\"h-223-reducing-lst-dominance-shouldnt-be-a-primary-objective-of-ethereums-monetary-policy-22\" class=\"anchor\" href=\"https://ethresear.ch#h-223-reducing-lst-dominance-shouldnt-be-a-primary-objective-of-ethereums-monetary-policy-22\"></a>2.2.3. Reducing LST dominance shouldn’t be a primary objective of Ethereum’s monetary policy</h4>\n<p>This argument is directly related to security and neutrality, and thus can be analyzed under a security-maximizing framework.</p>\n<p>In his article (<a href=\"https://notes.ethereum.org/@mikeneuder/magnitude-and-direction\" rel=\"noopener nofollow ugc\">link</a>) Mike Neuder analyzed various directions and magnitudes of possible Lido attacks on Ethereum in the future. While there are several potential attacks, all of them have a corresponding mitigation plan. Dual governance is at the heart of many of those mitigations. DG is a mechanism that allows stETH holders to slow down Lido’s governance and exit from the protocol before any decision is made. This mechanism is in active and final stages of development (<a href=\"https://research.lido.fi/t/dual-governance-design-and-implementation-proposal\" rel=\"noopener nofollow ugc\">link</a>).</p>\n<p>Another argument for issuance reduction is that stETH risks substituting ETH as the de-facto money and collateral. While there is certainly a possibility that LSTs wind up replacing a lot of ETH functionality in DeFi, it does not diminish the moneyness of ETH – all LSTs are underscored by ETH, and thus derive their value from ETH. In order to execute any of these transactions, users will still need ETH to pay for gas, at the very least. Furthermore, ETH will continue to be bridged to various L2s either way, so at a baseline ETH velocity will already decline with broader adoption of L2s, without compromising its moneyness.</p>\n<p>Finally, there are unintended consequences to targeting individual applications in an opinionated manner in order to manipulate the viability of ETH as collateral or as commodity money. The long-term roadmap of Ethereum should not be hostage to short-term tactical considerations, least of all on the application layer. The growth of LSTs has allowed the growth of user activity on Ethereum and has also increased the velocity and usage of Ether itself.</p>\n<h2><a name=\"h-3-putting-it-all-together-23\" class=\"anchor\" href=\"https://ethresear.ch#h-3-putting-it-all-together-23\"></a>3. Putting it all together</h2>\n<p>MVI, as a framework, ultimately suggests to squeeze as much as possible out of staking, so that stakers’ cost and revenue are more or less at the same low rate. The major problem of this approach is that market forces structurally do not reward decentralization, and ultimately drive stake concentration to CEXs, which are entities with the lowest cost validators and the most inelastic customer base. Thus the downside of MVI is undermining the security and neutrality of Ethereum. In our view, the benefits of MVI, such as decreasing the selling pressure from taxes, do not justify taking this risk on balance.</p>\n<p>MVS, on the other hand, suggests evaluating monetary policies primarily through the lens of how it affects security and neutrality, the core value propositions of Ethereum. One of the arguments for issuance reduction, namely to tackle LST dominance, indeed falls into MVS focus. However, the security and neutrality concerns of LST dominance are of second order in nature (“if dual governance doesn’t work”, “LST becomes an additional risk layer for all users”, etc). Meanwhile, stake accumulating in CEXs rather than in LSTs, LRTs or even CSPs creates a very real risk of staked ETH concentration with one single entity. As such, we do not see the case where LST dominance risk outweighs the risk of stake concentration with CEXs.</p>\n<p>While we presented the MVS framework, and accordingly evaluated the issuance reduction proposal, the natural question stands: what would be the right issuance policy under the MVS approach? This is an incredibly complex and deep question that we would like to explore in future. Some of the directions that we have in mind include:</p>\n<ul>\n<li>How do we quantifiably measure security? Is there a way for a protocol to see its security? Credit to the contributions from the StakeSure (<a href=\"https://arxiv.org/abs/2401.05797\" rel=\"noopener nofollow ugc\">link</a>) paper in this direction.</li>\n<li>Guided by MVS, rather than focusing on value creation through cost reductions, we should instead consider the value creation by improving security and neutrality. There is a heuristic argument that increasing issuance can improve security through making the network more complex via a more diverse validator set. Is there a way to make this precise? How do we make sure that the extra issued ETH strictly improves security and neutrality?</li>\n<li>Is there a case for a marginal improvement analysis: the more diverse the validator set is, the more complex the network becomes, and improvements to security could have increasing marginal contributions. (Similar to how complexity contributes to entropy and layered security, <a href=\"https://people.math.harvard.edu/~ctm/home/text/others/shannon/entropy/entropy.pdf\" rel=\"noopener nofollow ugc\">link</a>)</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/f/1f6daf84bc2dfabd3b7747f049d71b9597079ddb.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/1f6daf84bc2dfabd3b7747f049d71b9597079ddb\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/f/1f6daf84bc2dfabd3b7747f049d71b9597079ddb_2_690x389.jpeg\" alt=\"image\" data-base62-sha1=\"4u1NIExqUrv0gLSwh1F4Ahrg4jx\" width=\"690\" height=\"389\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/f/1f6daf84bc2dfabd3b7747f049d71b9597079ddb_2_690x389.jpeg, https://ethresear.ch/uploads/default/optimized/3X/1/f/1f6daf84bc2dfabd3b7747f049d71b9597079ddb_2_1035x583.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/1/f/1f6daf84bc2dfabd3b7747f049d71b9597079ddb_2_1380x778.jpeg 2x\" data-dominant-color=\"F7F6F5\"></a></div><p></p>\n<hr>\n<p><em>Disclosure: authors are variously affiliated with cyber.fund, Lido DAO, Steakhouse Financial, Progrmd Capital</em></p>\n            <p><small>5 posts - 3 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992\">Read full topic</a></p>","link":"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992","pubDate":"Sat, 06 Jul 2024 21:56:34 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19992"},"source":{"@url":"https://ethresear.ch/t/maximum-viable-security-a-new-framing-for-ethereum-issuance/19992.rss","#text":"Maximum Viable Security: A New Framing for Ethereum Issuance"},"filter":false},{"title":"Releasing Constantine v0.1.0, a modular cryptography stack for Ethereum","dc:creator":"mratsim","category":"Cryptography","description":"<p>I am very proud to release the very first version of <a href=\"https://github.com/mratsim/constantine\" rel=\"noopener nofollow ugc\">Constantine</a>, a high-performance modular cryptography stack for blockchains and proof systems.<br>\nIt is currently as of July 2024 the fastest implementation of Ethereum-specific cryptographic primitives:</p>\n<ul>\n<li>BLS signatures</li>\n<li>BN254 precompiles (EIP-196 and EIP-197, repriced in EIP-1108)</li>\n<li>BLS12-381 precompiles (EIP-2537)</li>\n<li>KZG Polynomial commitments (EIP-4844)</li>\n</ul>\n<p>Constantine has bindings in C, Go, Nim and Rust.</p>\n<h2><a name=\"history-1\" class=\"anchor\" href=\"https://ethresear.ch#history-1\"></a>History</h2>\n<p>Constantine is written in <a href=\"https://nim-lang.org/\" rel=\"noopener nofollow ugc\">Nim</a>, the language was chosen by Status for Nimbus for its expressiveness, its type system strength, the ease to wrap C and C++ and syntactic closeness to Python so that ethereum/research and PyEVM could be ported with ease.</p>\n<p>In February 2018, after woes with C++ in Nimbus, the first library I built was a fixed precision big integer library for uint256.<br>\nThen we (at Status) realized that we would also need elliptic curves for secp256k1 and BN254 (also known as BN256 or alt_bn128).</p>\n<p>How hard could it be to implement elliptic curves, with cryptographic hardening, once you know how to write big integers?</p>\n<p>Turned out it was too hard, after a week or so another approach was taken for time-to-market and correctness reasons:</p>\n<ul>\n<li>Use libsecp256k1 from Bitcoin</li>\n<li>Port 1-1 bncurves from Zcash for BN254</li>\n<li>Use Apache Milagro for BLS12-381</li>\n</ul>\n<p>It was then restarted as a personal side-project in February 2020 after learning a lot from implementing hashing-to-curve and Ethereum BLS signatures and identifying significant performance gap. <em>Note that this predates BLST which was initially released in June 2020.</em></p>\n<p>Since then Constantine has seen regular contributions (sometimes with couple months gap) up to where it is today.</p>\n<h2><a name=\"performance-2\" class=\"anchor\" href=\"https://ethresear.ch#performance-2\"></a>Performance</h2>\n<h3><a name=\"ethereum-bls-signatures-consensus-layer-3\" class=\"anchor\" href=\"https://ethresear.ch#ethereum-bls-signatures-consensus-layer-3\"></a>Ethereum BLS signatures (Consensus Layer)</h3>\n<p>Benchmarks are done on an AMD Ryzen 7840U, a low-power ultra-mobile 8-core CPU from 2023.</p>\n<h4><a name=\"blst-through-nim-blscurve-4\" class=\"anchor\" href=\"https://ethresear.ch#blst-through-nim-blscurve-4\"></a>BLST (through nim-blscurve)</h4>\n<p>Nim-blscurve is the backend of Nimbus-eth2. As Nim compiles to machine code through C (or C++), calling C has zero-overhead from Nim.</p>\n<p>Repro.<br>\nInstall the latest Nim version, Nim v2.0.8.</p>\n<pre><code class=\"lang-auto\">git clone https://github.com/status-im/nim-blscurve\ncd nim-blscurve\ngit submodule update --init\nnimble bench\n</code></pre>\n<p>2 benchmarks will be done with 2 different memory management solutions (different implementations of refcounting)<br>\nBLST is as-of v0.3.12 (May 2024) with runtime CPU features detection</p>\n<pre><code class=\"lang-auto\">Backend: BLST, mode: 64-bit\n====================================================================================================================================\n\nScalar multiplication G1 (255-bit, constant-time)                             10332.180 ops/s        96785 ns/op       318784 cycles\nScalar multiplication G2 (255-bit, constant-time)                              4622.247 ops/s       216345 ns/op       712585 cycles\nEC add G1 (constant-time)                                                   1795332.136 ops/s          557 ns/op         1836 cycles\nEC add G2 (constant-time)                                                    713775.874 ops/s         1401 ns/op         4617 cycles\n------------------------------------------------------------------------------------------------------------------------------------\nPairing (Miller loop + Final Exponentiation)                                   1484.823 ops/s       673481 ns/op      2218271 cycles\n------------------------------------------------------------------------------------------------------------------------------------\nHash to G2 (Draft #9) + affine conversion                                      6795.232 ops/s       147162 ns/op       484712 cycles\n------------------------------------------------------------------------------------------------------------------------------------\nBLS signature                                                                  3490.864 ops/s       286462 ns/op       943532 cycles\nBLS verification                                                               1212.302 ops/s       824877 ns/op      2716928 cycles\nBLS agg verif of 1 msg by 128 pubkeys                                          1139.886 ops/s       877281 ns/op      2889519 cycles\n------------------------------------------------------------------------------------------------------------------------------------\nBLS verif of 6 msgs by 6 pubkeys                                                203.231 ops/s      4920498 ns/op     16206824 cycles\nSerial batch verify 6 msgs by 6 pubkeys (with blinding)                         359.968 ops/s      2778025 ns/op      9150078 cycles\nParallel batch verify of 6 msgs by 6 pubkeys (with blinding)                    615.452 ops/s      1624822 ns/op      5351722 cycles\n------------------------------------------------------------------------------------------------------------------------------------\nBLS verif of 60 msgs by 60 pubkeys                                               20.310 ops/s     49236672 ns/op    162172626 cycles\nSerial batch verify 60 msgs by 60 pubkeys (with blinding)                        42.709 ops/s     23414406 ns/op     77120772 cycles\nParallel batch verify of 60 msgs by 60 pubkeys (with blinding)                  250.298 ops/s      3995236 ns/op     13159139 cycles\n------------------------------------------------------------------------------------------------------------------------------------\nBLS verif of 180 msgs by 180 pubkeys                                              6.746 ops/s    148237745 ns/op    488256390 cycles\nSerial batch verify 180 msgs by 180 pubkeys (with blinding)                      14.419 ops/s     69354258 ns/op    228434104 cycles\nParallel batch verify of 180 msgs by 180 pubkeys (with blinding)                 99.467 ops/s     10053540 ns/op     33113513 cycles\n------------------------------------------------------------------------------------------------------------------------------------\n\nUsing nthreads = 16. The number of threads can be changed with TP_NUM_THREADS environment variable.\n</code></pre>\n<h4><a name=\"constantine-5\" class=\"anchor\" href=\"https://ethresear.ch#constantine-5\"></a>Constantine</h4>\n<p>GCC generates poor code everwhere assembly is not used, hence we force Clang as a compiler.</p>\n<pre><code class=\"lang-auto\">git clone https://github.com/mratsim/constantine\ncd constantine\nCC=clang nimble bench_eth_bls_signatures\n</code></pre>\n<pre><code class=\"lang-auto\">--------------------------------------------------------------------------------------------------------------------------------------------------\nPubkey deserialization (full checks)                                                     BLS12_381 G1          22295.550 ops/s         44852 ns/op        147729 CPU cycles (approx)\nPubkey deserialization (skip checks)                                                     BLS12_381 G1          92515.496 ops/s         10809 ns/op         35602 CPU cycles (approx)\nSignature deserialization (full checks)                                                  BLS12_381 G2          16808.418 ops/s         59494 ns/op        195958 CPU cycles (approx)\nSignature deserialization (skip checks)                                                  BLS12_381 G2          46453.291 ops/s         21527 ns/op         70906 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------------------------\nBLS signature                                                                            BLS12_381 G2           4005.078 ops/s        249683 ns/op        822392 CPU cycles (approx)\nBLS verification                                                                         BLS12_381              1498.960 ops/s        667129 ns/op       2197347 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------------------------\nBLS agg verif of 1 msg by 128 pubkeys                                                    BLS12_381              1423.694 ops/s        702398 ns/op       2313504 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------------------------\nBLS verif of 6 msgs by 6 pubkeys                                                         BLS12_381               249.683 ops/s       4005085 ns/op      13191614 CPU cycles (approx)\nBLS serial batch verify of 6 msgs by 6 pubkeys (with blinding)                           BLS12_381               420.912 ops/s       2375795 ns/op       7825187 CPU cycles (approx)\nBLS parallel batch verify (16 threads) of 6 msgs by 6 pubkeys (with blinding)            BLS12_381               683.399 ops/s       1463273 ns/op       4819062 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------------------------\nBLS verif of 60 msgs by 60 pubkeys                                                       BLS12_381                24.863 ops/s      40220998 ns/op     132477024 CPU cycles (approx)\nBLS serial batch verify of 60 msgs by 60 pubkeys (with blinding)                         BLS12_381                48.878 ops/s      20459201 ns/op      67387049 CPU cycles (approx)\nBLS parallel batch verify (16 threads) of 60 msgs by 60 pubkeys (with blinding)          BLS12_381               280.961 ops/s       3559207 ns/op      11722847 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------------------------\nBLS verif of 180 msgs by 180 pubkeys                                                     BLS12_381                 8.334 ops/s     119995222 ns/op     395232558 CPU cycles (approx)\nBLS serial batch verify of 180 msgs by 180 pubkeys (with blinding)                       BLS12_381                16.488 ops/s      60650899 ns/op     199767961 CPU cycles (approx)\nBLS parallel batch verify (16 threads) of 180 msgs by 180 pubkeys (with blinding)        BLS12_381               112.215 ops/s       8911481 ns/op      29351939 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------------------------\n</code></pre>\n<h4><a name=\"analysis-6\" class=\"anchor\" href=\"https://ethresear.ch#analysis-6\"></a>Analysis</h4>\n<ul>\n<li>15% performance improvement on signatures</li>\n<li>24% performance improvement on verification</li>\n</ul>\n<p>Furthermore, it is in theory possible to achieve a 2x performance improvement for signing if there is a need for it.</p>\n<h3><a name=\"kzg-polynomial-commitment-for-eip-4844-consensus-layer-7\" class=\"anchor\" href=\"https://ethresear.ch#kzg-polynomial-commitment-for-eip-4844-consensus-layer-7\"></a>KZG Polynomial commitment for EIP-4844 (Consensus Layer)</h3>\n<p>I will reuse my benchmarks from Dec, 2023: <a href=\"https://github.com/mratsim/constantine/pull/304#issuecomment-1844795359\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Productionize KZG EIP-4844 by mratsim · Pull Request #304 · mratsim/constantine · GitHub</a></p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Bench</th>\n<th style=\"text-align:center\">c-kzg-4844 (serial)</th>\n<th style=\"text-align:center\">go-kzg-4844 (serial)</th>\n<th style=\"text-align:center\">go-kzg-4844 (parallel)</th>\n<th style=\"text-align:center\">constantine (serial)</th>\n<th style=\"text-align:center\">constantine (parallel)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">blob_to_kzg_commitment</td>\n<td style=\"text-align:center\">37.773 ms</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">5.823 ms</td>\n<td style=\"text-align:center\">23.765 ms</td>\n<td style=\"text-align:center\">4.425 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">compute_kzg_proof</td>\n<td style=\"text-align:center\">39.945 ms</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">7.146 ms</td>\n<td style=\"text-align:center\">24.255 ms</td>\n<td style=\"text-align:center\">4.710 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">compute_blob_kzg_proof</td>\n<td style=\"text-align:center\">40.212 ms</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">7.205 ms</td>\n<td style=\"text-align:center\">24.288 ms</td>\n<td style=\"text-align:center\">4.794 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">verify_kzg_proof</td>\n<td style=\"text-align:center\">0.915 ms</td>\n<td style=\"text-align:center\">0.923 ms</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">0.782 ms</td>\n<td style=\"text-align:center\">-</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">verify_blob_kzg_proof</td>\n<td style=\"text-align:center\">1.531 ms</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">1.390 ms</td>\n<td style=\"text-align:center\">1.266 ms</td>\n<td style=\"text-align:center\">1.113 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">verify_blob_kzg_proof_batch 1</td>\n<td style=\"text-align:center\">1.528 ms</td>\n<td style=\"text-align:center\">1.392 ms</td>\n<td style=\"text-align:center\">1.405 ms</td>\n<td style=\"text-align:center\">1.286 ms</td>\n<td style=\"text-align:center\">1.130 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">verify_blob_kzg_proof_batch 2</td>\n<td style=\"text-align:center\">2.589 ms</td>\n<td style=\"text-align:center\">3.233 ms</td>\n<td style=\"text-align:center\">1.591 ms</td>\n<td style=\"text-align:center\">2.006 ms</td>\n<td style=\"text-align:center\">1.152 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">verify_blob_kzg_proof_batch 4</td>\n<td style=\"text-align:center\">4.553 ms</td>\n<td style=\"text-align:center\">4.671 ms</td>\n<td style=\"text-align:center\">1.914 ms</td>\n<td style=\"text-align:center\">3.437 ms</td>\n<td style=\"text-align:center\">1.250 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">verify_blob_kzg_proof_batch 8</td>\n<td style=\"text-align:center\">8.446 ms</td>\n<td style=\"text-align:center\">7.410 ms</td>\n<td style=\"text-align:center\">2.738 ms</td>\n<td style=\"text-align:center\">6.115 ms</td>\n<td style=\"text-align:center\">1.891 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">verify_blob_kzg_proof_batch 16</td>\n<td style=\"text-align:center\">16.228 ms</td>\n<td style=\"text-align:center\">12.734 ms</td>\n<td style=\"text-align:center\">3.542 ms</td>\n<td style=\"text-align:center\">11.567 ms</td>\n<td style=\"text-align:center\">3.091 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">verify_blob_kzg_proof_batch 32</td>\n<td style=\"text-align:center\">32.016 ms</td>\n<td style=\"text-align:center\">23.048 ms</td>\n<td style=\"text-align:center\">7.215 ms</td>\n<td style=\"text-align:center\">21.779 ms</td>\n<td style=\"text-align:center\">6.764 ms</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">verify_blob_kzg_proof_batch 64</td>\n<td style=\"text-align:center\">63.415 ms</td>\n<td style=\"text-align:center\">43.224 ms</td>\n<td style=\"text-align:center\">14.438 ms</td>\n<td style=\"text-align:center\">43.099 ms</td>\n<td style=\"text-align:center\">11.538 ms</td>\n</tr>\n</tbody>\n</table>\n</div><ul>\n<li>A 37% performance improvement over c-kzg-4844 for serial commitment</li>\n<li>A 39% improvement for proof generation</li>\n<li>A 17% improvement for a single blob verification</li>\n<li>A 32% improvement for 64 blob verification</li>\n</ul>\n<p>And Constantine offers paralellization to improve those numbers 4~6x on my 8-core machine.</p>\n<h3><a name=\"evm-precompiles-execution-layer-8\" class=\"anchor\" href=\"https://ethresear.ch#evm-precompiles-execution-layer-8\"></a>EVM precompiles (Execution Layer)</h3>\n<p>Note:</p>\n<ul>\n<li>Constantine also offers a fast MODEXP precompile that reaches 80% to 110% of GMP, without assembly.</li>\n<li>SHA256 is faster than OpenSSL and BLST for data size less than 4MB and within 3% otherwise.</li>\n</ul>\n<pre><code class=\"lang-auto\">git clone https://github.com/mratsim/constantine\ncd constantine\nCC=clang nimble bench_eth_evm_precompiles\n</code></pre>\n<pre><code class=\"lang-auto\">--------------------------------------------------------------------------------------------------------------------------------\nSHA256 -  32 bytes            72 gas    1714.29 MGas/s    23809523.810 ops/s           42 ns/op          140 CPU cycles (approx)\nSHA256 -  64 bytes            84 gas    1584.91 MGas/s    18867924.528 ops/s           53 ns/op          176 CPU cycles (approx)\nSHA256 -  96 bytes            96 gas    1777.78 MGas/s    18518518.519 ops/s           54 ns/op          179 CPU cycles (approx)\nSHA256 - 128 bytes           108 gas    1333.33 MGas/s    12345679.012 ops/s           81 ns/op          267 CPU cycles (approx)\nSHA256 - 160 bytes           120 gas    1481.48 MGas/s    12345679.012 ops/s           81 ns/op          268 CPU cycles (approx)\nSHA256 - 192 bytes           132 gas    1233.64 MGas/s     9345794.393 ops/s          107 ns/op          353 CPU cycles (approx)\nSHA256 - 224 bytes           144 gas    1321.10 MGas/s     9174311.927 ops/s          109 ns/op          359 CPU cycles (approx)\nSHA256 - 256 bytes           156 gas    1130.43 MGas/s     7246376.812 ops/s          138 ns/op          454 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------\nBN254_G1ADD                  150 gas      87.41 MGas/s      582750.583 ops/s         1716 ns/op         5652 CPU cycles (approx)\nBN254_G1MUL                 6000 gas     229.66 MGas/s       38276.047 ops/s        26126 ns/op        86050 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------\nBN254_PAIRINGCHECK 1       79000 gas     166.99 MGas/s        2113.754 ops/s       473092 ns/op      1558009 CPU cycles (approx)\nBN254_PAIRINGCHECK 2      113000 gas     191.99 MGas/s        1699.056 ops/s       588562 ns/op      1938370 CPU cycles (approx)\nBN254_PAIRINGCHECK 3      147000 gas     183.15 MGas/s        1245.930 ops/s       802613 ns/op      2642801 CPU cycles (approx)\nBN254_PAIRINGCHECK 4      181000 gas     191.76 MGas/s        1059.434 ops/s       943900 ns/op      3108745 CPU cycles (approx)\nBN254_PAIRINGCHECK 5      215000 gas     169.72 MGas/s         789.374 ops/s      1266827 ns/op      4171120 CPU cycles (approx)\nBN254_PAIRINGCHECK 6      249000 gas     181.10 MGas/s         727.321 ops/s      1374909 ns/op      4528210 CPU cycles (approx)\nBN254_PAIRINGCHECK 7      283000 gas     189.03 MGas/s         667.965 ops/s      1497084 ns/op      4930714 CPU cycles (approx)\nBN254_PAIRINGCHECK 8      317000 gas     204.18 MGas/s         644.095 ops/s      1552566 ns/op      5113680 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------\nBLS12_G1ADD                  500 gas     164.10 MGas/s      328191.664 ops/s         3047 ns/op        10034 CPU cycles (approx)\nBLS12_G2ADD                  800 gas     161.75 MGas/s      202183.583 ops/s         4946 ns/op        16289 CPU cycles (approx)\nBLS12_G1MUL                12000 gas     141.66 MGas/s       11805.400 ops/s        84707 ns/op       279001 CPU cycles (approx)\nBLS12_G2MUL                45000 gas     325.51 MGas/s        7233.639 ops/s       138243 ns/op       455333 CPU cycles (approx)\nBLS12_MAP_FP_TO_G1          5500 gas     161.82 MGas/s       29422.149 ops/s        33988 ns/op       111947 CPU cycles (approx)\nBLS12_MAP_FP2_TO_G2        75000 gas     659.96 MGas/s        8799.486 ops/s       113643 ns/op       374305 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------\nBLS12_PAIRINGCHECK 1      108000 gas     216.83 MGas/s        2007.665 ops/s       498091 ns/op      1640562 CPU cycles (approx)\nBLS12_PAIRINGCHECK 2      151000 gas     222.00 MGas/s        1470.214 ops/s       680173 ns/op      2240287 CPU cycles (approx)\nBLS12_PAIRINGCHECK 3      194000 gas     219.98 MGas/s        1133.901 ops/s       881911 ns/op      2904762 CPU cycles (approx)\nBLS12_PAIRINGCHECK 4      237000 gas     222.97 MGas/s         940.782 ops/s      1062946 ns/op      3500927 CPU cycles (approx)\nBLS12_PAIRINGCHECK 5      280000 gas     221.08 MGas/s         789.576 ops/s      1266502 ns/op      4171417 CPU cycles (approx)\nBLS12_PAIRINGCHECK 6      323000 gas     223.09 MGas/s         690.679 ops/s      1447851 ns/op      4768780 CPU cycles (approx)\nBLS12_PAIRINGCHECK 7      366000 gas     222.28 MGas/s         607.311 ops/s      1646603 ns/op      5423299 CPU cycles (approx)\nBLS12_PAIRINGCHECK 8      409000 gas     221.94 MGas/s         542.640 ops/s      1842844 ns/op      6069597 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------\nBLS12_G1MSM   2            21312 gas     120.40 MGas/s        5649.430 ops/s       177009 ns/op       583004 CPU cycles (approx)\nBLS12_G1MSM   4            30768 gas     101.53 MGas/s        3299.960 ops/s       303034 ns/op       998108 CPU cycles (approx)\nBLS12_G1MSM   8            43488 gas      81.23 MGas/s        1867.787 ops/s       535393 ns/op      1763434 CPU cycles (approx)\nBLS12_G1MSM  16            64128 gas      66.43 MGas/s        1035.864 ops/s       965378 ns/op      3179510 CPU cycles (approx)\nBLS12_G1MSM  32           103296 gas      57.99 MGas/s         561.362 ops/s      1781382 ns/op      5867248 CPU cycles (approx)\nBLS12_G1MSM  64           170496 gas      50.89 MGas/s         298.504 ops/s      3350039 ns/op     11034035 CPU cycles (approx)\nBLS12_G1MSM 128           267264 gas      42.24 MGas/s         158.035 ops/s      6327700 ns/op     20841720 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------\nBLS12_G2MSM   2            79920 gas     269.62 MGas/s        3373.637 ops/s       296416 ns/op       976301 CPU cycles (approx)\nBLS12_G2MSM   4           115380 gas     225.12 MGas/s        1951.109 ops/s       512529 ns/op      1688121 CPU cycles (approx)\nBLS12_G2MSM   8           163080 gas     177.21 MGas/s        1086.654 ops/s       920256 ns/op      3031066 CPU cycles (approx)\nBLS12_G2MSM  16           240480 gas     130.56 MGas/s         542.920 ops/s      1841892 ns/op      6066436 CPU cycles (approx)\nBLS12_G2MSM  32           387360 gas     126.36 MGas/s         326.195 ops/s      3065648 ns/op     10097244 CPU cycles (approx)\nBLS12_G2MSM  64           639360 gas     118.26 MGas/s         184.965 ops/s      5406423 ns/op     17807268 CPU cycles (approx)\nBLS12_G2MSM 128          1002240 gas     100.70 MGas/s         100.471 ops/s      9953136 ns/op     32782906 CPU cycles (approx)\n--------------------------------------------------------------------------------------------------------------------------------\n</code></pre>\n<p>Constantine achieves over 200Mgas/s for a wide range of cryptographic precompiles on a laptop CPU with restricted power consumption (7840U, 15W to 30W)</p>\n<p>note, I suggest a repricing for EIP-2537 to help SNARKS applications.</p>\n<h2><a name=\"security-9\" class=\"anchor\" href=\"https://ethresear.ch#security-9\"></a>Security</h2>\n<p>Constantine, as it names indicates, as a strong focus on security and especially constant-time cryptography is used by default in the core of the library.<br>\nIt HAS NOT been audited yet, but it has undergone extensive fuzzing by Guido Vranken, thanks to the sponsoring of the Ethereum Foundation in Summer 2023. It has also been added to OSS-Fuzz (<a href=\"https://github.com/google/oss-fuzz/pull/10710\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">[bls-signatures] Remove Chia, add Constantine by guidovranken · Pull Request #10710 · google/oss-fuzz · GitHub</a>), the Google 24/7 open-source fuzzing initiative.</p>\n<h2><a name=\"the-future-10\" class=\"anchor\" href=\"https://ethresear.ch#the-future-10\"></a>The Future</h2>\n<p>Constantine will follow and support future Ethereum cryptographic needs. In particular I thank the Ethereum Foundation Fellowship Program and Status for sponsoring work on implementing Verkle Tries in Constantine the past year.</p>\n<p>Constantine also supports accelerating Zero-Knowledge proof systems, for example it is possible to use it through PSE (Privacy Scaling Explorations, a branch of the EF) Halo2: <a href=\"https://github.com/mratsim/constantine/pull/308\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">ZAL: ZK Accel Layer by mratsim · Pull Request #308 · mratsim/constantine · GitHub</a>.</p>\n<p>Constantine has the fastest MSM on x86, all libraries benchmarked as of July 2024 (Arkworks, Barretenberg, Bellman, Gnark, Halo2) and by a factor 2x over popular Rust libraries Arkworks and Halo2. And I do plan to build proof systems on top.</p>\n<p>Hidden in Constantine is a compiler for GPU code generation and there are plans for accelerating ARM.</p>\n<p>Now I don’t know what a snarkified EVM will look like, but I certainly hope to contribute to make it a reality.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/releasing-constantine-v0-1-0-a-modular-cryptography-stack-for-ethereum/19990\">Read full topic</a></p>","link":"https://ethresear.ch/t/releasing-constantine-v0-1-0-a-modular-cryptography-stack-for-ethereum/19990","pubDate":"Sat, 06 Jul 2024 11:01:41 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19990"},"source":{"@url":"https://ethresear.ch/t/releasing-constantine-v0-1-0-a-modular-cryptography-stack-for-ethereum/19990.rss","#text":"Releasing Constantine v0.1.0, a modular cryptography stack for Ethereum"},"filter":false},{"title":"Reputation-Centric Light Client Framework for Optimistic Rollups","dc:creator":"marcellobardus","category":"Optimisitic Rollup","description":"<p>Authors: <a href=\"https://x.com/0xmarcello\" rel=\"noopener nofollow ugc\">Marcello Bardus</a> (<a href=\"https://x.com/HerodotusDev\" rel=\"noopener nofollow ugc\">Herodotus</a>), <a href=\"https://x.com/kacperkozi\" rel=\"noopener nofollow ugc\">Kacper Koziol</a> (<a href=\"https://x.com/HerodotusDev\" rel=\"noopener nofollow ugc\">Herodotus</a>)</p>\n<p>Thanks for early feedback: <a href=\"https://x.com/bonustrack87\" rel=\"noopener nofollow ugc\">bonustrack87</a> (<a href=\"https://x.com/SnapshotLabs\" rel=\"noopener nofollow ugc\">Snapshot Labs</a>), <a href=\"https://x.com/lsukernik\" rel=\"noopener nofollow ugc\">Larry Sukernik</a> (<a href=\"https://x.com/hi_reverie\" rel=\"noopener nofollow ugc\">Reverie</a>), <a href=\"https://x.com/piapark_eth\" rel=\"noopener nofollow ugc\">Pia Park</a> (<a href=\"https://x.com/HerodotusDev\" rel=\"noopener nofollow ugc\">Herodotus</a>), <a href=\"https://x.com/wojtekwtf\" rel=\"noopener nofollow ugc\">Wojtek</a> (<a href=\"https://www.supercast.xyz/\" rel=\"noopener nofollow ugc\">Supercast</a>),</p>\n<h1><a name=\"summary-1\" class=\"anchor\" href=\"https://ethresear.ch#summary-1\"></a>Summary:</h1>\n<p>This post introduces a conceptual framework for a reputation-centric light client system designed to address critical challenges in Optimistic Rollups (ORUs), with a primary focus on enabling fast finality for accessing ORU data from Ethereum, ORUs and other Ethereum layers. At its core, the system leverages the Herodotus Data Processor to compute sequencer reputation scores based on the sequencer’s historical behavior, including their track record of submitting valid output roots and avoiding successful challenges. This allows light clients to trust output roots only from sequencers with an impeccable track record without waiting for the full dispute period. This approach significantly reduces finality time while maintaining security. The framework includes a punitive measure that resets a sequencer’s reputation upon successful challenges, ensuring system integrity. Additionally, a fallback mechanism reverts to the standard seven-day dispute period in cases of unresolved conflicts or detected irregularities.</p>\n<h3><a name=\"reputation-centric-light-client-framework-for-optimistic-rollups-2\" class=\"anchor\" href=\"https://ethresear.ch#reputation-centric-light-client-framework-for-optimistic-rollups-2\"></a>Reputation-Centric Light Client Framework for Optimistic Rollups</h3>\n<p>Optimistic Rollups have seen significant adoption, however, they encounter several challenges, particularly in terms of finality time and data verification. This post introduces a conceptual framework for a reputation-centric light client system that aims to address these issues, enabling fast finality for accessing ORU data from Ethereum, and from other Ethereum layers.</p>\n<p>OP Stack and other Optimistic Rollups (ORUs) have a security model based on fraud proofs. In this model, anyone can act as a sequencer, also known as a proposer. The sequencer first proposes the rollup state to Layer 1 (L1), after which a seven-day window is opened. During this period, anyone can challenge the correctness of the proposed state.</p>\n<p>In ORU implementations such as OP Stack, proposers periodically submit output roots to L1. These output roots are a hash of certain L2 state information, including the state root, block number, and timestamp of the latest L2 block. OP Stack incorporates a specification for a fault proof system with bonding, which creates incentives for proposers to submit correct output roots.</p>\n<p>This mechanism imposes a long finality time for ORUs, which is problematic for Storage Proofs, a secure on-chain data access solution that Herodotus has previously developed for Optimism and several other ORU ecosystems. This is especially problematic following recent upgrades that introduced permissionless fraud proofs on Optimism. With these upgrades, no assumptions can be made about where a valid state root can be found.</p>\n<h2><a name=\"secure-data-access-and-processing-3\" class=\"anchor\" href=\"https://ethresear.ch#secure-data-access-and-processing-3\"></a>Secure Data Access and Processing</h2>\n<p>The framework incorporates two crucial components:</p>\n<h3><a name=\"storage-proofs-4\" class=\"anchor\" href=\"https://ethresear.ch#storage-proofs-4\"></a>Storage Proofs</h3>\n<p>Storage Proofs are a secure on-chain data access primitive utilized by the Herodotus Data Processor that enables the cryptographic proving of the provenance of on-chain data. They allow for the verification of any data available on Ethereum, including current and historical balances, transactions, user interactions, liquidations, and more. Storage Proofs also enable the trustless and secure reading of data from arbitrary Ethereum Layers.</p>\n<p>By utilizing Storage Proofs, the Herodotus Data Processor can ensure the integrity and authenticity of the on-chain data it processes, providing a foundation of trust for its computations.</p>\n<h3><a name=\"data-processing-component-5\" class=\"anchor\" href=\"https://ethresear.ch#data-processing-component-5\"></a>Data Processing Component</h3>\n<p>This would leverage the Herodotus Data Processor (HDP) to compute sequencer reputation scores efficiently. HDP can be thought of as a zk-coprocessor, capable of performing computations on verified data. Storage Proofs guarantee the integrity of the input data to HDP. Custom computations can be defined using HDP Modules, which can later process the verified historical data and update reputation scores based on the defined criteria, such as the consistency of avoiding challenges and the validity of proposed output roots over time.</p>\n<h2><a name=\"reputation-based-light-client-6\" class=\"anchor\" href=\"https://ethresear.ch#reputation-based-light-client-6\"></a>Reputation based light client</h2>\n<p>In our design, a sequencer, identified by an Ethereum address, would be assumed to be the most trustworthy based on the following criteria:</p>\n<ul>\n<li>The sequencer consistently avoids challenges, or any initiated challenges against them are unsuccessful.</li>\n<li>The validity of the sequencer’s proposed output roots over time, as proven by the lack of successful fault proofs against their outputs.</li>\n</ul>\n<p>In OP Stack implementations like Bedrock, and potentially in other ORUs, output roots represent a compact summary of the L2 state at a specific block. These output roots are not Merkle roots of the entire canonical L2 chain, but rather a hash of certain L2 state information. Bonded proposers periodically submit these output roots to L1.</p>\n<p>The output root typically includes a hash of the following information:</p>\n<ol>\n<li>The state root of the L2 block</li>\n<li>The L2 block number</li>\n<li>The timestamp of the L2 block</li>\n<li>The hash of the L2 block itself</li>\n</ol>\n<p>This structure allows for efficient verification of specific L2 state information without requiring the entire L2 chain data on L1.</p>\n<p>Once a highly reputable sequencer posts a claimed output root to L1, a Light Client contract would assume the claim is valid and treat it as final. This approach ensures that only sequencers with an impeccable track record are trusted, significantly reducing the finality time while relying on the cryptographically proven historical reliability of the sequencer rather than waiting for the full dispute period.</p>\n<p>The Light Client contract would store the full output roots proposed by reputable sequencers, not just the block hash, enabling trustless proof of claims like withdrawals against the output roots directly.</p>\n<p>The reputation of the sequencer can be periodically updated using the Herodotus Data Processor. This involves assessing historical data to ensure the sequencer continues to meet the criteria of reliability and activity. By continuously evaluating the sequencer’s performance and updating their reputation at fixed intervals, the Light Client can maintain a high level of trust and accuracy in the state roots it accepts.</p>\n<h2><a name=\"system-architecture-7\" class=\"anchor\" href=\"https://ethresear.ch#system-architecture-7\"></a>System Architecture</h2>\n<h2><a name=\"h-326x4111935069506181uploadpmywafztk4c8h3awxejv5ig72gppng-8\" class=\"anchor\" href=\"https://ethresear.ch#h-326x4111935069506181uploadpmywafztk4c8h3awxejv5ig72gppng-8\"></a><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/4/b4b3807ab51eeeb259a9c7c08890b13cd0910b23.png\" data-download-href=\"https://ethresear.ch/uploads/default/b4b3807ab51eeeb259a9c7c08890b13cd0910b23\" title=\"|326x411.1935069506181\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/4/b4b3807ab51eeeb259a9c7c08890b13cd0910b23_2_396x500.png\" alt=\"|326x411.1935069506181\" data-base62-sha1=\"pMywAFztk4c8h3aWxEjv5Ig72gP\" width=\"396\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/4/b4b3807ab51eeeb259a9c7c08890b13cd0910b23_2_396x500.png, https://ethresear.ch/uploads/default/optimized/3X/b/4/b4b3807ab51eeeb259a9c7c08890b13cd0910b23_2_594x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/4/b4b3807ab51eeeb259a9c7c08890b13cd0910b23_2_792x1000.png 2x\" data-dominant-color=\"F2F4F7\"></a></div></h2>\n<p>The proposed system would operate as follows:</p>\n<ol>\n<li>Proposers submit output root proposals to the appropriate ORU contracts on L1, based on the state of the ORU L2 chain.</li>\n<li>The ORU L1 contracts handle both output root proposals and challenges/fault proofs against these proposals.</li>\n<li>The Herodotus Data Processor retrieves and processes data from the ORU L1 contracts, including output root proposals and challenges/fault proofs.</li>\n<li>The reputation-based light client contract uses the processed data from the Herodotus Data Processor to track sequencer reputation scores and store trusted output roots. A custom reputation calculation formula can be implemented, allowing for flexible and adaptable assessment of sequencer reliability based on various factors and weighting systems as deemed appropriate for the specific ORU implementation.</li>\n<li>The light client interface allows other contracts to query the state root of the L2 chain based on the most reputable sequencer’s output roots.</li>\n</ol>\n<h2><a name=\"handling-successful-challenges-9\" class=\"anchor\" href=\"https://ethresear.ch#handling-successful-challenges-9\"></a>Handling Successful Challenges</h2>\n<p>In the event that any challenge against a sequencer is successful, the reputation of the sequencer would immediately reset to zero in the light client. This punitive measure ensures that only sequencers with an impeccable track record maintain trusted status.</p>\n<p>With fault proof systems like those in OP Stack’s Bedrock, the Light Client contract would automatically reset a sequencer’s reputation to zero if a fault proof is successfully submitted and verified, showing an invalid output root proposed by that sequencer. This automated process ensures swift and consistent enforcement of the reputation system.</p>\n<p>The permissionless output proposal mechanism provides an objective way to track sequencer reputation over time and identify potentially malicious outputs. Simultaneously, the output roots proposed by sequencers enable the verification of Storage Proofs against these proposed L2 state roots when using the Light Client. Ultimately, this approach creates a self-regulating system that not only incentivizes honest behavior but also ensures quick penalization of any attempts at fraud, thereby maintaining the overall reliability and security of the network.</p>\n<h3><a name=\"fallback-mechanism-10\" class=\"anchor\" href=\"https://ethresear.ch#fallback-mechanism-10\"></a>Fallback Mechanism</h3>\n<p>In cases of unresolved conflicts or when the system detects any irregularities, it would automatically fall back to the conservative seven-day dispute period. This would ensure that the system remains secure and trustworthy, even in the face of unexpected challenges or disagreements among reputable sequencers.</p>\n<h2><a name=\"potential-impact-and-future-directions-11\" class=\"anchor\" href=\"https://ethresear.ch#potential-impact-and-future-directions-11\"></a>Potential Impact and Future Directions</h2>\n<p>We believe that this reputation-based light client framework has the potential to significantly decrease duration to finality for ORUs. By reducing finality times while maintaining security, it could substantially improve the user experience and enable new use cases in L2 ecosystems.</p>\n<p>As we continue to explore and refine this concept, we welcome input from the community. The next steps would involve further theoretical analysis, simulations, and potentially, prototype implementations.</p>\n<h1><a name=\"references-12\" class=\"anchor\" href=\"https://ethresear.ch#references-12\"></a>References</h1>\n<p>Optimism Bedrock Documentation: <a href=\"https://community.optimism.io/docs/developers/bedrock\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Bedrock Explainer | Optimism Docs</a></p>\n<p>L2 Output Root Proposals Specification: <a href=\"https://github.com/ethereum-optimism/optimism/blob/65ec61dde94ffa93342728d324fecf474d228e1f/specs/proposals.md\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">optimism/specs/proposals.md at 65ec61dde94ffa93342728d324fecf474d228e1f · ethereum-optimism/optimism · GitHub</a></p>\n            <p><small>3 posts - 3 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/reputation-centric-light-client-framework-for-optimistic-rollups/19988\">Read full topic</a></p>","link":"https://ethresear.ch/t/reputation-centric-light-client-framework-for-optimistic-rollups/19988","pubDate":"Fri, 05 Jul 2024 22:01:41 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19988"},"source":{"@url":"https://ethresear.ch/t/reputation-centric-light-client-framework-for-optimistic-rollups/19988.rss","#text":"Reputation-Centric Light Client Framework for Optimistic Rollups"},"filter":false}]}}}