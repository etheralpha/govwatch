{"rss":{"@version":"2.0","@xmlns:discourse":"http://www.discourse.org/","@xmlns:atom":"http://www.w3.org/2005/Atom","@xmlns:dc":"http://purl.org/dc/elements/1.1/","channel":{"title":"Starknet Community Forum - Latest topics","link":"https://community.starknet.io/latest","description":"Latest topics","lastBuildDate":"Wed, 03 Jul 2024 11:27:28 +0000","atom:link":{"@href":"https://community.starknet.io/latest.rss","@rel":"self","@type":"application/rss+xml"},"item":[{"title":"From a community member to the Starknet team..","dc:creator":"n1neteen","category":"Governance Proposals","description":"<p>Hello, Starknet is my favorite project and reminds me of the early days of Ethereum. I can literally say that I am a Starknet maxi. Recently I got into a fight and almost got beaten up (no big deal) for saying this in a meeting with friends. So what do you think is the reason for this?</p>\n<p>It’s because of the lack of communication between the team and the community. The community wants to know that they are listened to. The community wants to know that their opinion matters.</p>\n<p>I want to end my talk with a quote that I like very much.</p>\n<p>Never underestimate a nail. A nail saves a horseshoe, a horseshoe saves a horse, a horse saves a commander, a commander saves an army, an army saves a whole country.</p>\n<p>FORZA STARKNET</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/from-a-community-member-to-the-starknet-team/114296\">Read full topic</a></p>","link":"https://community.starknet.io/t/from-a-community-member-to-the-starknet-team/114296","pubDate":"Wed, 03 Jul 2024 11:27:28 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114296"},"source":{"@url":"https://community.starknet.io/t/from-a-community-member-to-the-starknet-team/114296.rss","#text":"From a community member to the Starknet team.."}},{"title":"New Starknet Wallet<>Dapp API","dc:creator":"amanusk","category":"Starknet Technical Development","description":"<h1><a name=\"tldr-1\" class=\"anchor\" href=\"https://community.starknet.io#tldr-1\"></a>TL;DR</h1>\n<p>After a long and fruitful community effort, the Starknet JS stack is being updated with a new Wallet&lt;&gt;Dapp API.<br>\nThe new API simplifies Wallet&lt;&gt;Dapp communication and decouples the dependencies between wallets, dapps and starknet.js versions.<br>\nThere is a new starknet.js release with support for the new API, new starknet-react and get-starknet versions, and a new home for Starknet npm packages.<br>\nThe following post summarizes the main changes, how this affects the ecosystem, and what you should do to prepare for the changes.</p>\n<h1><a name=\"the-current-state-of-starknetjs-and-wallet-integration-2\" class=\"anchor\" href=\"https://community.starknet.io#the-current-state-of-starknetjs-and-wallet-integration-2\"></a>The current state of Starknet.js and wallet integration</h1>\n<p>Until now, for a Dapp to connect to a Starknet wallet, it received an <code>Account</code> object injected into the window by the wallets and interacted with the wallet with all the methods supported by the <code>Account</code> class in starknet.js. This meant, in part, that if a new version of Starknet.js was released, both wallets and Dapps were required to upgrade to the new version to stay compatible with the latest Starknet API and Starknet.js features.</p>\n<p>This coupling stifled progress and required redundant coordination overhead to move the ecosystem forward.</p>\n<h1><a name=\"new-starknetjs-stack-3\" class=\"anchor\" href=\"https://community.starknet.io#new-starknetjs-stack-3\"></a>New Starknet.js stack</h1>\n<p>Starting with the Starknet community forum discussion, Argent proposed decoupling wallets from Starknet.js by facilitating a message-based API between wallets and Dapps.</p>\n<p>Moving to an API-based communication means wallets and Dapps no longer need to support specific Starknet.js versions as long as they communicate with the same API.</p>\n<p>After many discussions and reviews of the new API <a href=\"https://github.com/starkware-libs/starknet-specs/pulls?q=is%3Apr+is%3Aclosed\" rel=\"noopener nofollow ugc\">PR</a>, the new official wallet&lt;&gt;Dapp API has been added to the Starknet-specs repository.</p>\n<h3><a name=\"what-is-the-new-api-all-about-4\" class=\"anchor\" href=\"https://community.starknet.io#what-is-the-new-api-all-about-4\"></a>What is the new API all about?</h3>\n<p>Instead of directly invoking <code>Account</code> methods, a PRC message is sent to the wallet. The API supports only methods that require the wallet.</p>\n<p>These methods provide, in part, the functionality to :</p>\n<ul>\n<li>Get account address information</li>\n<li>Send Invoke and Declare transactions</li>\n<li>Sign SNIP-12 typed data</li>\n<li>etc.</li>\n</ul>\n<p>Notably, the new API does not allow to send requests to the wallet that can be solely handled by a Starknet Provider. It is up to the Dapp to use either their own node or one of Starknet’s RPC providers to get information about the blockchain.</p>\n<p>The new API creates a clear separation of concerns between the Dapp, the wallet and the provider. For example, the API does not externalize any options for fee or transaction type selection, which are handled by the wallet. The Dapp should only be concerned with building the appropriate calls and sending them to the wallet for signing and broadcasting.</p>\n<p>Along with the new API, a new stack of repositories is released to make transitioning to the new API as seamless as possible.</p>\n<h2><a name=\"new-repositories-and-packages-5\" class=\"anchor\" href=\"https://community.starknet.io#new-repositories-and-packages-5\"></a>New repositories and packages</h2>\n<h3><a name=\"types-js-6\" class=\"anchor\" href=\"https://community.starknet.io#types-js-6\"></a>types-js</h3>\n<p>One of the benefits of a unified API is that we can now have a types package, standardizing the expected JS types on both ends. The new <code>types-js</code> repository can be found under</p>\n<ul>\n<li>Github: <a href=\"https://github.com/starknet-io/types-js\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - starknet-io/types-js</a></li>\n<li>npm: <code>npm install @starknet-io/types-js</code></li>\n</ul>\n<p>The types repository will follow the versioning of the main Starknet PRC, with only differences to the <code>patch</code> number. The current version is <code>0.7.X</code></p>\n<h3><a name=\"starknetjs-7\" class=\"anchor\" href=\"https://community.starknet.io#starknetjs-7\"></a>Starknet.js</h3>\n<p>Starknet.js version 6 and up will support the new API via a new class, <code>WalletAccount</code>. The class is initiated with a Starknet Provider and a Starknet Wallet, which are provided by the wallet extensions. From that point on, interactions with the account are very similar to the current <code>Account</code> in Starknet.js. All of the communication with the wallet is implemented under the hood.</p>\n<p>You can read more about <code>WalletAccount</code> in the starknet.js <a href=\"https://www.starknetjs.com/docs/next/guides/walletAccount\" rel=\"noopener nofollow ugc\">documentation</a>.<br>\nVersion 5, which supports the old API, will still be available if you specify an exact version.</p>\n<ul>\n<li>npm: <code>npm install starknet</code></li>\n</ul>\n<h3><a name=\"get-starknet-8\" class=\"anchor\" href=\"https://community.starknet.io#get-starknet-8\"></a>get-starknet</h3>\n<p>Get Starknet will be released under a new home on npm, under the <code>@starknet-io</code> organization. The new get-starknet V4 version is available for installation with <code>npm install @starknet-io/get-starknet</code> . The older V3 versions, currently available via <code>npm install get-starknet</code>, will remain available until the old API is End Of Life.</p>\n<ul>\n<li>Github (Develop branch): <a href=\"https://github.com/starknet-io/get-starknet/tree/develop\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - starknet-io/get-starknet at develop</a></li>\n<li>npm: <code>npm install @starknet-io/get-starknet</code></li>\n</ul>\n<h2><a name=\"starknet-react-9\" class=\"anchor\" href=\"https://community.starknet.io#starknet-react-9\"></a>starknet-react</h2>\n<p>Starknet-react V3 will be released with support for the new types-js and the new API.  Documentation on Starknet-react V3 is available <a href=\"https://v3.starknet-react.com/docs/getting-started\" rel=\"noopener nofollow ugc\">here</a>.</p>\n<ul>\n<li>npm: <code>npm add @starknet-react/chains@next @starknet-react/core@next</code></li>\n</ul>\n<h1><a name=\"when-will-the-api-become-the-standard-10\" class=\"anchor\" href=\"https://community.starknet.io#when-will-the-api-become-the-standard-10\"></a>When will the API become the standard?</h1>\n<p>Starknet mainnet is planned to be updated to version <strong>0.13.3 around September 2024</strong>. The new Starknet version will ship with and updated RPC version (0.8), and will drop support for old RPC versions older than RPC 0.7.</p>\n<p>Starknet.js versions supporting the old RPC, and the old wallet&lt;&gt;Dapp API will then also be deprecated.</p>\n<h1><a name=\"what-should-you-do-11\" class=\"anchor\" href=\"https://community.starknet.io#what-should-you-do-11\"></a>What should you do?</h1>\n<p>The upcoming months will be a transition period when both API versions will be supported by both Argent and Braavos, with additional wallets onboarding using the new API. So, how does this affect you?</p>\n<h3><a name=\"new-wallets-coming-to-starknet-12\" class=\"anchor\" href=\"https://community.starknet.io#new-wallets-coming-to-starknet-12\"></a>New wallets coming to Starknet</h3>\n<ul>\n<li>See the links below for information about the new API spec and example Dapps working with the new API</li>\n<li>Implement the new wallet&lt;&gt;Dapp communication API</li>\n<li>Submit a PR to get-starknet to add your wallet to get-starknet discovery</li>\n</ul>\n<h3><a name=\"dapp-developers-13\" class=\"anchor\" href=\"https://community.starknet.io#dapp-developers-13\"></a>Dapp developers</h3>\n<p>You are welcome to try out the new stack with the new versions of Starknet-js, starknet-react, and get-starknet. Arget and Braavos are already supporting the new API. While there will be a transition period when some of the other wallets add support for the new API, all existing and new wallets are expected to transition to it by the time of the next Starknet network upgrade (0.13.3).</p>\n<h3><a name=\"users-14\" class=\"anchor\" href=\"https://community.starknet.io#users-14\"></a>Users</h3>\n<p>The change in API shouldn’t affect you. Both old and new API versions will continue to be available for a while. If you experience any issues with the support of your wallet in a Dapp, you are welcome to contact the Dapp developer or wallet provider.</p>\n<h2><a name=\"thanks-15\" class=\"anchor\" href=\"https://community.starknet.io#thanks-15\"></a>Thanks</h2>\n<p>This important upgrade is a joint work of many parties. Special thanks to <a href=\"https://github.com/janek26\" rel=\"noopener nofollow ugc\">Janek</a> from Argent for the initial SNIP proposal. To <a href=\"https://github.com/avimak\" rel=\"noopener nofollow ugc\">Abraham</a> from Braavos for providing the initial implementation of the SNIP and the accompanying Braavos wallet. To <a href=\"https://github.com/dhruvkelawala\" rel=\"noopener nofollow ugc\">Dhruv</a> and <a href=\"https://github.com/vladutjs\" rel=\"noopener nofollow ugc\">Vladut</a> from Argent. To <a href=\"https://github.com/fracek\" rel=\"noopener nofollow ugc\">Francesco</a> from Apibara for adding support to starknet-react, to <a href=\"https://github.com/tabaktoni\" rel=\"noopener nofollow ugc\">Toni Tabak</a> and the team at SpaceShard for the incredible work on Starknet-js and types.js and for adding support to the new API. To <a href=\"https://github.com/naorye2\" rel=\"noopener nofollow ugc\">Naor</a> and <a href=\"https://github.com/dan-ziv\" rel=\"noopener nofollow ugc\">Dan Ziv</a> form StarkWare for adding the new API to get-starknet. To <a href=\"https://github.com/PhilippeR26\" rel=\"noopener nofollow ugc\">Philippe Rostan</a> from <a href=\"http://critical.devs.fr/\" rel=\"noopener nofollow ugc\">critical.devs.fr</a> for the help testing, reviewing, commenting, and building the demo Dapps for the new API.</p>\n<h1><a name=\"useful-links-16\" class=\"anchor\" href=\"https://community.starknet.io#useful-links-16\"></a>Useful links</h1>\n<ul>\n<li>Wallet <a href=\"https://github.com/starkware-libs/starknet-specs/blob/master/wallet-api/wallet_rpc.json\" rel=\"noopener nofollow ugc\">API</a> on Starknet-specs</li>\n<li>Initial SNIP <a href=\"https://community.starknet.io/t/snip-standardizing-starknet-wallet-connections-with-write-api-and-json-rpc-integration/98049\">discussions</a></li>\n<li>Types-js GitHub: <a href=\"https://github.com/starknet-io/types-js\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - starknet-io/types-js</a></li>\n<li>Starknet.js V6 upgrade <a href=\"https://www.starknetjs.com/docs/next/guides/migrate/\" rel=\"noopener nofollow ugc\">instructions</a></li>\n<li>Starknet.js WalletAccount <a href=\"https://www.starknetjs.com/docs/next/guides/walletAccount\" rel=\"noopener nofollow ugc\">documentation</a></li>\n<li>get-starknet GitHub: <a href=\"https://github.com/starknet-io/get-starknet/tree/develop\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - starknet-io/get-starknet at develop</a></li>\n<li><a href=\"https://starknet-react-website.vercel.app/\" rel=\"noopener nofollow ugc\">React App by Francesco</a> to test wallet functionality of new API</li>\n<li>Starknet-react V3 upgrade <a href=\"https://starknet-react-website.vercel.app/docs/upgrading-to-v3\" rel=\"noopener nofollow ugc\">instructions</a></li>\n<li><a href=\"https://github.com/PhilippeR26\" rel=\"noopener nofollow ugc\">Philippe ROSTAN</a> created a great Demo <a href=\"https://github.com/PhilippeR26/Starknet-WalletAccount\" rel=\"noopener nofollow ugc\">Dapp</a> which uses the new wallet API</li>\n<li><a href=\"https://github.com/PhilippeR26\" rel=\"noopener nofollow ugc\">Philippe ROSTAN</a> <a href=\"https://github.com/PhilippeR26/Starknet-WalletAccount/blob/main/doc/walletAPIspec.md\" rel=\"noopener nofollow ugc\">explanations</a> of the new API functions, with examples</li>\n</ul>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/new-starknet-wallet-dapp-api/114295\">Read full topic</a></p>","link":"https://community.starknet.io/t/new-starknet-wallet-dapp-api/114295","pubDate":"Wed, 03 Jul 2024 11:26:58 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114295"},"source":{"@url":"https://community.starknet.io/t/new-starknet-wallet-dapp-api/114295.rss","#text":"New Starknet Wallet<>Dapp API"}},{"title":"Mistakes made and wrong decisions made in the first airdrop","dc:creator":"Quanionxyz","category":"Governance Proposals","description":"<p><a class=\"mention\" href=\"https://community.starknet.io/u/elibensasson\">@elibensasson</a> Since you want to hear this, let me tell you about mistakes. First of all, the requirement for people to have 0.005 eth in their wallets in the first airdrop round was very unreasonable, I say this as someone whose web3 wallet has been hacked 3 times before. I don’t keep my balances in my cold wallet, my balances are usually in my stock market account and I withdraw and use them whenever I need. I can’t risk my money again. You will probably say that 0.005 eth is a very low riskable amount. However, this balance is enough for a hacker to steal any NFT assets in my wallet. You could have used different metrics instead. For example, instead of having at least 0.005 eth in the wallet, it is required to interact with at least 5 starknet dapps. Or you could issue NFTs to identify and mark real users at certain milestones since the Starknet network was established. In this way, on the day of the airdrop, you could choose a reward by looking at who followed the Starknet network and how many NFTs they had. It’s just a simple metric. If you think about it, many different and more comprehensive metrics can be obtained. Now let’s talk about the second or subsequent airdrops. From the very beginning, we told you to fix the first airdrop allocation first. But you constantly lashed out at the community, telling us that there would be second or third airdrops and that we should continue to use starknet. However, you are forgetting the important point that you do not think about but the users do. Personally, as a starknet user, I did not receive an airdrop allocation even though I had only one wallet in the first airdrop and used the starknet network constantly. That’s why I stopped using the starknet network. I am not an airdrop farmer. I enjoyed using the Starknet network organically. I got angry at you for the unfair distribution and stopped using your network.  Now, you have been saying for a long time that there will be a second airdrop to appease the community. But I’m so angry at you that I don’t even care about the 2nd airdrop. Because probably in the second airdrop, the majority of the beneficiaries are those who qualified for the first airdrop and received 100k stark. You distributed such large amounts of stark to many of them, at our expense, that it became almost impossible for us to compete with them for the 2nd airdrop. You did this. If you had listened to us and remixed the first distribution and distributed it to the entire starknet community. Almost half of the users would use the starks from the first airdrop on the starknet network again. For example, delegating. or like buying quality NFTs. However, you allocated the second airdrop allocation to the people to whom you distributed those high amounts of stark from the very beginning. I hope you understand me. People sold 1 Strk for almost $2 in the first airdrop. The person to whom you gave 100k strk suddenly earned $200k. From the very beginning, it was made impossible for users like us to compete with these people for the 2nd airdrop. If you distribute the second airdrop share to users you did not qualify in the first airdrop without any conditions, you can at least regain maybe 1/3 of the community you lost. Respects</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/mistakes-made-and-wrong-decisions-made-in-the-first-airdrop/114292\">Read full topic</a></p>","link":"https://community.starknet.io/t/mistakes-made-and-wrong-decisions-made-in-the-first-airdrop/114292","pubDate":"Wed, 03 Jul 2024 10:59:17 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114292"},"source":{"@url":"https://community.starknet.io/t/mistakes-made-and-wrong-decisions-made-in-the-first-airdrop/114292.rss","#text":"Mistakes made and wrong decisions made in the first airdrop"}},{"title":"Reflections on the Decentralized Starknet protocol","dc:creator":"_dd","category":"📜 Development Proposals","description":"<h1><a name=\"reflections-on-the-decentralized-starknet-protocol-1\" class=\"anchor\" href=\"https://community.starknet.io#reflections-on-the-decentralized-starknet-protocol-1\"></a><strong>Reflections on the Decentralized Starknet protocol</strong></h1>\n<p>In this post we would like to share some of our thoughts at Nethermind’s Research group around the Starknet Decentralized protocol. For a well organized and systematic presentation of the protocol, we invite you to read <a href=\"https://community.starknet.io/t/starknet-decentralized-protocol-i-introduction/2671\">Ilia Volokh’s series of posts</a>.</p>\n<h3><a name=\"h-1-soft-inclusion-mechanisms-for-forced-staking-updates-2\" class=\"anchor\" href=\"https://community.starknet.io#h-1-soft-inclusion-mechanisms-for-forced-staking-updates-2\"></a><strong>1. Soft inclusion mechanisms for forced staking updates</strong></h3>\n<p><em><strong>Context:</strong></em> The L1 Staking Contract can enforce staking updates on L2 via L1 → L2 messages. These forced updates have a deadline (measured in L1 blocks, around 24h). In the current proposal, when a deadline is reached without L1 receiving a confirmation from L2 of the forced update, honest L2 nodes perform a <em>staker reset</em> (i.e., revert their state to the last accepted block on L1 and reconfigure their staking set to include the stale updates).</p>\n<p>Staker resets can affect the latency of the protocol and should be used as a last resort mechanism. Instead of optimistically hoping that forced updates will be included in proposals by altruistic nodes, some soft measures can be taken before the deadlines are reached. We identified two measures that are not mutually exclusive:</p>\n<p><strong>A) Decreasing rewards for blocks containing forced updates.</strong> Proposers who used some of their block space for including forced updates should get rewards for this. We propose a decreasing reward scheme in order to avoid the scenario in which proposers avoid including force updates in order to increase the rewards for them. Decreasing rewards can lead to faster inclusion of the forced updates into blocks.</p>\n<p><strong>B) Engage the consensus mechanism for including forced updates.</strong> Proposed blocks should contain forced updates if available. If a new proposal doesn’t contain a forced update (which has a deadline in some epsilon amount of time), during consensus, (honest) nodes will not vote for this proposal. One has to take into account the time it takes for nodes to sync their views of L1, so this mechanism can be engaged after an amount of time in which we are sure that all nodes learned about a new forced transaction.</p>\n<h3><a name=\"h-2-pool-of-proofs-3\" class=\"anchor\" href=\"https://community.starknet.io#h-2-pool-of-proofs-3\"></a>2. Pool of proofs</h3>\n<p><em><strong>Context:</strong></em> For a block to include txs, it must include a proof for some previous block(s). A block must contain a proof for the latest non-empty block and all intermediary empty blocks in its strand. A proposer is expected to have such a proof to be able to propose a block. Proposers learn in advance when they have to prepare proofs. A proposer can acquire a proof by computing it or by delegation. The protocol offers rewards for blocks and for proofs. The Starknet protocol is using Tendermint as a consensus protocol. We anticipate that proposers for rounds <code>0</code> for any height will be highly incentivized to acquire such proofs, but not proposers for rounds strictly greater than <code>0</code>.</p>\n<p>Nodes learn about a proof only when a proposer makes a proposal containing this proof. We identified some drawbacks around this mechanism. For example:</p>\n<ol>\n<li>The proposer who obtained a certain proof can be offline when they are supposed to propose a block, so the computation resources for that proof are wasted.</li>\n<li>Being a proposer for round <code>1</code> may be a privileged position when it comes to rewards. Suppose in round <code>0</code>, there is a proposal for a valid block <code>b</code> with proof <code>p</code> , <code>2f+1</code> nodes lock on this proposal, but not all nodes commit to it. In this case, the proposer in round <code>1</code> is lucky as they can make the same proposal, reusing the proof  <code>p</code>  and get the rewards.</li>\n<li>Similar with the above situation, (rational) nodes can steal the proofs exposed by previous proposers in order to get rewards. For example, at round <code>r</code> I receive a <code>PROPOSAL</code> message with block <code>b</code> and proof <code>p</code>. I can collude with others and decide not to lock on <code>b</code>. In the next round I am the proposer. As I don’t want to waste computing power to generate a proof, I propose again <code>(b,p)</code> to collect rewards. Note that such a scenario breaks the trust assumption of <code>2f+1</code> honest nodes of Tendermint.</li>\n<li>When the upper bound on empty blocks (in a strand) is reached, only a block containing a proof can be proposed. In this case, the consensus protocol will be stuck for a considerate amount of time on a certain height before consensus can be reached on a value, as proposers for rounds greater than <code>0</code> may not have had enough time to acquire the necessary proof for making a proposal. Moreover, leaders for rounds greater than <code>0</code> have no guarantee that they will get rewards if they acquire a proof, as previous leaders may have already exposed the proof before them.</li>\n</ol>\n<p>We think that making a proof a “public good” as soon as it is computed is a healthy alternative to avoid the above issues. Proofs should be added to a common <strong>pool of proofs</strong> available to all nodes and the entity posting the proof should receive the reward. One disadvantage for having a pool of proofs is that it introduces a new component into the protocol.</p>\n<p>One can start computing the proof of a block as soon as the block is committed to the L2 chain. Let us describe what the proof for block <code>H</code> looks like, depending on the type of block.</p>\n<ul>\n<li><em><strong>Block <code>H</code> is non-empty</strong></em>. The proof for <code>H</code> is the recursive proof of the followings:\n<ul>\n<li>the proof of the execution of the txs in <code>H</code></li>\n<li>the proof of the verification of the proof in <code>H</code></li>\n</ul>\n</li>\n<li><em><strong>Block <code>H</code> is empty.</strong></em> The proof for <code>H</code> is the recursive proof of the followings:\n<ul>\n<li>the proof that block <code>H</code> is empty</li>\n<li>the proof of the previous block in its strand, i.e., block <code>H-k</code></li>\n</ul>\n</li>\n</ul>\n<p>With the above mechanism for computing a proof, a proposer for block <code>H+k</code> must include the proof for block <code>H</code>, independently of whether block <code>H</code> is empty or not.</p>\n<p>In terms of who is in charge of computing the proofs, we can think of several approaches. The simplest one is the current Proof Scheduling mechanism (i.e., the proposer for round <code>0</code> of height <code>H</code> is in charge for computing the proofs for the previous non-empty block <code>H-ik</code>with <code>i &gt; 0,</code> and all empty blocks <code>H-jk</code>, with <code>i &gt; j &gt; 0</code>, in the strand of block <code>H</code>); note that this approach doesn’t solve the above case 4.  Alternatively, one can allow a general race or a priority race (in which leaders for all rounds for height <code>H+k</code> have priority on proving block <code>H</code>) for computing proofs, enabling a faster access to proofs.</p>\n<p><strong>Unprovable blocks.</strong> One big concern around the Starknet protocol is due to unprovable blocks. Consensus can be reached on unprovable blocks due to, for example, inconsistencies between execution VMs and provers (e.g., an execution VM used during consensus for validating a block may output that the block is valid due to a bug, but the prover cannot actually prove the block). In such cases, a recovery mechanism must be triggered. In the current design, there is no mechanism for signaling that a block is unprovable. However, the system can recover by employing the reset mechanism used for forced staking updates which can take more than 24h.</p>\n<p>A pool of proofs can help dealing with unprovable blocks. The entity who is supposed to provide a proof for a block can submit instead a proof showing that the block is unprovable. For example, if a prover fails to prove the execution of the txs in a block, then the entity can run a prover in a zkVM building a proof showing that the prover failed (and consequently, that the block is unprovable). Even though this mechanism is extremely computational expensive, using it in extreme rare situations can improve the current mechanism for dealing with unprovable blocks.</p>\n<p>Resets can also be avoided when identifying an unprovable block. When there is a proof <code>P</code> in the pool showing that block <code>H</code> (already contained in the chain) is unprovable, nodes can treat block <code>H</code> as an empty block (i.e., a block that doesn’t change the state) and use the proof <code>P</code> in the recursive proof that will be needed in the next non-empty block.</p>\n<h3><a name=\"h-3-decrease-the-rewards-for-empty-blocks-4\" class=\"anchor\" href=\"https://community.starknet.io#h-3-decrease-the-rewards-for-empty-blocks-4\"></a><strong>3. Decrease the rewards for empty blocks</strong></h3>\n<p><em><strong>Context:</strong></em> When they are missing the expected proof for making a proposal, proposers can propose empty blocks.</p>\n<p>Even though having the option of proposing empty blocks helps in not slowing down the protocol while waiting for proofs to be computed, it raises other problems  For example, malicious/lazy nodes can propose only empty blocks for censoring transactions or for damaging the quality of the chain.</p>\n<p>The protocol should discourage nodes for proposing (only) empty blocks when not necessary. A solution around this would be to halve the rewards for consecutive empty blocks proposed by the same node. The first time a node proposes an empty block, the reward should not be halved.</p>\n<h3><a name=\"summary-5\" class=\"anchor\" href=\"https://community.starknet.io#summary-5\"></a>Summary</h3>\n<p>With this post, we wanted to point out some problems the Decentralized StarkNet protocol can encounter. We made some suggestions for circumventing them which hopefully can improve the robustness of the protocol. We look forward to hear your feedback on these reflections!</p>\n            <p><small>6 posts - 4 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/reflections-on-the-decentralized-starknet-protocol/114280\">Read full topic</a></p>","link":"https://community.starknet.io/t/reflections-on-the-decentralized-starknet-protocol/114280","pubDate":"Tue, 02 Jul 2024 12:09:49 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114280"},"source":{"@url":"https://community.starknet.io/t/reflections-on-the-decentralized-starknet-protocol/114280.rss","#text":"Reflections on the Decentralized Starknet protocol"}},{"title":"Media Application","dc:creator":"ciaran","category":"🙏 Help and Support","description":"<p>Hi everyone</p>\n<p>I’m the founder of <a href=\"https://olas.info/\" rel=\"noopener nofollow ugc\">this media project</a>. We recently came out of stealth after quite some time spent at mechanism design. Eg we built an entirely novel market based on Bayesian Truth Serum to gauge the quality of opinion articles that we’re particularly proud of. We’re now investigating the various options of where to build and are very impressed with the Starknet ecosystem.</p>\n<p>We’re an app and want to focus on making it as successful as possible. The less we have to focus on building infrastructure, the more we can focus on that goal. So we’re trying to outsource as many things as possible to stuff that’s already built. We don’t want to build our own L1 or our own DID or PoP protocol, etc, etc. Not just from a development perspective but also from the perspective of having to get L1s supported by CEXs, etc, etc. These things take a lot of time and energy and they’re not core to what we’re trying to do. So long story, short, the likes of Starknet is a natural place to build.</p>\n<p>The revenue model of the app will rely heavily on micropayments so we’re an extremely fee sensitive app. From my research of Starknet, to achieve our goals under the assumption that usage of Starknet is going to be a lot higher than it is now in two years time, we’re either going to have to rely on volitions or spin up our own L3. The volitions integration timeline is a little uncertain but we’re not going to launch for some time so this is probably not going to be an issue.</p>\n<p>I have a few questions regarding both these possible routes.</p>\n<ol>\n<li>\n<p>When volitions are implemented will contracts that use different DA solutions to each other lose syncrhonous composability on Starknet (this is not a big deal to us BTW I’m just curious)</p>\n</li>\n<li>\n<p>If we spin up our own L3 can we abstract it away from the user by either employing a bridge that permits synchronous composability (ZK Sync claims to allow this with ZK Porter shards) or at the wallet level using account abstraction and relayers? We really want to avoid having our users manually bridge across from Starknet as the UX of bridges is simply not suitable for the masses in our view.</p>\n</li>\n<li>\n<p>Would anyone be able to provide a rough estimate of the TX fee differences between using a L3 over Starknet and volitions on Starknet directly assuming the same DA layer is used? Second part of this question if we were to use relayers from L2 to L3 for each TX (assuming this is even possible) do any cost advantages it might have evaporate?</p>\n</li>\n</ol>\n<p>If anyone had any insights here they’d be greatly appreciated.</p>\n            <p><small>4 posts - 2 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/media-application/114279\">Read full topic</a></p>","link":"https://community.starknet.io/t/media-application/114279","pubDate":"Tue, 02 Jul 2024 08:38:29 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114279"},"source":{"@url":"https://community.starknet.io/t/media-application/114279.rss","#text":"Media Application"}},{"title":"Zero Knowledge Governance for DAOs on Starknet","dc:creator":"Damian995","category":"📜 Development Proposals","description":"<p>By team: Verse</p>\n<p><strong>Overview</strong></p>\n<p>Modern digital identity systems, while enabling complex online interactions, have significant weaknesses due to centralized control, making them vulnerable to coercion, hacking, and misalignment with user interests. Decentralized, cryptographic mechanisms like zkSNARKs offer solutions by enabling credible claims without a trusted authority. This shift allows users to control their identity data, enhancing security and privacy. This has been our greatest inspiration to create the Zero Knowledge Governance Solution for Starknet.</p>\n<p>The Starknet ecosystem is home to several prominent projects like Realms and Ekubo, which are governed and managed by DAOs. These organizations are committed to the principles of transparency, decentralization, and community-driven governance. Despite these ideals, there remains a significant reluctance among community members to engage in governance. The primary concern is the visibility of their voting actions on the blockchain, which can expose sensitive information regarding their decisions and influence.</p>\n<p>While zkSNARKs inspire us to explore technology creating secure, privacy-preserving identity systems,vbuterin’s vision for minimal anti-collusion infrastructure (MACI) provides a foundational principle for our proposal. MACI focuses on offering collusion resistance with centralized trust while ensuring blockchain guarantees of correct execution and censorship resistance. By using a trusted operator to manage keys and actions, encrypting messages to maintain vote privacy and integrity, this method prevents bribery and ensures votes are counted accurately without exposing individual choices.</p>\n<p>Zero Knowledge (ZK) Governance building on MACI abstracts governance voting to ensure privacy and collusion resistance using encryption and zero-knowledge proofs. With a trusted coordinator managing key changes and actions, providing credible results without revealing individual votes. This approach ensures voting remains private, secure, and verifiable without exposing voters’ identities or their choices. This innovation encourages greater participation in DAO governance by safeguarding the anonymity and confidentiality of each vote, while still maintaining the integrity and trustworthiness of the voting process. When integrated into Starknet’s governance platform, this solution can significantly enhance participation rates and foster a more inclusive governance environment.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/c/8/c84b043fe7e66c31c5984ae2f1116d1727185b69.png\" data-download-href=\"/uploads/short-url/szSdpTAXCiac4zRrhWaUWxwKpkZ.png?dl=1\" title=\"WechatIMG5067\" rel=\"noopener nofollow ugc\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/c/8/c84b043fe7e66c31c5984ae2f1116d1727185b69.png\" alt=\"WechatIMG5067\" data-base62-sha1=\"szSdpTAXCiac4zRrhWaUWxwKpkZ\" width=\"690\" height=\"372\" data-dominant-color=\"F3F3F3\"></a></div><p></p>\n<p>Source: MACI Introduction. <a href=\"https://maci.pse.dev/docs/introduction#credits\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Introduction to MACI | MACI</a></p>\n<p><strong>Problems with Current On-Chain Governance</strong></p>\n<p>DAOs in the Starknet ecosystem currently face several challenges that hinder active participation in governance:</p>\n<ul>\n<li>\n<p>Lack of Privacy: Voting actions are publicly visible on the blockchain, leading to concerns about exposing decisions and associated assets.</p>\n</li>\n<li>\n<p>Fear of Repercussions: Members may avoid voting on sensitive or controversial issues due to potential social or financial backlash.</p>\n</li>\n<li>\n<p>Transparency vs. Confidentiality: There is a conflict between the need for transparent governance and the desire to keep individual voting choices private.</p>\n</li>\n<li>\n<p>Influence and Bias: Public voting records can lead to undue influence, where the votes of prominent members sway the opinions of others.</p>\n</li>\n<li>\n<p>Low Participation Rates: The visibility of votes discourages engagement, leading to lower participation in governance processes.</p>\n</li>\n<li>\n<p>Data Sensitivity: Voters prefer to keep their voting history and the details of their holdings confidential to avoid revealing personal strategies.</p>\n</li>\n</ul>\n<p><strong>Zero Knowledge Governance Solutions for Starknet</strong></p>\n<p>Zero Knowledge Governance (ZK Governance) offers a comprehensive solution to these challenges by balancing the need for transparency in governance with the privacy of individual voters. Key features of ZK Governance for Starknet DAOs include:</p>\n<ol>\n<li>\n<p>Zero-Knowledge Proofs for Voting Privacy: Utilizes zero-knowledge proofs to validate that a vote was cast by a legitimate wallet address and backed by real assets, without revealing the voter’s identity or choice. This ensures that voting is private and secure, fostering greater confidence in the voting process.</p>\n</li>\n<li>\n<p>Anonymity in Participation: Ensures that whether a wallet has voted, the direction of the vote (yes or no), and the amount of voting power exercised remain confidential. This privacy encourages members to participate without fear of repercussions or undue influence.</p>\n</li>\n<li>\n<p>Snapshot-based Asset Validation: Assets are validated at the time of voting through a snapshot taken at a specific block height, ensuring the vote’s legitimacy without exposing details on the blockchain. This method ensures that votes are cast by eligible participants without compromising their privacy.</p>\n</li>\n<li>\n<p>Encouraged Participation: By protecting voters from potential backlash or influence, ZK Governance promotes more active and diverse participation in governance decisions. This leads to a more robust and representative decision-making process within DAOs.</p>\n</li>\n<li>\n<p>Equal Voting Power: Maintains the principle of token-weighted voting without compromising voter privacy. This ensures that all stakeholders have a fair say in governance matters while protecting their anonymity.</p>\n</li>\n<li>\n<p>Secure and Verifiable: The integrity of the voting process is upheld through secure cryptographic methods, ensuring that all votes are counted accurately and fairly. This transparency helps build trust in the governance system.</p>\n</li>\n<li>\n<p>Enhanced Community Trust: By safeguarding individual privacy, ZK Governance fosters a more trusting and open community environment where members feel safe to express their opinions. This trust is crucial for the healthy functioning of DAOs in the Starknet ecosystem.</p>\n</li>\n</ol>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/2/5/258cd9f96d7296dee27ed0597dbcaf0a3fc85a68.png\" data-download-href=\"/uploads/short-url/5mbreyYafpn045gJr8p9u9vTE6Y.png?dl=1\" title=\"WechatIMG5069\" rel=\"noopener nofollow ugc\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/2/5/258cd9f96d7296dee27ed0597dbcaf0a3fc85a68_2_666x500.png\" alt=\"WechatIMG5069\" data-base62-sha1=\"5mbreyYafpn045gJr8p9u9vTE6Y\" width=\"666\" height=\"500\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/2/5/258cd9f96d7296dee27ed0597dbcaf0a3fc85a68_2_666x500.png, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/2/5/258cd9f96d7296dee27ed0597dbcaf0a3fc85a68.png 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/2/5/258cd9f96d7296dee27ed0597dbcaf0a3fc85a68.png 2x\" data-dominant-color=\"C3D5E5\"></a></div><p></p>\n<p><strong>MACI on Starknet’s Governance</strong><br>\nDetailed Introduction to MACI in Starknet Governance</p>\n<p>Participants</p>\n<ul>\n<li>Voters: Only holders and delegates of L1 (Ethereum) STRK and L2 (Starknet) vSTRK have the right to vote, referred to as voters. Voters need to register with MACI before they can cast their votes.</li>\n<li>Trusted Coordinators: Coordinators help set up and execute MACI voting. They are responsible for deploying the MACI smart contracts, initiating the voting, tallying the final results, and completing the voting process by publishing the final results on-chain.</li>\n</ul>\n<p>Codebase</p>\n<ul>\n<li>Circom Circuits:</li>\n</ul>\n<p>MACI uses multiple circuits to ensure all off-chain computations are done correctly. These circuits generate zero-knowledge proofs (zk-SNARKs) that prove the votes were tallied correctly. Specifically, they enforce that coordinators correctly executed message processing and vote counting. These proofs can then be verified by validator smart contracts on Starknet.</p>\n<p>These zero-knowledge proof circuits are written in Circom 2.0. The main circuits include processMessages.circom and tallyVotes.circom, while other utility templates support the main circuits’ proper functioning. These utilities include floating-point arithmetic, private key transformations, and Poseidon hash/encryption among others.</p>\n<ul>\n<li>Cairo Smart Contracts:</li>\n</ul>\n<p>The MACI smart contracts handle the on-chain aspects of the voting system (functionality and storage). They provide functions for deploying votes, registering voters, and accepting votes. They also store and manage on-chain data from transactions, such as encrypted votes. Finally, they verify zk-SNARK circuit proofs so that everyone can validate the voting results.</p>\n<p>The MACI smart contracts are written in Cairo.</p>\n<ul>\n<li>TypeScript Libraries:</li>\n</ul>\n<p>The TypeScript libraries manage the business logic between the smart contracts and circuit code. They offer various functionalities such as encryption tools, utilities, and a CLI for interacting with MACI (for operations like registration, voting, tallying, and generating proofs).</p>\n<p>Voting Process Workflow</p>\n<ul>\n<li>Registration:</li>\n</ul>\n<p>Before voting, voters must generate a MACI key pair and send their public key to the MACI smart contract. This MACI public key serves as their identity when voting. Voters can delegate their voting rights to themselves or another address, but the message must include a signature from the MACI public key. If the voter holds STRK, the voting address is an Ethereum address. If the voter holds vSTRK, the voting address is a Starknet address.</p>\n<ul>\n<li>Voting:</li>\n</ul>\n<p>Once registered, voters can cast their votes during the open voting period. Voters bundle variables such as the public key, voting options, and the number of votes into a “command” and sign it with the MACI public key used during registration. The signed command is then encrypted along with the signature to form a “message”. If the message is correctly signed by the MACI public key, it is valid and will be included in the final tally.</p>\n<p>Before sending the vote to Starknet, voters encrypt their votes using a shared key known only to themselves and the coordinator. This prevents anyone from viewing the vote content and allows the coordinator to decrypt the user’s vote for tallying.</p>\n<ul>\n<li>Processing Messages:</li>\n</ul>\n<p>Once voting ends, coordinators prove they have correctly decrypted each message and updated the state tree. The state tree records all valid votes, without retaining outdated messages overridden by new ones. For example, if a user first voted for option A and later changed their vote to option B, only the vote for option B is counted.</p>\n<p>Coordinators process messages in batches to ensure on-chain proofs do not exceed data limits. A zk-SNARK proof is then created to show that the state tree contains only valid messages, providing the state tree’s hash and zk-SNARK proof.</p>\n<p>These proofs are sent to the verifier contract on Starknet, which validates the proof. If the verifier contract returns true, it indicates the messages were processed correctly. Coordinators repeat this process until all messages are processed.</p>\n<ul>\n<li>Tallying Results:</li>\n</ul>\n<p>After all messages are processed, coordinators tally the votes of valid messages offline. A zk-SNARK proof is created to show the sum of votes in the state tree and provide the correct tally result’s hash and zk-SNARK proof.</p>\n<p>Coordinators send these proofs to the verifier contract to ensure their validity. Once verified, users can trust that the votes were tallied correctly. Anyone can see the final tally results and proofs, but individual votes remain confidential, ensuring votes were correctly processed and counted.</p>\n<ul>\n<li>Publishing Results:</li>\n</ul>\n<p>After coordinators process all messages, tally the results, and publish zk-SNARK proofs, the voting is finalized.</p>\n<p>At this point, the final voting results can be announced, and anyone can verify that the results were processed and calculated correctly by the coordinators.</p>\n<p><strong>Integration with Starknet’s Governance Platform</strong><br>\nStarknet currently hosts a governance voting website designed to facilitate transparent decision-making within the ecosystem. Integrating ZK Governance to the existing governance platform, is to add a privacy layer to Starknet’s governance, lowering the barrier to participation and reducing the potential for collusion.</p>\n<ul>\n<li>\n<p>Increased Participation: By enhancing privacy, ZK Governance will encourage more community members to engage in governance, leading to higher participation rates and more robust decision-making processes.</p>\n</li>\n<li>\n<p>Improved User Confidence: Addressing privacy concerns will make members feel more comfortable voting on sensitive issues without fear of exposure or backlash.</p>\n</li>\n<li>\n<p>Enhanced Governance Quality: A more engaged community means more representative decisions that better reflect the collective interests of stakeholders.</p>\n</li>\n</ul>\n<p>Key deliverables will be the followings:</p>\n<ol>\n<li>\n<p>An Anonymous Forum Section: Creating a forum section where users can discuss and deliberate without revealing their identities.</p>\n</li>\n<li>\n<p>Anti-Censorship/Anonymous Voting: Implementing a voting mechanism that ensures anonymity and resistance to censorship, promoting fair and free participations.</p>\n</li>\n</ol>\n<p><strong>Benefits to the Starknet Ecosystem</strong><br>\nImplementing Zero Knowledge Governance within the Starknet ecosystem will bring several advantages:</p>\n<ul>\n<li>\n<p>Higher Participation Rates: By ensuring voter privacy, ZK Governance can significantly boost participation rates in governance processes, leading to more democratic and representative outcomes.</p>\n</li>\n<li>\n<p>Stronger Community Engagement: Addressing privacy concerns will foster a more active and involved community, which is vital for the success of DAOs.</p>\n</li>\n<li>\n<p>Improved Decision-Making: With more members participating in governance, decisions will better reflect the community’s views and interests.</p>\n</li>\n<li>\n<p>Enhanced Security: Zero-knowledge proofs provide a secure mechanism for voting, protecting the integrity of the governance process and reducing the risk of manipulation.</p>\n</li>\n</ul>\n<p><strong>Conclusion</strong></p>\n<p>The Starknet ecosystem, with its leading DAOs like Realms and Ekubo, stands to greatly benefit from the adoption of Zero Knowledge Governance. By addressing privacy concerns and encouraging active participatio</p>\n<p>n, ZK Governance will strengthen the governance framework of DAOs and contribute to a more vibrant and engaged community. We invite the Starknet community to consider this proposal and explore the potential of ZK Governance to enhance the governance processes within their DAOs.</p>\n<p>Reference:</p>\n<ul>\n<li>vbuterin. Minimal anti-collusion infrastructure. <a href=\"https://ethresear.ch/t/minimal-anti-collusion-infrastructure/5413\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Minimal anti-collusion infrastructure - Applications - Ethereum Research</a></li>\n<li>gubsheep and Sun Yi. ZK Identity: Why and How (Part 1) <a href=\"https://0xparc.org/blog/zk-id-1\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">0xPARC</a></li>\n<li>gubsheep and Sun Yi. ZK Identity: Why and How (Part 2) <a href=\"https://0xparc.org/blog/zk-id-2\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">0xPARC</a></li>\n<li>MACI. Minimal Anti-Collusion Infrastructure (MACI). <a href=\"https://maci.pse.dev/docs/introduction#credits\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Introduction to MACI | MACI</a></li>\n</ul>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/zero-knowledge-governance-for-daos-on-starknet/114278\">Read full topic</a></p>","link":"https://community.starknet.io/t/zero-knowledge-governance-for-daos-on-starknet/114278","pubDate":"Tue, 02 Jul 2024 08:38:28 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114278"},"source":{"@url":"https://community.starknet.io/t/zero-knowledge-governance-for-daos-on-starknet/114278.rss","#text":"Zero Knowledge Governance for DAOs on Starknet"}},{"title":"Implimenting interfaces and libraries in a contract","dc:creator":"Sari2003","category":"Support","description":"<p>I have interfaces and libraries in different files and folders,<br>\nI want to use them in a contract in my project,<br>\nhow can I use it ? how do I import them to my contract file?</p>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/implimenting-interfaces-and-libraries-in-a-contract/114268\">Read full topic</a></p>","link":"https://community.starknet.io/t/implimenting-interfaces-and-libraries-in-a-contract/114268","pubDate":"Sun, 30 Jun 2024 11:34:52 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114268"},"source":{"@url":"https://community.starknet.io/t/implimenting-interfaces-and-libraries-in-a-contract/114268.rss","#text":"Implimenting interfaces and libraries in a contract"}},{"title":"SNIP-89: Safe Transfer for Fungible Tokens","dc:creator":"boyuanx","category":"SNIPs","description":"<p>Discussion for <a href=\"https://github.com/starknet-io/SNIPs/pull/89\" rel=\"noopener nofollow ugc\">https://github.com/starknet-io/SNIPs/pull/89</a></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/snip-89-safe-transfer-for-fungible-tokens/114254\">Read full topic</a></p>","link":"https://community.starknet.io/t/snip-89-safe-transfer-for-fungible-tokens/114254","pubDate":"Tue, 25 Jun 2024 21:20:06 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114254"},"source":{"@url":"https://community.starknet.io/t/snip-89-safe-transfer-for-fungible-tokens/114254.rss","#text":"SNIP-89: Safe Transfer for Fungible Tokens"}},{"title":"Report of a Scam/Copycat Project Receiving Seed Grant - Negligent Due Diligence Process & Use of Foundation Funds","dc:creator":"rd21bn","category":"🙏 Help and Support","description":"<p>Hello Starknet Community,</p>\n<p>I am Winnal Kuo, founder and CEO of Ender Labs, creators of the Ender Protocol. Please visit our <a>Twitter</a> and <a href=\"https://enderprotocol.io\" rel=\"noopener nofollow ugc\">website</a> to learn more about our work.</p>\n<p>Today, I must bring to light a serious issue concerning a project by the name of Primis Protocol, a recent recipient of the Starknet Seed Grant Program—that has engaged in the unauthorized use of our copyrighted material, including IP and licensed code. Despite repeated attempts to engage with the Seed Grant Program’s administration, referred to us by CEO Eli Ben-Sasson, we have faced consistent neglect and non-responsiveness.</p>\n<h3><a name=\"key-issues-1\" class=\"anchor\" href=\"https://community.starknet.io#key-issues-1\"></a>Key Issues</h3>\n<ol>\n<li>\n<p><strong>Unauthorized Use of IP and Licensed Code</strong>:</p>\n<ul>\n<li>Primis Protocol has been using our copyrighted material and licensed code without our consent. This constitutes a severe infringement of our intellectual property rights and poses significant security risks to public users who might interact with their platform.</li>\n</ul>\n</li>\n<li>\n<p><strong>Fraudulent Claims and Metrics</strong>:</p>\n<ul>\n<li>The project has deployed a non-functional testnet application using boilerplate templates and static, hard-coded values. They have been using these metrics to conduct a fraudulent token airdrop aimed at enriching themselves.</li>\n</ul>\n</li>\n<li>\n<p><strong>Misrepresentation of Team Credentials</strong>:</p>\n<ul>\n<li>The founder of Primis Protocol, Khoubaieb Blili, has claimed past affiliations with Meta, Blockfi, and Solana Labs, without evidence or references. Additionally, he falsely claimed to have worked at Ender Labs for two months. Our investigation, backed by substantial evidence, disproves these claims. His social media presence as a rapper and musician during the same timeframe casts further doubt on his supposed technical engagements.</li>\n</ul>\n</li>\n</ol>\n<h3><a name=\"evidence-and-attempts-to-resolve-2\" class=\"anchor\" href=\"https://community.starknet.io#evidence-and-attempts-to-resolve-2\"></a>Evidence and Attempts to Resolve</h3>\n<ul>\n<li>We have detailed video recordings and documentation of the IP and code theft.</li>\n<li>Despite numerous attempts to engage with the Seed Grant Program and its representatives, our concerns have been consistently ignored.</li>\n</ul>\n<h3><a name=\"whats-at-stake-3\" class=\"anchor\" href=\"https://community.starknet.io#whats-at-stake-3\"></a>What’s at Stake?</h3>\n<p>The unauthorized use of our code not only infringes on our intellectual property rights but poses a significant security risk to users. Primis Protocol has misrepresented itself through social media and testnet applications, displaying falsified metrics and functionality to attract unwarranted attention and potential investment. Their actions suggest a pattern of deceit, aimed at enriching themselves through fraudulent airdrops and promotions.</p>\n<h3><a name=\"the-issue-with-due-diligence-4\" class=\"anchor\" href=\"https://community.starknet.io#the-issue-with-due-diligence-4\"></a>The Issue with Due Diligence</h3>\n<p>Alarmingly, Primis Protocol received a Seed Grant of up to $25,000 with apparently no thorough vetting of its team or founders. The founder, Khoubaieb Blili, has falsely claimed past affiliations with Meta, Blockfi, and Solana Labs—a claim we have found to be entirely unsubstantiated. Mr. Blili previously applied for a position at Ender Labs, and after we identified several red flags, we chose not to proceed. Regrettably, he then exploited this interaction to misappropriate our work and initiate a competing, illegitimate project.</p>\n<h3><a name=\"further-concerns-about-integrity-5\" class=\"anchor\" href=\"https://community.starknet.io#further-concerns-about-integrity-5\"></a>Further Concerns About Integrity</h3>\n<p>Mr. Blili’s professional background raises significant concerns. He claims to have been associated with well-known entities such as Meta, Blockfi, and Solana Labs. However, we have not found any references or concrete evidence to substantiate these claims. This lack of verification, combined with his verified false claim of employment at Ender Labs—where he reported working for two months, which is unequivocally untrue—casts serious doubts on the validity of his entire professional narrative. During the period he alleges to have been employed at these companies, his social media profiles prominently feature his activities as a rapper and musician, which contradicts the likelihood of simultaneous full-time employment at these companies.</p>\n<h3><a name=\"technical-inadequacies-of-primis-protocols-testnet-6\" class=\"anchor\" href=\"https://community.starknet.io#technical-inadequacies-of-primis-protocols-testnet-6\"></a>Technical Inadequacies of Primis Protocol’s Testnet</h3>\n<p>The concerns extend beyond just qualifications; they manifest starkly in the output of their projects. Primis Protocol has deployed a testnet application that is ostensibly non-functional. The application uses boilerplate templates and static, hard-coded values that simulate functionality which in actuality does not exist. This completely fake application lacks critical features that would be present in a genuinely developed protocol, such as the capability to claim rewards from bonds or stake these rewards. Since we are the real and original developers of the project and application, we can pinpoint exact and core functionalities that are completely missing, and they are just faking it by showing an incomplete product in hopes that nobody notices.</p>\n<h3><a name=\"negligent-due-diligence-process-use-of-foundation-funds-7\" class=\"anchor\" href=\"https://community.starknet.io#negligent-due-diligence-process-use-of-foundation-funds-7\"></a>Negligent Due Diligence Process &amp; Use of Foundation Funds</h3>\n<p>A critical aspect of this situation that must be underscored is the apparent negligence by the foundation overseeing the Seed Grant Program. The fact that Primis Protocol was able to secure up to $25,000 without adequate background checks on the team or the viability of their project is alarming. This lapse has not only enabled the misappropriation and misuse of intellectual property but also represents a serious mismanagement of foundation funds, which should be allocated to foster genuine innovation and development in the blockchain space.</p>\n<p>The foundation’s subsequent non-responsiveness to our repeated attempts to address these issues further exacerbates our concerns, suggesting a dismissive approach to accountability. This lack of engagement and oversight raises profound questions about the foundation’s commitment to upholding the standards and values expected within the Starknet community. It is imperative that the foundation re-evaluates its due diligence processes to prevent similar occurrences in the future and to restore trust among developers and investors who rely on its governance and integrity.</p>\n<h3><a name=\"call-to-action-8\" class=\"anchor\" href=\"https://community.starknet.io#call-to-action-8\"></a>Call to Action</h3>\n<ol>\n<li>\n<p><strong>Immediate Investigation</strong>:</p>\n<ul>\n<li>We urge the foundation to conduct a thorough investigation into Primis Protocol’s activities, their unauthorized use of Ender Labs’ IP, and Mr. Blili’s background.</li>\n</ul>\n</li>\n<li>\n<p><strong>Revocation of Seed Grant</strong>:</p>\n<ul>\n<li>Given the fraudulent foundation of their project, we request that the Seed Grant awarded to Primis Protocol be revoked.</li>\n</ul>\n</li>\n<li>\n<p><strong>Public Accountability</strong>:</p>\n<ul>\n<li>We call upon the foundation to address this issue publicly, ensuring transparency and accountability within the community.</li>\n</ul>\n</li>\n<li>\n<p><strong>Review and Improve Due Diligence Processes</strong>:</p>\n<ul>\n<li>We strongly recommend that the foundation review and improve its due diligence processes to prevent similar incidents from occurring in the future.</li>\n</ul>\n</li>\n</ol>\n<p>This behavior is not only unethical but also detrimental to the integrity and safety of the blockchain community. We have gathered substantial evidence, including video recordings and detailed documentation of the infringed works, and are prepared to pursue all necessary legal avenues to address this infringement.</p>\n<p>We urge the community and the administrators of the Seed Grant Program to take immediate action against such fraudulent practices to prevent any further harm to unsuspecting users and investors. We are ready to provide all necessary evidence to support our claims and assist in any investigations.</p>\n<h3><a name=\"commitment-to-legal-action-9\" class=\"anchor\" href=\"https://community.starknet.io#commitment-to-legal-action-9\"></a>Commitment to Legal Action</h3>\n<p>Ender Labs is prepared to pursue legal action against Mr. Khoubaieb Blili and Primis Protocol for their unauthorized use of our intellectual property, misrepresentation, and fraud.</p>\n<p>We hope that the foundation will take immediate action to address these serious concerns and uphold the integrity of our community.</p>\n<p>Thank you for your attention to this critical matter. We are ready to provide all necessary evidence and cooperate fully to resolve this issue. We stand ready to defend our work and ensure the blockchain ecosystem remains a safe and honest environment for all.</p>\n<p>Sincerely,<br>\nWinnal Kuo<br>\nCEO, Ender Labs</p>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/report-of-a-scam-copycat-project-receiving-seed-grant-negligent-due-diligence-process-use-of-foundation-funds/114240\">Read full topic</a></p>","link":"https://community.starknet.io/t/report-of-a-scam-copycat-project-receiving-seed-grant-negligent-due-diligence-process-use-of-foundation-funds/114240","pubDate":"Fri, 21 Jun 2024 09:47:46 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114240"},"source":{"@url":"https://community.starknet.io/t/report-of-a-scam-copycat-project-receiving-seed-grant-negligent-due-diligence-process-use-of-foundation-funds/114240.rss","#text":"Report of a Scam/Copycat Project Receiving Seed Grant - Negligent Due Diligence Process & Use of Foundation Funds"}},{"title":"Token Burn Mechanism for STRK","dc:creator":"kubatura5","category":"🤷‍♀️ All-Purpose Hangout","description":"<p>To maintain the value and scarcity of STRK tokens, we propose to implemen a token burn mechanism.</p>\n<p>Unclaimed STRK Tokens: Any STRK tokens from that remain unclaimed for Starknet Provisions Program will be permanently burned. This reduces the total supply of STRK tokens, thereby increasing their value for existing holders.</p>\n<p>Fee Payment Burn: A portion of the STRK tokens used for transaction fees will be automatically burned. This continuous burning process decreases the circulating supply, ensuring a deflationary effect on the token economy.</p>\n<p>By implementing these burn mechanisms, we aim to enhance the value and stability of the STRK token ecosystem.</p>\n            <p><small>5 posts - 3 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/token-burn-mechanism-for-strk/114233\">Read full topic</a></p>","link":"https://community.starknet.io/t/token-burn-mechanism-for-strk/114233","pubDate":"Thu, 20 Jun 2024 01:05:48 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114233"},"source":{"@url":"https://community.starknet.io/t/token-burn-mechanism-for-strk/114233.rss","#text":"Token Burn Mechanism for STRK"}},{"title":"Starknet v0.13.2 pre-release notes","dc:creator":"FeedTheFed","category":"🆙 Versions Upgrade","description":"<p><code>Sepolia Testnet</code> – August 5<br>\n<code>Mainnet</code> – August 26</p>\n<h1><a name=\"conceptual-changes-1\" class=\"anchor\" href=\"https://community.starknet.io#conceptual-changes-1\"></a>Conceptual Changes</h1>\n<p>This version focuses on performance improvements. In addition, we make some necessary adjustments in order to prepare for the transition to a Starknet p2p network between nodes that will happen in a later version. We proceed to describe the version highlights.</p>\n<h2><a name=\"sequencer-parallelization-2\" class=\"anchor\" href=\"https://community.starknet.io#sequencer-parallelization-2\"></a>Sequencer parallelization</h2>\n<p>We’re reintroducing optimistic parallelization to the new rust-based Starknet sequencer. The gist of optimistic parallelization is to execute transactions in parallel as long as we don’t find a dependency between them. You can read more about optimistic parallelization <a href=\"https://community.starknet.io/t/optimistic-parallelization-revived/114121#optimistic-parallelization-revived-1\">here</a>. The improvement factor obviously depends on the nature of the common txs on the network.</p>\n<h2><a name=\"starknet-applicative-recursion-3\" class=\"anchor\" href=\"https://community.starknet.io#starknet-applicative-recursion-3\"></a>Starknet applicative recursion</h2>\n<h3><a name=\"what-do-we-mean-by-applicative-recursion-4\" class=\"anchor\" href=\"https://community.starknet.io#what-do-we-mean-by-applicative-recursion-4\"></a>What do we mean by “applicative recursion”</h3>\n<p>SHARP works in the resolution of proof trains, each train consists of a tree whose leaves are jobs, each corresponding to a Cairo program that needs proving (in the case of Starknet, this is the Starknet OS). The final proof that reaches L1 is a recursive proof for all the leaves in the tree. Unlike verification of the proof on L1 which is shared among all the jobs in the train, there is a fixed cost per job for e.g. recording the associated fact, or publishing data which is done separately for each job. So far, each Starknet block was sent as a separate job. This limited our ability to squash state diffs over several blocks, and prevented us from having a short fixed-time block interval (since in the current architecture, each block publishes one blob, so short enough block times will lead to severe blob under-utilization). Even more importantly, this meant a high fixed cost per block (fact recording on-chain and state-update on the Core contract).</p>\n<p>To overcome the above issues, we want to have only one fact recorded on-chain, attesting to many Starknet blocks. We refer to this feature as “Starknet applicative recursion”. The idea is, to generate the recursive proof on the Starknet side, and only send one final job for SHARP. For each block, we’ll ask SHARP for a proof of that block, but without the recording on-chain part. Given the proofs, we’ll construct a final recursive job that attests to all the blocks, and squashes all the state diffs between them.</p>\n<h3><a name=\"what-actually-changes-5\" class=\"anchor\" href=\"https://community.starknet.io#what-actually-changes-5\"></a>What actually changes</h3>\n<p>The <a href=\"https://etherscan.io/address/0x47312450b3ac8b5b8e247a6bb6d523e7605bdb60\">L1 verifier contract</a> will change. Instead of verifying the execution of the <a href=\"https://github.com/starkware-libs/cairo-lang/tree/master/src/starkware/cairo/bootloaders\">bootloader program</a>, it will verify a new program, called the “applicative bootloader”. The applicative bootloader relies on the existence of a “base program” and an aggregator program.</p>\n<p>To register a new “applicative fact” on-chain, the verifier contract must see a proof for the successful execution of the applicative bootloader with some base program P, and an aggregator program for P. The way the applicative bootloader works, is to verify (potentially several) proofs of the base program execution, and then use the outputs of the base program as input to the aggregator program. In the case of Starknet, the base program is the Starknet OS, and the aggregator program is a new cairo program that squashes the state diffs of several blocks. This way, we can take individual proofs of OS executions for some block range, and end up with a single program whose valid execution attests to the validity of all blocks within that range, and whose output is the squashed state diff. On Ethereum, the Starknet core contract will verify that an “applicative fact” was registered on chain, with the expected aggregator program, and that the base program hash (outputted by the aggregator) is that of the Starknet OS.</p>\n<p>We summarize the technical changes induced by the above here:</p>\n<ul>\n<li>The Starknet Core contract now knows of both the aggregator program hash and the OS program hash.</li>\n<li>The <a href=\"https://github.com/starkware-libs/cairo-lang/blob/efa9648f57568aad8f8a13fbf027d2de7c63c2c0/src/starkware/starknet/solidity/Starknet.sol#L36\">LogStateUpdate</a> event for the Starknet core contract will be emitted once for every sequence of blocks, rather than for every block.</li>\n<li>The data published on L1 is now the output of the aggregator. While the format of the <a href=\"https://docs.starknet.io/architecture-and-concepts/network-architecture/data-availability/#v0.11.0_format\">state diffs</a>, the <a href=\"https://github.com/starkware-libs/cairo-lang/blob/efa9648f57568aad8f8a13fbf027d2de7c63c2c0/src/starkware/starknet/core/os/output.cairo#L25\">OsOutputHeader</a> changes. We’re adding four new fields to the header: <code>prev_block_number</code>, <code>prev_block_hash</code>, <code>os_program_hash</code>, <code>full_output</code>. This means that if you’re decoding Starknet onchain data from blobs, then you’ll need to start decoding statediffs after the first 10 felts rather than after the first 6.</li>\n</ul>\n<p>The new Cairo programs, namely the aggregator and applicative bootloader, will be published as part of the new <a href=\"https://github.com/starkware-libs/cairo-lang\">cairo-lang</a> release.</p>\n<h2><a name=\"new-block-hash-definition-6\" class=\"anchor\" href=\"https://community.starknet.io#new-block-hash-definition-6\"></a>New block hash definition</h2>\n<p>To prepare for the future transition to p2p communication (as opposed to relying on the centralized sequencer block publications), we’re making sure that the block hash structure is robust in the sense that it allows nodes to verify all the data given by peers without being susceptible to DOS.</p>\n<p>This change will affect full nodes, and will not be seen externally (past block hashes naturally remain unchanged). You can find a reference implementation to the new block hash calculation in the <a href=\"https://github.com/starkware-libs/starknet-api/tree/15219992b54b170dcf80fa5cceab56847ea2f7f0/src/block_hash\">starknet-api</a> crate.</p>\n<h1><a name=\"api-changes-7\" class=\"anchor\" href=\"https://community.starknet.io#api-changes-7\"></a>API Changes</h1>\n<h2><a name=\"fgw-requestresponse-8\" class=\"anchor\" href=\"https://community.starknet.io#fgw-requestresponse-8\"></a>FGW request/response</h2>\n<ol>\n<li>Block hash definition will change as discussed above, this will affect all endpoints returning the block hash (the response structure remains the same)</li>\n<li>Fix bug where state diff hash used for signatures is affected by 0 length state diff.</li>\n<li>Receipts will get a new total_gas_consumed property, that will only appear in new transactions after 0.13.2. This is an object that includes l1_gas and l1_data_gas. These are the numbers used for the eventual fee computation, and for the receipt hash during the block hash calculation.</li>\n<li>Three new builtins can appear under the builtin_instance_counter property of execution_resources under transaction receipts (which are accessible through the get_block endpoint). The new builtins are <code>add_mod</code>, <code>mul_mod</code>, and <code>range_check96</code>.</li>\n</ol>\n<p>The source of truth for the feeder gateway response is <a href=\"https://github.com/starkware-libs/cairo-lang/blob/v0.13.1a0/src/starkware/starknet/services/api/feeder_gateway/response_objects.py\">FGW response objects</a>.</p>\n<h2><a name=\"json-rpc-9\" class=\"anchor\" href=\"https://community.starknet.io#json-rpc-9\"></a>JSON RPC</h2>\n<p>No change in 0.13.2</p>\n<p>v0.8.0 will be released alongside Starknet v0.13.3, at which point all support for versions &lt; 0.7.0 will stop.</p>\n<h1><a name=\"cairo-10\" class=\"anchor\" href=\"https://community.starknet.io#cairo-10\"></a>Cairo</h1>\n<p>A new compiler version will be released for 0.13.2, Cairo 2.7.0. This includes a Sierra upgrade to v1.6.0, i.e. contracts compiled with the new compiled will only be accepted on Starknet v0.13.2 onwards.</p>\n<p>The Starknet-related features that will be added in this Cairo version include:</p>\n<ul>\n<li>SHA256 syscall - syscall for computing sha256 on an arbitrary length input\n<ul>\n<li><a href=\"https://github.com/starkware-libs/cairo/blob/f5ac2d1d24ae0a626e9925db0c564bd0c4fea433/corelib/src/sha256.cairo#L24\">High level code</a> for using sha256</li>\n<li><a href=\"https://github.com/starkware-libs/blockifier/blob/b22fb076a7db5e0fcdd2048a6fb579b0b1d25561/crates/blockifier/resources/versioned_constants.json#L284\">Syscall cost</a> - the dominant part of the syscall is ~1.1k bitwise builtin applications which today costs ~180 L1 gas (the 2k steps are negligible in comparison). The syscall is applied once for ~14 u32.</li>\n</ul>\n</li>\n<li>Circuit builtin - the new compiler version will introduce a way to define ad-hoc algebraic circuits in Cairo. Circuits use the new mulmod and addmod builtins under the hood.\n<ul>\n<li>Example usage can be found in <a href=\"https://github.com/starkware-libs/cairo/blob/39095a2a717b5bf3a76c813186f0a9cd0e087948/corelib/src/test/circuit_test.cairo#L24\">circuit_test.cairo</a></li>\n</ul>\n</li>\n</ul>\n<h1><a name=\"execution-changes-11\" class=\"anchor\" href=\"https://community.starknet.io#execution-changes-11\"></a>Execution Changes</h1>\n<h2><a name=\"blockifier-12\" class=\"anchor\" href=\"https://community.starknet.io#blockifier-12\"></a>Blockifier</h2>\n<ol>\n<li>\n<p>Parallelization infrastructure: we’ll add separate modules to the blockifier that will be responsible for running a block with optimistic parallelization. The sequential flow remains mostly be untouched by parallelization. The entry point to the blockifier’s concurrency handling is <a href=\"https://github.com/starkware-libs/blockifier/blob/df2799eafda4f575e71d63c839d14f5a38ca911d/crates/blockifier/src/concurrency.rs#L1\">concurrency.rs</a>. You can find a short description of the new design in the <a href=\"https://community.starknet.io/t/optimistic-parallelization-revived/114121\">community forum post</a>.</p>\n</li>\n<li>\n<p>VM upgrade: we’ll bump the vm version v1.0.0 (atm we’re on <a href=\"https://github.com/lambdaclass/cairo-vm/releases/tag/v1.0.0-rc3\">v1.0.0-rc3</a>). This version uses the new lambdaworks felt. The felt change will propagate to the blockifier, compiler and nodes.</p>\n</li>\n<li>\n<p>Errors prettifying: currently, error strings are not very informative and have a lot of redundant data with no information that comes from the back and forth between the blockifier and the VM. Execution errors are becoming more <a href=\"https://github.com/starkware-libs/blockifier/blob/8417325e6990af64e93253b1f76cb70611516cd2/crates/blockifier/src/execution/syscalls/hint_processor.rs#L69\">structured</a>, which will be the basis for better error handling in the next rpc version, resulting in nice error displays by wallets.</p>\n</li>\n</ol>\n<p>Old error template example:</p>\n<pre><code class=\"lang-auto\">\"Transaction execution has failed: Error in the called contract \\\n                 ({account_address_felt}):\nError at pc=0:797:\nGot an exception while executing a hint.\nCairo traceback (most recent call last):\nUnknown location (pc=0:{account_pc_location})\n\nError in the called contract ({address_felt}):\nError at pc=0:8010:\nGot an exception while executing a hint.\nCairo traceback (most recent call last):\nUnknown location (pc=0:{pc_location})\n\nError in the called contract ({address_felt}):\nError at pc=0:{expected_pc}:\nGot an exception while executing a hint.\nCairo traceback (most recent call last):\nUnknown location (pc=0:{pc_location})\n\nError in the called contract ({address_felt}):\nExecution failed. Failure reason: {expected_error}.\n\n</code></pre>\n<p>New error template example:</p>\n<pre><code class=\"lang-auto\">Transaction execution has failed:\n0: Error in the called contract (contract address: {account_address_felt}, selector: \\\n                 {execute_selector_felt}):\nError at pc=0:797:\nCairo traceback (most recent call last):\nUnknown location (pc=0:{account_pc_location})\n\n1: Error in the called contract (contract address: {address_felt}, selector: \\\n                 {invoke_call_chain_selector_felt}):\nError at pc=0:8010:\n</code></pre>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/starknet-v0-13-2-pre-release-notes/114223\">Read full topic</a></p>","link":"https://community.starknet.io/t/starknet-v0-13-2-pre-release-notes/114223","pubDate":"Tue, 18 Jun 2024 07:35:27 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114223"},"source":{"@url":"https://community.starknet.io/t/starknet-v0-13-2-pre-release-notes/114223.rss","#text":"Starknet v0.13.2 pre-release notes"}},{"title":"Starknet v0.13.2 and Roadmap Summer Update","dc:creator":"ilia","category":"🆙 Versions Upgrade","description":"<p>In February, we shared a tentative <a href=\"https://community.starknet.io/t/starknet-2024-roadmap-plan-of-intent/113006\">roadmap for 2024</a> – a plan of intent.</p>\n<p>Over the past months, we have collected extensive feedback from builders to guide and evolve our roadmap.</p>\n<ul>\n<li>By all accounts, the two original goals of <span class=\"d-wrap\" data-wrap=\"color\" data-color=\"green\" data-bgcolor=\"#\">fee reduction</span> and <span class=\"d-wrap\" data-wrap=\"color\" data-color=\"purple\" data-bgcolor=\"#\">performance</span> are sufficiently fulfilled since <a href=\"https://community.starknet.io/t/starknet-v0-13-1-eip4844-support-more-fee-reductions-stability-quality-of-life/112951\">v0.13.1</a>: transaction fees are extremely low, and Starknet can already sustain over 100 erc-20 transfers a second – more than enough to satisfy current demand.</li>\n<li>In light of the above, it’s time for a new Sheriff in town: <span class=\"d-wrap\" data-wrap=\"color\" data-color=\"red\" data-bgcolor=\"#\">UX &amp; devX</span>! Instead of diving into the meta of defining what exactly this means, let’s move to some examples with the beloved table, and elaborate afterward.</li>\n</ul>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Wen mainnet</th>\n<th>Must-have content</th>\n<th>Effect</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>v0.13.2</td>\n<td>August</td>\n<td><a href=\"https://community.starknet.io/t/optimistic-parallelization-revived/114121\">Parallel execution</a>, <a href=\"https://community.starknet.io/t/upcoming-feature-starknet-applicative-recursion/113868\">SNAR &amp; block-packing</a> aiming at 2 sec confirmation time and reduced block time, <code>execute</code> limit will be increased to ≥10M steps</td>\n<td><span class=\"d-wrap\" data-wrap=\"color\" data-color=\"purple\" data-bgcolor=\"#\">Performance</span>, <span class=\"d-wrap\" data-wrap=\"color\" data-color=\"red\" data-bgcolor=\"#\">UX &amp; devX</span></td>\n</tr>\n<tr>\n<td>v0.13.3</td>\n<td>October/November</td>\n<td>Cairo-native (Sierra → MLIR) &amp; L2 gas; additional feature <span class=\"d-wrap\" data-wrap=\"color\" data-color=\"gray\" data-bgcolor=\"#\">candidates</span>: nonce channels, try/catch for function call failures</td>\n<td><span class=\"d-wrap\" data-wrap=\"color\" data-color=\"purple\" data-bgcolor=\"#\">Performance</span>, <span class=\"d-wrap\" data-wrap=\"color\" data-color=\"red\" data-bgcolor=\"#\">UX &amp; devX</span></td>\n</tr>\n<tr>\n<td>v0.14.0</td>\n<td>January/February</td>\n<td><span class=\"d-wrap\" data-wrap=\"color\" data-color=\"gray\" data-bgcolor=\"#\">Candidates</span>: Volition, <a href=\"https://ethresear.ch/t/zkthreads-a-canonical-zk-sharding-framework-for-dapps/19619\">zkThreads</a>, mempool, protocol-level paymaster</td>\n<td><span class=\"d-wrap\" data-wrap=\"color\" data-color=\"yellow\" data-bgcolor=\"#\">TBD</span></td>\n</tr>\n</tbody>\n</table>\n</div><p>Now some more words.</p>\n<hr>\n<h1><a name=\"v0132-1\" class=\"anchor\" href=\"https://community.starknet.io#v0132-1\"></a>v0.13.2</h1>\n<p><em>You send a transaction. You wait for confirmation. You are sad. You don’t want to wait.</em></p>\n<p>Alrighty then! Thanks to <a href=\"https://community.starknet.io/t/upcoming-feature-starknet-applicative-recursion/113868\">applicative recursion on the SHARP front and its complementary Starknet feature – <em>block-packing</em></a> – v0.13.2 will see reduced block times without increased L1 costs. We aim to reduce block-times until the confirmation time of most transactions averages at around 2 seconds. We <em>expect</em> a block time or somewhere between 20-60 secs. This isn’t a hard commitment yet, but it’s definitely the goal: the leap is delicate from the engineering PoV and we want to test everything is stable before taking blood oaths.</p>\n<p><em>“Ah, but wait”</em>, you say, <em>“Wasn’t this a candidate feature for v0.14.0? How could this be?”</em><br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/4/8/48906b7af14e4893b99e98891861abe28f938e5d.jpeg\" data-download-href=\"/uploads/short-url/alVNlGaHoxDMYSAMbjJKzg494iV.jpeg?dl=1\" title=\"image\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/4/8/48906b7af14e4893b99e98891861abe28f938e5d_2_333x250.jpeg\" alt=\"image\" data-base62-sha1=\"alVNlGaHoxDMYSAMbjJKzg494iV\" width=\"333\" height=\"250\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/4/8/48906b7af14e4893b99e98891861abe28f938e5d_2_333x250.jpeg, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/4/8/48906b7af14e4893b99e98891861abe28f938e5d_2_499x375.jpeg 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/4/8/48906b7af14e4893b99e98891861abe28f938e5d_2_666x500.jpeg 2x\" data-dominant-color=\"201F5A\"></a></div><br>\nWell…<br>\n<img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/0/4/049974ab3dd4de2d92cbb968d3e035564fdd59c1.gif\" alt=\"Sopranos Christopher Moltisanti GIF - Sopranos Christopher Moltisanti GIFs|832.9999999999999x751.0381526104417\" data-base62-sha1=\"EGGBV1FmvRkJH3zh2FFHbrxiVz\" width=\"498\" height=\"449\" class=\"animated\"><p></p>\n<p>The effort to improve confirmation time via reduction of block time will further be complemented by <a href=\"https://community.starknet.io/t/optimistic-parallelization-revived/114121\">parallel execution</a>! Increased throughput means execution will be even faster, driving down confirmation times.</p>\n<p>Before moving on to v0.13.3, we should also mention some great work behind the scenes on key aspects of the network, including improvements to streamline work on P2P, and major optimizations to the committer – the service that computes a commitment to the state. These may not sound like chad features, but they contribute a lot to Starknet’s eternally sharpening jawline.</p>\n<hr>\n<h1><a name=\"v0133-2\" class=\"anchor\" href=\"https://community.starknet.io#v0133-2\"></a>v0.13.3</h1>\n<p><em>Currently</em>, the only must-have content is Cairo-native. To copy from the <a href=\"https://community.starknet.io/t/starknet-2024-roadmap-plan-of-intent/113006\">first 2024 roadmap post</a>:</p>\n<blockquote>\n<p>Starknet v0.13.3 will feature a joint effort with <a href=\"https://www.nethermind.io/\">Nethermind </a> to integrate the state-of-the-art <a href=\"https://github.com/lambdaclass/cairo_native\">Cairo-native </a> project by <a href=\"https://lambdaclass.com/\">LambdaClass </a> into the sequencer. This is some <s>next level @#$%</s> truly state-of-the-art technology. Here’s the story. Currently, the sequencer executes transactions using the <a href=\"https://github.com/lambdaclass/cairo-vm\">Cairo VM </a> (efficiently implemented in Rust by LambdaClass too). The VM effectively emulates another machine, which begs the question: can we circumvent any emulation to improve performance? Turns out the answer is “very very yes” if you’re blessed with a disturbing amount of brainpower. Enter Cairo-native, which lets the sequencer completely bypass the VM and execute native CPU opcodes. Dark magic, you say? Correct! Behind the scenes, Cairo-native is a Sierra→MLIR compiler; the sequencer will use it to compile declared Cairo classes to native bytecode, and run the latter during transaction execution.</p>\n</blockquote>\n<p>The only addition to make now about Cairo-native is to emphasize that faster execution will further improve confirmation times. Alongside it, we mention some more feature ideas that are on the cards for v0.13.3 but yet to be decided.</p>\n<hr>\n<h1><a name=\"v0140-3\" class=\"anchor\" href=\"https://community.starknet.io#v0140-3\"></a>v0.14.0</h1>\n<p>Everything here is TBD. It’s too early to decide now.</p>\n<h1><a name=\"summary-4\" class=\"anchor\" href=\"https://community.starknet.io#summary-4\"></a>Summary</h1>\n<p>Huge improvements to confirmation times are coming in v0.13.2, and more improvements to UX and devX are on the menu. Stay tuned and contribute! Got questions? Ask! Got ideas? Suggest! We would love feature ideas from you folks! It can be a cool use-case, a concrete feature, or a vague fantasy. SNIPs are especially welcome! <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>Cheerio!</p>\n            <p><small>10 posts - 4 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/starknet-v0-13-2-and-roadmap-summer-update/114221\">Read full topic</a></p>","link":"https://community.starknet.io/t/starknet-v0-13-2-and-roadmap-summer-update/114221","pubDate":"Mon, 17 Jun 2024 21:20:20 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114221"},"source":{"@url":"https://community.starknet.io/t/starknet-v0-13-2-and-roadmap-summer-update/114221.rss","#text":"Starknet v0.13.2 and Roadmap Summer Update"}},{"title":"SNIP 13 - Index `Transfer` and `Approval` events in ERC20s","dc:creator":"NatanSW","category":"SNIPs","description":"<p><strong>snip</strong>: 13<br>\n<strong>Title:</strong> Index <code>Transfer</code> and <code>Approval</code> events in ERC20s<br>\n<strong>Author:</strong> <a class=\"mention\" href=\"https://community.starknet.io/u/natansw\">@NatanSW</a><br>\nStatus: Draft<br>\nType: Standards Track<br>\nCreation date: May 5, 2024<br>\nGithub link: <a href=\"https://github.com/starknet-io/SNIPs/blob/main/SNIPS/snip-13.md\">https://github.com/starknet-io/SNIPs/blob/main/SNIPS/snip-13.md</a></p>\n<hr>\n<h2><a name=\"abstract-1\" class=\"anchor\" href=\"https://community.starknet.io#abstract-1\"></a>Abstract</h2>\n<p>Events in Starknet consist of two felt arrays, <code>keys</code> and <code>data</code>, the former is analogous to topics on Ethereum. Similarly to Ethereum, Starknet’s json-rpc allows you to filter over event keys via the <code>starknet_getEvents</code> method.</p>\n<p>In this SNIP we suggest updating StarkGate’s ERC20s (including ETH, STRK, USDC <a href=\"https://github.com/starknet-io/starknet-addresses/blob/master/bridged_tokens/mainnet.json\">and others</a>) to index more fields in the <code>Transfer</code> and <code>Approval</code> events in order to allow filtration over the sender or receiver.</p>\n<h2><a name=\"motivation-2\" class=\"anchor\" href=\"https://community.starknet.io#motivation-2\"></a>Motivation</h2>\n<p>Dapps, for example exchanges that operate on Starknet, need to track transfers from &amp; to specific addresses. At the moment, Starknet’s json-rpc only allows receiving all <code>Transfer</code> or <code>Approval</code> events from a given ERC20 in a particular block range. This SNIP would enable filtering those events, allowing filteration by <code>from</code> or <code>to</code> in <code>Transfer</code> events and by <code>owner</code> or <code>spender</code> in <code>Approval</code> events.</p>\n<p>This is already the case on Ethereum and other EVM chains. Due to limitations in early iterations of Cairo, events had only one key corresponding to the event name. This lead to only being able to filter over all transfer events, which is far from ideal.</p>\n<h2><a name=\"backward-compatability-3\" class=\"anchor\" href=\"https://community.starknet.io#backward-compatability-3\"></a>Backward Compatability</h2>\n<p><strong>This change is NOT backward compatible</strong>. All DAPPs listenting to ERC20 transfer and approval events will have to adjust their events decoding, in order to look for fields in the <code>keys</code> array instead of in the <code>data</code> array.</p>\n<h2><a name=\"specification-4\" class=\"anchor\" href=\"https://community.starknet.io#specification-4\"></a>Specification</h2>\n<p>Starknet’s json-rpc <a href=\"https://github.com/starkware-libs/starknet-specs/blob/76bdde23c7dae370a3340e40f7ca2ef2520e75b9/api/starknet_api_openrpc.json#L798\"><code>starknet_getEvents</code> method</a>, takes an <code>EventFilter</code> object, which contains a nested list of keys to be matched against. For example, if the user sent an event filter containing <span class=\"math\">\\big[[k_1, k_2], [\\;], [k_3]\\big]</span>, then the node should return events whose first key is <span class=\"math\">k_1</span> or <span class=\"math\">k_2</span>, and the third key is <span class=\"math\">k_3</span>, and the second key is unconstrained and can take any value. This functionality is supported by variuous Starknet SDKs, for example, see the following <a href=\"https://www.starknetjs.com/docs/guides/events#without-transaction-hash\">starknet.js tutorial</a> to see how to filter events.</p>\n<p>Currently, these are the <code>Transfer</code> and <code>Approval</code> events in all StarkGate’s ERC20s:</p>\n<pre data-code-wrap=\"rust\"><code class=\"lang-rust\">    /// Emitted when tokens are moved from address `from` to address `to`.\n    #[derive(Copy, Drop, PartialEq, starknet::Event)]\n    struct Transfer {\n        // #[key] - Not indexed, to maintain backward compatibility.\n        from: ContractAddress,\n        // #[key] - Not indexed, to maintain backward compatibility.\n        to: ContractAddress,\n        value: u256\n    }\n\n    /// Emitted when the allowance of a `spender` for an `owner` is set by a call\n    /// to [approve](approve). `value` is the new allowance.\n    #[derive(Copy, Drop, PartialEq, starknet::Event)]\n    struct Approval {\n        // #[key] - Not indexed, to maintain backward compatibility.\n        owner: ContractAddress,\n        // #[key] - Not indexed, to maintain backward compatibility.\n        spender: ContractAddress,\n        value: u256\n    }\n</code></pre>\n<p>This SNIP basically suggests to uncomment the above <code>#[key]</code> annotations:</p>\n<pre data-code-wrap=\"rust\"><code class=\"lang-rust\">    /// Emitted when tokens are moved from address `from` to address `to`.\n    #[derive(Drop, PartialEq, starknet::Event)]\n    struct Transfer {\n        #[key]\n        from: ContractAddress,\n        #[key]\n        to: ContractAddress,\n        value: u256\n    }\n\n    /// Emitted when the allowance of a `spender` for an `owner` is set by a call\n    /// to `approve`. `value` is the new allowance.\n    #[derive(Drop, PartialEq, starknet::Event)]\n    struct Approval {\n        #[key]\n        owner: ContractAddress,\n        #[key]\n        spender: ContractAddress,\n        value: u256\n    }\n</code></pre>\n<p>That is, a transfer from 0x1 to 0x2 of 100 tokens, now emits:</p>\n<p><code>keys</code>: [selector(“Transfer”)]</p>\n<p><code>data</code>: [0x1, 0x2, 100, 0]</p>\n<p>The first two felts in the data array are the values of <code>from</code> and <code>to</code> correspondingly, and the last two felts are the low and high 128bits of the u256 of the amount.</p>\n<p>If this SNIP is accepted, the emitted event will change to:</p>\n<p><code>keys</code>: [selector(“Transfer”), 0x1, 0x2]</p>\n<p><code>data</code>: [100, 0]</p>\n<p>Where <code>selector(x)</code> is the <a href=\"https://docs.starknet.io/documentation/architecture_and_concepts/Cryptography/hash-functions/#starknet_keccak\">sn_keccak</a> of <code>x</code>    .</p>\n<h2><a name=\"security-considerations-5\" class=\"anchor\" href=\"https://community.starknet.io#security-considerations-5\"></a>Security Considerations</h2>\n<p>Dapps who did not change their code to parse events differently may break after the ERC20 contracts are upgraded.</p>\n<p>We considered whether or not the change suggested in this SNIP can be leveraged to cause more damage. The scenario we analyzed is the following: can an exchange that did not change its code be led to thinking that a transfer has been made to its account, thus crediting an account on the exchange, while in fact no such transaction took place.</p>\n<p>We claim that this is not possible. Currently, DAPPs take the <code>from</code> and <code>to</code> values from the first and second members of the <code>data</code> array. After the change, the first and second members of the <code>data</code> array would be <code>amount_low</code> and <code>amount_high</code> correspondingly. Since both <code>amount_low</code> and <code>amount_high</code> are enforced to be 128bit numbers, and thus contain 124 leading zeros, these can not collide with an account address on Starknet, which is <a href=\"https://docs.starknet.io/documentation/architecture_and_concepts/Smart_Contracts/contract-address/\">necessarily</a> the result of a hash computation.</p>\n<h2><a name=\"copyright-6\" class=\"anchor\" href=\"https://community.starknet.io#copyright-6\"></a>Copyright</h2>\n<p>Copyright and related rights waived via <a>MIT</a>.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/snip-13-index-transfer-and-approval-events-in-erc20s/114212\">Read full topic</a></p>","link":"https://community.starknet.io/t/snip-13-index-transfer-and-approval-events-in-erc20s/114212","pubDate":"Thu, 13 Jun 2024 13:27:13 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114212"},"source":{"@url":"https://community.starknet.io/t/snip-13-index-transfer-and-approval-events-in-erc20s/114212.rss","#text":"SNIP 13 - Index `Transfer` and `Approval` events in ERC20s"}},{"title":"ZK Governance for Starknet","dc:creator":"Mirror-Tang","category":"Starknet Technical Development","description":"<h2><a name=\"overview-1\" class=\"anchor\" href=\"https://community.starknet.io#overview-1\"></a>Overview</h2>\n<p>The Starknet ecosystem hosts several prominent projects, of which many are governed and managed by DAOs, such as Realms and Ekubo. Despite the decentralized nature of these organizations, there is a notable reluctance among community members to participate in governance. The primary issue stems from the transparency of voting actions on the blockchain, which can expose sensitive information and influence decision-making processes.</p>\n<p><em>Votes are conducted publicly, leaving voting systems vulnerable to collusion.</em></p>\n<p>Starknet Governance Hub, designed to facilitate transparent and efficient governance. However, despite these efforts, participation rates remain lower than desired. Our team, with extensive experience in building governance platforms like Frontinus House for Realm, has identified privacy concerns as a significant barrier to active engagement.</p>\n<p>ZK Governance provides a solution to this challenge by using zero-knowledge proofs to ensure that voting is private, secure, and verifiable without revealing voters’ identities or choices. By integrating ZK Governance into Starknet’s existing governance platform, we can enhance privacy and security, thereby increasing participation rates and strengthening the overall governance of DAOs within the Starknet ecosystem.</p>\n<h2><a name=\"problems-with-current-solutions-2\" class=\"anchor\" href=\"https://community.starknet.io#problems-with-current-solutions-2\"></a>Problems with Current Solutions</h2>\n<p><em>DAOs in the Starknet ecosystem currently face several challenges that hinder active participation in governance:</em></p>\n<ul>\n<li>Lack of Privacy: All voting actions are publicly visible on the blockchain, deterring individuals from participating due to concerns about exposing their decisions and holdings.</li>\n<li>Fear of Repercussions: Members may hesitate to vote on controversial issues for fear of social or financial backlash.</li>\n<li>Transparency vs. Confidentiality: The need for transparent governance conflicts with the desire to keep individual voting choices private.</li>\n<li>Influence and Bias: Public voting records can lead to undue influence or bias, where prominent members’ votes sway community opinions.</li>\n<li>Low Participation Rates: The visibility of votes can discourage engagement, leading to low participation in governance processes.</li>\n<li>Data Sensitivity: Voters may not want their voting history and associated assets exposed, as this can reveal personal strategies and holdings.</li>\n</ul>\n<p><strong>ZK Governance Solutions</strong></p>\n<p>ZK Governance offers a comprehensive solution to these challenges by balancing the need for transparency in governance with the privacy of individual voters. Key features of ZK Governance for Starknet DAOs include:</p>\n<p>A large-scale anonymous electronic voting scheme based on zk-SNARKs (Zero-Knowledge Succinct Non-Interactive Argument of Knowledge) offers unique value and significance in ensuring the <strong>anonymity, security, and reliability</strong> of voting. zk-SNARKs is a cryptographic technology that enables one party (the prover) to prove to another party (the verifier) that a statement is true, without revealing any information other than the truth of the statement itself. Applying zk-SNARKs to electronic voting brings several key advantages:</p>\n<ol>\n<li><strong>Protection of Voter Identity Privacy</strong>: The connection between a voter’s choice and their personal identity is not disclosed; it’s impossible to identify from public information whether a specific voter has participated. This also enhances the fairness of the voting system.</li>\n<li><strong>Prevention of Vote Buying and Selling</strong>: Voters participate under pseudonyms and are unable to prove their own voting results. This means voters cannot sell their votes to third parties who may wish to purchase them.</li>\n<li><strong>Verifiable Voting Results</strong>: Everyone can verify the voting results based on the public counting proofs.</li>\n</ol>\n<h1><a name=\"starknet-analysis-3\" class=\"anchor\" href=\"https://community.starknet.io#starknet-analysis-3\"></a>Starknet Analysis</h1>\n<h2><a name=\"participants-composition-4\" class=\"anchor\" href=\"https://community.starknet.io#participants-composition-4\"></a>Participants Composition</h2>\n<p>The electronic voting scheme involves the following five participants: Proposers, STRK Holders <span class=\"math\">IDs=\\{id_1,id_2, ...id_m\\}</span>, Cryptographic Coordinator, Pseudonym Registrar, and Counters <span class=\"math\">Ts=\\{T_1,T_2, ...T_m\\} </span> . Among them, proposers and STRK holders are inherent to Starknet. Proposal-related information and voting results are still published on snapshot.</p>\n<ul>\n<li>Proposers: Also known as project operators, they can initiate proposals and are also STRK holders themselves.</li>\n<li>STRK Holders: Also known as voters, they can lock STRK tokens to vote. They vote under pseudonyms to ensure anonymity. As shown in the figure below, <strong>the voting results published on snapshot will not display the on-chain addresses of STRK holders, but their pseudonyms instead.</strong></li>\n<li>Snapshot: Publishes proposal information, voting information, cryptographic public parameters, voting results, and proofs of correct counting. The voting results include not only those cast by STRK holders but also null ballots cast by snapshot.</li>\n<li>Cryptographic Coordinator: Responsible for generating cryptographic parameters and key pairs, and <strong>publishing the public parameters on snapshot.</strong></li>\n<li>Pseudonym Registrar: Registers pseudonyms for STRK holders after they lock their STRK tokens and signs these pseudonyms.</li>\n<li>Counters: Responsible for calculating and verifying the voting results, and <strong>publishing the results and proofs of correct counting on snapshot</strong>. Counters use partial decryption keys from a k-out-of-n encryption scheme.</li>\n</ul>\n<h2><a name=\"function-definitions-5\" class=\"anchor\" href=\"https://community.starknet.io#function-definitions-5\"></a>Function Definitions</h2>\n<p>The voting scheme is defined by eight functions, namely: <span class=\"math\">VS=(Setup,PseudonymRegister, Register, Vote, ValidVote, Append, Tally, VerifyTally ).</span></p>\n<ol>\n<li>\n<p>Setup</p>\n<p><span class=\"math\">\\text{Setup}(\\lambda, R) \\rightarrow (PP, sk_{T}, sk_{\\sigma}): \\text{On input of the security parameter } \\lambda \\text{ and the relation } R \\\\ \\text{represented as an arithmetic circuit, generate the prover and verifier key pairs }\\\\ (pk, vk) \\leftarrow \\text{KeyGen}(\\lambda, R), \\text{ voting key pair } (pk_{T}, sk_{T}) \\leftarrow \\text{KeyGenE}(\\lambda), \\text{ registrar key pair} \\\\\n(pk_{R}, sk_{R}) \\leftarrow \\text{KeyGenS}(\\lambda), \\text{ commitment parameters from commitment setup} \\\\\nCR \\times T \\leftarrow \\text{Setup}C(\\lambda), \\text{ and public parameters } PP = (G, q, g, H, pk_T, pk_R, (pk, vk)).\n</span></p>\n</li>\n<li>\n<p>PseudonymRegister</p>\n<p><span class=\"math\">\\text{PseudonymRegister}(\\text{id}) \\rightarrow \\left( cr_{\\text{id}}, c_{\\text{id}}, t_{\\text{id}} \\right): \\text{ On implicit input } PP \\text{ and STRK holder}\\\\ \\text{identity id}, \n\\text{randomly select a pseudonym } cr_{\\text{id}} \\leftarrow CR, \\text{ compute } \\left( t_{\\text{id}}, c_{\\text{id}} \\right) \\leftarrow \\\\ \\text{Commit}(PP, cr_{\\text{id}}), \\text{ and return } \\left( cr_{\\text{id}}, c_{\\text{id}}, t_{\\text{id}} \\right), \\text{ where } t_{\\text{id}} \\text{ is randomly selected from } T.</span></p>\n</li>\n<li>\n<p>Register</p>\n<p><span class=\"math\">\\text{Register}(id, c_{id},{L}) \\rightarrow (L, MR_{L}, S_{R}): \\text{On input of the STRK holder identity and}\\\\ \\text{commitment} (id, c_{id}), \\text{ and list } L, \\text{ add } (id, c_{id}) \\text{ to list } L, \\text{ compute } MR_{L}, \\text{ sign } (L, MR_{L})\\\\  \\text{ with the registrar} \\text{private key} sk_{R} \\text{ to produce the signature } S_{R}, \\text{ and then return } \\\\(L, MR_{L}, S_{R}).</span></p>\n</li>\n<li>\n<p>Vote</p>\n<p><span class=\"math\">\\text{Vote}(id, sk_{id}, pk_{r}, v) \\rightarrow \\beta: \\text{On input of STRK holder identity } id, \\text{ voting public key } pk_{r}, \\\\ \\text{ and STRK holder private key } sk_{id} = (t_{id}, cr_{id}), \\text{ it generates a ballot } \\beta = (e_v, cr_{id},{\\pi_{id}}),\\\\  \\text{ where } e_v = \\text{enc}_{pk_{v}}(v;r). \\text{ Additionally, compute a disjoint proof } \\text{Prove}(pk, x, \\omega) \\rightarrow \\pi, \\\\ \\text{ where } \\omega = (r, c_{id},v, t_{id}, )x = (e_v, cr_{id}, MR_{L}), \\text{ and simulate a null ballot proof.}\n</span></p>\n</li>\n<li>\n<p>ValidVote</p>\n<p><span class=\"math\">\\text{ValidVote}(\\beta) \\rightarrow 0/1: \\text{On input of a ballot } \\beta = \\left( e_v, cr_{id},{\\pi_{id}} \\right), \\text{ check if it is valid, i.e.,}\\\\ \\text{whether this proof is correct and well-formed, by completing the verification through}\\\\ \\text{ executing } \\text{Verify}\\left( vk, \\left( e_v, cr_{id} \\right), \\pi_{id} \\right) \\rightarrow 0/1.\n</span></p>\n</li>\n<li>\n<p>Append</p>\n<p><span class=\"math\">\\text{Append}(\\text{snapshot}, \\beta) \\rightarrow \\text{snapshot}: \\text{On input of a ballot } \\beta, \\text{according to } D_t, \\text{ append }\\\\ \\beta \\text{ to snapshot. It generates and appends one or more null ballots } \\left(e_0, c_{id}, \\pi_{id}\\right) \\text{ according}\\\\ \\text{to the probability distribution } D_r \\text{ and } D_t. \\text{ It computes } e_0 = \\text{enc}_{pk_{r}}(0; r) \\text{ and disjoint} \\\\ \\text{proof } \\pi_{id}.</span></p>\n<p><span class=\"math\">\\text{Prove}(pk , x, \\omega) \\rightarrow \\pi_{id}, \\text{where } \\omega = (r, 0), x = \\left(e_0, cr_{id}, MR_{L}\\right), \\text{ and simulates the other }\\\\ \\text{ side} \\text{ of STRK holder proof.}</span></p>\n</li>\n<li>\n<p>Tally</p>\n<p><span class=\"math\">\\text{Tally}(\\text{snapshot}, sk_T) \\rightarrow (s, \\Pi): \\text{ On input of the public snapshot, calculate the }\\\\ text{voting results, return } (s, \\Pi), \\text{ where } s \\text{ is the voting result, } \\Pi \\text{ is the proof of correct}\\\\ \\text{ counting, with the following steps:}\n</span></p>\n</li>\n</ol>\n<ul>\n<li>Run <span class=\"math\">ValidVote(\\beta)</span> and return 0 in case of failure.</li>\n<li>For each <span class=\"math\">cr_id</span> appearing in the ballots, calculate <a href=\"https://community.starknet.io/uploads/short-url/7WPmW8mN6qWVKrLtnHX1OjtcMXn.png\">image|256x108, 50%</a>,where <a href=\"https://community.starknet.io/uploads/short-url/es0ROWYneVLsdgd511193ZiD97z.png\">image|98x72, 50%</a> is the set of <span class=\"math\">(e_v, cr_{id},\\pi_{id})</span> identified by <span class=\"math\">cr_{id}</span>.</li>\n<li>Remove <span class=\"math\">(cri,\\pi_i)</span> from each <span class=\"math\">B_{cr_i}</span>, mix the ballots {<span class=\"math\">{B_{cr_1}, B_{cr_2},..., B_{cr_k}}</span>}, where k is the number of pseudonyms <span class=\"math\">cr_i</span>, and return the mixed ballots <a href=\"https://community.starknet.io/uploads/short-url/pf1bSm3fpy3RR1j5p1AZaIkywXq.png\">image|190x74, 50%</a> and proof of valid mixing.</li>\n<li>For each <span class=\"math\">B_i^{'}</span> and voting option <span class=\"math\"> v \\in V</span>, apply the privacy equivalence test (PET) and provide corresponding proof.</li>\n<li>Calculate the result s for each voting v based on the PET result and publish the proof.</li>\n</ul>\n<ol start=\"8\">\n<li>\n<p>VerifyTally</p>\n<p><span class=\"math\">\\text{VerifyTally}(\\text{snapshot}, s, \\Pi) \\rightarrow 0/1: \\text{ On input of } (s, \\Pi), \\text{ if all proofs are valid, return } 1;\\\\  \\text{ otherwise, return } 0.</span></p>\n</li>\n</ol>\n<h2><a name=\"implementation-phase-6\" class=\"anchor\" href=\"https://community.starknet.io#implementation-phase-6\"></a>Implementation Phase</h2>\n<p>The flowchart of this electronic voting scheme illustrates the process of Starknet’s private governance as follows.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/5/9/59a385268794461560b7c6a7d2a0818f91ff7c70.png\" data-download-href=\"/uploads/short-url/cMYPM9YWjuHYO0uO6YvwZ4qLObm.png?dl=1\" title=\"54ee0524f5613bf4e96a923d3fcc3f8e0533f29a\" rel=\"noopener nofollow ugc\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/5/9/59a385268794461560b7c6a7d2a0818f91ff7c70_2_618x500.png\" alt=\"54ee0524f5613bf4e96a923d3fcc3f8e0533f29a\" data-base62-sha1=\"cMYPM9YWjuHYO0uO6YvwZ4qLObm\" width=\"618\" height=\"500\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/5/9/59a385268794461560b7c6a7d2a0818f91ff7c70_2_618x500.png, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/5/9/59a385268794461560b7c6a7d2a0818f91ff7c70_2_927x750.png 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/5/9/59a385268794461560b7c6a7d2a0818f91ff7c70_2_1236x1000.png 2x\" data-dominant-color=\"A3BCD1\"></a></div><p></p>\n<p>Based on this flowchart, we divide the Starknet private governance process into five stages:</p>\n<ol>\n<li>Setup Phase</li>\n</ol>\n<p>Given security parameters and relation R, the Cryptographic Coordinator runs Setup,R to:</p>\n<ul>\n<li>Generate cryptographic parameters <span class=\"math\">(G,q, g)</span>, counting party threshold tuple <span class=\"math\">(k, n)</span>, voting key pair <span class=\"math\">(pk_T,sk_T)</span>, registrar key pair <span class=\"math\">(pk_R,sk_R)</span>, commitment function and its parameters <span class=\"math\">H:CR * T\\rightarrow C</span>, and the zero-knowledge proof key pair pk,vk for relation R.</li>\n<li>Publish public parameters <span class=\"math\">PP=(G,q, g, H, pk_T, pk_R, (pk, vk ))</span>.</li>\n</ul>\n<ol start=\"2\">\n<li>Registration Phase</li>\n</ol>\n<p>STRK holders (id) run Register(id) to:</p>\n<ul>\n<li>Choose a voting pseudonym <span class=\"math\">cr_{id} \\in CR</span>.</li>\n<li>Compute <span class=\"math\">c_{id} = H(cr_{id}, t_{id}) \\in \\{0,1\\}^{（0，\\lambda）}</span> using <span class=\"math\">t_{id} \\in T</span> and store <span class=\"math\">(cr_{id}, t_{id})</span> locally.</li>\n<li>The pseudonym registrar adds <span class=\"math\">(id, c_{id})</span> to the pseudonym list <span class=\"math\">L</span></li>\n<li>Compute the merkle tree root <span class=\"math\">MR_L</span> based on the commitment order in list <span class=\"math\">L</span>.</li>\n<li>Finally, sign <span class=\"math\">L</span> and <span class=\"math\">MR_L</span> and publish them on snapshot.</li>\n<li>STRK holders verify <span class=\"math\">c_{id} \\in L</span> and merkle tree root <span class=\"math\">MR_L</span>.</li>\n</ul>\n<ol start=\"3\">\n<li>Voting Phase</li>\n</ol>\n<p>To cast a vote v, STRK holders run <span class=\"math\">Vote(id,sk_{id},pk_T,v)</span>, where <span class=\"math\">sk_{id}=(t_{id}, cr_{id})</span>, including:</p>\n<ul>\n<li>\n<p>Compute <span class=\"math\">e_v = \\text{enc}_{pk_r}(v; r)</span>, where <span class=\"math\">r \\in \\mathbb{Z}_q</span> is a random value for encryption. In the case of revoking a previous vote <span class=\"math\">v_{\\text{pre}}</span> and voting for <span class=\"math\">v_{\\text{new}}</span>, STRK holders set <span class=\"math\">v = v_{\\text{new}} - v_{\\text{pre}}</span>.</p>\n</li>\n<li>\n<p>Calculate zero-knowledge proof <span class=\"math\">\\pi_{id}</span> using proving key <span class=\"math\">pk</span>:<br>\n<a href=\"https://community.starknet.io/uploads/short-url/6pJE5EfW02BhcDbj9o8raaJfqks.png\">image|690x48, 75%</a></p>\n</li>\n<li>\n<p>Submit <span class=\"math\">\\beta = (e_v, cr_{id}, \\pi_{id})</span> to snapshot via an anonymous channel.</p>\n</li>\n<li>\n<p>Snapshot runs <span class=\"math\">\\text{ValidVote}(\\beta)</span>, checks the validity of the proof on the ballot, and verifies if the ballot already exists on snapshot.</p>\n</li>\n<li>\n<p>Snapshot runs <span class=\"math\">\\text{Append}(\\text{snapshot}, \\beta)</span>, appending the ballot <span class=\"math\">\\beta</span> and null ballots to snapshot.</p>\n</li>\n<li>\n<p>STRK holders verify if <span class=\"math\">\\beta</span> is appended to snapshot.</p>\n</li>\n<li>\n<p>Snapshot generates null ballots as follows: Calculate <span class=\"math\">e_0 = \\text{enc}_{pk_r}(0; r)</span>, choose a <span class=\"math\">cr_{id}</span> from <span class=\"math\">\\beta</span> on the snapshot, compute <span class=\"math\">\\pi_{id}</span>:<br>\n<a href=\"https://community.starknet.io/uploads/short-url/pLVNwSFEhG5o9G2XXaRKjkvlBs3.png\">image|690x44, 75%</a></p>\n</li>\n</ul>\n<ol start=\"4\">\n<li>Counting Phase</li>\n</ol>\n<p>Counters run <span class=\"math\">Tally(snapshot,sk_T)</span>, including:</p>\n<ul>\n<li>Verify ballots on snapshot and select those with valid proofs.</li>\n<li>Apply the homomorphic properties of the encryption scheme to calculate the final ballot for each <span class=\"math\">cr_{id}</span> on the snapshot.</li>\n<li>Shuffle, mix, and publish the final ballots without crid, providing proof of correctness.</li>\n<li>Apply PET to the final ballots and select encrypted votes from the voting.</li>\n<li>Decrypt ballots and publish results and decryption proofs on snapshot.</li>\n</ul>\n<ol start=\"5\">\n<li>Verification Phase</li>\n</ol>\n<p>Anyone can verify the correctness of the counting by running <span class=\"math\">VerifyTally(snapshot,s,\\Pi)</span>, which verifies the results and all proofs published during the counting process. This implementation achieves large-scale electronic voting while ensuring anonymity, security, and reliability.</p>\n<h1><a name=\"future-work-7\" class=\"anchor\" href=\"https://community.starknet.io#future-work-7\"></a>Future Work</h1>\n<p><strong>Performance and Scalability:</strong> As the number of voters increases, the system’s performance and scalability will face challenges. Future research could focus on the study of fully recursive zk-SNARKs to support larger-scale elections.</p>\n<p><strong>User Friendliness:</strong> An important task in promoting ZK technology is to address the current complexity of the system for ordinary users. Simplifying user interfaces and operational processes, and lowering the barrier for user adoption, will contribute to the widespread acceptance and adoption of the system.</p>\n<p><strong>Compliance and Legal Challenges:</strong> Decentralization and compliance have always been antonyms; typically, only the government can prove your identity. However, this leads to the possibility of data being tampered with at the source (but if this identity is recognized by the government, then even the fake becomes real). ZK cannot solve the problem of a trusted source, but we might need to consider: what kind of world it would be if I could prove I am who I am.</p>\n            <p><small>2 posts - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/zk-governance-for-starknet/114202\">Read full topic</a></p>","link":"https://community.starknet.io/t/zk-governance-for-starknet/114202","pubDate":"Tue, 11 Jun 2024 01:49:51 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114202"},"source":{"@url":"https://community.starknet.io/t/zk-governance-for-starknet/114202.rss","#text":"ZK Governance for Starknet"}},{"title":"StarkHack Hackathon Starts June 13th 👷","dc:creator":"ethjake","category":"🤷‍♀️ All-Purpose Hangout","description":"<p>Hello everyone <img src=\"https://emoji.discourse-cdn.com/twitter/wave/3.png?v=12\" title=\":wave:t3:\" class=\"emoji\" alt=\":wave:t3:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>Jacob here from the ETHGlobal team to share that we’re thrilled to be organizing <a href=\"https://ethglobal.com/events/starkhack\" rel=\"noopener nofollow ugc\">StarkHack</a> in collaboration with StarkWare, the Starknet Foundation, and many other Starknet ecosystem contributors.</p>\n<p>StarkHack is our first hackathon built with the Starknet ecosystem at its heart. We’re excited to see over 500 hackers come together to push what’s possible with Starknet, Cairo, and STARKs.</p>\n<p>If you’re a builder in the Starknet ecosystem, a couple key reasons to join:</p>\n<ul>\n<li><img src=\"https://emoji.discourse-cdn.com/twitter/star.png?v=12\" title=\":star:\" class=\"emoji\" alt=\":star:\" loading=\"lazy\" width=\"20\" height=\"20\"> Keynotes, Panels, and a Full Summit: We’ll be kicking off the event with talks from Eli Ben-Sasson, Ariel Elperin, James Strudwick and other ecosystem contributors</li>\n<li><img src=\"https://emoji.discourse-cdn.com/twitter/rocket.png?v=12\" title=\":rocket:\" class=\"emoji\" alt=\":rocket:\" loading=\"lazy\" width=\"20\" height=\"20\"> Hands-on Workshops: Learn from the experts with workshops designed to teach new skills.</li>\n<li><img src=\"https://emoji.discourse-cdn.com/twitter/moneybag.png?v=12\" title=\":moneybag:\" class=\"emoji\" alt=\":moneybag:\" loading=\"lazy\" width=\"20\" height=\"20\"> $100,000+ USD in Prizes: Compete for prizes from different industry leading protocols/</li>\n<li><img src=\"https://emoji.discourse-cdn.com/twitter/bulb.png?v=12\" title=\":bulb:\" class=\"emoji\" alt=\":bulb:\" loading=\"lazy\" width=\"20\" height=\"20\"> Exciting Challenges: Access to a curated list of real-world problems &amp; project ideas and over 50 mentors to bring your ideas to life.</li>\n</ul>\n<p><strong>Why post on the forum?</strong><br>\nTwo reasons.</p>\n<p><strong>Firstly</strong>, I’d love to know what key Starknet contributors should definitely take part (think projects that have technology that hackers can use or critical libraries to speed up development) and</p>\n<p><strong>Secondly</strong>, I’d love to curate a wishlist from the community of ideas for projects we can share with the builders!</p>\n<p>In the meantime, if you’re interested in joining, applications are open now: <a href=\"https://ethglobal.com/events/starkhack\" rel=\"noopener nofollow ugc\">https://ethglobal.com/events/starkhack</a></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/starkhack-hackathon-starts-june-13th/114139\">Read full topic</a></p>","link":"https://community.starknet.io/t/starkhack-hackathon-starts-june-13th/114139","pubDate":"Thu, 30 May 2024 05:49:46 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114139"},"source":{"@url":"https://community.starknet.io/t/starkhack-hackathon-starts-june-13th/114139.rss","#text":"StarkHack Hackathon Starts June 13th 👷"}},{"title":"Optimistic parallelization revived","dc:creator":"FeedTheFed","category":"📜 Development Proposals","description":"<h1><a name=\"optimistic-parallelization-revived-1\" class=\"anchor\" href=\"https://community.starknet.io#optimistic-parallelization-revived-1\"></a>Optimistic parallelization revived</h1>\n<h2><a name=\"tldr-2\" class=\"anchor\" href=\"https://community.starknet.io#tldr-2\"></a>TL;DR</h2>\n<ul>\n<li>Optimistic parallelization is now being implemented on the Starknet sequencer in Rust</li>\n<li>Moar tps in Starknet 0.13.2</li>\n</ul>\n<h2><a name=\"introduction-3\" class=\"anchor\" href=\"https://community.starknet.io#introduction-3\"></a>Introduction</h2>\n<p><a href=\"https://starkware.co/resource/starknet-performance-roadmap/\">Back</a> in Starknet 0.10.2, we introduced optimistic parallelization to the sequencer as part of a series of efforts to improve the system’s throughput.</p>\n<p>In parallel, we worked to migrate the larger parts of the codebase to Rust. The result of this effort was the <a href=\"https://github.com/starkware-libs/blockifier\">blockifier</a>, Starknet’s new execution engine, which in turn relies on the Rust implementation of the <a href=\"https://github.com/lambdaclass/cairo-vm\">cairo-vm</a> by Lambdaclass.</p>\n<p>Given that the transition from Python to Rust outweighed most of the potentiatal performance improvements, the first iterations of the blockifier did not contain optimistic parallelization. After a few Starknet versions that focused on stability and fee reduction, we return to parallelization in order to reach the full potential of the Starknet sequencer.</p>\n<h2><a name=\"what-is-optimistic-parallelization-4\" class=\"anchor\" href=\"https://community.starknet.io#what-is-optimistic-parallelization-4\"></a>What is optimistic parallelization?</h2>\n<p>Naively, executing a block of transactions in parallel is impossible as different transactions may be dependent. This is illustrated in the following example. Consider a block with three transactions from the same user:</p>\n<ul>\n<li>Transaction A: swap USDC for ETH</li>\n<li>Transaction B: pay ETH for an NFT</li>\n<li>Transaction C: swap USDT for BTC</li>\n</ul>\n<p>Clearly, Tx A must happen before Tx B, but Tx C is entirely independent of both and can be executed in parallel. If each transaction requires 1 second to execute, then the block production time can be reduced from 3 seconds to 2 seconds by introducing parallelization.</p>\n<p>The crux of the problem is that we do not know the transaction dependencies in advance. In practice, only when we execute transaction B from our example do we see that it relies on changes made by transaction A. More formally, the dependency follows from the fact that transaction B reads from storage cells that transaction A has written to. We can think of the transactions as forming a dependency graph, where there is an edge from transaction A to transaction B iff A writes to a storage cell that is read by B, and thus has to be executed before B. The following figure shows an example of such a dependency graph:</p>\n<p><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/d/7/d7f32ac0707740d1b9bf477a66d3adee9cf03e1d.png\" alt=\"image\" data-base62-sha1=\"uOnDCsRQh5UPY3gnq32e8LlS3GB\" width=\"665\" height=\"330\"></p>\n<p>In the above example, each column can be executed in parallel, and this is the optimal arrangement (while naively, we would have executed transactions 1–9 sequentially).</p>\n<p>To overcome the fact that the dependency graph is not known in advance, we introduce optimistic parallelization, in the spirit of <a href=\"https://malkhi.com/posts/2022/04/block-stm/\">BLOCK-STM</a> developed by Aptos Labs, to the Starknet sequencer. Under this paradigm, we optimistically attempt to run transactions in parallel and re-execute upon finding a collision. For example, we may execute transactions 1–4 from figure 1 in parallel, only to find out afterward that Tx4 depends on Tx1. Hence, its execution was useless (we ran it relative to the same state we ran Tx1 against, while we should have run it against the state resulting from applying Tx1). In that case, we will re-execute Tx4.</p>\n<h2><a name=\"parallelization-in-the-blockifier-5\" class=\"anchor\" href=\"https://community.starknet.io#parallelization-in-the-blockifier-5\"></a>Parallelization in the blockifier</h2>\n<p>The entry point to the new parallelization infrastructure in the blockifier can be found in <a href=\"https://github.com/starkware-libs/blockifier/blob/df2799eafda4f575e71d63c839d14f5a38ca911d/crates/blockifier/src/concurrency.rs#L1\">concurrency.rs</a>. The Rust implementation follows the original BLOCK-STM paper more closely compared to the previous version of our optimistic parallelization. The scheduler tracks the tasks that remain to be done, these can be either validation tasks or execution tasks. Worker threads then query the scheduler for the next task, and communicate with a versioned state to obtain the latest known storage values. This is illustrated in the following diagram:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/8/5/850099e3e8117db4bb9507e2b399e21e87007798.jpeg\" data-download-href=\"/uploads/short-url/iYAN4uWEkZfIhfQknZ3UBA1S3ig.jpeg?dl=1\" title=\"\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/8/5/850099e3e8117db4bb9507e2b399e21e87007798_2_624x316.jpeg\" alt=\"\" data-base62-sha1=\"iYAN4uWEkZfIhfQknZ3UBA1S3ig\" width=\"624\" height=\"316\" role=\"presentation\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/8/5/850099e3e8117db4bb9507e2b399e21e87007798_2_624x316.jpeg, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/8/5/850099e3e8117db4bb9507e2b399e21e87007798_2_936x474.jpeg 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/8/5/850099e3e8117db4bb9507e2b399e21e87007798_2_1248x632.jpeg 2x\" data-dominant-color=\"F4F6F7\"></a></div><p></p>\n<p>Diagram: worker threads request the next task, and work on a versioned state (version i contains the writes of tx i). The execution itself is handled by the same code that handled sequential execution.</p>\n<p>The blockifier’s implementation contains an additional commit phase that isn’t part of the original BLOCK-STM paper. The motivation for this phase is to delay fee transfers to the sequencer (which, if unhandled separately, leads any two transactions to collide due to reading &amp; writing the sequencer’s balance). If all transactions before transaction <code>i</code> are committed, then the fee transfer is applied alongside an additional check to see whether or not the transaction can fit into a block. If both tests pass, the i’th transaction is committed.</p>\n<h2><a name=\"whats-next-6\" class=\"anchor\" href=\"https://community.starknet.io#whats-next-6\"></a>What’s next</h2>\n<p>Several potential improvements to the blockifier’s implementation of BLOCK-STM will be added down the road. At the moment, accesses to VersionedState are mutually exclusive; this can be relaxed to locking only over the particular addresses that we want to read/write from.</p>\n<p>Another direction to explore is adding language features that will allow contract developers to write more “parallelizable” code. For example, when performing a commutative operation on storage values today, one has to read the value, apply the operation, and write the new value. This means that although the underlying operation is commutative, any two transactions that perform it will have a read/write collision. If, however, the smart contract language has primitives that encapsulate “atomic storage manipulation”, then these can be used to enhance parallelization. For example, consider u256 addition. If we want to add some value to a storage slot (as happens when updating the sequencer’s balance due to fee payments), we can call an ad-hoc <code>increment(storage_address, value)</code> operation that does not necessarily lead two transactions that apply increment to the same address to collide. Collision will only happen if the first operation results in an overflow. This direction was explored in more depth in a <a href=\"https://arxiv.org/pdf/2405.06117\">recent paper</a> by AptosLabs, where they introduce the notion of “deferred object” to the smart contract language.</p>\n<p>Finally, while mostly targeted for the sequencing layer, the parallelization infrastructure can be used by full nodes to optimize re-execution. The improvement is even more significant for nodes, since they can get the optimal ordering via the dependency graph produced by the original execution.</p>\n<h2><a name=\"summary-7\" class=\"anchor\" href=\"https://community.starknet.io#summary-7\"></a>Summary</h2>\n<p>As of Starknet 0.13.2, parallelization is back on the menu. Parallelization, along with AOT compilation via the <a href=\"https://github.com/lambdaclass/cairo_native\">cairo-native</a> project that is planned for 0.13.3, will unleash the full potential of Starknet, reaching throughput that is only possible on a validity rollup.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/optimistic-parallelization-revived/114121\">Read full topic</a></p>","link":"https://community.starknet.io/t/optimistic-parallelization-revived/114121","pubDate":"Sun, 26 May 2024 16:51:38 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114121"},"source":{"@url":"https://community.starknet.io/t/optimistic-parallelization-revived/114121.rss","#text":"Optimistic parallelization revived"}},{"title":"SNIPs: process revival","dc:creator":"ilia","category":"📜 Development Proposals","description":"<h1><a name=\"introduction-1\" class=\"anchor\" href=\"https://community.starknet.io#introduction-1\"></a>Introduction</h1>\n<p>SNIPs (Starknet Improvement Proposals) are the Starknet analogue of Ethereum EIPs. However, in the current state of affairs, there are aspects in which a SNIP differs from an EIP both in its purpose and in its (lack of) processing. As pointed out by the community, little attention has been devoted to the topic over the past few months. The purpose of this text is to revive the SNIP process and propose short-term improvements.</p>\n<h1><a name=\"eip-vs-snip-today-2\" class=\"anchor\" href=\"https://community.starknet.io#eip-vs-snip-today-2\"></a>EIP vs SNIP today</h1>\n<p>The fundamental difference is in handling protocol-level improvement proposals, i.e those which require protocol changes. Ethereum, being decentralized, requires “meta-consensus” on protocol changes among validators and subsequently among client teams. The Ethereum Foundation is a considerable driving force for EIPs, but it does not directly control block proposals. Starknet, in its currently centralized state, strictly requires involvement of the Starknet core teams in StarkWare to implement protocol changes.</p>\n<p>Since genesis, almost all protocol-level changes (e.g. version features) have not gone through the full SNIP route, having been decided internally instead. Overall we think this is sensible and justified by the need to move and add features much faster than in Ethereum. That being said, the long term objective is clear: when Starknet is decentralized and mature, the process will closely mirror the Ethereum EIP protocol.</p>\n<p>Thus we are left with the question of short-medium term: on the one hand, iterations and versions are still frequent compared to Ethereum. On the other hand, we want to step toward a SNIP process that approaches the “real thing” over time.</p>\n<h1><a name=\"short-medium-term-proposal-3\" class=\"anchor\" href=\"https://community.starknet.io#short-medium-term-proposal-3\"></a>Short-medium term proposal</h1>\n<p>Following <a href=\"https://github.com/starknet-io/SNIPs/blob/main/SNIPS/snip-1.md\">SNIP-1</a>, GitHub remains the place to submit SNIPs and is the source of truth for their documentation. Other media are for discussions and “advertising”.</p>\n<h2><a name=\"the-process-4\" class=\"anchor\" href=\"https://community.starknet.io#the-process-4\"></a>The process</h2>\n<ol>\n<li>Author submits SNIP.</li>\n<li>Following <a href=\"https://github.com/starknet-io/SNIPs/blob/main/SNIPS/snip-1.md#snip-editor-responsibilities\">SNIP-1#Editor Responsibilities</a>, the editor performs syntactic checks. If the checks pass then merge to main. Otherwise reject.</li>\n<li>After merge to main, the author should change status to review and begin discussions on the community forum, which is the intended domain for discussing SNIPs. The author has edit permissions and is free to modify their proposal at will.</li>\n<li>SNIPs enter stale status after 6 months and require an editor (SW) to revive.</li>\n<li>An editor can change the status to last call which activates a two week timer. Assuming no other actions, a SNIP in last call status automatically becomes final when the timer runs out.</li>\n</ol>\n<h2><a name=\"what-does-it-really-mean-to-finalize-5\" class=\"anchor\" href=\"https://community.starknet.io#what-does-it-really-mean-to-finalize-5\"></a>What does it really mean to finalize?</h2>\n<p>During the centralized phase of Starknet, finalization has two essential steps: entering the roadmap and running in production. In the decentralized phase, finalization means sufficiently widespread adoption among Starknet operators and full nodes.</p>\n<h2><a name=\"what-will-change-now-6\" class=\"anchor\" href=\"https://community.starknet.io#what-will-change-now-6\"></a>What will change now?</h2>\n<p>The Starknet core teams are committed to much greater responsiveness, both on GitHub and in Community Forum discussions. Specifically, feel free to ping <a class=\"mention\" href=\"https://community.starknet.io/u/ilia\">@ilia</a>, <a class=\"mention\" href=\"https://community.starknet.io/u/ohad-starkware\">@Ohad-StarkWare</a>, <a class=\"mention\" href=\"https://community.starknet.io/u/feedthefed\">@FeedTheFed</a>, and <a class=\"mention\" href=\"https://community.starknet.io/u/leo_l\">@Leo_L</a>!</p>\n<h2><a name=\"what-now-7\" class=\"anchor\" href=\"https://community.starknet.io#what-now-7\"></a>What now?</h2>\n<p>Write SNIPs! <img src=\"https://emoji.discourse-cdn.com/twitter/scissors.png?v=12\" title=\":scissors:\" class=\"emoji\" alt=\":scissors:\" loading=\"lazy\" width=\"20\" height=\"20\"><img src=\"https://emoji.discourse-cdn.com/twitter/scissors.png?v=12\" title=\":scissors:\" class=\"emoji\" alt=\":scissors:\" loading=\"lazy\" width=\"20\" height=\"20\"><img src=\"https://emoji.discourse-cdn.com/twitter/scissors.png?v=12\" title=\":scissors:\" class=\"emoji\" alt=\":scissors:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n            <p><small>6 posts - 3 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/snips-process-revival/114075\">Read full topic</a></p>","link":"https://community.starknet.io/t/snips-process-revival/114075","pubDate":"Sun, 12 May 2024 14:41:16 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114075"},"source":{"@url":"https://community.starknet.io/t/snips-process-revival/114075.rss","#text":"SNIPs: process revival"}},{"title":"Rebuilding Trust with a New StarkNet Airdrop Strategy","dc:creator":"AngeloBas","category":"🤷‍♀️ All-Purpose Hangout","description":"<p>In light of the recent challenges faced during the StarkNet airdrop, which unfortunately led to dissatisfaction and a decline in user engagement within the ecosystem, I propose a revitalized approach to re-engage our community and restore confidence.</p>\n<p><strong>Background:</strong></p>\n<p>The previous StarkNet airdrop encountered significant issues that affected the community’s perception and participation. These problems led to many users departing from the ecosystem leaving us with  <img src=\"https://emoji.discourse-cdn.com/twitter/8ball.png?v=12\" title=\":8ball:\" class=\"emoji\" alt=\":8ball:\" loading=\"lazy\" width=\"20\" height=\"20\"> users.</p>\n<hr>\n<p><strong>Rebuilding Trust with a New StarkNet Airdrop Strategy</strong></p>\n<p>In light of the recent challenges faced during the StarkNet airdrop, which unfortunately led to dissatisfaction and a decline in user engagement within the ecosystem, I propose a revitalized approach to re-engage our community and restore confidence.</p>\n<p><strong>Background:</strong> The previous StarkNet airdrop encountered significant issues that affected the community’s perception and participation. These problems led to many users departing from the ecosystem, looking for stability and reliability that were perceived as lacking.</p>\n<p><strong>Proposed Airdrop Using a New Unlock System:</strong></p>\n<p>To address these issues and incentivize users to rejoin and continue supporting the StarkNet ecosystem, I propose a new airdrop mechanism integrated with a sophisticated contract. This system will not only distribute tokens but will also encourage long-term engagement and investment in the ecosystem.</p>\n<p><strong>Key Features of the Proposed Airdrop:</strong></p>\n<ol>\n<li><strong>Unlock Contract Integration:</strong></li>\n</ol>\n<ul>\n<li>Users will receive airdropped Strk and Eth which will unlock after 6 months within a specially designed smart contract on StarkNet.</li>\n<li>This contract will manage and store Stark, Eth and potentially other tokens with a clear and user-friendly unlock schedule.</li>\n</ul>\n<ol start=\"2\">\n<li><strong>Engagement Through Utility:</strong></li>\n</ol>\n<ul>\n<li>Unlike traditional airdrops, users can actively use their airdropped tokens, from day 1 (meaning its still locked) within the StarkNet ecosystem to purchase other tokens (which will stay on the contract) or pay for gas fees. This utility ensures that tokens are more than just a passive reward — they are a means to explore and grow within the platform.</li>\n</ul>\n<ol start=\"3\">\n<li><strong>Resetting Lock Through Activity:</strong></li>\n</ol>\n<ul>\n<li>When a user utilizes their airdropped tokens to acquire new tokens, the unlock period for these new tokens will automatically reset to 6 months (reset for that specific token, meaning that, for example, a user doesn’t interact with Strk but with Eth, the Strk unlock period wouldn’t change but the Eth would). This mechanism encourages ongoing interaction with the ecosystem and gradual integration of users into various services and offerings available on StarkNet.</li>\n</ul>\n<ol start=\"4\">\n<li><strong>Secure and Gradual Withdrawal:</strong></li>\n</ol>\n<ul>\n<li>Post-unlock, users can securely withdraw their tokens to their personal wallets, providing them with full control over their assets after they have engaged with the ecosystem over the lock period.</li>\n</ul>\n<p><strong>Benefits:</strong></p>\n<ul>\n<li><strong>Restores Trust:</strong> By addressing the shortcomings of the previous airdrop and providing a clear, user-centric approach.</li>\n<li><strong>Encourages Long-Term Engagement:</strong> Ensures that users are invested in the ecosystem for a longer period, enhancing stability and growth.</li>\n<li><strong>Promotes Active Participation:</strong> Encourages users to explore and use their tokens within the ecosystem, increasing transaction volume and liquidity.</li>\n<li><strong>Builds a Resilient User Base:</strong> Attracts and retains users who are genuinely interested in the development and success of the StarkNet platform.</li>\n</ul>\n<p><strong>Conclusion:</strong></p>\n<p>This new airdrop strategy is designed to rebuild trust and provide tangible benefits to our community. By leveraging a robust unlock system, we can ensure that the StarkNet ecosystem not only recovers but thrives, with an active and committed user base dedicated to its long-term success.<br>\nLet’s focus on community. After all we can have the best piece of art but if it sits in a closet no one appreciates it.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/rebuilding-trust-with-a-new-starknet-airdrop-strategy/114064\">Read full topic</a></p>","link":"https://community.starknet.io/t/rebuilding-trust-with-a-new-starknet-airdrop-strategy/114064","pubDate":"Thu, 09 May 2024 05:46:37 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114064"},"source":{"@url":"https://community.starknet.io/t/rebuilding-trust-with-a-new-starknet-airdrop-strategy/114064.rss","#text":"Rebuilding Trust with a New StarkNet Airdrop Strategy"}},{"title":"Two new things you can do with the Stone prover TODAY","dc:creator":"LandauRaz","category":"🤷‍♀️ All-Purpose Hangout","description":"<p>In August 2023, Starknet took a big leap forward in decentralizing its technology and empowering the developer community to build upon it independently by open-sourcing its battle-tested Stone prover. And indeed, the community (you!) <a href=\"https://starkware.co/resource/unleashing-the-power-of-the-stone-prover/\">stepped to the challenge</a> and has since done truly astounding work to extend Stone’s capabilities, including two that are already available today:</p>\n<ol>\n<li><strong>Using Stone to Prove Cairo Programs:</strong> Stone has been in production since June 2020, playing a critical role in proving transactions from decentralized applications powered by StarkWare such as StarkEx and Starknet. Back in 2020, however, Cairo was a very different language, and as such Stone was built to prove an older version of it (<a href=\"https://starkware.co/resource/the-whats-what-of-the-cairo-world/\">now known as Cairo Zero</a>) – but no more! Thanks to the mighty <a href=\"https://lambdaclass.com/\">LambdaClass team</a>, Stone is now capable of proving both <a href=\"https://github.com/starkware-libs/stone-prover?tab=readme-ov-file#creating-and-verifying-a-proof-of-a-cairo-program\">Cairo</a>  and <a href=\"https://github.com/starkware-libs/stone-prover?tab=readme-ov-file#creating-and-verifying-a-proof-of-a-cairozero-program\">Cairo Zero</a> programs</li>\n<li><strong>Verifying Stone Proofs on Starknet:</strong> Obviously, generating proofs (either of Cairo or Cairo Zero programs) won’t get you far without verifying them. Moreover, the generated proofs are only as secure as the entity that verifies them – which is precisely why this verification needs to be onchain. So far, however, Stone proofs could only be verified offchain using the C++ verifier available in the Stone codebase – but no more! Thanks to the incredible <a href=\"https://herodotus.dev/\">Herodotus team</a>, you can now use the <a href=\"https://integrityverifier.com/\">Integrity verifier</a> to verify Stone proofs <a href=\"https://sepolia.starkscan.co/tx/0x2bdc63690e345a1511732ae00994bda30a66429876006ae704e54e229021b17\">on Starknet</a>.</li>\n</ol>\n<p>“What about <strong>using Stone to power</strong> <a href=\"https://starkware.co/resource/what-are-appchains/\"><strong>Starknet Appchains</strong></a>”, you say? The missing piece of this puzzle is the <a href=\"https://github.com/starkware-libs/cairo-lang/blob/master/src/starkware/starknet/core/os/os.cairo\">Starknet OS program</a>, whose job is to verify the validity of Starknet blocks. So far, however, the execution of the Starknet OS was solely supported via the old and only partially open-sourced Pythonic infrastructure – but no more! The amazing <a href=\"https://moonsonglabs.com/\">Moongsong Labs team</a> is <a href=\"https://github.com/keep-starknet-strange/snos\">hard at work</a> on enabling the Starknet OS to be executed using the new and fully open-source Rusty infrastructure.</p>\n<p>More will follow and be described later, but for now, you’re more than welcome to join the <a href=\"https://t.me/+NitbGEoPtnphNDM0\">Stonehenge TG group</a> and start building <img src=\"https://emoji.discourse-cdn.com/twitter/moyai.png?v=12\" title=\":moyai:\" class=\"emoji\" alt=\":moyai:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/two-new-things-you-can-do-with-the-stone-prover-today/114056\">Read full topic</a></p>","link":"https://community.starknet.io/t/two-new-things-you-can-do-with-the-stone-prover-today/114056","pubDate":"Wed, 08 May 2024 05:59:25 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114056"},"source":{"@url":"https://community.starknet.io/t/two-new-things-you-can-do-with-the-stone-prover-today/114056.rss","#text":"Two new things you can do with the Stone prover TODAY"}},{"title":"EVM compatibility for games and MUD on Starknet?","dc:creator":"Damian995","category":"🤷‍♀️ All-Purpose Hangout","description":"<p>It’s such a delight that 2 million $STRK are granted to Realms by starknet foundation. I feel that Starknet should be the home of <a href=\"https://www.starknet.io/blog/autonomous-worlds/\" rel=\"noopener nofollow ugc\">autonomous worlds</a> more than ever.</p>\n<p>Even after the storm of dissatisfaction over the Starknet airdrop on Twitter on February 20th (why so specific? It’s my wife’s birthday!) I’ve been riding the high waves of builder confidence, fiery passion, and bold ambitions from the ETHDenver Dojo Ninja Cafe to ETHGlobal London’s AW Research’s Hacker House, and all the way to the Starknet Meetup at the HK Web3 Festival.</p>\n<p>But three weeks ago, I landed in Lisbon for the Autonomous Anonymous conference, and man, was I in for a ride! The game composability that I had been eagerly awaiting on Starknet unfolded dramatically right before my eyes during a whirlwind two-day hackathon. I even got my hands dirty and tweaked a game called ‘Downstream Utopia’ using Playmint’s toolkit. Over those three days, despite the cool demos like ‘Dope War’ and ‘Loot Survivor,’ perhaps due to a fear of the Cairo language or just unfamiliarity with Starknet’s gaming ecosystem, out of over 20 projects, iirc, only one took on ‘Dope War.’ As a builder who’s built modifications to spice up ‘Loot Survivor,’ I felt a pinch of disappointment, and even caught a whiff of mockery in the tg group.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/2/0/20691a0fa8a85089997f28bb9a770c34ce2abfda.jpeg\" data-download-href=\"/uploads/short-url/4CIsqXhoCrkgjjC0KShtbHqXG2e.jpeg?dl=1\" title=\"WechatIMG4201\" rel=\"noopener nofollow ugc\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/2/0/20691a0fa8a85089997f28bb9a770c34ce2abfda_2_338x500.jpeg\" alt=\"WechatIMG4201\" data-base62-sha1=\"4CIsqXhoCrkgjjC0KShtbHqXG2e\" width=\"338\" height=\"500\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/2/0/20691a0fa8a85089997f28bb9a770c34ce2abfda_2_338x500.jpeg, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/2/0/20691a0fa8a85089997f28bb9a770c34ce2abfda_2_507x750.jpeg 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/2/0/20691a0fa8a85089997f28bb9a770c34ce2abfda_2_676x1000.jpeg 2x\" data-dominant-color=\"232B35\"></a></div><p></p>\n<p>Over the last year, we’ve run some wild experiments in Starknet’s gaming ecosystem and even pulled in a bunch of game developers keen on Starknet by translating Dojo’s docs into Chinese. We even rewrote ‘Crypts &amp; Caverns’ in Cairo—twice, thanks to some fun updates. We deployed it onto Katana, aiming to mesh it perfectly with Eternum (big thanks to Loaf). At last year’s Starknet Istanbul Hacker House, we whipped up a product called ‘Ryogae’ to tackle the swap issues of non-token assets in the Autonomous World. We’ve crafted character generation modules, game governance modules etc. I know I’m not alone in this, but we haven’t managed to rally a devoted troop of onchain game devs like Lattice did with Mud, without even dangling the carrot of airdrops!</p>\n<p>Just last weekend,  Redstone officially launched its mainnet, bombarded with games! The bull market is peeking around the corner—as Moody hinted in his proposal (<a href=\"https://community.starknet.io/t/second-third-fourth-user-airdrop-making-starknet-happen/113907\" class=\"inline-onebox\">Second (Third, Fourth, …) User Airdrop - Making Starknet Happen</a>) “The opportunity cost of building for Starknet vs. all-other-EVM-based-L2s is currently too great.”  - it’s tough getting devs to pick up a new programming language. But I’m betting more onchain gaming devs will come to Starknet to deploy games if  written in Solidity. Then, they can get a taste of Starknet’s slick tech, and dive into learning Cairo to craft even more intricate games.</p>\n<p>Back in EDCON 2023 <a class=\"mention\" href=\"https://community.starknet.io/u/eli\">@Eli</a> said and here I quote “Typically, you would write the first version of your software in Python, but when you want to scale, you need to use other highly efficient languages like C++, WASM, or Rust. I believe the same thing will happen with Cairo; you might deploy Solidity code on Kakarot, but that’s like using Python to write a high-frequency trading engine, which isn’t suitable. You would need to write in another language, and that other language will be Cairo.”</p>\n<p>I think that we should have an EVM-compatible gaming solution on Starknet and explore the interoperability and compatibility between Starknet and Redstone or any other fully onchain game. I hope we can see items crafted in This Cursed Machine then sold in Dope War, and adventurers in loot survivor show up in downstream or biome. This is how we started back in 2022, build worlds not walled gardens, however I am concerned about being left behind or even isolated because of the Cairolang barrier.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/3/e/3ecce48d2b56e9912645cac66995ad329b2d4287.jpeg\" data-download-href=\"/uploads/short-url/8XyAcB4gEBo5foGK48n4lYY80hF.jpeg?dl=1\" title=\"WechatIMG4202\" rel=\"noopener nofollow ugc\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/3/e/3ecce48d2b56e9912645cac66995ad329b2d4287_2_500x500.jpeg\" alt=\"WechatIMG4202\" data-base62-sha1=\"8XyAcB4gEBo5foGK48n4lYY80hF\" width=\"500\" height=\"500\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/3/e/3ecce48d2b56e9912645cac66995ad329b2d4287_2_500x500.jpeg, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/3/e/3ecce48d2b56e9912645cac66995ad329b2d4287_2_750x750.jpeg 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/3/e/3ecce48d2b56e9912645cac66995ad329b2d4287_2_1000x1000.jpeg 2x\" data-dominant-color=\"838383\"></a></div><p></p>\n<p>I am passionate about permissionless and composable autonomous worlds. Any like-minded pals out there keen to join forces on a product that can onboard more game devs?</p>\n            <p><small>8 posts - 4 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/evm-compatibility-for-games-and-mud-on-starknet/114050\">Read full topic</a></p>","link":"https://community.starknet.io/t/evm-compatibility-for-games-and-mud-on-starknet/114050","pubDate":"Tue, 07 May 2024 14:24:12 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114050"},"source":{"@url":"https://community.starknet.io/t/evm-compatibility-for-games-and-mud-on-starknet/114050.rss","#text":"EVM compatibility for games and MUD on Starknet?"}},{"title":"How will Binius affect Starknet?","dc:creator":"Honza","category":"📜 Development Proposals","description":"<p>I’ve dig a little bit into Binius after Vitalik’s <a href=\"https://vitalik.eth.limo/general/2024/04/29/binius.html\" rel=\"noopener nofollow ugc\">blog post</a> and it seems that it will be possible to create more efficient proofs using it. The proofs are larger (few MB) but <a href=\"https://blog.lambdaclass.com/binius-moving-zk-forward/\" rel=\"noopener nofollow ugc\">apparently</a> they could be wrapped inside SNARK or STARK proof.<br>\nSTARKs have had the advantage of being the most efficient zk proofs but that is coming into question.</p>\n<p>How will this innovation affect Starknet?</p>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/how-will-binius-affect-starknet/114029\">Read full topic</a></p>","link":"https://community.starknet.io/t/how-will-binius-affect-starknet/114029","pubDate":"Tue, 30 Apr 2024 15:01:31 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114029"},"source":{"@url":"https://community.starknet.io/t/how-will-binius-affect-starknet/114029.rss","#text":"How will Binius affect Starknet?"}},{"title":"Rescuing Starknet : 3 (simple) ideas to increase volumes and TVL 🚨","dc:creator":"RiskTaker.eth","category":"🤷‍♀️ All-Purpose Hangout","description":"<p><strong>How to save Starknet : 3 (simple) ideas</strong></p>\n<p>Hi, I’m RiskTaker, I’m part of many DeFi/airdrop farming communities. Sure, we are the ones that put money on a new ecosystem, only to get a bounty 6 months later. But we usually are the early adopters, since we can handle risks better than any other retail investor, and we are small enought to thrive even when liquidity is thin. So, our opinion might be usefull <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/0/3/03dd0a587c94dfe99e267133024c2d921404a4a8.jpeg\" data-download-href=\"/uploads/short-url/yb0zNaZstKbEZICo1UNoVk3LyE.jpeg?dl=1\" title=\"64afbc832e07de17e65767d5_ambulance-cars-in-a-row-on-a-parking-of-hospital-2022-06-28-09-39-24-utc-min\" rel=\"noopener nofollow ugc\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/0/3/03dd0a587c94dfe99e267133024c2d921404a4a8_2_690x345.jpeg\" alt=\"64afbc832e07de17e65767d5_ambulance-cars-in-a-row-on-a-parking-of-hospital-2022-06-28-09-39-24-utc-min\" data-base62-sha1=\"yb0zNaZstKbEZICo1UNoVk3LyE\" width=\"690\" height=\"345\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/0/3/03dd0a587c94dfe99e267133024c2d921404a4a8_2_690x345.jpeg, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/0/3/03dd0a587c94dfe99e267133024c2d921404a4a8_2_1035x517.jpeg 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/0/3/03dd0a587c94dfe99e267133024c2d921404a4a8_2_1380x690.jpeg 2x\" data-dominant-color=\"988E8C\"></a></div><br>\n<em>Rescue team is here guys !</em><p></p>\n<p>Here is the thing : Starknet has quite a bad reputation now in DeFi/farming communities. No need to explain, it’s not the point here and it’s been discused hundreds of time</p>\n<p>So, how can we increase Starknet’ liquidity, and turn it from a « cool tech no one care about» chain to a « liquidity leader » everyone want to use ?</p>\n<p>Here are 3 ideas I’ve had. None of them imply a second STRK airdrop (but it would help, of course). I’m not the only one who had this ideas for sure, but they have the power to make Starknet (at least) 5 times bigger in the span of 6 months. They aren’t meant to add $2B TVL each, but they would change the reputation of Starknet and turn it into « the cool kid ». Training wheel is not moving right now, so we need to work on it <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>Let’s go !</p>\n<p><strong>1. Bridge LRTs to Starknet to raise awareness</strong></p>\n<p>Sadly, it’s a little bit late since ETHFI#1 is done and REZ#1 is going to be distributed in early may, it would have been perfect 3 months ago (when LRTs were only avalaible on Ethereum and Arbitrum). But it still is a no brainer !</p>\n<p>LRTs is THE defi trend of 2024. People right now want to play with eETH (<a href=\"http://ether.fi\" rel=\"noopener nofollow ugc\">ether.fi</a>), ezETH (Renzo), rswETH (Swell) and many others. EigenLayer could be one of the biggest airdrop of all times, and a whole new field of innovation. ETHFI <span class=\"hashtag-raw\">#1</span> (etherfi) itself airdropped ~$300M to users. So, hype is real for sure !</p>\n<p>Biggest LRTs (ezETH and eETH) ara available on Ethereum, Arbitrum, Mode, Base and Linea</p>\n<p>Let’s talk about Mode. It’s another useless L2, who only exists to launch a token (users are aware about that). TVL right now is $325M, with no native Mode token. Out of these 325M, ezETH is $141M ! That’s a 43 % !! And we could add eETH and Stone…</p>\n<p>Bridging LRTs right now would not incease Starknet TVL by $500M obviously (and it’s a bit late), but it would change people’s mind from « I have no airdrop, I hate you » to « okay, so I can farm 2 x Renzo (or whatever) + EigenLayer + Nostra (or whatever DeFi protocol) + Starknet <span class=\"hashtag-raw\">#2</span>, that’s cool ».</p>\n<p>Adding at least one top 4 LRT (etherfi, Renzo, Kelp, Swell) to Starknet would change people’s mind. Starknet wouldn’t look like this isolated pacific island, it would be like archipelago of Japan : independant, but close to Ethereum ecosystem</p>\n<p>Then, adding 1 or 2 exotic LRT would be cool, since it would be waaaay cheaper than on Ethereum. If peg is good, people will swap in order to farm something instead of just holding ETH on zkLend or whatever</p>\n<p>Exemple : Inception, Genesis, Claystak, Diva Staking</p>\n<p>(Since Starknet is not EVM, you’ll probably need to negociate a little bit with teams in order to guarantee users would get their points/airdrop)</p>\n<p>I would personnaly farm LRTs on Starknet, instead of holding useless ETH.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/1/3/134445c2416eb039896c6d9a538574f9e71314eb.jpeg\" data-download-href=\"/uploads/short-url/2KrlovtfhU0FGlmWBKQwZlXifov.jpeg?dl=1\" title=\"eigenlayer\" rel=\"noopener nofollow ugc\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/1/3/134445c2416eb039896c6d9a538574f9e71314eb_2_690x382.jpeg\" alt=\"eigenlayer\" data-base62-sha1=\"2KrlovtfhU0FGlmWBKQwZlXifov\" width=\"690\" height=\"382\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/1/3/134445c2416eb039896c6d9a538574f9e71314eb_2_690x382.jpeg, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/1/3/134445c2416eb039896c6d9a538574f9e71314eb_2_1035x573.jpeg 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/1/3/134445c2416eb039896c6d9a538574f9e71314eb_2_1380x764.jpeg 2x\" data-dominant-color=\"1F2023\"></a></div><br>\n<em>Who doesn’t love Eigen points ?</em><p></p>\n<p><strong>2. Add a Pendle-like protocol to make people happy</strong></p>\n<p>Okay, Starknet is supposed to be neutral so I might be wrong, but Abdel asked about ideas so here are mines.</p>\n<p>Pendle is the pinacle of 2024 DeFi : it’s super-powerfull, kind of hard to understand, but can change lives. That’s what people love !</p>\n<p>A whale can use Pendle to earn +6 % ETH in only 2 months. A shrimp (such a me) can use Pendle to earn +$10k airdrops in 6 months. That’s what is so incredible with yield markets.</p>\n<p>After bridging LRTs to Starknet, people would need to play with it. Providing liquidity/lending is cool, but it’s not hard enought for some people, we are not in 2021 anymore. So, people (including me) are using Pendle to farm 15 times faster. Others are making a juicy +40 % APR yield on eth (wich is incredible, it’s 10 times higher than staking rewards).</p>\n<p>Using a yield market can be tricky when you’re a newbie, so I would suggest to copy/paste the frontend of Pendle. It would reduce friction a lot</p>\n<p>PENDLE market cap is <span class=\"math\">600M right now, token made a 100x. So, buying PENDLE months ago was a juicy move. Having a yield market would directly increase Starknet attractiveness, since users would have a brand new (juicy?) airdrop to farm. Many people are affraid Ekubo/Nostra/Avnu airdrops will be disapointed (let say, 140</span> for 6 months lending/LP). From a marketing POV, we need a Jito-like airdrop : huge amounts, to not-so-many people. That’s exacty what Pendle is : huge amounts, not-so-many people.</p>\n<p>And, obviously, it would still be used after LRTs trend fade, in order to farm new things and new protocols (such as Ethena recently)</p>\n<p>DEX/money markets were 2021 DeFi essentials. Perp was 2022 DeFi bare minimum. Yield markets are 2024 must-have <img src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p><strong>3. Connect to Hyperlane for the HYPE</strong></p>\n<p>Not sure about this one, but Hyperlane is a thriving protocol. People are using it to farm HYPE airdrop, but bridging throught Hyperlane is also very quick (and not so expansive). Since it’s permissionless, you don’t need to pay in order to use it (as a protocol). And it’s chain agnostic, it can be used on an EVM chain, a Cosmos chain, etc. So why not a Cairo VM chain <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>Connecting Starknet to Hyperlane would have 2 effects :</p>\n<ul>\n<li>\n<p>1 : Starknet is more and more integrated to Ethereum and other chains (sorry, but native bridging and Orbiter bridging feel so bad for 99 % of users)</p>\n</li>\n<li>\n<p>2 : people farming Hyperlane airdrop are going from time to time on Starknet. Hyperlane is hyped now, but « we are still early », so it’s not late at all.</p>\n</li>\n</ul>\n<p><strong>BONUS : more ideas to pump Starknet</strong></p>\n<ul>\n<li>\n<p>a ve(3,3) DEX with a nice frontend such as Aerodrome. Always a good idea to increase TVL/volume/reputation by making a 50x on one token, but I have to say I don’t really like them</p>\n</li>\n<li>\n<p>an order-book DEX just as Mangrove Exchange. Way less hyped than a ve(3,3), but also more interesting from an innovation point of view</p>\n</li>\n<li>\n<p>make « unruggable meme » looks more like Pinksale (<a href=\"https://www.pinksale.finance/\" rel=\"noopener nofollow ugc\">https://www.pinksale.finance/</a>). Unruggable is a great idea, but for now it doesn’t help degens buying memecoins with live-charts and all that stuff</p>\n</li>\n<li>\n<p>a leverage farming protocol and/or an autocompounder (such as Alpaca or Beefy). Not so usefull when fees are 1 cent, no hype about it</p>\n</li>\n<li>\n<p>a delta-neutral stablecoin such as Ethena. I don’t really like it, stablecoins are not supposed to be degen. Probably not the first thing to create, but it could be a great extender when training wheel is already moving</p>\n</li>\n<li>\n<p>create new things ! Way more difficult to talk about it because I’m not deep into tech, but things like Kakarot zkEVM or Madara could be very interesting from a user POV. We don’t HAVE to make it about points/airdrop or whatever, but seeing new things being built make people happy <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n</li>\n</ul>\n<p>So, here are my ideas for Starknet, I hope it could help. I’m not a tech guy so I can’t build it, but I would love to beta test any of your work. I like Starknet and I hold my STRK airdrop, so I would love to see it thrive and reach $5 or $10 billions TVL</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/a/0/a0ee40133e68549a88542e61721a5b4edfcf129d.jpeg\" data-download-href=\"/uploads/short-url/mXEQkZM9ZuVznzbpsMN6ujJBw9D.jpeg?dl=1\" title=\"Pararescue.training_exercise\" rel=\"noopener nofollow ugc\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/a/0/a0ee40133e68549a88542e61721a5b4edfcf129d_2_690x492.jpeg\" alt=\"Pararescue.training_exercise\" data-base62-sha1=\"mXEQkZM9ZuVznzbpsMN6ujJBw9D\" width=\"690\" height=\"492\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/a/0/a0ee40133e68549a88542e61721a5b4edfcf129d_2_690x492.jpeg, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/a/0/a0ee40133e68549a88542e61721a5b4edfcf129d_2_1035x738.jpeg 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/a/0/a0ee40133e68549a88542e61721a5b4edfcf129d_2_1380x984.jpeg 2x\" data-dominant-color=\"8C9799\"></a></div><br>\n<em>Hostages are safe boss !</em><p></p>\n<p>Disclaimer : I’m a retail, I’m not part of any team. I hold tokens from etherfi, Renzo, Swell, Diva, and I’m using some of the protocols I mentionned just above. And I’m not a tech guy, so everything I say might be stupid/too difficult to bootstrap and I’m sorry about that <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"> Thanks for your understanding !</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/rescuing-starknet-3-simple-ideas-to-increase-volumes-and-tvl/114010\">Read full topic</a></p>","link":"https://community.starknet.io/t/rescuing-starknet-3-simple-ideas-to-increase-volumes-and-tvl/114010","pubDate":"Wed, 24 Apr 2024 15:47:30 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114010"},"source":{"@url":"https://community.starknet.io/t/rescuing-starknet-3-simple-ideas-to-increase-volumes-and-tvl/114010.rss","#text":"Rescuing Starknet : 3 (simple) ideas to increase volumes and TVL 🚨"}},{"title":"Starknet's builder council - Description & up to date list of members","dc:creator":"henri.lieutaud","category":"🏛   Governance","description":"<h1><a name=\"background-1\" class=\"anchor\" href=\"https://community.starknet.io#background-1\"></a>Background</h1>\n<p>The Starknet Builders’ Council was established on December 5th, 2022, as an integral component of the 1st Phase of Starknet Governance. It is an assembly of Starknet builders deeply committed to making well-informed technical decisions that will support and maintain Starknet and its ecosystem.</p>\n<p>As of August 29th, 2023, the Builders Council has been entrusted with a voting power delegation amounting to 1.2 billion tokens. This delegation represents a substantial 23.3% of the total voting power within the first Phase of Governance. This allocation underscores the Council’s crucial role in shaping the future direction of the Starknet ecosystem.</p>\n<h1><a name=\"role-of-the-builders-council-2\" class=\"anchor\" href=\"https://community.starknet.io#role-of-the-builders-council-2\"></a>Role of the Builders’ Council</h1>\n<p>The Builders’ Council plays a core role within the Starknet ecosystem and governance mechanisms, characterized by the following key responsibilities:</p>\n<ul>\n<li>Informed decision-making: The Council conducts comprehensive learning and deliberation processes for each proposed decision. The primary objective is to arrive at well-reasoned and expertly informed decisions that will benefit Starknet.</li>\n<li>Advocacy for the community: The Council actively engages in discussions and voting processes, representing the interests and perspectives of Starknet community members.</li>\n<li>Transparency: The Council operates in a transparent manner. It ensures that the Council’s discussions, decisions, and activities are made accessible and comprehensible to the broader community.</li>\n<li>Alignment with vision and values: The Council ensures that the decisions it makes are fully aligned with Starknet’s vision and core values.</li>\n</ul>\n<p>For further information about the Builders’ Council’s role read the <a href=\"https://community.starknet.io/t/starknet-builders-council-mission-statement/4045\">Mission Statement</a>, published on December 14th, 2022.</p>\n<p>For further information regarding the Code of Conduct, Tooling and Council Curations, please refer to the <a href=\"https://www.starknet.io/en/content/starknet-builders-council-modus-operandi\">Practical Aspects of the Builders Council</a>.</p>\n<h1><a name=\"current-members-of-the-builders-council-3\" class=\"anchor\" href=\"https://community.starknet.io#current-members-of-the-builders-council-3\"></a>Current members of the Builders’ Council</h1>\n<p>The current confirmed members of the Starknet Builders’ Council comprise 20 members:</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Project</th>\n<th>Contact</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Sylve Chevet</td>\n<td>Cofounder at briq and Governance Facilitator at Builder’s Council</td>\n<td><a href=\"https://twitter.com/sylvechv\">https://twitter.com/sylvechv</a></td>\n</tr>\n<tr>\n<td>Jon</td>\n<td>Cofounder at Aspect and Starkscan</td>\n<td><a href=\"https://twitter.com/0xmonkeyy\">https://twitter.com/0xmonkeyy</a></td>\n</tr>\n<tr>\n<td>Chee Chyuan Ang</td>\n<td>Software Developer and Cofounder at Starknet Malaysia</td>\n<td><a href=\"https://twitter.com/cheechyuanang\">https://twitter.com/cheechyuanang</a></td>\n</tr>\n<tr>\n<td>Jonathan Lei</td>\n<td>Cofounder and CTO at zkLend</td>\n<td><a href=\"https://twitter.com/xJonathanLEI\">https://twitter.com/xJonathanLEI</a></td>\n</tr>\n<tr>\n<td>Julien Niset</td>\n<td>Cofounder at Argent</td>\n<td><a href=\"https://twitter.com/jniset\">https://twitter.com/jniset</a></td>\n</tr>\n<tr>\n<td>Ivan Pavicic</td>\n<td>Engineering Manager at Space Shard</td>\n<td><a href=\"https://twitter.com/ivpavici\">https://twitter.com/ivpavici</a></td>\n</tr>\n<tr>\n<td>Martin Triay</td>\n<td>Former Cairo Lead at OpenZeppelin</td>\n<td><a href=\"https://twitter.com/martriay\">https://twitter.com/martriay</a></td>\n</tr>\n<tr>\n<td>Mentor Reka</td>\n<td>Cofounder at AVNU and Community Platform Starknet Ecosystem</td>\n<td><a href=\"https://twitter.com/MentorNotPseudo\">https://twitter.com/MentorNotPseudo</a></td>\n</tr>\n<tr>\n<td>Nicolas Bacca</td>\n<td>Former VP Innovation Lab and Cofounder at Ledger</td>\n<td><a href=\"https://twitter.com/btchip\">https://twitter.com/btchip</a></td>\n</tr>\n<tr>\n<td>Orlando</td>\n<td>Developer at Snapshot</td>\n<td><a href=\"https://twitter.com/_Orland0x\">https://twitter.com/_Orland0x</a></td>\n</tr>\n<tr>\n<td>Rohit Goyal</td>\n<td>Cofounder at JediSwap</td>\n<td><a href=\"https://twitter.com/imrgoyal\">https://twitter.com/imrgoyal</a></td>\n</tr>\n<tr>\n<td>Loaf</td>\n<td>Cofounder at BibliothecaDAO, Realms and Dojo</td>\n<td><a href=\"https://twitter.com/lordOfAFew\">https://twitter.com/lordOfAFew</a></td>\n</tr>\n<tr>\n<td>Marcello Bardus</td>\n<td>Cofounder &amp; CTO at Herodotus</td>\n<td><a href=\"https://twitter.com/0xmarcello\">https://twitter.com/0xmarcello</a></td>\n</tr>\n<tr>\n<td>Chris Lexmond</td>\n<td>Co-Founder &amp; CEO at Influence</td>\n<td><a href=\"https://twitter.com/DarkosNightmare\">https://twitter.com/DarkosNightmare</a></td>\n</tr>\n<tr>\n<td>Moody Salem</td>\n<td>Founder at Ekubo</td>\n<td><a href=\"https://twitter.com/sendmoodz\">https://twitter.com/sendmoodz</a></td>\n</tr>\n<tr>\n<td>Benjamin Flores</td>\n<td>Cofounder at Starknet ID</td>\n<td><a href=\"https://twitter.com/Fricoben\">https://twitter.com/Fricoben</a></td>\n</tr>\n<tr>\n<td>Clément Walter</td>\n<td>Cofounder &amp; CTO at Kakarot</td>\n<td><a href=\"https://twitter.com/ClementWalter\">https://twitter.com/ClementWalter</a></td>\n</tr>\n<tr>\n<td>Yoav Gaziel</td>\n<td>Cofounder at Braavos</td>\n<td><a href=\"https://twitter.com/yoavgaziel\">https://twitter.com/yoavgaziel</a></td>\n</tr>\n<tr>\n<td>Mathias Halgreen</td>\n<td>Cofounder &amp; CTO at Pragma</td>\n<td><a href=\"https://twitter.com/0xevolve\">https://twitter.com/0xevolve</a></td>\n</tr>\n<tr>\n<td>Ahmet Oznar</td>\n<td>Cofounder of Pyramid</td>\n<td><a href=\"https://twitter.com/ahmetoznarr\">https://twitter.com/ahmetoznarr</a></td>\n</tr>\n</tbody>\n</table>\n</div><p>This list will be updated regularly based on additions and removals to the Builders’ Council.</p>\n<h1><a name=\"resources-4\" class=\"anchor\" href=\"https://community.starknet.io#resources-4\"></a>Resources</h1>\n<p>Safe wallet of the Builder Council: <a href=\"https://app.safe.global/home?safe=eth:0x5C04Aa0E6896d5039bBeb4EEcAE8526a0A052A77\">eth:0x5C04Aa0E6896d5039bBeb4EEcAE8526a0A052A77</a></p>\n<p><a href=\"https://www.starknet.io/en/content/starknet-builders-council-modus-operandi\">Starknet Builders’ Council Modus Operandi</a></p>\n<p><a href=\"https://community.starknet.io/t/starknet-builders-council-mission-statement/4045\">Builder Council’s Announcement</a></p>\n<p><a href=\"https://community.starknet.io/t/delegate-onboarding-announcement/4047\">Starknet Delegation Onboarding Announcement</a></p>\n<p><a href=\"https://www.starknet.io/en/posts/governance/starknets-governance-first-phase\">Starknet Governance First Phase</a></p>\n<p><a href=\"https://medium.com/starknet-foundation/welcome-to-the-world-starknet-foundation-7bd55d5dbc59\">Starknet Foundation Mission Statement</a></p>\n<h1><a name=\"changelog-5\" class=\"anchor\" href=\"https://community.starknet.io#changelog-5\"></a>Changelog</h1>\n<ul>\n<li>On November 22, 2023 the governance committee <a href=\"https://community.starknet.io/t/expanding-the-builders-council/108196\">announced</a> that the council was expanding to 20 members.\n<ul>\n<li>TobbyKitty, GuiltyGyoza, Federica Moletta, Tarrence van As, Motty Lavie and Darlington left the council;</li>\n<li>Marcello Bardus, Chris Lexmond, Loaf, Yoav Gaziel, Moody Salem, Benjamin Flores, Clément Walter, Mathias Halgreen and Ahmet Oznar joined the council;</li>\n</ul>\n</li>\n</ul>\n<p>On December 5, 2022 the <a href=\"https://community.starknet.io/t/starknet-builders-council-mission-statement/4045\">Starknet Builders’ Council</a> was established, composed of 17 members which can be found <a href=\"https://community.starknet.io/t/starknet-builders-council-mission-statement/4045#members-of-the-builder-council-5\">here</a>.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/starknets-builder-council-description-up-to-date-list-of-members/113969\">Read full topic</a></p>","link":"https://community.starknet.io/t/starknets-builder-council-description-up-to-date-list-of-members/113969","pubDate":"Thu, 18 Apr 2024 16:24:38 +0000","discourse:topicPinned":"Yes","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113969"},"source":{"@url":"https://community.starknet.io/t/starknets-builder-council-description-up-to-date-list-of-members/113969.rss","#text":"Starknet's builder council - Description & up to date list of members"}},{"title":"Best APIs for building on Starknet?","dc:creator":"clivelbiscoh","category":"🤷‍♀️ All-Purpose Hangout","description":"<p>What are the best API providers for building apps on Starknet?</p>\n<p>What are the advantages and disadvantages of each?</p>\n<p>Is there one that allows you to build web2-like experiences that are fast and allow you to surface full historical data?</p>\n<p>Any examples of apps that have really done a great job of creating a web2-like experience that’s fast like web2 using these APIs?</p>\n<p>Thanks!</p>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/best-apis-for-building-on-starknet/113964\">Read full topic</a></p>","link":"https://community.starknet.io/t/best-apis-for-building-on-starknet/113964","pubDate":"Thu, 18 Apr 2024 11:37:07 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113964"},"source":{"@url":"https://community.starknet.io/t/best-apis-for-building-on-starknet/113964.rss","#text":"Best APIs for building on Starknet?"}},{"title":"Second (Third, Fourth, …) User Airdrop - Making Starknet Happen","dc:creator":"sendmoodz","category":"Governance Proposals","description":"<h1><a name=\"problem-1\" class=\"anchor\" href=\"https://community.starknet.io#problem-1\"></a>Problem</h1>\n<p>Taking stock of Starknet’s position in the L2 ecosystem: Starknet has not shown growth numbers on par with its competitors Base/OP, zkSync, Arbitrum, etc.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/d/e/de7680c2ac7302fa35974d0472ffeddefbd850dc.jpeg\" data-download-href=\"/uploads/short-url/vJZTaI2sasXJwn17dr9iPivhgMk.jpeg?dl=1\" title=\"image\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/d/e/de7680c2ac7302fa35974d0472ffeddefbd850dc_2_690x316.jpeg\" alt=\"image\" data-base62-sha1=\"vJZTaI2sasXJwn17dr9iPivhgMk\" width=\"690\" height=\"316\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/d/e/de7680c2ac7302fa35974d0472ffeddefbd850dc_2_690x316.jpeg, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/d/e/de7680c2ac7302fa35974d0472ffeddefbd850dc_2_1035x474.jpeg 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/d/e/de7680c2ac7302fa35974d0472ffeddefbd850dc_2_1380x632.jpeg 2x\" data-dominant-color=\"292C2F\"></a></div><br>\n<em>source: <a href=\"https://www.growthepie.xyz/fundamentals/daily-active-addresses\" class=\"inline-onebox\">Active Addresses - growthepie</a></em><p></p>\n<p>When I started building on Starknet in May, about a year ago, I took a bet on the impressive technology and I believed the airdrop would be the catalyst for more users to try Starknet. However after seeing the design of the user airdrop, I think the chances for Starknet to reach product market fit have diminished: many real users were neglected by this airdrop, and the successful sybils were heavily rewarded. I also <a href=\"https://twitter.com/sendmoodz/status/1758219284625391864\">shared this opinion</a> before it went live.</p>\n<p>Since then, the user sentiment towards Starknet has been very negative–every tweet about Starknet gets comments about the lack of community, tags for <span class=\"hashtag-raw\">#scamnet</span>, references to the unfairness of the distribution, etc. <a href=\"https://twitter.com/AttilaHun_eth/status/1777469833262641578\">This thread</a> is a good example. Meanwhile, the sybils who extracted millions have completely stopped using the chain and moved on to the next farm–as early as December around when the snapshot details were leaked–leaving Starknet’s user and activity numbers at a small fraction of the peak. Now, people even <a href=\"https://x.com/0xGoldenDegen/status/1779123902524039460\">genuinely believe</a> (or supposedly joke) that Starknet has 8 DAUs.</p>\n<p><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/7/9/791f794cfd216df3f06a71a72d3c078861e96612.jpeg\" alt=\"8mjwik\" data-base62-sha1=\"hhvcN0b0r6jgfURXO3ZfWNrtLzQ\" width=\"666\" height=\"359\"><br>\n<em>- All of Crypto Twitter</em></p>\n<p>It’s clear we do not see many new users interested in trying out the chain, even when high quality innovative Dapps are available and incentives on the order of 1% per week are paid out to users. I expect experienced developers are reluctant to invest in Cairo because there is little reward to be had. I worry that eventually we will see divestment from Starknet as well if there is not an improvement in the narrative and the activity numbers.</p>\n<h3><a name=\"how-does-it-affect-the-protocols-2\" class=\"anchor\" href=\"https://community.starknet.io#how-does-it-affect-the-protocols-2\"></a>How does it affect the protocols?</h3>\n<p>The low activity directly affects the success of protocols building on Starknet. E.g. for Ekubo Protocol, because of the low user activity, the volume numbers are so low that APRs inclusive of the Starknet DeFi Spring incentives are not much higher than on other chains, which means the products receiving these incentives today will not be sustainable when the incentives end later this year.</p>\n<p>Growing these products by increasing the amount of incentives is not be an efficient use of capital. We need a resolution to the perception problem so that users and developers feel that Starknet has a strong future and is a good place to deploy their assets. Otherwise Starknet will be irrelevant, and the technology will go under-utilized–at least until someone else decides to fork it and do a better job with marketing and distribution. It could take many years longer for Starknet’s vision to be achieved.</p>\n<h3><a name=\"stop-focusing-on-developers-3\" class=\"anchor\" href=\"https://community.starknet.io#stop-focusing-on-developers-3\"></a>Stop focusing on developers</h3>\n<p>The ecosystem is eager to play a big role here, but it’s a challenge to make big moves when the community is so small. It is also not realistic to expect the best developers, memecoiners to take on the challenge of building products on a new stack just for grants, which are small relative to the potential reward of deploying on another more popular chain–especially while activity stats are going in the wrong direction and the sentiment is poor.</p>\n<p>The opportunity cost of building for Starknet vs. all-other-EVM-based-L2s is currently too great. If additional user airdrops succeed in changing the narrative, devs that chose to build on Starknet already will reap the rewards of their efforts. So for the short term, the growth of the developer ecosystem should not be prioritized.</p>\n<h3><a name=\"proposal-4\" class=\"anchor\" href=\"https://community.starknet.io#proposal-4\"></a>Proposal</h3>\n<p>We should define a framework for subsequent user airdrops that is aimed at diluting the issues in the first user airdrop. To meaningfully improve the distribution, the scale of the STRK distributed in these subsequent airdrops should be on par with the original user airdrop. It should be designed in public, subject to criticism and review from the community, and importantly be validated by a snapshot vote. Below are the some tenets by which this framework should be designed:</p>\n<ul>\n<li><strong>MUST</strong> be based on the amount that a user risked by using the chain</li>\n<li><strong>MUST NOT</strong> reward sybils</li>\n<li><strong>MUST NOT</strong> punish deployment of capital to Dapps</li>\n<li><strong>SHOULD</strong> stimulate activity on the chain over time</li>\n<li><strong>SHOULD</strong> make early users rich</li>\n</ul>\n<p>Here is a rough outline of how this airdrop could work to satisfy these tenets:</p>\n<ul>\n<li>A fixed amount of STRK is distributed per-second since a specific date\n<ul>\n<li>E.g.: 1 STRK per second since the day the bridge was live</li>\n</ul>\n</li>\n<li>The fixed amount is split amongst all the accounts on the chain per-second\n<ul>\n<li>Each account receives STRK in proportion to the total value locked on the chain it held each second</li>\n</ul>\n</li>\n<li>“Accounts” includes protocols\n<ul>\n<li><strong>MUST</strong> be a process to determine the sub-allocation to a protocol’s users, e.g.:\n<ul>\n<li>Developers of protocols <strong>SHOULD</strong> be tasked to determine the allocation of STRK for their protocol’s users</li>\n<li>If they do not provide the sub-allocation for public review within a certain timeline, their portion is forfeited</li>\n<li>This sub-allocation may be computed in parallel to the other work, since all that matters is the TVL-seconds per address</li>\n<li>Sub-allocation should follow the same principles of the original airdrop, and undergo a review period by the community to validate the result</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>“Account” value <strong>SHOULD</strong> include popular NFTs and in-game assets for the top collections and games\n<ul>\n<li>Use the floor price of the popular collections at snapshot time to measure their value</li>\n<li>Value of in-game assets determined by average time-to-acquisition, gas cost of acquisition, and rarity</li>\n</ul>\n</li>\n<li>The airdrop amount <strong>SHOULD</strong> be vested at a rate of O(6 months)\n<ul>\n<li>It’s important to have users coming back to the chain to use it as it creates longer term activity and habits</li>\n<li>It also avoids creating a supply shock for STRK</li>\n</ul>\n</li>\n<li>Subtract amounts already received in the first user drop\n<ul>\n<li>Avoids rewarding sybils that held only a minority of the chain’s bridged TVL</li>\n</ul>\n</li>\n<li><strong>SHOULD</strong> exclude STRK\n<ul>\n<li>Users that received STRK should not be permitted to double dip</li>\n</ul>\n</li>\n</ul>\n<p>This proposal is meant to be a starting place for the discussion. This example implementation is based on how 4.9% of the UNI was distributed with the Uniswap airdrop to early liquidity providers.</p>\n<h2><a name=\"delegate-to-help-5\" class=\"anchor\" href=\"https://community.starknet.io#delegate-to-help-5\"></a>Delegate to help!</h2>\n<p>I am a Starknet delegate. Please delegate to me if you wish to help push this idea forward.</p><aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://governance.starknet.io/delegates/profile/3221bd6f-645f-4fc6-99b3-fbe7d3c8dbc0\">\n  <header class=\"source\">\n      <img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/3/2/32c06b2e2b3df93ca2e7879b769f7168738a475e.png\" class=\"site-icon\" data-dominant-color=\"48444F\" width=\"16\" height=\"16\">\n\n      <a href=\"https://governance.starknet.io/delegates/profile/3221bd6f-645f-4fc6-99b3-fbe7d3c8dbc0\" target=\"_blank\" rel=\"noopener\">governance.starknet.io</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:690/362;\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/e/9/e93ed249ca6bdc4fd9a1f42731b096d0728d281a_2_690x362.png\" class=\"thumbnail\" data-dominant-color=\"E1D5E2\" width=\"690\" height=\"362\"></div>\n\n<h3><a href=\"https://governance.starknet.io/delegates/profile/3221bd6f-645f-4fc6-99b3-fbe7d3c8dbc0\" target=\"_blank\" rel=\"noopener\">Delegates / profile</a></h3>\n\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>44 posts - 34 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/second-third-fourth-user-airdrop-making-starknet-happen/113907\">Read full topic</a></p>","link":"https://community.starknet.io/t/second-third-fourth-user-airdrop-making-starknet-happen/113907","pubDate":"Mon, 15 Apr 2024 18:38:49 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113907"},"source":{"@url":"https://community.starknet.io/t/second-third-fourth-user-airdrop-making-starknet-happen/113907.rss","#text":"Second (Third, Fourth, …) User Airdrop - Making Starknet Happen"}},{"title":"QRCode StarkNet Transaction Encoding","dc:creator":"faytey7","category":"SNIPs","description":"<h1><a name=\"abstract-1\" class=\"anchor\" href=\"https://community.starknet.io#abstract-1\"></a>Abstract</h1>\n<p>This SNIP proposes a standardized method for encoding StarkNet transactions into QR codes, facilitating a user-friendly way for wallets to interact with StarkNet transactions. This method aims to streamline the transaction signing process, making it more accessible and efficient for end-users, enabling users to interact with transactions directly through QR code scanning. The proposal covers all types of StarkNet transactions, including but not limited to token transfers, contract interactions, and state updates.</p>\n<h1><a name=\"motivation-2\" class=\"anchor\" href=\"https://community.starknet.io#motivation-2\"></a>Motivation</h1>\n<p>Currently, StarkNet transactions require manual input or complex interfaces to sign. Encoding transactions into QR codes simplifies this process, allowing users to scan a QR code with their wallet to sign transactions directly. This enhancement improves user experience and accessibility, especially for those unfamiliar with blockchain transactions.</p>\n<h1><a name=\"specification-3\" class=\"anchor\" href=\"https://community.starknet.io#specification-3\"></a>Specification</h1>\n<p>Developers should be able to encode user transactions, generate a qrcode and write it to a file or canvas. The following methods would be available to enable developers encode user transactions.</p>\n<ul>\n<li>toFile(output_path, transaction_config, options)</li>\n<li>toCanvas(transaction_config, options)</li>\n<li>toAddressString(transaction_config)</li>\n<li>toDataUrl(transaction_config, options)</li>\n<li>readStringToJSON(value_string)</li>\n<li>getJSON()</li>\n<li>produceEncodedValue(transaction_config, options)</li>\n</ul>\n<p><strong>Syntax</strong></p>\n<p>The QR code encoding will follow a structured format that includes the transaction type, transaction ID, and any relevant parameters.</p>\n<p>For example:</p>\n<p><code>starknet://transaction/&lt;transaction_type&gt;/&lt;transaction_id&gt;?&lt;parameters&gt;</code></p>\n<p>where:</p>\n<p>Base URL: starknet://</p>\n<p>Path: transaction/&lt;transaction_type&gt;/&lt;transaction_id&gt;</p>\n<p>Parameters: ? (optional, depending on the transaction type)</p>\n<h1><a name=\"implementation-details-4\" class=\"anchor\" href=\"https://community.starknet.io#implementation-details-4\"></a>Implementation Details</h1>\n<p>Transactions are serialized into a JSON string, including all necessary details such as the transaction type, contract address, function to be called, and parameters leveraging the serialization format already implemented by the braavos team (<a href=\"https://github.com/myBraavos/starknet-url.git\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - myBraavos/starknet-url: Build &amp; parse StarkNet URLs</a> and  <a href=\"https://github.com/myBraavos/starknet-deeplink\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - myBraavos/starknet-deeplink: StarkNet deeplink generator</a>) that enables transactions and invocations on starknet to be encoded as URLs.</p>\n<p>We then proceed to make a few modifications to the Ethereum-QR-code qrcode generator to enable us to leverage the same qrcode generation logic to encode the transaction or invocation URL as a qrcode.</p>\n<p>This approach to the implementation enables us to have backward compatibility with ethereum qrcode generators already in production and used by most applications.</p>\n<p>There are two possible ways to go about the library implementation of which we require your suggestion.<br>\nImplementing a separate qrcode library for starknet<br>\nIntegrating starknet transactions qrcode encoding and decoding with already existing solutions like ethereum-qr-code</p>\n<p>Each approach would require a different call to action for developers<br>\nImplementing a separate qrcode library for developers: This would require developers to install the new library to invoke the functionality they need<br>\nIntegrating with already existing solutions: This would require developers who are already using the available libraries in production to upgrade their version to the latest version with the release. While this may seem like a good approach, there is no guarantee of how fast changes and updates to the library can be made as it is not managed by our team and can only be updated when our pull requests have been merged.</p>\n<h1><a name=\"backward-compatibility-5\" class=\"anchor\" href=\"https://community.starknet.io#backward-compatibility-5\"></a>Backward Compatibility</h1>\n<p>This proposal is backward compatible with existing StarkNet transactions. It introduces a new method for transaction encoding and does not alter the underlying transaction structure.</p>\n<p>Example instantiation</p>\n<pre data-code-wrap=\"js\"><code class=\"lang-js\">Let qr = new StarknetQRPlugin()\n\nConst sendDetails = {\nTo: “Ox…..”,\nValue: 1,\nGas: 42000,\n}\n\nconst configDetails = {\n  size:180,\n  options: {\n  margin: 2\n }\n};\n\nconst path = './qrcode_image.jpg'\n\nqr.toFile(path, sendDetails, configDetails)\n\n</code></pre>\n<h1><a name=\"security-considerations-6\" class=\"anchor\" href=\"https://community.starknet.io#security-considerations-6\"></a>Security Considerations</h1>\n<p><strong>User Confirmation</strong>: Ensure that wallets require user confirmation before signing transactions scanned from QR codes.</p>\n<p><strong>QR Code Expiration</strong>: QR codes would be implemented as a one-time-use and have a timed expiry, to minimize the risk of unauthorized access and prevent attackers from misusing transaction data.</p>\n<p><strong>Data Privacy</strong>: Minimize the amount of sensitive information included in QR codes to protect user privacy.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/qrcode-starknet-transaction-encoding/113885\">Read full topic</a></p>","link":"https://community.starknet.io/t/qrcode-starknet-transaction-encoding/113885","pubDate":"Thu, 11 Apr 2024 11:22:58 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113885"},"source":{"@url":"https://community.starknet.io/t/qrcode-starknet-transaction-encoding/113885.rss","#text":"QRCode StarkNet Transaction Encoding"}},{"title":"Upcoming Feature: Starknet Applicative Recursion","dc:creator":"ilia","category":"Cairo Development","description":"<p>Allow us to introduce a very cool upcoming feature:<span class=\"d-wrap\" data-wrap=\"color\" data-color=\"purple\" data-bgcolor=\"#\">applicative recursion</span>! We’ll justify the name (sometimes abbreviated as SNAR) in a minute, but for now let’s recount the two key benefits:</p>\n<ol>\n<li>Decoupling of L2 block frequency from L1 costs,</li>\n<li>Reduced fixed L1 operating costs.</li>\n</ol>\n<p>Time to dive in.</p>\n<h1><a name=\"present-and-future-1\" class=\"anchor\" href=\"https://community.starknet.io#present-and-future-1\"></a>Present and future</h1>\n<h2><a name=\"present-2\" class=\"anchor\" href=\"https://community.starknet.io#present-2\"></a>Present</h2>\n<p>We start off in the now, with L1 operating costs of roughly 215K gas <span class=\"d-wrap\" data-wrap=\"color\" data-color=\"purple\" data-bgcolor=\"#\">fixed per block</span>:</p>\n<ol>\n<li>23K gas per fact registration – part of <a href=\"https://etherscan.io/tx/0x16731babd1ba57874ff4b6554aab379785d986b2aa6b4513d68fd19673bb441a\">Verify Proof and Register</a>,</li>\n<li>56K gas per <a href=\"https://etherscan.io/tx/0xd808cb7fa32e1a3a241f91e07587339d526d4c47eae8902075f02cabde4f7efc\">register SHARP memory page</a>,</li>\n<li>136K gas per <a href=\"https://etherscan.io/tx/0x08ce859bc5d0eb7a5c159d50428841e88878691e378704aa636a968b2a7a3ee8\">State Update</a>,\n<ol>\n<li>50K gas for the KZG precompile to sample a blob,</li>\n<li>86K gas for running the state update function.</li>\n</ol>\n</li>\n</ol>\n<p>So SHARP consumes 79K gas per job for registering each job’s data, with job = block. Then the Starknet operator consumes an additional 136K gas per block to bump the state root in the Starknet core contract. Note Starknet block DA must fit into a single blob.</p>\n<p>Unfortunately, <span class=\"d-wrap\" data-wrap=\"color\" data-color=\"purple\" data-bgcolor=\"#\">fixed per block</span> means that L1 operating costs are linear in the amount of blocks – regardless of their mass (the resources they contain). Consequently, very frequent blocks would incur heavy daily operating costs.</p>\n<p>Thus we find ourselves with an unpleasant trade-off between cost efficiency on one hand, and low block times on the other hand. Of course, sufficiently high demand brings frequent <em>and</em> massive blocks, but at current demand, many blocks are closed due to the 6 minute time limit without hitting any other resource limit.</p>\n<p>You may also be thinking to yourself: <em>can we batch several blocks into the fixed costs?</em> Yes. Very yes.</p>\n<h2><a name=\"future-3\" class=\"anchor\" href=\"https://community.starknet.io#future-3\"></a>Future</h2>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/c/3/c35330c9362660ed070870972df835e6bf3579be.jpeg\" data-download-href=\"/uploads/short-url/rRVlbxBNvz7svCYLyNQ4yDbfWVM.jpeg?dl=1\" title=\"A wild SNAR tree appears\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/c/3/c35330c9362660ed070870972df835e6bf3579be_2_534x499.jpeg\" alt=\"A wild SNAR tree appears\" data-base62-sha1=\"rRVlbxBNvz7svCYLyNQ4yDbfWVM\" width=\"534\" height=\"499\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/c/3/c35330c9362660ed070870972df835e6bf3579be_2_534x499.jpeg, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/c/3/c35330c9362660ed070870972df835e6bf3579be.jpeg 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/c/3/c35330c9362660ed070870972df835e6bf3579be.jpeg 2x\" data-dominant-color=\"D9D7D7\"></a></div><p></p>\n<p>There’s a new recursive tree in town: a SNAR tree. The leaves are Starknet blocks, and the internal nodes are special (applicative) recursive proofs that we’ll explain later. Each tree has two configurable limits: amount of leaves and amount of DA bytes (in units of blobs). A tree is <em>closed</em> when one of its limits is reached. What does it mean for a tree to be closed? Very simple: the SNAR root proof is sent to SHARP as a job. Thus Starknet jobs are now roots of SNAR trees instead of Starknet blocks.</p>\n<p>The L1 operating cost structure is similar:</p>\n<ol>\n<li>SHARP memory registration per-job: 23K gas,</li>\n<li>SHARP memory page per-job: 36K gas (reduced from 56K thanks to SHARP optimization),</li>\n<li>State update per-job equal to 86K gas + 50K gas × tree blob limit.</li>\n</ol>\n<p>Thus, apart from the KZG precompile which remains at 50K gas per blob, the remaining fixed-per-job 145K gas is now amortized over all the blocks in a single SNAR tree.</p>\n<p>Crucially, there is no per-block L1 operating cost above: we have decoupled blocks from L1 costs!</p>\n<p>Nice picture of nice feature:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/a/0/a019be550dac92388463f2138c16cb0b88e77f46.jpeg\" data-download-href=\"/uploads/short-url/mQjy7S0UyknkX8LYV39mDu4l2zI.jpeg?dl=1\" title=\"SNAR\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/a/0/a019be550dac92388463f2138c16cb0b88e77f46_2_690x388.jpeg\" alt=\"SNAR\" data-base62-sha1=\"mQjy7S0UyknkX8LYV39mDu4l2zI\" width=\"690\" height=\"388\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/a/0/a019be550dac92388463f2138c16cb0b88e77f46_2_690x388.jpeg, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/a/0/a019be550dac92388463f2138c16cb0b88e77f46_2_1035x582.jpeg 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/a/0/a019be550dac92388463f2138c16cb0b88e77f46_2_1380x776.jpeg 2x\" data-dominant-color=\"141439\"></a></div><p></p>\n<h1><a name=\"cost-efficiency-4\" class=\"anchor\" href=\"https://community.starknet.io#cost-efficiency-4\"></a>Cost efficiency</h1>\n<h2><a name=\"fixed-cost-efficiency-5\" class=\"anchor\" href=\"https://community.starknet.io#fixed-cost-efficiency-5\"></a>Fixed cost efficiency</h2>\n<p>Let’s compare the L1 operating cost of a blob’s worth of DA.</p>\n<ul>\n<li>Right now, the cost is <em>at least</em> 215K gas per blob. The cost equals 215K if the blob is fully utilized by a single block, and increases if many blocks are required since each has its own fixed costs.</li>\n<li>In the future, the cost is 145K / BPT + 50K gas, where BPT denotes blobs per SNAR tree.</li>\n</ul>\n<p>Taking BPT = 3 gives a cost-per-blob of 98K gas: just 45% of the original operating cost. Taking BPT = 6 gives a cost-per-blob of 74K: just over ⅓ of the original cost!</p>\n<h2><a name=\"da-cost-efficiency-6\" class=\"anchor\" href=\"https://community.starknet.io#da-cost-efficiency-6\"></a>DA cost efficiency</h2>\n<p>If blocks have many storage writes, then the expected number of multiple writes to the same storage cell increases. Since DA consists only of state diffs, there is a cancellation effect which increases with block size. Hence it’s more efficient to send DA for larger blocks. Right?</p>\n<p>Nah. Applicative recursion squashes the state diffs at each level of the tree, so the end result is a state diff that equals the squashed diffs of all the leaves. In other words, the end state diff depends only on the transactions in the leaves, and not on their grouping into blocks. As for the “how” – that’s the <em>applicative</em> part: an applicative recursive proof proves the verification of its two child proofs, and then the execution of a “diff squash” program that does what its name suggests. The squash program also does some book keeping: if its leaves B₁, B₂, B₃, B₄ bring a sequence of state transitions S₁→S₂→S₃→S₄→S₅ then the root proof attests to the validity of S₁→S₅.</p>\n<h1><a name=\"summary-7\" class=\"anchor\" href=\"https://community.starknet.io#summary-7\"></a>Summary</h1>\n<p>To conclude, applicative recursion unlocks frequent blocks and optimizes Starknet gas consumption. But some key questions remain:</p>\n<ol>\n<li>What should be the value of blobs per tree? Ethereum’s blob 1559 targets 3 blobs per block. More than 3 blobs per SNAR tree means a single state update transaction consumes more than three blocks whence the subsequent Ethereum block will face a higher blob price. Hence by sending such transactions too frequently we are shooting ourselves in the foot by raising our own prices. There are many interesting strategies here, ranging from never exceeding 3 blobs per tree, to spacing out occasional uses of 6.</li>\n<li>What block times should we aim for? The natural reply may “low as you can go”, but there’s a trade-off: each proof of a block must prove execution of SNOS, which is a significant overhead. How much is too much?</li>\n</ol>\n<p>Thoughts? Opinions? Memes? Post below!</p>\n            <p><small>4 posts - 2 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/upcoming-feature-starknet-applicative-recursion/113868\">Read full topic</a></p>","link":"https://community.starknet.io/t/upcoming-feature-starknet-applicative-recursion/113868","pubDate":"Sun, 07 Apr 2024 22:04:32 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113868"},"source":{"@url":"https://community.starknet.io/t/upcoming-feature-starknet-applicative-recursion/113868.rss","#text":"Upcoming Feature: Starknet Applicative Recursion"}},{"title":"Starknet Costs and Fees","dc:creator":"ilia","category":"🆙 Versions Upgrade","description":"<h1><a name=\"introduction-1\" class=\"anchor\" href=\"https://community.starknet.io#introduction-1\"></a>Introduction</h1>\n<p>Starknet has operating costs on one hand and transaction fees on the other. Currently, the main goal of Starknet’s transaction fee design is to cover operating costs without any profit at users’ expense. In this post we will explore the complexity around this design goal and how Starknet tackles it. For simplicity, we will focus on L1 costs throughout and disregard cloud costs.</p>\n<p>The post is divided as follows: part I explains the complexity, while part II gives concrete formulas for Starknet fees vs costs as a function of system parameters and demand.</p>\n<p>For the detailed cost structure and the formulas for costs vs fees, skip to part II.</p>\n<h1><a name=\"part-i-design-challenges-2\" class=\"anchor\" href=\"https://community.starknet.io#part-i-design-challenges-2\"></a>Part I: design challenges</h1>\n<p>Covering operating costs without any profit means we aim to be at net zero margin. To that end, the obvious proposal is to charge each transaction a fee equal to its operating cost. So let us begin with a fundamental question: if the operating cost of a transaction is X, why not just charge it a transaction fee of X?</p>\n<p>The answer is that some operating costs are not marginal: they are not derived from individual transactions. Instead these costs derive from Ethereum interaction, namely proof verification and state updates. Their key property is a fixed gas cost per action, independent of the very large number of Starknet transactions being compressed by Starknet. The proposal in the fundamental question covers marginal costs but neglects fixed costs, and is therefore refuted.</p>\n<p>We arrive at a new task: design transaction fees to cover both marginal and fixed costs at a net zero profit. But how to distribute fixed costs over transactions? The key observation is that every action incurring a fixed cost is triggered by hitting some limiting system parameter. For example, past Starknet blocks were always closed due to reaching a compute limit. How does this observation help? Well, if fixed costs are always triggered by a compute limit then we can associate the fixed cost with a certain amount of compute units. This leads to a natural price per compute unit that would perfectly cover fixed costs: the fixed cost divided by the limit amount of computation. For example, if the total fixed cost is 100 gas, and each block is closed at a limit of 10 compute steps, then the compute fee should be 10 gas/step. Generalizing, we find the following principle: the cost per unit of the limiting resource equals the fixed cost divided by its limit amount. Since we aim for net zero profit, the fee per unit of the limiting resource should equal its cost. In essence, a limiting resource returns us to the marginal setting: each transaction should cover its “limiting resource cost”.</p>\n<p>To summarize, we have arrived at the following proposal: the fee for a transaction should equal the sum of its marginal cost and its limiting resource cost. The journey appears complete: we have described a formula for transaction fees that covers operating costs at net zero profit. But alas, we come to a major hurdle:</p>\n<ol>\n<li>The limit amounts of various limiting resources are system parameters that often increase between Starknet versions: if we can batch more Starknet transactions per L1 operation then there’s no reason to wait for the next version – it’d just be a waste of resources. For example, increased block compute limits means that gas costs which are fixed per block are triggered after more computation than before.</li>\n<li>Such changes alter the cost per unit of the limiting resource.</li>\n<li>Transaction fee changes are coupled to Starknet versions, so the fee per unit cannot always match the cost per unit. Why the coupling? Because every fee change requires full node upgrades, and we want to minimize the resulting upgrade overhead.</li>\n</ol>\n<p>The consequences of this disparity depend a lot on the demand for the limiting resources, which can lead to overcharging users or undercharging them (i.e operating losses).</p>\n<p>Let us illustrate by example. Consider an intermediate block step limit increase between two Starknet versions, as in the following picture. Certainly the fee per step should be somewhere between the costs per step C/L₁ and C/L₂. But where? If most of the demand comes before the increase, then the cost is dominated by the higher cost per step, whence the fee should be around C/L₁. On the other hand, if most of the demand comes after the increase, then cost is dominated by the lower cost per step, whence the fee should be around C/L₂.</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/3/0/30675a523b7c5cdf045944a381334f4f619c5dcd.png\" data-download-href=\"/uploads/short-url/6UclL8i2pqdWAEPLvyBCbN54a3r.png?dl=1\" title=\"\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/3/0/30675a523b7c5cdf045944a381334f4f619c5dcd_2_624x439.png\" alt=\"\" data-base62-sha1=\"6UclL8i2pqdWAEPLvyBCbN54a3r\" width=\"624\" height=\"439\" role=\"presentation\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/3/0/30675a523b7c5cdf045944a381334f4f619c5dcd_2_624x439.png, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/3/0/30675a523b7c5cdf045944a381334f4f619c5dcd_2_936x658.png 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/3/0/30675a523b7c5cdf045944a381334f4f619c5dcd.png 2x\" data-dominant-color=\"1B1234\"></a></div><p></p>\n<p>We have seen how frequent changes to limit amounts vs infrequent changes to transaction fees introduce risk of non-zero net margin due to unpredictable demand. From here on there are two approaches to take:</p>\n<ol>\n<li>\n<p>A conservative approach, where fees are set to cover the current operating costs until the next version. In this approach, intermediate cost reductions are not transmitted to users until the next version. Hence, the system may enter a positive profit margin upon any intermediate cost reduction. In other words: users overpay.</p>\n</li>\n<li>\n<p>A more user-oriented approach, where fees are set to cover the estimated operating costs until the next version, taking intermediate cost reductions into account. This approach has the drawback of incurring risk on the Starknet operator: misestimations result in losses, and these estimations are no science!</p>\n<ol>\n<li>As we shall see in part II of the post, the unpredictability is exacerbated by the fact Starknet overcharges DA fees. We heuristically undercharge compute fees to counteract overcharging for DA.</li>\n<li>The misestimation risk is bounded by a very important dependence on demand: if resource limits are sufficiently high for full block fees to cover costs, then fees will cover costs given enough demand. In other words, assuming sufficiently high limits, enough TPS ensures transaction fees will cover operating costs.</li>\n</ol>\n</li>\n</ol>\n<p>Starknet takes the user-oriented approach.</p>\n<h1><a name=\"part-ii-fee-and-cost-formulas-3\" class=\"anchor\" href=\"https://community.starknet.io#part-ii-fee-and-cost-formulas-3\"></a>Part II: fee and cost formulas</h1>\n<h2><a name=\"structure-of-operating-costs-4\" class=\"anchor\" href=\"https://community.starknet.io#structure-of-operating-costs-4\"></a>Structure of operating costs</h2>\n<h3><a name=\"marginal-costs-5\" class=\"anchor\" href=\"https://community.starknet.io#marginal-costs-5\"></a>Marginal costs</h3>\n<p>Marginal, or per-tx costs, are clearly mapped to individual transactions. The canonical almost-example is DA (data availability) costs: if a Starknet transaction writes to a storage cell in the state, it incurs an operating cost of sending this update to Ethereum. Here, cost is in units of Ethereum gas. Why almost-example then? Because many writes to a particular storage cell within the same Starknet block will still result in just one update to Ethereum: the final new value. The second example of marginal operating costs are those of handling L1/L2 messages.</p>\n<h3><a name=\"fixed-costs-6\" class=\"anchor\" href=\"https://community.starknet.io#fixed-costs-6\"></a>Fixed costs</h3>\n<p>Non-marginal costs, i.e ones that cannot be directly mapped to transactions, will be referred to as fixed costs. There are two granularities of fixed costs in Starknet: fixed-per-block and fixed-per-train. Before recounting them, we should explain what a ‘train’ is? A train is a batch of blocks that is jointly verified by a single STARK proof verification on Ethereum.</p>\n<h4><a name=\"fixed-per-sharp-train-7\" class=\"anchor\" href=\"https://community.starknet.io#fixed-per-sharp-train-7\"></a>Fixed per SHARP train</h4>\n<p>The gas cost of verifying a proof of a train is fixed at a total of roughly 6M gas per train.</p>\n<ol>\n<li>3M gas\n<ol>\n<li>8x <a href=\"https://etherscan.io/tx/0xc841adc04d271a6abb603f29da3d76fb8008ebf1e3b316af73ea39547a664a4a\">Verify FRI</a></li>\n<li>3x <a href=\"https://etherscan.io/tx/0xdf68dffbea44ac2e99a227d8486f3d1bf1d12f773b4cad4fe7ae086410193d80\">Verify Merkle</a></li>\n</ol>\n</li>\n<li>2M gas for execution of verifier – part of <a href=\"https://etherscan.io/tx/0x16731babd1ba57874ff4b6554aab379785d986b2aa6b4513d68fd19673bb441a\">Verify Proof and Register</a></li>\n<li>1M gas calldata for sending proof – part of <a href=\"https://etherscan.io/tx/0x16731babd1ba57874ff4b6554aab379785d986b2aa6b4513d68fd19673bb441a\">Verify Proof and Register</a></li>\n</ol>\n<h4><a name=\"fixed-per-starknet-block-8\" class=\"anchor\" href=\"https://community.starknet.io#fixed-per-starknet-block-8\"></a>Fixed per Starknet block</h4>\n<p>There are several sources of fixed-per-block costs, for a total of roughly 215K gas per block</p>\n<ol>\n<li>23K gas per fact registration – part of <a href=\"https://etherscan.io/tx/0x16731babd1ba57874ff4b6554aab379785d986b2aa6b4513d68fd19673bb441a\">Verify Proof and Register</a></li>\n<li>56K gas per <a href=\"https://etherscan.io/tx/0x5af31a2fb4dd2467b8cf2372746d0fa444a87cf33869b7c5cea0edbbe7aabab8\">SHARP memory page 0</a></li>\n<li>136K gas per <a href=\"https://etherscan.io/tx/0x08ce859bc5d0eb7a5c159d50428841e88878691e378704aa636a968b2a7a3ee8\">State Update</a></li>\n</ol>\n<h2><a name=\"fee-and-cost-formulas-9\" class=\"anchor\" href=\"https://community.starknet.io#fee-and-cost-formulas-9\"></a>Fee and cost formulas</h2>\n<p>The fee per block is given by the following formula, where ‘csp’ is cairo step price, ‘dgp’ is data gas price, and ‘gp’ is gas price. The qualification of block user steps is meant to disregard steps that come from the Starknet operating system.</p>\n<p><span class=\"math\"> \\begin{aligned}\\text{fee per block} &amp; = \\text{csp}\\times \\text{block user steps}+\\text{dgp}\\times\\text{block dg sold}\n\\\\ &amp; =\\text{gp}\\times \\underbrace{0.0025}_\\text{gas per cs}\\times \\text{block user steps}+\\text{dgp}\\times\\text{block dg sold}\n\\end{aligned} </span></p>\n<p>The cost per block is slightly more complex. The total amount of gas associated with a block is the sum of 215K fixed-per-block that we have seen above and each block’s fractional part of the fixed-per-train gas. The previous sentence explained the first summand in the following formula. The second is simple: Ethereum transactions must pay for entire blobs, and Starknet the <a href=\"https://etherscan.io/tx/0x08ce859bc5d0eb7a5c159d50428841e88878691e378704aa636a968b2a7a3ee8\">State Update</a> transactions currently use at most one block.</p>\n<p><span class=\"math\"> \\text{cost per block} = \\text{gp}\\times\\frac{\\text{gas-per-train}+\\text{train-size}\\times \\text{gas-per-block}}{\\text{train size}}+\\text{blob price} </span></p>\n<p>Before computing any numbers, note that Starknet transaction fees charge per write, but its DA costs depend only on the number of memory cells that were updated and not the number of updates to each. Thus Starknet overcharges its DA fees. Note moreover that this margin increases with blocksize, since multiple writes to the same cells are more likely to occur in larger blocks. Note it is possible to resolve DA overcharging by implementing a “DA refund” feature, as in zkSync. In the category of DA fee reduction features, we have prioritized volition over refunds as we believe volition will reduce both fees and costs more significantly. Moreover, volition will also reduce operating costs, unlike DA refunds.</p>\n<h2><a name=\"some-numbers-and-break-even-conditions-10\" class=\"anchor\" href=\"https://community.starknet.io#some-numbers-and-break-even-conditions-10\"></a>Some numbers and break-even conditions</h2>\n<p>After the 4844 upgrade, Starknet incurred operating losses. In the first week they were substantial, with over 8 ETH lost per day and less than 20% of costs covered by fees. Ever since, a gradual and ongoing improvement process is bringing costs down. Over the last 5 days the average net loss is &lt;1.5 ETH per day, with fees covering over half the cost (82% on April 1). These improvements are underlain by two major factors:</p>\n<ol>\n<li>Block limits increase: the block step limit and blob data limit were both gradually increased. More resources per block increase the fees collected per block.\n<ul>\n<li>Demand is implicit here: in addition to step and data limits, blocks also have a time limit. If demand is insufficient, then blocks will close due to time limits without containing many resources. If demand is low then the fees collected per will be low regardless of its resource limits.</li>\n</ul>\n</li>\n<li>Data gas price increase, which amplifies the DA margin explained above. On March 28 Starknet was already covering half of its operating costs.</li>\n</ol>\n<p>Here are some examples of fees vs costs with given parameters. The crucial factor is demand because it determines the amount of resources contained in a block. Resource prices are also crucial.</p>\n<p>First, the current limits are 45M steps, a blob’s worth of felts, and a lifespan of 6 minutes. Let’s start with the following parameters, which are the average data over roughly 20 hours in the last few days.</p>\n<p><span class=\"math\"> \\text{gp}=20\\text{ gwei},\\;\\text{dgp}=60\\text{ gwei},\\;\\text{block user steps}=22.5\\text{M},\\;\\text{block dg sold}=128\\text{K},\\;\\text{gas per block}=246\\text{K},\\;\\text{train size}=192 </span></p>\n<p>we find that fees cover 69% of costs.</p>\n<p><span class=\"math\"> \\begin{aligned}\\text{fee per block} &amp; = 8.8\\text{M gwei} \\\\ \\text{cost per block} &amp; =12.8\\text{M gwei} \\\\ \\text{fee/cost per block} &amp; = 0.69 \\end{aligned} </span></p>\n<p>In practice fees covered closer to 55% of costs, mainly because of a “futures” phenomenon: transaction fees are charged according to gas prices, but operating costs are only paid later at different gas prices. On this particular day, the fluctuations favored users, exacerbating losses.</p>\n<p>Greater demand brings more steps and storage writes per block, as represented by the following parameters.</p>\n<p><span class=\"math\"> \\text{gp}=20\\text{ gwei},\\;\\text{dgp}=60\\text{ gwei},\\;\\text{block user steps}=30\\text{M},\\;\\text{block dg sold}=200\\text{K},\\;\\text{gas per block}=246\\text{K},\\;\\text{train size}=192 </span><br>\nIn this case we find that fees cover costs with a 6% margin!</p>\n<p><span class=\"math\"> \\begin{aligned}\\text{fee per block} &amp; = 13.5\\text{M gwei}\n\\\\ \\text{cost per block} &amp; =12.8\\text{M gwei} \\\\ \\text{fee/cost per block} &amp; = 1.06\n\\end{aligned} </span></p>\n<p>By configuring a longer block time, we can drive block resources even higher, but that’s a UX trade-off we are constantly thinking about. As for gas and data gas prices, a ratio dgp/gp≈3 seems reasonable when comparing the cost of a (nonzero) byte as 16 gas vs 1 data gas. Indeed a ratio of 3 means that blobs make DA 16/3≈5 times cheaper – similar to the folklore estimates that have been floating around for months.</p>\n<p>The tension between block frequency and L1 costs will be resolved by an upcoming feature called <span class=\"d-wrap\" data-wrap=\"color\" data-color=\"purple\" data-bgcolor=\"#\">applicative recursion</span>. It will both decouple block frequency from L1 costs and moreover reduce L1 costs further, allowing fees to cover costs. Read more about it <a href=\"https://community.starknet.io/t/upcoming-feature-starknet-applicative-recursion/113868\">here</a>!</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/starknet-costs-and-fees/113853\">Read full topic</a></p>","link":"https://community.starknet.io/t/starknet-costs-and-fees/113853","pubDate":"Thu, 04 Apr 2024 20:40:39 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113853"},"source":{"@url":"https://community.starknet.io/t/starknet-costs-and-fees/113853.rss","#text":"Starknet Costs and Fees"}},{"title":"STARKNET Analytics","dc:creator":"kaushik","category":"Support","description":"<p>Hey Guys,</p>\n<p>I’m from PYOR, a blockchain and analytical firm backed by  Castle Island and Coinbase Ventures, We provide customizable analytics dashboards for leading protocols like Compound, Tezos, Quickswap, and ICP.</p>\n<p>After working extensively with other data  we understood  that data points and analysis help make the protocol better so I’m curious to learn what kind of data and KPIs Starknet tracks</p>\n<p>Love to get answers from this community.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/starknet-analytics/113842\">Read full topic</a></p>","link":"https://community.starknet.io/t/starknet-analytics/113842","pubDate":"Tue, 02 Apr 2024 13:00:31 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113842"},"source":{"@url":"https://community.starknet.io/t/starknet-analytics/113842.rss","#text":"STARKNET Analytics"}},{"title":"Using STRK to pay for NFT or other items","dc:creator":"Leo","category":"🤷‍♀️ All-Purpose Hangout","description":"<p>It would be cool to integrate STRK as one of options to buy NFT.</p>\n<p>Or it could also be interesting to choose other token and pay with STRK which is swapped into the chosen currency during the transaction. This will facilitate user experience and have the power of Account Abstraction.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/using-strk-to-pay-for-nft-or-other-items/113837\">Read full topic</a></p>","link":"https://community.starknet.io/t/using-strk-to-pay-for-nft-or-other-items/113837","pubDate":"Tue, 02 Apr 2024 05:59:23 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113837"},"source":{"@url":"https://community.starknet.io/t/using-strk-to-pay-for-nft-or-other-items/113837.rss","#text":"Using STRK to pay for NFT or other items"}}]}}}