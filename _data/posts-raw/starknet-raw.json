{"rss":{"@version":"2.0","@xmlns:discourse":"http://www.discourse.org/","@xmlns:atom":"http://www.w3.org/2005/Atom","@xmlns:dc":"http://purl.org/dc/elements/1.1/","channel":{"title":"Starknet Community Forum - Latest topics","link":"https://community.starknet.io/latest","description":"Latest topics","lastBuildDate":"Sun, 26 May 2024 16:51:38 +0000","atom:link":{"@href":"https://community.starknet.io/latest.rss","@rel":"self","@type":"application/rss+xml"},"item":[{"title":"Optimistic parallelization revived","dc:creator":"FeedTheFed","category":"üìú Development Proposals","description":"<h1><a name=\"optimistic-parallelization-revived-1\" class=\"anchor\" href=\"https://community.starknet.io#optimistic-parallelization-revived-1\"></a>Optimistic parallelization revived</h1>\n<h2><a name=\"tldr-2\" class=\"anchor\" href=\"https://community.starknet.io#tldr-2\"></a>TL;DR</h2>\n<ul>\n<li>Optimistic parallelization is now being implemented on the Starknet sequencer in Rust</li>\n<li>Moar tps in Starknet 0.13.2</li>\n</ul>\n<h2><a name=\"introduction-3\" class=\"anchor\" href=\"https://community.starknet.io#introduction-3\"></a>Introduction</h2>\n<p><a href=\"https://starkware.co/resource/starknet-performance-roadmap/\">Back</a> in Starknet 0.10.2, we introduced optimistic parallelization to the sequencer as part of a series of efforts to improve the system‚Äôs throughput.</p>\n<p>In parallel, we worked to migrate the larger parts of the codebase to Rust. The result of this effort was the <a href=\"https://github.com/starkware-libs/blockifier\">blockifier</a>, Starknet‚Äôs new execution engine, which in turn relies on the Rust implementation of the <a href=\"https://github.com/lambdaclass/cairo-vm\">cairo-vm</a> by Lambdaclass.</p>\n<p>Given that the transition from Python to Rust outweighed most of the potentiatal performance improvements, the first iterations of the blockifier did not contain optimistic parallelization. After a few Starknet versions that focused on stability and fee reduction, we return to parallelization in order to reach the full potential of the Starknet sequencer.</p>\n<h2><a name=\"what-is-optimistic-parallelization-4\" class=\"anchor\" href=\"https://community.starknet.io#what-is-optimistic-parallelization-4\"></a>What is optimistic parallelization?</h2>\n<p>Naively, executing a block of transactions in parallel is impossible as different transactions may be dependent. This is illustrated in the following example. Consider a block with three transactions from the same user:</p>\n<ul>\n<li>Transaction A: swap USDC for ETH</li>\n<li>Transaction B: pay ETH for an NFT</li>\n<li>Transaction C: swap USDT for BTC</li>\n</ul>\n<p>Clearly, Tx A must happen before Tx B, but Tx C is entirely independent of both and can be executed in parallel. If each transaction requires 1 second to execute, then the block production time can be reduced from 3 seconds to 2 seconds by introducing parallelization.</p>\n<p>The crux of the problem is that we do not know the transaction dependencies in advance. In practice, only when we execute transaction B from our example do we see that it relies on changes made by transaction A. More formally, the dependency follows from the fact that transaction B reads from storage cells that transaction A has written to. We can think of the transactions as forming a dependency graph, where there is an edge from transaction A to transaction B iff A writes to a storage cell that is read by B, and thus has to be executed before B. The following figure shows an example of such a dependency graph:</p>\n<p><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/d/7/d7f32ac0707740d1b9bf477a66d3adee9cf03e1d.png\" alt=\"image\" data-base62-sha1=\"uOnDCsRQh5UPY3gnq32e8LlS3GB\" width=\"665\" height=\"330\"></p>\n<p>In the above example, each column can be executed in parallel, and this is the optimal arrangement (while naively, we would have executed transactions 1‚Äì9 sequentially).</p>\n<p>To overcome the fact that the dependency graph is not known in advance, we introduce optimistic parallelization, in the spirit of <a href=\"https://malkhi.com/posts/2022/04/block-stm/\">BLOCK-STM</a> developed by Aptos Labs, to the Starknet sequencer. Under this paradigm, we optimistically attempt to run transactions in parallel and re-execute upon finding a collision. For example, we may execute transactions 1‚Äì4 from figure 1 in parallel, only to find out afterward that Tx4 depends on Tx1. Hence, its execution was useless (we ran it relative to the same state we ran Tx1 against, while we should have run it against the state resulting from applying Tx1). In that case, we will re-execute Tx4.</p>\n<h2><a name=\"parallelization-in-the-blockifier-5\" class=\"anchor\" href=\"https://community.starknet.io#parallelization-in-the-blockifier-5\"></a>Parallelization in the blockifier</h2>\n<p>The entry point to the new parallelization infrastructure in the blockifier can be found in <a href=\"https://github.com/starkware-libs/blockifier/blob/df2799eafda4f575e71d63c839d14f5a38ca911d/crates/blockifier/src/concurrency.rs#L1\">concurrency.rs</a>. The Rust implementation follows the original BLOCK-STM paper more closely compared to the previous version of our optimistic parallelization. The scheduler tracks the tasks that remain to be done, these can be either validation tasks or execution tasks. Worker threads then query the scheduler for the next task, and communicate with a versioned state to obtain the latest known storage values. This is illustrated in the following diagram:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/8/5/850099e3e8117db4bb9507e2b399e21e87007798.jpeg\" data-download-href=\"/uploads/short-url/iYAN4uWEkZfIhfQknZ3UBA1S3ig.jpeg?dl=1\" title=\"\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/8/5/850099e3e8117db4bb9507e2b399e21e87007798_2_624x316.jpeg\" alt=\"\" data-base62-sha1=\"iYAN4uWEkZfIhfQknZ3UBA1S3ig\" width=\"624\" height=\"316\" role=\"presentation\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/8/5/850099e3e8117db4bb9507e2b399e21e87007798_2_624x316.jpeg, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/8/5/850099e3e8117db4bb9507e2b399e21e87007798_2_936x474.jpeg 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/8/5/850099e3e8117db4bb9507e2b399e21e87007798_2_1248x632.jpeg 2x\" data-dominant-color=\"F4F6F7\"></a></div><p></p>\n<p>Diagram: worker threads request the next task, and work on a versioned state (version i contains the writes of tx i). The execution itself is handled by the same code that handled sequential execution.</p>\n<p>The blockifier‚Äôs implementation contains an additional commit phase that isn‚Äôt part of the original BLOCK-STM paper. The motivation for this phase is to delay fee transfers to the sequencer (which, if unhandled separately, leads any two transactions to collide due to reading &amp; writing the sequencer‚Äôs balance). If all transactions before transaction <code>i</code> are committed, then the fee transfer is applied alongside an additional check to see whether or not the transaction can fit into a block. If both tests pass, the i‚Äôth transaction is committed.</p>\n<h2><a name=\"whats-next-6\" class=\"anchor\" href=\"https://community.starknet.io#whats-next-6\"></a>What‚Äôs next</h2>\n<p>Several potential improvements to the blockifier‚Äôs implementation of BLOCK-STM will be added down the road. At the moment, accesses to VersionedState are mutually exclusive; this can be relaxed to locking only over the particular addresses that we want to read/write from.</p>\n<p>Another direction to explore is adding language features that will allow contract developers to write more ‚Äúparallelizable‚Äù code. For example, when performing a commutative operation on storage values today, one has to read the value, apply the operation, and write the new value. This means that although the underlying operation is commutative, any two transactions that perform it will have a read/write collision. If, however, the smart contract language has primitives that encapsulate ‚Äúatomic storage manipulation‚Äù, then these can be used to enhance parallelization. For example, consider u256 addition. If we want to add some value to a storage slot (as happens when updating the sequencer‚Äôs balance due to fee payments), we can call an ad-hoc <code>increment(storage_address, value)</code> operation that does not necessarily lead two transactions that apply increment to the same address to collide. Collision will only happen if the first operation results in an overflow. This direction was explored in more depth in a <a href=\"https://arxiv.org/pdf/2405.06117\">recent paper</a> by AptosLabs, where they introduce the notion of ‚Äúdeferred object‚Äù to the smart contract language.</p>\n<p>Finally, while mostly targeted for the sequencing layer, the parallelization infrastructure can be used by full nodes to optimize re-execution. The improvement is even more significant for nodes, since they can get the optimal ordering via the dependency graph produced by the original execution.</p>\n<h2><a name=\"summary-7\" class=\"anchor\" href=\"https://community.starknet.io#summary-7\"></a>Summary</h2>\n<p>As of Starknet 0.13.2, parallelization is back on the menu. Parallelization, along with AOT compilation via the <a href=\"https://github.com/lambdaclass/cairo_native\">cairo-native</a> project that is planned for 0.13.3, will unleash the full potential of Starknet, reaching throughput that is only possible on a validity rollup.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/optimistic-parallelization-revived/114121\">Read full topic</a></p>","link":"https://community.starknet.io/t/optimistic-parallelization-revived/114121","pubDate":"Sun, 26 May 2024 16:51:38 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114121"},"source":{"@url":"https://community.starknet.io/t/optimistic-parallelization-revived/114121.rss","#text":"Optimistic parallelization revived"}},{"title":"SNIPs: process revival","dc:creator":"ilia","category":"üìú Development Proposals","description":"<h1><a name=\"introduction-1\" class=\"anchor\" href=\"https://community.starknet.io#introduction-1\"></a>Introduction</h1>\n<p>SNIPs (Starknet Improvement Proposals) are the Starknet analogue of Ethereum EIPs. However, in the current state of affairs, there are aspects in which a SNIP differs from an EIP both in its purpose and in its (lack of) processing. As pointed out by the community, little attention has been devoted to the topic over the past few months. The purpose of this text is to revive the SNIP process and propose short-term improvements.</p>\n<h1><a name=\"eip-vs-snip-today-2\" class=\"anchor\" href=\"https://community.starknet.io#eip-vs-snip-today-2\"></a>EIP vs SNIP today</h1>\n<p>The fundamental difference is in handling protocol-level improvement proposals, i.e those which require protocol changes. Ethereum, being decentralized, requires ‚Äúmeta-consensus‚Äù on protocol changes among validators and subsequently among client teams. The Ethereum Foundation is a considerable driving force for EIPs, but it does not directly control block proposals. Starknet, in its currently centralized state, strictly requires involvement of the Starknet core teams in StarkWare to implement protocol changes.</p>\n<p>Since genesis, almost all protocol-level changes (e.g. version features) have not gone through the full SNIP route, having been decided internally instead. Overall we think this is sensible and justified by the need to move and add features much faster than in Ethereum. That being said, the long term objective is clear: when Starknet is decentralized and mature, the process will closely mirror the Ethereum EIP protocol.</p>\n<p>Thus we are left with the question of short-medium term: on the one hand, iterations and versions are still frequent compared to Ethereum. On the other hand, we want to step toward a SNIP process that approaches the ‚Äúreal thing‚Äù over time.</p>\n<h1><a name=\"short-medium-term-proposal-3\" class=\"anchor\" href=\"https://community.starknet.io#short-medium-term-proposal-3\"></a>Short-medium term proposal</h1>\n<p>Following <a href=\"https://github.com/starknet-io/SNIPs/blob/main/SNIPS/snip-1.md\">SNIP-1</a>, GitHub remains the place to submit SNIPs and is the source of truth for their documentation. Other media are for discussions and ‚Äúadvertising‚Äù.</p>\n<h2><a name=\"the-process-4\" class=\"anchor\" href=\"https://community.starknet.io#the-process-4\"></a>The process</h2>\n<ol>\n<li>Author submits SNIP.</li>\n<li>Following <a href=\"https://github.com/starknet-io/SNIPs/blob/main/SNIPS/snip-1.md#snip-editor-responsibilities\">SNIP-1#Editor Responsibilities</a>, the editor performs syntactic checks. If the checks pass then merge to main. Otherwise reject.</li>\n<li>After merge to main, the author should change status to review and begin discussions on the community forum, which is the intended domain for discussing SNIPs. The author has edit permissions and is free to modify their proposal at will.</li>\n<li>SNIPs enter stale status after 6 months and require an editor (SW) to revive.</li>\n<li>An editor can change the status to last call which activates a two week timer. Assuming no other actions, a SNIP in last call status automatically becomes final when the timer runs out.</li>\n</ol>\n<h2><a name=\"what-does-it-really-mean-to-finalize-5\" class=\"anchor\" href=\"https://community.starknet.io#what-does-it-really-mean-to-finalize-5\"></a>What does it really mean to finalize?</h2>\n<p>During the centralized phase of Starknet, finalization has two essential steps: entering the roadmap and running in production. In the decentralized phase, finalization means sufficiently widespread adoption among Starknet operators and full nodes.</p>\n<h2><a name=\"what-will-change-now-6\" class=\"anchor\" href=\"https://community.starknet.io#what-will-change-now-6\"></a>What will change now?</h2>\n<p>The Starknet core teams are committed to much greater responsiveness, both on GitHub and in Community Forum discussions. Specifically, feel free to ping <a class=\"mention\" href=\"https://community.starknet.io/u/ilia\">@ilia</a>, <a class=\"mention\" href=\"https://community.starknet.io/u/ohad-starkware\">@Ohad-StarkWare</a>, <a class=\"mention\" href=\"https://community.starknet.io/u/feedthefed\">@FeedTheFed</a>, and <a class=\"mention\" href=\"https://community.starknet.io/u/leo_l\">@Leo_L</a>!</p>\n<h2><a name=\"what-now-7\" class=\"anchor\" href=\"https://community.starknet.io#what-now-7\"></a>What now?</h2>\n<p>Write SNIPs! <img src=\"https://emoji.discourse-cdn.com/twitter/scissors.png?v=12\" title=\":scissors:\" class=\"emoji\" alt=\":scissors:\" loading=\"lazy\" width=\"20\" height=\"20\"><img src=\"https://emoji.discourse-cdn.com/twitter/scissors.png?v=12\" title=\":scissors:\" class=\"emoji\" alt=\":scissors:\" loading=\"lazy\" width=\"20\" height=\"20\"><img src=\"https://emoji.discourse-cdn.com/twitter/scissors.png?v=12\" title=\":scissors:\" class=\"emoji\" alt=\":scissors:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/snips-process-revival/114075\">Read full topic</a></p>","link":"https://community.starknet.io/t/snips-process-revival/114075","pubDate":"Sun, 12 May 2024 14:41:16 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114075"},"source":{"@url":"https://community.starknet.io/t/snips-process-revival/114075.rss","#text":"SNIPs: process revival"}},{"title":"Rebuilding Trust with a New StarkNet Airdrop Strategy","dc:creator":"AngeloBas","category":"ü§∑‚Äç‚ôÄÔ∏è All-Purpose Hangout","description":"<p>In light of the recent challenges faced during the StarkNet airdrop, which unfortunately led to dissatisfaction and a decline in user engagement within the ecosystem, I propose a revitalized approach to re-engage our community and restore confidence.</p>\n<p><strong>Background:</strong></p>\n<p>The previous StarkNet airdrop encountered significant issues that affected the community‚Äôs perception and participation. These problems led to many users departing from the ecosystem leaving us with  <img src=\"https://emoji.discourse-cdn.com/twitter/8ball.png?v=12\" title=\":8ball:\" class=\"emoji\" alt=\":8ball:\" loading=\"lazy\" width=\"20\" height=\"20\"> users.</p>\n<hr>\n<p><strong>Rebuilding Trust with a New StarkNet Airdrop Strategy</strong></p>\n<p>In light of the recent challenges faced during the StarkNet airdrop, which unfortunately led to dissatisfaction and a decline in user engagement within the ecosystem, I propose a revitalized approach to re-engage our community and restore confidence.</p>\n<p><strong>Background:</strong> The previous StarkNet airdrop encountered significant issues that affected the community‚Äôs perception and participation. These problems led to many users departing from the ecosystem, looking for stability and reliability that were perceived as lacking.</p>\n<p><strong>Proposed Airdrop Using a New Unlock System:</strong></p>\n<p>To address these issues and incentivize users to rejoin and continue supporting the StarkNet ecosystem, I propose a new airdrop mechanism integrated with a sophisticated contract. This system will not only distribute tokens but will also encourage long-term engagement and investment in the ecosystem.</p>\n<p><strong>Key Features of the Proposed Airdrop:</strong></p>\n<ol>\n<li><strong>Unlock Contract Integration:</strong></li>\n</ol>\n<ul>\n<li>Users will receive airdropped Strk and Eth which will unlock after 6 months within a specially designed smart contract on StarkNet.</li>\n<li>This contract will manage and store Stark, Eth and potentially other tokens with a clear and user-friendly unlock schedule.</li>\n</ul>\n<ol start=\"2\">\n<li><strong>Engagement Through Utility:</strong></li>\n</ol>\n<ul>\n<li>Unlike traditional airdrops, users can actively use their airdropped tokens, from day 1 (meaning its still locked) within the StarkNet ecosystem to purchase other tokens (which will stay on the contract) or pay for gas fees. This utility ensures that tokens are more than just a passive reward ‚Äî they are a means to explore and grow within the platform.</li>\n</ul>\n<ol start=\"3\">\n<li><strong>Resetting Lock Through Activity:</strong></li>\n</ol>\n<ul>\n<li>When a user utilizes their airdropped tokens to acquire new tokens, the unlock period for these new tokens will automatically reset to 6 months (reset for that specific token, meaning that, for example, a user doesn‚Äôt interact with Strk but with Eth, the Strk unlock period wouldn‚Äôt change but the Eth would). This mechanism encourages ongoing interaction with the ecosystem and gradual integration of users into various services and offerings available on StarkNet.</li>\n</ul>\n<ol start=\"4\">\n<li><strong>Secure and Gradual Withdrawal:</strong></li>\n</ol>\n<ul>\n<li>Post-unlock, users can securely withdraw their tokens to their personal wallets, providing them with full control over their assets after they have engaged with the ecosystem over the lock period.</li>\n</ul>\n<p><strong>Benefits:</strong></p>\n<ul>\n<li><strong>Restores Trust:</strong> By addressing the shortcomings of the previous airdrop and providing a clear, user-centric approach.</li>\n<li><strong>Encourages Long-Term Engagement:</strong> Ensures that users are invested in the ecosystem for a longer period, enhancing stability and growth.</li>\n<li><strong>Promotes Active Participation:</strong> Encourages users to explore and use their tokens within the ecosystem, increasing transaction volume and liquidity.</li>\n<li><strong>Builds a Resilient User Base:</strong> Attracts and retains users who are genuinely interested in the development and success of the StarkNet platform.</li>\n</ul>\n<p><strong>Conclusion:</strong></p>\n<p>This new airdrop strategy is designed to rebuild trust and provide tangible benefits to our community. By leveraging a robust unlock system, we can ensure that the StarkNet ecosystem not only recovers but thrives, with an active and committed user base dedicated to its long-term success.<br>\nLet‚Äôs focus on community. After all we can have the best piece of art but if it sits in a closet no one appreciates it.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/rebuilding-trust-with-a-new-starknet-airdrop-strategy/114064\">Read full topic</a></p>","link":"https://community.starknet.io/t/rebuilding-trust-with-a-new-starknet-airdrop-strategy/114064","pubDate":"Thu, 09 May 2024 05:46:37 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114064"},"source":{"@url":"https://community.starknet.io/t/rebuilding-trust-with-a-new-starknet-airdrop-strategy/114064.rss","#text":"Rebuilding Trust with a New StarkNet Airdrop Strategy"}},{"title":"Two new things you can do with the Stone prover TODAY","dc:creator":"LandauRaz","category":"ü§∑‚Äç‚ôÄÔ∏è All-Purpose Hangout","description":"<p>In August 2023, Starknet took a big leap forward in decentralizing its technology and empowering the developer community to build upon it independently by open-sourcing its battle-tested Stone prover. And indeed, the community (you!) <a href=\"https://starkware.co/resource/unleashing-the-power-of-the-stone-prover/\">stepped to the challenge</a> and has since done truly astounding work to extend Stone‚Äôs capabilities, including two that are already available today:</p>\n<ol>\n<li><strong>Using Stone to Prove Cairo Programs:</strong> Stone has been in production since June 2020, playing a critical role in proving transactions from decentralized applications powered by StarkWare such as StarkEx and Starknet. Back in 2020, however, Cairo was a very different language, and as such Stone was built to prove an older version of it (<a href=\"https://starkware.co/resource/the-whats-what-of-the-cairo-world/\">now known as Cairo Zero</a>) ‚Äì but no more! Thanks to the mighty <a href=\"https://lambdaclass.com/\">LambdaClass team</a>, Stone is now capable of proving both <a href=\"https://github.com/starkware-libs/stone-prover?tab=readme-ov-file#creating-and-verifying-a-proof-of-a-cairo-program\">Cairo</a>  and <a href=\"https://github.com/starkware-libs/stone-prover?tab=readme-ov-file#creating-and-verifying-a-proof-of-a-cairozero-program\">Cairo Zero</a> programs</li>\n<li><strong>Verifying Stone Proofs on Starknet:</strong> Obviously, generating proofs (either of Cairo or Cairo Zero programs) won‚Äôt get you far without verifying them. Moreover, the generated proofs are only as secure as the entity that verifies them ‚Äì which is precisely why this verification needs to be onchain. So far, however, Stone proofs could only be verified offchain using the C++ verifier available in the Stone codebase ‚Äì but no more! Thanks to the incredible <a href=\"https://herodotus.dev/\">Herodotus team</a>, you can now use the <a href=\"https://integrityverifier.com/\">Integrity verifier</a> to verify Stone proofs <a href=\"https://sepolia.starkscan.co/tx/0x2bdc63690e345a1511732ae00994bda30a66429876006ae704e54e229021b17\">on Starknet</a>.</li>\n</ol>\n<p>‚ÄúWhat about <strong>using Stone to power</strong> <a href=\"https://starkware.co/resource/what-are-appchains/\"><strong>Starknet Appchains</strong></a>‚Äù, you say? The missing piece of this puzzle is the <a href=\"https://github.com/starkware-libs/cairo-lang/blob/master/src/starkware/starknet/core/os/os.cairo\">Starknet OS program</a>, whose job is to verify the validity of Starknet blocks. So far, however, the execution of the Starknet OS was solely supported via the old and only partially open-sourced Pythonic infrastructure ‚Äì but no more! The amazing <a href=\"https://moonsonglabs.com/\">Moongsong Labs team</a> is <a href=\"https://github.com/keep-starknet-strange/snos\">hard at work</a> on enabling the Starknet OS to be executed using the new and fully open-source Rusty infrastructure.</p>\n<p>More will follow and be described later, but for now, you‚Äôre more than welcome to join the <a href=\"https://t.me/+NitbGEoPtnphNDM0\">Stonehenge TG group</a> and start building <img src=\"https://emoji.discourse-cdn.com/twitter/moyai.png?v=12\" title=\":moyai:\" class=\"emoji\" alt=\":moyai:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/two-new-things-you-can-do-with-the-stone-prover-today/114056\">Read full topic</a></p>","link":"https://community.starknet.io/t/two-new-things-you-can-do-with-the-stone-prover-today/114056","pubDate":"Wed, 08 May 2024 05:59:25 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114056"},"source":{"@url":"https://community.starknet.io/t/two-new-things-you-can-do-with-the-stone-prover-today/114056.rss","#text":"Two new things you can do with the Stone prover TODAY"}},{"title":"EVM compatibility for games and MUD on Starknet?","dc:creator":"Damian995","category":"ü§∑‚Äç‚ôÄÔ∏è All-Purpose Hangout","description":"<p>It‚Äôs such a delight that 2 million $STRK are granted to Realms by starknet foundation. I feel that Starknet should be the home of autonomous worlds more than ever.</p>\n<p>Even after the storm of dissatisfaction over the Starknet airdrop on Twitter on February 20th (why so specific? It‚Äôs my wife‚Äôs birthday!) I‚Äôve been riding the high waves of builder confidence, fiery passion, and bold ambitions from the ETHDenver Dojo Ninja Cafe to ETHGlobal London‚Äôs AW Research‚Äôs Hacker House, and all the way to the Starknet Meetup at the HK Web3 Festival.</p>\n<p>But three weeks ago, I landed in Lisbon for the Autonomous Anonymous conference, and man, was I in for a ride! The game composability that I had been eagerly awaiting on Starknet unfolded dramatically right before my eyes during a whirlwind two-day hackathon. I even got my hands dirty and tweaked a game called ‚ÄòDownstream Utopia‚Äô using Playmint‚Äôs toolkit. Over those three days, despite the cool demos like ‚ÄòDope War‚Äô and ‚ÄòLoot Survivor,‚Äô perhaps due to a fear of the Cairo language or just unfamiliarity with Starknet‚Äôs gaming ecosystem, out of over 20 projects, iirc, only one took on ‚ÄòDope War.‚Äô As a builder who‚Äôs built modifications to spice up ‚ÄòLoot Survivor,‚Äô I felt a pinch of disappointment, and even caught a whiff of mockery in the tg group.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/2/0/20691a0fa8a85089997f28bb9a770c34ce2abfda.jpeg\" data-download-href=\"/uploads/short-url/4CIsqXhoCrkgjjC0KShtbHqXG2e.jpeg?dl=1\" title=\"WechatIMG4201\" rel=\"noopener nofollow ugc\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/2/0/20691a0fa8a85089997f28bb9a770c34ce2abfda_2_338x500.jpeg\" alt=\"WechatIMG4201\" data-base62-sha1=\"4CIsqXhoCrkgjjC0KShtbHqXG2e\" width=\"338\" height=\"500\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/2/0/20691a0fa8a85089997f28bb9a770c34ce2abfda_2_338x500.jpeg, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/2/0/20691a0fa8a85089997f28bb9a770c34ce2abfda_2_507x750.jpeg 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/2/0/20691a0fa8a85089997f28bb9a770c34ce2abfda_2_676x1000.jpeg 2x\" data-dominant-color=\"232B35\"></a></div><p></p>\n<p>Over the last year, we‚Äôve run some wild experiments in Starknet‚Äôs gaming ecosystem and even pulled in a bunch of game developers keen on Starknet by translating Dojo‚Äôs docs into Chinese. We even rewrote ‚ÄòCrypts &amp; Caverns‚Äô in Cairo‚Äîtwice, thanks to some fun updates. We deployed it onto Katana, aiming to mesh it perfectly with Eternum (big thanks to Loaf). At last year‚Äôs Starknet Istanbul Hacker House, we whipped up a product called ‚ÄòRyogae‚Äô to tackle the swap issues of non-token assets in the Autonomous World. We‚Äôve crafted character generation modules, game governance modules etc. I know I‚Äôm not alone in this, but we haven‚Äôt managed to rally a devoted troop of onchain game devs like Lattice did with Mud, without even dangling the carrot of airdrops!</p>\n<p>Just last weekend,  Redstone officially launched its mainnet, bombarded with games! The bull market is peeking around the corner‚Äîas Moody hinted in his proposal (<a href=\"https://community.starknet.io/t/second-third-fourth-user-airdrop-making-starknet-happen/113907\" class=\"inline-onebox\">Second (Third, Fourth, ‚Ä¶) User Airdrop - Making Starknet Happen</a>) ‚ÄúThe opportunity cost of building for Starknet vs. all-other-EVM-based-L2s is currently too great.‚Äù  - it‚Äôs tough getting devs to pick up a new programming language. But I‚Äôm betting more onchain gaming devs will come to Starknet to deploy games if  written in Solidity. Then, they can get a taste of Starknet‚Äôs slick tech, and dive into learning Cairo to craft even more intricate games.</p>\n<p>Back in EDCON 2023 <a class=\"mention\" href=\"https://community.starknet.io/u/eli\">@Eli</a> said and here I quote ‚ÄúTypically, you would write the first version of your software in Python, but when you want to scale, you need to use other highly efficient languages like C++, WASM, or Rust. I believe the same thing will happen with Cairo; you might deploy Solidity code on Kakarot, but that‚Äôs like using Python to write a high-frequency trading engine, which isn‚Äôt suitable. You would need to write in another language, and that other language will be Cairo.‚Äù</p>\n<p>I think that we should have an EVM-compatible gaming solution on Starknet and explore the interoperability and compatibility between Starknet and Redstone or any other fully onchain game. I hope we can see items crafted in This Cursed Machine then sold in Dope War, and adventurers in loot survivor show up in downstream or biome. This is how we started back in 2022, build worlds not walled gardens, however I am concerned about being left behind or even isolated because of the Cairolang barrier.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/3/e/3ecce48d2b56e9912645cac66995ad329b2d4287.jpeg\" data-download-href=\"/uploads/short-url/8XyAcB4gEBo5foGK48n4lYY80hF.jpeg?dl=1\" title=\"WechatIMG4202\" rel=\"noopener nofollow ugc\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/3/e/3ecce48d2b56e9912645cac66995ad329b2d4287_2_500x500.jpeg\" alt=\"WechatIMG4202\" data-base62-sha1=\"8XyAcB4gEBo5foGK48n4lYY80hF\" width=\"500\" height=\"500\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/3/e/3ecce48d2b56e9912645cac66995ad329b2d4287_2_500x500.jpeg, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/3/e/3ecce48d2b56e9912645cac66995ad329b2d4287_2_750x750.jpeg 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/3/e/3ecce48d2b56e9912645cac66995ad329b2d4287_2_1000x1000.jpeg 2x\" data-dominant-color=\"838383\"></a></div><p></p>\n<p>I am passionate about permissionless and composable autonomous worlds. Any like-minded pals out there keen to join forces on a product that can onboard more game devs?</p>\n            <p><small>7 posts - 3 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/evm-compatibility-for-games-and-mud-on-starknet/114050\">Read full topic</a></p>","link":"https://community.starknet.io/t/evm-compatibility-for-games-and-mud-on-starknet/114050","pubDate":"Tue, 07 May 2024 14:24:12 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114050"},"source":{"@url":"https://community.starknet.io/t/evm-compatibility-for-games-and-mud-on-starknet/114050.rss","#text":"EVM compatibility for games and MUD on Starknet?"}},{"title":"How will Binius affect Starknet?","dc:creator":"Honza","category":"üìú Development Proposals","description":"<p>I‚Äôve dig a little bit into Binius after Vitalik‚Äôs <a href=\"https://vitalik.eth.limo/general/2024/04/29/binius.html\" rel=\"noopener nofollow ugc\">blog post</a> and it seems that it will be possible to create more efficient proofs using it. The proofs are larger (few MB) but <a href=\"https://blog.lambdaclass.com/binius-moving-zk-forward/\" rel=\"noopener nofollow ugc\">apparently</a> they could be wrapped inside SNARK or STARK proof.<br>\nSTARKs have had the advantage of being the most efficient zk proofs but that is coming into question.</p>\n<p>How will this innovation affect Starknet?</p>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/how-will-binius-affect-starknet/114029\">Read full topic</a></p>","link":"https://community.starknet.io/t/how-will-binius-affect-starknet/114029","pubDate":"Tue, 30 Apr 2024 15:01:31 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114029"},"source":{"@url":"https://community.starknet.io/t/how-will-binius-affect-starknet/114029.rss","#text":"How will Binius affect Starknet?"}},{"title":"Rescuing Starknet¬†: 3 (simple) ideas to increase volumes and TVL üö®","dc:creator":"RiskTaker.eth","category":"ü§∑‚Äç‚ôÄÔ∏è All-Purpose Hangout","description":"<p><strong>How to save Starknet : 3 (simple) ideas</strong></p>\n<p>Hi, I‚Äôm RiskTaker, I‚Äôm part of many DeFi/airdrop farming communities. Sure, we are the ones that put money on a new ecosystem, only to get a bounty 6 months later. But we usually are the early adopters, since we can handle risks better than any other retail investor, and we are small enought to thrive even when liquidity is thin. So, our opinion might be usefull <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/0/3/03dd0a587c94dfe99e267133024c2d921404a4a8.jpeg\" data-download-href=\"/uploads/short-url/yb0zNaZstKbEZICo1UNoVk3LyE.jpeg?dl=1\" title=\"64afbc832e07de17e65767d5_ambulance-cars-in-a-row-on-a-parking-of-hospital-2022-06-28-09-39-24-utc-min\" rel=\"noopener nofollow ugc\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/0/3/03dd0a587c94dfe99e267133024c2d921404a4a8_2_690x345.jpeg\" alt=\"64afbc832e07de17e65767d5_ambulance-cars-in-a-row-on-a-parking-of-hospital-2022-06-28-09-39-24-utc-min\" data-base62-sha1=\"yb0zNaZstKbEZICo1UNoVk3LyE\" width=\"690\" height=\"345\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/0/3/03dd0a587c94dfe99e267133024c2d921404a4a8_2_690x345.jpeg, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/0/3/03dd0a587c94dfe99e267133024c2d921404a4a8_2_1035x517.jpeg 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/0/3/03dd0a587c94dfe99e267133024c2d921404a4a8_2_1380x690.jpeg 2x\" data-dominant-color=\"988E8C\"></a></div><br>\n<em>Rescue team is here guys !</em><p></p>\n<p>Here is the thing : Starknet has quite a bad reputation now in DeFi/farming communities. No need to explain, it‚Äôs not the point here and it‚Äôs been discused hundreds of time</p>\n<p>So, how can we increase Starknet‚Äô liquidity, and turn it from a ¬´ cool tech no one care about¬ª chain to a ¬´ liquidity leader ¬ª everyone want to use ?</p>\n<p>Here are 3 ideas I‚Äôve had. None of them imply a second STRK airdrop (but it would help, of course). I‚Äôm not the only one who had this ideas for sure, but they have the power to make Starknet (at least) 5 times bigger in the span of 6 months. They aren‚Äôt meant to add $2B TVL each, but they would change the reputation of Starknet and turn it into ¬´ the cool kid ¬ª. Training wheel is not moving right now, so we need to work on it <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>Let‚Äôs go !</p>\n<p><strong>1. Bridge LRTs to Starknet to raise awareness</strong></p>\n<p>Sadly, it‚Äôs a little bit late since ETHFI#1 is done and REZ#1 is going to be distributed in early may, it would have been perfect 3 months ago (when LRTs were only avalaible on Ethereum and Arbitrum). But it still is a no brainer !</p>\n<p>LRTs is THE defi trend of 2024. People right now want to play with eETH (<a href=\"http://ether.fi\" rel=\"noopener nofollow ugc\">ether.fi</a>), ezETH (Renzo), rswETH (Swell) and many others. EigenLayer could be one of the biggest airdrop of all times, and a whole new field of innovation. ETHFI <span class=\"hashtag-raw\">#1</span> (etherfi) itself airdropped ~$300M to users. So, hype is real for sure !</p>\n<p>Biggest LRTs (ezETH and eETH) ara available on Ethereum, Arbitrum, Mode, Base and Linea</p>\n<p>Let‚Äôs talk about Mode. It‚Äôs another useless L2, who only exists to launch a token (users are aware about that). TVL right now is $325M, with no native Mode token. Out of these 325M, ezETH is $141M ! That‚Äôs a 43 % !! And we could add eETH and Stone‚Ä¶</p>\n<p>Bridging LRTs right now would not incease Starknet TVL by $500M obviously (and it‚Äôs a bit late), but it would change people‚Äôs mind from ¬´ I have no airdrop, I hate you ¬ª to ¬´ okay, so I can farm 2 x Renzo (or whatever) + EigenLayer + Nostra (or whatever DeFi protocol) + Starknet <span class=\"hashtag-raw\">#2</span>, that‚Äôs cool ¬ª.</p>\n<p>Adding at least one top 4 LRT (etherfi, Renzo, Kelp, Swell) to Starknet would change people‚Äôs mind. Starknet wouldn‚Äôt look like this isolated pacific island, it would be like archipelago of Japan : independant, but close to Ethereum ecosystem</p>\n<p>Then, adding 1 or 2 exotic LRT would be cool, since it would be waaaay cheaper than on Ethereum. If peg is good, people will swap in order to farm something instead of just holding ETH on zkLend or whatever</p>\n<p>Exemple : Inception, Genesis, Claystak, Diva Staking</p>\n<p>(Since Starknet is not EVM, you‚Äôll probably need to negociate a little bit with teams in order to guarantee users would get their points/airdrop)</p>\n<p>I would personnaly farm LRTs on Starknet, instead of holding useless ETH.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/1/3/134445c2416eb039896c6d9a538574f9e71314eb.jpeg\" data-download-href=\"/uploads/short-url/2KrlovtfhU0FGlmWBKQwZlXifov.jpeg?dl=1\" title=\"eigenlayer\" rel=\"noopener nofollow ugc\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/1/3/134445c2416eb039896c6d9a538574f9e71314eb_2_690x382.jpeg\" alt=\"eigenlayer\" data-base62-sha1=\"2KrlovtfhU0FGlmWBKQwZlXifov\" width=\"690\" height=\"382\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/1/3/134445c2416eb039896c6d9a538574f9e71314eb_2_690x382.jpeg, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/1/3/134445c2416eb039896c6d9a538574f9e71314eb_2_1035x573.jpeg 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/1/3/134445c2416eb039896c6d9a538574f9e71314eb_2_1380x764.jpeg 2x\" data-dominant-color=\"1F2023\"></a></div><br>\n<em>Who doesn‚Äôt love Eigen points ?</em><p></p>\n<p><strong>2. Add a Pendle-like protocol to make people happy</strong></p>\n<p>Okay, Starknet is supposed to be neutral so I might be wrong, but Abdel asked about ideas so here are mines.</p>\n<p>Pendle is the pinacle of 2024 DeFi : it‚Äôs super-powerfull, kind of hard to understand, but can change lives. That‚Äôs what people love !</p>\n<p>A whale can use Pendle to earn +6 % ETH in only 2 months. A shrimp (such a me) can use Pendle to earn +$10k airdrops in 6 months. That‚Äôs what is so incredible with yield markets.</p>\n<p>After bridging LRTs to Starknet, people would need to play with it. Providing liquidity/lending is cool, but it‚Äôs not hard enought for some people, we are not in 2021 anymore. So, people (including me) are using Pendle to farm 15 times faster. Others are making a juicy +40 % APR yield on eth (wich is incredible, it‚Äôs 10 times higher than staking rewards).</p>\n<p>Using a yield market can be tricky when you‚Äôre a newbie, so I would suggest to copy/paste the frontend of Pendle. It would reduce friction a lot</p>\n<p>PENDLE market cap is <span class=\"math\">600M right now, token made a 100x. So, buying PENDLE months ago was a juicy move. Having a yield market would directly increase Starknet attractiveness, since users would have a brand new (juicy?) airdrop to farm. Many people are affraid Ekubo/Nostra/Avnu airdrops will be disapointed (let say, 140</span> for 6 months lending/LP). From a marketing POV, we need a Jito-like airdrop : huge amounts, to not-so-many people. That‚Äôs exacty what Pendle is : huge amounts, not-so-many people.</p>\n<p>And, obviously, it would still be used after LRTs trend fade, in order to farm new things and new protocols (such as Ethena recently)</p>\n<p>DEX/money markets were 2021 DeFi essentials. Perp was 2022 DeFi bare minimum. Yield markets are 2024 must-have <img src=\"https://emoji.discourse-cdn.com/twitter/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p><strong>3. Connect to Hyperlane for the HYPE</strong></p>\n<p>Not sure about this one, but Hyperlane is a thriving protocol. People are using it to farm HYPE airdrop, but bridging throught Hyperlane is also very quick (and not so expansive). Since it‚Äôs permissionless, you don‚Äôt need to pay in order to use it (as a protocol). And it‚Äôs chain agnostic, it can be used on an EVM chain, a Cosmos chain, etc. So why not a Cairo VM chain <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>Connecting Starknet to Hyperlane would have 2 effects :</p>\n<ul>\n<li>\n<p>1 : Starknet is more and more integrated to Ethereum and other chains (sorry, but native bridging and Orbiter bridging feel so bad for 99 % of users)</p>\n</li>\n<li>\n<p>2 : people farming Hyperlane airdrop are going from time to time on Starknet. Hyperlane is hyped now, but ¬´ we are still early ¬ª, so it‚Äôs not late at all.</p>\n</li>\n</ul>\n<p><strong>BONUS : more ideas to pump Starknet</strong></p>\n<ul>\n<li>\n<p>a ve(3,3) DEX with a nice frontend such as Aerodrome. Always a good idea to increase TVL/volume/reputation by making a 50x on one token, but I have to say I don‚Äôt really like them</p>\n</li>\n<li>\n<p>an order-book DEX just as Mangrove Exchange. Way less hyped than a ve(3,3), but also more interesting from an innovation point of view</p>\n</li>\n<li>\n<p>make ¬´ unruggable meme ¬ª looks more like Pinksale (<a href=\"https://www.pinksale.finance/\" rel=\"noopener nofollow ugc\">https://www.pinksale.finance/</a>). Unruggable is a great idea, but for now it doesn‚Äôt help degens buying memecoins with live-charts and all that stuff</p>\n</li>\n<li>\n<p>a leverage farming protocol and/or an autocompounder (such as Alpaca or Beefy). Not so usefull when fees are 1 cent, no hype about it</p>\n</li>\n<li>\n<p>a delta-neutral stablecoin such as Ethena. I don‚Äôt really like it, stablecoins are not supposed to be degen. Probably not the first thing to create, but it could be a great extender when training wheel is already moving</p>\n</li>\n<li>\n<p>create new things ! Way more difficult to talk about it because I‚Äôm not deep into tech, but things like Kakarot zkEVM or Madara could be very interesting from a user POV. We don‚Äôt HAVE to make it about points/airdrop or whatever, but seeing new things being built make people happy <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n</li>\n</ul>\n<p>So, here are my ideas for Starknet, I hope it could help. I‚Äôm not a tech guy so I can‚Äôt build it, but I would love to beta test any of your work. I like Starknet and I hold my STRK airdrop, so I would love to see it thrive and reach $5 or $10 billions TVL</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/a/0/a0ee40133e68549a88542e61721a5b4edfcf129d.jpeg\" data-download-href=\"/uploads/short-url/mXEQkZM9ZuVznzbpsMN6ujJBw9D.jpeg?dl=1\" title=\"Pararescue.training_exercise\" rel=\"noopener nofollow ugc\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/a/0/a0ee40133e68549a88542e61721a5b4edfcf129d_2_690x492.jpeg\" alt=\"Pararescue.training_exercise\" data-base62-sha1=\"mXEQkZM9ZuVznzbpsMN6ujJBw9D\" width=\"690\" height=\"492\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/a/0/a0ee40133e68549a88542e61721a5b4edfcf129d_2_690x492.jpeg, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/a/0/a0ee40133e68549a88542e61721a5b4edfcf129d_2_1035x738.jpeg 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/a/0/a0ee40133e68549a88542e61721a5b4edfcf129d_2_1380x984.jpeg 2x\" data-dominant-color=\"8C9799\"></a></div><br>\n<em>Hostages are safe boss !</em><p></p>\n<p>Disclaimer : I‚Äôm a retail, I‚Äôm not part of any team. I hold tokens from etherfi, Renzo, Swell, Diva, and I‚Äôm using some of the protocols I mentionned just above. And I‚Äôm not a tech guy, so everything I say might be stupid/too difficult to bootstrap and I‚Äôm sorry about that <img src=\"https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\" loading=\"lazy\" width=\"20\" height=\"20\"> Thanks for your understanding !</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/rescuing-starknet-3-simple-ideas-to-increase-volumes-and-tvl/114010\">Read full topic</a></p>","link":"https://community.starknet.io/t/rescuing-starknet-3-simple-ideas-to-increase-volumes-and-tvl/114010","pubDate":"Wed, 24 Apr 2024 15:47:30 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-114010"},"source":{"@url":"https://community.starknet.io/t/rescuing-starknet-3-simple-ideas-to-increase-volumes-and-tvl/114010.rss","#text":"Rescuing Starknet¬†: 3 (simple) ideas to increase volumes and TVL üö®"}},{"title":"Starknet's builder council - Description & up to date list of members","dc:creator":"henri.lieutaud","category":"üèõ   Governance","description":"<h1><a name=\"background-1\" class=\"anchor\" href=\"https://community.starknet.io#background-1\"></a>Background</h1>\n<p>The Starknet Builders‚Äô Council was established on December 5th, 2022, as an integral component of the 1st Phase of Starknet Governance. It is an assembly of Starknet builders deeply committed to making well-informed technical decisions that will support and maintain Starknet and its ecosystem.</p>\n<p>As of August 29th, 2023, the Builders Council has been entrusted with a voting power delegation amounting to 1.2 billion tokens. This delegation represents a substantial 23.3% of the total voting power within the first Phase of Governance. This allocation underscores the Council‚Äôs crucial role in shaping the future direction of the Starknet ecosystem.</p>\n<h1><a name=\"role-of-the-builders-council-2\" class=\"anchor\" href=\"https://community.starknet.io#role-of-the-builders-council-2\"></a>Role of the Builders‚Äô Council</h1>\n<p>The Builders‚Äô Council plays a core role within the Starknet ecosystem and governance mechanisms, characterized by the following key responsibilities:</p>\n<ul>\n<li>Informed decision-making: The Council conducts comprehensive learning and deliberation processes for each proposed decision. The primary objective is to arrive at well-reasoned and expertly informed decisions that will benefit Starknet.</li>\n<li>Advocacy for the community: The Council actively engages in discussions and voting processes, representing the interests and perspectives of Starknet community members.</li>\n<li>Transparency: The Council operates in a transparent manner. It ensures that the Council‚Äôs discussions, decisions, and activities are made accessible and comprehensible to the broader community.</li>\n<li>Alignment with vision and values: The Council ensures that the decisions it makes are fully aligned with Starknet‚Äôs vision and core values.</li>\n</ul>\n<p>For further information about the Builders‚Äô Council‚Äôs role read the <a href=\"https://community.starknet.io/t/starknet-builders-council-mission-statement/4045\">Mission Statement</a>, published on December 14th, 2022.</p>\n<p>For further information regarding the Code of Conduct, Tooling and Council Curations, please refer to the <a href=\"https://www.starknet.io/en/content/starknet-builders-council-modus-operandi\">Practical Aspects of the Builders Council</a>.</p>\n<h1><a name=\"current-members-of-the-builders-council-3\" class=\"anchor\" href=\"https://community.starknet.io#current-members-of-the-builders-council-3\"></a>Current members of the Builders‚Äô Council</h1>\n<p>The current confirmed members of the Starknet Builders‚Äô Council comprise 20 members:</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Project</th>\n<th>Contact</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Sylve Chevet</td>\n<td>Cofounder at briq and Governance Facilitator at Builder‚Äôs Council</td>\n<td><a href=\"https://twitter.com/sylvechv\">https://twitter.com/sylvechv</a></td>\n</tr>\n<tr>\n<td>Jon</td>\n<td>Cofounder at Aspect and Starkscan</td>\n<td><a href=\"https://twitter.com/0xmonkeyy\">https://twitter.com/0xmonkeyy</a></td>\n</tr>\n<tr>\n<td>Chee Chyuan Ang</td>\n<td>Software Developer and Cofounder at Starknet Malaysia</td>\n<td><a href=\"https://twitter.com/cheechyuanang\">https://twitter.com/cheechyuanang</a></td>\n</tr>\n<tr>\n<td>Jonathan Lei</td>\n<td>Cofounder and CTO at zkLend</td>\n<td><a href=\"https://twitter.com/xJonathanLEI\">https://twitter.com/xJonathanLEI</a></td>\n</tr>\n<tr>\n<td>Julien Niset</td>\n<td>Cofounder at Argent</td>\n<td><a href=\"https://twitter.com/jniset\">https://twitter.com/jniset</a></td>\n</tr>\n<tr>\n<td>Ivan Pavicic</td>\n<td>Engineering Manager at Space Shard</td>\n<td><a href=\"https://twitter.com/ivpavici\">https://twitter.com/ivpavici</a></td>\n</tr>\n<tr>\n<td>Martin Triay</td>\n<td>Former Cairo Lead at OpenZeppelin</td>\n<td><a href=\"https://twitter.com/martriay\">https://twitter.com/martriay</a></td>\n</tr>\n<tr>\n<td>Mentor Reka</td>\n<td>Cofounder at AVNU and Community Platform Starknet Ecosystem</td>\n<td><a href=\"https://twitter.com/MentorNotPseudo\">https://twitter.com/MentorNotPseudo</a></td>\n</tr>\n<tr>\n<td>Nicolas Bacca</td>\n<td>Former VP Innovation Lab and Cofounder at Ledger</td>\n<td><a href=\"https://twitter.com/btchip\">https://twitter.com/btchip</a></td>\n</tr>\n<tr>\n<td>Orlando</td>\n<td>Developer at Snapshot</td>\n<td><a href=\"https://twitter.com/_Orland0x\">https://twitter.com/_Orland0x</a></td>\n</tr>\n<tr>\n<td>Rohit Goyal</td>\n<td>Cofounder at JediSwap</td>\n<td><a href=\"https://twitter.com/imrgoyal\">https://twitter.com/imrgoyal</a></td>\n</tr>\n<tr>\n<td>Loaf</td>\n<td>Cofounder at BibliothecaDAO, Realms and Dojo</td>\n<td><a href=\"https://twitter.com/lordOfAFew\">https://twitter.com/lordOfAFew</a></td>\n</tr>\n<tr>\n<td>Marcello Bardus</td>\n<td>Cofounder &amp; CTO at Herodotus</td>\n<td><a href=\"https://twitter.com/0xmarcello\">https://twitter.com/0xmarcello</a></td>\n</tr>\n<tr>\n<td>Chris Lexmond</td>\n<td>Co-Founder &amp; CEO at Influence</td>\n<td><a href=\"https://twitter.com/DarkosNightmare\">https://twitter.com/DarkosNightmare</a></td>\n</tr>\n<tr>\n<td>Moody Salem</td>\n<td>Founder at Ekubo</td>\n<td><a href=\"https://twitter.com/sendmoodz\">https://twitter.com/sendmoodz</a></td>\n</tr>\n<tr>\n<td>Benjamin Flores</td>\n<td>Cofounder at Starknet ID</td>\n<td><a href=\"https://twitter.com/Fricoben\">https://twitter.com/Fricoben</a></td>\n</tr>\n<tr>\n<td>Cl√©ment Walter</td>\n<td>Cofounder &amp; CTO at Kakarot</td>\n<td><a href=\"https://twitter.com/ClementWalter\">https://twitter.com/ClementWalter</a></td>\n</tr>\n<tr>\n<td>Yoav Gaziel</td>\n<td>Cofounder at Braavos</td>\n<td><a href=\"https://twitter.com/yoavgaziel\">https://twitter.com/yoavgaziel</a></td>\n</tr>\n<tr>\n<td>Mathias Halgreen</td>\n<td>Cofounder &amp; CTO at Pragma</td>\n<td><a href=\"https://twitter.com/0xevolve\">https://twitter.com/0xevolve</a></td>\n</tr>\n<tr>\n<td>Ahmet Oznar</td>\n<td>Cofounder of Pyramid</td>\n<td><a href=\"https://twitter.com/ahmetoznarr\">https://twitter.com/ahmetoznarr</a></td>\n</tr>\n</tbody>\n</table>\n</div><p>This list will be updated regularly based on additions and removals to the Builders‚Äô Council.</p>\n<h1><a name=\"resources-4\" class=\"anchor\" href=\"https://community.starknet.io#resources-4\"></a>Resources</h1>\n<p>Safe wallet of the Builder Council: <a href=\"https://app.safe.global/home?safe=eth:0x5C04Aa0E6896d5039bBeb4EEcAE8526a0A052A77\">eth:0x5C04Aa0E6896d5039bBeb4EEcAE8526a0A052A77</a></p>\n<p><a href=\"https://www.starknet.io/en/content/starknet-builders-council-modus-operandi\">Starknet Builders‚Äô Council Modus Operandi</a></p>\n<p><a href=\"https://community.starknet.io/t/starknet-builders-council-mission-statement/4045\">Builder Council‚Äôs Announcement</a></p>\n<p><a href=\"https://community.starknet.io/t/delegate-onboarding-announcement/4047\">Starknet Delegation Onboarding Announcement</a></p>\n<p><a href=\"https://www.starknet.io/en/posts/governance/starknets-governance-first-phase\">Starknet Governance First Phase</a></p>\n<p><a href=\"https://medium.com/starknet-foundation/welcome-to-the-world-starknet-foundation-7bd55d5dbc59\">Starknet Foundation Mission Statement</a></p>\n<h1><a name=\"changelog-5\" class=\"anchor\" href=\"https://community.starknet.io#changelog-5\"></a>Changelog</h1>\n<ul>\n<li>On November 22, 2023 the governance committee <a href=\"https://community.starknet.io/t/expanding-the-builders-council/108196\">announced</a> that the council was expanding to 20 members.\n<ul>\n<li>TobbyKitty, GuiltyGyoza, Federica Moletta, Tarrence van As, Motty Lavie and Darlington left the council;</li>\n<li>Marcello Bardus, Chris Lexmond, Loaf, Yoav Gaziel, Moody Salem, Benjamin Flores, Cl√©ment Walter, Mathias Halgreen and Ahmet Oznar joined the council;</li>\n</ul>\n</li>\n</ul>\n<p>On December 5, 2022 the <a href=\"https://community.starknet.io/t/starknet-builders-council-mission-statement/4045\">Starknet Builders‚Äô Council</a> was established, composed of 17 members which can be found <a href=\"https://community.starknet.io/t/starknet-builders-council-mission-statement/4045#members-of-the-builder-council-5\">here</a>.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/starknets-builder-council-description-up-to-date-list-of-members/113969\">Read full topic</a></p>","link":"https://community.starknet.io/t/starknets-builder-council-description-up-to-date-list-of-members/113969","pubDate":"Thu, 18 Apr 2024 16:24:38 +0000","discourse:topicPinned":"Yes","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113969"},"source":{"@url":"https://community.starknet.io/t/starknets-builder-council-description-up-to-date-list-of-members/113969.rss","#text":"Starknet's builder council - Description & up to date list of members"}},{"title":"Best APIs for building on Starknet?","dc:creator":"clivelbiscoh","category":"ü§∑‚Äç‚ôÄÔ∏è All-Purpose Hangout","description":"<p>What are the best API providers for building apps on Starknet?</p>\n<p>What are the advantages and disadvantages of each?</p>\n<p>Is there one that allows you to build web2-like experiences that are fast and allow you to surface full historical data?</p>\n<p>Any examples of apps that have really done a great job of creating a web2-like experience that‚Äôs fast like web2 using these APIs?</p>\n<p>Thanks!</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/best-apis-for-building-on-starknet/113964\">Read full topic</a></p>","link":"https://community.starknet.io/t/best-apis-for-building-on-starknet/113964","pubDate":"Thu, 18 Apr 2024 11:37:07 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113964"},"source":{"@url":"https://community.starknet.io/t/best-apis-for-building-on-starknet/113964.rss","#text":"Best APIs for building on Starknet?"}},{"title":"Second (Third, Fourth, ‚Ä¶) User Airdrop - Making Starknet Happen","dc:creator":"sendmoodz","category":"Governance Proposals","description":"<h1><a name=\"problem-1\" class=\"anchor\" href=\"https://community.starknet.io#problem-1\"></a>Problem</h1>\n<p>Taking stock of Starknet‚Äôs position in the L2 ecosystem: Starknet has not shown growth numbers on par with its competitors Base/OP, zkSync, Arbitrum, etc.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/d/e/de7680c2ac7302fa35974d0472ffeddefbd850dc.jpeg\" data-download-href=\"/uploads/short-url/vJZTaI2sasXJwn17dr9iPivhgMk.jpeg?dl=1\" title=\"image\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/d/e/de7680c2ac7302fa35974d0472ffeddefbd850dc_2_690x316.jpeg\" alt=\"image\" data-base62-sha1=\"vJZTaI2sasXJwn17dr9iPivhgMk\" width=\"690\" height=\"316\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/d/e/de7680c2ac7302fa35974d0472ffeddefbd850dc_2_690x316.jpeg, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/d/e/de7680c2ac7302fa35974d0472ffeddefbd850dc_2_1035x474.jpeg 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/d/e/de7680c2ac7302fa35974d0472ffeddefbd850dc_2_1380x632.jpeg 2x\" data-dominant-color=\"292C2F\"></a></div><br>\n<em>source: <a href=\"https://www.growthepie.xyz/fundamentals/daily-active-addresses\" class=\"inline-onebox\">Active Addresses - growthepie</a></em><p></p>\n<p>When I started building on Starknet in May, about a year ago, I took a bet on the impressive technology and I believed the airdrop would be the catalyst for more users to try Starknet. However after seeing the design of the user airdrop, I think the chances for Starknet to reach product market fit have diminished: many real users were neglected by this airdrop, and the successful sybils were heavily rewarded. I also <a href=\"https://twitter.com/sendmoodz/status/1758219284625391864\">shared this opinion</a> before it went live.</p>\n<p>Since then, the user sentiment towards Starknet has been very negative‚Äìevery tweet about Starknet gets comments about the lack of community, tags for <span class=\"hashtag-raw\">#scamnet</span>, references to the unfairness of the distribution, etc. <a href=\"https://twitter.com/AttilaHun_eth/status/1777469833262641578\">This thread</a> is a good example. Meanwhile, the sybils who extracted millions have completely stopped using the chain and moved on to the next farm‚Äìas early as December around when the snapshot details were leaked‚Äìleaving Starknet‚Äôs user and activity numbers at a small fraction of the peak. Now, people even <a href=\"https://x.com/0xGoldenDegen/status/1779123902524039460\">genuinely believe</a> (or supposedly joke) that Starknet has 8 DAUs.</p>\n<p><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/7/9/791f794cfd216df3f06a71a72d3c078861e96612.jpeg\" alt=\"8mjwik\" data-base62-sha1=\"hhvcN0b0r6jgfURXO3ZfWNrtLzQ\" width=\"666\" height=\"359\"><br>\n<em>- All of Crypto Twitter</em></p>\n<p>It‚Äôs clear we do not see many new users interested in trying out the chain, even when high quality innovative Dapps are available and incentives on the order of 1% per week are paid out to users. I expect experienced developers are reluctant to invest in Cairo because there is little reward to be had. I worry that eventually we will see divestment from Starknet as well if there is not an improvement in the narrative and the activity numbers.</p>\n<h3><a name=\"how-does-it-affect-the-protocols-2\" class=\"anchor\" href=\"https://community.starknet.io#how-does-it-affect-the-protocols-2\"></a>How does it affect the protocols?</h3>\n<p>The low activity directly affects the success of protocols building on Starknet. E.g. for Ekubo Protocol, because of the low user activity, the volume numbers are so low that APRs inclusive of the Starknet DeFi Spring incentives are not much higher than on other chains, which means the products receiving these incentives today will not be sustainable when the incentives end later this year.</p>\n<p>Growing these products by increasing the amount of incentives is not be an efficient use of capital. We need a resolution to the perception problem so that users and developers feel that Starknet has a strong future and is a good place to deploy their assets. Otherwise Starknet will be irrelevant, and the technology will go under-utilized‚Äìat least until someone else decides to fork it and do a better job with marketing and distribution. It could take many years longer for Starknet‚Äôs vision to be achieved.</p>\n<h3><a name=\"stop-focusing-on-developers-3\" class=\"anchor\" href=\"https://community.starknet.io#stop-focusing-on-developers-3\"></a>Stop focusing on developers</h3>\n<p>The ecosystem is eager to play a big role here, but it‚Äôs a challenge to make big moves when the community is so small. It is also not realistic to expect the best developers, memecoiners to take on the challenge of building products on a new stack just for grants, which are small relative to the potential reward of deploying on another more popular chain‚Äìespecially while activity stats are going in the wrong direction and the sentiment is poor.</p>\n<p>The opportunity cost of building for Starknet vs. all-other-EVM-based-L2s is currently too great. If additional user airdrops succeed in changing the narrative, devs that chose to build on Starknet already will reap the rewards of their efforts. So for the short term, the growth of the developer ecosystem should not be prioritized.</p>\n<h3><a name=\"proposal-4\" class=\"anchor\" href=\"https://community.starknet.io#proposal-4\"></a>Proposal</h3>\n<p>We should define a framework for subsequent user airdrops that is aimed at diluting the issues in the first user airdrop. To meaningfully improve the distribution, the scale of the STRK distributed in these subsequent airdrops should be on par with the original user airdrop. It should be designed in public, subject to criticism and review from the community, and importantly be validated by a snapshot vote. Below are the some tenets by which this framework should be designed:</p>\n<ul>\n<li><strong>MUST</strong> be based on the amount that a user risked by using the chain</li>\n<li><strong>MUST NOT</strong> reward sybils</li>\n<li><strong>MUST NOT</strong> punish deployment of capital to Dapps</li>\n<li><strong>SHOULD</strong> stimulate activity on the chain over time</li>\n<li><strong>SHOULD</strong> make early users rich</li>\n</ul>\n<p>Here is a rough outline of how this airdrop could work to satisfy these tenets:</p>\n<ul>\n<li>A fixed amount of STRK is distributed per-second since a specific date\n<ul>\n<li>E.g.: 1 STRK per second since the day the bridge was live</li>\n</ul>\n</li>\n<li>The fixed amount is split amongst all the accounts on the chain per-second\n<ul>\n<li>Each account receives STRK in proportion to the total value locked on the chain it held each second</li>\n</ul>\n</li>\n<li>‚ÄúAccounts‚Äù includes protocols\n<ul>\n<li><strong>MUST</strong> be a process to determine the sub-allocation to a protocol‚Äôs users, e.g.:\n<ul>\n<li>Developers of protocols <strong>SHOULD</strong> be tasked to determine the allocation of STRK for their protocol‚Äôs users</li>\n<li>If they do not provide the sub-allocation for public review within a certain timeline, their portion is forfeited</li>\n<li>This sub-allocation may be computed in parallel to the other work, since all that matters is the TVL-seconds per address</li>\n<li>Sub-allocation should follow the same principles of the original airdrop, and undergo a review period by the community to validate the result</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>‚ÄúAccount‚Äù value <strong>SHOULD</strong> include popular NFTs and in-game assets for the top collections and games\n<ul>\n<li>Use the floor price of the popular collections at snapshot time to measure their value</li>\n<li>Value of in-game assets determined by average time-to-acquisition, gas cost of acquisition, and rarity</li>\n</ul>\n</li>\n<li>The airdrop amount <strong>SHOULD</strong> be vested at a rate of O(6 months)\n<ul>\n<li>It‚Äôs important to have users coming back to the chain to use it as it creates longer term activity and habits</li>\n<li>It also avoids creating a supply shock for STRK</li>\n</ul>\n</li>\n<li>Subtract amounts already received in the first user drop\n<ul>\n<li>Avoids rewarding sybils that held only a minority of the chain‚Äôs bridged TVL</li>\n</ul>\n</li>\n<li><strong>SHOULD</strong> exclude STRK\n<ul>\n<li>Users that received STRK should not be permitted to double dip</li>\n</ul>\n</li>\n</ul>\n<p>This proposal is meant to be a starting place for the discussion. This example implementation is based on how 4.9% of the UNI was distributed with the Uniswap airdrop to early liquidity providers.</p>\n<h2><a name=\"delegate-to-help-5\" class=\"anchor\" href=\"https://community.starknet.io#delegate-to-help-5\"></a>Delegate to help!</h2>\n<p>I am a Starknet delegate. Please delegate to me if you wish to help push this idea forward.</p><aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://governance.starknet.io/delegates/profile/3221bd6f-645f-4fc6-99b3-fbe7d3c8dbc0\">\n  <header class=\"source\">\n      <img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/3/2/32c06b2e2b3df93ca2e7879b769f7168738a475e.png\" class=\"site-icon\" data-dominant-color=\"48444F\" width=\"16\" height=\"16\">\n\n      <a href=\"https://governance.starknet.io/delegates/profile/3221bd6f-645f-4fc6-99b3-fbe7d3c8dbc0\" target=\"_blank\" rel=\"noopener\">governance.starknet.io</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:690/362;\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/e/9/e93ed249ca6bdc4fd9a1f42731b096d0728d281a_2_690x362.png\" class=\"thumbnail\" data-dominant-color=\"E1D5E2\" width=\"690\" height=\"362\"></div>\n\n<h3><a href=\"https://governance.starknet.io/delegates/profile/3221bd6f-645f-4fc6-99b3-fbe7d3c8dbc0\" target=\"_blank\" rel=\"noopener\">Delegates / profile</a></h3>\n\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>42 posts - 32 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/second-third-fourth-user-airdrop-making-starknet-happen/113907\">Read full topic</a></p>","link":"https://community.starknet.io/t/second-third-fourth-user-airdrop-making-starknet-happen/113907","pubDate":"Mon, 15 Apr 2024 18:38:49 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113907"},"source":{"@url":"https://community.starknet.io/t/second-third-fourth-user-airdrop-making-starknet-happen/113907.rss","#text":"Second (Third, Fourth, ‚Ä¶) User Airdrop - Making Starknet Happen"}},{"title":"QRCode StarkNet Transaction Encoding","dc:creator":"faytey7","category":"SNIPs","description":"<h1><a name=\"abstract-1\" class=\"anchor\" href=\"https://community.starknet.io#abstract-1\"></a>Abstract</h1>\n<p>This SNIP proposes a standardized method for encoding StarkNet transactions into QR codes, facilitating a user-friendly way for wallets to interact with StarkNet transactions. This method aims to streamline the transaction signing process, making it more accessible and efficient for end-users, enabling users to interact with transactions directly through QR code scanning. The proposal covers all types of StarkNet transactions, including but not limited to token transfers, contract interactions, and state updates.</p>\n<h1><a name=\"motivation-2\" class=\"anchor\" href=\"https://community.starknet.io#motivation-2\"></a>Motivation</h1>\n<p>Currently, StarkNet transactions require manual input or complex interfaces to sign. Encoding transactions into QR codes simplifies this process, allowing users to scan a QR code with their wallet to sign transactions directly. This enhancement improves user experience and accessibility, especially for those unfamiliar with blockchain transactions.</p>\n<h1><a name=\"specification-3\" class=\"anchor\" href=\"https://community.starknet.io#specification-3\"></a>Specification</h1>\n<p>Developers should be able to encode user transactions, generate a qrcode and write it to a file or canvas. The following methods would be available to enable developers encode user transactions.</p>\n<ul>\n<li>toFile(output_path, transaction_config, options)</li>\n<li>toCanvas(transaction_config, options)</li>\n<li>toAddressString(transaction_config)</li>\n<li>toDataUrl(transaction_config, options)</li>\n<li>readStringToJSON(value_string)</li>\n<li>getJSON()</li>\n<li>produceEncodedValue(transaction_config, options)</li>\n</ul>\n<p><strong>Syntax</strong></p>\n<p>The QR code encoding will follow a structured format that includes the transaction type, transaction ID, and any relevant parameters.</p>\n<p>For example:</p>\n<p><code>starknet://transaction/&lt;transaction_type&gt;/&lt;transaction_id&gt;?&lt;parameters&gt;</code></p>\n<p>where:</p>\n<p>Base URL: starknet://</p>\n<p>Path: transaction/&lt;transaction_type&gt;/&lt;transaction_id&gt;</p>\n<p>Parameters: ? (optional, depending on the transaction type)</p>\n<h1><a name=\"implementation-details-4\" class=\"anchor\" href=\"https://community.starknet.io#implementation-details-4\"></a>Implementation Details</h1>\n<p>Transactions are serialized into a JSON string, including all necessary details such as the transaction type, contract address, function to be called, and parameters leveraging the serialization format already implemented by the braavos team (<a href=\"https://github.com/myBraavos/starknet-url.git\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - myBraavos/starknet-url: Build &amp; parse StarkNet URLs</a> and  <a href=\"https://github.com/myBraavos/starknet-deeplink\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - myBraavos/starknet-deeplink: StarkNet deeplink generator</a>) that enables transactions and invocations on starknet to be encoded as URLs.</p>\n<p>We then proceed to make a few modifications to the Ethereum-QR-code qrcode generator to enable us to leverage the same qrcode generation logic to encode the transaction or invocation URL as a qrcode.</p>\n<p>This approach to the implementation enables us to have backward compatibility with ethereum qrcode generators already in production and used by most applications.</p>\n<p>There are two possible ways to go about the library implementation of which we require your suggestion.<br>\nImplementing a separate qrcode library for starknet<br>\nIntegrating starknet transactions qrcode encoding and decoding with already existing solutions like ethereum-qr-code</p>\n<p>Each approach would require a different call to action for developers<br>\nImplementing a separate qrcode library for developers: This would require developers to install the new library to invoke the functionality they need<br>\nIntegrating with already existing solutions: This would require developers who are already using the available libraries in production to upgrade their version to the latest version with the release. While this may seem like a good approach, there is no guarantee of how fast changes and updates to the library can be made as it is not managed by our team and can only be updated when our pull requests have been merged.</p>\n<h1><a name=\"backward-compatibility-5\" class=\"anchor\" href=\"https://community.starknet.io#backward-compatibility-5\"></a>Backward Compatibility</h1>\n<p>This proposal is backward compatible with existing StarkNet transactions. It introduces a new method for transaction encoding and does not alter the underlying transaction structure.</p>\n<p>Example instantiation</p>\n<pre data-code-wrap=\"js\"><code class=\"lang-js\">Let qr = new StarknetQRPlugin()\n\nConst sendDetails = {\nTo: ‚ÄúOx‚Ä¶..‚Äù,\nValue: 1,\nGas: 42000,\n}\n\nconst configDetails = {\n  size:180,\n  options: {\n  margin: 2\n }\n};\n\nconst path = './qrcode_image.jpg'\n\nqr.toFile(path, sendDetails, configDetails)\n\n</code></pre>\n<h1><a name=\"security-considerations-6\" class=\"anchor\" href=\"https://community.starknet.io#security-considerations-6\"></a>Security Considerations</h1>\n<p><strong>User Confirmation</strong>: Ensure that wallets require user confirmation before signing transactions scanned from QR codes.</p>\n<p><strong>QR Code Expiration</strong>: QR codes would be implemented as a one-time-use and have a timed expiry, to minimize the risk of unauthorized access and prevent attackers from misusing transaction data.</p>\n<p><strong>Data Privacy</strong>: Minimize the amount of sensitive information included in QR codes to protect user privacy.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/qrcode-starknet-transaction-encoding/113885\">Read full topic</a></p>","link":"https://community.starknet.io/t/qrcode-starknet-transaction-encoding/113885","pubDate":"Thu, 11 Apr 2024 11:22:58 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113885"},"source":{"@url":"https://community.starknet.io/t/qrcode-starknet-transaction-encoding/113885.rss","#text":"QRCode StarkNet Transaction Encoding"}},{"title":"Upcoming Feature: Starknet Applicative Recursion","dc:creator":"ilia","category":"Cairo Development","description":"<p>Allow us to introduce a very cool upcoming feature:<span class=\"d-wrap\" data-wrap=\"color\" data-color=\"purple\" data-bgcolor=\"#\">applicative recursion</span>! We‚Äôll justify the name (sometimes abbreviated as SNAR) in a minute, but for now let‚Äôs recount the two key benefits:</p>\n<ol>\n<li>Decoupling of L2 block frequency from L1 costs,</li>\n<li>Reduced fixed L1 operating costs.</li>\n</ol>\n<p>Time to dive in.</p>\n<h1><a name=\"present-and-future-1\" class=\"anchor\" href=\"https://community.starknet.io#present-and-future-1\"></a>Present and future</h1>\n<h2><a name=\"present-2\" class=\"anchor\" href=\"https://community.starknet.io#present-2\"></a>Present</h2>\n<p>We start off in the now, with L1 operating costs of roughly 215K gas <span class=\"d-wrap\" data-wrap=\"color\" data-color=\"purple\" data-bgcolor=\"#\">fixed per block</span>:</p>\n<ol>\n<li>23K gas per fact registration ‚Äì part of <a href=\"https://etherscan.io/tx/0x16731babd1ba57874ff4b6554aab379785d986b2aa6b4513d68fd19673bb441a\">Verify Proof and Register</a>,</li>\n<li>56K gas per <a href=\"https://etherscan.io/tx/0xd808cb7fa32e1a3a241f91e07587339d526d4c47eae8902075f02cabde4f7efc\">register SHARP memory page</a>,</li>\n<li>136K gas per <a href=\"https://etherscan.io/tx/0x08ce859bc5d0eb7a5c159d50428841e88878691e378704aa636a968b2a7a3ee8\">State Update</a>,\n<ol>\n<li>50K gas for the KZG precompile to sample a blob,</li>\n<li>86K gas for running the state update function.</li>\n</ol>\n</li>\n</ol>\n<p>So SHARP consumes 79K gas per job for registering each job‚Äôs data, with job = block. Then the Starknet operator consumes an additional 136K gas per block to bump the state root in the Starknet core contract. Note Starknet block DA must fit into a single blob.</p>\n<p>Unfortunately, <span class=\"d-wrap\" data-wrap=\"color\" data-color=\"purple\" data-bgcolor=\"#\">fixed per block</span> means that L1 operating costs are linear in the amount of blocks ‚Äì regardless of their mass (the resources they contain). Consequently, very frequent blocks would incur heavy daily operating costs.</p>\n<p>Thus we find ourselves with an unpleasant trade-off between cost efficiency on one hand, and low block times on the other hand. Of course, sufficiently high demand brings frequent <em>and</em> massive blocks, but at current demand, many blocks are closed due to the 6 minute time limit without hitting any other resource limit.</p>\n<p>You may also be thinking to yourself: <em>can we batch several blocks into the fixed costs?</em> Yes. Very yes.</p>\n<h2><a name=\"future-3\" class=\"anchor\" href=\"https://community.starknet.io#future-3\"></a>Future</h2>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/c/3/c35330c9362660ed070870972df835e6bf3579be.jpeg\" data-download-href=\"/uploads/short-url/rRVlbxBNvz7svCYLyNQ4yDbfWVM.jpeg?dl=1\" title=\"A wild SNAR tree appears\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/c/3/c35330c9362660ed070870972df835e6bf3579be_2_534x499.jpeg\" alt=\"A wild SNAR tree appears\" data-base62-sha1=\"rRVlbxBNvz7svCYLyNQ4yDbfWVM\" width=\"534\" height=\"499\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/c/3/c35330c9362660ed070870972df835e6bf3579be_2_534x499.jpeg, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/c/3/c35330c9362660ed070870972df835e6bf3579be.jpeg 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/c/3/c35330c9362660ed070870972df835e6bf3579be.jpeg 2x\" data-dominant-color=\"D9D7D7\"></a></div><p></p>\n<p>There‚Äôs a new recursive tree in town: a SNAR tree. The leaves are Starknet blocks, and the internal nodes are special (applicative) recursive proofs that we‚Äôll explain later. Each tree has two configurable limits: amount of leaves and amount of DA bytes (in units of blobs). A tree is <em>closed</em> when one of its limits is reached. What does it mean for a tree to be closed? Very simple: the SNAR root proof is sent to SHARP as a job. Thus Starknet jobs are now roots of SNAR trees instead of Starknet blocks.</p>\n<p>The L1 operating cost structure is similar:</p>\n<ol>\n<li>SHARP memory registration per-job: 23K gas,</li>\n<li>SHARP memory page per-job: 36K gas (reduced from 56K thanks to SHARP optimization),</li>\n<li>State update per-job equal to 86K gas + 50K gas √ó tree blob limit.</li>\n</ol>\n<p>Thus, apart from the KZG precompile which remains at 50K gas per blob, the remaining fixed-per-job 145K gas is now amortized over all the blocks in a single SNAR tree.</p>\n<p>Crucially, there is no per-block L1 operating cost above: we have decoupled blocks from L1 costs!</p>\n<p>Nice picture of nice feature:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/a/0/a019be550dac92388463f2138c16cb0b88e77f46.jpeg\" data-download-href=\"/uploads/short-url/mQjy7S0UyknkX8LYV39mDu4l2zI.jpeg?dl=1\" title=\"SNAR\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/a/0/a019be550dac92388463f2138c16cb0b88e77f46_2_690x388.jpeg\" alt=\"SNAR\" data-base62-sha1=\"mQjy7S0UyknkX8LYV39mDu4l2zI\" width=\"690\" height=\"388\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/a/0/a019be550dac92388463f2138c16cb0b88e77f46_2_690x388.jpeg, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/a/0/a019be550dac92388463f2138c16cb0b88e77f46_2_1035x582.jpeg 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/a/0/a019be550dac92388463f2138c16cb0b88e77f46_2_1380x776.jpeg 2x\" data-dominant-color=\"141439\"></a></div><p></p>\n<h1><a name=\"cost-efficiency-4\" class=\"anchor\" href=\"https://community.starknet.io#cost-efficiency-4\"></a>Cost efficiency</h1>\n<h2><a name=\"fixed-cost-efficiency-5\" class=\"anchor\" href=\"https://community.starknet.io#fixed-cost-efficiency-5\"></a>Fixed cost efficiency</h2>\n<p>Let‚Äôs compare the L1 operating cost of a blob‚Äôs worth of DA.</p>\n<ul>\n<li>Right now, the cost is <em>at least</em> 215K gas per blob. The cost equals 215K if the blob is fully utilized by a single block, and increases if many blocks are required since each has its own fixed costs.</li>\n<li>In the future, the cost is 145K / BPT + 50K gas, where BPT denotes blobs per SNAR tree.</li>\n</ul>\n<p>Taking BPT = 3 gives a cost-per-blob of 98K gas: just 45% of the original operating cost. Taking BPT = 6 gives a cost-per-blob of 74K: just over ‚Öì of the original cost!</p>\n<h2><a name=\"da-cost-efficiency-6\" class=\"anchor\" href=\"https://community.starknet.io#da-cost-efficiency-6\"></a>DA cost efficiency</h2>\n<p>If blocks have many storage writes, then the expected number of multiple writes to the same storage cell increases. Since DA consists only of state diffs, there is a cancellation effect which increases with block size. Hence it‚Äôs more efficient to send DA for larger blocks. Right?</p>\n<p>Nah. Applicative recursion squashes the state diffs at each level of the tree, so the end result is a state diff that equals the squashed diffs of all the leaves. In other words, the end state diff depends only on the transactions in the leaves, and not on their grouping into blocks. As for the ‚Äúhow‚Äù ‚Äì that‚Äôs the <em>applicative</em> part: an applicative recursive proof proves the verification of its two child proofs, and then the execution of a ‚Äúdiff squash‚Äù program that does what its name suggests. The squash program also does some book keeping: if its leaves B‚ÇÅ, B‚ÇÇ, B‚ÇÉ, B‚ÇÑ bring a sequence of state transitions S‚ÇÅ‚ÜíS‚ÇÇ‚ÜíS‚ÇÉ‚ÜíS‚ÇÑ‚ÜíS‚ÇÖ then the root proof attests to the validity of S‚ÇÅ‚ÜíS‚ÇÖ.</p>\n<h1><a name=\"summary-7\" class=\"anchor\" href=\"https://community.starknet.io#summary-7\"></a>Summary</h1>\n<p>To conclude, applicative recursion unlocks frequent blocks and optimizes Starknet gas consumption. But some key questions remain:</p>\n<ol>\n<li>What should be the value of blobs per tree? Ethereum‚Äôs blob 1559 targets 3 blobs per block. More than 3 blobs per SNAR tree means a single state update transaction consumes more than three blocks whence the subsequent Ethereum block will face a higher blob price. Hence by sending such transactions too frequently we are shooting ourselves in the foot by raising our own prices. There are many interesting strategies here, ranging from never exceeding 3 blobs per tree, to spacing out occasional uses of 6.</li>\n<li>What block times should we aim for? The natural reply may ‚Äúlow as you can go‚Äù, but there‚Äôs a trade-off: each proof of a block must prove execution of SNOS, which is a significant overhead. How much is too much?</li>\n</ol>\n<p>Thoughts? Opinions? Memes? Post below!</p>\n            <p><small>4 posts - 2 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/upcoming-feature-starknet-applicative-recursion/113868\">Read full topic</a></p>","link":"https://community.starknet.io/t/upcoming-feature-starknet-applicative-recursion/113868","pubDate":"Sun, 07 Apr 2024 22:04:32 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113868"},"source":{"@url":"https://community.starknet.io/t/upcoming-feature-starknet-applicative-recursion/113868.rss","#text":"Upcoming Feature: Starknet Applicative Recursion"}},{"title":"Starknet Costs and Fees","dc:creator":"ilia","category":"üÜô Versions Upgrade","description":"<h1><a name=\"introduction-1\" class=\"anchor\" href=\"https://community.starknet.io#introduction-1\"></a>Introduction</h1>\n<p>Starknet has operating costs on one hand and transaction fees on the other. Currently, the main goal of Starknet‚Äôs transaction fee design is to cover operating costs without any profit at users‚Äô expense. In this post we will explore the complexity around this design goal and how Starknet tackles it. For simplicity, we will focus on L1 costs throughout and disregard cloud costs.</p>\n<p>The post is divided as follows: part I explains the complexity, while part II gives concrete formulas for Starknet fees vs costs as a function of system parameters and demand.</p>\n<p>For the detailed cost structure and the formulas for costs vs fees, skip to part II.</p>\n<h1><a name=\"part-i-design-challenges-2\" class=\"anchor\" href=\"https://community.starknet.io#part-i-design-challenges-2\"></a>Part I: design challenges</h1>\n<p>Covering operating costs without any profit means we aim to be at net zero margin. To that end, the obvious proposal is to charge each transaction a fee equal to its operating cost. So let us begin with a fundamental question: if the operating cost of a transaction is X, why not just charge it a transaction fee of X?</p>\n<p>The answer is that some operating costs are not marginal: they are not derived from individual transactions. Instead these costs derive from Ethereum interaction, namely proof verification and state updates. Their key property is a fixed gas cost per action, independent of the very large number of Starknet transactions being compressed by Starknet. The proposal in the fundamental question covers marginal costs but neglects fixed costs, and is therefore refuted.</p>\n<p>We arrive at a new task: design transaction fees to cover both marginal and fixed costs at a net zero profit. But how to distribute fixed costs over transactions? The key observation is that every action incurring a fixed cost is triggered by hitting some limiting system parameter. For example, past Starknet blocks were always closed due to reaching a compute limit. How does this observation help? Well, if fixed costs are always triggered by a compute limit then we can associate the fixed cost with a certain amount of compute units. This leads to a natural price per compute unit that would perfectly cover fixed costs: the fixed cost divided by the limit amount of computation. For example, if the total fixed cost is 100 gas, and each block is closed at a limit of 10 compute steps, then the compute fee should be 10 gas/step. Generalizing, we find the following principle: the cost per unit of the limiting resource equals the fixed cost divided by its limit amount. Since we aim for net zero profit, the fee per unit of the limiting resource should equal its cost. In essence, a limiting resource returns us to the marginal setting: each transaction should cover its ‚Äúlimiting resource cost‚Äù.</p>\n<p>To summarize, we have arrived at the following proposal: the fee for a transaction should equal the sum of its marginal cost and its limiting resource cost. The journey appears complete: we have described a formula for transaction fees that covers operating costs at net zero profit. But alas, we come to a major hurdle:</p>\n<ol>\n<li>The limit amounts of various limiting resources are system parameters that often increase between Starknet versions: if we can batch more Starknet transactions per L1 operation then there‚Äôs no reason to wait for the next version ‚Äì it‚Äôd just be a waste of resources. For example, increased block compute limits means that gas costs which are fixed per block are triggered after more computation than before.</li>\n<li>Such changes alter the cost per unit of the limiting resource.</li>\n<li>Transaction fee changes are coupled to Starknet versions, so the fee per unit cannot always match the cost per unit. Why the coupling? Because every fee change requires full node upgrades, and we want to minimize the resulting upgrade overhead.</li>\n</ol>\n<p>The consequences of this disparity depend a lot on the demand for the limiting resources, which can lead to overcharging users or undercharging them (i.e operating losses).</p>\n<p>Let us illustrate by example. Consider an intermediate block step limit increase between two Starknet versions, as in the following picture. Certainly the fee per step should be somewhere between the costs per step C/L‚ÇÅ and C/L‚ÇÇ. But where? If most of the demand comes before the increase, then the cost is dominated by the higher cost per step, whence the fee should be around C/L‚ÇÅ. On the other hand, if most of the demand comes after the increase, then cost is dominated by the lower cost per step, whence the fee should be around C/L‚ÇÇ.</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/3/0/30675a523b7c5cdf045944a381334f4f619c5dcd.png\" data-download-href=\"/uploads/short-url/6UclL8i2pqdWAEPLvyBCbN54a3r.png?dl=1\" title=\"\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/3/0/30675a523b7c5cdf045944a381334f4f619c5dcd_2_624x439.png\" alt=\"\" data-base62-sha1=\"6UclL8i2pqdWAEPLvyBCbN54a3r\" width=\"624\" height=\"439\" role=\"presentation\" srcset=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/3/0/30675a523b7c5cdf045944a381334f4f619c5dcd_2_624x439.png, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/optimized/3X/3/0/30675a523b7c5cdf045944a381334f4f619c5dcd_2_936x658.png 1.5x, https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/3/0/30675a523b7c5cdf045944a381334f4f619c5dcd.png 2x\" data-dominant-color=\"1B1234\"></a></div><p></p>\n<p>We have seen how frequent changes to limit amounts vs infrequent changes to transaction fees introduce risk of non-zero net margin due to unpredictable demand. From here on there are two approaches to take:</p>\n<ol>\n<li>\n<p>A conservative approach, where fees are set to cover the current operating costs until the next version. In this approach, intermediate cost reductions are not transmitted to users until the next version. Hence, the system may enter a positive profit margin upon any intermediate cost reduction. In other words: users overpay.</p>\n</li>\n<li>\n<p>A more user-oriented approach, where fees are set to cover the estimated operating costs until the next version, taking intermediate cost reductions into account. This approach has the drawback of incurring risk on the Starknet operator: misestimations result in losses, and these estimations are no science!</p>\n<ol>\n<li>As we shall see in part II of the post, the unpredictability is exacerbated by the fact Starknet overcharges DA fees. We heuristically undercharge compute fees to counteract overcharging for DA.</li>\n<li>The misestimation risk is bounded by a very important dependence on demand: if resource limits are sufficiently high for full block fees to cover costs, then fees will cover costs given enough demand. In other words, assuming sufficiently high limits, enough TPS ensures transaction fees will cover operating costs.</li>\n</ol>\n</li>\n</ol>\n<p>Starknet takes the user-oriented approach.</p>\n<h1><a name=\"part-ii-fee-and-cost-formulas-3\" class=\"anchor\" href=\"https://community.starknet.io#part-ii-fee-and-cost-formulas-3\"></a>Part II: fee and cost formulas</h1>\n<h2><a name=\"structure-of-operating-costs-4\" class=\"anchor\" href=\"https://community.starknet.io#structure-of-operating-costs-4\"></a>Structure of operating costs</h2>\n<h3><a name=\"marginal-costs-5\" class=\"anchor\" href=\"https://community.starknet.io#marginal-costs-5\"></a>Marginal costs</h3>\n<p>Marginal, or per-tx costs, are clearly mapped to individual transactions. The canonical almost-example is DA (data availability) costs: if a Starknet transaction writes to a storage cell in the state, it incurs an operating cost of sending this update to Ethereum. Here, cost is in units of Ethereum gas. Why almost-example then? Because many writes to a particular storage cell within the same Starknet block will still result in just one update to Ethereum: the final new value. The second example of marginal operating costs are those of handling L1/L2 messages.</p>\n<h3><a name=\"fixed-costs-6\" class=\"anchor\" href=\"https://community.starknet.io#fixed-costs-6\"></a>Fixed costs</h3>\n<p>Non-marginal costs, i.e ones that cannot be directly mapped to transactions, will be referred to as fixed costs. There are two granularities of fixed costs in Starknet: fixed-per-block and fixed-per-train. Before recounting them, we should explain what a ‚Äòtrain‚Äô is? A train is a batch of blocks that is jointly verified by a single STARK proof verification on Ethereum.</p>\n<h4><a name=\"fixed-per-sharp-train-7\" class=\"anchor\" href=\"https://community.starknet.io#fixed-per-sharp-train-7\"></a>Fixed per SHARP train</h4>\n<p>The gas cost of verifying a proof of a train is fixed at a total of roughly 6M gas per train.</p>\n<ol>\n<li>3M gas\n<ol>\n<li>8x <a href=\"https://etherscan.io/tx/0xc841adc04d271a6abb603f29da3d76fb8008ebf1e3b316af73ea39547a664a4a\">Verify FRI</a></li>\n<li>3x <a href=\"https://etherscan.io/tx/0xdf68dffbea44ac2e99a227d8486f3d1bf1d12f773b4cad4fe7ae086410193d80\">Verify Merkle</a></li>\n</ol>\n</li>\n<li>2M gas for execution of verifier ‚Äì part of <a href=\"https://etherscan.io/tx/0x16731babd1ba57874ff4b6554aab379785d986b2aa6b4513d68fd19673bb441a\">Verify Proof and Register</a></li>\n<li>1M gas calldata for sending proof ‚Äì part of <a href=\"https://etherscan.io/tx/0x16731babd1ba57874ff4b6554aab379785d986b2aa6b4513d68fd19673bb441a\">Verify Proof and Register</a></li>\n</ol>\n<h4><a name=\"fixed-per-starknet-block-8\" class=\"anchor\" href=\"https://community.starknet.io#fixed-per-starknet-block-8\"></a>Fixed per Starknet block</h4>\n<p>There are several sources of fixed-per-block costs, for a total of roughly 215K gas per block</p>\n<ol>\n<li>23K gas per fact registration ‚Äì part of <a href=\"https://etherscan.io/tx/0x16731babd1ba57874ff4b6554aab379785d986b2aa6b4513d68fd19673bb441a\">Verify Proof and Register</a></li>\n<li>56K gas per <a href=\"https://etherscan.io/tx/0x5af31a2fb4dd2467b8cf2372746d0fa444a87cf33869b7c5cea0edbbe7aabab8\">SHARP memory page 0</a></li>\n<li>136K gas per <a href=\"https://etherscan.io/tx/0x08ce859bc5d0eb7a5c159d50428841e88878691e378704aa636a968b2a7a3ee8\">State Update</a></li>\n</ol>\n<h2><a name=\"fee-and-cost-formulas-9\" class=\"anchor\" href=\"https://community.starknet.io#fee-and-cost-formulas-9\"></a>Fee and cost formulas</h2>\n<p>The fee per block is given by the following formula, where ‚Äòcsp‚Äô is cairo step price, ‚Äòdgp‚Äô is data gas price, and ‚Äògp‚Äô is gas price. The qualification of block user steps is meant to disregard steps that come from the Starknet operating system.</p>\n<p><span class=\"math\"> \\begin{aligned}\\text{fee per block} &amp; = \\text{csp}\\times \\text{block user steps}+\\text{dgp}\\times\\text{block dg sold}\n\\\\ &amp; =\\text{gp}\\times \\underbrace{0.0025}_\\text{gas per cs}\\times \\text{block user steps}+\\text{dgp}\\times\\text{block dg sold}\n\\end{aligned} </span></p>\n<p>The cost per block is slightly more complex. The total amount of gas associated with a block is the sum of 215K fixed-per-block that we have seen above and each block‚Äôs fractional part of the fixed-per-train gas. The previous sentence explained the first summand in the following formula. The second is simple: Ethereum transactions must pay for entire blobs, and Starknet the <a href=\"https://etherscan.io/tx/0x08ce859bc5d0eb7a5c159d50428841e88878691e378704aa636a968b2a7a3ee8\">State Update</a> transactions currently use at most one block.</p>\n<p><span class=\"math\"> \\text{cost per block} = \\text{gp}\\times\\frac{\\text{gas-per-train}+\\text{train-size}\\times \\text{gas-per-block}}{\\text{train size}}+\\text{blob price} </span></p>\n<p>Before computing any numbers, note that Starknet transaction fees charge per write, but its DA costs depend only on the number of memory cells that were updated and not the number of updates to each. Thus Starknet overcharges its DA fees. Note moreover that this margin increases with blocksize, since multiple writes to the same cells are more likely to occur in larger blocks. Note it is possible to resolve DA overcharging by implementing a ‚ÄúDA refund‚Äù feature, as in zkSync. In the category of DA fee reduction features, we have prioritized volition over refunds as we believe volition will reduce both fees and costs more significantly. Moreover, volition will also reduce operating costs, unlike DA refunds.</p>\n<h2><a name=\"some-numbers-and-break-even-conditions-10\" class=\"anchor\" href=\"https://community.starknet.io#some-numbers-and-break-even-conditions-10\"></a>Some numbers and break-even conditions</h2>\n<p>After the 4844 upgrade, Starknet incurred operating losses. In the first week they were substantial, with over 8 ETH lost per day and less than 20% of costs covered by fees. Ever since, a gradual and ongoing improvement process is bringing costs down. Over the last 5 days the average net loss is &lt;1.5 ETH per day, with fees covering over half the cost (82% on April 1). These improvements are underlain by two major factors:</p>\n<ol>\n<li>Block limits increase: the block step limit and blob data limit were both gradually increased. More resources per block increase the fees collected per block.\n<ul>\n<li>Demand is implicit here: in addition to step and data limits, blocks also have a time limit. If demand is insufficient, then blocks will close due to time limits without containing many resources. If demand is low then the fees collected per will be low regardless of its resource limits.</li>\n</ul>\n</li>\n<li>Data gas price increase, which amplifies the DA margin explained above. On March 28 Starknet was already covering half of its operating costs.</li>\n</ol>\n<p>Here are some examples of fees vs costs with given parameters. The crucial factor is demand because it determines the amount of resources contained in a block. Resource prices are also crucial.</p>\n<p>First, the current limits are 45M steps, a blob‚Äôs worth of felts, and a lifespan of 6 minutes. Let‚Äôs start with the following parameters, which are the average data over roughly 20 hours in the last few days.</p>\n<p><span class=\"math\"> \\text{gp}=20\\text{ gwei},\\;\\text{dgp}=60\\text{ gwei},\\;\\text{block user steps}=22.5\\text{M},\\;\\text{block dg sold}=128\\text{K},\\;\\text{gas per block}=246\\text{K},\\;\\text{train size}=192 </span></p>\n<p>we find that fees cover 69% of costs.</p>\n<p><span class=\"math\"> \\begin{aligned}\\text{fee per block} &amp; = 8.8\\text{M gwei} \\\\ \\text{cost per block} &amp; =12.8\\text{M gwei} \\\\ \\text{fee/cost per block} &amp; = 0.69 \\end{aligned} </span></p>\n<p>In practice fees covered closer to 55% of costs, mainly because of a ‚Äúfutures‚Äù phenomenon: transaction fees are charged according to gas prices, but operating costs are only paid later at different gas prices. On this particular day, the fluctuations favored users, exacerbating losses.</p>\n<p>Greater demand brings more steps and storage writes per block, as represented by the following parameters.</p>\n<p><span class=\"math\"> \\text{gp}=20\\text{ gwei},\\;\\text{dgp}=60\\text{ gwei},\\;\\text{block user steps}=30\\text{M},\\;\\text{block dg sold}=200\\text{K},\\;\\text{gas per block}=246\\text{K},\\;\\text{train size}=192 </span><br>\nIn this case we find that fees cover costs with a 6% margin!</p>\n<p><span class=\"math\"> \\begin{aligned}\\text{fee per block} &amp; = 13.5\\text{M gwei}\n\\\\ \\text{cost per block} &amp; =12.8\\text{M gwei} \\\\ \\text{fee/cost per block} &amp; = 1.06\n\\end{aligned} </span></p>\n<p>By configuring a longer block time, we can drive block resources even higher, but that‚Äôs a UX trade-off we are constantly thinking about. As for gas and data gas prices, a ratio dgp/gp‚âà3 seems reasonable when comparing the cost of a (nonzero) byte as 16 gas vs 1 data gas. Indeed a ratio of 3 means that blobs make DA 16/3‚âà5 times cheaper ‚Äì similar to the folklore estimates that have been floating around for months.</p>\n<p>The tension between block frequency and L1 costs will be resolved by an upcoming feature called <span class=\"d-wrap\" data-wrap=\"color\" data-color=\"purple\" data-bgcolor=\"#\">applicative recursion</span>. It will both decouple block frequency from L1 costs and moreover reduce L1 costs further, allowing fees to cover costs. Read more about it <a href=\"https://community.starknet.io/t/upcoming-feature-starknet-applicative-recursion/113868\">here</a>!</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/starknet-costs-and-fees/113853\">Read full topic</a></p>","link":"https://community.starknet.io/t/starknet-costs-and-fees/113853","pubDate":"Thu, 04 Apr 2024 20:40:39 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113853"},"source":{"@url":"https://community.starknet.io/t/starknet-costs-and-fees/113853.rss","#text":"Starknet Costs and Fees"}},{"title":"STARKNET Analytics","dc:creator":"kaushik","category":"Support","description":"<p>Hey Guys,</p>\n<p>I‚Äôm from PYOR, a blockchain and analytical firm backed by  Castle Island and Coinbase Ventures, We provide customizable analytics dashboards for leading protocols like Compound, Tezos, Quickswap, and ICP.</p>\n<p>After working extensively with other data  we understood  that data points and analysis help make the protocol better so I‚Äôm curious to learn what kind of data and KPIs Starknet tracks</p>\n<p>Love to get answers from this community.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/starknet-analytics/113842\">Read full topic</a></p>","link":"https://community.starknet.io/t/starknet-analytics/113842","pubDate":"Tue, 02 Apr 2024 13:00:31 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113842"},"source":{"@url":"https://community.starknet.io/t/starknet-analytics/113842.rss","#text":"STARKNET Analytics"}},{"title":"Using STRK to pay for NFT or other items","dc:creator":"Leo","category":"ü§∑‚Äç‚ôÄÔ∏è All-Purpose Hangout","description":"<p>It would be cool to integrate STRK as one of options to buy NFT.</p>\n<p>Or it could also be interesting to choose other token and pay with STRK which is swapped into the chosen currency during the transaction. This will facilitate user experience and have the power of Account Abstraction.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/using-strk-to-pay-for-nft-or-other-items/113837\">Read full topic</a></p>","link":"https://community.starknet.io/t/using-strk-to-pay-for-nft-or-other-items/113837","pubDate":"Tue, 02 Apr 2024 05:59:23 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113837"},"source":{"@url":"https://community.starknet.io/t/using-strk-to-pay-for-nft-or-other-items/113837.rss","#text":"Using STRK to pay for NFT or other items"}},{"title":"Cairo on Bitcoin layers","dc:creator":"redvelvet","category":"ü§∑‚Äç‚ôÄÔ∏è All-Purpose Hangout","description":"<p>I saw that Starkware was part of Bitlayer‚Äôs recent funding round</p>\n<p>Bitlayer is one of the many Bitcoin layers recently announced. I use the ambiguous term ‚Äúlayer‚Äù intentionally, as many of these networks claim to be L2s, but are not. Rollups on bitcoin are not possible, yet, but some promising concepts like BitVM are getting us closer to better bridging (not quite unilateral exits, but 1-of-N federated sets and maybe even 1-of-N permissionless sets with BitVM v2!) and maybe later for enforcing tx validity as well with validity proof verification</p>\n<p>Anyway, Bitlayer mentions support for multiple VMs. Are there other Bitcoin layers looking at Cairo? As we‚Äôve seen with Kakarot, we can emulate the EVM to adopt some EVM developer mindshare. But I‚Äôm more so interested in having a natively zk-provable VM at the core like CairoVM.</p>\n<p>I am aware of Kasar Labs‚Äô DA adapter, but this is a slightly different model than what I‚Äôve seen with the likes of Bitlayer, Citrea, BOB, etc (ie Kasar was building infra for a Starknet L3 that wanted to gain a piece of Bitcoin security in the form of finality?)</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/cairo-on-bitcoin-layers/113832\">Read full topic</a></p>","link":"https://community.starknet.io/t/cairo-on-bitcoin-layers/113832","pubDate":"Mon, 01 Apr 2024 00:49:10 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113832"},"source":{"@url":"https://community.starknet.io/t/cairo-on-bitcoin-layers/113832.rss","#text":"Cairo on Bitcoin layers"}},{"title":"Starknet (token)economics","dc:creator":"matteo","category":"ü§∑‚Äç‚ôÄÔ∏è All-Purpose Hangout","description":"<p>Dear Starknet community,</p>\n<p>I‚Äôm opening this topic to discuss everything economics on Starknet, following the <a href=\"https://starkware.co/resource/simple-tokenomics-for-a-proof-of-stake-utility-token/\" rel=\"noopener nofollow ugc\">great article</a> &amp; <a href=\"https://www.youtube.com/watch?v=UNJnHHZ6MXg&amp;ab_channel=StarkWare\" rel=\"noopener nofollow ugc\">Video</a> from Noam Nisan.</p>\n<p>First of all, I think it would be great to have articles explaining Starknet tokenomics, the same way the great <a class=\"mention\" href=\"https://community.starknet.io/u/ilia\">@ilia</a> wrote a few detailing Starknet decentralization.</p>\n<p>Now going on to the questions/remarks I have:</p>\n<p>I think it was very much needed to define the goal of the platform, and to maximize social welfare is I think the best way to describe this goal. Now very naively, I think I would have defined what this means based on the participants rather than the system. In the article, part 2.2, how can we maximize welfare is based on the system: users and operators are defined, and social welfare will be maximized based on this two-sided market. Of course, it is the most important part of the system, but I feel this narrows the scope of the analysis too much, as many other parts are included in the system. If I were to define what maximizing social welfare means for Starknet, it would be maximizing the value provided to the world (same as in the article), but applied to every community member, and this includes of course users &amp; operators, but also any other economic agent that can for instance just hold STRK, use it as collateral in DeFi, etc. This might not make a big difference right now, but in the later discussion it will.</p>\n<p>On the microeconomics part, it is very well detailed, and I would love to have more details on the path chosen to price fees on Starknet, as there are only hints on the different possibilities for now. I think detailing the MEV part would also make a lot of sense since it plays a huge part in the overall social welfare maximization.</p>\n<p>On the macroeconomics part, I‚Äôm not sure I‚Äôm 100% convinced that inflation is the best way to cover the fixed cost of capital immobilization for validators. The assumption made at the beginning that the system is static is a big one. In a dynamic system, inflation doesn‚Äôt equally share the fixed costs of the infra on token holders, as we tend to understand in the article. In fact, it flows, and the people the closest to the new-minted money are the ones benefiting the most of it. It is a well-detailed matter in traditional economics, but to clarify in the case of Starknet, new STRK is created and sent to the validator, which can use it by buying blockspace for instance. The validator entering the blockspace market with this new supply of tokens will be able to buy it at the current price but will drive the price of it higher, as the demand increased. Thus token holders end up with a STRK less valuable, as it can buy less blockspace. With this solution, the users pay just the marginal cost (happy), the operators are the closest to the source of inflation (happy), and the token holders are the ones paying for the fixed costs, in a very unequal way because inflation in a dynamic system is flowing (somewhat unhappy). Now if we decide to make the user pay for the fixed cost, we just end up with a different set of happy/unhappy people, with users somewhat unhappy, operators happy, and token holders happy. That‚Äôs why I think defining the maximization of social welfare using only operators &amp; users might be misleading, as we end up finding the best solution that puts the burden on a third group of people, that wasn‚Äôt part of the initial equation. That being said, opting for the solution ‚Äúthe users are paying for the fixed costs‚Äù doesn‚Äôt justify the very existence of STRK, as ETH or USD could be used instead.</p>\n<p>I also think more details on the particular case of Starknet would be great. It is an L2, so there are now provers &amp; sequencers, which adds more layers to the basic analysis. There‚Äôs also maybe less decentralization needed since sequencers are only providing liveness and not trustlessness, so this would change the whole target of inflation, and maybe the subject of liquid staking and so on that would be very different from L1.</p>\n<p>I couldn‚Äôt tag Noam, he doesn‚Äôt look on the forum, hope to have him soon here!</p>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/starknet-token-economics/113827\">Read full topic</a></p>","link":"https://community.starknet.io/t/starknet-token-economics/113827","pubDate":"Fri, 29 Mar 2024 15:32:16 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113827"},"source":{"@url":"https://community.starknet.io/t/starknet-token-economics/113827.rss","#text":"Starknet (token)economics"}},{"title":"Blocking CairoZero Class Declarations","dc:creator":"ilia","category":"üÜô Versions Upgrade","description":"<p>Greetings and salutations! Alright, let‚Äôs go 0-100. Remember <a href=\"https://www.starknet.io/en/content/starknet-regenesis-the-plan\">regenesis</a>? Well, today is the first baby step: the sequencer will no longer accept any new class declarations of CairoZero code!</p>\n<p>Now slower.</p>\n<p>What‚Äôs regenesis? In a nutshell, regenesis is the transition of Starknet toward safety (in the form of <a href=\"https://docs.starknet.io/documentation/architecture_and_concepts/Smart_Contracts/cairo-and-sierra/\">Sierra</a>) and away from trust and CairoZero. If you want to know more, check out <a href=\"https://www.starknet.io/en/content/starknet-regenesis-the-plan\">this post</a>.</p>\n<p>Precisely what is happening? Exactly what it says: no new CairoZero code can enter Starknet!</p>\n<p>But what about your CairoZero contract, you say? No worries ‚Äì nothing changes: the sequencer will continue to execute transactions calling your functions.</p>\n<p>What should you ü´µüèª do? If you‚Äôre a user ‚Äì nothing! If you‚Äôre a dev ‚Äì you better not be using CairoZero!</p>\n<p>Problem? Reach out on the community forum, discord, and/or TG.</p>\n<p>Cheerio!</p>\n            <p><small>3 posts - 3 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/blocking-cairozero-class-declarations/113807\">Read full topic</a></p>","link":"https://community.starknet.io/t/blocking-cairozero-class-declarations/113807","pubDate":"Mon, 25 Mar 2024 12:15:11 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113807"},"source":{"@url":"https://community.starknet.io/t/blocking-cairozero-class-declarations/113807.rss","#text":"Blocking CairoZero Class Declarations"}},{"title":"Starknet Mini-version v0.13.1.1","dc:creator":"ilia","category":"üÜô Versions Upgrade","description":"<p>Following the v0.13.1 upgrade, many people criticized the new class declaration fees as being prohibitively high. (See <a href=\"https://t.me/sncorestars/1/44427\">here</a> for my summary of the conversation on the Core Stars TG.)</p>\n<p>Overall we think the feedback makes a lot of sense. We also agree the priority is too high to wait until summer for the next planned Starknet version.</p>\n<p>Hence we will release a mini-version introducing reduced class declaration fees! The new fees will be discussed with the Builders‚Äô Council before the version is deployed.</p>\n<p>Why a new version? Well, fees are now fixed per Starknet version (see <a href=\"https://github.com/starkware-libs/blockifier/blob/v0.5.0/crates/blockifier/resources/versioned_constants.json\">versioned constants</a>), to avoid (re)execution discrepancies between full nodes and the sequencer.</p>\n<p>Timeline-wise, we aim to release the version in the next week or two. We don‚Äôt want to commit on a date now because there are still some discussions to be had about the details with infra teams.</p>\n<p><img src=\"https://emoji.discourse-cdn.com/twitter/warning.png?v=12\" title=\":warning:\" class=\"emoji\" alt=\":warning:\" loading=\"lazy\" width=\"20\" height=\"20\"> What should you ü´µüèª do? Be prepared to upgrade your full node! Both Juno and Pathfinder will release a version that will apply the updated fees for both fee estimations and re-execution.</p>\n<p>This concludes the update, although we still have homework (the bullet point from my summary linked above)!</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/starknet-mini-version-v0-13-1-1/113805\">Read full topic</a></p>","link":"https://community.starknet.io/t/starknet-mini-version-v0-13-1-1/113805","pubDate":"Sun, 24 Mar 2024 16:22:27 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113805"},"source":{"@url":"https://community.starknet.io/t/starknet-mini-version-v0-13-1-1/113805.rss","#text":"Starknet Mini-version v0.13.1.1"}},{"title":"Why did costs drop so much after EIP-4844?","dc:creator":"SamoBirk","category":"üôè Help and Support","description":"<p>I am so happy to see StarkNet‚Äôs swift support for EIP-4844 and the significant reduction in costs. However, as someone with a background in mathematics (and not in development) who understands the details of Rollup technology to some extent, I find this quite puzzling:<br>\nZK Rollups require proof verification on L1, where a large part of the gas consumption is due to computation rather than storage. The computational part should not benefit from the Blob‚Äôs advantages, especially since STARK proofs are larger than SNARK proofs. It seems a considerable portion of gas is spent on zkProof verification rather than state storage.<br>\nI roughly verified this by looking at the transaction records of StarkNet: Operator‚Äîthe gas limit for proofs did not significantly decrease after EIP-4844.</p><aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://etherscan.io/address/0x2c169dfe5fbba12957bdd0ba47d9cedbfe260ca7\">\n  <header class=\"source\">\n      <img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/f/b/fb733174240d667dcacf66b277d52c8ea59570b0.png\" class=\"site-icon\" data-dominant-color=\"3D4A69\" width=\"48\" height=\"48\">\n\n      <a href=\"https://etherscan.io/address/0x2c169dfe5fbba12957bdd0ba47d9cedbfe260ca7\" target=\"_blank\" rel=\"noopener nofollow ugc\">Ethereum (ETH) Blockchain Explorer</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:101/70;\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/f/2/f2f749f3cf6c87b6bcb38acca47ce440f17886bd.png\" class=\"thumbnail\" data-dominant-color=\"3D4A69\" width=\"101\" height=\"70\"></div>\n\n<h3><a href=\"https://etherscan.io/address/0x2c169dfe5fbba12957bdd0ba47d9cedbfe260ca7\" target=\"_blank\" rel=\"noopener nofollow ugc\">StarkNet: Operator | Address 0x2c169dfe5fbba12957bdd0ba47d9cedbfe260ca7 |...</a></h3>\n\n  <p>The Address 0x2c169dfe5fbba12957bdd0ba47d9cedbfe260ca7 page allows users to view transactions, balances, token holdings and transfers of ERC-20, ERC-721 and ERC-1155 (NFT) tokens, and analytics.</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n<p>My guess is that the L1DA costs for zk might be higher than I imagined, so moving DA into Blobs resulted in sufficient cost reduction. I hope the community can provide more information:<br>\nQuestion 1: What is the approximate ratio of DA costs to proof verification costs (Before and After EIP-4844)?<br>\nQuestion 2: Is the data currently put into Blobs state diff? Only this approach would have a sufficient reason for the significant cost reduction.<br>\nQuestion 3: If the answer to question 2 is yes, it means that after the Blob expires, the data obtained on L1 cannot be used to reconstruct the L2 World state through Replay , Correct?</p>\n<p>Additionally, I discovered the SHARP system (Shared Proving and Verifying System), which seems to be a verification system shared by StarkNet mainnet and StarkEX. From what I observed, they perform four actions:</p>\n<ol>\n<li>Verify Merkle</li>\n<li>Verify FRI</li>\n<li>Register Continuous Memory Page every one to two minutes, which happens very frequently and seems like writing data needed for verification to L1, but it‚Äôs unclear if it‚Äôs related to state diff or state-related.</li>\n<li>Verify Proof And Register, which happens every ten minutes to a couple of hours, likely verifying a batch of transactions after accumulating them. <a href=\"https://etherscan.io/address/0x47312450b3ac8b5b8e247a6bb6d523e7605bdb60\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Starkware: SHARP Verifier | Address 0x47312450b3ac8b5b8e247a6bb6d523e7605bdb60 | Etherscan</a></li>\n</ol>\n<p>Among these, Register Continuous Memory Page seems the most likely way to write L2 STATE into L1. However, it did not significantly decrease after EIP-4844, so it might also be providing space for zkproof verification data rather than layer 2 state?</p>\n<p>Question 4: What exactly is Continuous Memory Page used for?</p>\n<p><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/7/a/7aa8d71965f44dda416b4339347c4450d5a8c32f.png\" alt=\"1\" data-base62-sha1=\"hv5Zng8lfTlziR8ek3j5QUqcHw3\" width=\"669\" height=\"208\"></p>\n<p>Old SHARP Blockchain Writer:</p><aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://etherscan.io/txs?a=0x16d5783a96ab20c9157d7933ac236646b29589a4&amp;ps=100&amp;p=2\">\n  <header class=\"source\">\n      <img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/f/b/fb733174240d667dcacf66b277d52c8ea59570b0.png\" class=\"site-icon\" data-dominant-color=\"3D4A69\" width=\"48\" height=\"48\">\n\n      <a href=\"https://etherscan.io/txs?a=0x16d5783a96ab20c9157d7933ac236646b29589a4&amp;ps=100&amp;p=2\" target=\"_blank\" rel=\"noopener nofollow ugc\">Ethereum (ETH) Blockchain Explorer</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:101/70;\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/f/2/f2f749f3cf6c87b6bcb38acca47ce440f17886bd.png\" class=\"thumbnail\" data-dominant-color=\"3D4A69\" width=\"101\" height=\"70\"></div>\n\n<h3><a href=\"https://etherscan.io/txs?a=0x16d5783a96ab20c9157d7933ac236646b29589a4&amp;ps=100&amp;p=2\" target=\"_blank\" rel=\"noopener nofollow ugc\">Ethereum Transactions Information | Etherscan</a></h3>\n\n  <p>Transactions that have been mined and confirmed on the Ethereum Blockchain. The list consists of transactions from sending Ether and the transactions for interacting with a smart contract.</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n<p>\nNew SHARP Blockchain Writer:</p><aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://etherscan.io/txs?a=0x22a82147a80747cfb1562e0f72f6be39f18b5f76\">\n  <header class=\"source\">\n      <img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/f/b/fb733174240d667dcacf66b277d52c8ea59570b0.png\" class=\"site-icon\" data-dominant-color=\"3D4A69\" width=\"48\" height=\"48\">\n\n      <a href=\"https://etherscan.io/txs?a=0x22a82147a80747cfb1562e0f72f6be39f18b5f76\" target=\"_blank\" rel=\"noopener nofollow ugc\">Ethereum (ETH) Blockchain Explorer</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:101/70;\"><img src=\"https://europe1.discourse-cdn.com/standard20/uploads/starknet1/original/3X/f/2/f2f749f3cf6c87b6bcb38acca47ce440f17886bd.png\" class=\"thumbnail\" data-dominant-color=\"3D4A69\" width=\"101\" height=\"70\"></div>\n\n<h3><a href=\"https://etherscan.io/txs?a=0x22a82147a80747cfb1562e0f72f6be39f18b5f76\" target=\"_blank\" rel=\"noopener nofollow ugc\">Ethereum Transactions Information | Etherscan</a></h3>\n\n  <p>Transactions that have been mined and confirmed on the Ethereum Blockchain. The list consists of transactions from sending Ether and the transactions for interacting with a smart contract.</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/why-did-costs-drop-so-much-after-eip-4844/113777\">Read full topic</a></p>","link":"https://community.starknet.io/t/why-did-costs-drop-so-much-after-eip-4844/113777","pubDate":"Wed, 20 Mar 2024 11:29:26 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113777"},"source":{"@url":"https://community.starknet.io/t/why-did-costs-drop-so-much-after-eip-4844/113777.rss","#text":"Why did costs drop so much after EIP-4844?"}},{"title":"SNIP 80 get_l1_blockhash syscall","dc:creator":"marcellobardus","category":"SNIPs","description":"<h1><a name=\"simple-summary-1\" class=\"anchor\" href=\"https://community.starknet.io#simple-summary-1\"></a>Simple summary</h1>\n<p>A syscall to access current and historical L1 block hashes, removing the need for using the messaging bridge.</p>\n<h1><a name=\"abstract-2\" class=\"anchor\" href=\"https://community.starknet.io#abstract-2\"></a>Abstract</h1>\n<p>This proposal describes how with minimal changes to the rollup contraction smart contracts on starknet can get access to arbitrary L1 block hashes making e.g. the verification of storage proofs almost instant.</p>\n<h1><a name=\"motivation-3\" class=\"anchor\" href=\"https://community.starknet.io#motivation-3\"></a>Motivation</h1>\n<p>As of today storage proof solutions such as e.g. <a href=\"https://herodotus.dev\" rel=\"noopener nofollow ugc\">Herodotus</a> have latency in accessing historical L1 data on Starknet mostly because of the latency coming from the native messaging system.<br>\nThe latency comes from the necessity of sending a block hash from L1 to Starknet in order to verify a proof against it.<br>\nNowadays this latency is around 5 minutes which is a significant amount of time in these workflows that prove the access to recent data.</p>\n<h1><a name=\"specification-4\" class=\"anchor\" href=\"https://community.starknet.io#specification-4\"></a>Specification</h1>\n<p>Add a new syscall <code>get_l1_block_hash</code>.</p>\n<h3><a name=\"syntax-5\" class=\"anchor\" href=\"https://community.starknet.io#syntax-5\"></a>Syntax</h3>\n<pre><code class=\"lang-auto\">extern fn get_l1_block_hash_syscall(\n    l1_block_number: u64\n) -&gt; SyscallResult&lt;u256&gt; implicits(GasBuiltin, System) nopanic;\n</code></pre>\n<h3><a name=\"description-6\" class=\"anchor\" href=\"https://community.starknet.io#description-6\"></a>Description</h3>\n<p>Gets the hash of a specific L1 block within the range of <code>[0, current_l1_block - reorg_safe_threshold]</code>.</p>\n<h3><a name=\"arguments-7\" class=\"anchor\" href=\"https://community.starknet.io#arguments-7\"></a>Arguments</h3>\n<p><code>block_number u64</code> The number of the L1 block whose hash you want to get.</p>\n<h3><a name=\"return-values-8\" class=\"anchor\" href=\"https://community.starknet.io#return-values-8\"></a>Return values</h3>\n<p>The hash of the specified L1 block.</p>\n<h3><a name=\"common-library-9\" class=\"anchor\" href=\"https://community.starknet.io#common-library-9\"></a>Common library</h3>\n<p><code>syscalls.cairo</code></p>\n<h3><a name=\"error-messages-10\" class=\"anchor\" href=\"https://community.starknet.io#error-messages-10\"></a>Error messages</h3>\n<ol>\n<li><code>Block number out of range</code> ‚Üí <code>l1_block_number</code> is greater than <code>current_l1_block - reorg_safe_threshold</code>.</li>\n</ol>\n<h1><a name=\"implementation-11\" class=\"anchor\" href=\"https://community.starknet.io#implementation-11\"></a>Implementation</h1>\n<p>The implementation of this proposal would require changes to both the L1 contracts that allow Starknet to settle as well as the StarknetOS itself.</p>\n<h3><a name=\"historical-block-hash-accumulator-12\" class=\"anchor\" href=\"https://community.starknet.io#historical-block-hash-accumulator-12\"></a>Historical block hash accumulator</h3>\n<p>Part of the work done by Herodotus is maintaining the historical block hash accumulator described <a href=\"https://docs.herodotus.dev/herodotus-docs/protocol-design/historical-block-hash-accumulator\" rel=\"noopener nofollow ugc\">here</a> generated in collaboration with Starkware during <a href=\"https://starkware.co/resource/proving-ethereums-state-on-starknet-with-herodotus/\" rel=\"noopener nofollow ugc\">this</a> event.</p>\n<p>This accumulator lives on L1 and allows L1 smart contracts to arbitrary block hashes from the past.</p>\n<h3><a name=\"os-carried-outputs-13\" class=\"anchor\" href=\"https://community.starknet.io#os-carried-outputs-13\"></a>OS carried outputs</h3>\n<p>Currently the starknetOS implements a structure called <code>OsCarriedOutputs</code> defined <a href=\"https://github.com/starkware-libs/cairo-lang/blob/efa9648f57568aad8f8a13fbf027d2de7c63c2c0/src/starkware/starknet/core/os/output.cairo#L57C8-L57C24\" rel=\"noopener nofollow ugc\">here</a>.<br>\nThe implementation of this SNIP would require introducing a new property to it called <code>accessed_l1_block_hashes</code>.</p>\n<h3><a name=\"block-header-structure-14\" class=\"anchor\" href=\"https://community.starknet.io#block-header-structure-14\"></a>Block header structure</h3>\n<p>It would also most likely require adding a field to the block header specifying which root of the MMR has been used to verify inclusion proofs for the accessed l1 block hashes.</p>\n<h3><a name=\"mmr-inclusion-proofs-15\" class=\"anchor\" href=\"https://community.starknet.io#mmr-inclusion-proofs-15\"></a>MMR inclusion proofs</h3>\n<p>Once a MMR root is available on L1 it can be passed as a ‚Äúpublic‚Äù input to the OS through the L1 verifier contract, such that within the OS inclusion proofs can be verified in order to <code>authenticate</code> any sequencer response to a syscall invocation.</p>\n<h3><a name=\"loading-the-mmr-root-to-the-verifier-contract-16\" class=\"anchor\" href=\"https://community.starknet.io#loading-the-mmr-root-to-the-verifier-contract-16\"></a>Loading the MMR root to the verifier contract</h3>\n<p>In order to make the syscall sound despite the proof verification within the StarknetOS, also ensuring that the root used for the verification is valid.<br>\nThis should be done in <a href=\"https://github.com/starkware-libs/cairo-lang/blob/efa9648f57568aad8f8a13fbf027d2de7c63c2c0/src/starkware/starknet/solidity/Starknet.sol#L301\" rel=\"noopener nofollow ugc\">this</a> part of the verifier.<br>\nA new function should be added to the library <a href=\"https://github.com/starkware-libs/cairo-lang/blob/efa9648f57568aad8f8a13fbf027d2de7c63c2c0/src/starkware/solidity/components/OnchainDataFactTreeEncoder.sol\" rel=\"noopener nofollow ugc\">OnchainDataFactTreeEncoder</a> such that it takes a root retrieving by calling <a href=\"https://github.com/HerodotusDev/offchain-evm-headers-processor/blob/b64bf032e165b8690f5815733d70bdf5a9bb60f1/solidity-verifier/src/SharpFactsAggregator.sol#L450\" rel=\"noopener nofollow ugc\">this</a> getter.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/snip-80-get-l1-blockhash-syscall/113771\">Read full topic</a></p>","link":"https://community.starknet.io/t/snip-80-get-l1-blockhash-syscall/113771","pubDate":"Tue, 19 Mar 2024 23:21:07 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113771"},"source":{"@url":"https://community.starknet.io/t/snip-80-get-l1-blockhash-syscall/113771.rss","#text":"SNIP 80 get_l1_blockhash syscall"}},{"title":"Starknet Emission and Tokenomics Simulator","dc:creator":"aleksandar","category":"ü§∑‚Äç‚ôÄÔ∏è All-Purpose Hangout","description":"<h1><a name=\"strk-emission-simulator-1\" class=\"anchor\" href=\"https://community.starknet.io#strk-emission-simulator-1\"></a>STRK Emission Simulator</h1>\n<p>Dear Starknet Community,</p>\n<p>In light of the recent buzz surrounding the STRK token launch, we developed  a streamlit dashboard designed to enhance your understanding of the tokenomics behind STRK and encourage experimentation with various vesting schedules as some portions of the vesting are still not known.</p>\n<h2><a name=\"what-is-it-2\" class=\"anchor\" href=\"https://community.starknet.io#what-is-it-2\"></a>What is it?</h2>\n<p>The <a href=\"https://starknet-model.streamlit.app/\" rel=\"noopener nofollow ugc\">STRK Emission Simulator</a> is a dashboard built to empower our community of token holders and potential investors. It allows you to interact with and vizualize various emission, staking, and inflation metrics, enabling you to make informed decisions about your involvement with STRK and proposed changes to STRK.</p>\n<h2><a name=\"features-3\" class=\"anchor\" href=\"https://community.starknet.io#features-3\"></a>Features</h2>\n<ol>\n<li>\n<p>Open-Source Model: Our simulator is built on RadCAD and utilizes the Streamlit library for the user interface. The entire codebase is open-source and available for exploration and contribution on <a href=\"https://github.com/alex-damjanovic/starknet_model\" rel=\"noopener nofollow ugc\">GitHub</a>. We encourage community members to raise issues and contribute through pull requests to continually improve the simulator.</p>\n</li>\n<li>\n<p>Parameter Scenarios: The simulator enables you to conduct simulations with different parameter scenarios grouped into three categories:</p>\n</li>\n</ol>\n<ul>\n<li>Inflation Coefficient</li>\n<li>Total Supply &amp; TGE Date</li>\n<li>Staking Parameters</li>\n<li>Allocation Configuration</li>\n</ul>\n<ol start=\"3\">\n<li>Customization: All above mentioned  Parameter Scenarios are customizable, making it easy to test out different vesting unlock frequency, staking rate volatility, inflation coefficients, etc.</li>\n</ol>\n<h2><a name=\"why-use-it-4\" class=\"anchor\" href=\"https://community.starknet.io#why-use-it-4\"></a>Why Use it?</h2>\n<p>By testing various scenarios and validating the results, each member of our community can deepen their understanding of the STRK tokenomics model. Armed with this knowledge, you can confidently propose governance changes and make strategic decisions regarding your involvement with STRK.</p>\n<h2><a name=\"get-involved-5\" class=\"anchor\" href=\"https://community.starknet.io#get-involved-5\"></a>Get Involved:</h2>\n<p>We invite all community members to explore the STRK Emission Simulator, run simulations, propose new KPIs to be tracked, improvements  and share your insights with the community.</p>\n<p>Best regards,<br>\nAleks</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/starknet-emission-and-tokenomics-simulator/113756\">Read full topic</a></p>","link":"https://community.starknet.io/t/starknet-emission-and-tokenomics-simulator/113756","pubDate":"Sat, 16 Mar 2024 01:32:25 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113756"},"source":{"@url":"https://community.starknet.io/t/starknet-emission-and-tokenomics-simulator/113756.rss","#text":"Starknet Emission and Tokenomics Simulator"}},{"title":"Understanding the Layer 3 appchain landscape on Starknet","dc:creator":"lxdnr","category":"ü§∑‚Äç‚ôÄÔ∏è All-Purpose Hangout","description":"<p>Complete noob in the Starknet layer 3 landscape here to ask questions to help me better understand it. <img src=\"https://emoji.discourse-cdn.com/twitter/thought_balloon.png?v=12\" title=\":thought_balloon:\" class=\"emoji\" alt=\":thought_balloon:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>As of my current understanding, <a href=\"https://www.theblock.co/post/275052/starknet-celestia-data-availability-layer-3\" rel=\"noopener nofollow ugc\">the collaboration with Celestia</a> is a major step towards providing a data availability layer for L3s on Starknet.</p>\n<p>The vision (please correct me if I‚Äôm missing something) is that Starknet processes proofs submitted by L3s (with the help of sequencers like Madara), each L3 being a specialized blockchain that could run its own consensus mechanism, tokenomics and specialize in its area of expertise. Currently Dojo is looking at this landscape to enable project teams to deploy games as L3s, reducing costs and making it more scalable. This opens new doors to the builder journey on Starknet whereby it‚Äôs now possible to deploy a dapp as a sovereign state machine secured by Ethereum.</p>\n<p>Highlevel questions:</p>\n<ul>\n<li>What key architectural components are required on the L3 side to have a Starknet-compitible L3? Does it need to be running a Cairo VM?</li>\n</ul>\n<p>I‚Äôm curious to double click into what this builder journey looks like:</p>\n<ul>\n<li>What existing frameworks will be used to build an L3?</li>\n<li>How easy will it be to deploy an appchain? What does the L3 onboarding mechanism look like? Is it completely permissionless?</li>\n<li>What overhead and tradeoffs exists with maintaining your own L3 vs. deploying contracts directly to Starknet?</li>\n<li>Will these L3s have their own on-chain governance mechanisms?</li>\n<li>Is it possible to have two different L3s send messages between each other? How?</li>\n</ul>\n<p><a href=\"https://www.madara.build/\" rel=\"noopener nofollow ugc\">Madara</a> will also have a crucial role by providing sequencers for these L3s.</p>\n<ul>\n<li>Will Madara have specialized sequencers dedicated to serve specific L3s?</li>\n<li>What do the economics look like for L3s that require Madara to maintain uptime? And for Madara to ‚Äúservice‚Äù them?</li>\n</ul>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/understanding-the-layer-3-appchain-landscape-on-starknet/113747\">Read full topic</a></p>","link":"https://community.starknet.io/t/understanding-the-layer-3-appchain-landscape-on-starknet/113747","pubDate":"Fri, 15 Mar 2024 00:07:36 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113747"},"source":{"@url":"https://community.starknet.io/t/understanding-the-layer-3-appchain-landscape-on-starknet/113747.rss","#text":"Understanding the Layer 3 appchain landscape on Starknet"}},{"title":"Universal Sierra Compiler (USC)","dc:creator":"arcticae","category":"Starknet Technical Development","description":"<h1><a name=\"universal-sierra-compiler-1\" class=\"anchor\" href=\"https://community.starknet.io#universal-sierra-compiler-1\"></a>Universal Sierra Compiler</h1>\n<p>The Software Mansion Team has created a new tool, <a href=\"https://github.com/software-mansion\" rel=\"noopener nofollow ugc\">Universal Sierra Compiler</a> (further abbreviated as USC).</p>\n<p>USC is the tool for Sierra compilation - it compiles any ever-existing Sierra version to CASM.</p>\n<p>The idea behind USC is simple, yet it might make things easier for some tools.<br>\nIt bundles all Sierra compilers previously released, and depending on the version contained inside the Sierra JSON, it chooses the right compiler.<br>\nTherefore it allows any tool to be independent of Sierra version.</p>\n<p>Universal Sierra Compiler might become especially useful for nodes, which have to interact with contracts deployed in different versions of Sierra, but also any other tool that depends on the versioning of Sierra.</p>\n<h2><a name=\"usage-2\" class=\"anchor\" href=\"https://community.starknet.io#usage-2\"></a>Usage</h2>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Command</th>\n<th>Purpose</th>\n<th>Input</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>compile-contract</td>\n<td>compile Sierra of a Starknet contract</td>\n<td>output of <code>cairo-compile</code></td>\n</tr>\n<tr>\n<td>compile-raw</td>\n<td>compile Sierra of a Cairo program</td>\n<td>output of <code>starknet-compile</code></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</div><pre data-code-wrap=\"shell\"><code class=\"lang-shell\">$ universal-sierra-compiler compile-raw --sierra-path ./path/to/sierra.json\n\n{\"assembled_cairo_program\": ...}\n</code></pre>\n<h2><a name=\"installation-3\" class=\"anchor\" href=\"https://community.starknet.io#installation-3\"></a>Installation</h2>\n<p>Use the provided script to install the latest version of Universal Sierra Compiler:</p>\n<pre data-code-wrap=\"shell\"><code class=\"lang-shell\">curl -L https://raw.githubusercontent.com/software-mansion/universal-sierra-compiler/master/scripts/install.sh | sh\n\n...\nuniversal-sierra-compiler (v2.0.0) has been installed successfully.\n</code></pre>\n<p>It is also possible to install a specific version of USC by passing, for example:</p>\n<pre data-code-wrap=\"shell\"><code class=\"lang-shell\">curl -L https://raw.githubusercontent.com/software-mansion/universal-sierra-compiler/master/scripts/install.sh | sh -s v2.0.0\n</code></pre>\n<p>however, since USC aims to be backwards-compatible itself, it should be enough to always use the latest version (e.g. on CI).</p>\n<p>If you wish to use sierra version from Cairo <code>release candidate</code> (<code>rc</code>) you would want to use an <code>rc</code> version of USC as well.<br>\nNote that <code>rc</code> versions of USC will not be fetched when installing the latest version. For that you would need to specify a concrete <code>rc</code> version.</p>\n<h2><a name=\"when-to-update-usc-4\" class=\"anchor\" href=\"https://community.starknet.io#when-to-update-usc-4\"></a>When to update USC?</h2>\n<p>We aim to prioritize creating a new release of USC available on <a href=\"https://github.com/software-mansion/universal-sierra-compiler/releases\" rel=\"noopener nofollow ugc\">GitHub</a>, as soon as a new Sierra version comes out.</p>\n<p>Only then, if you would need to use the newest Sierra, you should update the USC version.</p>\n<hr>\n<p><a href=\"https://github.com/software-mansion/universal-sierra-compiler\" rel=\"noopener nofollow ugc\">Check out the repo on GitHub</a></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/universal-sierra-compiler-usc/113702\">Read full topic</a></p>","link":"https://community.starknet.io/t/universal-sierra-compiler-usc/113702","pubDate":"Thu, 07 Mar 2024 08:26:19 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113702"},"source":{"@url":"https://community.starknet.io/t/universal-sierra-compiler-usc/113702.rss","#text":"Universal Sierra Compiler (USC)"}},{"title":"Cairo v2.6.0 is out!","dc:creator":"FeedTheFed","category":"Cairo Development","description":"<h1><a name=\"cairo-v260-1\" class=\"anchor\" href=\"https://community.starknet.io#cairo-v260-1\"></a>Cairo v2.6.0</h1>\n<ul>\n<li><a href=\"https://community.starknet.io/t/cairo-v2-6-0-is-out/113687#tldr-2\">TL;DR</a></li>\n<li><a href=\"https://community.starknet.io/t/cairo-v2-6-0-is-out/113687#performance-improvements-3\">Performance improvements</a></li>\n<li><a href=\"https://community.starknet.io/t/cairo-v2-6-0-is-out/113687#if-let-while-let-6\"><code>if let</code> &amp; <code>while let</code></a></li>\n<li><a href=\"https://community.starknet.io/t/cairo-v2-6-0-is-out/113687#consts-7\">Consts</a></li>\n<li><a href=\"https://community.starknet.io/t/cairo-v2-6-0-is-out/113687#miscellaneous-8\">Miscellaneous</a></li>\n</ul>\n<h2><a name=\"tldr-2\" class=\"anchor\" href=\"https://community.starknet.io#tldr-2\"></a>TL;DR</h2>\n<p><a href=\"https://github.com/starkware-libs/cairo/releases/tag/v2.6.0\">Cairo 2.6.0</a> was just released. This version involves a Sierra upgrade to v1.5.0, <strong>which means contracts written with v2.6.0 are only deployable on Starknet ‚â• 0.13.1</strong>. The testnets upgrades are planned for March 5‚Äôth and 6‚Äôth (Sepolia and Goerli correspondingly), while the mainnet upgrade is planned for approximately one week later. As usual, you can continue using older compiler versions and deploy them on Starknet.</p>\n<p>This version is not very heavy feature-wise, but it does include significant performance improvements, potentially significantly reducing the number of steps (and, as a result, the transaction fees) in your contract‚Äôs functions without requiring code changes. <strong>To be clear, to enjoy this potential speedup, you need to recompile your contracts with v2.6.0, and upgrade your contracts to use the new code</strong>. Continue with the rest of the post to see what‚Äôs new in this version in more detail.</p>\n<h2><a name=\"performance-improvements-3\" class=\"anchor\" href=\"https://community.starknet.io#performance-improvements-3\"></a>Performance improvements</h2>\n<p>Up until now, ERC20 transfers with both the account and ERC20 contracts written in Cairo were ~2-2.5x more expensive, in terms of # of steps, than similar ERC20 transfers where both the account and ERC20 contracts were written in Cairo zero. With Cairo 2.6.0, transfer transactions beat the Cairo zero performance by ~10-20% (this was tested on <a href=\"https://github.com/OpenZeppelin/cairo-contracts/releases/tag/v0.9.0\">OpenZeppelin 0.9.0</a> ERC20 and account contracts, when compiled with the new version). Generally, the more abstracted the language is (or the further away it is from assembly), the less performant one would expect it to be. How, then, do Cairo 2.6.0 transfer transactions beat their Cairo zero counterpart? This was made possible due to two recent changes:</p>\n<h3><a name=\"using-spanfelt252-rather-than-arrayfelt252-in-external-function-signatures-4\" class=\"anchor\" href=\"https://community.starknet.io#using-spanfelt252-rather-than-arrayfelt252-in-external-function-signatures-4\"></a>Using <code>Span&lt;felt252&gt;</code> rather than <code>Array&lt;felt252&gt;</code> in external function signatures</h3>\n<p>Whenever devs write external functions, the compiler wraps those functions with the actual contract entry points, which gets the raw calldata as a sequence of felts, and deserializes it according to the function signature. This deserialization phase has some step costs, which can get large for large calldata. This happens at least twice in every transaction, during the call to the <code>__validate__</code> and <code>__execute__</code> functions. In standard implementations, both execute and validate have the following signature:</p>\n<pre><code class=\"lang-auto\">fn __execute__(ref self: ContractState, calls: Array&lt;Call&gt;) -&gt; Array&lt;Span&lt;felt252&gt;&gt;\n</code></pre>\n<p>Already in v2.5.0 the <code>Call</code> struct was changed from:</p>\n<pre><code class=\"lang-auto\">#[derive(Drop, Serde, Debug)]\npub struct Call {\n    pub to: ContractAddress,\n    pub selector: felt252,\n    pub calldata: Array&lt;felt252&gt;\n}\n</code></pre>\n<p>to:</p>\n<pre><code class=\"lang-auto\">#[derive(Drop, Serde, Debug)]\npub struct Call {\n    pub to: ContractAddress,\n    pub selector: felt252,\n    pub calldata: Span&lt;felt252&gt;\n}\n</code></pre>\n<p>We‚Äôre mentioning this change now, although it technically happened on v2.5.0, since popular accounts only recently adjusted to the new struct. While the deserialization into an array requires looping over the elements, deserialization into <code>Span&lt;felt252&gt;</code> is trivial, hence thanks to the above change, we‚Äôre doing less steps during the calldata deserialization phase for both <code>__validate__</code> and <code>__execute__</code>.</p>\n<h3><a name=\"aggresive-inlining-5\" class=\"anchor\" href=\"https://community.starknet.io#aggresive-inlining-5\"></a>(Aggresive) Inlining</h3>\n<p>Thanks to the fact that the new language has a much more structured representation compared to Cairo zero (which was closer to a syntactic sugar for Cairo assembly), we can now decide on an <a href=\"https://en.wikipedia.org/wiki/Inline_expansion\">inlining</a> strategy and try to find the sweet spot on the # of steps vs code length tradeoff.</p>\n<p>By inlining small enough functions (thus saving the step-cost involved in calling the functions and obtaining its arguments), we were able to significantly reduce the # of steps involved in a transfer transaction. In fact, for accounts and ERC20 contracts, our inlining heuristic even reduced the code length, which is expected if there are many small functions with a large number of arguments, making their arguments handling longer (in terms of # of instructions) than the actual function body.</p>\n<p>Note that in addition to user-defined functions, as of v2.6.0 many of the corelib functions are now inlined. To see the specific details of our inlining strategy, we refer the interested reader to the relevant <a href=\"https://github.com/starkware-libs/cairo/blob/f248f46523c905f5be58f1223827c42f62998a06/crates/cairo-lang-lowering/src/inline/mod.rs#L46\">compiler code</a>.</p>\n<blockquote>\n<p>We emphasize that to enjoy the benefits of the new optimizations, devs should recompile their contracts with the v2.6.0 compiler and upgrade their contracts on-chain</p>\n</blockquote>\n<h2><a name=\"if-let-while-let-6\" class=\"anchor\" href=\"https://community.starknet.io#if-let-while-let-6\"></a><code>if let</code> &amp; <code>while let</code></h2>\n<p>Similarly to Rust, Cairo now supports <a href=\"https://doc.rust-lang.org/rust-by-example/flow_control/if_let.html\">if let</a> and <a href=\"https://doc.rust-lang.org/rust-by-example/flow_control/while_let.html\">while let</a> expressions:</p>\n<pre><code class=\"lang-auto\">#[derive(Drop)]\nenum MyEnum {\n    Foo,\n    Bar\n}\n\nlet number = Option::Some(5);\nlet foo_or_bar = MyEnum::Foo;\n\nif let Option::Some(i) = number {\n    //do something\n}\n\nif let MyEnum::Bar = foo_or_bar {\n    //do something\n}\n\nfn array_sum(mut arr: Array&lt;felt252&gt;) -&gt; felt252 {\n    let mut sum = 0;\n    while let Option::Some(x) = arr.pop_front() {\n        sum += x;\n    };\n    sum\n}\n</code></pre>\n<h2><a name=\"consts-7\" class=\"anchor\" href=\"https://community.starknet.io#consts-7\"></a>Consts</h2>\n<p>Before Cairo v2.6.0, only literal constants were supported (that is, constants of types that can be instantiated from a literal). To ‚Äúdefine‚Äù constants of more complicated types, devs usually had to write dedicated functions, for example:</p>\n<pre><code class=\"lang-auto\">struct MyStruct {\n    a: u256,\n    b: u256\n}\n\n// instead of const zero_struct: MyStruct { 0, 0 }, we need the following:\nfn zero_struct() -&gt; MyStruct {\n    MyStruct { a: 0, b: 0 }\n}\n</code></pre>\n<p>Sierra v1.5.0 has the notion of a consts segment within the program (Sierra) bytecode, which finally enables us to have non-trivial consts in our high-level Cairo program:</p>\n<pre><code class=\"lang-auto\">enum ThreeOptions {\n    A: felt252,\n    B: (u256, u256),\n    C,\n}\n\nstruct ThreeOptionsPair {\n    a: ThreeOptions,\n    b: ThreeOptions,\n}\n\nconst V: ThreeOptionsPair = ThreeOptionsPair {\n    a: ThreeOptions::A(1337),\n    b: ThreeOptions::C,\n};\n</code></pre>\n<p>We can refer to our defined consts directly or via <code>Box</code>:</p>\n<pre><code class=\"lang-auto\">fn bar() -&gt; ThreeOptionsPair { V }\nfn foo() -&gt; Box&lt;ThreeOptionsPair&gt; { BoxTrait::new(V) }\n</code></pre>\n<p>Using boxes we can pass the const value around without paying for copying the contents.</p>\n<p>Currently, structs and enums are supported, and we‚Äôll soon extend the support to additional types. Most notably, const <code>Span&lt;felt252&gt;</code> will be supported soon, analogous to <code>dw</code> (define word) from Cairo zero. Since additional type support only requires changes to the high-level compiler (Cairo ‚Üí Sierra), once it is added it will immediately be accessible on Starknet via Scarb nightlies.</p>\n<h2><a name=\"miscellaneous-8\" class=\"anchor\" href=\"https://community.starknet.io#miscellaneous-8\"></a>Miscellaneous</h2>\n<p>In this post we covered the major features of v2.6.0. As usual, there are several minor improvements that you can find, for example, adding support for <code>_</code> in a match arm when matching over tuples or the addition of <code>min</code> and <code>max</code> functions to the corelib for types <code>T</code> for which there is a <code>PartialOrd&lt;T&gt;</code> implementation. For an exhaustive list of features, you can see the <a href=\"https://github.com/starkware-libs/cairo/releases/tag/v2.6.0\">release notes</a> on GitHub.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/cairo-v2-6-0-is-out/113687\">Read full topic</a></p>","link":"https://community.starknet.io/t/cairo-v2-6-0-is-out/113687","pubDate":"Mon, 04 Mar 2024 16:36:04 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113687"},"source":{"@url":"https://community.starknet.io/t/cairo-v2-6-0-is-out/113687.rss","#text":"Cairo v2.6.0 is out!"}},{"title":"Starknet v0.13.1 pre-release notes","dc:creator":"ilia","category":"üÜô Versions Upgrade","description":"<p><code>Sepolia Testnet</code> ‚Äì March 5<br>\n<code>Goerli Testnet</code> ‚Äì March 7<br>\n<code>Mainnet</code> ‚Äì March 12</p>\n<h1><a name=\"conceptual-changes-1\" class=\"anchor\" href=\"https://community.starknet.io#conceptual-changes-1\"></a>Conceptual Changes</h1>\n<p>Starknet v0.13.1 deals mostly with stability and performance improvements. The following items cover the changes feature-wise:</p>\n<ol>\n<li>\n<p>Starknet will use EIP4844 and send state diffs as blobs rather than <code>calldata</code>. This means that we need to add the notion of <code>data_gas</code> to Starknet blocks.</p>\n</li>\n<li>\n<p>Pricing</p>\n<ol>\n<li>\n<p>The gas prices of various Starknet operations will be reduced due to the adoption of EIP4844 alongside other improvements.</p>\n</li>\n<li>\n<p>The pricing for calldata and class declaration will change.</p>\n</li>\n</ol>\n</li>\n<li>\n<p>Bytecode segmentation ‚Äì changing the definition of a compiled class hash so that only the used functions of a contract will be loaded into memory during the proof.</p>\n</li>\n<li>\n<p>Changes in behavior of time-related syscalls when called from <code>validate</code>:</p>\n<ol>\n<li>\n<p>The <code>get_block_timestamp</code> syscall will return the hour, rounded down</p>\n</li>\n<li>\n<p>The <code>get_blocknum</code> syscall will return the block number rounded down to the nearest multiple of 100</p>\n</li>\n</ol>\n</li>\n</ol>\n<h1><a name=\"api-changes-2\" class=\"anchor\" href=\"https://community.starknet.io#api-changes-2\"></a>API Changes</h1>\n<h2><a name=\"fgw-requestresponse-3\" class=\"anchor\" href=\"https://community.starknet.io#fgw-requestresponse-3\"></a>FGW request/response</h2>\n<ol>\n<li>\n<p>Adding the <code>l1_da_mode</code> field to the block header (including the pending block), a string enum that takes the values ‚ÄúCALLDATA‚Äù or ‚ÄúBLOB‚Äù and indicates the DA solution that is used for this particular block</p>\n</li>\n<li>\n<p>Adding the <code>l1_data_gas_price</code> field to the block header (including the pending block).</p>\n<ol>\n<li>Contains <code>price_in_wei</code> and <code>price_in_fri</code> (10<sup>-18</sup> denominations, similar to <a href=\"https://github.com/starkware-libs/starknet-specs/blob/49665932a97f8fdef7ac5869755d2858c5e3a687/api/starknet_api_openrpc.json#L3766\">v0.6.0</a>).</li>\n</ol>\n</li>\n<li>\n<p>Similarly to the above, the existing fields <code>eth_l1_gas_price</code> and <code>strk_l1_gas_price </code>will be under a new field <code>l1_gas_price</code>.</p>\n</li>\n<li>\n<p><code>get_compiled_class_by_class_hash</code> will return the updated compiled class structure, i.e. including segments data.</p>\n<ol>\n<li>Concretely, the field <code>bytecode_segments_lengths</code> is added, which is a nested list of integers.</li>\n</ol>\n</li>\n<li>\n<p>Transactions + events commitments are added to <code>get_block</code> endpoint.</p>\n</li>\n<li>\n<p>Transaction receipt refactor:</p>\n<ol>\n<li>\n<p>Receipts, as they appear in a <code>get_block </code>request, now include the <code>data_availability</code> property, which isolates DA resources from computation resources. This property includes <code>l1_gas</code> and <code>l1_data_gas</code> that were incurred by state updates (one of them will always be zero)</p>\n</li>\n<li>\n<p>Receipts now include syscall-related resources. Each syscall has an associated step-cost, which can be found <a href=\"https://github.com/starkware-libs/blockifier/blob/5fe26bd71143ac96beea2902086ce68179f27cbb/crates/blockifier/resources/versioned_constants.json#L167\">here</a>. So far, these costs were included in the fee but not reported inside receipts. <strong>This is now changing, so a spike in the receipt resources is to be expected,</strong> these are not new costs, rather these are costs that are already incurred but were not reported in the receipt so far.</p>\n</li>\n</ol>\n</li>\n</ol>\n<p>The source of truth for the feeder gateway response is <a href=\"https://github.com/starkware-libs/cairo-lang/blob/v0.13.1a0/src/starkware/starknet/services/api/feeder_gateway/response_objects.py\">FGW response objects</a>.</p>\n<h2><a name=\"json-rpc-4\" class=\"anchor\" href=\"https://community.starknet.io#json-rpc-4\"></a>JSON RPC</h2>\n<p><strong>It is completely fine to continue using rpc v0.6.0 to interact with SN 0.13.1.</strong> Responses from 0.13.1 can be mapped naturally into v0.6.0 objects (see the next section).</p>\n<p>A new version of the RPC, 0.7.0, will be released to accommodate the changes induced by using EIP4844:</p>\n<ol>\n<li>\n<p>Addition of EIP4844 <code>l1_data_gas_price</code> field in block header.</p>\n<ol>\n<li>Contains <code>price_in_wei</code> and <code>price_in_fri</code> (10<sup>-18</sup> denominations, similar to <a href=\"https://github.com/starkware-libs/starknet-specs/blob/49665932a97f8fdef7ac5869755d2858c5e3a687/api/starknet_api_openrpc.json#L3766\">v0.6.0</a>).</li>\n</ol>\n</li>\n<li>\n<p>Addition of the <code>l1_da_mode</code> field to the block header. This is an enum that indicates whether this block will use calldata or blobdata and can take the following values:</p>\n<ol>\n<li>\n<p>CALLDATA</p>\n</li>\n<li>\n<p>BLOB</p>\n</li>\n</ol>\n</li>\n<li>\n<p><code>FEE_ESTIMATE</code></p>\n<ol>\n<li>\n<p>Will include two new fields:</p>\n<ol>\n<li>\n<p><code>data_gas_consumed</code></p>\n</li>\n<li>\n<p><code>data_gas_price</code></p>\n</li>\n</ol>\n</li>\n<li>\n<p><code>overall_fee</code> will now be <code>gas_consumed</code> <code>√ó</code> <code>gas_price</code> <code>+</code> <code>data_gas_consumed</code> <code>√ó</code> <code>data_gas_price</code></p>\n</li>\n<li>\n<p>Fee estimates will change depending on the DA solution used by current Starknet blocks, i.e. if I estimate fee against the pending block, and it‚Äôs currently using <code>CALLDATA</code>, then nodes are expected to return <code>data_gas_consumed=0</code> and compute the fee similarly to today (i.e. get higher estimates)</p>\n</li>\n</ol>\n</li>\n<li>\n<p>We are adding data availability resources to the receipts and traces</p>\n<ol>\n<li>\n<p>The field <code>data_availability</code> is added to <code>execution_resources</code> of receipts</p>\n</li>\n<li>\n<p>A new <code>execution_resources</code> entry is added to the main receipt object, and this entry will include DA resources. Note that the resources of internal calls will remain the same</p>\n</li>\n<li>\n<p>For more details, see the <a href=\"https://github.com/starkware-libs/starknet-specs/pull/187/files\">PR to the specs</a></p>\n</li>\n</ol>\n</li>\n<li>\n<p><code>EXECUTION_RESOURCES</code></p>\n<ol>\n<li>\n<p>Similarly to the FGW changes, we‚Äôre separating computation resources from DA resources. This is done by introducing a new <code>data_availability</code> property which includes <code>l1_gas</code> and <code>l1_data_gas</code> that were consumed due to DA requirements. One of these will always be zero, depending on whether or not the block uses calldata or blobs (as specified by the <code>l1_da_mode</code> field in the block header)</p>\n</li>\n<li>\n<p>Syscall costs are now included in the execution resources of traces and receipts. These are costs that are already being paid for but were not reported so far.</p>\n</li>\n</ol>\n</li>\n</ol>\n<h3><a name=\"conventions-to-embed-new-rpc-version-in-old-5\" class=\"anchor\" href=\"https://community.starknet.io#conventions-to-embed-new-rpc-version-in-old-5\"></a>Conventions to embed new RPC version in old</h3>\n<p>Nodes serving RPC 0.6.0 are expected to:</p>\n<ul>\n<li>\n<p>Ignore the new blob-related fields in the various getBlock requests</p>\n</li>\n<li>\n<p>Keep starknet_estimateFee/starknet_simulateTransactions unchanged. Fee estimations will continue to assume only calldata is used to send state diffs to L1, hence can be significantly larger than the fee charged in practice.</p>\n</li>\n</ul>\n<h3><a name=\"fgw-response-object-rpc-response-object-6\" class=\"anchor\" href=\"https://community.starknet.io#fgw-response-object-rpc-response-object-6\"></a>FGW response object ‚Üí RPC response object</h3>\n<ol>\n<li>\n<p>Map <code>l1_data_gas_price</code> FGW response to <code>l1_data_gas_price</code> RPC response.</p>\n</li>\n<li>\n<p>Map <code>l1_gas_price</code> FGW response to <code>l1_gas_price</code> RPC response.</p>\n</li>\n</ol>\n<h2><a name=\"sdkswallets-how-to-use-the-new-fee-estimates-7\" class=\"anchor\" href=\"https://community.starknet.io#sdkswallets-how-to-use-the-new-fee-estimates-7\"></a>(SDKs/Wallets) How to use the new fee estimates?</h2>\n<p>When we communicate with a node serving rpc 0.7.0, the <code>estimateFee</code> response is richer, and <code>gas_consumed</code> does not account for the resources associated with storage updates (this is encapsulated in <code>data_gas_consumed</code>).</p>\n<p>In Starknet v0.13.1,v3 transactions don‚Äôt send <code>data_gas</code> related fields (max price or max amount). This may change in the future, but it means that we need to define how to map <code>(gas_consumed, gas_price, data_gas_consumed, data_gas_price, overall_fee)</code> into <code>max_amount</code> and <code>max_price_per_unit</code> in the <code>L1_GAS</code> resource (in the future, we might add fields in the resource mapping of v3 transactions, in which case we‚Äôll have a natural mapping between the fee estimate and the signed transaction fields, but this is not yet the case).</p>\n<p>The suggested behavior for SDKs, wallets, or any party sending v3 transactions, is to sign over the following fields:</p>\n<ul>\n<li>\n<p><code>L1_GAS:</code></p>\n<ul>\n<li>\n<p><code>max_amount</code>: (<code>overall_fee</code> <code>/</code> <code>gas_price)</code> <code>√ó</code> <code>gas_safety_margin</code></p>\n</li>\n<li>\n<p><code>max_price_per_unit</code>: <code>gas_price</code> <code>√ó</code> <code>fee_safety_margin</code></p>\n</li>\n</ul>\n</li>\n</ul>\n<p>Where <code>gas_safety_margin</code> and <code>fee_safety_margin</code> are overheads placed by the sdk/wallet to ensure the transaction won‚Äôt be rejected due to price fluctuations (the former safety margin isn‚Äôt really related to the price, but rather to the potential state changes by the time the tx is processed, leading to a slightly different execution resulting in a minor gas difference). Currently, <a href=\"https://github.com/starknet-io/starknet.js/blob/65bea53ab03a04fdd4c122ba2fecbb1010100e18/src/utils/stark.ts#L107\">starknet.js</a> sets those numbers to 1.1 and 1.5 correspondingly.</p>\n<p>Note that the <code>data_gas_consumed</code> field is only used indirectly from the <code>overall_fee</code> field. This trick allows us to fold the two cost dimensions (<code>data_gas</code> and <code>gas</code>) into the single <code>L1_GAS</code> resource, which is currently in the v3 transaction <code>resource_bounds</code> field.</p>\n<p><strong><img src=\"https://emoji.discourse-cdn.com/twitter/warning.png?v=12\" title=\":warning:\" class=\"emoji\" alt=\":warning:\" loading=\"lazy\" width=\"20\" height=\"20\">Note</strong>: unlike in the old fee estimates, <code>max_amount</code> now depends on the ratio <code>data_gas_price/gas_price</code> at the time of estimation, and not only on the state of Starknet. Hence, price fluctuations will affect <code>max_amount</code> and not only <code>gas_price</code>. <strong>Therefore we need a larger safety margin</strong> (larger than today‚Äôs 10%).</p>\n<p>For transactions of version ‚â§2, this is a non-issue since we‚Äôre signing <code>max_fee</code>, which can still be <code>overall_fee</code> <code>√ó</code> <code>fee_safety_margin</code>.</p>\n<h1><a name=\"cairo-8\" class=\"anchor\" href=\"https://community.starknet.io#cairo-8\"></a>Cairo</h1>\n<p>We will have Cairo v2.6.0 / Sierra v1.5.0 with the following changes:</p>\n<ul>\n<li>\n<p>The CasmContractClass struct changes and includes <a href=\"https://github.com/starkware-libs/cairo/blob/c609a8b51233b7cd6348c060e6e6f5079cd6645e/crates/cairo-lang-starknet/src/casm_contract_class.rs#L106\">bytecode_segments_length</a></p>\n</li>\n<li>\n<p>New libfuncs are added that require the new compiler</p>\n<ul>\n<li>\n<p>gas related (redeposit_gas, coupons)</p>\n</li>\n<li>\n<p>match expressions related (enum_from_felt252_bounded)</p>\n</li>\n<li>\n<p>consts related (const_as_box)</p>\n</li>\n<li>\n<p>nullable_forward_snapshot, box_forward_snapshot</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Hash computation of compiled contract classes changes</p>\n<ul>\n<li>\n<p>Backwards compatible for old classes (when compiling Sierra &lt;= 1.4.0, the new compiler will not add segments data, so the structure/hash remains the same)</p>\n</li>\n<li>\n<p>For a non-trivial segmentation, the bytecode hash will be the Poseidon hash of all segments: The hash of a function is the Poseidon hash of its bytecode, and the hash of a compiled class is the chain-hash of its functions‚Äô hashes.</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>The source of truth on the computation of compiled class hashes is in <a href=\"https://github.com/starkware-libs/cairo-lang/blob/v0.13.1a0/src/starkware/starknet/core/os/contract_class/compiled_class_hash.py\">compiled_class_hash.py</a></p>\n<h1><a name=\"execution-changes-9\" class=\"anchor\" href=\"https://community.starknet.io#execution-changes-9\"></a>Execution Changes</h1>\n<h2><a name=\"blockifier-10\" class=\"anchor\" href=\"https://community.starknet.io#blockifier-10\"></a>Blockifier</h2>\n<ul>\n<li>\n<p>Added <code>data_gas_price</code> to block context (<a href=\"https://github.com/starkware-libs/blockifier/pull/1336/files\">see PR</a>).</p>\n</li>\n<li>\n<p>Added <code>use_kzg_da</code> bit to the block context (<a href=\"https://github.com/starkware-libs/blockifier/pull/1336/files\">see PR</a>) - this field will allow getting estimates both old and new fee estimates (note that RPC v0.6.0 should always pass <code>false</code> here, otherwise <code>gas_consumed</code> will be too low).</p>\n</li>\n<li>\n<p>A configuration with parameters that can affect execution will be added to the <code>BlockContext</code> struct and be used in <code>execute</code>: (<a href=\"https://github.com/starkware-libs/blockifier/pull/1348/files\">see PR</a>)</p>\n<ul>\n<li>\n<p>Pricing information (relative weights of steps/builtins and syscall prices)</p>\n</li>\n<li>\n<p>Tx limits (validate max steps limits, execute max steps limit, etc.)</p>\n</li>\n<li>\n<p>The blockifier repo will contain config files associated with recent SN versions (0.13.0 and 0.13.1)</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Added a <code>preprocess_block</code> function that takes a state at the end of block X-1 and returns the block context + state for the beginning of block X (namely, adding the block hash of block X-10 to the state)</p>\n</li>\n</ul>\n<h1><a name=\"pricing-changes-11\" class=\"anchor\" href=\"https://community.starknet.io#pricing-changes-11\"></a>Pricing changes</h1>\n<h2><a name=\"computation-12\" class=\"anchor\" href=\"https://community.starknet.io#computation-12\"></a>Computation</h2>\n<p>The Cairo step price is reduced by a factor of 2x, and will now cost <strong>0.0025 gas/step</strong>. This also means that the costs of all builtins are halved accordingly.</p>\n<h2><a name=\"calldata-and-signatures-13\" class=\"anchor\" href=\"https://community.starknet.io#calldata-and-signatures-13\"></a>Calldata and signatures</h2>\n<p>Each felt in the <code>calldata</code> and <code>signature</code> arrays of all transaction types is now priced at <strong>0.128gas/felt</strong></p>\n<h2><a name=\"class-declaration-14\" class=\"anchor\" href=\"https://community.starknet.io#class-declaration-14\"></a>Class declaration</h2>\n<p>Each felt of <code>sierra_program</code> in the contract class and of <code>bytecode</code> in the compiled contract class is now priced at <strong>28 gas/felt</strong> (note that for v1 declares, we only have <code>bytecode</code>).</p>\n<p>Additionally, each character in the ABI costs <strong>0.875 gas</strong></p>\n<h2><a name=\"events-15\" class=\"anchor\" href=\"https://community.starknet.io#events-15\"></a>Events</h2>\n<p>An additional felt to the <code>data</code> array of an event now costs <strong>0.128 gas/felt</strong> (similarly to calldata). An additional felt to the <code>keys</code> array now costs <strong>0.256 gas/felt</strong>.</p>\n<h1><a name=\"action-items-16\" class=\"anchor\" href=\"https://community.starknet.io#action-items-16\"></a>Action items</h1>\n<h2><a name=\"full-nodes-17\" class=\"anchor\" href=\"https://community.starknet.io#full-nodes-17\"></a>Full nodes</h2>\n<ul>\n<li>\n<p>Release a new version that can sync with SN 0.13.1 before the Testnet upgrade</p>\n</li>\n<li>\n<p>Upgrade the compiler and blockifier dependencies (cairo 2.6.0 / blockifier 0.5.0)</p>\n</li>\n<li>\n<p>Serve RPC 0.7.0</p>\n</li>\n</ul>\n<h2><a name=\"api-providers-18\" class=\"anchor\" href=\"https://community.starknet.io#api-providers-18\"></a>API providers</h2>\n<ul>\n<li>\n<p>Upgrade to the new node version before the Testnet upgrade</p>\n</li>\n<li>\n<p>Nice to have: offer 0.7.0 endpoints</p>\n</li>\n</ul>\n<h2><a name=\"sdks-19\" class=\"anchor\" href=\"https://community.starknet.io#sdks-19\"></a>SDKs</h2>\n<ul>\n<li>Release a version that supports RPC 0.7.0 and properly sign v3 txs in accordance with the above suggestion</li>\n</ul>\n<h2><a name=\"wallets-20\" class=\"anchor\" href=\"https://community.starknet.io#wallets-20\"></a>Wallets</h2>\n<ul>\n<li>Use the new SDK versions to get more accurate fee estimates, and sign v3 txs in accordance with the above suggestion.</li>\n</ul>\n<h2><a name=\"dapps-21\" class=\"anchor\" href=\"https://community.starknet.io#dapps-21\"></a>DApps</h2>\n<ul>\n<li>RPC version 0.4.0 will no longer be supported by nodes, dapps are expected to update their SDK and work with rpc version &gt;= 0.5.0 (preferably, the more update 0.6.0 which is already supported by all SDKs)</li>\n</ul>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/starknet-v0-13-1-pre-release-notes/113664\">Read full topic</a></p>","link":"https://community.starknet.io/t/starknet-v0-13-1-pre-release-notes/113664","pubDate":"Thu, 29 Feb 2024 19:13:34 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113664"},"source":{"@url":"https://community.starknet.io/t/starknet-v0-13-1-pre-release-notes/113664.rss","#text":"Starknet v0.13.1 pre-release notes"}},{"title":"Starknet v0.13.1: Fee Reduction","dc:creator":"ilia","category":"üÜô Versions Upgrade","description":"<p>On February 6th 2024, we posted <a href=\"https://community.starknet.io/t/starknet-v0-13-1-eip4844-support-more-fee-reductions-stability-quality-of-life/112951\">details about Starknet v0.13.1</a>. But every cake needs cherry on top: in addition to the features outlined in the linked post, the gas cost of a Cairo step (and of every builtin) will reduced by a factor of 2! This brings a computation down to 0.0025 gas/step.</p>\n<p>But how? In a nutshell, SHARP will soon support larger trains, leading to improved amortization of various operation costs, consequently justifying a reduction in the amount of gas charged per step/builtin. Some subtler optimizations are also chipping in, but we‚Äôll omit details here for the sake of brevity.</p>\n<p>At any rate, this cherry replicates the <a href=\"https://community.starknet.io/t/starknet-v0-13-0-support-for-fee-payment-in-strk-reduced-transaction-fees/109608\">2x reduction of v0.13.0</a>, continuing the fee reduction effort that will be outlined in much more detail in the upcoming weeks.</p>\n<p>Stay tuned!</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/starknet-v0-13-1-fee-reduction/113552\">Read full topic</a></p>","link":"https://community.starknet.io/t/starknet-v0-13-1-fee-reduction/113552","pubDate":"Thu, 22 Feb 2024 16:11:57 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113552"},"source":{"@url":"https://community.starknet.io/t/starknet-v0-13-1-fee-reduction/113552.rss","#text":"Starknet v0.13.1: Fee Reduction"}},{"title":"Vetting - Integration Starknet to Web3js (plugin)","dc:creator":"Redwan-ChainSafe","category":"üìú Development Proposals","description":"<p>Hello, we are <a href=\"http://ChainSafe.io\" rel=\"noopener nofollow ugc\">ChainSafe.io</a>, a multichain R&amp;D firm (Lodestar, Forest‚Ä¶)<br>\n<a href=\"https://github.com/web3/web3.js\" rel=\"noopener nofollow ugc\">Web3.js</a> is one of the most popular JS libraries for dApp developers with ~2 million NPM downloads per month, and we are the official maintainers of the library since 2020.</p>\n<p><strong>What do you think of an integration of Starknet in Web3js v4?</strong></p>\n<p>We propose to <strong>build a web3.js plugin</strong> to support the following RPC methods (at least for the first version) to improve the developer experience and expand Starknet accessibility to more JS/TS developers beyond <code>starknet.js</code></p>\n<ul>\n<li>\n<p>Integrate the following RPC methods in the <code>web3.starknet</code> plugin v1:</p>\n</li>\n<li>\n<p><code>Account information</code> (getNonce, call)</p>\n</li>\n<li>\n<p><code>Querying Transactions</code> (getTransactionByBlockIdAndIndex, getTransactionReceipt, getBlockTransactionCount, getTransactionByHash, pendingTransactions)</p>\n</li>\n<li>\n<p><code>Fee Estimation</code> (estimateFee, estimateMessageFee)</p>\n</li>\n</ul>\n<p>Before getting into a <a href=\"https://community.starknet.io/t/about-the-snips-category/2780\">SNIP proposal</a>, it is recommended to get the idea vetted.</p>\n<p>What do you think ?</p>\n<p>Thank you !</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://community.starknet.io/t/vetting-integration-starknet-to-web3js-plugin/113446\">Read full topic</a></p>","link":"https://community.starknet.io/t/vetting-integration-starknet-to-web3js-plugin/113446","pubDate":"Tue, 20 Feb 2024 14:56:45 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113446"},"source":{"@url":"https://community.starknet.io/t/vetting-integration-starknet-to-web3js-plugin/113446.rss","#text":"Vetting - Integration Starknet to Web3js (plugin)"}},{"title":"Curia Delegate Thread","dc:creator":"Curia","category":"Governance Proposals","description":"<h2><a name=\"curia-delegate-platform-1\" class=\"anchor\" href=\"https://community.starknet.io#curia-delegate-platform-1\"></a>Curia Delegate Platform</h2>\n<p>Key Information</p>\n<p>Name: Curia</p>\n<p>Delegate ENS: curia-delegates.eth</p>\n<p>Delegate Address: 0x17296956b4E07Ff8931E4ff4eA06709FaB70b879</p>\n<p>Delegate forum: <a class=\"mention\" href=\"https://community.starknet.io/u/englandzz\">@englandzz</a></p>\n<p>Telegram: <span class=\"mention\">@v3dao</span>, <span class=\"mention\">@englandkiiz</span></p>\n<p>Twitter: <a href=\"https://twitter.com/curia_gov\" rel=\"noopener nofollow ugc\">https://twitter.com/curia_gov</a></p>\n<p>Website: <a href=\"https://www.curiahub.xyz/\" rel=\"noopener nofollow ugc\">https://www.curiahub.xyz/</a></p>\n<h4><a name=\"about-us-2\" class=\"anchor\" href=\"https://community.starknet.io#about-us-2\"></a>About Us</h4>\n<p>Curia Lab is a team of seasoned DAO governance researchers, data analysts, blockchain engineers, and developers, we are committed to strengthening the DAO ecosystem through specialized tools, insights and delegate services.</p>\n<h4><a name=\"our-mission-vision-3\" class=\"anchor\" href=\"https://community.starknet.io#our-mission-vision-3\"></a>Our Mission &amp; Vision</h4>\n<p>Curia Lab is dedicated to empowering DAOs with robust, data-driven tools, ensuring transparency and efficiency in governance processes. Our mission extends beyond tool creation; we actively engage in DAO governance as a professional delegate, leveraging our hands-on experience to refine our toolings for each DAOs. This commitment to being part of the governance process ensures that our tools are battle-tested and evolved, addressing the challenges of data inaccessibility, opaque delegate actions, and governance risk assessments with precision and relevance.</p>\n<p>Our vision is a future where the governance of DAOs is seamless, fully transparent, and informed by comprehensive data. We aspire to create an ecosystem where the influence of delegates is clear and their contributions are measurable, enabling real-time monitoring and strategic enhancement of DAO operations. We see Curia Lab at the forefront, leading DAOs into an era where every decision is strategic and data-driven, ensuring a resilient and dynamic governance model.</p>\n<p><strong>Our Goal for Starknet</strong></p>\n<p>Curia Lab aims to support Starknet‚Äôs vision of scalable, secure, and decentralization through our expertise in data-driven governance. Our dedication to advancing the DAO ecosystem motivates us to contribute actively to Starknet, leveraging our deep involvement in DAO governance to enhance decision-making and transparency.</p>\n<p>With our team‚Äôs comprehensive skills in research, data analysis, and blockchain development we‚Äôre excited to be contributing to Starknet‚Äôs growth and progressive decentralization.</p>\n<h2><a name=\"disclosure-4\" class=\"anchor\" href=\"https://community.starknet.io#disclosure-4\"></a>Disclosure</h2>\n<p>As a governance and DAO research team, we work with several other projects and DAOs, such as SafeDAO, Optimism Collective, and ArbitrumDAO, to enhance their governance and decision-making processes. We are committed to maintaining transparency and avoiding conflicts of interest in our work with the Starknet community. When required, we will disclose any potential conflicts of interest that may arise in the course of our engagement.</p>\n<h2><a name=\"waiver-of-liability-5\" class=\"anchor\" href=\"https://community.starknet.io#waiver-of-liability-5\"></a>Waiver of Liability</h2>\n<p>By delegating to Curia, you acknowledge and agree that Curia will participate in Starknet governance on a best-effort basis and will not be liable for any form of damages related to participation in the Starknet.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/curia-delegate-thread/113336\">Read full topic</a></p>","link":"https://community.starknet.io/t/curia-delegate-thread/113336","pubDate":"Fri, 16 Feb 2024 13:41:52 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113336"},"source":{"@url":"https://community.starknet.io/t/curia-delegate-thread/113336.rss","#text":"Curia Delegate Thread"}},{"title":"Scarb procedural macros design document","dc:creator":"maciektr","category":"üìú Development Proposals","description":"<p>The Scarb team is working hard to bring a functional equivalent of Rust‚Äôs procedural macros to Cairo. This effort will, for the first time in Cairo‚Äôs history, give all programmers the ability to write their own code generation for their project‚Äôs needs. Please take a look at the design document attached below. The macros are designed to be written in Rust, then compiled and distributed through Scarb. The procedural macro will be executed as a shared library loaded by Scarb dynamically. We would welcome any feedback you may have to best accommodate your use cases!</p>\n<p>You can see the design document here: <a href=\"https://github.com/software-mansion/scarb/blob/maciektr/proc-macro-design/design/01-proc-macro.md\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">scarb/design/01-proc-macro.md at maciektr/proc-macro-design ¬∑ software-mansion/scarb ¬∑ GitHub</a></p>\n<p>Please fell free to submit any feedback through this pull request: <a href=\"https://github.com/software-mansion/scarb/pull/1109\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Procedural macros design document by maciektr ¬∑ Pull Request #1109 ¬∑ software-mansion/scarb ¬∑ GitHub</a></p>\n            <p><small>2 posts - 1 participant</small></p>\n            <p><a href=\"https://community.starknet.io/t/scarb-procedural-macros-design-document/113305\">Read full topic</a></p>","link":"https://community.starknet.io/t/scarb-procedural-macros-design-document/113305","pubDate":"Thu, 15 Feb 2024 14:07:06 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"community.starknet.io-topic-113305"},"source":{"@url":"https://community.starknet.io/t/scarb-procedural-macros-design-document/113305.rss","#text":"Scarb procedural macros design document"}}]}}}