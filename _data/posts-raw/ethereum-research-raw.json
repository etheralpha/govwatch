{"rss":{"@version":"2.0","@xmlns:discourse":"http://www.discourse.org/","@xmlns:atom":"http://www.w3.org/2005/Atom","@xmlns:dc":"http://purl.org/dc/elements/1.1/","channel":{"title":"Ethereum Research - Latest topics","link":"https://ethresear.ch/latest","description":"Latest topics","lastBuildDate":"Sat, 22 Jun 2024 18:46:11 +0000","atom:link":{"@href":"https://ethresear.ch/latest.rss","@rel":"self","@type":"application/rss+xml"},"item":[{"title":"Avoiding Accidental Liveness Faults for Based Preconfs","dc:creator":"mteam88","category":"Layer 2","description":"<h1><a name=\"avoiding-accidental-liveness-faults-for-based-preconfs-1\" class=\"anchor\" href=\"https://ethresear.ch#avoiding-accidental-liveness-faults-for-based-preconfs-1\"></a>Avoiding Accidental Liveness Faults for Based Preconfs</h1>\n<p><em>thanks to <a href=\"https://x.com/drakefjustin\" rel=\"noopener nofollow ugc\">Justin Drake</a>, <a href=\"https://x.com/jon_charb\" rel=\"noopener nofollow ugc\">Jon Charbonneau</a>, <a href=\"https://x.com/lvdaniels\" rel=\"noopener nofollow ugc\">Ladislaus</a>, <a href=\"https://x.com/aimxhaisse\" rel=\"noopener nofollow ugc\">Sébastien Rannou</a>, <a href=\"https://x.com/lazyleger\" rel=\"noopener nofollow ugc\">sacha</a>, <a href=\"https://x.com/DrewVdW\" rel=\"noopener nofollow ugc\">Drew van Der Werff</a>, and Max Wilde from <a href=\"https://x.com/aestusrelay\" rel=\"noopener nofollow ugc\">Aestus</a> for thinking and review</em><br>\n.<br>\n.<br>\n<em><strong>tl;dr:</strong> We solve one of the largest problems with based preconf opt-in from proposers: accidental liveness slashing. The mechanism we introduce requires no changes to existing based preconf protocol designs and has been under our noses the whole time. We use preconf chaining to protect individual proposers from being slashed for liveness failures.</em><br>\n.<br>\n.</p>\n<h2><a name=\"background-2\" class=\"anchor\" href=\"https://ethresear.ch#background-2\"></a>Background</h2>\n<p>On Ethereum today, liveness issues with block proposals are largely accepted, and penalties are minimal. When we introduce based preconfirmations, liveness issues can mean different consequences.</p>\n<p>When dealing with preconfs: from the user’s perspective, liveness faults (missing a block proposal) and safety faults (proposing a block that does not fulfill preconf commitments) are the same thing. In both scenarios, a user experiences a situation where their preconfirmation is not fulfilled.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/d/9d996b95a0c2f74f54edf8f3d3b89beda26956db.png\" data-download-href=\"https://ethresear.ch/uploads/default/9d996b95a0c2f74f54edf8f3d3b89beda26956db\" title=\"liveness faults are safety faults\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/d/9d996b95a0c2f74f54edf8f3d3b89beda26956db_2_406x500.png\" alt=\"liveness faults are safety faults\" data-base62-sha1=\"mubFbjC5uuitb4F8ELIsWKv3sZd\" width=\"406\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/d/9d996b95a0c2f74f54edf8f3d3b89beda26956db_2_406x500.png, https://ethresear.ch/uploads/default/original/3X/9/d/9d996b95a0c2f74f54edf8f3d3b89beda26956db.png 1.5x, https://ethresear.ch/uploads/default/original/3X/9/d/9d996b95a0c2f74f54edf8f3d3b89beda26956db.png 2x\" data-dominant-color=\"665A57\"></a></div><p></p>\n<p>Now, from the perspective of the proposer, liveness faults and safety faults are two very different things. Liveness faults may occur from a multitude of external, accidental circumstances (like power outages, wifi downtime, reorgs, spontaneous combustion) that many proposers just aren’t prepared for. On the other hand, safety faults can only occur when some party (the proposer or some delegate) acts maliciously.</p>\n<p>Additionally, attributing liveness faults is difficult. Many actors within the block supply chain may be responsible for a liveness fault occurring. The complexity involved with this attribution would be nice to avoid.</p>\n<p>To make proposers feel more comfortable with putting up potentially high amounts of collateral, being slashed for accidental liveness faults should be very rare if not impossible.</p>\n<h2><a name=\"preconf-chaining-3\" class=\"anchor\" href=\"https://ethresear.ch#preconf-chaining-3\"></a>Preconf Chaining</h2>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/5/2/524180b5ef3a6673ab62d02d5afdc1a4d0d94fe5.png\" alt=\"preconf chaining\" data-base62-sha1=\"bJFutOzlD3QxTBn5284JqTgxNgF\" width=\"500\" height=\"500\"></p>\n<h3><a name=\"brief-assumptions-4\" class=\"anchor\" href=\"https://ethresear.ch#brief-assumptions-4\"></a>Brief Assumptions:</h3>\n<ul>\n<li>(we are talking about based preconfs here, not L1 preconfs)</li>\n<li>slashing conditions are expressive</li>\n<li>preconf requests include L2 block number</li>\n<li>“active preconfer” refers to the current preconfer (an L1 proposer or delegate in the lookahead), “next active preconfer” refers to the entity who will be the next preconfer.</li>\n</ul>\n<h3><a name=\"slashing-conditions-construction-5\" class=\"anchor\" href=\"https://ethresear.ch#slashing-conditions-construction-5\"></a>Slashing Conditions Construction:</h3>\n<p>We assume a slashing conditions paradigm that is similar to the one presented in <a href=\"https://ethresear.ch/t/credibly-neutral-preconfirmation-collateral-the-preconfirmation-registry/19634\">The Preconf Registry.</a> Specifically, that slashing conditions are “smart” and expressive enough to represent the following constructions.</p>\n<p>The slashing conditions are designed so that a preconfer is slashed if:</p>\n<ul>\n<li>they sign a preconf request about a transaction <code>A</code> and block <code>B</code>, where <code>B</code> is a future L2 block. Also signed is a list of “dependents”, a list of other preconfers (by address or other ID).</li>\n<li><code>A</code> is not fulfilled in <code>B</code>, or was not fulfilled in a block prior to <code>B</code></li>\n<li>All dependents have signed the same preconf request (commitments/signatures from these are required) and have not been slashed (a challenge/cooldown period is useful here).</li>\n</ul>\n<p>This dependent design enables a preconfer to conditionally preconfirm a transaction, based on the choices of other preconfer.</p>\n<h3><a name=\"preconf-flow-6\" class=\"anchor\" href=\"https://ethresear.ch#preconf-flow-6\"></a>Preconf Flow</h3>\n<ul>\n<li>Alice (a based L2 user) wants an inclusion preconf for a transaction <code>A</code></li>\n<li>Alice <a href=\"https://ethresear.ch/t/the-preconfirmation-gateway-unlocking-preconfirmations-from-user-to-preconfer/18812\">delivers a preconf request to the active preconfer</a></li>\n<li>Some entity who obtains a preconf commitment from the active preconfer (Alice, a gateway, or even the active preconfer itself) forwards Alice’s preconf request to the next active preconfer (with a dependent on the active preconfer added) and also forwards the active preconfer’s commitment.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/4/84a8b7a1158dfc8f844abfc5447b193b3d35f12e.png\" data-download-href=\"https://ethresear.ch/uploads/default/84a8b7a1158dfc8f844abfc5447b193b3d35f12e\" title=\"diagram representing how any actor can send a chained preconf request to the next active preconfer\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/4/84a8b7a1158dfc8f844abfc5447b193b3d35f12e_2_690x387.png\" alt=\"diagram representing how any actor can send a chained preconf request to the next active preconfer\" data-base62-sha1=\"iVyv4Oa6jrAljN50JjJZTED9r5A\" width=\"690\" height=\"387\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/4/84a8b7a1158dfc8f844abfc5447b193b3d35f12e_2_690x387.png, https://ethresear.ch/uploads/default/optimized/3X/8/4/84a8b7a1158dfc8f844abfc5447b193b3d35f12e_2_1035x580.png 1.5x, https://ethresear.ch/uploads/default/original/3X/8/4/84a8b7a1158dfc8f844abfc5447b193b3d35f12e.png 2x\" data-dominant-color=\"F7F8F8\"></a></div><p></p>\n<p><strong>Any actor with access to a preconf commitment may construct a chained preconf and forward it to the next active preconfer.</strong></p>\n<p>Note that incentives for doing this vary:</p>\n<ul>\n<li><strong>preconf RPC:</strong> aka <a href=\"https://ethresear.ch/t/the-preconfirmation-gateway-unlocking-preconfirmations-from-user-to-preconfer/18812\">The Preconfirmation Gateway</a> might chain preconfs as a public good for proposers.</li>\n<li><strong>gateway:</strong> A gateway might also chain preconfs as a public good for proposers, but may also use this as a feature to attract proposers (maybe called “liveness fault protection”).</li>\n<li><strong>proposers:</strong> A proposer (or node operator) might also chain preconfs themselves. Their incentive is obviously to avoid being slashed for liveness faults.</li>\n</ul>\n<h3><a name=\"determining-penalties-7\" class=\"anchor\" href=\"https://ethresear.ch#determining-penalties-7\"></a>Determining Penalties</h3>\n<ul>\n<li>In the case where the active preconfer represents a proposer that has a liveness failure and proposes no L2 block, they wouldn’t be slashed because the preconf could still be fulfilled by the next preconfer (and the preconf request block number would match).</li>\n<li>If the active preconfer proposes a block and does not fulfill the preconf request, they would be slashed for a safety fault.</li>\n<li>If the active preconfer does not propose a block and the next preconfer does but does not fulfill the preconf request, the second preconfer is slashed for a safety fault.</li>\n<li>If both preconfers have liveness issues, both are slashed for a safety fault. (This can be avoided by chaining beyond 2.)</li>\n</ul>\n<h3><a name=\"incentivizing-chaining-8\" class=\"anchor\" href=\"https://ethresear.ch#incentivizing-chaining-8\"></a>Incentivizing Chaining</h3>\n<p>To incentivize a future active preconfer to chain preconfs, an active preconfer might share tips. Also, a reputational expectation to chain preconfs can encourage more chaining.</p>\n<p>One possible way to get chaining adoption is to simply require that chaining happens. To make this practical, the future active preconfers must be able to access the preconf commitments of previous preconfers. The DA problem must be solved to make this practical, and this could be done with an external DA layer. Notably, using an external DA layer introduces dependencies on another sequencer: the DA sequencer. TBD how designs of different DA layers can work around this issue and potential censorship that might occur.</p>\n<h2><a name=\"conclusion-9\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-9\"></a>Conclusion</h2>\n<p>In this post, we focus on the benefits of chaining for proposers. Widespread chaining also increases the guarantees that users get for preconfirmations, making preconfs even more valuable. It’s a win-win!</p>\n<p>Whether forced or opt-in, preconf chaining can protect proposers from being slashed for accidental liveness faults. This system can help proposers feel more comfortable opting into higher collateral requirements.</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/c/c/cc0abe035c50a142437976c953764a60e774427a.png\" alt=\"preconf chaining protects proposers from penalties for liveness faults\" data-base62-sha1=\"t72pZ48pgqwPufFxVVyvuObNrSi\" width=\"553\" height=\"451\"></p>\n<h4><a name=\"references-10\" class=\"anchor\" href=\"https://ethresear.ch#references-10\"></a>References</h4>\n<ul>\n<li><a href=\"https://ethresear.ch/t/the-preconfirmation-gateway-unlocking-preconfirmations-from-user-to-preconfer/18812#chained-preconfirmations-13\">The Preconfirmation Gateway</a> by <a href=\"https://x.com/mteamisloading\" rel=\"noopener nofollow ugc\">mteam (me)</a> mentions chained preconfirmations as better liveness guarantees for users.</li>\n<li><a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">Based preconfirmations</a> by <a href=\"https://x.com/drakefjustin\" rel=\"noopener nofollow ugc\">Justin Drake</a> introduces a simple design for based preconfs.</li>\n<li><a href=\"https://ethresear.ch/t/pre-confirmation-liveness-slashing-penalties-from-the-proposers-perspective/19884\">Pre-confirmation Liveness Slashing Penalties from the Proposer’s Perspective</a> by <a href=\"https://x.com/aimxhaisse\" rel=\"noopener nofollow ugc\">Sébastien Rannou</a> touches on the liveness slashing problem and explains how it decreases the economic viability of preconfs for proposers.</li>\n</ul>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/avoiding-accidental-liveness-faults-for-based-preconfs/19888\">Read full topic</a></p>","link":"https://ethresear.ch/t/avoiding-accidental-liveness-faults-for-based-preconfs/19888","pubDate":"Sat, 22 Jun 2024 18:46:11 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19888"},"source":{"@url":"https://ethresear.ch/t/avoiding-accidental-liveness-faults-for-based-preconfs/19888.rss","#text":"Avoiding Accidental Liveness Faults for Based Preconfs"}},{"title":"Pre-confirmation Liveness Slashing Penalties from the Proposer's Perspective","dc:creator":"aimxhaisse","category":"Economics","description":"<p>Current designs around pre-confirmations involve a slashing penalty on liveness, that is if a proposer who commited to pre-confirmations misses its proposal, part of its collateral is burned or redistributed to the user that sent the pre-confirmation as a payback.</p>\n<p>This post explores the liveness penalty from the point of view of proposers from an economical perspective.</p>\n<h2><a name=\"sources-of-liveness-issues-1\" class=\"anchor\" href=\"https://ethresear.ch#sources-of-liveness-issues-1\"></a>Sources of Liveness Issues</h2>\n<p>Liveness issues are complex and can come from different actors or sources, part of them are the result of the proposer’s actions or choices, part of them don’t depend on the proposer. For example:</p>\n<ul>\n<li>proposing a block in time but being reorg by the next proposer,</li>\n<li>failure from the relayer to send the header in time,</li>\n<li>failure from the relayer to propagate the signed header in time and reveal the block to the proposer.</li>\n</ul>\n<p>As a result, the decision on whether to opt-in or not from a proposer perspective has to take into account an <strong>inherent</strong> risk outside of its actions. Using a statistical approach on network history sounds like an easy starting point.</p>\n<h2><a name=\"economical-minimal-viability-2\" class=\"anchor\" href=\"https://ethresear.ch#economical-minimal-viability-2\"></a>Economical Minimal Viability</h2>\n<p>In the last 7 days on the network, about <code>0.54%</code> of slots were missed, to break-even economically (that is, for an operator to not lose or win anything in the long run), assuming the liveness fault is <code>1 ETH</code>, the minimal extra-tip of a pre-confirmation would be <code>0.0054 ETH</code>.</p>\n<p>To put it in perspective, the median execution reward in the last 7 days is <code>~0.048 ETH</code>, so with <code>1 ETH</code> of collateral, the pre-confirmations would need to be about <code>10%</code> of the block’s value with the current network conditions. Using <code>P(miss)</code> as the probability to miss a block, the break-even formula is:</p>\n<div class=\"math\">\n(1 - (P(miss))) * tip = P(miss) * penalty\n</div>\n<p>And so the minimal tip:</p>\n<div class=\"math\">\ntip = {(P(miss) * penalty) \\over (1 - P(miss))}\n</div>\n<p>With <code>1 ETH</code> as a collateral, here is the model for low probabilites of missed block with <code>P(miss) &lt; 0.025</code>:</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/e/a/ea574d8ff641f0e75064bfc788d672f031b6a3cb.png\" alt=\"download\" data-base62-sha1=\"xr4LYGKTfxtZQ28KgORoZpLMAzN\" width=\"626\" height=\"455\"></p>\n<p>Zooming out up with <code>P(miss) &lt; 0.5</code>:</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/0/6/0638f8a59181327ccce1392f2bd48663d52562aa.png\" alt=\"download\" data-base62-sha1=\"T2VmxGx6bY2e82jK6v1aUzbtqi\" width=\"608\" height=\"455\"></p>\n<h2><a name=\"opt-in-if-economically-viable-3\" class=\"anchor\" href=\"https://ethresear.ch#opt-in-if-economically-viable-3\"></a>Opt-in if Economically Viable</h2>\n<p>One idea to make it viable at scale with little effort from proposers would be for the pre-confirmation sidecar on the proposer side to opt-in to pre-confirmations only it if the tip is above what’s economically sound given the current rate of misses on the network. For example, if in the last 24 hours the average missed block proposal is <code>0.5%</code>, only commit to pre-confirmations which tip is above <code>0.005 ETH</code>.</p>\n<p>This approach requires the relayer to pass the pre-confirmation tip information to the proposer to decide whether or not to commit to pre-confirmations, or the proposer to send the minimal-tip to the builder so it can provide a block that match it.</p>\n<p>The advantage of this approach is if the network is struggling at scale, the risk for a proposer to miss a slot increases, and so it makes sense for proposers to opt-out of pre-confirmations until the situation resolves. Increasing the pre-confirmer bid under such conditions makes sense as more risk is taken.</p>\n<p>A disavantage is that the missed block proposal rate is an approximation: it doesn’t account for totally offline validators, or for the extra-cost involved in validating the pre-confirmation on the proposer side which can take time and increase the risks of missing the slot.</p>\n<h2><a name=\"alternatives-4\" class=\"anchor\" href=\"https://ethresear.ch#alternatives-4\"></a>Alternatives</h2>\n<h4><a name=\"adjusted-liveness-penalty-5\" class=\"anchor\" href=\"https://ethresear.ch#adjusted-liveness-penalty-5\"></a>Adjusted Liveness Penalty</h4>\n<p>Instead of using a minimal tip as a way to decide if it’s viable, the liveness penalty could be dynamically adjusted to what is the minimal viable condition. The tip could then be a fixed value.</p>\n<h4><a name=\"user-defined-liveness-penalty-6\" class=\"anchor\" href=\"https://ethresear.ch#user-defined-liveness-penalty-6\"></a>User-Defined Liveness Penalty</h4>\n<p>The user sending the pre-confirmation could also decide both the liveness penalty and the tip as suggested in <a href=\"https://ethresear.ch/t/user-defined-penalties-ensuring-honest-preconf-behavior/19545\">User-Defined Penalties: Ensuring Honest Preconf Behavior</a>, and adjust it to what the current state of the network is/what validators accept. The assumption here is maybe for some pre-confirmations the goal is to be as soon as possible on the L1, and so, reducing the liveness penalty would increase their probabilities of being pre-confirmed. On the other hand an arbitrage pre-confirmation could prefer to opt-in for a larger liveness penalty as its opportunity would be lost if the block is missed.</p>\n<h2><a name=\"caveats-7\" class=\"anchor\" href=\"https://ethresear.ch#caveats-7\"></a>Caveats</h2>\n<p>This simple break-even model on the proposer side has no incentive, it is unclear if it will motivate proposers to opt-in.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/pre-confirmation-liveness-slashing-penalties-from-the-proposers-perspective/19884\">Read full topic</a></p>","link":"https://ethresear.ch/t/pre-confirmation-liveness-slashing-penalties-from-the-proposers-perspective/19884","pubDate":"Fri, 21 Jun 2024 11:44:23 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19884"},"source":{"@url":"https://ethresear.ch/t/pre-confirmation-liveness-slashing-penalties-from-the-proposers-perspective/19884.rss","#text":"Pre-confirmation Liveness Slashing Penalties from the Proposer's Perspective"}},{"title":"Blob Usage Strategies by Rollups and Non-rollup Applications","dc:creator":"doublespending","category":"Data Science","description":"<p><a href=\"https://0xpantarhei.substack.com/p/blob-usage-strategies\" rel=\"noopener nofollow ugc\">Full Report</a></p>\n<h2><a name=\"tdlr-1\" class=\"anchor\" href=\"https://ethresear.ch#tdlr-1\"></a>TDLR</h2>\n<ol>\n<li>The main applications using blobs are rollups, accounting for approximately 87%. Non-rollup applications mainly include <a href=\"https://blobscan.com/tx/0x3ff787f16ad6d65dc8d6e45a3ea95440fca2da2c0e344e76a6e509857673da01\" rel=\"noopener nofollow ugc\">Blobscriptions</a> and <a href=\"https://blobscan.com/tx/0x1956039b71bbc1c5de31ceafb27782eb2e8a07c9299d1d534e470bcf35f9835a\" rel=\"noopener nofollow ugc\">customized type 3 transactions</a>.</li>\n<li>Rollup applications choose different blob usage strategies according to their own situations. The strategies will consider the number of blobs carried by type 3 transactions, blob utilization, and blob submission frequency to balance the costs of availability data fees and delay costs.</li>\n<li>Non-rollup applications can be characterized and distinguished from rollup applications by the number of blobs carried by type 3 transactions, blob utilization, and blob submission frequency. These features help identify scenarios of blob abuse, allowing for the design of corresponding anti-abuse mechanisms.</li>\n<li>In most cases, using blobs as a data availability solution is more cost-effective than calldata. However, there are a few scenarios where calldata is cheaper: blob gas price spikes and blob utilization is extremely low.</li>\n<li>Short-term fluctuations in blob gas price is mainly influenced by the demand from non-rollup applications. Rollup applications have a relatively inelastic demand for blobs, so they do not significantly impact short-term fluctuations in blob gas prices.</li>\n<li>Currently, rollup applications do not seem to consider blob gas price as a reference factor in their blob usage strategies.</li>\n<li>The probability of blocks containing type 3 transactions being reorganized is extremely low. Additionally, carrying more blobs does not increase the probability of block reorganization. However, there is a clustering phenomenon in block height for blocks containing type 3 transactions.</li>\n</ol>\n<h2><a name=\"introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#introduction-2\"></a>Introduction</h2>\n<p>This report provides an in-depth analysis of type 3 transactions used for carrying blobs from the time of the Ethereum Decun upgrade until May 22, 2024. It focuses on blob usage strategies of rollup and non-rollup applications. The dataset, data processing programs, and visualization code for this report are <a href=\"https://github.com/doublespending/EIP-4844-Data-Analysis\" rel=\"noopener nofollow ugc\">open source</a>, detailed in the following “Dataset” section.</p>\n<h2><a name=\"type-3-transactions-blobs-share-by-applications-3\" class=\"anchor\" href=\"https://ethresear.ch#type-3-transactions-blobs-share-by-applications-3\"></a>Type 3 Transactions &amp; Blobs Share by Applications</h2>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/1/9101b16c984217aa1e5a51a59e7c0024aa6e8e18.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/9101b16c984217aa1e5a51a59e7c0024aa6e8e18\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/1/9101b16c984217aa1e5a51a59e7c0024aa6e8e18_2_690x363.jpeg\" alt=\"image\" data-base62-sha1=\"kGMRm5QwKy3NTr1BOtC0uZHGui4\" width=\"690\" height=\"363\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/1/9101b16c984217aa1e5a51a59e7c0024aa6e8e18_2_690x363.jpeg, https://ethresear.ch/uploads/default/optimized/3X/9/1/9101b16c984217aa1e5a51a59e7c0024aa6e8e18_2_1035x544.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/9/1/9101b16c984217aa1e5a51a59e7c0024aa6e8e18_2_1380x726.jpeg 2x\" data-dominant-color=\"DCCCD8\"></a></div><p></p>\n<h3><a name=\"rollup-applications-4\" class=\"anchor\" href=\"https://ethresear.ch#rollup-applications-4\"></a>Rollup Applications</h3>\n<p>Observations from Figure 1 on the proportion of type 3 transactions:</p>\n<ul>\n<li>Base, Scroll, Linea, and Starknet are in the same tier, having the highest transaction proportions.</li>\n<li>Arbitrum, Optimism, and Zksync are in the next tier, having the second-highest transaction proportions.</li>\n</ul>\n<p>This phenomenon seems counterintuitive as Arbitrum and Optimism have higher TPS than Scroll, Linea, and Starknet and should have a higher proportion of type 3 transactions.</p>\n<p>Figure 2 shows that counterintuitive phenomenon is caused by different rollup strategies in the number of blobs carried by type 3 transactions.</p>\n<p>Observations from Figure 2 on the proportion of blobs:</p>\n<ul>\n<li>Base stands alone, having the highest proportion of blobs.</li>\n<li>Arbitrum and Optimism are in the same tier, having the second-highest proportion of blobs.</li>\n<li>Scroll, Linea, Starknet, and Zksync are in the same tier, having a medium proportion of blobs.</li>\n</ul>\n<p>This phenomenon aligns more with intuition: blob proportions are directly related to the scale of rollup’s availability data, thus showing a positive correlation with rollup TPS.</p>\n<p>The difference between the proportion of type 3 transactions (31%) and blobs (14%) for non-rollup applications indicates that non-rollup applications and rollup applications have different needs.</p>\n<h3><a name=\"non-rollup-applications-5\" class=\"anchor\" href=\"https://ethresear.ch#non-rollup-applications-5\"></a>Non-Rollup Applications</h3>\n<ul>\n<li>Rollup applications are B2B businesses aiming to fill fine-grained Layer 2 transaction availability data, so their type 3 transactions are not limited to carrying only 1 blob.</li>\n<li>Non-rollup applications are B2C businesses aiming to upload complete text, images, etc., so their type 3 transactions usually carry only 1 blob to meet their needs.</li>\n</ul>\n<h2><a name=\"rollup-blob-usage-strategies-6\" class=\"anchor\" href=\"https://ethresear.ch#rollup-blob-usage-strategies-6\"></a>Rollup Blob Usage Strategies</h2>\n<h3><a name=\"rollup-strategy-model-7\" class=\"anchor\" href=\"https://ethresear.ch#rollup-strategy-model-7\"></a>Rollup Strategy Model</h3>\n<p>This section models the rollup blob usage strategies with</p>\n<ol>\n<li><code>blobNumber</code>, i.e. the number of blobs carried by type 3 transactions</li>\n<li><code>blobUtilization</code>, i.e. blob space utilization</li>\n<li><code>blobInterval</code>, i.e. the blob submission interval</li>\n</ol>\n<h4><a name=\"fee-cost-8\" class=\"anchor\" href=\"https://ethresear.ch#fee-cost-8\"></a>Fee Cost</h4>\n<p>The fee cost per transaction for rollups is expressed as:</p>\n<div class=\"math\">\n\\begin{equation}\nfeeCost = \\frac{1}{k}(\\frac{blobCost}{blobUtilization}+\\frac{fixedCost}{blobNumber*blobUtilization})\n\\end{equation}\n</div>\n<ul>\n<li><code>fixedCost</code>: the fixed cost of a type 3 transaction</li>\n<li><code>blobCost</code>: the cost of a single blob</li>\n<li>The larger the <code>blobUtilization</code>, the lower the amortized cost of the blob fee <span class=\"math\">\\frac{blobCost}{blobUtilization}</span> and the fixed cost <span class=\"math\">\\frac{fixedCost}{blobNumber*blobUtilization}</span>, resulting in a lower fee cost <code>feeCost</code>.</li>\n<li>The larger the <code>blobNumber</code>, the lower the amortized cost of the fixed cost <span class=\"math\">\\frac{fixedCost}{blobNumber*blobUtilization}</span>, resulting in a lower fee cost <code>feeCost</code>.</li>\n</ul>\n<h4><a name=\"delay-cost-9\" class=\"anchor\" href=\"https://ethresear.ch#delay-cost-9\"></a>Delay Cost</h4>\n<p><strong>The delay cost per transaction for rollups is expressed as:</strong></p>\n<div class=\"math\">\n\\begin{equation}\ndelayCost = F(\\frac{blobNumber*blobUtilization*k}{tps})\n\\end{equation}\n</div>\n<ul>\n<li>The larger the <code>blobUtilization</code>, the larger the delay cost <code>delayCost</code>.</li>\n<li>The larger the <code>blobNumber</code>, the larger the delay cost <code>delayCost</code>.</li>\n<li>The larger the <code>tps</code>, the smaller the delay cost <code>delayCost</code>.</li>\n</ul>\n<blockquote>\n<p>The derivation of the formula can be found in the <a href=\"https://0xpantarhei.substack.com/p/blob-usage-strategies\" rel=\"noopener nofollow ugc\">full version</a>.</p>\n</blockquote>\n<h3><a name=\"rollup-strategy-analysis-10\" class=\"anchor\" href=\"https://ethresear.ch#rollup-strategy-analysis-10\"></a>Rollup Strategy Analysis</h3>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/c/cc978c93e42157bd63c06de9c0637fc887dccced.png\" data-download-href=\"https://ethresear.ch/uploads/default/cc978c93e42157bd63c06de9c0637fc887dccced\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/c/cc978c93e42157bd63c06de9c0637fc887dccced_2_690x260.png\" alt=\"image\" data-base62-sha1=\"tbU5YTX8BfjgApcDED6tjTuGjnv\" width=\"690\" height=\"260\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/c/cc978c93e42157bd63c06de9c0637fc887dccced_2_690x260.png, https://ethresear.ch/uploads/default/optimized/3X/c/c/cc978c93e42157bd63c06de9c0637fc887dccced_2_1035x390.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/c/cc978c93e42157bd63c06de9c0637fc887dccced_2_1380x520.png 2x\" data-dominant-color=\"D9CEDF\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/2/32521830fd7aab2cbd7f19d504720344afb2eff7.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/32521830fd7aab2cbd7f19d504720344afb2eff7\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/2/32521830fd7aab2cbd7f19d504720344afb2eff7_2_574x499.jpeg\" alt=\"image\" data-base62-sha1=\"7b9L86kiOFbU91Xr10gVuxYBnWn\" width=\"574\" height=\"499\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/2/32521830fd7aab2cbd7f19d504720344afb2eff7_2_574x499.jpeg, https://ethresear.ch/uploads/default/optimized/3X/3/2/32521830fd7aab2cbd7f19d504720344afb2eff7_2_861x748.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/3/2/32521830fd7aab2cbd7f19d504720344afb2eff7_2_1148x998.jpeg 2x\" data-dominant-color=\"F3F2F1\"></a></div><p></p>\n<h3><a name=\"non-rollup-blob-strategies-11\" class=\"anchor\" href=\"https://ethresear.ch#non-rollup-blob-strategies-11\"></a>Non-Rollup Blob Strategies</h3>\n<p>Rollup applications are B2B, while non-rollup applications are B2C. Therefore, non-rollup applications differ from the rollup strategy model. For non-rollup applications:</p>\n<ul>\n<li>The number of blobs carried by type 3 transactions depends on the size of the content (texts/images) stored in the blobs.</li>\n<li>Blob utilization depends on the size of the content (texts/images) stored in the blobs.</li>\n<li>Blob submission intervals depend on the immediate needs of C-end users, with no delay costs involved.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/c/cc978c93e42157bd63c06de9c0637fc887dccced.png\" data-download-href=\"https://ethresear.ch/uploads/default/cc978c93e42157bd63c06de9c0637fc887dccced\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/c/cc978c93e42157bd63c06de9c0637fc887dccced_2_690x260.png\" alt=\"image\" data-base62-sha1=\"tbU5YTX8BfjgApcDED6tjTuGjnv\" width=\"690\" height=\"260\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/c/cc978c93e42157bd63c06de9c0637fc887dccced_2_690x260.png, https://ethresear.ch/uploads/default/optimized/3X/c/c/cc978c93e42157bd63c06de9c0637fc887dccced_2_1035x390.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/c/cc978c93e42157bd63c06de9c0637fc887dccced_2_1380x520.png 2x\" data-dominant-color=\"D9CEDF\"></a></div><p></p>\n<ul>\n<li>\n<p>According to Figure 5 (<strong>Others</strong> ), 1 blob can meet the needs of most non-rollup applications.</p>\n</li>\n<li>\n<p>According to Figure 6 (<strong>Others</strong> ), the blob utilization is concentrated between 20% and 40%, indicating that non-rollup applications generally cannot fill the blob, with the data size mainly between 25.6 kB and 51.2 kB.</p>\n</li>\n<li>\n<p>According to Figure 7 (<strong>Others</strong> ), about 83% of blobs have a submission interval of less than 1 minute, indicating a relative high frequency of user demand for non-rollup applications.</p>\n</li>\n</ul>\n<p>In summary, the type 3 transactions for non-rollup applications can be characterized as: <strong>high-frequency transactions carrying 1 low-utilization blob</strong> .</p>\n<p>The essence of this characterization is that non-rollup applications are driven by immediate needs and are less concerned about the fee cost per data byte compared to rollup applications.</p>\n<p>This characterization allows for the identification of non-rollup applications, which in turn helps design mechanisms to limit blob abuse by non-rollup applications.</p>\n<h2><a name=\"is-using-blobs-always-more-cost-effective-than-calldata-12\" class=\"anchor\" href=\"https://ethresear.ch#is-using-blobs-always-more-cost-effective-than-calldata-12\"></a>Is Using Blobs Always More Cost-effective than Calldata?</h2>\n<p>Introducing <code>feeRatio</code> to measure the relative advantages of the two solutions:</p>\n<div class=\"math\">\n\\begin{equation}\nfeeRatio = \\frac{calldataFeeCost }{blobFeeCost}\n\\end{equation}\n</div>\n<ul>\n<li>When <code>feeRatio</code> ≥ 1, it indicates that using blobs as a data availability solution is not worse than calldata.</li>\n<li>When <code>feeRatio</code> &lt; 1, it indicates that using blobs as a data availability solution is worse than calldata.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/5/b5e1ca6b02490795bf2e742ecb92586d1b18e685.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/b5e1ca6b02490795bf2e742ecb92586d1b18e685\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/5/b5e1ca6b02490795bf2e742ecb92586d1b18e685_2_472x500.jpeg\" alt=\"image\" data-base62-sha1=\"pX0aWpj8EOZI26IZCrfr24XlVBz\" width=\"472\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/5/b5e1ca6b02490795bf2e742ecb92586d1b18e685_2_472x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/b/5/b5e1ca6b02490795bf2e742ecb92586d1b18e685_2_708x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/5/b5e1ca6b02490795bf2e742ecb92586d1b18e685_2_944x1000.jpeg 2x\" data-dominant-color=\"C5B1F3\"></a></div><p></p>\n<p>Figure 8 also shows a few cases where <code>feeRatio</code> &lt; 1 (red), indicating that calldata is more cost-effective than blobs:</p>\n<ul>\n<li>Mostly in non-Rollup applications (<strong>Others</strong>):\n<ul>\n<li>Non-rollup applications generally do not care about the cost differences between blobs and calldata; they care about using blobs itself, such as in Blobscriptions.</li>\n</ul>\n</li>\n<li>A few in Metal rollup:\n<ul>\n<li>Rollup application Metal seems not to have considered switching between blobs and calldata in its strategy, leading to suboptimal choices in some extreme cases.</li>\n<li>Extreme cases are mainly due to Metal’s low blob utilization (see Figure 6) coinciding with a spike in blob gas prices.</li>\n<li>However, given that extreme scenarios are rare and maintaining two data availability solutions is costly, Metal’s suboptimal strategy in extreme cases seems acceptable.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>The analysis of blob and calldata solutions in this section only considers fee costs and not delay costs. Considering delay costs, calldata has an actual advantage.</p>\n</blockquote>\n<h2><a name=\"blob-gas-price-and-blob-usage-strategies-13\" class=\"anchor\" href=\"https://ethresear.ch#blob-gas-price-and-blob-usage-strategies-13\"></a>Blob Gas Price and Blob Usage Strategies</h2>\n<h3><a name=\"analysis-of-blob-gas-price-fluctuations-14\" class=\"anchor\" href=\"https://ethresear.ch#analysis-of-blob-gas-price-fluctuations-14\"></a>Analysis of Blob Gas Price Fluctuations</h3>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/8/58dd45e0e206936eb5eb2b32fc343a70322254c1.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/58dd45e0e206936eb5eb2b32fc343a70322254c1\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/8/58dd45e0e206936eb5eb2b32fc343a70322254c1_2_690x363.jpeg\" alt=\"image\" data-base62-sha1=\"cG85JHQafrtsHJIusy3mtiCuSTD\" width=\"690\" height=\"363\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/8/58dd45e0e206936eb5eb2b32fc343a70322254c1_2_690x363.jpeg, https://ethresear.ch/uploads/default/optimized/3X/5/8/58dd45e0e206936eb5eb2b32fc343a70322254c1_2_1035x544.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/5/8/58dd45e0e206936eb5eb2b32fc343a70322254c1_2_1380x726.jpeg 2x\" data-dominant-color=\"DDCAE2\"></a></div><br>\nFigures 9 and 10 show that in scenarios of high blob gas prices (&gt; 10), the proportion of non-rollup applications (<strong>Others</strong>) is significantly higher than in scenarios of low blob gas prices (&lt; 10).<p></p>\n<p>Therefore, it can be concluded that the surge in blob gas prices is mainly driven by the demand from non-rollup applications, rather than rollup applications. Otherwise, the proportion of rollup and non-rollup applications should remain stable.</p>\n<h3><a name=\"how-rollups-respond-to-blob-gas-price-fluctuations-15\" class=\"anchor\" href=\"https://ethresear.ch#how-rollups-respond-to-blob-gas-price-fluctuations-15\"></a>How Rollups Respond to Blob Gas Price Fluctuations</h3>\n<p><em>Hypothesis 1: The higher the blob gas price, to reduce fee costs, applications should carry more blobs in type 3 transactions, i.e., the number of blobs should be positively correlated with blob gas prices.</em><br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/b/fb34ad1ab0fcf6250662d82b007a763309889ef7.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/fb34ad1ab0fcf6250662d82b007a763309889ef7\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/b/fb34ad1ab0fcf6250662d82b007a763309889ef7_2_505x500.jpeg\" alt=\"image\" data-base62-sha1=\"zQgHBta1p1FI6UWFZUTXqKLAJtJ\" width=\"505\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/b/fb34ad1ab0fcf6250662d82b007a763309889ef7_2_505x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/f/b/fb34ad1ab0fcf6250662d82b007a763309889ef7_2_757x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/f/b/fb34ad1ab0fcf6250662d82b007a763309889ef7_2_1010x1000.jpeg 2x\" data-dominant-color=\"F1EFF0\"></a></div><p></p>\n<p>Figure 14 shows that the hypothesis does not hold.</p>\n<p><em>Hypothesis 2: The higher the blob gas price, to reduce fee costs, applications should increase blob utilization, i.e., blob utilization should be positively correlated with blob gas prices.</em><br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/2/521bb465406b224d50b0117150169a5991c5029c.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/521bb465406b224d50b0117150169a5991c5029c\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/2/521bb465406b224d50b0117150169a5991c5029c_2_498x500.jpeg\" alt=\"image\" data-base62-sha1=\"bImvAK3zdpKWR6WIwqrwb6yGmyU\" width=\"498\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/2/521bb465406b224d50b0117150169a5991c5029c_2_498x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/5/2/521bb465406b224d50b0117150169a5991c5029c_2_747x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/5/2/521bb465406b224d50b0117150169a5991c5029c_2_996x1000.jpeg 2x\" data-dominant-color=\"F4F2F4\"></a></div><p></p>\n<p>Figure 15 shows that the hypothesis does not hold.</p>\n<p><em>Hypothesis 3: The higher the blob gas price, to reduce fee costs, applications should delay blob submissions, i.e., blob submission intervals should be positively correlated with blob gas prices.</em></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/e/9e1dd1bbb0bad1163b9eaf7f8d61f340279bb0fd.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/9e1dd1bbb0bad1163b9eaf7f8d61f340279bb0fd\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/e/9e1dd1bbb0bad1163b9eaf7f8d61f340279bb0fd_2_514x500.jpeg\" alt=\"image\" data-base62-sha1=\"myLkk9jLyI2XWYftAdoMB4g0HeJ\" width=\"514\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/e/9e1dd1bbb0bad1163b9eaf7f8d61f340279bb0fd_2_514x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/9/e/9e1dd1bbb0bad1163b9eaf7f8d61f340279bb0fd_2_771x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/9/e/9e1dd1bbb0bad1163b9eaf7f8d61f340279bb0fd_2_1028x1000.jpeg 2x\" data-dominant-color=\"EBE7E9\"></a></div><p></p>\n<p>Figure 16 shows that the hypothesis does not hold.</p>\n<blockquote>\n<p>In Figures 9 and 10, readers might notice that some rollup applications seem to respond to high blob gas prices. Scroll seems to suspend blob submissions under high blob gas prices. However, this conclusion is incorrect. The reason is that not all rollups immediately used blobs after the EIP-4844 upgrade.</p>\n</blockquote>\n<h2><a name=\"blobs-and-block-reorg-16\" class=\"anchor\" href=\"https://ethresear.ch#blobs-and-block-reorg-16\"></a>Blobs and Block Reorg</h2>\n<p>From the Decun upgrade to May 22, there were 171 type 3 transactions included in the forked blocks and 348,121 included in the canonical blocks. Therefore, the proportion of type 3 transactions being forked is approximately 0.049%. This section explores the relationship between block reorg and blob.</p>\n<h3><a name=\"blob-number-distribution-in-the-canonical-and-forked-blocks-with-blobs-17\" class=\"anchor\" href=\"https://ethresear.ch#blob-number-distribution-in-the-canonical-and-forked-blocks-with-blobs-17\"></a>Blob Number Distribution in the Canonical and Forked Blocks with Blobs</h3>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/e/bef1c025b4ae7c6990e2c7968acf12a6eccba1a2.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/bef1c025b4ae7c6990e2c7968acf12a6eccba1a2\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/e/bef1c025b4ae7c6990e2c7968acf12a6eccba1a2_2_690x403.jpeg\" alt=\"image\" data-base62-sha1=\"rfaFogMD5Zwx4owyH1Stjm6cM5I\" width=\"690\" height=\"403\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/e/bef1c025b4ae7c6990e2c7968acf12a6eccba1a2_2_690x403.jpeg, https://ethresear.ch/uploads/default/optimized/3X/b/e/bef1c025b4ae7c6990e2c7968acf12a6eccba1a2_2_1035x604.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/e/bef1c025b4ae7c6990e2c7968acf12a6eccba1a2_2_1380x806.jpeg 2x\" data-dominant-color=\"E3C4DD\"></a></div><p></p>\n<p><em>Hypothesis: More blobs increase the probability of block reorganizations.</em></p>\n<p>If the hypothesis holds, the following inequality should be satisfied:</p>\n<div class=\"math\">\n\\begin{equation}\nP(reorg|blob=n)  &gt; P(reorg|blob=n-1)\n\\end{equation}\n</div>\n<p>According to <a href=\"https://en.wikipedia.org/wiki/Bayes%27_theorem\" rel=\"noopener nofollow ugc\">Bayes’ theorem</a>, inequality above is equivalent to:</p>\n<div class=\"math\">\n\\begin{equation}\n\\frac{P(blob=n|reorg)}{P(blob=n)}  &gt; \\frac{P(blob=n-1|reorg)}{P(blob=n-1)}\n\\end{equation}\n</div>\n<p>We check whether the actual data satisfies inequality and obtain the following table:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/c/ec253f7881bbf00cf3b5a37a8635dfb0181309ee.png\" data-download-href=\"https://ethresear.ch/uploads/default/ec253f7881bbf00cf3b5a37a8635dfb0181309ee\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/c/ec253f7881bbf00cf3b5a37a8635dfb0181309ee_2_690x201.png\" alt=\"image\" data-base62-sha1=\"xH2u9xD5zCwl7SjVWvOTuSPeRxs\" width=\"690\" height=\"201\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/c/ec253f7881bbf00cf3b5a37a8635dfb0181309ee_2_690x201.png, https://ethresear.ch/uploads/default/optimized/3X/e/c/ec253f7881bbf00cf3b5a37a8635dfb0181309ee_2_1035x301.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/c/ec253f7881bbf00cf3b5a37a8635dfb0181309ee.png 2x\" data-dominant-color=\"F8F8F7\"></a></div><p></p>\n<p>The table above shows that equation (10) does not hold for all <code>n</code>. Therefore, the hypothesis does not hold, indicating that more blobs are not significantly related to block reorganizations.</p>\n<h3><a name=\"distribution-of-type-3-transactions-and-blobs-by-applications-in-the-canonical-and-forked-blocks-with-blobs-18\" class=\"anchor\" href=\"https://ethresear.ch#distribution-of-type-3-transactions-and-blobs-by-applications-in-the-canonical-and-forked-blocks-with-blobs-18\"></a>Distribution of Type 3 Transactions and Blobs by Applications in the Canonical and Forked Blocks with Blobs</h3>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/d/ddfc7f0d5d5b2a90aaf6efff87b6d7a3733c2aff.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/ddfc7f0d5d5b2a90aaf6efff87b6d7a3733c2aff\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/d/ddfc7f0d5d5b2a90aaf6efff87b6d7a3733c2aff_2_425x500.jpeg\" alt=\"image\" data-base62-sha1=\"vFMuurP77hiUeXoHX4RnoyezcZ1\" width=\"425\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/d/ddfc7f0d5d5b2a90aaf6efff87b6d7a3733c2aff_2_425x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/d/d/ddfc7f0d5d5b2a90aaf6efff87b6d7a3733c2aff_2_637x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/d/d/ddfc7f0d5d5b2a90aaf6efff87b6d7a3733c2aff_2_850x1000.jpeg 2x\" data-dominant-color=\"E4D9E4\"></a></div><br>\nFigures 18 and 19 show that the proportion of type 3 transactions/blobs for Zksync and Scroll in forked blocks is significantly higher than in the canonical blocks.<p></p>\n<p>Applications seem to have some connection with block reorganizations, possibly related to differences in blob usage strategies by applications:</p>\n<ul>\n<li>Zksync and Scroll are less strategic in selecting the timing of submitting type 3 transactions, targeting block heights prone to reorganization.</li>\n<li>The unique characteristics of Zksync and Scroll’s type 3 transactions make the blocks containing them more likely to be reorganized.</li>\n</ul>\n<h3><a name=\"clustering-phenomenon-of-forked-blocks-with-blobs-19\" class=\"anchor\" href=\"https://ethresear.ch#clustering-phenomenon-of-forked-blocks-with-blobs-19\"></a>Clustering Phenomenon of Forked Blocks with Blobs</h3>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/8/281e3d3c49f900b77406ef467f2c32a1b08331eb.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/281e3d3c49f900b77406ef467f2c32a1b08331eb\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/8/281e3d3c49f900b77406ef467f2c32a1b08331eb_2_690x286.jpeg\" alt=\"image\" data-base62-sha1=\"5ITSVOrBqrxjzugy2QrjZFQ2U0X\" width=\"690\" height=\"286\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/8/281e3d3c49f900b77406ef467f2c32a1b08331eb_2_690x286.jpeg, https://ethresear.ch/uploads/default/optimized/3X/2/8/281e3d3c49f900b77406ef467f2c32a1b08331eb_2_1035x429.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/2/8/281e3d3c49f900b77406ef467f2c32a1b08331eb_2_1380x572.jpeg 2x\" data-dominant-color=\"F4F2F3\"></a></div><br>\nIf each block has the same probability of being reorganized, the forked blocks should be evenly distributed across the block height range. However, Figure 20 shows a clustering phenomenon in block heights for forked blocks, possibly related to network conditions.<p></p>\n<p>In addition, the clustering phenomenon that occurs in block reorganization seems to be somewhat related to the applications that submit blobs. For example, type 3 transactions for non rollup applications are only included in forked blocks between 19500000 and 19600000.</p>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://0xpantarhei.substack.com/p/blob-usage-strategies\">\n  <header class=\"source\">\n      <img src=\"https://ethresear.ch/uploads/default/original/3X/3/0/30aea33d55bd45ce96fab5bf70ecd7a3d0178f9d.png\" class=\"site-icon\" data-dominant-color=\"2F2925\" width=\"64\" height=\"64\">\n\n      <a href=\"https://0xpantarhei.substack.com/p/blob-usage-strategies\" target=\"_blank\" rel=\"noopener nofollow ugc\">0xpantarhei.substack.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:690/345;\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/7/f7108d3b335a7303d071fa1c0b9afa898ea3fa24_2_690x345.jpeg\" class=\"thumbnail\" data-dominant-color=\"3F3F3F\" width=\"690\" height=\"345\"></div>\n\n<h3><a href=\"https://0xpantarhei.substack.com/p/blob-usage-strategies\" target=\"_blank\" rel=\"noopener nofollow ugc\">Blob Usage Strategies by Rollups and Non-rollup Applications</a></h3>\n\n  <p>This report provides an in-depth analysis of type 3 transactions used for carrying blobs.</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/blob-usage-strategies-by-rollups-and-non-rollup-applications/19874\">Read full topic</a></p>","link":"https://ethresear.ch/t/blob-usage-strategies-by-rollups-and-non-rollup-applications/19874","pubDate":"Thu, 20 Jun 2024 03:39:04 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19874"},"source":{"@url":"https://ethresear.ch/t/blob-usage-strategies-by-rollups-and-non-rollup-applications/19874.rss","#text":"Blob Usage Strategies by Rollups and Non-rollup Applications"}},{"title":"Block Building is not just knapsack!","dc:creator":"sarisht","category":"Block proposer","description":"<p>Authors: <a class=\"mention\" href=\"https://ethresear.ch/u/mikerah\">@Mikerah</a> Afonso <a class=\"mention\" href=\"https://ethresear.ch/u/sarisht\">@sarisht</a></p>\n<p>Shoutout to Gabearro Ventalitan Nerla Yun Qi and Surya for all the vibes and discussions!</p>\n<p>This project was done as a Hackathon Project at IC3 camp last week.</p>\n<h2><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>TL;DR</h2>\n<p>We present a formal model or block building in blockchains. We show that block building is at least a combination of the Knapsack problem and the Maximum Independent Set problem, thus showing that block building is an NP-hard problem. Next, we provide various greedy algorithms with different tradeoffs. Then, we show simulation results to justify the algorithms and benchmarks. Our results show that tweaking the greedy solution with the results of the known knapsack constraint outperforms the currently used greedy algorithm by ~15% in terms of fee earned. Finally, we discuss how this is relevant for block builders in Ethereum in practice and directions for future research.</p>\n<h2><a name=\"introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#introduction-2\"></a>Introduction</h2>\n<p>Block building in Ethereum has evolved into a multimillion-dollar industry, particularly with the introduction of MEV-Boost. This has significantly increased the revenue earned by the builders. However, the builders’ algorithm for selecting transactions and transaction bundles needs more study. In collaboration with Flashbots, Mikerah (group lead for the project) has recently worked on a project that <a href=\"https://collective.flashbots.net/t/frp-10-distributed-blockbuilding-networks-via-secure-knapsack-auctions/1955\" rel=\"noopener nofollow ugc\">formalizes the model for block building as a knapsack problem</a>. This model considers each transaction’s utility (the fee offered by the transaction) and cost (the gas used by the transaction), with a budget for the maximum price that can be paid (the gas limit for the block). The practical relevance of this research is evident, as it addresses a significant limitation of the current model, where not all transactions are independent of each other.</p>\n<h2><a name=\"the-problem-3\" class=\"anchor\" href=\"https://ethresear.ch#the-problem-3\"></a>The Problem</h2>\n<p>Let’s delve into the heart of the matter by examining why transactions are not independent, a key challenge in block building.</p>\n<h3><a name=\"bitcoin-blockchain-4\" class=\"anchor\" href=\"https://ethresear.ch#bitcoin-blockchain-4\"></a>Bitcoin Blockchain</h3>\n<p>The most critical problem described in the Satoshi Nakamoto blockchain paper was catching double-spending. If two transactions try to spend the same UTXO, only one of them should make it on-chain. Thus, we can see that some transactions are dependent on each other. However, that is not all; some transactions that interact with Bitcoin’s OP-Code design can also depend on each other. A classic example of this would be that in an HTLC, either a refund transaction (released by revealing a pre-image of a hash) or payment (released when the timelock on the transaction expires) can go through. If both transactions are simultaneously in the mempool, then the transactions conflict with each other.</p>\n<h3><a name=\"ethereum-blockchain-5\" class=\"anchor\" href=\"https://ethresear.ch#ethereum-blockchain-5\"></a>Ethereum Blockchain</h3>\n<p>Ethereum inherits the double-spending transaction problem, but owing to its smart contract and gas fee design, it only partially suffers from the other type of conflict since the fee is paid based on the gas used. This causes the model to shift slightly, where the fee paid and the gas used depends on other chain transactions. Further, in the presence of searchers, some transactions are bundled such that multiple bundles contain the same transaction and thus cannot be included in the block simultaneously.</p>\n<h2><a name=\"model-6\" class=\"anchor\" href=\"https://ethresear.ch#model-6\"></a>Model</h2>\n<p>We first introduce the assumptions we make before describing the mathematical formulations.</p>\n<h4><a name=\"assumptions-7\" class=\"anchor\" href=\"https://ethresear.ch#assumptions-7\"></a>Assumptions</h4>\n<ul>\n<li>Dependent fees and gas are hard to model since we cannot have a boolean representation. Thus, we only consider “Conflicts” and touch upon “Dependency.” Conflicts are situations in which the transactions cannot occur together, and dependency is when one transaction requires another transaction to be executed before it is valid.</li>\n<li>We further ignore the optimal ordering of transactions inside a block. Ordering transactions in a particular order can lead to higher profits due to MEV, which we ignore for the same reason as above.</li>\n<li>For Ethereum, under the conditions of EIP 1559, the fee considered is the part above the base fee. Any transaction with a negative fee is ignored.</li>\n</ul>\n<p>Given these assumptions, we now model the binary allocation problem with constraints and dependencies as follows:<br>\nLet <span class=\"math\">T</span> be the set of transactions. A transaction in <span class=\"math\">T</span> is denoted by <span class=\"math\">tx_i</span>.<br>\nLet <span class=\"math\">f_i</span> denote the fee associated with a transaction <span class=\"math\">tx_i</span>.<br>\nLet <span class=\"math\">g_i</span> denote the gas associated with a transaction <span class=\"math\">t_i</span><br>\nLet <span class=\"math\">B</span> be the maximum block gas limit.</p>\n<p>Then, we have the following optimization problem<br>\nMaximise</p>\n<div class=\"math\">\n\\sum_{i\\in n} f_ix_i \n</div>\n<p>Subject to</p>\n<div class=\"math\">\n\\begin{align*}\n &amp;\\sum_{i\\in n} x_ig_i \\leq B \\\\\n &amp; x_i+x_j \\leq C_{ij}, \\forall i\\neq j \\in n\\\\\n &amp; x_j - x_i \\leq M_{ij}, \\forall i\\neq j \\in n\\\\\n &amp; x_i \\in \\{0,1\\}\n \\end{align*}\n</div>\n<p>where,</p>\n<ul>\n<li><span class=\"math\">C_{ij} = 1</span> if <span class=\"math\">t_i</span> and <span class=\"math\">t_j</span> are conflicting transactions, 2 otherwise</li>\n<li><span class=\"math\">M_{ij} = 0</span> if <span class=\"math\">t_j</span> depends on <span class=\"math\">t_i</span> and can only be allocated after <span class=\"math\">t_i</span>, 1 otherwise</li>\n</ul>\n<p>Since, in practice, it is hard for a block builder to infer the 3rd condition (without executing all of the transactions) within a limit snapshot of the transactions within their order flow pools, we can omit the 3rd constraint to simplify the problem. If the builder comes across such a transaction, it would be considered invalid.</p>\n<p>As such, we can obtain the following simplified optimization problem<br>\nMaximise</p>\n<div class=\"math\">\n\\sum_{i\\in n} f_ix_i\n</div>\n<p>Subject to</p>\n<div class=\"math\">\n\\begin{align*}\n &amp;\\sum_{i\\in n} x_ig_i \\leq BL \\\\\n &amp; x_i+x_j \\leq C_{ij}, \\forall i\\neq j \\in n\\\\\n &amp; x_i \\in \\{0,1\\}\n \\end{align*}\n</div>\n<p>where,</p>\n<ul>\n<li><span class=\"math\">C_{ij} = 1</span> if <span class=\"math\">t_i</span> and <span class=\"math\">t_j</span> are conflicting transactions, 2 otherwise</li>\n</ul>\n<h3><a name=\"reductions-8\" class=\"anchor\" href=\"https://ethresear.ch#reductions-8\"></a>Reductions</h3>\n<p>Now, we present formal arguments as to why block building is an instance of the knapsack problem and the maximum independent set problem.</p>\n<h4><a name=\"reduction-to-knapsack-9\" class=\"anchor\" href=\"https://ethresear.ch#reduction-to-knapsack-9\"></a>Reduction to knapsack</h4>\n<p>The reduction of the above problem to knapsack is easy to see. We assume no conflicts arise amongst any transactions. In that case, the problem is the same as solving a knapsack problem, with the utility as the fee paid by the transaction, space occupied as the gas used by a transaction, and finally, the block’s gas limit determines the knapsack size. Thus, the block-building problem is at least as hard as the knapsack problem.</p>\n<h4><a name=\"reduction-to-maximum-independent-set-10\" class=\"anchor\" href=\"https://ethresear.ch#reduction-to-maximum-independent-set-10\"></a>Reduction to Maximum Independent Set</h4>\n<p>If we can solve the above instance of block building problem without any constraint that limits the size of the block in polynomials, then consider the following instance where the block gas limit is set to the sum of gas of all transactions in the mempool. This would imply enough space for all the transactions in the mempool to fit in the block. This problem is now equivalent to finding the maximum weighted independent set because we can consider all transactions as vertices, and an edge exists between two vertices if the corresponding transactions conflict. The above reduction creates the instantiation of the maximum weighted independent set problem, which is again known as NP-hard.</p>\n<h2><a name=\"algorithms-for-approximate-result-11\" class=\"anchor\" href=\"https://ethresear.ch#algorithms-for-approximate-result-11\"></a>Algorithms for approximate result</h2>\n<p>As we mentioned above, block building is an NP-hard problem with reductions to both the knapsack problem and the maximum weighted independent set problem. Since we know that the maximum weighted independent set problem doesn’t have a C-approximation, this implies that the block-building problem also doesn’t have a C-approximation.</p>\n<p>As such, we devise several greedy algorithms in order to solve the block-building problem in practice.</p>\n\n<h3><a name=\"greedy-classic-gc-12\" class=\"anchor\" href=\"https://ethresear.ch#greedy-classic-gc-12\"></a>Greedy Classic (GC)</h3>\n<p>We expect today’s builders to use the first algorithm we present. It follows the most widely used knapsack greedy solution, where all objects are sorted according to the ratio of their utility to cost, and then greedily allocate space to each object until you can no longer allocate more space. Due to the added conflict constraint, the builder must check for conflict with any transaction already added to the block. Thus, the algorithm works as follows:</p>\n<p>Algorithm input: <span class=\"math\">T = \\{t_i\\}, F = \\{f_i\\}, G = \\{g_i\\}</span><br>\nAlgorithm output: An ordered block with gas used less than BL<br>\nAlgorithm description:</p>\n<pre><code class=\"lang-auto\">Sort T by corresponding F/G\nLet B  := {}\nLet BS := 0\nFor each t in T, f in F, g in G do:\n    if t has any conflict with tx in B: continue;\n    if g + BS &lt; BL: B.append(t); BS += g\nreturn B\n</code></pre>\n<p>In practice, the conflict between transactions is only known if simulated sequentially. We propose two constraints on how this conflict can be modeled.</p>\n<ul>\n<li>Two transactions <span class=\"math\">t_1</span> and <span class=\"math\">t_2</span> conflict if the transactions cannot be executed together. This can happen if some address is trying to double-spend some money it has or if two searcher bundles try to extract MEV from the transaction. We call this conflict a “Real” conflict.</li>\n<li>Two transactions <span class=\"math\">t_1</span> and <span class=\"math\">t_2</span> conflict if they interact with the same address. We call this conflict an “All” condition. These transactions do not necessarily invalidate each other. Still, we keep this as a potential conflict condition since this conflict is more straightforward to determine (constant size operation) than the other constraint (gas size operation), and thus can be helpful for builders optimizing based on the time computing is used.</li>\n</ul>\n<p>Note: In the solution simulation, we assume that <span class=\"math\">p=0.95</span> of transactions in the “All” conflict are not in the “Real” conflict.</p>\n<p>Based on the definition of conflicts, we present the two baseline greedy solutions, which we label CG All and CG Real.</p>\n<h2><a name=\"knapsack-greedy-13\" class=\"anchor\" href=\"https://ethresear.ch#knapsack-greedy-13\"></a>Knapsack Greedy</h2>\n<p>The greedy solution described above is not a good approximation solution. Looking back at the knapsack problem, we get a 1/2 approximation over the optimal solution by comparing the above classic greedy with the utility of the first object that was not allocated.</p>\n<p>The algorithm begins by running an instance of the greedy classic. It then finds the highest paying (highest f/g) transaction and adds it to the block. Adding this transaction would require modification of the block since some transactions in block (B) conflicted with this transaction, or the transaction could not be inserted due to insufficient space. Thus, we remove transactions that conflict with this new addition and then make enough space to add this transaction. After inserting the transaction, we repeat the greedy insertion until the block is again full. We repeat the above algorithm until we have seen each transaction at least once over the greedy solution.</p>\n<p>The pseudocode for the solution is as follows:</p>\n<pre><code class=\"lang-auto\">Sort T by corresponding F/G\nLet B  := {}\nLet B_f:= {}\nLet S  := {}\nLet BS := 0\nwhile S != T: \n    let t := t in T, not in S, with maximum f/g:\n    remove any transaction from B that conflicts with t.\n    remove smallest f/g txs until there is space to insert t.\n    B.append(t)\n    S.append(t)\n    For each t in T, f in F, g in G do:\n        if t has any conflict with tx in B: continue;\n        if g + BS &lt; BL: B.append(t); BS += g; S.append(t)\n    if sum(B.f) &gt; sum(B_f.f): B_f = B\n\nreturn B_f\n\n# B.f is the fee corresponding to each transaction in B\n</code></pre>\n<p>In this greedy protocol, we attempt to enforce the inclusion of a transaction every time. It is still distinct from the greedy knapsack 1/2 approximation, but it tries to replicate what was accomplished by the knapsack greedy but for all items not picked by the greedy algorithm.</p>\n<p>This solution will outperform its classic greedy counterpart since it computes maximum over all solutions, one of which is the classic greedy solution. Like the classic greedy solution, we analyze this when conflicts are “Real” and “All”.</p>\n<h2><a name=\"classic-greedy-informed-solutions-14\" class=\"anchor\" href=\"https://ethresear.ch#classic-greedy-informed-solutions-14\"></a>Classic Greedy Informed Solutions</h2>\n<p>Solving the knapsack problem is very easy compared to all known NP-Hard problems, especially the maximum independent set condition we have been imposing. Thus, we allow the builder to solve the knapsack reasonably accurately and quickly via a BLP solver. The knapsack solution gives the builder some idea about how to build the block, and then when there are conflicting transactions in the chosen block, the “later” transactions are discarded. In this solution, we run a knapsack LP solution. On the output of the LP, we sort the output based on i) f/g ratio ii) f, and finally iii) g. The way greedy works here is that the transactions are picked in the order of the metric, and whenever there is a conflict, the LP solver is recalled, but removing constraints on the already added and the conflicting transaction (<span class=\"math\">x_i</span> is set to 1 for all that have already been chosen and <span class=\"math\">x_i</span> is set to 0 for the conflicting transaction). This is repeated until the block is full.</p>\n<pre><code class=\"lang-auto\">Let B  := {}\nLet B_c:= {nil}\nLet BS := 0\nLet C  := {}\nwhile B_c != B:\n    B_c = LP.solve(sum(x.f), x.g &lt;= BL, C)\n    Sort B_c by \"heuristic\"\n    for t in B_c:\n        if t has any conflict with tx in B: \n            C.add(x_t = 0)\n            break;\n        B.append(t)\n        C.add(x_t = 1)\n\nreturn B\n\n\n# Replace \"heurestic\" by f/g for standard, \n                       f for high-value \n# Sorting is in descending order \n</code></pre>\n<p>We label these transactions as CGI-f/g and CGI-f. We only analyze the “All” conflicts for this since the time to run the algorithm is potentially higher than for the other Greedy Algorithms.</p>\n<h2><a name=\"simulation-15\" class=\"anchor\" href=\"https://ethresear.ch#simulation-15\"></a>Simulation</h2>\n<p>Due to our limited time to work on the project, we tried to replicate the transaction data synthetically instead of working with real transactions. To properly simulate Ethereum mempool transactions, we choose the following dataset:</p>\n<h3><a name=\"dataset-16\" class=\"anchor\" href=\"https://ethresear.ch#dataset-16\"></a>Dataset</h3>\n<p>We choose 2000 transactions under this distribution.</p>\n<ul>\n<li>80%: SMALL: g ~ N(24k, 3k)  f/g ~ N(16,4) - These low gas-consuming transactions have minimal smart contract interactions and thus use less gas. In almost all cases, the gas fees for these transactions are small since they are usually never a priority transaction.</li>\n<li>18%  : LARGE1: g ~ N(200k, 20K)  f/g ~ N(16,4) - These represent transactions that have a significant contract execution; however, in this case, these are still not priority transactions, since the user is okay to wait for some time for the contract execution.</li>\n<li>2%  : LARGE2: g ~ N(200k, 20K)  f/g ~ N(40,10) - These are the priority transactions. Usually, these have high gas usage since they mostly interact with, for example, DeFi contracts and want to be executed as soon as possible.</li>\n</ul>\n<p>We simulate the conflicts among these transactions by randomly choosing transactions such that each transaction has a <span class=\"math\">\\sigma</span> number of conflicts. While our preliminary results constitute the same <span class=\"math\">\\sigma</span> across all types of transactions, in practice, the larger transactions, especially the high-paying ones, would have a more significant number of conflicts since usually MEV extracting bundles would be constructed around them.</p>\n<h3><a name=\"results-17\" class=\"anchor\" href=\"https://ethresear.ch#results-17\"></a>Results</h3>\n<p>We ran our simulation over 100 blocks with the mempool created as above.</p>\n<p>When we consider <span class=\"math\">\\sigma=2</span> number of conflicts per transaction, we see the following results:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/5/45d6ba5351f45cbc8f51bd30a3637d3f1554c6f5.png\" data-download-href=\"https://ethresear.ch/uploads/default/45d6ba5351f45cbc8f51bd30a3637d3f1554c6f5\" title=\"s2feeratio\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/5/45d6ba5351f45cbc8f51bd30a3637d3f1554c6f5_2_668x499.png\" alt=\"s2feeratio\" data-base62-sha1=\"9XOZRfoJ64IFBRfHXUZ6VTgstVP\" width=\"668\" height=\"499\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/5/45d6ba5351f45cbc8f51bd30a3637d3f1554c6f5_2_668x499.png, https://ethresear.ch/uploads/default/original/3X/4/5/45d6ba5351f45cbc8f51bd30a3637d3f1554c6f5.png 1.5x, https://ethresear.ch/uploads/default/original/3X/4/5/45d6ba5351f45cbc8f51bd30a3637d3f1554c6f5.png 2x\" data-dominant-color=\"FAFAFA\"></a></div><br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/4/1430b955e746ba6faf056ac169b049c0e3dded9a.png\" data-download-href=\"https://ethresear.ch/uploads/default/1430b955e746ba6faf056ac169b049c0e3dded9a\" title=\"s2wastedgas\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/4/1430b955e746ba6faf056ac169b049c0e3dded9a_2_668x499.png\" alt=\"s2wastedgas\" data-base62-sha1=\"2SBWhsJmZp1Fs4vebFye0sw0NGG\" width=\"668\" height=\"499\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/4/1430b955e746ba6faf056ac169b049c0e3dded9a_2_668x499.png, https://ethresear.ch/uploads/default/original/3X/1/4/1430b955e746ba6faf056ac169b049c0e3dded9a.png 1.5x, https://ethresear.ch/uploads/default/original/3X/1/4/1430b955e746ba6faf056ac169b049c0e3dded9a.png 2x\" data-dominant-color=\"FBFBFB\"></a></div><p></p>\n<p>Increasing the number of conflicts each transaction had increases the problem’s difficulty. Therefore, the various greedy algorithms have a larger separation in performance:</p>\n<p>For <span class=\"math\">\\sigma = 10</span>,<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/e/ae043667cfb292234612d06e14e402d2cc86b268.png\" data-download-href=\"https://ethresear.ch/uploads/default/ae043667cfb292234612d06e14e402d2cc86b268\" title=\"s10feeratio\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/e/ae043667cfb292234612d06e14e402d2cc86b268_2_668x499.png\" alt=\"s10feeratio\" data-base62-sha1=\"oPq6waJAGejo4lr3RKXQxg5dS5O\" width=\"668\" height=\"499\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/e/ae043667cfb292234612d06e14e402d2cc86b268_2_668x499.png, https://ethresear.ch/uploads/default/original/3X/a/e/ae043667cfb292234612d06e14e402d2cc86b268.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/e/ae043667cfb292234612d06e14e402d2cc86b268.png 2x\" data-dominant-color=\"FAFAFA\"></a></div><p></p>\n<p>For <span class=\"math\">\\sigma = 20</span>,<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/9/79e0d8ad31f56fcb617c858775285e5e6b5b28fb.png\" data-download-href=\"https://ethresear.ch/uploads/default/79e0d8ad31f56fcb617c858775285e5e6b5b28fb\" title=\"s20feeratio\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/9/79e0d8ad31f56fcb617c858775285e5e6b5b28fb_2_668x499.png\" alt=\"s20feeratio\" data-base62-sha1=\"hobvjBfGZZzHEtGsTnKrV4TsMTp\" width=\"668\" height=\"499\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/9/79e0d8ad31f56fcb617c858775285e5e6b5b28fb_2_668x499.png, https://ethresear.ch/uploads/default/original/3X/7/9/79e0d8ad31f56fcb617c858775285e5e6b5b28fb.png 1.5x, https://ethresear.ch/uploads/default/original/3X/7/9/79e0d8ad31f56fcb617c858775285e5e6b5b28fb.png 2x\" data-dominant-color=\"FAFAFA\"></a></div><p></p>\n<p>For <span class=\"math\">\\sigma = 40</span>,<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/3/e333c84dc6daa57f54481113545d081b8bb2af91.png\" data-download-href=\"https://ethresear.ch/uploads/default/e333c84dc6daa57f54481113545d081b8bb2af91\" title=\"s40feeratio\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/3/e333c84dc6daa57f54481113545d081b8bb2af91_2_668x499.png\" alt=\"s40feeratio\" data-base62-sha1=\"wpVkpfUNvc4jsqwY0C4zvIipvFf\" width=\"668\" height=\"499\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/3/e333c84dc6daa57f54481113545d081b8bb2af91_2_668x499.png, https://ethresear.ch/uploads/default/original/3X/e/3/e333c84dc6daa57f54481113545d081b8bb2af91.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/3/e333c84dc6daa57f54481113545d081b8bb2af91.png 2x\" data-dominant-color=\"FBFAFA\"></a></div><p></p>\n<h2><a name=\"future-research-direction-18\" class=\"anchor\" href=\"https://ethresear.ch#future-research-direction-18\"></a>Future Research Direction</h2>\n<p>Based on our results, solving the block-building problem is an NP-Hard problem, and as long as conflicts exist amongst the transactions, it remains a complex problem.</p>\n<p>However, this does not mean that all hope is lost. The block-building problem may have more potential than the Maximum Independent Set problem. Combining the space of Knapsack and Maximum Independent Set gives us a smaller search space to find a satisfactory approximate solution for the issue at hand.</p>\n<p>Further, for Ethereum bundles from searchers, if <span class=\"math\">tx_i</span> and <span class=\"math\">tx_j</span> conflict, as well as <span class=\"math\">tx_j</span> and <span class=\"math\">tx_k</span> conflict, then there is a high likelihood that <span class=\"math\">tx_i</span> and <span class=\"math\">tx_k</span> also conflict. This eases the constraints on the solution since, amongst an all-2-all graph of transactions, for MIS, you only need to pick the transaction with the highest utility (also satisfying knapsack).</p>\n<p>Another thing to note is that our algorithms can inform how block builders construct blocks in practice. Notably, the Classical Greedy Informed algorithm, in which we sort the transactions by highest fee, is closest to the optimal solution.</p>\n<p>That being said, the most exciting extension to this research would be modeling the block-building problem as a job sequencing problem instead and somehow estimating how utility (fee+MEV) from one transaction affects the utility of other transactions sequenced after the first transaction.</p>\n<p>On that note, we invite potential collaborators to explore new ideas for building blocks that maximize the builders’ utility.</p>\n            <p><small>3 posts - 3 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/block-building-is-not-just-knapsack/19871\">Read full topic</a></p>","link":"https://ethresear.ch/t/block-building-is-not-just-knapsack/19871","pubDate":"Wed, 19 Jun 2024 17:35:36 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19871"},"source":{"@url":"https://ethresear.ch/t/block-building-is-not-just-knapsack/19871.rss","#text":"Block Building is not just knapsack!"}},{"title":"Fork-Choice enforced Inclusion Lists (FOCIL): A simple committee-based inclusion list proposal","dc:creator":"soispoke","category":"Block proposer","description":"<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/3/639a5b7de796701a13a5759e8f5a1fe393f067f3.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/639a5b7de796701a13a5759e8f5a1fe393f067f3\" title=\"DALL·E 2024-06-05 14.58.08 - A highly realistic illustration of a rock with the Ethereum symbol fossilized into it, set in a cave. The rock should appear weathered and ancient, wi\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/3/639a5b7de796701a13a5759e8f5a1fe393f067f3_2_690x394.jpeg\" alt=\"DALL·E 2024-06-05 14.58.08 - A highly realistic illustration of a rock with the Ethereum symbol fossilized into it, set in a cave. The rock should appear weathered and ancient, wi\" data-base62-sha1=\"ed7YGldSP4XNCYdkHfdb2nHA1hx\" width=\"690\" height=\"394\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/3/639a5b7de796701a13a5759e8f5a1fe393f067f3_2_690x394.jpeg, https://ethresear.ch/uploads/default/optimized/3X/6/3/639a5b7de796701a13a5759e8f5a1fe393f067f3_2_1035x591.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/6/3/639a5b7de796701a13a5759e8f5a1fe393f067f3_2_1380x788.jpeg 2x\" data-dominant-color=\"685748\"></a></div><br>\n<em>^focil =&gt; fossil =&gt; protocol ossification</em><p></p>\n<p><em>by <a href=\"https://ethresear.ch/u/soispoke/summary\">Thomas</a>, <a href=\"https://ethresear.ch/u/fradamt/summary\">Barnabé</a>, <a href=\"https://ethresear.ch/u/fradamt/summary\">Francesco</a> and <a href=\"https://ethresear.ch/u/julian/summary\">Julian</a></em> - June 19th, 2024</p>\n<p><em>This design came together during a small, week long, in-person gathering in Berlin with RIG and friends to discuss censorship resistance, issuance, and Attester-Proposer-Builder-Consensus-Execution-[insert here] Separation.</em></p>\n<p><em>Thanks to Luca, Terence, Toni, Ansgar, Alex, Caspar and Anders for discussions, feedback and comments on this proposal.</em></p>\n<h1><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a><strong>tldr</strong></h1>\n<p>In this post, we introduce Fork-Choice enforced Inclusion Lists (FOCIL), a simple committee-based IL design.</p>\n<p>FOCIL is built in three simple steps:</p>\n<ol>\n<li>Each slot, a set of validators is selected to become <strong>IL committee members.</strong> Each member gossips one <em>local inclusion list</em> according to their subjective view of the mempool.</li>\n<li><strong>The block proposer</strong> collects and aggregates available local inclusion lists into a concise <em>aggregate</em>, which is included in its block.</li>\n<li><strong>The attesters</strong> evaluate the quality of the <em>aggregate</em> given their own view of the gossiped local lists to ensure the block proposer accurately reports the available local lists.</li>\n</ol>\n<p>This design ensures a robust and reliable mechanism to uphold Ethereum’s censorship resistance and <a href=\"https://ethresear.ch/t/uncrowdable-inclusion-lists-the-tension-between-chain-neutrality-preconfirmations-and-proposer-commitments/19372\">chain neutrality</a> properties, by guaranteeing timely transaction inclusion.</p>\n<h1><a name=\"introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#introduction-2\"></a>Introduction</h1>\n<p>In an effort to shield the Ethereum validator set from centralizing forces, the right to build blocks has been auctioned off to specialized entities known as builders. Over the past year, this has resulted in a few sophisticated builders dominating the network’s block production. Economies of scale have further entrenched their position, making it increasingly difficult for new entrants to gain significant market share. A direct consequence of oligopolistic block production is a deterioration of the network’s (weak) censorship resistance properties. Today, <a href=\"https://censorship.pics/\" rel=\"noopener nofollow ugc\">two of the top three builders</a> are actively filtering out transactions interacting with sanctioned addresses from their blocks. In contrast, 90% of the <a href=\"https://www.ethernodes.org/countries\" rel=\"noopener nofollow ugc\">more decentralized and heterogeneous validator set</a> is not engaging in censorship.</p>\n<p>This has driven <a href=\"https://github.com/michaelneuder/mev-bibliography?tab=readme-ov-file#censorship-resistance\" rel=\"noopener nofollow ugc\">research</a> toward ways that allow validators to impose constraints on builders by force-including transactions in their blocks. These efforts recently culminated in the first practical implementation of forward <span class=\"math\">\\text{ILs}</span> (<span class=\"math\">\\text{fILs}</span>) being considered for inclusion in the upcoming Pectra fork (see <a href=\"https://ethresear.ch/t/no-free-lunch-a-new-inclusion-list-design/16389\">design</a>, <a href=\"https://eips.ethereum.org/EIPS/eip-7547\" rel=\"noopener nofollow ugc\">EIP</a>, and <a href=\"https://notes.ethereum.org/@mikeneuder/il-spec-overview\" rel=\"noopener nofollow ugc\">specs</a> <a href=\"https://gist.github.com/michaelneuder/ba32e608c75d48719a7ecba29ec3d64b\" rel=\"noopener nofollow ugc\">here</a>). However, some concerns were raised about the specific mechanism proposed in <a href=\"https://eips.ethereum.org/EIPS/eip-7547\" rel=\"noopener nofollow ugc\">EIP-7547</a>, leading to its rejection.</p>\n<p>Here, we introduce FOCIL, a simple committee-based design improving upon previous IL mechanisms (<a href=\"https://ethresear.ch/t/no-free-lunch-a-new-inclusion-list-design/16389\">Forward ILs</a>, <a href=\"https://ethresear.ch/t/the-more-the-less-censored-introducing-committee-enforced-inclusion-sets-comis-on-ethereum/18835\">COMIS</a>) or co-created blocks (<a href=\"https://ethresear.ch/t/concurrent-block-proposers-in-ethereum/18777\">CBP</a>) and addressing issues related to <a href=\"https://ethresear.ch/t/fun-and-games-with-inclusion-lists/16557\">bribing/extortion attacks</a>, IL equivocation, <a href=\"https://ethereum.org/en/roadmap/account-abstraction/\" rel=\"noopener nofollow ugc\">account abstraction</a> (AA) and incentive incompatibilities. Note also Vitalik’s recent proposal “<a href=\"https://ethresear.ch/t/one-bit-per-attester-inclusion-lists/19797\">One-bit-per-attester inclusion lists</a>”, where the committee chosen to build the list is essentially the whole set of attesters.</p>\n<h1><a name=\"design-3\" class=\"anchor\" href=\"https://ethresear.ch#design-3\"></a><strong>Design</strong></h1>\n<p>In this section, we introduce the core properties of the FOCIL mechanism (see <strong>Figure 1.</strong>).</p>\n<h2><a name=\"high-level-overview-4\" class=\"anchor\" href=\"https://ethresear.ch#high-level-overview-4\"></a><strong>High-level overview</strong></h2>\n<p>Each slot, a set of validators is randomly selected to become part of an inclusion list (<span class=\"math\">\\text{IL}</span>) committee. <span class=\"math\">\\text{IL}</span> committee members are responsible for creating local inclusion lists (<span class=\"math\">\\text{IL}_\\text{local}</span>) of transactions pending in the public mempool. Local <span class=\"math\">\\text{ILs}</span> are then broadcast over the global topic, and the block producer must include a canonical aggregate (<span class=\"math\">\\text{IL}_\\text{agg}</span>) of transactions from the collected local <span class=\"math\">\\text{ILs}</span> in its block <span class=\"math\">B</span>. The quality of <span class=\"math\">\\text{IL}_\\text{agg}</span> is checked by attesters, and conditions the validity of block <span class=\"math\">B</span>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/e/bedfe43a4319b8ef24f99db6089793aeda7dc3fb.png\" data-download-href=\"https://ethresear.ch/uploads/default/bedfe43a4319b8ef24f99db6089793aeda7dc3fb\" title=\"Screenshot 2024-06-04 at 15.58.51\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/e/bedfe43a4319b8ef24f99db6089793aeda7dc3fb_2_690x375.png\" alt=\"Screenshot 2024-06-04 at 15.58.51\" data-base62-sha1=\"reyp5PiPfNB4HQXLPv1tvJmO8uD\" width=\"690\" height=\"375\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/e/bedfe43a4319b8ef24f99db6089793aeda7dc3fb_2_690x375.png, https://ethresear.ch/uploads/default/optimized/3X/b/e/bedfe43a4319b8ef24f99db6089793aeda7dc3fb_2_1035x562.png 1.5x, https://ethresear.ch/uploads/default/original/3X/b/e/bedfe43a4319b8ef24f99db6089793aeda7dc3fb.png 2x\" data-dominant-color=\"F0EFED\"></a></div><p></p>\n<blockquote>\n<p><strong>Figure 1.</strong> Diagram illustrating the FOCIL mechanism.</p>\n</blockquote>\n<h2><a name=\"mechanism-5\" class=\"anchor\" href=\"https://ethresear.ch#mechanism-5\"></a><strong>Mechanism</strong></h2>\n<ul>\n<li><strong>Validator Selection and Local Inclusion Lists</strong>\n<ul>\n<li>A set of validators is selected from the beacon committee to become <span class=\"math\">\\text{IL}</span> committee members for slot <span class=\"math\">n</span>. This set is denoted as <span class=\"math\">\\text{IL}_\\text{committee}(n) = \\{ 1, \\dots, m \\}</span>, where <span class=\"math\">m</span> is the number of <span class=\"math\">\\text{IL}</span> committee members.</li>\n<li>Each <span class=\"math\">\\text{IL}</span> committee member <span class=\"math\">i \\in \\text{IL}_\\text{committee}(n)</span> releases a local <span class=\"math\">\\text{IL}</span>, resulting in a set of local <span class=\"math\">\\text{ILs}</span> for slot <span class=\"math\">n</span>, defined as <span class=\"math\">\\text{IL}_\\text{local}(n) = \\{ \\text{IL}_1, \\dots, \\text{IL}_m \\}</span>.</li>\n<li>Each local <span class=\"math\">\\text{IL}_i</span> contains transactions: <span class=\"math\">\\text{IL}_i = \\{ \\text{tx}^1_i, \\dots, \\text{tx}^{j_i}_i \\}</span>, where each <span class=\"math\">\\text{tx}</span> is represented as  <span class=\"math\">\\text{tx} = (\\text{tx}[\\text{From}], \\text{tx}[\\text{Gas Limit}])</span>, and  <span class=\"math\">j_i</span> indicates the number of transactions in <span class=\"math\">\\text{IL}_i</span>. The <code>From</code> field represents the sender’s address, and the <code>Gas Limit</code> field represents the maximum gas consumed by a transaction. This is used to check whether a transaction can be included in a block given the <a href=\"https://ethresear.ch/t/unconditional-inclusion-lists/18500\">conditional</a> IL property.</li>\n</ul>\n</li>\n<li><strong>Block Producer’s Role</strong>\n<ul>\n<li>The block producer of slot <span class=\"math\">n</span>, denoted <span class=\"math\">\\text{BP}(n)</span>, must include an <span class=\"math\">\\text{IL}</span> aggregate denoted <span class=\"math\">\\text{IL}_\\text{agg}</span> and a payload in their block  <span class=\"math\">B = (B[\\text{IL}_\\text{agg}], B[\\text{payload}])</span>.</li>\n<li><span class=\"math\">\\text{IL}_\\text{agg}</span> consists of transactions: <span class=\"math\">\\text{IL}_\\text{agg} = \\{ \\text{tx}^1_\\text{agg}, \\dots, \\text{tx}^{t_\\text{agg}}_\\text{agg} \\}</span> where each transaction <span class=\"math\">\\text{tx}_\\text{agg}</span> is defined as <span class=\"math\">(\\text{tx}_\\text{agg}[\\text{tx}], \\text{tx}_\\text{agg}[\\text{bitlist}])</span>, and the <span class=\"math\">\\text{payload}</span> must include transactions present in the <span class=\"math\">\\text{IL}_\\text{agg}</span>.</li>\n<li>The bitlist <span class=\"math\">\\text{tx}_\\text{agg}[\\text{bitlist}] \\in \\{0, 1\\}^m</span> indicates which local $\\text{IL}$s included a given transaction.</li>\n<li>The function <span class=\"math\">\\text{Agg}</span> takes the set of available local ILs <span class=\"math\">\\text{IL}_\\text{local}(n)</span> and outputs a “canonical” aggregate. The proposer aggregate <span class=\"math\">\\text{IL}_\\text{agg}^\\text{proposer}</span> is included in block <span class=\"math\">B</span>, and each attester evaluates it quality by comparing it against its own <span class=\"math\">\\text{IL}_\\text{agg}^\\text{attester}</span>, using the function <span class=\"math\">\\text{Eval}(\\text{IL}_\\text{agg}^\\text{attester}, \\text{IL}_\\text{agg}^\\text{proposer}, Δ) \\in \\{ \\text{True}, \\text{False} \\}</span>.</li>\n</ul>\n</li>\n<li><strong>Attesters’ Role</strong>\n<ul>\n<li>Attesters for slot <span class=\"math\">n</span> receive the block <span class=\"math\">B</span> and apply a function <span class=\"math\">\\text{Valid}(B)</span> to determine the block validity.</li>\n<li><span class=\"math\">\\text{Valid}</span> encodes the block validity according to the result of <span class=\"math\">\\text{Eval}</span>, as well as core IL properties such as <a href=\"https://ethresear.ch/t/unconditional-inclusion-lists/18500\">conditional vs. unconditional</a>.</li>\n<li>Here are some scenarios to illustrate <span class=\"math\">\\text{IL}</span>-dependent validity conditions:\n<ul>\n<li>If local <span class=\"math\">\\text{ILs}</span> are made available before deadline <span class=\"math\">d</span>, but the proposer doesn’t include an <span class=\"math\">\\text{IL}_\\text{agg}^\\text{proposer}</span>, block <span class=\"math\">B</span> is considered invalid.</li>\n<li>If no local <span class=\"math\">\\text{ILs}</span> are made available before deadline <span class=\"math\">d</span>, and the proposer doesn’t include an <span class=\"math\">\\text{IL}_\\text{agg}^\\text{proposer}</span>, block <span class=\"math\">B</span> is considered valid.</li>\n<li>If block <span class=\"math\">B</span> is full, local $\\text{IL}$s were available before <span class=\"math\">d</span>, and the proposer doesn’t include an <span class=\"math\">\\text{IL}_\\text{agg}^\\text{proposer}</span>, block <span class=\"math\">B</span> is still considered valid.</li>\n<li>If <span class=\"math\">\\text{IL}_\\text{agg}^\\text{proposer}</span> doesn’t overlap with most of attesters’ <span class=\"math\">\\text{IL}_\\text{agg}^\\text{attester}</span> according to <span class=\"math\">\\text{Eval}</span>, block <span class=\"math\">B</span> is considered invalid.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>The core FOCIL mechanism could be defined as:</strong></p>\n<div class=\"math\">\n\\mathcal{M}_\\text{FOCIL}= (\\text{Agg}, \\text{Eval}, \\text{Valid})\n</div>\n<h2><a name=\"timeline-6\" class=\"anchor\" href=\"https://ethresear.ch#timeline-6\"></a>Timeline</h2>\n<p>The specific timing is given here as an example, but more research is required to figure out which numbers make sense.</p>\n<ul>\n<li><strong>Slot</strong> <span class=\"math\">n-1</span><strong>,</strong> <span class=\"math\">t = 6</span><strong>:</strong> The <span class=\"math\">\\text{IL}</span> committee releases their local <span class=\"math\">\\text{ILs}</span>, knowing the contents of block <span class=\"math\">n-1</span>.</li>\n<li><strong>Slot</strong> <span class=\"math\">n-1</span><strong>,</strong> <span class=\"math\">t=9</span><strong>:</strong> There is a local <span class=\"math\">\\text{IL}</span> freeze deadline <span class=\"math\">d</span> after which everyone locks their view of the observed local <span class=\"math\">\\text{ILs}</span>. The proposer broadcast the <span class=\"math\">\\text{IL}_\\text{agg}</span> over the global topic.</li>\n<li><strong>Slot</strong> <span class=\"math\">n</span><strong>,</strong> <span class=\"math\">t=0</span><strong>:</strong> The block producer of slot <span class=\"math\">n</span> releases their block <span class=\"math\">B</span> which contains both the payload and aggregated <span class=\"math\">\\text{IL}_\\text{agg}</span>.</li>\n<li><strong>Slot</strong> <span class=\"math\">n</span><strong>,</strong> <span class=\"math\">t=4</span><strong>:</strong> The attesters of slot <span class=\"math\">n</span> vote on block <span class=\"math\">B</span>, deciding whether <span class=\"math\">\\text{IL}_\\text{agg}</span> is “good enough” by comparing the result of computing the <span class=\"math\">\\text{Agg}</span> function over their local view of available local <span class=\"math\">\\text{ILs}</span> (applying <span class=\"math\">\\text{Eval}</span>) and checking if block <span class=\"math\">B</span> is <span class=\"math\">\\text{Valid}</span>.</li>\n</ul>\n<h2><a name=\"aggregation-evaluation-and-validation-functions-7\" class=\"anchor\" href=\"https://ethresear.ch#aggregation-evaluation-and-validation-functions-7\"></a><strong>Aggregation, Evaluation and Validation Functions</strong></h2>\n<p>As mentioned in the mechanism section, FOCIL relies on three core functions. Each of these needs to be specified to ensure the mechanism fulfils its purpose.</p>\n<ul>\n<li>\n<p><strong>The <span class=\"math\">\\text{Agg}</span> function</strong> is probably the most straightforward to define: Transactions from all collected local <span class=\"math\">\\text{ILs}</span> should be deterministically aggregated and deduplicated to construct <span class=\"math\">\\text{IL}_\\text{agg}</span>. We let:</p>\n<ul>\n<li><span class=\"math\">\\text{IL}_\\text{local} = \\{\\text{IL}_1, \\text{IL}_2, \\ldots, \\text{IL}_m\\}</span> be the set of local inclusion lists collected from committee members <span class=\"math\">m</span>.</li>\n<li>Each <span class=\"math\">\\text{IL}_i = \\{\\text{tx}_i^1, \\text{tx}_i^2, \\ldots, \\text{tx}_i^{t_i}\\}</span><br>\nbe the transactions in the local inclusion list of the <span class=\"math\">i</span>-th committee member.</li>\n<li>Each transaction <span class=\"math\">\\text{tx}</span> be defined by <span class=\"math\">(\\text{hash}, \\text{sender}, \\text{nonce})</span></li>\n</ul>\n<p><span class=\"math\">\\text{Agg}(\\text{IL}_\\text{local})</span>  can be thus defined as:</p>\n<div class=\"math\">\n\\text{Agg}(\\text{IL}_\\text{local}) = {\\text{tx} | \\text{tx} \\in \\bigcup_{i \\in m} \\text{tx}_{i} }\n</div>\n</li>\n<li>\n<p><strong>The <span class=\"math\">\\text{Eval}</span> function</strong> is used by each slot <span class=\"math\">n</span> attester to assess the quality of the <span class=\"math\">\\text{IL}_\\text{agg}</span> included in block <span class=\"math\">B</span>. Each attester calculates the <span class=\"math\">\\text{Agg}</span> function over all local <span class=\"math\">\\text{ILs}</span> they have observed in their view and then compares their generated <span class=\"math\">\\text{IL}_\\text{agg}^\\text{attester}</span> to the one included by the proposer <span class=\"math\">\\text{IL}_\\text{agg}^\\text{proposer}</span>. To allow for some leeway, the function includes an overlap parameter <span class=\"math\">Δ</span> (in %). The <strong><span class=\"math\">\\text{Eval}</span></strong> function can then be defined as:</p>\n<div class=\"math\">\n\\text{Eval}(\\text{IL}_\\text{agg}^\\text{attester}, \\text{IL}_\\text{agg}^\\text{proposer}, Δ) =\n    \\begin{cases}\n    \\text{True} &amp; \\text{if } \\frac{|\\text{IL}\\text{agg}^\\text{attester} \\cap \\text{IL}\\text{agg}^\\text{proposer}|}{|\\text{IL}_\\text{agg}^\\text{attester} \\cup \\text{IL}_\\text{agg}^\\text{proposer}|} \\geq Δ \\\\\n    \\text{False} &amp; \\text{otherwise}\n    \\end{cases}\n</div>\n<p><em>Note that the <span class=\"math\">\\text{Eval}</span> function, and especially its parameter <span class=\"math\">Δ</span>, will determine the trade-off between <strong>(1) the quality</strong> of the <span class=\"math\">\\text{IL}_\\text{agg}^\\text{proposer}</span> and the agency we are willing to give to proposers, and <strong>(2)</strong> <strong>liveness</strong>, as we might see an increase in missed slots if the criteria are set too strictly.</em></p>\n</li>\n<li>\n<p><strong>The <span class=\"math\">\\text{Valid}</span> function</strong> encodes whether the  <span class=\"math\">\\text{IL}_\\text{agg}</span> conforms to pre-defined core <span class=\"math\">\\text{IL}</span> properties, such as:</p>\n<ul>\n<li><strong>Conditional vs. Unconditional</strong>: Should the proposer include as many <span class=\"math\">\\text{IL}</span> transactions in the block as possible as long as there is space left, or is there dedicated block space reserved for <span class=\"math\">\\text{IL}</span> transactions?</li>\n<li><strong>Where-in-block</strong>: Where should <span class=\"math\">\\text{IL}</span> transactions be included in the block? Should they be placed anywhere, at the top of the block, or at the end of the block?</li>\n<li><strong>Expiry</strong>: How long do transactions remain in the <span class=\"math\">\\text{IL}</span> once they have been included? What happens if a slot is skipped?</li>\n</ul>\n</li>\n</ul>\n<h2><a name=\"more-rules-8\" class=\"anchor\" href=\"https://ethresear.ch#more-rules-8\"></a><strong>More rules</strong></h2>\n<p>In the following section, we introduce other rules that could be added to the core mechanism to specify:</p>\n<ul>\n<li>How users should pay for having their transactions included (<span class=\"math\">\\text{Payment}</span>)</li>\n<li>How rewards can be distributed across FOCIL participants (<span class=\"math\">\\text{Reward}</span>)</li>\n<li>How local <span class=\"math\">\\text{ILs}</span> are constructed (<strong><span class=\"math\">\\text{Inclusion}</span></strong>)</li>\n<li>Interactions between <span class=\"math\">\\text{IL}</span> and payload transactions (<span class=\"math\">\\text{Priority}</span>).</li>\n</ul>\n<h3><a name=\"user-bidding-textpayment-and-textreward-rules-9\" class=\"anchor\" href=\"https://ethresear.ch#user-bidding-textpayment-and-textreward-rules-9\"></a><strong>User Bidding,</strong> <span class=\"math\">\\text{Payment}</span> <strong>and</strong> <span class=\"math\">\\text{Reward}</span> <strong>rules</strong></h3>\n<ul>\n<li>Users place bids based on the value they assign to having their transactions included in block <span class=\"math\">B</span>. They need to take into consideration the FOCIL mechanism <span class=\"math\">\\mathcal{M}_\\text{FOCIL}</span>, but also how the <a href=\"https://eips.ethereum.org/EIPS/eip-1559\" rel=\"noopener nofollow ugc\">EIP-1559</a> mechanism works to set their base fees, denoted <span class=\"math\">\\mathcal{M}_\\text{1559}</span>. For instance, a user <span class=\"math\">t</span> makes a bid <span class=\"math\">b^t(v^t, \\mathcal{M}_\\text{FOCIL},\\mathcal{M}_\\text{1559}) = (\\delta^t, f^t)</span>, where <span class=\"math\">\\delta^t</span> is the maximum priority fee and <span class=\"math\">f^t</span> is the maximum total fee (i.e., base fee <span class=\"math\">r</span> + priority fee <span class=\"math\">\\delta^t</span>).</li>\n<li>The vector of bids from all users is denoted as <span class=\"math\">\\mathbf{b} = (b^1, b^2, \\dots, b^T)</span>, where each <span class=\"math\">b^t</span> represents the bid from user <span class=\"math\">t</span>.</li>\n<li>The <span class=\"math\">\\text{Payment}</span> rule <span class=\"math\">p(\\mathbf{b}) = (p_0(\\mathbf{b}), p_1(\\mathbf{b}), \\dots, p_t(\\mathbf{b}), \\dots, p_m(\\mathbf{b}))</span> ensures that users pay no more than their priority fee <span class=\"math\">\\hat{\\delta}^t = \\min(\\delta^t, f^t - r)</span>. Here, <span class=\"math\">p_0(\\mathbf{b}</span>) represents the payment to the block producer, and <span class=\"math\">p_t(\\mathbf{b}</span>) represents the payment made by user <span class=\"math\">t</span> to all other <span class=\"math\">\\text{IL}</span> committee members, where the set of users has size <span class=\"math\">m</span> and the block producer is indexed by 0.</li>\n</ul>\n<p>The <span class=\"math\">\\text{Payment}</span> rule defined above is meant to give a general view of how the value paid by users’ transactions can be redistributed across FOCIL participants (e.g., <span class=\"math\">\\text{IL}</span> committee members, block producer) to incentivize behavior that is considered good for the network, in this case preserving its censorship-resistant properties. Incentivizing <span class=\"math\">\\text{IL}</span> committee members for including transactions strengthens the robustness of the mechanism by increasing the <a href=\"https://arxiv.org/abs/2301.13321\" rel=\"noopener nofollow ugc\">cost of censorship</a>, or the amount a censoring party would have to pay for <span class=\"math\">\\text{IL}</span> committee members to exclude transactions from their local <span class=\"math\">\\text{ILs}</span>. Delving into the specifics of how the builder and <span class=\"math\">\\text{IL}</span> committee members should be rewarded is beyond the scope of this post as distributing rewards in an incentive-compatible way, especially during congestion, gets quite complex.</p>\n<p>However, here are three high-level options to consider:</p>\n<ul>\n<li><strong>Option 1</strong>: All transaction priority fees go to the builder, and <span class=\"math\">\\text{IL}</span> committee members are just not incentivized to include transactions in their local <span class=\"math\">\\text{ILs}</span>. This simple option doesn’t require any changes to the existing fee market, but entirely relies on altruism from <span class=\"math\">\\text{IL}</span> committee members. We could even consider an opt-in version of FOCIL, where validators can choose to be part of a list that may be elected to become <span class=\"math\">\\text{IL}</span> committee members and participate in building <span class=\"math\">\\text{ILs}</span> altruistically. However, it wouldn’t increase the cost of censorship nor would it make it very appealing for validators to participate in the mechanism. This could also lead to out-of-band payments from users wanted to have their transactions included in local <span class=\"math\">\\text{ILs}</span>.</li>\n<li><strong>Option 2</strong>: Priority fees from transactions included in the block are given to the <span class=\"math\">\\text{IL}</span> committee members. To distribute rewards among members, we could implement a weighted incentive system by defining a <span class=\"math\">\\text{Reward}</span> rule to calculate and distribute rewards for each member, considering the quantity (i.e., count) and uniqueness of transactions included in their local lists (see Appendix 1 of the <a href=\"https://ethresear.ch/t/the-more-the-less-censored-introducing-committee-enforced-inclusion-sets-comis-on-ethereum/18835\">COMIS post</a> for more details). If transactions are not part of the <span class=\"math\">\\text{IL}_\\text{agg}</span>, priority fees go to the builder. However, this approach could be problematic during congestion periods with the conditional <span class=\"math\">\\text{IL}</span> property, as builders might be incentivized to fill the block with transactions that are not in the <span class=\"math\">\\text{IL}_\\text{agg}</span>, even if <span class=\"math\">\\text{IL}</span> transactions have higher priority fees. To address this, we might need to design a mechanism that redirects priority fees to the builder during congestion. However, the practical implementation and potential secondary effects need further investigation.</li>\n<li><strong>Option 3</strong>: A third option is to introduce a new, separate inclusion fee that always go to IL committee members while priority fees always go to the builder. This would likely address the concerns of <strong>Option 2</strong> related to congestion but would introduce a whole other variable that users need to set. A useful distinction between Option 2 and Option 3 is whether the complexity is pushed upon the IL committee members or the end users.</li>\n</ul>\n<p>Another interesting question to explore is the impact of fee distribution across <span class=\"math\">\\text{IL}</span> committee members on mechanisms like <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590/4\">MEV-burn</a>. <strong>Options 2</strong> and <strong>3</strong> would effectively “reduce the burn” and produce a similar effect as <a href=\"https://ethresear.ch/t/committee-driven-mev-smoothing/10408\">MEV-smoothing</a>, but on a smaller scale limited to the size of the <span class=\"math\">\\text{IL}</span> committee (h/t Anders).</p>\n<h3><a name=\"textinclusion-rule-10\" class=\"anchor\" href=\"https://ethresear.ch#textinclusion-rule-10\"></a><span class=\"math\">\\text{Inclusion}</span> <strong>Rule</strong></h3>\n<p>The <span class=\"math\">\\text{Inclusion}</span> rule determines the criteria according to which <span class=\"math\">\\text{IL}</span> committee members should build their local <span class=\"math\">\\text{ILs}</span>. In FOCIL, we define it with the premise that IL committee members will try to maximize their rewards. Assuming <strong>Option 2</strong> for the <span class=\"math\">\\text{Payment}</span> rule, the <span class=\"math\">\\text{Inclusion}</span> rule could be to include all transactions seen in the public mempool, ordered by priority fees.</p>\n<h3><a name=\"textpriority-rule-11\" class=\"anchor\" href=\"https://ethresear.ch#textpriority-rule-11\"></a><span class=\"math\">\\text{Priority}</span> <strong>Rule</strong></h3>\n<p>We assume the block will be made of two components: a payload and an  <span class=\"math\">\\text{IL}_\\text{agg}</span> included by the proposer to impose constraints on transactions that need to be included in the builder’s payload. Imposing constraints to the block payload via the  <span class=\"math\">\\text{IL}_\\text{agg}</span> thus requires a priority rule to determine what happens during congestion. Generally, the priority rule in FOCIL states that transactions in the  <span class=\"math\">\\text{IL}_\\text{agg}</span> might be excluded if the block can be filled with the builder’s payload transactions. In other words, the block will still be valid even if some transactions in the <span class=\"math\">\\text{IL}_\\text{agg}</span> are not included, as long as the block is completely full (i.e., the <code>30 M</code> gas limit is reached).</p>\n<p><em>Note: Rules are not set in stone and should be interpreted as candidates for FOCIL. Rules also don’t necessarily have to be made explicit. For instance, we can define the <span class=\"math\">\\text{Reward}</span> such that the dominant strategy of the <span class=\"math\">\\text{IL}</span> committee is to adhere to the <span class=\"math\">\\text{Inclusion}</span> rule without any kind of enforcement by the protocol.</em></p>\n<h2><a name=\"improvements-and-mitigations-12\" class=\"anchor\" href=\"https://ethresear.ch#improvements-and-mitigations-12\"></a>Improvements and Mitigations</h2>\n<p>In this section, we discuss improvements over previous  <span class=\"math\">\\text{IL}</span> proposals, focusing on simplification and addressing specific implementation concerns.</p>\n<h3><a name=\"commitment-attacks-13\" class=\"anchor\" href=\"https://ethresear.ch#commitment-attacks-13\"></a><strong>Commitment attacks</strong></h3>\n<p>One of the main differences between FOCIL and the forward IL (<span class=\"math\">\\text{fIL}</span>) design proposed in <a href=\"https://eips.ethereum.org/EIPS/eip-7547\" rel=\"noopener nofollow ugc\">EIP-7547</a> is that FOCIL relies on a committee of multiple validators, rather than a single proposer, to construct and broadcast the <span class=\"math\">\\text{IL}</span>. This approach imposes stricter constraints on creating a “good” aggregate list and significantly reduces the surface for bribery attacks. Instead of targeting a single party to influence the exclusion of transactions from the <span class=\"math\">\\text{IL}</span>, attackers would now need to bribe an entire <span class=\"math\">\\text{IL}</span> committee (e.g., <code>256</code> members), substantially increasing the cost of such attacks. Previous designs (e.g., <a href=\"https://ethresear.ch/t/the-more-the-less-censored-introducing-committee-enforced-inclusion-sets-comis-on-ethereum/18835\">COMIS</a> and <a href=\"https://ethresear.ch/t/anonymous-inclusion-lists-anon-ils/19627\">anon-IL</a>), also involved multiple parties in building inclusion lists but still relied on an aggregator to collect, aggregate, and deduplicate local <span class=\"math\">\\text{ILs}</span>. In FOCIL, the entire set of attesters now participates in enforcing and ensuring the quality of the <span class=\"math\">\\text{IL}</span> included in the proposer’s block, thus removing single-party dependency other than the proposer. Additionally, it is worth noting that a censoring proposer would have to forego all consensus and execution layer rewards and cause a missed slot to avoid including transactions in the <span class=\"math\">\\text{IL}</span>.</p>\n<h3><a name=\"splitting-attacks-and-il-equivocation-14\" class=\"anchor\" href=\"https://ethresear.ch#splitting-attacks-and-il-equivocation-14\"></a><strong>Splitting attacks and IL equivocation</strong></h3>\n<p>Another concern with <span class=\"math\">\\text{fILs}</span> focused on possible “splitting” attacks using <span class=\"math\">\\text{ILs}</span>. <a href=\"https://eprint.iacr.org/2021/1413.pdf\" rel=\"noopener nofollow ugc\">Splitting attacks</a> like timed release or “equivocation” occur when malicious participants attempt to divide the honest view of the network to stall consensus. On Ethereum, a validator equivocating by contradicting something it previously advertised to the network is a <a href=\"https://eth2book.info/capella/part2/incentives/slashing/\" rel=\"noopener nofollow ugc\">slashable offense</a>. If there is evidence of the offence being included in a beacon chain block, the malicious validator gets ejected from the validator set. Quick reminder that in the <a href=\"https://eips.ethereum.org/EIPS/eip-7547\" rel=\"noopener nofollow ugc\">EIP-7547</a> design, the proposer for slot <span class=\"math\">n-1</span> is responsible for making the <span class=\"math\">\\text{IL}</span> to constrain proposer <span class=\"math\">n</span>, and can broadcast multiple <span class=\"math\">\\text{ILs}</span> (check out the <a href=\"https://ethresear.ch/t/no-free-lunch-a-new-inclusion-list-design/16389\">No-free lunch</a> post to see why, and how it relates to solving the free data availability problem). This means a malicious proposer could split the honest view of the network through <span class=\"math\">\\text{IL}</span> equivocation without being slashed. However, this is not a concern with FOCIL, since <span class=\"math\">\\text{IL}_\\text{agg}</span> has to be part of proposer $n$’s block. An <span class=\"math\">\\text{IL}</span> equivocation would thus be equivalent to a block equivocation, which is a known, slashable offense from the protocol’s perspective.</p>\n<h3><a name=\"incentives-incompatibilities-15\" class=\"anchor\" href=\"https://ethresear.ch#incentives-incompatibilities-15\"></a>Incentives incompatibilities</h3>\n<p>Previous <span class=\"math\">\\text{fILs}</span> proposals did not consider incentivizing the <span class=\"math\">\\text{IL}</span> proposer(s) for including “good” transactions. Relying on altruistic behavior might be fine, but there is always the risk that only very few validators will choose to participate in the mechanism if there is no incentive to gain. There is a strong argument to be made that the adoption of any <span class=\"math\">\\text{IL}</span> mechanism might be very low if validators risk being flagged as either non-censoring or censoring entities by revealing their preferences (see the <a href=\"https://ethresear.ch/t/anonymous-inclusion-lists-anon-ils/19627\">Anonymous Inclusion Lists post</a>), and if they are not rewarded for contributing to preserving the network’s censorship resistance properties. In FOCIL, we consider mechanisms to distribute rewards across <span class=\"math\">\\text{IL}</span> committee members and mention two options (<strong>Option 2</strong> and Option 3 in the <span class=\"math\">\\text{Payment}</span> rule section) for sharing transaction fees based on the quantity (i.e., count) and uniqueness of transactions included in their local lists. We hope to continue working in this direction and to find incentive-compatible ways to increase the costs of censorship.</p>\n<h3><a name=\"same-slot-censorship-resistance-16\" class=\"anchor\" href=\"https://ethresear.ch#same-slot-censorship-resistance-16\"></a>Same-slot censorship resistance</h3>\n<p>By having FOCIL run in parallel with block building during slot  <span class=\"math\">n-1</span>, we can impose constraints on the block by including transactions submitted during the same slot in local <span class=\"math\">\\text{ILs}</span>. This is a strict improvement over <span class=\"math\">\\text{fILs}</span> designs, where the forward property imposes a 1-slot delay on <span class=\"math\">\\text{IL}</span> transactions. This property is particularly useful for time-sensitive transactions that might be censored for MEV reasons (see <a href=\"https://cdn.prod.website-files.com/642f3d0236c604d1022330f2/6499f35e0bd0f43471a95adc_MEV_Auctions_ArXiV_6.pdf\" rel=\"noopener nofollow ugc\">Censorship resistance in onchain auctions</a> paper). Admittedly, the mechanism is not exactly real-time because we still need to impose the “local <span class=\"math\">\\text{IL}</span> freeze” deadline <span class=\"math\">d</span> so block producers have time to consider <span class=\"math\">\\text{IL}_\\text{agg}</span> transactions before proposing their block.</p>\n<h3><a name=\"textil-conditionality-17\" class=\"anchor\" href=\"https://ethresear.ch#textil-conditionality-17\"></a><span class=\"math\">\\text{IL}</span> conditionality</h3>\n<p>A core property of <span class=\"math\">\\text{ILs}</span> is their conditionality, which determines whether ILs should have dedicated block space for their transactions (<a href=\"https://ethresear.ch/t/unconditional-inclusion-lists/18500\">unconditional</a>) or share block space with the payload and only being included if the block isn’t full (conditional). For FOCIL, we’re leaning towards using conditional <span class=\"math\">\\text{ILs}</span> for a couple of reasons. Firstly, it might generally be best to give sophisticated entities like builders the maximum amount of freedom in organizing block space as long as they include <span class=\"math\">\\text{IL}</span> transactions. Allowing them to order transactions and fill blocks as they prefer, rather than imposing too many restrictions on their action space, reduces the risk of them using side channels to circumvent overly rigid mechanisms. Specifically, the unconditional property just couldn’t really be enforced effectively with FOCIL, since builders wanting to use <span class=\"math\">\\text{IL}</span> dedicated block space could simply “buy up <span class=\"math\">\\text{IL}</span> committee seats” from the elected validators to include their transactions via local <span class=\"math\">\\text{ILs}</span>. Another reason to opt for conditional <span class=\"math\">\\text{ILs}</span> is the flexibility in the size of the list. With unconditional ILs, an added block space must strictly set an arbitrary maximum <span class=\"math\">\\text{IL}</span> gas limit (e.g., <code>3M</code> gas). In contrast, conditional <span class=\"math\">\\text{ILs}</span> allow for a much more flexible <span class=\"math\">\\text{IL}</span> size, depending on the remaining space in the block. The known tradeoff with conditional <span class=\"math\">\\text{ILs}</span> is block stuffing: censoring builders might fill their blocks up to the gas limit to keep <span class=\"math\">\\text{IL}</span> transactions out. More research is needed to determine the sustainability of block stuffing, as <a href=\"https://timroughgarden.org/papers/eip1559.pdf\" rel=\"noopener nofollow ugc\">consecutive full blocks exponentially increase base fees</a> and the overall cost of this strategy.</p>\n<h3><a name=\"account-abstraction-accounting-18\" class=\"anchor\" href=\"https://ethresear.ch#account-abstraction-accounting-18\"></a><strong>Account Abstraction accounting</strong></h3>\n<p>In previous proposals, <span class=\"math\">\\text{IL}</span> summaries were constructed as structures to constrain blocks without committing to specific raw transactions. Each <span class=\"math\">\\text{IL}</span> summary —or <span class=\"math\">\\text{IL}_\\text{agg}</span> for FOCIL— entry represents a transaction by including the following fields: <code>From</code> and <code>Gas Limit</code>. Satisfying an entry in the <span class=\"math\">IL</span> summary requires that at least <em>some</em> transaction from the <code>From</code> address has been executed, <em>unless</em> the remaining gas in the block is less than <code>Gas Limit</code> . The idea is simple: if a transaction was previously valid and had a sufficiently high basefee, the only two things preventing its inclusion are the lack of sufficient gas in the block or its invalidation, which would require a transaction from the same sender to have been previously executed. Here we rely on a property of Ethereum EOAs: the <code>nonce</code> and <code>balance</code> of an EOA determine the validity of any transaction originating from that EOA, and can only be modified by such a transaction.</p>\n<p>However, even limited forms of Account Abstraction that have been considered for inclusion in Electra (e.g., <a href=\"https://github.com/ethereum/EIPs/blob/43fb1e0ca950c42a09efdf9a85d8acfe260efac1/EIPS/eip-3074.md\" rel=\"noopener nofollow ugc\">EIP-3074</a> or <a href=\"https://github.com/ethereum/EIPs/blob/43fb1e0ca950c42a09efdf9a85d8acfe260efac1/EIPS/eip-7702.md\" rel=\"noopener nofollow ugc\">EIP-7702</a>) allow a transaction to trigger a change in an EOA’s balance, <em>without originating from that EOA</em>. This <a href=\"https://hackmd.io/@potuz/BkWngLly0#Transactions-that-become-invalid\" rel=\"noopener nofollow ugc\">raised concerns</a> regarding previous <span class=\"math\">\\text{fIL}</span> proposals, as proposer <span class=\"math\">n</span> is not aware of what is included in builder $n$’s payload when proposing its <span class=\"math\">\\text{IL}</span>. This could lead to a scenario where proposer <span class=\"math\">n</span> includes a transaction <span class=\"math\">txn_A</span> from address <span class=\"math\">A</span> in the <span class=\"math\">\\text{IL}</span>, while builder <span class=\"math\">n</span> includes an EIP-7702 transaction <span class=\"math\">txn_B</span>, originating from address <span class=\"math\">B</span> but sweeping out all the <code>ETH</code> from address <span class=\"math\">A</span>, and thus invalidating  <span class=\"math\">txn_A</span>. Consequently, builder <span class=\"math\">n+1</span> would no longer be able to include <span class=\"math\">txn_A</span>, though no other transaction from address <span class=\"math\">A</span> has been previously executed. In other words, the <span class=\"math\">IL</span> summary would be unsatisfiable.</p>\n<p>In FOCIL, one simplification is that the constraints from the <span class=\"math\">\\text{IL}_\\text{agg}</span> apply to the block that is being built concurrently. This means a transaction in the <span class=\"math\">\\text{IL}_\\text{agg}</span> can’t be invalidated because of a transaction in the previous block, as it can in <span class=\"math\">\\text{fIL}</span> designs. In other words, we do not need to worry about what happened in the previous block in order to check for satisfaction of the <span class=\"math\">\\text{IL}_\\text{agg}</span>. However, a builder could still insert EIP-7702 transactions in its payload that invalidate <span class=\"math\">\\text{IL}_\\text{agg}</span> transactions. To handle this case, we can do the following when validating a block:</p>\n<ul>\n<li>Before executing the block’s transactions, we store <code>nonce</code> and <code>balance</code> of all <code>From</code> addresses that appear in the <span class=\"math\">\\text{IL}_\\text{agg}</span>.</li>\n<li>After execution, we check the <code>nonce</code> and <code>balance</code> of all <code>From</code> addresses from the <span class=\"math\">\\text{IL}_\\text{agg}</span> again, and for each (<code>From</code>, <code>Gas Limit</code>) pair in the <span class=\"math\">\\text{IL}_\\text{agg}</span> we require that either the <code>nonce</code> or the <code>balance</code> has changed, or the <code>Gas Limit</code> is more than the remaining gas.</li>\n</ul>\n<p>If the <code>nonce</code> has changed, some transaction from that address has been executed. If the <code>balance</code> has changed but the <code>nonce</code> has not, some AA transaction has touched that address. In either case, that address has transacted in the block, and the entry is satisfied.</p>\n<p><em>Note: With \"full” AA, transactions could have validity that depends on arbitrary state (e.g., the price changing in a Uniswap pool). In such cases, relying on a reduced form of transactions (i.e., entries with <code>From</code> and <code>Gas limit</code> fields) is insufficient, as the full validation logic of the transaction is needed. Due to the <a href=\"https://notes.ethereum.org/@vbuterin/pbs_censorship_resistance#What-are-the-design-goals-of-any-anti-censorship-scheme\" rel=\"noopener nofollow ugc\">free data-availability</a> problem, putting raw transactions on-chain is not an option. Instead, attesters could check this locally since they need to construct their own <span class=\"math\">\\text{IL}_\\text{agg}^\\text{attester}</span> and could, therefore, evaluate the full validation logic. This allows them to verify if the transaction has been invalidated and if its inclusion should be enforced. However, attesters might have <span class=\"math\">\\text{IL}_\\text{agg}^\\text{attester}\\text{s}</span> that contain different transactions from the same <code>From</code> address, leading to a situation where one transaction might be invalidated while another is not. This would result in split views and potential attacks</em></p>\n            <p><small>8 posts - 4 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/fork-choice-enforced-inclusion-lists-focil-a-simple-committee-based-inclusion-list-proposal/19870\">Read full topic</a></p>","link":"https://ethresear.ch/t/fork-choice-enforced-inclusion-lists-focil-a-simple-committee-based-inclusion-list-proposal/19870","pubDate":"Wed, 19 Jun 2024 15:42:04 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19870"},"source":{"@url":"https://ethresear.ch/t/fork-choice-enforced-inclusion-lists-focil-a-simple-committee-based-inclusion-list-proposal/19870.rss","#text":"Fork-Choice enforced Inclusion Lists (FOCIL): A simple committee-based inclusion list proposal"}},{"title":"Burn incentives in MEV pricing auctions","dc:creator":"aelowsson","category":"Economics","description":"<h1><a name=\"burn-incentives-in-mev-pricing-auctions-1\" class=\"anchor\" href=\"https://ethresear.ch#burn-incentives-in-mev-pricing-auctions-1\"></a>Burn incentives in MEV pricing auctions</h1>\n<p><em>Thanks to Barnabé Monnot, Thomas Thiery and Caspar Schwarz-Schilling for feedback and comments.</em></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/7/1703882e171fbc76c500a2799ebea0ad8dfe61d7.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/1703882e171fbc76c500a2799ebea0ad8dfe61d7\" title=\"The process of burning MEV\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/7/1703882e171fbc76c500a2799ebea0ad8dfe61d7_2_375x375.jpeg\" alt=\"The process of burning MEV\" data-base62-sha1=\"3hAy2kXyB1SoCUhhiqvsRDjkbrN\" width=\"375\" height=\"375\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/7/1703882e171fbc76c500a2799ebea0ad8dfe61d7_2_375x375.jpeg, https://ethresear.ch/uploads/default/optimized/3X/1/7/1703882e171fbc76c500a2799ebea0ad8dfe61d7_2_562x562.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/1/7/1703882e171fbc76c500a2799ebea0ad8dfe61d7_2_750x750.jpeg 2x\" data-dominant-color=\"856938\"></a></div><p></p>\n<h2><a name=\"introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#introduction-2\"></a>Introduction</h2>\n<h3><a name=\"overview-3\" class=\"anchor\" href=\"https://ethresear.ch#overview-3\"></a>Overview</h3>\n<p>This post presents a rudimentary review of incentives for burning MEV under the <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590\">“simple” MEV burn mechanism</a> presented by Justin, as well as its slot auction counterpart, <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\">“execution auctions”</a> presented by Barnabé. The analysis is also applicable to Francesco’s original <a href=\"https://ethresear.ch/t/committee-driven-mev-smoothing/10408\">MEV smoothing</a> design. These auctions—involving builders bidding, attesters enforcing a base fee floor, and proposers selecting a winning bid—will be defined as MEV pricing auctions (in the author’s view, the “execution auction” moniker could also be extended to cover all MEV pricing auctions).</p>\n<p>The post highlights how incentives to drive up the price floor (and thus burn more MEV) can emerge in these designs regardless of any direct profit motive among builders for doing so. Importantly, stakers and staking service providers wish to ensure that competitors do not attain more rewards for selling MEV capture rights than them. They may therefore integrate with builders to bid away competing stakers’ profits. Auctions that set a price floor on proposers’ MEV capture rights will thus be influenced by the overarching staking <a href=\"https://en.wikipedia.org/wiki/Metagame\">metagame</a>. It is only at this layer that griefing attacks against proposers to burn their MEV capture rights can be understood. Adverse competition during the consensus formation process might hypothetically lead attesters to bias their MEV base fee floor during split views, rejecting or admitting blocks depending on how it impacts their bottom line (in their roles as both builders and stakers). This is something to be attentive to. Naturally, burning MEV might also be considered a public good, and such incentives are reviewed in the text as well.</p>\n<h3><a name=\"mev-pricing-auctions-4\" class=\"anchor\" href=\"https://ethresear.ch#mev-pricing-auctions-4\"></a>MEV pricing auctions</h3>\n<p>In <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590\"><em>MEV burn–a simple design</em></a>, Justin formulated an add-on to <a href=\"https://ethresear.ch/t/why-enshrine-proposer-builder-separation-a-viable-path-to-epbs/15710\">enshrined proposer–builder separation</a> (ePBS), modifying the <a href=\"https://ethresear.ch/t/committee-driven-mev-smoothing/10408\">MEV smoothing</a> design.  Builders can specify a base fee and a tip in their block bids. At some specific time before the slot begins (e.g., 2 seconds), attesters observe the highest base fee among the bids (“observation deadline”) and impose it as a subjective base fee floor when attesting to the proposer’s block. Only bids with a base fee above the floor are accepted, and the base fee is burned.</p>\n<p>If builders bid before the observation deadline with the same timing as today, then the mechanism will <a href=\"https://ethresear.ch/t/in-a-post-mev-burn-world-some-simulations-and-stats/17092\">burn substantial MEV</a>. Concerns have however been raised over the risk of <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590/4\">collusion between proposers and builders</a> and lack of <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590/23\">proper incentivization</a>. A <a href=\"https://ethresear.ch/t/dr-changestuff-or-how-i-learned-to-stop-worrying-and-love-mev-burn/17384\">recent write-up</a> on the benefits of the design and MEV burn in general generated similar worries of a <a href=\"https://ethresear.ch/t/dr-changestuff-or-how-i-learned-to-stop-worrying-and-love-mev-burn/17384/3\">stable equilibrium of late bidding</a>.</p>\n<p>The design can be further modified to involve auctioning off the rights to the entire slot, 32 slots in advance (“<a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\">execution auction</a>”). A benefit of this design is the ability to offer long-lived preconfirmations and—hypothetically—the reduced value-in-flight during the auction. The same concerns raised for the block auction design can be applied to the slot auction design, because the beacon proposer might still benefit from colluding with builders to form late-bidding cartels when selecting the execution proposer.</p>\n<p>A modified MEV pricing auction, <a href=\"https://ethresear.ch/t/mev-burn-incentivizing-earlier-bidding-in-a-simple-design/17389\">MEV burn with builder kickbacks</a>, attempts to compensate builders for bidding early. That design is not the focus of this post, but incentives and side effects in uncompensated MEV pricing auctions will affect its relevance.</p>\n<h2><a name=\"five-burn-incentives-in-mev-pricing-auctions-5\" class=\"anchor\" href=\"https://ethresear.ch#five-burn-incentives-in-mev-pricing-auctions-5\"></a>Five burn incentives in MEV pricing auctions</h2>\n<p>The outlined concerns of late bidding are valid, but it turns out that it is not possible to analyze MEV burn without incorporating stakers as participating agents. In such an analysis, competition for attaining the most yield will—under equilibrium—drive participants to burn each other’s MEV. Other incentives for burning MEV also exist. The analysis starts from the most idealistic public good example in (A) and gradually builds toward a metagame of active collusion to discourage other stakers in (E) (see Figure 1).</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/a/7a0cc1b660d8b22ac81aff0bbc070505e6f30e7e.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/7a0cc1b660d8b22ac81aff0bbc070505e6f30e7e\" title=\"Figure 1\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/a/7a0cc1b660d8b22ac81aff0bbc070505e6f30e7e_2_500x500.jpeg\" alt=\"Figure 1\" data-base62-sha1=\"hpHA728XhIuk4yNHsFeTWz0qu0S\" width=\"500\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/a/7a0cc1b660d8b22ac81aff0bbc070505e6f30e7e_2_500x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/7/a/7a0cc1b660d8b22ac81aff0bbc070505e6f30e7e_2_750x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/7/a/7a0cc1b660d8b22ac81aff0bbc070505e6f30e7e_2_1000x1000.jpeg 2x\" data-dominant-color=\"866939\"></a></div><p></p>\n<p><strong>Figure 1.</strong> Five types of builders potentially burning MEV in MEV pricing auctions: (A) Public good builder, (B) For-profit public good builder, (C) Extortion racket, (D) Staker-initiated griefing, (E) Staker-initiated griefing cartel. The incentives behind (D) are important to understand (indicated by an arrow).</p>\n<h3><a name=\"a-public-good-builder-6\" class=\"anchor\" href=\"https://ethresear.ch#a-public-good-builder-6\"></a>(A) Public good builder</h3>\n<p>The first example is a builder that dedicates resources to burning MEV without a direct profit motive. If Ethereum’s users believe that burning MEV is a public good, and in particular if no other incentive is sufficient, they may come together to fund the development and operation of a public good builder. Initiatives to fund public goods are fairly <a href=\"https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c\">prevalent</a> within the Ethereum ecosystem. The public good builder can for example consistently bid according to guaranteed MEV at the observation deadline in the block auction design. This ensures that the MEV is burned while the builder will not suffer any direct losses from the bid. In the slot auction design, the builder would instead need to bid according to its expected MEV for the entire slot and might bid slightly below to stay safe.</p>\n<p>The public good builder will likely not be the best and will often be outbid in terms of tips from other builders in the proposer auction (taking place after the observation deadline), in which the proposer selects a winning bid. But the operation can still be very impactful. After all, priority fees are a significant portion of all value (in this post these fees are also treated as MEV), and some further “low-hanging MEV fruits” are potentially available without dedicating too large resources for extraction. While the builder may use any public goods funding received diligently and not strive for any profit, pursuing an idealistic path can still raise the originators’ public profile and provide significant economic benefits in the future (perhaps not even directly related to building blocks).</p>\n<h3><a name=\"b-for-profit-public-good-builder-7\" class=\"anchor\" href=\"https://ethresear.ch#b-for-profit-public-good-builder-7\"></a>(B) For-profit public good builder</h3>\n<p>A builder that positions itself as providing a public good may also enjoy direct economic benefits from its operation if some validators sympathize with the mission. There may for example be a market fit for builders that do not censor, nor extract various types of toxic MEV. In the block auction design, the builder could keep the MEV base fee in line with the available (non-censorship/non-toxic) MEV during the attester auction, and then pivot to tipping afterward, retaining some small profit margin. The MEV in some blocks is not particularly geared towards specialized searchers, and stakers may not lose that much in tips for some blocks by selecting the public good builder. Therefore, the public good builder could have higher profit margins in the blocks it does eventually get to build than builders that have not positioned themselves as providing a public good. A builder bidding before the observation deadline might of course also hope that its bids are the only ones to reach the proposer in times of degraded network conditions.</p>\n<h3><a name=\"c-extortion-racket-8\" class=\"anchor\" href=\"https://ethresear.ch#c-extortion-racket-8\"></a>(C) Extortion racket</h3>\n<p>Given the lower effort required for extracting some of the MEV, it seems like (A) and (B) could have a natural position and high impact within the Ethereum ecosystem. But it may very well be that no successful public good builder can be sustained over the long run. After all, many stakers will not be particularly enthusiastic over a builder that burns their MEV opportunities.</p>\n<p>Still, consider the importance of a dedicated MEV-burning builder within the staking ecosystem. If the builder is operational, proposers will lose out on a lot of value relative to if it does not operate. Is there a business opportunity here? Perhaps a builder could commit to burning the maximum possible MEV but abstain from doing so if it receives a bribe from the proposer? It seems natural that proposers would be willing to pay for this, since the proposer stands to capture most value from the available MEV if none is burned. But the prospect of competition makes the business model perilous. If a sole extortive builder is profitable, then a few more may try to enter the market as well. There is not much use in paying off two builders if it turns out that a third burned the MEV anyway through a bid. A mechanism for reconciling this ex-post would become rather complex. The validator may then be better off by simply not negotiating with any extortion racket.</p>\n<p>While the extortion racket seems unsustainable, it helps to underscore the power that builders have over proposers. The ultimate incentive for burning MEV then emerges when changing the responsible actor from one unaffected by the staking equilibrium (extorting builder) to one that is not (other stakers). The auction will eventually become part of the <a href=\"https://en.wikipedia.org/wiki/Metagame\">metagame</a> of the overarching staking equilibrium.</p>\n<h3><a name=\"d-metagame-staker-initiated-griefing-9\" class=\"anchor\" href=\"https://ethresear.ch#d-metagame-staker-initiated-griefing-9\"></a>(D) Metagame—staker-initiated griefing</h3>\n<p>Staking service providers (SSPs) compete for delegated stake and derive income by taking a cut of the staking yield when they pass it back to the delegators. An SSP must ensure that the yield it offers delegating stakers is competitive relative to offers from other SSPs. The MEV pricing auction may therefore lead SSPs to burn competing proposers’ MEV by tightly integrating with builders or running them in-house. If a competitor burns an SSP’s MEV, then the SSP must respond in kind or will lose out on delegators and thus income. When considering the metalevel of SSPs, this equilibrium seems more stable than an equilibrium of late bidding leading to little or no MEV burn. All it takes to break the late-bidding cartel is one defecting SSP builder, forcing others to respond.</p>\n<p>An SSP that through a builder griefs other stakers without taking any loss executes something comparable to a <a href=\"https://github.com/ethereum/research/blob/d1d465f658e0024a2010b0a6ad960a76d9c40cac/papers/discouragement/discouragement.pdf\">discouragement attack</a> with an infinite griefing factor. This is a very advantageous attack, primarily because delegators will flow to the best performing SSP. In addition, a reduction in overall yield for other stakers pushes down the quantity of supplied stake, bringing up the equilibrium yield. Thus, even if some delegators do not flow to the SSP that burns its competitor’s MEV, the expected staking yield (that the SSP will share in the profit from) will still go up, if the competitor’s customers simply stop delegating. Of course, the cost of running the builder must be accounted for. But large SSPs can amortize that cost across a vast amount of yield-bearing validators.</p>\n<p>Yet, directly profiting from the MEV is almost always better than burning it. When an SSP’s builder is able to extract more MEV in a competitor’s slot than any other builder, it will still be better off only bidding to a level that ensures it wins the auction. The SSP must thus make a probabilistic judgment as to the uniqueness of its MEV opportunity in the particular slot before deciding how to proceed (or more precisely, any edge in MEV value <span class=\"math\">V_e</span> relative to the second best builder). An SSP builder must in essence bid before the observation deadline up to the point where the expected payoff from burning the marginal MEV is equal to the expected payoff from waiting and hoping to extract it. There are some game-theoretic nuances to this that here will be set aside, with some aspects discussed in the next section. The point is to assert that there are stronger incentives for builders to bid before the observation deadline than what has been previously understood, because a builder might be run by an SSP that indirectly profits from burning other stakers’ potential MEV revenue.</p>\n<p>What happens in the metagame to smaller SSPs and solo stakers? They may not afford to run a builder of their own to ensure that their competitors’ MEV is burned. It is of course possible for solo stakers to try to come together to form a union around a builder, where each contributor is guaranteed to see their validators excluded from MEV base fee bids by the specific builder (and receive full tips during the proposer auction). There is then a question of if they will be able to organize such a union, but also if it really would be necessary. On the one hand, if there are several “griefing builders” running concurrently among the largest SSPs, parties holding less stake may not need to run their own griefing builder. Everyone will see their MEV burned anyway, since the big SSPs burn each other’s and everyone else’s MEV. On the other hand, a party not having a griefing builder readily available may be suboptimally positioned when considering the prospect of cartelization.</p>\n<h3><a name=\"e-metagame-staker-initiated-griefing-cartel-10\" class=\"anchor\" href=\"https://ethresear.ch#e-metagame-staker-initiated-griefing-cartel-10\"></a>(E) Metagame—staker-initiated griefing cartel</h3>\n<p>Can builders operating at the metalevel collude to selectively burn or selectively <em>not</em> burn MEV, depending on the identity of the slot’s validator? The cartel would strive to ensure that all participating SSPs (or any union of solo stakers) receive the MEV in their validators’ proposed blocks, while minimizing MEV in all other validators’ blocks.</p>\n<p>However, if attesters are honest, builders can only cartelize to selectively burn or not burn MEV that they uniquely are able to extract. As long as competing builders are operational, this substantially limits the power of any cartel. Therefore, the advantage of (E) over (D) is not substantial.</p>\n<h4><a name=\"proposer-is-part-of-the-cartel-11\" class=\"anchor\" href=\"https://ethresear.ch#proposer-is-part-of-the-cartel-11\"></a>Proposer is part of the cartel</h4>\n<p>When the beacon proposer is part of the cartel, members will abstain from bidding before the observation deadline to ensure that as much value as possible flows to the proposer. This type of cartelization has been highlighted as a concern (<a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590/4\">1</a>, <a href=\"https://ethresear.ch/t/dr-changestuff-or-how-i-learned-to-stop-worrying-and-love-mev-burn/17384/3\">2</a>) in the debate around MEV pricing auctions. The idea is that participants come to an explicit or implicit agreement to not bid before the observation deadline. Yet the incentive to burn MEV is stronger than previously understood, since stakers outside the cartel will wish to grief cartel members by bidding early (D), and so from this perspective, the risk of late-bidding-cartelization is lower than feared.</p>\n<p>It might also be difficult to efficiently uphold cartelization, because it is not possible for members to know which, if any, defected in pursuit of (D). One avenue would be to try to share the profits from every slot to give all participants incentives to hold back bids before the observation deadline. Yet overall, the existence of (A), (B), and (D) means that some value will still reasonably be burned by public good builders or any competitors not part of the cartel.</p>\n<h4><a name=\"proposer-is-not-part-of-the-cartel-12\" class=\"anchor\" href=\"https://ethresear.ch#proposer-is-not-part-of-the-cartel-12\"></a>Proposer is not part of the cartel</h4>\n<p>When the beacon proposer is outside the cartel, the goal is to deprive it of revenue while still capturing as much of the MEV as possible. It will still be more profitable for the cartel to extract any unique MEV opportunity rather than burn it. Define <span class=\"math\">V_s</span> as the value a builder can attain in the slot auction and <span class=\"math\">V_b</span> as its value for the block auction (from a block built at the observation deadline). When a builder can extract the most MEV, it has an edge <span class=\"math\">V_e</span> over the second-best builder (kept constant for simplicity). Just as in (D), the cartel can bid up to <span class=\"math\">V_b-V_e</span> or <span class=\"math\">V_s-V_e</span>, with the difference that <span class=\"math\">V_e</span> expands if the cartel collectively gains a larger edge against the best builder outside of the cartel. This expansion is what the cartel tries to capitalize on, both when the proposer is part of the cartel (expanding <span class=\"math\">V_e</span> to lower the burn) and when not (expanding <span class=\"math\">V_e</span> to increase builder profits). A challenge—just as in (D)—is that the cartel might not be able to properly estimate <span class=\"math\">V_e</span>. After the observation deadline, the cartel attempts to extract as much value as possible, leaving the MEV either burned or in their hands.</p>\n<h4><a name=\"collusion-at-other-levels-13\" class=\"anchor\" href=\"https://ethresear.ch#collusion-at-other-levels-13\"></a>Collusion at other levels</h4>\n<p>The presentation so far has been somewhat simplistic. It bears mentioning that collusion need not happen at the level of the builders, but can for example happen at the level of searchers or any out-of-protocol relay that the cartel still finds beneficial to maintain before posting to the P2P layer. In all scenarios of successful cartelization, if some stakers (for example solo stakers) are unable to act collectively, they may end up at the short end of the discouragement dynamic.</p>\n<h2><a name=\"risks-associated-with-attester-builder-integration-14\" class=\"anchor\" href=\"https://ethresear.ch#risks-associated-with-attester-builder-integration-14\"></a>Risks associated with attester–builder integration</h2>\n<p>The analysis so far indicates that (D) may have a significant effect on its own but that it does not necessarily lead to the riskier cartelization in (E). But what might happen when we give SSPs tools for depriving each other of revenue? While SSPs will always compete, competition in MEV pricing auctions is on the verge of seeping into the consensus formation process. At the consensus level, all participants are expected to behave honestly and are rewarded for good behaviour. Through staker–builder integration in (D)-(E), SSPs will come to actively influence each other’s rewards, cooperating or griefing each other. A risk is that SSPs might navigate down perilous paths in this landscape.</p>\n<p>It has been noted that MEV pricing auctions suffer from attesters potentially having <a href=\"https://ethresear.ch/t/mev-burn-incentivizing-earlier-bidding-in-a-simple-design/17389\">split views</a> of the MEV base fee floor. Biasing the outcome in a split view one way or the other might benefit one builder over another, result in a block being forked out to deprive the beacon proposer of all rewards, or allow the proposer to reap higher rewards when selling MEV capture rights. One concern is that SSPs might eventually try to profit by tuning their attestations of the MEV base fee floor to produce favorable outcomes. This can also be done as part of a cartel. The honest majority assumption need not be broken to derive profits, due to split views. It is only necessary to put a thumb on the scale, and a competitive consensus formation might make such behavior more likely.</p>\n<p>Of course, stakers who do not honestly attest to which bids they have observed at which specific time point subject themselves to risks of social slashing if malicious behavior can be uncovered. This is always a potential final resort under proof of stake. In essence, just as it is prudent to be cautious of MEV or excessive issuance as strata for cartelization, it also seems prudent to be cautious of MEV pricing auctions as a stratum for consensus adversity.</p>\n<h2><a name=\"block-vs-slot-auctions-in-terms-of-mev-pricing-15\" class=\"anchor\" href=\"https://ethresear.ch#block-vs-slot-auctions-in-terms-of-mev-pricing-15\"></a>Block vs. slot auctions in terms of MEV pricing</h2>\n<p>Will block auctions or slot auctions burn more MEV? Is one more centralizing than the other? These questions are not easy to answer, because it depends on which burn incentive that comes to dominate, the likelihood of cartelization under different designs, etc. This section will discuss some differences (previous writings on <a href=\"https://mirror.xyz/0x03c29504CEcCa30B93FF5774183a1358D41fbeB1/CPYI91s98cp9zKFkanKs_qotYzw09kWvouaAa9GXBrQ\">block vs. slot auctions</a> provide a broader perspective).</p>\n<h3><a name=\"block-vs-slot-auctions-concerning-d-16\" class=\"anchor\" href=\"https://ethresear.ch#block-vs-slot-auctions-concerning-d-16\"></a>Block vs. slot auctions concerning (D)</h3>\n<p>Assume that (D) becomes an important incentive for burning MEV. Further, assume a competitive market without cartelization and perfect information about how much MEV each participant can extract. In the block auction design, the builder can bid <span class=\"math\">V_b-V_e</span> for the block at the observation deadline to maximize burn while retaining opportunities to extract value. It then updates its block and bid through tips in the proposer auction up until the slot boundary. There is <span class=\"math\">V_s-V_b</span> worth of value that the proposer hopes to attain through tips, and <span class=\"math\">V_e</span> worth of value left for the builder (under these simplified conditions).</p>\n<p>In the slot auction design, the builder can instead bid <span class=\"math\">V_s-V_e</span> already at the observation deadline. It is just buying the rights to build the block, not committing to its content, and that value is an entire slot’s worth of MEV. Naturally, <span class=\"math\">V_s</span> will here just be an estimate, and the risk that builders take on by bidding on an expected value instead of a tangible value might be worth some fraction of the total bid value. But incomplete information around competitors’ eventual final bids will likely serve to pull down the bid value at the observation deadline more. The staker–builder can ideally burn <span class=\"math\">V_s-V_e</span> of a competing beacon proposer’s auctionable MEV, and again retain <span class=\"math\">V_e</span> for itself. The difference in MEV burn between the two designs is then <span class=\"math\">V_s-V_b</span>.</p>\n<p>If the staker–builder could estimate <span class=\"math\">V_s</span> also in the block auction design (which nominally is easier since it bids much closer to the deadline), it could bid <span class=\"math\">V_s-V_e-V_g</span> already at the observation deadline. Since the bid is attached to a block containing only <span class=\"math\">V_b</span> of MEV, <span class=\"math\">V_g</span> is reserved as a tip for the proposer auction. If there is no tip, the proposer might elect to pick the block from the observation deadline, depriving the builder of <span class=\"math\">V_s-V_b</span>. However, while the proposer might specifically wish to do so if the same builder bids with low tips also in the proposer auction, a staker can obfuscate its identity by running several builders (the kickback design disincentivizes obfuscation).</p>\n<p>In either design, it seems most likely that the burn ends up being lower than these theoretical maxima due to incomplete information in combination with the fact that capturing the MEV is more valuable than burning it. The staker–builder will therefore operate with quite some margin to maximize expected profits.</p>\n<h3><a name=\"block-vs-slot-auctions-concerning-a-b-17\" class=\"anchor\" href=\"https://ethresear.ch#block-vs-slot-auctions-concerning-a-b-17\"></a>Block vs. slot auctions concerning (A)-(B)</h3>\n<p>The analysis for (D) is to some extent also applicable for (A) and (B). The public good builder could theoretically bid higher in the slot auction than in the block auction. However, the risk associated with overbidding in the slot auction design might be more serious for these builders. In the block auction design, the available value will be much clearer, making it easier for an unsophisticated builder to make low-risk bids.</p>\n<h3><a name=\"value-of-preconfirmations-18\" class=\"anchor\" href=\"https://ethresear.ch#value-of-preconfirmations-18\"></a>Value of preconfirmations</h3>\n<p>As previously mentioned, the slot auction design facilitates execution layer preconfirmations, which can provide a welfare gain to Ethereum. In addition, their value can be burnt (just as in <a href=\"https://ethresear.ch/t/execution-tickets/17944#roadmap-compatibility-6\">execution tickets</a>), since builders are bidding to attain that value. This increases the burn of the slot auction design.</p>\n<h3><a name=\"builder-centralization-under-competition-over-expected-mev-19\" class=\"anchor\" href=\"https://ethresear.ch#builder-centralization-under-competition-over-expected-mev-19\"></a>Builder centralization under competition over expected MEV</h3>\n<p>If builders have different strengths and weaknesses, they will intermittently attain the highest <span class=\"math\">V_b</span> in the block auction design. While one builder might be able to extract the highest MEV in expectation, not all blocks will play to its strengths. However, in the slot auction, builders bid on expected MEV, and one specific builder might then always have the highest expected <span class=\"math\">V_s</span>. This could potentially be a centralizing force, depending on how secondary markets evolve.</p>\n<h2><a name=\"conclusion-20\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-20\"></a>Conclusion</h2>\n<p>There are strong incentives for burning MEV even in designs that do not directly compensate for it, for example to provide a public good service or to ensure that other participants in the staking metagame do not attain a higher yield. Uncompensated MEV pricing auctions accommodates these incentives. Of particular relevance is staker-initiated griefing (D). It seems clear that SSPs will seek to influence builders’ bidding strategies, and this can lead to staker–builder integration. Still, this form of integration does not necessarily lead to censorship or higher MEV profits; thus not negating sought benefits of proposer–builder separation. If it is desirable to give an outside party an independent incentive to burn MEV, then <a href=\"https://ethresear.ch/t/mev-burn-incentivizing-earlier-bidding-in-a-simple-design/17389\">builder kickbacks</a> are an option. They can also be applied to the slot auction design.</p>\n<p>When implementing a MEV burn mechanism, it is important to ensure that the burn mechanism does not accidentally set fire to Ethereum’s consensus mechanism. Giving SSPs tools for griefing each other could lead to adverse competition during the consensus formation process. A particular concern is then if emerging attester–builder integration leads attesters to bias their MEV base fee floor, rejecting or admitting blocks depending on how it impacts their bottom line (in their roles as both builders and stakers). Which of the different scenarios (A-E) that would predominate is seemingly a more important parameter when evaluating the merits of MEV pricing auctions than the mechanism’s ability to burn substantial MEV (which this post suggests it can).</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/burn-incentives-in-mev-pricing-auctions/19856\">Read full topic</a></p>","link":"https://ethresear.ch/t/burn-incentives-in-mev-pricing-auctions/19856","pubDate":"Tue, 18 Jun 2024 20:58:14 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19856"},"source":{"@url":"https://ethresear.ch/t/burn-incentives-in-mev-pricing-auctions/19856.rss","#text":"Burn incentives in MEV pricing auctions"}},{"title":"Preconfirmations: On splitting the block, mev-boost compatibility and relays","dc:creator":"dpl0a","category":"Layer 2","description":"<p>Thanks to <a class=\"mention\" href=\"https://ethresear.ch/u/fabrizioromanogenove\">@FabrizioRomanoGenove</a>, <a class=\"mention\" href=\"https://ethresear.ch/u/meridian\">@meridian</a> and Philipp Zahn for helpful comments and feedback on this post.</p>\n<h2><a name=\"what-is-a-preconfirmation-1\" class=\"anchor\" href=\"https://ethresear.ch#what-is-a-preconfirmation-1\"></a><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/question.png?v=12\" title=\":question:\" class=\"emoji\" alt=\":question:\" loading=\"lazy\" width=\"20\" height=\"20\"> What is a Preconfirmation?</h2>\n<p>There have been a lot of variations on the definition of preconfirmation going around recently in the Ethereum community. In this post we will keep the definition as simple and broad as possible in order to generate the least amount of confusion and avoid arguing on semantics as much as possible:</p>\n<blockquote>\n<p>We call a <strong><em>preconfirmation mechanism</em></strong> any mechanism that ensures (non-positional) inclusion of a (bundle of) transaction(s), if execution is successful, in a finite and bounded amount of time from the emission of the preconfirmation.</p>\n</blockquote>\n<h3><a name=\"xga-style-preconfirmations-2\" class=\"anchor\" href=\"https://ethresear.ch#xga-style-preconfirmations-2\"></a><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/mag.png?v=12\" title=\":mag:\" class=\"emoji\" alt=\":mag:\" loading=\"lazy\" width=\"20\" height=\"20\"> XGA-Style Preconfirmations</h3>\n<p>We will analyze a specific kind of preconfirmation mechanism – as hinted to in <a href=\"https://ethresear.ch/t/a-simple-small-mev-boost-compatible-preconfirmation-idea/19800/3\">this post on ethresearch</a> – that we came up with some time ago and have been building since then:</p>\n<blockquote>\n<p>An <strong><em>XGA-style preconfirmation mechanism</em></strong> is a preconfirmation mechanism that guarantees (non-positional) inclusion of a sized bundle of transactions <strong>in the bottom portion of a predetermined block to be minted 2 epochs after the preconfirmation was emitted</strong>. Maximum bundle size is determined at the time of emission of the preconfirmation.</p>\n</blockquote>\n<h2><a name=\"splitting-the-block-3\" class=\"anchor\" href=\"https://ethresear.ch#splitting-the-block-3\"></a><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/scissors.png?v=12\" title=\":scissors:\" class=\"emoji\" alt=\":scissors:\" loading=\"lazy\" width=\"20\" height=\"20\"> Splitting the Block</h2>\n<p>Looking at the previous definition, I assume the first couple of questions that would come to mind is “what do you mean exactly by the bottom portion of a block?” and “how is the block to include the bundle predetermined?”. Our idea is pretty simple: Partition the block in such a way to keep a top-of-the-block (ToB)<sup class=\"footnote-ref\"><a href=\"https://ethresear.ch#footnote-48655-1\" id=\"footnote-ref-48655-1\">[1]</a></sup>, high-priority section, in which traditional builders do their usual thing and is allocated through a traditional mev-boost auction or whatever the relay running it prefers; and a reserved bottom-of-the-block (BoB) section, which will serve as allocation space for preconfirmations. In this design, preconfirmation bundles will be allocated via a separate auction in the form of <strong><em>forward contracts</em></strong>.</p>\n<h3><a name=\"a-two-auction-format-4\" class=\"anchor\" href=\"https://ethresear.ch#a-two-auction-format-4\"></a><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/busts_in_silhouette.png?v=12\" title=\":busts_in_silhouette:\" class=\"emoji\" alt=\":busts_in_silhouette:\" loading=\"lazy\" width=\"20\" height=\"20\"> A Two-Auction Format</h3>\n<p>As briefly mentioned above, in the XGA-style split-block design, preconfirmations are allocated in a completely separate way from the traditional mev-boost auction, allowing them to coexist without excessively disrupting the ecosystem. Traditional builders will be able to do their own thing with minimal adjustments, while everyone else can still enjoy the benefits of preconfirmations.</p>\n<p>In simple terms: An XGA-style BoB auction is a multi-unit auction selling gas tokens for a specific block <span class=\"math\">B</span> in fixed-size units (e.g. <span class=\"math\">100</span> K gas). These tokens can then be used to submit a bundle<sup class=\"footnote-ref\"><a href=\"https://ethresear.ch#footnote-48655-2\" id=\"footnote-ref-48655-2\">[2]</a></sup> that is guaranteed inclusion in <span class=\"math\">B</span> if execution is successful.</p>\n<p>As an example, picture this scenario:</p>\n<ul>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/clock2.png?v=12\" title=\":clock2:\" class=\"emoji\" alt=\":clock2:\" loading=\"lazy\" width=\"20\" height=\"20\"> At the start of epoch <span class=\"math\">N-2</span> we know that the validator <span class=\"math\">V</span>, serving XGA-style preconfirmations, will be the proposer for the <span class=\"math\">K</span>-th slot of epoch <span class=\"math\">N</span>.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/oil_drum.png?v=12\" title=\":oil_drum:\" class=\"emoji\" alt=\":oil_drum:\" loading=\"lazy\" width=\"20\" height=\"20\"> $5$M gas out of the standard <span class=\"math\">30</span> M will be auctioned off into <span class=\"math\">50</span> gas tokens, each representing a capacity of <span class=\"math\">100</span> K gas.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/shopping_cart.png?v=12\" title=\":shopping_cart:\" class=\"emoji\" alt=\":shopping_cart:\" loading=\"lazy\" width=\"20\" height=\"20\"> At some fixed time <span class=\"math\">t</span> before the start of slot <span class=\"math\">K</span>, a multi-unit auction allocating the tokens is run. Aki manages to win 5 tokens for <span class=\"math\">K</span>, for a combined capacity of <span class=\"math\">500</span> K.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/alarm_clock.png?v=12\" title=\":alarm_clock:\" class=\"emoji\" alt=\":alarm_clock:\" loading=\"lazy\" width=\"20\" height=\"20\"> Within the deadline fixed at some time <span class=\"math\">d</span> before the end of <span class=\"math\">K</span>, Aki uses the <span class=\"math\">5</span> tokens to submit a bundle of size just over <span class=\"math\">400</span> K gas.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/outbox_tray.png?v=12\" title=\":outbox_tray:\" class=\"emoji\" alt=\":outbox_tray:\" loading=\"lazy\" width=\"20\" height=\"20\"> In the meantime, other BoB auction winners submit their own bundles.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/dollar.png?v=12\" title=\":dollar:\" class=\"emoji\" alt=\":dollar:\" loading=\"lazy\" width=\"20\" height=\"20\"> At the start of <span class=\"math\">K</span>, a traditional mev-boost auction for <span class=\"math\">25</span> M gas is run as usual by all relays, and is won by Bogdan via relay <span class=\"math\">R</span>.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/brick.png?v=12\" title=\":brick:\" class=\"emoji\" alt=\":brick:\" loading=\"lazy\" width=\"20\" height=\"20\"> After deadline <span class=\"math\">d</span> is reached and the mev-boost auction is over, the BoB part is assembled and attached at the bottom of the max-<span class=\"math\">25</span> M block submitted by Bogdan via relay <span class=\"math\">R</span>.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/tada.png?v=12\" title=\":tada:\" class=\"emoji\" alt=\":tada:\" loading=\"lazy\" width=\"20\" height=\"20\"> Since Aki’s bundle contained no reverting transactions, it is included without any problem – together with the non-reverting bundles submitted by the other BoB winners – somewhere after the portion built by Bogdan.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/satellite.png?v=12\" title=\":satellite:\" class=\"emoji\" alt=\":satellite:\" loading=\"lazy\" width=\"20\" height=\"20\"> The block for <span class=\"math\">K</span> gets broadcasted as usual.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/x.png?v=12\" title=\":x:\" class=\"emoji\" alt=\":x:\" loading=\"lazy\" width=\"20\" height=\"20\"> Excess tokens for <span class=\"math\">K</span> that didn’t get spent can no longer be used.</li>\n</ul>\n<h3><a name=\"who-builds-the-blocks-then-5\" class=\"anchor\" href=\"https://ethresear.ch#who-builds-the-blocks-then-5\"></a><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/brick.png?v=12\" title=\":brick:\" class=\"emoji\" alt=\":brick:\" loading=\"lazy\" width=\"20\" height=\"20\"> Who Builds the Blocks, then?</h3>\n<p>Block building, in the case of XGA-style preconfirmations, is handled by multiple parties:</p>\n<ul>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/package.png?v=12\" title=\":package:\" class=\"emoji\" alt=\":package:\" loading=\"lazy\" width=\"20\" height=\"20\"> The ToB part is built by traditional mev-boost builders as usual.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/gift.png?v=12\" title=\":gift:\" class=\"emoji\" alt=\":gift:\" loading=\"lazy\" width=\"20\" height=\"20\"> The BoB part is assembled by the party running the BoB auction.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/brick.png?v=12\" title=\":brick:\" class=\"emoji\" alt=\":brick:\" loading=\"lazy\" width=\"20\" height=\"20\"> Merging the two parts and sending the block over is handled by the relay.</li>\n</ul>\n<p>In this setup, the relay takes on more work and responsibilities than it currently does. We will explore a potentially beneficial approach to this change later.</p>\n<h3><a name=\"what-are-the-economic-advantages-of-preconfirmations-6\" class=\"anchor\" href=\"https://ethresear.ch#what-are-the-economic-advantages-of-preconfirmations-6\"></a><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/money_with_wings.png?v=12\" title=\":money_with_wings:\" class=\"emoji\" alt=\":money_with_wings:\" loading=\"lazy\" width=\"20\" height=\"20\"> What Are the Economic Advantages of Preconfirmations?</h3>\n<p>Well… In general, for the whole range of designs that are being discussed right now this is not clear yet! <strong>Conjecturally</strong>, some of the proposed preconfirmation mechanisms will allow more value to trickle down to validators, but since the preconfirmation design landscape is so broad and confused right now it’s hard to take into account all the possible market effects that could come out of such designs. For example, most of the preconf mechanisms currently being discussed are pretty unfriendly towards what has been one of the main APY-cows for validators since the dawn of mev-boost: competitive builder/searchers.</p>\n<h4><a name=\"why-are-we-betting-on-xga-style-preconfs-7\" class=\"anchor\" href=\"https://ethresear.ch#why-are-we-betting-on-xga-style-preconfs-7\"></a><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/game_die.png?v=12\" title=\":game_die:\" class=\"emoji\" alt=\":game_die:\" loading=\"lazy\" width=\"20\" height=\"20\"> Why Are We Betting on XGA-Style Preconfs?</h4>\n<p>It seems clear to us that reserving a spot for non-priority-sensitive transactions can offer several benefits:</p>\n<ul>\n<li>Users and platforms (e.g. rollups) that are not involved in competitive building/searching just doesn’t care about running HFT operations on L1 can greatly benefit from separating their concerns from those of competitive builder/searchers.</li>\n<li>On the other end, it eases some of the pressure on the competitive builder/searcher side by removing some of the burden of having to include <em>“filler transactions”</em> to keep their blocks competitive. E.g. freeing them from needing to include blob-bearing transactions that could negatively impact latency.</li>\n<li>It makes actually pricing inclusion preconfirmations simpler, since it is still regulated by the usual gas pricing model, and at the same time the preconf inclusion market is kept separate from the traditional priority market for position-sensitive transactions.</li>\n<li>Moreover, we believe in gradual change, allowing time for everyone to adapt to and observe the effects of new, potentially disruptive features in a controlled manner. A split-block design compatible with traditional mev-boost block building offers a less intrusive path to adoption.</li>\n</ul>\n<h2><a name=\"rethinking-relays-8\" class=\"anchor\" href=\"https://ethresear.ch#rethinking-relays-8\"></a><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/bulb.png?v=12\" title=\":bulb:\" class=\"emoji\" alt=\":bulb:\" loading=\"lazy\" width=\"20\" height=\"20\"> Rethinking Relays</h2>\n<p>At the moment running a relay naively is mostly a non remunerative gig. Under XGA-style preconfirmations, the relay does significantly more work and takes on more risk than before, e.g. if a block is missed and/or already sold preconfirmation tokens end up not getting included due to the relay malfunctioning, whoever bought them incurs an active loss of assets. While this sounds scary, it is also a good opportunity to rethink the role of relays in the Ethereum ecosystem.</p>\n<h3><a name=\"insurance-and-reward-mechanisms-for-relays-9\" class=\"anchor\" href=\"https://ethresear.ch#insurance-and-reward-mechanisms-for-relays-9\"></a><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/shield.png?v=12\" title=\":shield:\" class=\"emoji\" alt=\":shield:\" loading=\"lazy\" width=\"20\" height=\"20\"> Insurance and Reward Mechanisms for Relays</h3>\n<p>What we are proposing is that a relay can subscribe to an XGA-style preconf platform by staking a collateral that could be used to offer the damaged parties a refund in case of the relay malfunctioning, while sharing a percentage of the platform revenue each time it submits a successful block that includes XGA-enabled preconfirmations<sup class=\"footnote-ref\"><a href=\"https://ethresear.ch#footnote-48655-3\" id=\"footnote-ref-48655-3\">[3]</a></sup>.</p>\n<h2><a name=\"introducing-xga-10\" class=\"anchor\" href=\"https://ethresear.ch#introducing-xga-10\"></a><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/mega.png?v=12\" title=\":mega:\" class=\"emoji\" alt=\":mega:\" loading=\"lazy\" width=\"20\" height=\"20\"> Introducing XGA</h2>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/4/448bd42d21b7642cd38d003f7cec9cb82adfc3b6.png\" data-download-href=\"https://ethresear.ch/uploads/default/448bd42d21b7642cd38d003f7cec9cb82adfc3b6\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/4/448bd42d21b7642cd38d003f7cec9cb82adfc3b6_2_690x99.png\" alt=\"image\" data-base62-sha1=\"9Mo35AM8nSixIAAxYZf9Vtws6Tc\" width=\"690\" height=\"99\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/4/448bd42d21b7642cd38d003f7cec9cb82adfc3b6_2_690x99.png, https://ethresear.ch/uploads/default/optimized/3X/4/4/448bd42d21b7642cd38d003f7cec9cb82adfc3b6_2_1035x148.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/4/448bd42d21b7642cd38d003f7cec9cb82adfc3b6_2_1380x198.png 2x\" data-dominant-color=\"F9F8F7\"></a></div><br>\nXGA – eXtensible Gas Auctions – is the first L2 platform for XGA-style preconfirmations (lol), designed and built by the combined efforts of <a href=\"https://www.manifoldfinance.com/\" rel=\"noopener nofollow ugc\">Manifold Finance</a> and <a href=\"https://20squares.xyz/\" rel=\"noopener nofollow ugc\">20Squares</a>. We’re very willing to make this an open and collaborative effort, so if you have any feedback and/or are interested in building this together with us, please reach out!<p></p>\n<p>Right now we have released on mainnet our v1.0 (yes, this is not a beta, <strong>we’re ready to go</strong> and currently onboarding validators), with the caveat that in v1.0, the ToB mev-boost auction can only be run on a single relay. We’re currently working on shipping v2.0, which will allow a <strong>relay-agnostic</strong> auction to be run in the ToB part. You can find more about it at <a href=\"https://docs.xga.com/\" rel=\"noopener nofollow ugc\">docs.xga.com</a>.</p>\n<hr class=\"footnotes-sep\">\n\n<ol class=\"footnotes-list\">\n<li id=\"footnote-48655-1\" class=\"footnote-item\"><p>We have specific terms for ToB and BoB auctions, namely α and β-auctions respectively. <a href=\"https://ethresear.ch#footnote-ref-48655-1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"footnote-48655-2\" class=\"footnote-item\"><p>Note that this doesn’t exclude the possibility of overwriting an already submitted bundle, if re-submitted before the deadline. <a href=\"https://ethresear.ch#footnote-ref-48655-2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"footnote-48655-3\" class=\"footnote-item\"><p>We are already iterating on designs for captive insurance mechanisms for XGA-style platforms. We will upload a new post detailing some of the possible designs soon. <a href=\"https://ethresear.ch#footnote-ref-48655-3\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n            <p><small>4 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/preconfirmations-on-splitting-the-block-mev-boost-compatibility-and-relays/19837\">Read full topic</a></p>","link":"https://ethresear.ch/t/preconfirmations-on-splitting-the-block-mev-boost-compatibility-and-relays/19837","pubDate":"Mon, 17 Jun 2024 09:40:41 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19837"},"source":{"@url":"https://ethresear.ch/t/preconfirmations-on-splitting-the-block-mev-boost-compatibility-and-relays/19837.rss","#text":"Preconfirmations: On splitting the block, mev-boost compatibility and relays"}},{"title":"IPv6 vs Ethereum?","dc:creator":"peersky","category":"Networking","description":"<p>I started writing this after a few days of unsuccessful attempts to run solo node behind CGNAT, as just a brainbreeze on whether it could be somehow done differently to ease up solo node setup.<br>\nSo far It does not seem to be an answer, however I want to share some thoughts on analogies seen with ipv6 networking to see if anyone has ideas on how this can be useful . .</p>\n<h2><a name=\"ipv6-101-1\" class=\"anchor\" href=\"https://ethresear.ch#ipv6-101-1\"></a>ipv6 101</h2>\n<p>An IPv6 address consists of 128 bits, represented as eight groups of four hexadecimal digits separated by colons. Each group is called a hextet. For example:</p>\n<p><code>2001:0db8:85a3:0000:0000:8a2e:0370:7334</code></p>\n<p>where</p>\n<ul>\n<li>Global Routing Prefix: 2001:0db8 (Assigned by the Regional Internet Registry)</li>\n<li>Subnet ID: 85a3:0000 (Identifies a specific subnet within the network)</li>\n<li>Interface ID: 0000:8a2e:0370:7334 (identify the individual interface or device on the subnet)</li>\n</ul>\n<p>This hierarchical structure allows for efficient routing of IPv6 packets. Routers can quickly determine the destination network based on the global routing prefix, then further refine the path based on the subnet ID.</p>\n<p><em>Multiple gateways</em> from ipv6 subnet may exist to public ipv6 space. Addresses within ipv6 sub network may access global ipv6 address space. Routing protocols such as <a href=\"https://datatracker.ietf.org/doc/html/rfc5340\" rel=\"noopener nofollow ugc\">OSPFv3</a> or <a href=\"https://en.wikipedia.org/wiki/Border_Gateway_Protocol\" rel=\"noopener nofollow ugc\">BGP</a> may be used.</p>\n<h2><a name=\"subnet-gateway-analogy-2\" class=\"anchor\" href=\"https://ethresear.ch#subnet-gateway-analogy-2\"></a>Subnet Gateway analogy</h2>\n<p>Just as an IPv6 router directs traffic to devices within its subnet, an RPC node facilitates communication with nodes and smart contracts within its respective blockchain network.</p>\n<p>When we consider the concept of Chain IDs. In blockchain, Chain IDs are unique identifiers for different networks (e.g., Ethereum Mainnet has Chain ID 1, while various testnets have different IDs). Similarly, in IPv6, a subnet is identified by its unique prefix, which is a portion of the IPv6 address.</p>\n<h2><a name=\"address-analogy-3\" class=\"anchor\" href=\"https://ethresear.ch#address-analogy-3\"></a>Address analogy</h2>\n<p>Since Interface Ids in IPv6 are only 64 bits long, they are too small to fit in 160 bits address of Eth.</p>\n<p>However, what could be useful is using InterfaceIds to identify the nodes in the P2P network, forming VPC for Ethereum.</p>\n<p>In IPv6, organizations or individuals can assign themselves a unique subnet prefix, effectively creating their own independent addressing space.</p>\n<h3><a name=\"cryptography-for-ipv6-address-generation-4\" class=\"anchor\" href=\"https://ethresear.ch#cryptography-for-ipv6-address-generation-4\"></a>Cryptography for IPv6 address generation</h3>\n<p><a href=\"https://en.wikipedia.org/wiki/Secure_Neighbor_Discovery\" rel=\"noopener nofollow ugc\">Secure Neighbor Discovery (SEND)</a> is a security extension to the Neighbor Discovery Protocol (NDP) in IPv6, designed to address the vulnerabilities in the original NDP.</p>\n<p>There are several papers and RFCs (Requests for Comments) relevant to cryptography for IPv6 address generation, particularly focusing on enhancing privacy and security:</p>\n<p><strong><a href=\"https://datatracker.ietf.org/doc/html/rfc3972\" rel=\"noopener nofollow ugc\">RFC 3972</a> - Cryptographically Generated Addresses (CGA)</strong>: This RFC introduces the concept of CGA, where the interface identifier of an IPv6 address is generated using a cryptographic hash function from a public key and other parameters. This approach aims to bind a public key to an address securely, deterring address theft and enhancing authentication.</p>\n<p><strong><a href=\"https://datatracker.ietf.org/doc/html/rfc7721\" rel=\"noopener nofollow ugc\">RFC 7721</a> - Security and Privacy Considerations for IPv6 Address Generation Mechanisms</strong>: This RFC discusses the security and privacy implications of different IPv6 address generation mechanisms, including SLAAC, privacy extensions, and CGAs. It provides recommendations for mitigating potential risks and improving privacy protection.</p>\n<p><strong><a href=\"https://www.researchgate.net/publication/350518202_IPv6_Cryptographically_Generated_Address_Analysis_Optimization_and_Protection\" rel=\"noopener nofollow ugc\">IPv6 Cryptographically Generated Address: Analysis, Optimization and Protection</a></strong>:  This paper delves into the details of CGAs, analyzing their security and performance characteristics. It proposes optimizations to improve the efficiency of CGA generation and suggests additional security measures to strengthen the protection they offer.</p>\n<p><strong><a href=\"https://arxiv.org/pdf/2311.15842\" rel=\"noopener nofollow ugc\">IPv6 Bitcoin-Certified Addresses, Mathieu Ducroux</a></strong>: proposes mechanism for enhancing the security and privacy of IPv6 addresses by leveraging the Bitcoin blockchain.<br>\nIn essence, BCAs are IPv6 addresses where the interface identifier is derived from a Bitcoin address.</p>\n<h2><a name=\"how-could-this-be-beneficial-5\" class=\"anchor\" href=\"https://ethresear.ch#how-could-this-be-beneficial-5\"></a>How could this be beneficial?</h2>\n<p>If we can think of ethereum ecosystem as one big VPN where chains are subnet addressable that potentially solves fragmentation issues, allowing to use already established discovery protocols to route traffic between different nodes, use features like <a href=\"https://en.wikipedia.org/wiki/Multicast_address\" rel=\"noopener nofollow ugc\">multicast</a> etc.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/ipv6-vs-ethereum/19829\">Read full topic</a></p>","link":"https://ethresear.ch/t/ipv6-vs-ethereum/19829","pubDate":"Sat, 15 Jun 2024 21:28:45 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19829"},"source":{"@url":"https://ethresear.ch/t/ipv6-vs-ethereum/19829.rss","#text":"IPv6 vs Ethereum?"}},{"title":"Slot Inclusion Rates and Blob Market Combinatorics","dc:creator":"Evan-Kim2028","category":"Data Science","description":"<h2><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>TLDR</h2>\n<ul>\n<li><strong>Slot inclusion rate</strong>, the number of slots required for a blob to be included in the beacon chain, has a high variance and is higher for some rollups than others.</li>\n<li>The current combinatorics of the blob market has an <strong>integer packing problem</strong>. This is a type of combinatorial optimization that generally involves packing objects of different sizes into a finite number of containers or bins.</li>\n<li>Data suggests that the integer packing problem is contributing more to higher slot inclusion rates than builder censorship.</li>\n</ul>\n<h2><a name=\"introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#introduction-2\"></a>Introduction</h2>\n<p>This post offers a fresh perspective on the current design and constraints of the blob market, presenting additional data (<a href=\"https://analytics.mev-commit.xyz/dashboard\" rel=\"noopener nofollow ugc\">from a blob tracking dashboard created at Primev</a>) on slot inclusion concerning reorg risks, and a combinatorial analysis of the blob market design, revealing an integer packing problem.</p>\n<p>The key metric in this post is the <strong>slot inclusion rate</strong>. The slot inclusion rate indicates the number of slots required for a blob to be included in the beacon chain,<br>\nwith a higher rate signifying a longer inclusion time.</p>\n<p>Recent research on the blob market <a href=\"https://ethresear.ch/t/big-blocks-blobs-and-reorgs/19674\">[1]</a>, <a href=\"https://ethresear.ch/t/blobs-reorgs-and-the-role-of-mev-boost/19783\">[2]</a>, <a href=\"https://mirror.xyz/preconf.eth/cxUO8pPBfqnqAlzFUzoEUa6sgnr68DRmsNhBWPb2u-c\" rel=\"noopener nofollow ugc\">[3]</a> has focused on how larger blobs increase reorg risk due to higher latency. This could incentivize builder censorship to reduce latency by excluding blobs from blocks.</p>\n<p>Despite the blob market being under capacity and the base fee remaining at 1 wei, research <a href=\"https://mirror.xyz/preconf.eth/6lZYL62DR9U14KC7wCC4RHReVdHcBeMy5PKeHVbPq5k\" rel=\"noopener nofollow ugc\">[4]</a> shows that rollups like Optimism and Base often have high slot inclusion rates, taking more than five slots to be included. Given the underutilized market, this seems counterintuitive, suggesting possible latency censorship. However, the current blob submission strategies and blob market combinatorics suggest that higher slot inclusion rates may indicate increased competition between blob producers rather than builder censorship.</p>\n<h2><a name=\"blob-submission-strategies-3\" class=\"anchor\" href=\"https://ethresear.ch#blob-submission-strategies-3\"></a>Blob Submission Strategies</h2>\n<p>The below table <a href=\"https://analytics.mev-commit.xyz/dashboard\" rel=\"noopener nofollow ugc\">from the dashboard</a> shows a 7 day snapshot of the largest blob market participants.</p>\n<p>There are now 3 major strategies across the number of blobs:</p>\n<ul>\n<li>submit the max 5-6 blobs at a time (blast, base, linea, optimism)</li>\n<li>submit 3-4 blobs at a time (arbitrum, zksync)</li>\n<li>submit 1-2 blobs at a time (taiko, metal, paradex, scroll)<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/e/7e768a0ed198c966965d14171b97d1c2600eea7d.png\" data-download-href=\"https://ethresear.ch/uploads/default/7e768a0ed198c966965d14171b97d1c2600eea7d\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/e/7e768a0ed198c966965d14171b97d1c2600eea7d_2_690x244.png\" alt=\"image\" data-base62-sha1=\"i2K85Le5aG0E01DYzWaN2sSlyfr\" width=\"690\" height=\"244\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/e/7e768a0ed198c966965d14171b97d1c2600eea7d_2_690x244.png, https://ethresear.ch/uploads/default/optimized/3X/7/e/7e768a0ed198c966965d14171b97d1c2600eea7d_2_1035x366.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/7/e/7e768a0ed198c966965d14171b97d1c2600eea7d_2_1380x488.png 2x\" data-dominant-color=\"F5F5F5\"></a></div></li>\n</ul>\n<p>Aggregating blobs into fewer transactions reduces transaction expenses (base fee, blob fee, priority fee) but increases slot inclusion times. In contrast, smaller blob transactions improve slot inclusion times at the cost of higher transaction expenses.</p>\n<h2><a name=\"slot-inclusion-rates-4\" class=\"anchor\" href=\"https://ethresear.ch#slot-inclusion-rates-4\"></a>Slot Inclusion Rates</h2>\n<p>The next chart displays a time series overlay of base block demand (total transaction fees and base fee in gwei) with the slot inclusion rate for each blob transaction. It shows high slot inclusion rates, up to 30 slots, even during periods of low blockspace demand.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/3/832319c888134f3fe0b465411923147c0c85c5fa.png\" data-download-href=\"https://ethresear.ch/uploads/default/832319c888134f3fe0b465411923147c0c85c5fa\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/3/832319c888134f3fe0b465411923147c0c85c5fa_2_690x258.png\" alt=\"image\" data-base62-sha1=\"iI5KB1hQoIHBSx4Zrn6XjHOxa3w\" width=\"690\" height=\"258\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/3/832319c888134f3fe0b465411923147c0c85c5fa_2_690x258.png, https://ethresear.ch/uploads/default/original/3X/8/3/832319c888134f3fe0b465411923147c0c85c5fa.png 1.5x, https://ethresear.ch/uploads/default/original/3X/8/3/832319c888134f3fe0b465411923147c0c85c5fa.png 2x\" data-dominant-color=\"F0E9F4\"></a></div><p></p>\n<p>The table mentioned earlier above contains the average slot inclusion rate for each rollup. Base, which submits the largest blobs in each transaction has the highest, averaging 13 slots. Taiko has the lowest average at 1.7 slots and submits only single blobs for each transaction right now.</p>\n<p><strong>Base slot inclusion rate:</strong><br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/5/a5f9d2f0d94388d88993444ae9da999347121e7e.png\" data-download-href=\"https://ethresear.ch/uploads/default/a5f9d2f0d94388d88993444ae9da999347121e7e\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/5/a5f9d2f0d94388d88993444ae9da999347121e7e_2_690x300.png\" alt=\"image\" data-base62-sha1=\"nGi1JOQb8r6Poj53zBgfoS98rZY\" width=\"690\" height=\"300\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/5/a5f9d2f0d94388d88993444ae9da999347121e7e_2_690x300.png, https://ethresear.ch/uploads/default/original/3X/a/5/a5f9d2f0d94388d88993444ae9da999347121e7e.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/5/a5f9d2f0d94388d88993444ae9da999347121e7e.png 2x\" data-dominant-color=\"ECF4F9\"></a></div><p></p>\n<p>taiko slot inclusion rate<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/e/ce84eb73e15b668adaa7dc811f23e8c3606000ee.png\" data-download-href=\"https://ethresear.ch/uploads/default/ce84eb73e15b668adaa7dc811f23e8c3606000ee\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/e/ce84eb73e15b668adaa7dc811f23e8c3606000ee_2_690x300.png\" alt=\"image\" data-base62-sha1=\"tsX8yZyP3DLUSwcucVlIRDmKc5U\" width=\"690\" height=\"300\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/e/ce84eb73e15b668adaa7dc811f23e8c3606000ee_2_690x300.png, https://ethresear.ch/uploads/default/original/3X/c/e/ce84eb73e15b668adaa7dc811f23e8c3606000ee.png 1.5x, https://ethresear.ch/uploads/default/original/3X/c/e/ce84eb73e15b668adaa7dc811f23e8c3606000ee.png 2x\" data-dominant-color=\"F8F9FB\"></a></div><p></p>\n<h2><a name=\"builder-slot-inclusion-rates-5\" class=\"anchor\" href=\"https://ethresear.ch#builder-slot-inclusion-rates-5\"></a>Builder Slot Inclusion Rates</h2>\n<p>This table examines slot inclusion rates from the builder’s perspective, including the number of blocks, blob transactions, average blob count, and priority fees collected.</p>\n<p>A higher slot inclusion rate means a blob has waited longer to be included in a block. An efficiency metric would be to have the lowest possible slot inclusion rate, indicating that builders are including blobs sooner rather than later.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/f/9fe6938327d570742a8b7f278788cacfa4df81ca.png\" data-download-href=\"https://ethresear.ch/uploads/default/9fe6938327d570742a8b7f278788cacfa4df81ca\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/original/3X/9/f/9fe6938327d570742a8b7f278788cacfa4df81ca.png\" alt=\"image\" data-base62-sha1=\"mOxVlZ99uJ62bjZiEcpsOjQArl8\" width=\"690\" height=\"211\" data-dominant-color=\"2C2C2C\"></a></div><p></p>\n<p>Builders like Titan and Beaverbuild have more efficient blob slot inclusion rates than vanilla builders. They also have the lowest average blobs per block. This could be due to their efficiency in accepting strategies like Taiko blobs over other block builders.</p>\n<h2><a name=\"combinatorics-6\" class=\"anchor\" href=\"https://ethresear.ch#combinatorics-6\"></a>Combinatorics</h2>\n<p><a href=\"https://colab.research.google.com/drive/1EeRpWjb0meIi53IyyyZu7QWmg8HqVAMr#scrollTo=PDAJADyB24Jv\" rel=\"noopener nofollow ugc\">This notebook</a> uses dynamic programming to count the number of combinations of blobs for the current blob market. Given the current 6 blob per block capacity and 6 blobs per block, there are 11 possible combinations.</p>\n<p><strong>Occurrences of each number:</strong><br>\n1: 19<br>\n2: 8<br>\n3: 4<br>\n4: 2<br>\n5: 1<br>\n6: 1</p>\n<p>A trivial observation is that there is only one combination in which a block can fit 5 or 6 blobs. Since 4 out of 10 rollups submit these 5 and 6 blob transactions, there will only be one winner. Additionally, a single 1-blob transaction can “censor” a 6-blob transaction for an entire slot by being accepted first.</p>\n<p>The combinatorics of the current blob market size suggest that the small size itself is causing higher slot inclusion problems, rather than blob censorship latency. This indicates that censorship is not from builders but from competition among blob users.</p>\n<p>This raises an important question: what is the optimal maximum number of blobs allowed in a block relative to the maximum number that can fit in a block? Would the combinatorics be more favorable if the maximum blob size were 3 instead of 6? Would it be better to allow 9 blobs per block instead of 8? There is an economic incentive to group blobs as large as possible to save on costs, which disproportionately favors larger rollups over smaller ones until blob sharing becomes feasible.</p>\n<h2><a name=\"bidding-strategies-7\" class=\"anchor\" href=\"https://ethresear.ch#bidding-strategies-7\"></a>Bidding Strategies</h2>\n<p>Currently, blobs use static bidding strategies, generally resubmitting their blobs if their bids sit in the mempool for too long. This shows a certain level of insensitivity to slot inclusion for each rollup. If a blob is delayed for 100 slots, there seem to be no consequences or incentives to increase slot inclusion rates at this time.</p>\n<p>The two charts below show sample bidding strategies used by Base and Taiko, just two examples of the rollup strategies available on the dashboard. Base averages a priority fee of 4.5 gwei, while Taiko averages 2.9 gwei. There is no correlation between priority bids and base fee fluctuations.</p>\n<p><strong>base:</strong><br>\n<img src=\"https://ethresear.ch/uploads/default/original/3X/8/7/8785ccb0b147a318d6426a694bf7697d3f1a5383.png\" alt=\"image\" data-base62-sha1=\"jkT7BVrCBp1A1a796bRfQpIBCcb\" width=\"501\" height=\"336\"></p>\n<p><strong>taiko:</strong><br>\n<img src=\"https://ethresear.ch/uploads/default/original/3X/9/1/91bab571ac6836399edf78b7c7ce757ad62cf2ed.png\" alt=\"image\" data-base62-sha1=\"kNbfNQ1fogFklcVZEFN0u6slojr\" width=\"501\" height=\"336\"></p>\n<p>Resubmitting blobs through the mempool is expensive and generally not recommended as a good practice. This creates the problem of how blob producers can become more competitive in their bidding strategies if they need to make their slot inclusion rates more efficient.</p>\n<p>One solution is to use preconfirmations. For example, using a protocol such as mev-commit to attach preconf bids to blob transactions would allow rollups to dynamically adjust their bids without having to resubmit blobs into the mempool. A stronger solution would be <a href=\"https://ethresear.ch/t/blob-preconfirmations-with-inclusion-lists-to-mitigate-blob-contention-and-censorship/19150\">to receive preconfirmations from proposers</a> to guarantee that builders wouldn’t be able to censor blobs.</p>\n<h3><a name=\"conclusion-8\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-8\"></a>Conclusion</h3>\n<p>Analysis of slot inclusion rates and blob market combinatorics reveals a complex interplay between efficient slot inclusion, competition, and potential censorship. While current data suggests that high slot inclusion rates are primarily driven by competition among blob users, there remain several unanswered questions:</p>\n<ul>\n<li>What is the optimal maximum number of blobs per block to balance efficiency and fairness?</li>\n<li>How can blob producers develop more competitive bidding strategies?</li>\n<li>Could the implementation of dynamic bidding strategies or preconfirmations significantly reduce slot inclusion times?</li>\n<li>What long-term effects might increased competition and potential latency censorship have on the blob market?</li>\n</ul>\n<p>The combinatorics of the blob market are a fundamental factor affecting slot inclusion efficiency and cost. By understanding and optimizing these combinatorial constraints, it is possible to enhance market dynamics, reduce costs, and improve transaction efficiency for all participants. Further research and experimentation are needed to address these questions and optimize the blob market for all participants.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/slot-inclusion-rates-and-blob-market-combinatorics/19817\">Read full topic</a></p>","link":"https://ethresear.ch/t/slot-inclusion-rates-and-blob-market-combinatorics/19817","pubDate":"Fri, 14 Jun 2024 16:47:05 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19817"},"source":{"@url":"https://ethresear.ch/t/slot-inclusion-rates-and-blob-market-combinatorics/19817.rss","#text":"Slot Inclusion Rates and Blob Market Combinatorics"}},{"title":"A simple, small, mev-boost compatible preconfirmation idea","dc:creator":"FabrizioRomanoGenove","category":"Layer 2","description":"<p><strong>Disclaimer</strong>: This post will not contain any nice images, because I am artistically inept.</p>\n<p>The reasons why I’m writing this are the following:</p>\n<ol>\n<li>Preconfs are a very hot topic right now and many people are working on them;</li>\n<li>As usual, some of the proposed solutions advocate for punching changes all the way into the main Ethereum protocol. I’m personally not a fan of this, since life is already full of <em>oh my God, what have I done?™</em> moments and <em>more drama™</em> is the least thing everyone probably needs.</li>\n<li>MEV-boost is probably the <em>only</em> thing this community has really almost universally agreed upon since MEV has been a thing. So I’d very much try to preserve backwards-compatibility with MEV-boost and generalize on this than coming up with more innovative ways to balkanize our ecosystem even further.</li>\n</ol>\n<h2><a name=\"a-primer-on-mev-boost-1\" class=\"anchor\" href=\"https://ethresear.ch#a-primer-on-mev-boost-1\"></a>A primer on MEV-boost</h2>\n<p>This section exists just so that everyone is on the same page. Feel free to skip it or to insult me if you think I summarised things stupidly.</p>\n<p>In layman terms, MEV-boost works like this:</p>\n<ol>\n<li>Proposer polls the relayer(s) for their best blocks;</li>\n<li>Relayer(s) send their best block headers to proposer;</li>\n<li>Proposer picks the best block by comparing the block headers received and the block built in-house.</li>\n<li>For an in-house block, proposer just signs and broadcasts. For a mev-boost block, proposer signs the header. Relay will broadcast the complete block revealing the payload.</li>\n</ol>\n<p>This mechanism is nice because the only party that builders have to trust is relayer: Proposer cannot unbundle blocks and scam builders.</p>\n<h2><a name=\"the-actual-idea-2\" class=\"anchor\" href=\"https://ethresear.ch#the-actual-idea-2\"></a>The actual idea</h2>\n<p>The idea I have in mind works towards extending mev-boost by allowing for preconfs (and most likely for a lot of other stuff if one wants to). Notably, it does not change points 2,3,4 in the previous section, but only point 1.</p>\n<p>Suppose proposer has a stash of preconfed txs on the side. The only thing the idea assumes is the following:</p>\n<blockquote>\n<p>By the time Proposer starts polling, it needs to have a finalized lists of preconfed txs to include.</p>\n</blockquote>\n<p>The reason for this will become clear shortly. Having this list at hand, proposer sends a signed JSON object to the relayer when it polls, containing the preconfed txs. This object could look, for instance, like this:</p>\n<pre data-code-wrap=\"JSON\"><code class=\"lang-JSON\">{\n    proposer: address,\n    slotNumber: int,\n    gasUsed: int,\n    blobsUsed: int.\n    mergingPolicy: int,\n    mustBeginWith: txBundle,\n    mustContain: txBundle,\n    mustOmit: txBundle,\n    mustEndWith: txBundle,\n    otherStuff: JSON,\n    signature : signature\n}\n</code></pre>\n<p><strong>This design is just an idea. It is by no means fixed yet and most likely can be improved upon both in conceptual and performance terms, so take it with a grain of salt.</strong><br>\nThe fields <code>proposer</code> and <code>slotNumber</code> are obvious. The fields <code>mergingPolicy</code>, <code>mustBeginWith</code>, <code>mustContain</code>, <code>mustOmit</code>, <code>mustEndWith</code> can all be empty: They contain bundles of transactions that must (or must not) be included in the block. These fields are, effectively, the ones that proposer can use to signal relayer that 'hey, I need the block to respect these requirements, because of previous agreement I made with other parties.\"</p>\n<p>How the proposer comes to define this json object is not our concern, and is outside of the scope of this idea. Just for the sake of clarity though, let’s consider some examples: For instance, <a href=\"https://docs.xga.com\" rel=\"noopener nofollow ugc\">XGA</a>, one of the projects <code>20[ ]</code> is contributing to, provides preconfs as tokenized bottom-of-block space. As such, XGA-style preconfs will produce objects where only <code>mustEndWith</code> is not empty.</p>\n<p>The fields <code>gasUsed</code> and <code>blobsUsed</code> tell the relay how much gas and blobs the ‘preconf space’ already claimed. <code>otherStuff</code> exists to be able to extend this standard in the future without <em>more drama™</em>.</p>\n<h3><a name=\"merging-policies-3\" class=\"anchor\" href=\"https://ethresear.ch#merging-policies-3\"></a>Merging policies</h3>\n<p>The <code>mergingPolicy</code> fields instructs the relay about how to deal with all this information. This is fundamental because, in the end, the relay will still run a traditional mev-boost auction for the remaining blockspace. As soon as a block is built by more than one party there’s a risk that different parties may step up on each other’s toes. As such, <code>mergingPolicy</code> serves as a well-defined conflict resolution policy. If you need a mental reference, think about git conflicts and automated ways to solve them if you so like.</p>\n<p>How to define merging policies is up for debate. The community could agree on a common repository where merging policies are defined, voted and agreed upon, and where merging algos are explicitly provided. So, for instance, one merging policy could be:</p>\n<blockquote>\n<p>If the payload coming from the builder contains a transaction that also appears in the preconf bundle, deal with it in the following way:</p>\n</blockquote>\n<p>As said above, XGA sells BOB as preconfs, and leaves TOB open for traditional mev-boost auctions. As such, it has already defined and implemented a merging policy for its bottom of the block case, which will hopefully be open sourced soon.</p>\n<h3><a name=\"what-does-the-relay-do-4\" class=\"anchor\" href=\"https://ethresear.ch#what-does-the-relay-do-4\"></a>What does the relay do?</h3>\n<p>This is probably already kinda clear at this point, but to make it explicit: The relay receives this signed JSON object when the proposer polls. What should it do with it? First of all, it should make some of these fields public to the builders, such as <code>mergingPolicy</code>, <code>gasUsed</code>, <code>blobsUsed</code> and <code>mustOmit</code>. This way builders will know what they can build.</p>\n<p>When a block from a builder is received, the relayer will <strong>unbundle</strong> the block and apply the merging policy to merge it with the preconfed txs. The <strong>relay</strong> will sign the block header, and send it to the proposer.</p>\n<p>From the POV of a builder, everything is kinda the same. They create their block using the info provided by the relay (in the simplest case this just means using slightly less gas than limit), and submit it as their bid.</p>\n<p>From this point on, everything works as in traditional MEV-boost.</p>\n<h2><a name=\"analysis-5\" class=\"anchor\" href=\"https://ethresear.ch#analysis-5\"></a>Analysis</h2>\n<p>Ok, so let’s run a rapid analysis of this thing.</p>\n<h3><a name=\"pros-6\" class=\"anchor\" href=\"https://ethresear.ch#pros-6\"></a>Pros</h3>\n<ol>\n<li>\n<p>Changes to MEV-boost proper are really minimal. We just need to define an API that MEV-boost must listen to to build the polling payload, and redefine the polling logic.</p>\n</li>\n<li>\n<p>Very little work from Proposer’s side. More work may be needed depending on the preconf system a given proposer wants to use, but then again this is out of the scope of this idea.</p>\n</li>\n<li>\n<p>Very little work from builder’s side unless people go overly crazy with merging policies. I do not think this is necessarily a problem tho as an overly deranged merging policy would result in builders not submitting anything, and most likely in relayers not taking bets in the first place. So I’d bet that this could pretty much evolve as a ‘let the markets decide’ thing.</p>\n</li>\n<li>\n<p>This idea is straightforwardly backwads-compatible with traditional MEV-boost: If the polling payload is empty, we collapse to a traditional MEV-boost auction with no other requisites.</p>\n</li>\n<li>\n<p>This idea allows for gradual phasing out of MEV-boost if the community so decides. For instance, proposers may agree to produce bundles where <code>usedGas</code> is a very low parameter in the beginning (it won’t exceed 5M for XGA, for instance), meaning that the majority of blockspace would come from traditional building, with only a tiny part being preconfs or more generally ‘other stuff’. This parameter may then be increasingly crancked up or varied with time if the community so decides, effectively phasing out traditional block building in favor of ‘something else’. In this respect yes, I know I’m being vague here but when it comes to how this thing could be adopted I can only speculate.</p>\n</li>\n<li>\n<p>This system can be extended in many ways, and it is flexible. Merging policies could be defined democratically, and the polling info could be extended effectively implementing something akin to PEPSI, for instance. Another possible extension/evolution can be using <code>otherStuff</code> to define Jito-style auctions. I mean, there’s really a plethora of ways to go from here.</p>\n</li>\n<li>\n<p>The polling payload is signed by the proposer, and the block header is signed by the relayer. This keeps both parties in check as we accumulate evidence for slashing both. For instance:</p>\n<ul>\n<li>Imagine I get some preconf guarantee from proposer and that I have evidence of this. Again how this happens is outside of the scope of this post, as this mechanism is agnostic wrt how preconfs are negotiated.</li>\n<li>Now suppose furthermore than my preconfed tx does <strong>not</strong> land in the block.</li>\n<li>I can use the chain of signed objects to challenge both relayer and proposer. If my tx wasn’t in the polling info signed by proposer, that’s proposer’s fault. On the other hand, if it was, but it wasn’t in the block, then it’s relayer’s fault. I think this is enough to build a slashing mechanism of sorts, which could for instance leverage some already available restaking solution.</li>\n</ul>\n<p><strong>Note:</strong> If there’s enough interest in this idea, we as 20[  ] can throw some open games at it and simulate the various scenarios. Let me know!</p>\n</li>\n<li>\n<p><strong>Ethereum protocol doesn’t see any of this.</strong> So if it fucks up, we just call it a day and retire in good order without having caused the apocalypse: Relays will only accept empty payloads, proposers will only send empty payloads, and we’ll essentially revert to mev-boost without anyone having to downgrade their infra. I think this is the main selling point of this idea: The amount of ways to make stuff explode in mev-related infraland are countless, so this whole idea was built with a ‘it has to be failsafe’ idea in mind.</p>\n</li>\n</ol>\n<h3><a name=\"cons-7\" class=\"anchor\" href=\"https://ethresear.ch#cons-7\"></a>Cons</h3>\n<ol>\n<li>\n<p>Relayer must unbundle builder blocks to do the merging. I do not think this creates a huge trust issue as relayer can already do this as of now: In general, a relayer that scams builders is a relayer that won’t be used again, and will go out of business quickly.</p>\n</li>\n<li>\n<p>Relayer must do computational work. This is probably the major pain point. This idea entails slightly more latency, as an incoming bid cannot be relayed instantly because <code>mergingPolicy</code> has to be applied. The computational penalty is furthermore heavily dependent on how deranged the merging policy is. As a silver lining, this computational work is <em>provable</em> as both the merging info and the resulting block are signed. The result is that we have <strong>provable evidence to remunerate a relay for its work if we want to</strong>, possibly solving a major pain point for relayers in traditional mev-boost.</p>\n</li>\n<li>\n<p>Relayer is slashable if it screws up. Again, how this should be implemented is outside of the scope of this idea as this mechanism only accounts for the needed trail of evidence to implement slashing, but does not deal with the slashing per sé. Anyway, it is still worth reasoning on the possible consequences of this: If slashing policies are implemented, Relayers will most likely need to provide some collateral or implement some form of captive insurance. Again, this may signify more complexity on one hand but also opportunity on the other, as relayers may for instance decide to tokenize said collateral and develop mechanisms to make money out of these newly created financial instruments. As relayers are private enterprises I’ll leave these considerations to the interested parties.</p>\n</li>\n<li>\n<p><strong>Polling info must stay fixed</strong>. This is related to point 3 above and point 6 of the <a href=\"https://ethresear.ch#pros\">Pros</a> subsection: If the polling info changes all the time, this means huge computational stress for the relayer, and it furthermore allows for malicious behavior from the proposer: For instance, a proposer could send two different polling payloads, and include a given preconfed tx only in one of them. How to resolve these inconsistencies is an open question. In my opinion, the wisest and simplest thing to do would be requiring the polling info to be fixed, meaning that if proposer signs conflicting payloads for the same slot this should be considered akin to equivocation, and thus a slashable offence.</p>\n<p>By the way, the consequence of this is that the idea proposed here necessarily excludes some preconf use cases. This is related to my comment <a href=\"https://ethresear.ch/t/strawmanning-based-preconfirmations/19695/2\">here</a> and I think it is unavoidable if we want to keep MEV-boost around. As the majority  of revenue from MEV comes precisely from the bids of very refined, high-time frame searchers, and as I am quite sure that validators don’t want to give this money up at least for now, ‘leaving these players be’ by ruling out such preconf use-cases is in my opinion the most practical option, and exactly the rationale motivating this idea.</p>\n</li>\n</ol>\n<h2><a name=\"closing-remarks-8\" class=\"anchor\" href=\"https://ethresear.ch#closing-remarks-8\"></a>Closing remarks</h2>\n<p>That’s it. If the idea is interesting enough let me know, I’ll be happy to start a discussion around it.  The <code>20[ ]</code> team will also be around at EthCC if you want to discuss this in person.</p>\n            <p><small>8 posts - 5 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/a-simple-small-mev-boost-compatible-preconfirmation-idea/19800\">Read full topic</a></p>","link":"https://ethresear.ch/t/a-simple-small-mev-boost-compatible-preconfirmation-idea/19800","pubDate":"Thu, 13 Jun 2024 13:33:55 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19800"},"source":{"@url":"https://ethresear.ch/t/a-simple-small-mev-boost-compatible-preconfirmation-idea/19800.rss","#text":"A simple, small, mev-boost compatible preconfirmation idea"}},{"title":"One-bit-per-attester inclusion lists","dc:creator":"vbuterin","category":"Block proposer","description":"<p>Inclusion lists are a technology for distributing the authority for choosing which transactions to include into the next block. Currently, the best idea for them is to have an actor that is from a set that is likely to be highly decentralized (eg. consensus block proposers) generate the list. This authority is decoupled from the right to <em>order</em> (or <em>prepend</em>) transactions, which is an inherently economies-of-scale-demanding and so likely to be highly concentrated in practice.</p>\n<p>But what if we could avoid putting the responsibility onto a <em>single</em> actor, and instead put it on a <em>large set of actors</em>? In fact, we can even do it in such a way that it’s semi-deniable: from each attester’s contribution, there is no clear evidence of which transaction they included, because one individual piece of provided data could come from multiple possible transactions.</p>\n<p>This post proposes a possible way to do this.</p>\n<h3><a name=\"mechanism-1\" class=\"anchor\" href=\"https://ethresear.ch#mechanism-1\"></a>Mechanism</h3>\n<p>When the block for slot N is published, let <code>seed</code> be the RANDAO_REVEAL of the block. Suppose for convenience that each transaction is under <code>T</code> bytes (eg. <code>T = 500</code>); we can say in this initial proposal that larger transactions are not supported. We put all attesters for that slot into groups of size <code>2 * T</code>, with <code>k = attesters_per_slot / (2 * T)</code> groups.</p>\n<p>Each attester is chosen to be the j’th attester of the i’th group. They identify the highest-priority-fee-paying valid transaction which was published before the slot N block, and where <code>hash(seed + tx)</code> is between <code>2**256 / k * i</code> and <code>2**256 / k * (i+1)</code>. They erasure-code that transaction to <code>2T</code> bits, and publish the j’th bit of the erasure encoding as part of their attestation.</p>\n<p>When those attestations are included in the next block, an algorithm such as <a href=\"https://en.wikipedia.org/wiki/Berlekamp%E2%80%93Welch_algorithm\">Berlekamp-Welch</a> is used to try to extract the transaction from the provided attester bits.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/e/deedccb04e5bb133ccacdbe2c2c17d1e5abdc3ce.png\" data-download-href=\"https://ethresear.ch/uploads/default/deedccb04e5bb133ccacdbe2c2c17d1e5abdc3ce\" title=\"attester_inclusion_list.drawio\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/e/deedccb04e5bb133ccacdbe2c2c17d1e5abdc3ce_2_690x271.png\" alt=\"attester_inclusion_list.drawio\" data-base62-sha1=\"vO7tRuHbTGDsKip5ajhg58TZP9c\" width=\"690\" height=\"271\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/e/deedccb04e5bb133ccacdbe2c2c17d1e5abdc3ce_2_690x271.png, https://ethresear.ch/uploads/default/original/3X/d/e/deedccb04e5bb133ccacdbe2c2c17d1e5abdc3ce.png 1.5x, https://ethresear.ch/uploads/default/original/3X/d/e/deedccb04e5bb133ccacdbe2c2c17d1e5abdc3ce.png 2x\" data-dominant-color=\"F2F4F4\"></a></div><p></p>\n<p>The Reed-Solomon decoding will fail in two cases:</p>\n<ol>\n<li>If too many attesters are dishonest</li>\n<li>If attesters have different views about whether a particular transaction was published before or after the block, and so they are split between providing bits for two or more different transactions.</li>\n</ol>\n<p>Note that in case (2), if the transactions are sufficiently small, advanced <a href=\"https://www.cs.cmu.edu/~venkatg/teaching/codingtheory/notes/notes10.pdf\">list decoding algorithms</a> may nevertheless be able to recover several or all of the transactions!</p>\n<p>The next block proposer will be able to see which transactions the attestations imply, and so they will be able to block transactions from the list by selectively failing to include attestations. This is an unavoidable limitation of the scheme, though it can be mitigated by having a fork choice rule discount blocks that fail to include enough attestations.</p>\n<p>Additionally, the mechanism can be modified so that if a transaction has not been included for 2+ slots, <em>all</em> attesters (or a large fraction thereof) attempt to include it, and so any block that fails to include the transaction would lose the fork choice. One simple way to do this is to score transactions not by <code>priority_fee</code>, but by <code>priority_fee * time_seen</code>, and at the same time have a rule that a transaction that has been seen for <code>k</code> slots is a candidate not just for attester group <code>i</code>, but also for attester group <code>i...i+k-1</code> (wrapping around if needed).</p>\n            <p><small>8 posts - 7 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/one-bit-per-attester-inclusion-lists/19797\">Read full topic</a></p>","link":"https://ethresear.ch/t/one-bit-per-attester-inclusion-lists/19797","pubDate":"Thu, 13 Jun 2024 09:33:36 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19797"},"source":{"@url":"https://ethresear.ch/t/one-bit-per-attester-inclusion-lists/19797.rss","#text":"One-bit-per-attester inclusion lists"}},{"title":"Torrents and EIP-4444","dc:creator":"parithosh","category":"Execution Layer Research","description":"<h1><a name=\"torrents-and-eip-4444-1\" class=\"anchor\" href=\"https://ethresear.ch#torrents-and-eip-4444-1\"></a>Torrents and EIP-4444</h1>\n<h3><a name=\"introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#introduction-2\"></a>Introduction</h3>\n<p>EIP-4444 aims to limit the historical data that Ethereum nodes need to store. This EIP has two main problems that require solutions: Format for history archival and Methods to reliably retrieve history. The client teams have agreed on a common <a href=\"https://ethresear.ch/t/era-archival-files-for-block-and-consensus-data/13526\">era files</a> format, solving one half of the problem. The second half of the problem, i.e Method to reliably retrieve history will likely not rely on a single solution. Some client teams may rely on the <a href=\"https://ethereum.org/en/developers/docs/networking-layer/portal-network/\" rel=\"noopener nofollow ugc\">Portal network</a>, some rely on torrents, others might rely on some form of snapshot storage.</p>\n<h3><a name=\"torrents-for-eip-4444-3\" class=\"anchor\" href=\"https://ethresear.ch#torrents-for-eip-4444-3\"></a>Torrents for EIP-4444</h3>\n<p>Torrents offer us a unique way to distribute this history, torrents as a technology have existed since 2001 and have withstood the test of time. Some client teams, such as <a href=\"https://github.com/ledgerwatch/erigon\" rel=\"noopener nofollow ugc\">Erigon</a> already include a method to sync via torrents that has run in production systems.</p>\n<p>In order to make some progress on the Torrent approach of history retrieval, the files would first be required. So an era file export was made on a <a href=\"https://github.com/ethereum/go-ethereum/\" rel=\"noopener nofollow ugc\">geth</a> running version <code>v1.14.3</code> . To explore the initial idea, the torrent approach chose pre-merge data as a target. The merge occurred at block height <a href=\"https://etherscan.io/block/15537393\" rel=\"noopener nofollow ugc\">15537393</a>, meaning all pre-merge data could be archived by choosing a range of 0 to block 15537393. The era files were then created using the command <code> geth --datadir=/data export-history /data/erafiles 0 15537393</code>.</p>\n<p>Once the era files were created, they were verified using the command <code>era verify roots.txt</code>, with the source of the <code>roots.txt</code> file being <a href=\"https://gist.githubusercontent.com/lightclient/528b95ffe434ac7dcbca57bff6dd5bd1/raw/fd660cfedb65cd8f133b510c442287dc8a71660f/roots.txt\" rel=\"noopener nofollow ugc\">this</a>. The entire process has been outlined in <a href=\"https://github.com/ethereum/go-ethereum/pull/26621#issuecomment-1434023464\" rel=\"noopener nofollow ugc\">this PR comment</a>. The verification output was found to be this log message: <code>Verifying Era1 files             verified=1896,  elapsed=5h21m49.184s</code></p>\n<p>The output era files were then uploaded onto a server and a torrent was created using the software <code>mktorrent</code>. An updated list of trackers was found using the github repo <a href=\"https://github.com/ngosang/trackerslist\" rel=\"noopener nofollow ugc\">trackerslist</a>. The trackers chosen were a mix of http/https/udp in order to allow for maximal compatibility. The chunk size of the torrent was chosen to be 64MB, which was the max allowed and recommended value for a torrent of this size.</p>\n<p>The result of this process is now a torrent of size 427GB. This torrent can be imported with <a href=\"https://ethresear.ch\">this magnet link</a>  and a torrent client would be able to pull the entire pre-merge history as era files.</p>\n<h4><a name=\"tradeoffs-4\" class=\"anchor\" href=\"https://ethresear.ch#tradeoffs-4\"></a>Tradeoffs</h4>\n<p>There are of course some tradeoffs with torrents, as with many of the other EIP-4444 approaches:</p>\n<ul>\n<li>Torrents rely on a robust set of peers to share the data, there is however no way to incentivise or ensure that this data is served by peers</li>\n<li>A torrent client would need to be included in the client releases and some client languages might not have a torrent library</li>\n<li>Torrents would de-facto expect the nodes to also seed the content they leech, this would increase node network requirements if they choose to store history</li>\n<li>The JSON-RPC response needs to take into account that it may not have the data to return a response in case the user decides to not download pre-merge data</li>\n</ul>\n<h3><a name=\"conclusion-5\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-5\"></a>Conclusion</h3>\n<p>A client could potentially include this torrent into their releases and avoid syncing pre-merge data by default, which could then be fetched via torrent if a user requests it (perhaps with a flag similar to <code>--preMergeData=True</code>). The client could also hardcode the hash of the expected data, ensuring that the data retrieved matches what they expect.</p>\n<h3><a name=\"instructions-for-re-creating-torrent-6\" class=\"anchor\" href=\"https://ethresear.ch#instructions-for-re-creating-torrent-6\"></a>Instructions for re-creating torrent:</h3>\n<ul>\n<li>Sync a geth node using the latest release</li>\n<li>Stop the geth node and run <code>geth --datadir=/data export-history /data/erafiles 0 15537393</code> to export the data in a folder called <code>data/erafiles</code>(Warning, this will use ~427GB of additional space)</li>\n<li>Use the <code>mktorrent</code> tool or the <code>rutorrent</code> GUI to create a torrent. Choose the <code>/data/erafiles/</code> folder as the source for the data. Next, obtain the latest open trackers from <a href=\"https://github.com/ngosang/trackerslist?tab=readme-ov-file\" rel=\"noopener nofollow ugc\">this github repository</a>. Choose a healthy mix of udp/http/https trackers and choose the chunk size of the torrent to be 64MB.</li>\n<li>The tool should output a <code>.torrent</code> file, the GUI will also allow you to copy a magnet link if that is required</li>\n</ul>\n<h3><a name=\"instructions-for-download-and-verification-of-torrent-data-7\" class=\"anchor\" href=\"https://ethresear.ch#instructions-for-download-and-verification-of-torrent-data-7\"></a>Instructions for download and verification of torrent data:</h3>\n<ul>\n<li>Download the torrent data with this magnet link and in a torrent client of your choice: <a href=\"https://ethresear.ch\">link</a></li>\n<li>Clone the latest release of <a href=\"https://github.com/ethereum/go-ethereum/\" rel=\"noopener nofollow ugc\">geth</a> and install the dependencies</li>\n<li>Run <code>make all</code> in the geth repository to build the <code>era</code> binary</li>\n<li>Fetch the <code>roots.txt</code> file with the command: <code>wget https://gist.githubusercontent.com/lightclient/528b95ffe434ac7dcbca57bff6dd5bd1/raw/fd660cfedb65cd8f133b510c442287dc8a71660f/roots.txt</code></li>\n<li>Run <code>era verify roots.txt</code> in the folder to verify the integrity of the data</li>\n</ul>\n            <p><small>12 posts - 4 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/torrents-and-eip-4444/19788\">Read full topic</a></p>","link":"https://ethresear.ch/t/torrents-and-eip-4444/19788","pubDate":"Wed, 12 Jun 2024 09:35:32 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19788"},"source":{"@url":"https://ethresear.ch/t/torrents-and-eip-4444/19788.rss","#text":"Torrents and EIP-4444"}},{"title":"Blobs, Reorgs, and the Role of MEV-Boost","dc:creator":"Nero_eth","category":"Sharding","description":"<h1><a name=\"blobs-reorgs-and-the-role-of-mev-boost-1\" class=\"anchor\" href=\"https://ethresear.ch#blobs-reorgs-and-the-role-of-mev-boost-1\"></a>Blobs, Reorgs, and the Role of MEV-Boost</h1>\n<p><strong>The TL;DR is:</strong></p>\n<ul>\n<li><strong>Builders</strong> might have an incentive to not include blobs because of the higher latency they cause.</li>\n<li><strong>Non-MEV-Boost users</strong> include, on average, more blobs in blocks than MEV-Boost builders.</li>\n<li><strong>MEV-Boost users</strong> show a significantly lower probability of being reorged than <em>Non-MEV-Boost</em> users (see section <em>MEV-Boost and Reorgs</em> for details).</li>\n<li><strong>Rsync-Builder</strong> and <strong>Flashbots</strong> have a lower average number of blobs per block than other builders.</li>\n</ul>\n<hr>\n<p>In a <a href=\"https://ethresear.ch/t/big-blocks-blobs-and-reorgs/19674\">recent analysis on big blocks, blobs and reorgs</a>, we could see the impact of blobs on the reorg probability.</p>\n<p><strong>In the following, I want to expand on this by taking the MEV-Boost ecosystem into account.</strong></p>\n<p><strong>The fundamental question is…</strong><br>\n-&gt; <strong>“<em>Does MEV-Boost impact reorgs, and if so, by how much?</em>”</strong></p>\n<p>Blobs are “<em>big</em>” and big objects cause higher latency. Thus, one might expect builders to not include blobs into their blocks in scenarios in which:</p>\n<ul>\n<li>The builder is submitting its block late in the slot to minimize latency (see timing games).</li>\n<li>The builder wants to capture a high MEV opportunity and doesn’t want to risk unavailable blobs invalidating its block.</li>\n<li>The proposer is less well connected (because the gossiping starts later in the slot).</li>\n</ul>\n<p><strong>Builders</strong> might demand to be <strong>compensated</strong> through priority fees for including transactions which might cause blocks to be propagated with higher latency. Until 4844, such transactions have been those with a lot of calldata. As of 4844, blobs are the main drivers of latency.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/d/8db1993891d52c3c8be9d7c6adde8633810ad15b.png\" data-download-href=\"https://ethresear.ch/uploads/default/8db1993891d52c3c8be9d7c6adde8633810ad15b\" title=\"tx_type_prio_fee_all (2)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/d/8db1993891d52c3c8be9d7c6adde8633810ad15b_2_690x345.png\" alt=\"tx_type_prio_fee_all (2)\" data-base62-sha1=\"kdtPeHLNRSivbSQVwUSqmYvNxuH\" width=\"690\" height=\"345\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/d/8db1993891d52c3c8be9d7c6adde8633810ad15b_2_690x345.png, https://ethresear.ch/uploads/default/optimized/3X/8/d/8db1993891d52c3c8be9d7c6adde8633810ad15b_2_1035x517.png 1.5x, https://ethresear.ch/uploads/default/original/3X/8/d/8db1993891d52c3c8be9d7c6adde8633810ad15b.png 2x\" data-dominant-color=\"FBFAFA\"></a></div><p></p>\n<p><strong>As visible in the above chart, blob transactions don’t tip as much as regular Type-2 transactions.</strong><br>\nBased on that, blobs don’t give builders a significant edge over other builders competing for the same slot.<br>\nAnother explanation could be private deals between builders and rollups to secure timely inclusion of blob transactions for a fee paid through side channels.</p>\n<h2><a name=\"mev-boost-and-reorgs-2\" class=\"anchor\" href=\"https://ethresear.ch#mev-boost-and-reorgs-2\"></a>MEV-Boost and Reorgs</h2>\n<p>The MEV-Boost ecosystem consists of sophisticated parties, <strong>builders</strong> and <strong>relays</strong>, that are well connected and specialized in having low-latency connections to peers.<br>\nThus, it is expected that proposers using MEV-Boost should be reorged less often than ‘Vanilla Builders’ (i.e., users not using MEV-Boost).</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/5/859fee3890096d24a955abd65642fee08ebd141c.png\" data-download-href=\"https://ethresear.ch/uploads/default/859fee3890096d24a955abd65642fee08ebd141c\" title=\"reorgs_mevb_over_blobs (3)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/5/859fee3890096d24a955abd65642fee08ebd141c_2_690x258.png\" alt=\"reorgs_mevb_over_blobs (3)\" data-base62-sha1=\"j469uSqNIMxYIC5duBol1Wo3d8g\" width=\"690\" height=\"258\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/5/859fee3890096d24a955abd65642fee08ebd141c_2_690x258.png, https://ethresear.ch/uploads/default/optimized/3X/8/5/859fee3890096d24a955abd65642fee08ebd141c_2_1035x387.png 1.5x, https://ethresear.ch/uploads/default/original/3X/8/5/859fee3890096d24a955abd65642fee08ebd141c.png 2x\" data-dominant-color=\"DFE6ED\"></a></div><p></p>\n<p>This expectation holds true when looking at the above chart.<br>\n<strong>We can see that the reorg probability increases with the number of blobs. However, the reorg probability for MEV-Boost users is much lower than the one for Non-MEV-Boost users (Vanilla Builders).</strong></p>\n<p><strong>In this context it’s important to not confuse correlation and causation:<br>\n-&gt; <em>Non-MEV-Boost users are on average less sophisticated entities which also contributes to the effect we observe in the above chart.</em></strong></p>\n<p>In this context it is interesting to compare the <strong>average number of blobs per block</strong> of MEV-Boost users vs. Non-MEV-Boost users.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/c/3cbac65d110bbf6d535ba55d7dfb62f69206a271.png\" data-download-href=\"https://ethresear.ch/uploads/default/3cbac65d110bbf6d535ba55d7dfb62f69206a271\" title=\"blobs_over_time (3)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/c/3cbac65d110bbf6d535ba55d7dfb62f69206a271_2_690x373.png\" alt=\"blobs_over_time (3)\" data-base62-sha1=\"8FeOjssjBOCSZKLo4DF2o0gpG2l\" width=\"690\" height=\"373\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/c/3cbac65d110bbf6d535ba55d7dfb62f69206a271_2_690x373.png, https://ethresear.ch/uploads/default/optimized/3X/3/c/3cbac65d110bbf6d535ba55d7dfb62f69206a271_2_1035x559.png 1.5x, https://ethresear.ch/uploads/default/original/3X/3/c/3cbac65d110bbf6d535ba55d7dfb62f69206a271.png 2x\" data-dominant-color=\"F1F5F8\"></a></div><p></p>\n<p><strong>As visible in the above chart, proposers not using MEV-Boost included on average more blobs into their blocks than MEV-Boost users.</strong><br>\nThis might point towards MEV-Boost ecosystem participants (relays and builders) applying strategies that go beyond the “<em>include it if there’s space</em>” strategy.</p>\n<p><strong>First, let’s look at the builders more closely.</strong></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/b/4bf0a4fe8bc95e88d122c479fe88cf4f32883fbf.png\" data-download-href=\"https://ethresear.ch/uploads/default/4bf0a4fe8bc95e88d122c479fe88cf4f32883fbf\" title=\"blobs_over_time_builder (4)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/b/4bf0a4fe8bc95e88d122c479fe88cf4f32883fbf_2_690x258.png\" alt=\"blobs_over_time_builder (4)\" data-base62-sha1=\"aPNo6pWPgO3aEhPisexlPpWRlKL\" width=\"690\" height=\"258\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/b/4bf0a4fe8bc95e88d122c479fe88cf4f32883fbf_2_690x258.png, https://ethresear.ch/uploads/default/optimized/3X/4/b/4bf0a4fe8bc95e88d122c479fe88cf4f32883fbf_2_1035x387.png 1.5x, https://ethresear.ch/uploads/default/original/3X/4/b/4bf0a4fe8bc95e88d122c479fe88cf4f32883fbf.png 2x\" data-dominant-color=\"F9F7F7\"></a></div><p></p>\n<p>Vanilla Builders (Non-MEV-Boost proposers) are the ones that have the highest blob inclusion rate, followed by Beaverbuild and Titan Builder.</p>\n<p>Rsync-Builder seems to include way less blobs in their blocks.<br>\nThe same applies to the Flashbots builder that seems to have changed its behavior in early May, with the average number of blobs per block approaching zero.</p>\n<p><strong>“Is it fair to say 'Builder XY censors blobs!?”</strong><br>\n&gt; <strong>No</strong></p>\n<blockquote>\n<p><em>Different builders follow different strategies. For example a builder such as Rsync-Builder that is generally competitive in slots where low latency and speed matters might end up with winning those blocks where there are no blobs around (c.f. <em>selection bias</em>)</em></p>\n</blockquote>\n<br>\n<p><strong>Next, let’s shift the focus to the relays:</strong><br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/7/374ff432477462e6a307a3d83c7da899f3a5b541.png\" data-download-href=\"https://ethresear.ch/uploads/default/374ff432477462e6a307a3d83c7da899f3a5b541\" title=\"blobs_over_time_relays (4)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/7/374ff432477462e6a307a3d83c7da899f3a5b541_2_690x258.png\" alt=\"blobs_over_time_relays (4)\" data-base62-sha1=\"7TjyNDcfmwkPOGoIcxfYp9QJ6G5\" width=\"690\" height=\"258\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/7/374ff432477462e6a307a3d83c7da899f3a5b541_2_690x258.png, https://ethresear.ch/uploads/default/optimized/3X/3/7/374ff432477462e6a307a3d83c7da899f3a5b541_2_1035x387.png 1.5x, https://ethresear.ch/uploads/default/original/3X/3/7/374ff432477462e6a307a3d83c7da899f3a5b541.png 2x\" data-dominant-color=\"F7F7F8\"></a></div><p></p>\n<p>As visible above, Vanilla Builders have on average the highest blob inclusion rate.<br>\nThe Ultrasound and Agnostic Gnosis relays are second and third, followed by the relays of BloXroute.<br>\nThe Flashbots relay seems to include the lowest number of blobs.</p>\n<p><strong>Importantly, relays are dependent on builders and ultimately it’s the builders that impact the above graph.</strong></p>\n<h2><a name=\"next-steps-3\" class=\"anchor\" href=\"https://ethresear.ch#next-steps-3\"></a>Next Steps</h2>\n<p>In the context of <a href=\"https://ethresear.ch/t/peerdas-a-simpler-das-approach-using-battle-tested-p2p-components/16541\">PeerDAS</a>, the network will have to rely on nodes that are <em>stronger</em> than others and able to handle way more than 6 blobs per block. Therefore, it’d be super valuable to see more research on that topic happening.</p>\n<ul>\n<li><strong>Call for reproduction</strong>: It’d be great if someone could verify my results by reproducing this analysis.</li>\n<li><strong>Investigate the reasons</strong> why certain builders have a significantly lower blob inclusion rate than others.</li>\n<li><strong>Reduce reorg rate for Non-MEV-Boost users</strong>: Relays could offer Non-MEV-Boost users their block propagation services to ensure that fewer of their blocks get reorged.</li>\n</ul>\n<p>The blob market is still under development and a stable blob price is yet to be discovered. With increasing demand for blob space, tips from blob transaction will likely catch up to regular transactions.</p>\n            <p><small>3 posts - 3 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/blobs-reorgs-and-the-role-of-mev-boost/19783\">Read full topic</a></p>","link":"https://ethresear.ch/t/blobs-reorgs-and-the-role-of-mev-boost/19783","pubDate":"Tue, 11 Jun 2024 15:46:12 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19783"},"source":{"@url":"https://ethresear.ch/t/blobs-reorgs-and-the-role-of-mev-boost/19783.rss","#text":"Blobs, Reorgs, and the Role of MEV-Boost"}},{"title":"Block Proposing & Validating Timelines for 1.) MEV-Boost, 2.) ePBS, and 3.) ePBS with MEV-Boost","dc:creator":"terence","category":"Block proposer","description":"<p>This writeup summarizes the timeline differences between ePBS and MEV-Boost using inequalities. We analyze three models: 1) MEV-Boost, 2) ePBS, and 3) MEV-Boost with relayers on ePBS. We show that MEV-Boost with relayers on ePBS is slower than ePBS alone, which could lead to reorgs.</p>\n<h2><a name=\"definitions-1\" class=\"anchor\" href=\"https://ethresear.ch#definitions-1\"></a>Definitions</h2>\n<p><span class=\"math\">VT^{CL}</span>: Consensus layer validation time. The time taken by a node to verify the consensus portion of a block.<br>\n<span class=\"math\">VT^{EL}</span>: Execution layer validation time. The time taken by a node to verify the execution portion of a block.<br>\n<span class=\"math\">RT^{mevboost}</span>: Mev-boost block release time. The time when a block is released from a node or relayer, assuming the MEV-boost setting.<br>\n<span class=\"math\">RT^{epbs,cl}</span>: ePBS consensus block release time. The time when a consensus block is released from a node or relayer, assuming the ePBS setting.<br>\n<span class=\"math\">RT^{epbs,el}</span>: ePBS execution block release time. The time when an execution block is released from a node or relayer, assuming the ePBS setting.<br>\n<span class=\"math\">PT^{mevboost}</span>: Mev-boost block propagation time. The time taken for a block to propagate across the network, assuming the mev-boost setting.<br>\n<span class=\"math\">PT^{epbs,cl}</span>: ePBS consensus block propagation time. The time taken for a consensus block to propagate across the network, assuming ePBS setting.<br>\n<span class=\"math\">PT^{epbs,el}</span>: ePBS execution block propagation time. The time taken for an execution block to propagate across the network, assuming ePBS setting.<br>\n<span class=\"math\">Attestation\\_RT^{beacon}</span>: Beacon attestation release time. The time when a beacon attestation is released from a node.<br>\n<span class=\"math\">Attestation\\_RT^{ptc}</span>: PTC attestation release time. The time when a payload attestation is released from a node, assuming the ePBS setting.<br>\n<span class=\"math\">BBT</span>: Proposer build block time. The time taken for a proposer to build consensus portion of a block.<br>\n<span class=\"math\">GHT</span>: Proposer get header time. The time taken for a proposer to obtain a header from a relayer (MEV-boost) or builder (ePBS).<br>\n<span class=\"math\">GPT</span>: Proposer get payload time. The time a proposer takes to obtain a payload from a relayer (MEV-boost).<br>\n<span class=\"math\">SPT</span>: Builder submit payload time. The time taken for a relayer to receive a payload from the builder (MEV-boost).<br>\n<span class=\"math\">SBBT</span>: Proposer submit blind block time. The time a proposer takes to submit blind block to the relayer (MEV-boost).</p>\n<h2><a name=\"proposing-a-mev-boost-block-2\" class=\"anchor\" href=\"https://ethresear.ch#proposing-a-mev-boost-block-2\"></a>Proposing a mev-boost block</h2>\n<p>In Mev-Boost, proposing a block involves two parts. First, the builder sends the block to the relayer. Second, the proposer requests the header and returns the signed block to the relayer. We break down the time it takes in the following subsections, starting with the non-optimistic relayer and then the optimistic relayer. We also assume that everything starts at the 0-second mark of the slot, including the builder sending the execution block to the relayer.</p>\n<h3><a name=\"non-optimistic-relayer-3\" class=\"anchor\" href=\"https://ethresear.ch#non-optimistic-relayer-3\"></a>Non optimistic relayer</h3>\n<p><span class=\"math\">BRT</span> defines builder to relayer time. This is how much time takes for a builder to submit a block (ie bid) to the relayer and the relayer verifies the block is valid.<br>\n<span class=\"math\">BRT = SPT + VT^{EL}</span></p>\n<p><span class=\"math\">PRT</span> defines proposer to relayer time. This is how much time takes for a proposer to build block, request header, request payload, and submit blind block.<br>\n<span class=\"math\">PRT = BBT + GHT + GPT + SBBT</span></p>\n<p><span class=\"math\">RT^{mevboost} = BRT + PRT</span></p>\n<p>This assumes everything happens after the slot start because bids become more valuable. Another model is to assume <span class=\"math\">BRT</span> happens before the slot. Then <span class=\"math\">RT^{mevboost} = PRT</span>.</p>\n<h3><a name=\"optimistic-relayer-4\" class=\"anchor\" href=\"https://ethresear.ch#optimistic-relayer-4\"></a>Optimistic relayer</h3>\n<h4><a name=\"relayer-receives-builder-block-time-5\" class=\"anchor\" href=\"https://ethresear.ch#relayer-receives-builder-block-time-5\"></a>Relayer receives builder block time</h4>\n<p><span class=\"math\">BRT = SPT</span></p>\n<p><span class=\"math\">PRT</span> is the same as before</p>\n<p><span class=\"math\">RT^{mevboost} = BRT + PRT</span></p>\n<blockquote>\n<p>Using optimistic relayer is faster than non-optimistic relayer by: <span class=\"math\">VT^{EL}</span></p>\n</blockquote>\n<h2><a name=\"validating-a-mev-boost-block-6\" class=\"anchor\" href=\"https://ethresear.ch#validating-a-mev-boost-block-6\"></a>Validating a mev-boost block</h2>\n<p>In MEV-Boost, the block must be processed before <span class=\"math\">Attestation\\_RT^{beacon}</span> to be considered canonical. The following equation shows the conditions that need to be met for the block to be considered canonical from the perspective of all nodes.</p>\n<p>For a beacon block to be canonical, it should satisfy:<br>\n<span class=\"math\">RT^{mevboost} + PT^{mevboost} + VT^{CL} + VT^{EL} &lt; Attestation\\_RT^{beacon}</span></p>\n<h2><a name=\"proposing-an-epbs-block-7\" class=\"anchor\" href=\"https://ethresear.ch#proposing-an-epbs-block-7\"></a>Proposing an ePBS block</h2>\n<p>In ePBS, proposing the consensus block and the execution block are pipelined, where the consensus block commits to the execution block’s header. Block release time becomes two parts 1.) CL block release time and 2.) EL block release time.</p>\n<h3><a name=\"proposing-the-consensus-block-8\" class=\"anchor\" href=\"https://ethresear.ch#proposing-the-consensus-block-8\"></a>Proposing the consensus block</h3>\n<p>We assume the proposer uses the builder’s RPC to get the header. The proposer could also self-build or use P2P to obtain the header, which is arguably faster. Therefore, there is no need for proposer get header time anymore.</p>\n<p><span class=\"math\">RT^{epbs,cl} = GHT + BBT</span></p>\n<blockquote>\n<p>Using ePBS is faster than mev-boost by: <span class=\"math\">SPT+VT^{EL}+GPT + SBBT</span></p>\n</blockquote>\n<h3><a name=\"proposing-the-execution-block-9\" class=\"anchor\" href=\"https://ethresear.ch#proposing-the-execution-block-9\"></a>Proposing the execution block</h3>\n<p><span class=\"math\">RT^{epbs,el}</span> is when fork choice accumulates sufficient weight (~40%) or 6 seconds into the slot. The builder could propose a “withhold” block to try to reorg consensus layer block so builder does not have to pay the proposer.</p>\n<h2><a name=\"validating-an-epbs-block-10\" class=\"anchor\" href=\"https://ethresear.ch#validating-an-epbs-block-10\"></a>Validating an ePBS block</h2>\n<p>In ePBS, validating the consensus block and the execution block are pipelined in different stages. The beacon attestation cutoff time has been moved from 4 seconds into the slot to 3 seconds into the slot. However, we can assume that the CL block propagation time is shorter than the block propagation time. EL block validation can be delayed until the subsequent slot, as shown in the equations.</p>\n<h3><a name=\"validating-the-consensus-block-11\" class=\"anchor\" href=\"https://ethresear.ch#validating-the-consensus-block-11\"></a>Validating the consensus block</h3>\n<p><span class=\"math\">PT^{epbs,cl} &lt; PT^{mevboost}</span><br>\n<span class=\"math\">Attestation\\_RT^{beacon,epbs} &lt; Attestation\\_RT^{beacon,mevboost}</span></p>\n<p>For a consensus block to be canonical, it should satisfy:<br>\n<span class=\"math\">RT^{epbs,cl} + PT^{epbs,cl} + VT^{CL} &lt; Attestation\\_RT^{beacon}</span></p>\n<blockquote>\n<p>Using ePBS is faster than mev-boost by: <span class=\"math\">PT^{mevboost}-PT^{epbs,cl}+VT^{EL}</span></p>\n</blockquote>\n<h3><a name=\"validating-the-execution-block-12\" class=\"anchor\" href=\"https://ethresear.ch#validating-the-execution-block-12\"></a>Validating the execution block</h3>\n<h4><a name=\"as-a-ptc-voting-for-execution-blocks-presence-13\" class=\"anchor\" href=\"https://ethresear.ch#as-a-ptc-voting-for-execution-blocks-presence-13\"></a>As a PTC voting for execution block’s presence</h4>\n<p><span class=\"math\">RT^{epbs,el} + PT^{epbs,el} &lt; Attestation\\_RT^{ptc}</span></p>\n<h4><a name=\"as-a-proposer-proposing-the-next-slots-consensus-block-14\" class=\"anchor\" href=\"https://ethresear.ch#as-a-proposer-proposing-the-next-slots-consensus-block-14\"></a>As a proposer proposing the next slot’s consensus block</h4>\n<p><span class=\"math\">RT^{epbs,el} + PT^{epbs,el} + VT^{EL} &lt; Next\\_Slot\\_Start\\_Time</span></p>\n<h4><a name=\"everyone-else-15\" class=\"anchor\" href=\"https://ethresear.ch#everyone-else-15\"></a>Everyone else</h4>\n<p><span class=\"math\">RT^{epbs,el} + PT^{epbs,el} + VT^{EL} &lt; Next\\_Slot\\_Attestation\\_RT^{beacon}</span></p>\n<h2><a name=\"proposing-an-epbs-block-using-mev-boost-16\" class=\"anchor\" href=\"https://ethresear.ch#proposing-an-epbs-block-using-mev-boost-16\"></a>Proposing an ePBS block using mev-boost</h2>\n<p><span class=\"math\">BRT = SPT + VT^{EL}</span><br>\n<span class=\"math\">PRT = BBT + GHT</span><br>\n<span class=\"math\">RT^{epbs,cl} = BRT + PRT</span></p>\n<blockquote>\n<p>Using MEV-Boost for ePBS is slower than ePBS by: <span class=\"math\">SPT + VT^{EL}</span><br>\nThe additional latency occurs because the trusted party must receive and verify the execution block before releasing it to the proposer.</p>\n</blockquote>\n<h2><a name=\"validating-the-consensus-block-17\" class=\"anchor\" href=\"https://ethresear.ch#validating-the-consensus-block-17\"></a>Validating the consensus block</h2>\n<p><span class=\"math\">RT^{epbs,cl} + PT^{epbs,cl} + VT^{CL} &lt; Attestation\\_RT^{beacon}</span></p>\n<blockquote>\n<p>Given <span class=\"math\">Attestation\\_RT^{beacon}</span> is shorter than ePBS, an extra <span class=\"math\">SPT + VT^{EL}</span> could lead to additional reorgs.</p>\n</blockquote>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/block-proposing-validating-timelines-for-1-mev-boost-2-epbs-and-3-epbs-with-mev-boost/19782\">Read full topic</a></p>","link":"https://ethresear.ch/t/block-proposing-validating-timelines-for-1-mev-boost-2-epbs-and-3-epbs-with-mev-boost/19782","pubDate":"Tue, 11 Jun 2024 13:52:44 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19782"},"source":{"@url":"https://ethresear.ch/t/block-proposing-validating-timelines-for-1-mev-boost-2-epbs-and-3-epbs-with-mev-boost/19782.rss","#text":"Block Proposing & Validating Timelines for 1.) MEV-Boost, 2.) ePBS, and 3.) ePBS with MEV-Boost"}},{"title":"SGX as 2FA for FHE/MPC","dc:creator":"tolak","category":"Multiparty Computation","description":"<p><em>About me: I am <a href=\"https://x.com/tolak_eth\" rel=\"noopener nofollow ugc\">Wenfeng Wang</a>, a builder and researcher at Phala Network, put this topic here and hope to have a comprehensive discussion with the community.</em></p>\n<p><strong>TLDR</strong>: Involving SGX introduces a safeguard against the collusion risk inherent in current MPC and FHE systems.</p>\n<p>Continuing from Justin Drake’s well-articulated <a href=\"https://ethresear.ch/t/2fa-zk-rollups-using-sgx/14462\">post</a> about SGX as a 2FA for zk-rollups, I aim to expand on the potential of SGX as 2FA in FHE projects, specifically in their MPC encryption management. Despite their distinct applications, both leverage some fundamental features of SGX.</p>\n<h2><a name=\"mpc-is-the-bottleneck-of-fhe-1\" class=\"anchor\" href=\"https://ethresear.ch#mpc-is-the-bottleneck-of-fhe-1\"></a>MPC is the bottleneck of FHE</h2>\n<p>Lately, the interest in FHE (Fully Homomorphic Encryption) technologies has rejuvenated, especially in the context of Ethereum Virtual Machines (EVMs). What was once merely a concept is now a tangible tool developers can use to write privacy-preserving smart contracts. Interested readers can refer to Vitalik’s early 2020 <a href=\"https://vitalik.eth.limo/general/2020/07/20/homomorphic.html\" rel=\"noopener nofollow ugc\">post</a> about FHE. Now, let’s look at the general architecture of most current FHE projects.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/f/8f17a45e5c32060cd1578a8f2112437f58880327.png\" data-download-href=\"https://ethresear.ch/uploads/default/8f17a45e5c32060cd1578a8f2112437f58880327\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/f/8f17a45e5c32060cd1578a8f2112437f58880327_2_663x500.png\" alt=\"image\" data-base62-sha1=\"kpQVJozjvHvCm2ivZsAFGJ7Hqyb\" width=\"663\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/f/8f17a45e5c32060cd1578a8f2112437f58880327_2_663x500.png, https://ethresear.ch/uploads/default/optimized/3X/8/f/8f17a45e5c32060cd1578a8f2112437f58880327_2_994x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/f/8f17a45e5c32060cd1578a8f2112437f58880327_2_1326x1000.png 2x\" data-dominant-color=\"FAFAFA\"></a></div><p></p>\n<p>I will not dive too deep into FHE itself here, but you can find a notable challenge most FHE designs encounter today lies in the MPC node’s key management. Due to the practice of writing an FHE application, the key is globally used by all users to encrypt the data they send to the FHE server, which will execute under an encryption state. Thus, the whole security of the system relies on the security of the MPC network, and as we all know the truths of the MPC network are:</p>\n<ul>\n<li>The more nodes you have, the more latency you get</li>\n<li>The fewer nodes you have, the more trust assumptions you need</li>\n</ul>\n<h2><a name=\"tee-as-a-2fa-to-mpc-2\" class=\"anchor\" href=\"https://ethresear.ch#tee-as-a-2fa-to-mpc-2\"></a>TEE as a 2FA to MPC</h2>\n<p>We don’t want to give full trust to MPC nodes because of the possibility of collusion if it is run by humans. Instead, we can add SGX as 2FA to hedge the risk by moving the key management to <a href=\"https://en.wikipedia.org/wiki/Trusted_execution_environment\" rel=\"noopener nofollow ugc\">TEE</a> (Trusted Execution Environments, a technology to run the program in an isolated zone inside CPU, prove program immutable and limited-accessible).</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/d/1dc05649e162e2e9de3318a6da112754d5a6cd7e.png\" data-download-href=\"https://ethresear.ch/uploads/default/1dc05649e162e2e9de3318a6da112754d5a6cd7e\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/d/1dc05649e162e2e9de3318a6da112754d5a6cd7e_2_608x500.png\" alt=\"image\" data-base62-sha1=\"4fbVt19JaJWd8hlNQ8S0I17LrtQ\" width=\"608\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/d/1dc05649e162e2e9de3318a6da112754d5a6cd7e_2_608x500.png, https://ethresear.ch/uploads/default/optimized/3X/1/d/1dc05649e162e2e9de3318a6da112754d5a6cd7e_2_912x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/1/d/1dc05649e162e2e9de3318a6da112754d5a6cd7e_2_1216x1000.png 2x\" data-dominant-color=\"F9F9F9\"></a></div><p></p>\n<p>As illustrated above, MPC nodes of the FHE system are now running inside TEE, instead of producing TEE proof when acting as 2FA for zk-rollups, here SGX is used to protect the key generation progress in the MPC network, and the whole lifecycle of the key is kept inside TEE and never gonna reveal to the outside world, more importantly, the key can not be touched by human even a single piece. TEE itself can guarantee the program it runs is verifiable, it’s impossible for someone can manipulate the state. Also, the data passing between TEE and the client is secured by TLS communication.<br>\nWith TEE as a 2FA, it can help reduce the risk in an economic way that:</p>\n<ul>\n<li>If SGX is not compromised, there is no chance that collusion can happen;</li>\n<li>If SGX gets compromised, only when collusion happens between nodes that the system is broken.</li>\n</ul>\n<h2><a name=\"advantagesdisadvantages-of-sgx-as-2fa-for-fhe-3\" class=\"anchor\" href=\"https://ethresear.ch#advantagesdisadvantages-of-sgx-as-2fa-for-fhe-3\"></a>Advantages/Disadvantages of SGX as 2FA for FHE</h2>\n<ul>\n<li>\n<p>Advantages</p>\n<ul>\n<li>Security: Remove the possibility of collusion, trust is built on top of machinehood + cryptography instead of humanity.</li>\n<li>Safety: By running MPC inside SGX, even a small MPC network can be reasonably secure. Even if TEE is broken, e.g. have bugs in SGX or Intel being malicious, we still fall back to ordinary MPC.</li>\n<li>Latency: Using SGX, we can get higher security without introducing more workers. This gives more confident to users to run latency sensitive operations on MPC.</li>\n<li>Liveness: SGX didn’t provide extra liveness naturally, but projects like Phala have built a decentralized <a href=\"https://docs.phala.network/tech-specs/blockchain\" rel=\"noopener nofollow ugc\">TEE network</a> that can help make it easy to build an unstoppable network.</li>\n<li>Scalability: Scaling the MPC network is hard, but there are a bunch of existing TEE networks that are ready to deploy MPC nodes. So it lowers the cost to build a larger MPC network.</li>\n<li>Throughout: There also is no throughput lost, but considering the optimization of latency, throughput can be improved theoretically.</li>\n<li>More advantages that can be brought by SGX were well addressed by <a href=\"https://ethresear.ch/t/2fa-zk-rollups-using-sgx/14462\">Justin’s post</a>.</li>\n</ul>\n</li>\n<li>\n<p>Disadvantage</p>\n<ul>\n<li>It’s worth mentioning that SGX also has its own problems, a quote from Justin’s post:</li>\n</ul>\n<blockquote>\n<ul>\n<li>SGX has a bad reputation, especially within the blockchain space. Association with the technology may be memetically suboptimal.</li>\n<li>false sense of security: Easily-broken SGX 2FA (e.g. if the privkey is easily extractable) may provide a false sense of security.</li>\n<li>novelty: No Ethereum application that verifies SGX remote attestations on-chain could be found.</li>\n</ul>\n</blockquote>\n<ul>\n<li>As for the last one that SGX remote attestation on-chain doesn’t exist, the latest state is we have a couple of projects working on it, including Puffer, Automata, and also Phala’s <a href=\"https://github.com/tolak/zk-dcap-verifier\" rel=\"noopener nofollow ugc\">zk-dcap-verifier</a>. But considering it hasn’t been deployed on the mainnet, I kept it on the list.</li>\n</ul>\n</li>\n</ul>\n<p><em>Special thanks Justin Drake for his research of <a href=\"https://ethresear.ch/t/2fa-zk-rollups-using-sgx/14462\">2FA zk-rollups using SGX</a> and Andrew Miller for this research of TEE in Multi-Proof system, check his <a href=\"https://docs.google.com/presentation/d/1K96G50S8ICdllQDbEW1su1Ik_eOc5bK9Ih3uvoG-P9Y/edit?usp=sharing\" rel=\"noopener nofollow ugc\">presentation</a>.</em></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/sgx-as-2fa-for-fhe-mpc/19780\">Read full topic</a></p>","link":"https://ethresear.ch/t/sgx-as-2fa-for-fhe-mpc/19780","pubDate":"Tue, 11 Jun 2024 03:25:10 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19780"},"source":{"@url":"https://ethresear.ch/t/sgx-as-2fa-for-fhe-mpc/19780.rss","#text":"SGX as 2FA for FHE/MPC"}},{"title":"Solutions to the Preconf Fair Exchange Problem","dc:creator":"yaonam","category":"Layer 2","description":"<h3><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>tldr</h3>\n<p>Solutions for dealing with the fair exchange problem in leader-based preconfirmation setups.</p>\n<p>Reputation can incentivize preconfers to act honestly.</p>\n<p>Alternatively, use order to dictate who gets the PER tip. One can invalidate a PER by sending it to a preconfer with higher priority.</p>\n<h1><a name=\"fair-exchange-2\" class=\"anchor\" href=\"https://ethresear.ch#fair-exchange-2\"></a>Fair Exchange?</h1>\n<p>The fair exchange problem can be summarized as two untrusted players blindly giving up something in hopes that the other party will do the same. The goal is to try to find a method to ensure that both will cooperate. In the context of preconfirmations, the requesting party (gateway) has no guarantee that their preconfirmation enforcement request (PER) will receive a signed commitment. The preconfer has every right to not return a commitment, hold onto the PER until the last second, and include it if profitable (pocketing the tip for free).</p>\n<h1><a name=\"solution-1-reputation-3\" class=\"anchor\" href=\"https://ethresear.ch#solution-1-reputation-3\"></a>Solution 1: Reputation</h1>\n<p>One solution to this is by tracking reputation. More specifically, leveraging the promise of future PERs to incentivize preconfers to respond promptly via either commitments or non-commitments (slash-able promises to NOT include). The gateway can throttle or simply ignore preconfers if they misbehave.</p>\n<p>Reputation is a tried method and exists today in mev-boost relays (see <a href=\"https://ethresear.ch/t/the-preconfirmation-sauna/19762\">Switchboard’s Sauna Appendix</a>). While this might work, it still requires certain economic conditions for security. If for whatever reason it becomes really profitable to behave dishonestly, the guarantees fall apart.</p>\n<h1><a name=\"can-we-do-better-4\" class=\"anchor\" href=\"https://ethresear.ch#can-we-do-better-4\"></a>Can we do better?</h1>\n<p>In an ideal scenario, without any limitations of technology, one would simply invalidate the PER if the preconfer takes too long to respond. With blockchains, this is complicated, and time-based approaches require some sort of additional consensus, breaking the based paradigm. However, we can indirectly access “time” by using order. Blocks are ordered, so preconfers can be as well. If we take advantage of this, we arrive at a new solution that avoids the Fair Exchange problem altogether.</p>\n<h1><a name=\"solution-2-last-right-5\" class=\"anchor\" href=\"https://ethresear.ch#solution-2-last-right-5\"></a>Solution 2: Last Right</h1>\n<p>Determine an order for preconfers. This can be done per block (or even intra-block). Send the PER optimistically to the first preconfer. If they commit, then great. If they return a non-commitment, or do not respond, then send the PER to the next preconfer.</p>\n<p>But wait, they can still include my PER and pocket my tip! Yes, they can but they won’t be able to keep the tip. This is due to the central idea of this solution: <strong>the last preconfer to include the PER has the right to the tips</strong>. If two preconfers attempt to include the PER, the second preconfer has the right to the preconf tip. For example, the last preconfer submits a proof and transfers the PER tip to their balance. Other mechanisms are also possible and should be explored.</p>\n<p>One consideration here is the cost. If claiming the tip is more expensive than the tip itself, then the model falls apart. The good news is this cost is directly tied to the technology and should decrease exponentially (e.g. zk proof). Preconfirmation tips on the other hand are tied to the value of the transaction itself, which is not as dependent on the tech. So perhaps this mechanism will become more and more economically favorable.</p>\n<p>One great side effect of this method is that it preserves the possibility of execution promises. If the first preconfer acts honestly, then it can guarantee the execution state for the PER. Execution guarantees fall apart if there’s any dishonesty (same as Solution 1).</p>\n<h1><a name=\"solution-3-first-right-6\" class=\"anchor\" href=\"https://ethresear.ch#solution-3-first-right-6\"></a>Solution 3: First Right</h1>\n<p>If we are willing to forgo execution promises, then the gateway can instead request commitments from preconfers in reverse order. Forward the PER to a preconfer down the list, and then move up until one commits. <strong>The first preconfer to include the PER gets the tip.</strong> In the case where L1 proposers are preconfers, this is enforced by the L1 replay protection. This is a much simpler version of Solution 2.</p>\n<p>One downside is the “real” latency before the transaction is actually included since the default preconfer is not the current one. But one could argue that for important transactions where L1 settlement is important (e.g. buying a house), preconfirmations in general are probably not a priority.</p>\n<p>Note that execution promises are technically still possible if all the state transitions up to the point of inclusion has already been determined. (e.g. All block space has already been filled by PERs or similar.)</p>\n<h1><a name=\"final-thoughts-7\" class=\"anchor\" href=\"https://ethresear.ch#final-thoughts-7\"></a>Final Thoughts</h1>\n<p>We can even perhaps use these Solutions in tandem. For smaller preconf tips, we can rely on Solution 1, let the first preconfer pocket it and “slash” their reputation. For larger preconf tips, we can fallback to Solution 2 and let the next preconfer steal it back. Or just use them at the same time.</p>\n<p>Thanks to <span class=\"mention\">@mteam</span> for getting me up to speed and providing feedback. We at Spire Labs are actively researching preconfirmations and related topics, and building towards a better, unified Ethereum.</p>\n            <p><small>4 posts - 3 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/solutions-to-the-preconf-fair-exchange-problem/19779\">Read full topic</a></p>","link":"https://ethresear.ch/t/solutions-to-the-preconf-fair-exchange-problem/19779","pubDate":"Tue, 11 Jun 2024 02:55:02 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19779"},"source":{"@url":"https://ethresear.ch/t/solutions-to-the-preconf-fair-exchange-problem/19779.rss","#text":"Solutions to the Preconf Fair Exchange Problem"}},{"title":"Inactivity Leak unveiled","dc:creator":"ulrych8","category":"Proof-of-Stake","description":"<p>We summarize here the <a href=\"https://arxiv.org/abs/2404.16363\" rel=\"noopener nofollow ugc\">article</a> that presents the first theoretical analysis of the inactivity leak, designed to restore finalization during catastrophic network failures. This work is accepted at DSN2024.</p>\n<h1><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>TL;DR</h1>\n<ul>\n<li>The inactivity leak is intrinsically problematic for the safety of the protocol. It favors the constant finalization of blocks (<em>liveness</em>) at the expense of having conflicting finalized blocks (<em>safety</em>).</li>\n<li>The presence of Byzantine validators -validators that deviate from the protocol- can accelerate the loss of safety.</li>\n</ul>\n<hr>\n<p>The Ethereum PoS blockchain strives for the continuous growth of the finalized chain. In consequence, the protocol incentivizes validators to finalize blocks actively. The inactivity leak is the mechanism used to regain finality. Specifically, the inactivity leak is initiated if a chain has not undergone finalization for four consecutive epochs. The inactivity leak happened for the first time on the mainnet in May 2023.</p>\n<p>A good introduction to the inactivity leak is available thanks to the excellent work of Ben Eddington <a href=\"https://eth2book.info/capella/part2/incentives/inactivity/\" rel=\"noopener nofollow ugc\">here</a> (which motivated this work). We formalize the inactivity leak starting by the inactivity score.</p>\n<h2><a name=\"inactivity-score-2\" class=\"anchor\" href=\"https://ethresear.ch#inactivity-score-2\"></a>Inactivity Score</h2>\n<p>During an inactivity leak, at epoch <span class=\"math\">t</span>, the inactivity score, <span class=\"math\">I_i(t)</span>, of validator <span class=\"math\">i</span> is:</p>\n<div class=\"math\">\n\\begin{cases}\n        I_i(t) = I_i(t-1)+4, \\text{if $i$ is inactive at epoch $t$} \\\\\n        I_i(t) = \\max(I_i(t-1)-1, 0), \\text{ otherwise.}\n    \\end{cases}\n</div>\n<p>Thus, a validator’s inactivity score increases by <span class=\"math\">4</span> if it is inactive and decreases by <span class=\"math\">1</span> if it is active. The inactivity score is always positive and will be used to penalize validators during the inactivity leak.</p>\n<h2><a name=\"inactivity-penalties-3\" class=\"anchor\" href=\"https://ethresear.ch#inactivity-penalties-3\"></a>Inactivity Penalties</h2>\n<p>Let <span class=\"math\">s_i(t)</span> represent the stake of validator <span class=\"math\">i</span> at epoch <span class=\"math\">t</span>, and let <span class=\"math\">I_i(t)</span> denote its inactivity score. The penalty at each epoch <span class=\"math\">t</span> is <span class=\"math\">I_i(t-1)\\cdot s_i(t-1)/2^{26}</span>. Therefore, the evolution of the stake is expressed by:</p>\n<div class=\"math\">\ns_i(t)=s_i(t-1)-\\frac{I_i(t-1)\\cdot s_i(t-1)}{2^{26}}. \n</div>\n<h2><a name=\"stake-during-the-inactivity-leak-4\" class=\"anchor\" href=\"https://ethresear.ch#stake-during-the-inactivity-leak-4\"></a>Stake during the Inactivity Leak</h2>\n<p>In this work, we model the stake function <span class=\"math\">s</span> as a continuous and differentiable function, yielding the following differential equation:</p>\n<div class=\"math\">\ns'(t)=-I(t)\\cdot s(t)/2^{26}.\n</div>\n<p>With this equation, we can determine a validator’s stake according to the time by fixing the evolution of its inactivity score. And that is exactly what we do. We define two types of behavior: Active and Inactive.</p>\n<ul>\n<li>Active validators: they are always active.</li>\n<li>Inactive validators: they are always inactive.</li>\n</ul>\n<p>Validators with these behaviors experience different evolutions in their inactivity scores: (a) Active validators have a constant inactivity score <span class=\"math\">I(t)=0</span>; (b) Inactive validators’ inactivity score increases by 4 every epoch, <span class=\"math\">I(t)=4t</span>. The stake of each type of validator during an inactivity leak:</p>\n<ul>\n<li>Active validator’s stake: <span class=\"math\"> s(t) = s_0 = 32. </span></li>\n<li>Inactive validator’s stake: <span class=\"math\"> s(t) = s_0e^{-t^2/2^{25}}. </span></li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/9/496a7e5de461559b800a4d612eacb356a5f3cc84.png\" data-download-href=\"https://ethresear.ch/uploads/default/496a7e5de461559b800a4d612eacb356a5f3cc84\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/9/496a7e5de461559b800a4d612eacb356a5f3cc84_2_685x500.png\" alt=\"image\" data-base62-sha1=\"att12R0B103OUE04m41aU0G5dVa\" width=\"685\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/9/496a7e5de461559b800a4d612eacb356a5f3cc84_2_685x500.png, https://ethresear.ch/uploads/default/optimized/3X/4/9/496a7e5de461559b800a4d612eacb356a5f3cc84_2_1027x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/9/496a7e5de461559b800a4d612eacb356a5f3cc84_2_1370x1000.png 2x\" data-dominant-color=\"FBFAF9\"></a></div><p></p>\n<p>The graph shows the evolution of the stake of validators depending on their activity during the inactivity leak. The expulsion limit is set by the protocol to eject validators that have accumulated too many penalties.</p>\n\nWhat is an active validator? <a href=\"https://ethresear.ch/t/inactivity-leak-unveiled/19774/1\">(click for more details)</a>\n<hr>\n<p>This was the formalization of the protocol. Now we make the analysis of the protocol’s property of safety. To do so, we use the following model.</p>\n<h2><a name=\"model-5\" class=\"anchor\" href=\"https://ethresear.ch#model-5\"></a>Model</h2>\n<ul>\n<li><strong>Network</strong>: We assume a partially synchronous system, which transitions from an asynchronous state to a synchronous state after an apriori unknown Global Stabilization Time (GST).</li>\n<li><strong>Fault</strong>: Validators are either <em>honest</em> or <em>Byzantine</em> (deviating from the protocol). A Byzantine validator can deviate arbitrarily from the protocol.</li>\n<li><strong>Stake</strong>: Each validator starts with 32 ETH.</li>\n</ul>\n<p>There is no bound on message transfer delay during the asynchronous state.</p>\n<h1><a name=\"bound-for-safety-6\" class=\"anchor\" href=\"https://ethresear.ch#bound-for-safety-6\"></a>Bound for safety</h1>\n<h2><a name=\"with-only-honest-validators-7\" class=\"anchor\" href=\"https://ethresear.ch#with-only-honest-validators-7\"></a>With only honest validators</h2>\n<p>By construction, the inactivity leak will breach safety if a partition occurs for long enough. The question is, how quickly?</p>\n<blockquote>\n<p><em>Any network partition lasting longer than 4686 epochs (about 3 weeks) will result in a loss of Safety because of conflicting finalization. This is an upper bound for Safety on the duration of the inactivity leak with only honest validators.</em></p>\n</blockquote>\n<h3><a name=\"detailed-analysis-8\" class=\"anchor\" href=\"https://ethresear.ch#detailed-analysis-8\"></a>Detailed Analysis</h3>\n<p>Let us analyze the scenario in which the validators (which are all honest) are partitioned in two. (We are in the asynchronous state according to our model).<br>\nThe partition will necessarily create a fork, each partition building on the only chain they see. The chains will finalize once the proportion of active validators returns to 2/3rd.</p>\n<p>In this case, by understanding the distribution of the validators across the partitions, we can compute the time it takes for the proportion of active validators’ stake to return to 2/3 of the stake on each branch, thus finalizing and breaking safety.</p>\n<p>For the analysis, we make the following notations. At the beginning of the inactivity leak:</p>\n<ul>\n<li><span class=\"math\">n</span> is the total number of validators</li>\n<li><span class=\"math\">n_B</span> is the total number of Byzantine validators</li>\n<li><span class=\"math\">n_H</span> is the total number of honest validators</li>\n<li><span class=\"math\">n_{H_1}</span> is the number of honest validators on branch 1</li>\n<li><span class=\"math\">n_{H_2}</span> is the number of honest validators on branch 2</li>\n</ul>\n<p>There are no Byzantine validators for the first part of our analysis, which implies that <span class=\"math\">n=n_H</span>. Honest validators are only partitioned in two, thus <span class=\"math\">n_H=n_{H_1}+n_{H_2}</span>.</p>\n<p><strong>Our goal is to determine when the proportion of honest validators on branch 1 will be superior to 2/3rd of the total stake.</strong>  Which is to say that we look at when the ratio:</p>\n<div class=\"math\">\n\\frac{\\text{stake of validator in branch 1}}{\\text{stake of validator in branch 1 + stake of validator in branch 2}},\n</div>\n<p>is superior to 2/3. With our notation, the ratio can be rewritten as:</p>\n<div class=\"math\">\n\\frac{n_{\\text H_1}s_{\\text H_1}(t)}{n_{\\text H_1}s_{\\text H_1}(t)+n_{\\text H_2}s_{\\text H_2}(t)} ,\n</div>\n<p><span class=\"math\">s_{\\text H_1}</span> and <span class=\"math\">s_{\\text H_2}</span> are the stakes of honest active and inactive validators, respectively. Since the <span class=\"math\">n_{\\text H_1}</span> validators on branch 1 are always active on branch 1, and the <span class=\"math\">n_{\\text H_2}</span> validators are always inactive on branch 1 (they are active on branch 2); we know that <span class=\"math\">s_{\\text H_1}(t)=s_0</span> and <span class=\"math\">s_{\\text H_2}(t)=s_0e^{-t^2/2^{25}}</span>.<br>\nUsing the notation <span class=\"math\">p_0=n_{\\text H_1}/n_H</span>, the ratio of active validators over time is:</p>\n<div class=\"math\">\n\\frac{p_0}{p_0+(1-p_0)e^{-t^2/2^{25}}}. \n</div>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/e/7ec6a1a64318159dada408e4cc0365a1663b28d1.png\" data-download-href=\"https://ethresear.ch/uploads/default/7ec6a1a64318159dada408e4cc0365a1663b28d1\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/e/7ec6a1a64318159dada408e4cc0365a1663b28d1_2_668x500.png\" alt=\"image\" data-base62-sha1=\"i5vJ5hAgXMEkHs51U8Fxy6Hf7y1\" width=\"668\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/e/7ec6a1a64318159dada408e4cc0365a1663b28d1_2_668x500.png, https://ethresear.ch/uploads/default/optimized/3X/7/e/7ec6a1a64318159dada408e4cc0365a1663b28d1_2_1002x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/7/e/7ec6a1a64318159dada408e4cc0365a1663b28d1_2_1336x1000.png 2x\" data-dominant-color=\"F8F5F7\"></a></div><p></p>\n<p>This graph shows the ratio of active validators on branch 1 over time. If finalization hasn’t occurred by epoch <span class=\"math\">t=4685</span>, inactive validators are ejected, causing a jump to 100% active validators.</p>\n<h2><a name=\"byzantine-validators-9\" class=\"anchor\" href=\"https://ethresear.ch#byzantine-validators-9\"></a>Byzantine validators</h2>\n<p>We now add Byzantine validators.</p>\n\nThese Byzantine validators can send messages to each partition without restriction. <a href=\"https://ethresear.ch/t/inactivity-leak-unveiled/19774/1\">(click for more details)</a>\n<p>The situation we analyze is now as such:</p>\n<ul>\n<li>Less than one-third of the stake is held by Byzantine validators (<span class=\"math\">\\beta_0=n_{\\rm B}/n&lt;1/3</span>).</li>\n<li>Honest validators are divided into branches <span class=\"math\">1</span> and <span class=\"math\">2</span>; a proportion <span class=\"math\">p_0=n_{\\rm H_1}/n_{\\rm H}</span> on branch <span class=\"math\">1</span> and <span class=\"math\">1-p_0=n_{\\rm H_2}/n_{\\rm H}</span> on branch <span class=\"math\">2</span>.</li>\n<li>Byzantine validators can communicate with both branches.</li>\n</ul>\n<p>Byzantine validators can be active on both branches simultaneously, breaching safety faster. The ratio of active validators on branch 1 is:</p>\n<div class=\"math\">\n\\frac{p_0(1-\\beta_0)+\\beta_0}{p_0(1-\\beta_0)+\\beta_0+(1-p_0)(1-\\beta_0)e^{-t^2/2^{25}}}.\n</div>\n<p>This table shows the time it takes to break safety depending on the initial proportion of Byzantine validators (<span class=\"math\">\\beta_0</span>):<br>\n<img src=\"https://ethresear.ch/uploads/default/original/3X/3/0/30cda7537ed8ab1493f4beadd138924b6b6408f3.png\" alt=\"image\" data-base62-sha1=\"6XJwP6WtcjSXPLXvmtFXtBoSrDB\" width=\"157\" height=\"195\"></p>\n<p><em>Byzantine validators can expedite the loss of Safety. If their initial proportion is 0.33, they can make conflicting finalization occur approximately ten times faster than scenarios involving only honest participants.</em></p>\n<hr>\n<p>The original paper provides more details on the assumptions, scenarios, protocol, and other aspects such as:</p>\n<ul>\n<li>Ways for Byzantine validators to breach safety without committing slashable behavior.</li>\n<li>Methods for Byzantine validators to exceed the 1/3 threshold on both branches of the fork.</li>\n<li>An analysis of the probabilistic bouncing attack while considering the inactivity leak. Spoiler alert: this aggravates the attack slightly, but the conditions for the attack to start and persist in time make it highly improbable to be a real threat.</li>\n</ul>\n<p>For an additional quick peek at the paper’s findings, here is a graphic that presents how quickly Byzantine validators can break safety depending on their initial proportion and whether their behavior is slashable or not.  As you can see, they can have a strong impact even without slashable behavior.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/a/8a447d3888021e7cf6ba7c2b99fd1907ad3a5738.png\" data-download-href=\"https://ethresear.ch/uploads/default/8a447d3888021e7cf6ba7c2b99fd1907ad3a5738\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/a/8a447d3888021e7cf6ba7c2b99fd1907ad3a5738_2_500x375.png\" alt=\"image\" data-base62-sha1=\"jJaCWWd2SOvw9salBXJXFnVezMc\" width=\"500\" height=\"375\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/a/8a447d3888021e7cf6ba7c2b99fd1907ad3a5738_2_500x375.png, https://ethresear.ch/uploads/default/optimized/3X/8/a/8a447d3888021e7cf6ba7c2b99fd1907ad3a5738_2_750x562.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/a/8a447d3888021e7cf6ba7c2b99fd1907ad3a5738_2_1000x750.png 2x\" data-dominant-color=\"F9F8F9\"></a></div><p></p>\n<h1><a name=\"conclusion-10\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-10\"></a>Conclusion</h1>\n<p>Our findings highlight the importance of penalty mechanisms in Byzantine Fault Tolerance (BFT) analysis. By identifying potential issues in protocol design, we aim to provide insights for future improvements and tools for further investigation.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/inactivity-leak-unveiled/19774\">Read full topic</a></p>","link":"https://ethresear.ch/t/inactivity-leak-unveiled/19774","pubDate":"Mon, 10 Jun 2024 13:46:18 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19774"},"source":{"@url":"https://ethresear.ch/t/inactivity-leak-unveiled/19774.rss","#text":"Inactivity Leak unveiled"}},{"title":"The contention between preconfs and ePBS","dc:creator":"potuz","category":"Architecture","description":"<p>This quick note is motivated by a question of <a class=\"mention\" href=\"https://ethresear.ch/u/hasu.research\">@Hasu.research</a> regarding the compatibility of ePBS with the different mechanisms for preconfirmations that are being proposed by independent groups <a href=\"https://ethresear.ch/t/the-preconfirmation-sauna/19762\">1</a> <a href=\"https://ethresear.ch/t/blob-preconfirmations-with-inclusion-lists-to-mitigate-blob-contention-and-censorship/19150\">2</a> <a href=\"https://chainbound.github.io/bolt-docs/\" rel=\"noopener nofollow ugc\">3</a> <a href=\"https://docs.google.com/presentation/d/1a-0rP2knM11g59UmnKn7I7NH8BlFM5wNhczH35sbkSo/edit#slide=id.g2731bc99d1b_0_0\" rel=\"noopener nofollow ugc\">4</a> <a href=\"https://docs.primev.xyz/get-started/introduction\" rel=\"noopener nofollow ugc\">5</a>. The only purpose of this note is to leave a quick written record of the fundamental contention between the enshrinements of preconfirmations and the <a href=\"https://github.com/potuz/consensus-specs/pull/2\" rel=\"noopener nofollow ugc\">current proposal for ePBX</a>.</p>\n<h2><a name=\"overloading-inclusion-lists-1\" class=\"anchor\" href=\"https://ethresear.ch#overloading-inclusion-lists-1\"></a>Overloading inclusion lists.</h2>\n<p>Even in the very first post on <a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">based preconfirmations</a>, the idea of using <a href=\"https://eips.ethereum.org/EIPS/eip-7547\" rel=\"noopener nofollow ugc\">forced inclusion lists</a> was put forward as a way for proposers to signal their intent of honoring preconfirmations, forcing builders to include these transactions. An extrapolation of this idea led, in one of the original designs for ILs, to propose that inclusion lists may essentially include a complete list of transactions the proposer has in its current mempool. One of the problems with these ideas is that the full list of transactions would need to be broadcast over the P2P network twice: once when the inclusion list is broadcast, and the second time within the payload itself. In all known designs for inclusion lists, validators attest for the existence of the full executable transaction list. This implies in particular that</p>\n<ol>\n<li>The list must be available at the beacon block validation time.</li>\n<li>The list must be executed at the beacon block validation time.</li>\n</ol>\n<p>This section is not meant to be read as <em>inclusion lists aren’t compatible with ePBS</em> but rather any preconfirmation system (and next block forced inclusion lists by definition are such a system) that relies on the execution and distribution of the transactions at the consensus block validation time, necessarily clashes with the main optimization from ePBS.</p>\n<h2><a name=\"epbs-validation-optimization-2\" class=\"anchor\" href=\"https://ethresear.ch#epbs-validation-optimization-2\"></a>ePBS validation optimization</h2>\n<p>The above two points are in direct opposition with the main optimization that ePBS brings to block processing, that is that the only hot path to validation is that of the consensus block that has to be fully verified before the attestation deadline. All other validations, like transaction execution, data availability, etc. are deferred to the remainder of the slot and into the next slot.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/f/8f3daa474ae131dfbee7c96cfd9f2a7e4035c06a.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/8f3daa474ae131dfbee7c96cfd9f2a7e4035c06a\" title=\"ePBS slot\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/f/8f3daa474ae131dfbee7c96cfd9f2a7e4035c06a_2_690x364.jpeg\" alt=\"ePBS slot\" data-base62-sha1=\"kraovl1lfJNBvSrOxQ6y37JNNuW\" width=\"690\" height=\"364\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/f/8f3daa474ae131dfbee7c96cfd9f2a7e4035c06a_2_690x364.jpeg, https://ethresear.ch/uploads/default/optimized/3X/8/f/8f3daa474ae131dfbee7c96cfd9f2a7e4035c06a_2_1035x546.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/f/8f3daa474ae131dfbee7c96cfd9f2a7e4035c06a_2_1380x728.jpeg 2x\" data-dominant-color=\"EEF5F4\"></a></div><p></p>\n<p>While ePBS is compatible with inclusion lists, their addition inherently stresses this optimization. Broadcasting a small list of 16 transactions that can be immediately executed in microseconds is not the same as broadcasting a full block, and presumably, even blob transactions as some based rollups would require.</p>\n<h2><a name=\"the-centralized-nature-of-preconfs-3\" class=\"anchor\" href=\"https://ethresear.ch#the-centralized-nature-of-preconfs-3\"></a>The centralized nature of preconfs</h2>\n<p>There is no current design (that I am aware of) of preconfirmations, that does not rely on a centralized entity. This is natural to expect in the absence of an encrypted public mempool, users can’t send their transactions in the open to the next proposer (although they could <em>encrypt the transactions to the public BLS address of the next proposer</em>), and we can’t enshrine an RPC provider, all systems thus make use on existing centralized entities (for example relays) to act as a preconfer. Decentralization comes in that it is ultimately the proposer who enforces these preconfirmations, by forcing the builder to fullfil them.</p>\n<p>Thus, in all proposed systems for preconfirmations, either of L1 transactions or for based rollups, there exist a centralized entity that at the very least is responsible for gathering the transactions and giving out the preconfirmations. Systems differ on how is that these preconfirmations are enforced, they range from new L1 slashing proposals, to restaking proposals (moving the slashing to a separate layer), etc. The point is that preconfirmations can be enforced by the protocol itself, or by a somewhat decentralized party like the subset of validators participating in the preconfirmation scheme. In summary, there is a plethora of options for enforcing the (or penalizing the lack of) inclusion of preconfirmations, in decreasing level of trustlessness:</p>\n<ul>\n<li>The L1 protocol itself enforces inclusion. For example, forced ILs, with proposer level slashings on missed slots, preconf equivocations, etc.</li>\n<li>Some separate committee enforces them. For example a subset of the L1 validators also participate in a sidechain by restaking, and the enforcement/punishment is carried in that sidechain.</li>\n<li>A centralized entity enforces them. For example the relay itself only sends bids from builders that have satisfied the required preconfs.</li>\n</ul>\n<h2><a name=\"a-viable-way-compatible-with-epbs-staked-builders-as-preconfirmers-4\" class=\"anchor\" href=\"https://ethresear.ch#a-viable-way-compatible-with-epbs-staked-builders-as-preconfirmers-4\"></a>A viable way compatible with ePBS: staked builders as preconfirmers.</h2>\n<p>Any approach with a full payload being broadcast with the consensus block for preconfirmation enforcement clashes directly with the main scaling optimization of ePBS with regard to block validation. As thus, it seems difficult to expect a working design in which the proposers are in charge of sending and enforcing preconfirmations. The second and third approaches above are fully compatible with ePBS.</p>\n<p>One of the features that preconfirmation systems can leverage when ePBS is in place, is that builders themselves are staked validators, thus they can be subject to the same rules that these systems currently require from proposers. For example, those systems that rely on slashings on a restaking scheme could simply add conditions on participating builders. That is, the proposer set participating in the scheme only take bids from builders that are participants of the scheme. The builders and proposers are required to be restaked. There are new penalty conditions for</p>\n<ul>\n<li>A proposer that does not include a block.</li>\n<li>A proposer that includes a block with a commitment to a non-participating builder.</li>\n<li>A builder that does not include the payload</li>\n<li>A builder that includes a payload does not satisfies the preconf list.</li>\n</ul>\n<h2><a name=\"a-separate-note-on-restaking-5\" class=\"anchor\" href=\"https://ethresear.ch#a-separate-note-on-restaking-5\"></a>A separate note on restaking</h2>\n<p>ePBS also presents a challenge on any restaking scheme: builders can transfer funds in the same payload that they commit a slashable offense. L1 protocol can deal with this by immediately deducting the bid from the builder’s balance at the time of CL block processing, but delaying the credit to the proposer. In case the builder commits a slashable offense, the buffer allows the L1 protocol to implement penalization procedures that can impact those delayed funds accordingly. If the builder is restaked however, the restaking chain does not have access to these funds.</p>\n            <p><small>7 posts - 4 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/the-contention-between-preconfs-and-epbs/19770\">Read full topic</a></p>","link":"https://ethresear.ch/t/the-contention-between-preconfs-and-epbs/19770","pubDate":"Sun, 09 Jun 2024 07:59:33 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19770"},"source":{"@url":"https://ethresear.ch/t/the-contention-between-preconfs-and-epbs/19770.rss","#text":"The contention between preconfs and ePBS"}},{"title":"On block-space distribution mechanisms","dc:creator":"mikeneuder","category":"Block proposer","description":"<h1><a name=\"on-block-space-distribution-mechanisms-1\" class=\"anchor\" href=\"https://ethresear.ch#on-block-space-distribution-mechanisms-1\"></a>On block-space distribution mechanisms</h1>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/3/c3fa4239ef0f468256ba44d0e860fb3d7edaedcf.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/c3fa4239ef0f468256ba44d0e860fb3d7edaedcf\" title=\"upload_3067440b5b4f752379ddba32df7ecf8b\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/3/c3fa4239ef0f468256ba44d0e860fb3d7edaedcf_2_499x500.jpeg\" alt=\"upload_3067440b5b4f752379ddba32df7ecf8b\" data-base62-sha1=\"rXHhzRegZZYL0qvOGMxv8ppT3v9\" width=\"499\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/3/c3fa4239ef0f468256ba44d0e860fb3d7edaedcf_2_499x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/c/3/c3fa4239ef0f468256ba44d0e860fb3d7edaedcf_2_748x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/3/c3fa4239ef0f468256ba44d0e860fb3d7edaedcf_2_998x1000.jpeg 2x\" data-dominant-color=\"94AFB8\"></a></div><br>\n<sub><strong>^p.s. yes, we anthropomorphize the protocol as a ghost because <a href=\"https://arxiv.org/pdf/1710.09437.pdf\" rel=\"noopener nofollow ugc\">Casper</a>.</strong></sub><br>\n<sub><strong>^^p.p.s. not sure why the auctioneer ghost looks like he is conducting an orchestra, but here we are ¯\\_(ツ)_/¯.</strong></sub><br>\n<sub><strong>^^^ p.p.p.s. by the way, if you haven’t seen <a href=\"https://en.wikipedia.org/wiki/Maestro_(2023_film)\" rel=\"noopener nofollow ugc\">Maestro</a>, it’s great.</strong></sub><p></p>\n<p><span class=\"math\">\\cdot</span><br>\n<em>by <a href=\"https://x.com/mikeneuder\" rel=\"noopener nofollow ugc\">Mike</a>, <a href=\"https://x.com/PGarimidi\" rel=\"noopener nofollow ugc\">Pranav</a>, &amp; <a href=\"https://x.com/Tim_Roughgarden\" rel=\"noopener nofollow ugc\">Dr. Tim Roughgarden</a> – June 8, 2024.</em><br>\n<span class=\"math\">\\cdot</span><br>\n<strong>Acknowledgements</strong><br>\n<em>Special thanks to <a href=\"https://x.com/barnabemonnot\" rel=\"noopener nofollow ugc\">Barnabé</a>, <a href=\"https://x.com/_julianma\" rel=\"noopener nofollow ugc\">Julian</a>, <a href=\"https://x.com/_JonahB_\" rel=\"noopener nofollow ugc\">Jonah</a>, <a href=\"https://x.com/DavideCrapis\" rel=\"noopener nofollow ugc\">Davide</a>, <a href=\"https://x.com/soispoke\" rel=\"noopener nofollow ugc\">Thomas</a>, <a href=\"https://x.com/terencechain\" rel=\"noopener nofollow ugc\">Terence</a>, <a href=\"https://x.com/potuz_eth\" rel=\"noopener nofollow ugc\">Potuz</a>, &amp; <a href=\"https://www.nano210.blog/\" rel=\"noopener nofollow ugc\">Nate</a> for comments and discussions.</em><br>\n<span class=\"math\">\\cdot</span><br>\n<strong>tl;dr;</strong> <em>Block space, the capacity for transaction inclusion, is the principal resource exported by blockchains. As the crypto ecosystem scales up and professionalizes, the value produced by efficient usage of block space (<a href=\"https://arxiv.org/abs/1904.05234\" rel=\"noopener nofollow ugc\">MEV</a>) has come to play a significant role in the economics of permissionless consensus mechanisms. An immense amount of ink has been spilled by the research community considering what, if anything, protocols should enshrine in response to MEV (see <a href=\"https://ethresear.ch#related-work-2\">Related Work</a>). Indeed, the past few years resemble a <a href=\"https://en.wikipedia.org/wiki/Blind_men_and_an_elephant\" rel=\"noopener nofollow ugc\">Blind Men and the Elephant</a> narrative arc, where many different perspectives, solutions, and theories have been propounded, but each angle can feel disjoint and difficult to compare. The first half of this article aims to present a broad-strokes painting of the “MEV-ephant” by distilling the design space into a core set of questions and exploring how existing proposals answer them. The second half hones in specifically on allocation mechanisms enabled by execution tickets, demonstrating an important new insight – there is a trade-off between the quality of the in-protocol MEV oracle and the fairness of the mechanism.</em></p>\n<p><strong>Organization:</strong> <a href=\"https://ethresear.ch#h-1-motivation-3\">Section 1</a> motivates the need for an in-protocol mechanism to handle block-space distribution as part of the “endgame” for Proof-of-Stake. <a href=\"https://ethresear.ch#h-2-enumeration-6\">Section 2</a> enumerates five axes along which block-space distribution mechanisms may be measured, using a familiar set of questions: <em>who, what, when, where, how</em> (abbr. the <code>W^4H questions</code>). <a href=\"https://ethresear.ch#h-3-interrogation-11\">Section 3</a> interrogates how the block builder is selected, focusing on the execution tickets model. <a href=\"https://ethresear.ch#h-4-extrapolation-18\">Section 4</a> extrapolates by concluding and raising open questions that follow from the framework established.</p>\n<p><strong>Structural note:</strong> This article is rather long for this format and has some technical elements. We encourage the reader to focus on the portion of the article they are most interested in:</p>\n<ul>\n<li>Sections <a href=\"https://ethresear.ch#h-1-motivation-3\">1</a>, <a href=\"https://ethresear.ch#h-2-enumeration-6\">2</a>, &amp; <a href=\"https://ethresear.ch#h-4-extrapolation-18\">4</a> provide a broader perspective on the existing proposals and our proposed methodology for analyzing them.</li>\n<li><a href=\"https://ethresear.ch#h-3-interrogation-11\">Section 3</a> (which is <span class=\"math\">\\approx 44\\%</span> of the content, but <a href=\"https://youtu.be/VDvr08sCPOc?t=111\" rel=\"noopener nofollow ugc\"><span class=\"math\">100\\%</span></a> of the math) provides a detailed analysis of allocation mechanisms enabled by the execution tickets design. This section can be read in sequence, in isolation, or skipped altogether – up to you!</li>\n</ul>\n<p><span class=\"math\">\\cdot</span><br>\n<strong>Contents</strong></p>\n<ol>\n<li><a href=\"https://ethresear.ch#h-1-motivation-3\"><strong>Motivation</strong></a><br>\n<a href=\"https://ethresear.ch#h-1-what-4\"><em>1) What</em></a><br>\n<a href=\"https://ethresear.ch#Block-space-distribution-today\"><em>Block-space distribution today through <code>mev-boost</code></em></a></li>\n<li><a href=\"https://ethresear.ch#h-2-enumeration-6\"><strong>Enumeration</strong></a><br>\n<a href=\"https://ethresear.ch#the-elementshttpsenwikipediaorgwikieuclid27s_elements-of-block-space-distribution-7\"><em>The elements of block-space distribution</em></a><br>\n<a href=\"https://ethresear.ch#execution-tickets-and-other-animals-8\"><em>Execution tickets and other animals</em></a><br>\n<a href=\"https://ethresear.ch#applying-w4h-a-comparative-analysis-9\"><em>Applying W^4H: a comparative analysis</em></a><br>\n<a href=\"https://ethresear.ch#motivational-interlude-10\"><em>Motivational interlude</em></a></li>\n<li><a href=\"https://ethresear.ch#h-3-interrogation-11\"><strong>Interrogation</strong></a><br>\n<a href=\"https://ethresear.ch#preliminaries-12\"><em>Preliminaries</em></a><br>\n<a href=\"https://ethresear.ch#model-13\"><em>Model</em></a><br>\n<a href=\"https://ethresear.ch#familiar-allocation-mechanisms-14\"><em>Familiar allocation mechanisms</em></a><br>\n<a href=\"https://ethresear.ch#comparing-the-outcomes-15\"><em>Comparing the outcomes</em></a><br>\n<a href=\"https://ethresear.ch#aside-1-calculating-equilibrium-bids-16\"><em>Aside #1: Calculating equilibrium bids</em></a><br>\n<a href=\"https://ethresear.ch#aside-2-tullock-contests-17\"><em>Aside #2: Tullock Contests</em></a></li>\n<li><a href=\"https://ethresear.ch#h-4-extrapolation-18\"><strong>Extrapolation</strong></a></li>\n</ol>\n<p><span class=\"math\">\\cdot</span></p>\n<h4><a name=\"related-work-2\" class=\"anchor\" href=\"https://ethresear.ch#related-work-2\"></a><strong>Related work</strong></h4>\n<ol>\n<li><em>mev-boost &amp; relays</em>\n<ul>\n<li><a href=\"https://ethresear.ch/t/mev-boost-merge-ready-flashbots-architecture/11177\"><em>MEV-Boost: Merge ready Flashbots Architecture</em></a>; Flashbots team</li>\n<li><a href=\"https://ethresear.ch/t/relays-in-a-post-epbs-world/16278\"><em>Relays in a post-ePBS world</em></a>; Mike, Jon, Hasu, Tomasz, Chris, Toni</li>\n</ul>\n</li>\n<li><em>mev-burn / mev-smoothing</em>\n<ul>\n<li><a href=\"https://ethresear.ch/t/burning-mev-through-block-proposer-auctions/14029\"><em>Burning MEV through block proposer auctions</em></a>; Domothy</li>\n<li><a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590\"><em>MEV burn – a simple design</em></a>; Justin</li>\n<li><a href=\"https://ethresear.ch/t/committee-driven-mev-smoothing/10408\"><em>Committee-driven MEV smoothing</em></a>; Francesco</li>\n<li><a href=\"https://ethresear.ch/t/dr-changestuff-or-how-i-learned-to-stop-worrying-and-love-mev-burn/17384\"><em>Dr. changestuff or: how I learned to stop worrying and love mev-burn</em></a>; Mike, Toni, Justin</li>\n</ul>\n</li>\n<li><em>enshrined Proposer-Builder Separation (ePBS)</em>\n<ul>\n<li><a href=\"https://ethresear.ch/t/two-slot-proposer-builder-separation/10980\"><em>Two-slot proposer/builder separation</em></a>; Vitalik</li>\n<li><a href=\"https://ethresear.ch/t/unbundling-pbs-towards-protocol-enforced-proposer-commitments-pepc/13879\"><em>Unbundling PBS: towards protocol-enforced proposer commitments (PEPC)</em></a>; Barnabé</li>\n<li><a href=\"https://barnabe.substack.com/p/pbs\" rel=\"noopener nofollow ugc\"><em>Notes on Proposer-Builder Separation</em></a>; Barnabé</li>\n<li><a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\" rel=\"noopener nofollow ugc\"><em>More pictures about proposers and builders</em></a>; Barnabé</li>\n<li><a href=\"https://ethresear.ch/t/why-enshrine-proposer-builder-separation-a-viable-path-to-epbs/15710\"><em>Why enshrine Proposer-Builder Separation?</em></a>; Mike, Justin</li>\n<li><a href=\"https://ethresear.ch/t/epbs-design-constraints/18728\"><em>ePBS design constraints</em></a>; Potuz</li>\n<li><a href=\"https://mirror.xyz/barnabe.eth/LJUb_TpANS0VWi3TOwGx_fgomBvqPaQ39anVj3mnCOg\" rel=\"noopener nofollow ugc\"><em>Reconsidering the market structure of PBS</em></a>; Barnabé</li>\n</ul>\n</li>\n<li><em>block-space futures</em>\n<ul>\n<li><a href=\"https://mirror.xyz/0x03c29504CEcCa30B93FF5774183a1358D41fbeB1/CPYI91s98cp9zKFkanKs_qotYzw09kWvouaAa9GXBrQ\" rel=\"noopener nofollow ugc\"><em>Block vs. Slot Auction PBS</em></a>; Julian</li>\n<li><a href=\"https://frontier.tech/ethereums-blockspace-future\" rel=\"noopener nofollow ugc\"><em>Opportunities and Considerations of Ethereum’s Blockspace Future</em></a>; Drew, Ankit</li>\n<li><a href=\"https://collective.flashbots.net/t/when-to-sell-your-blocks/2814\" rel=\"noopener nofollow ugc\"><em>When to sell your blocks</em></a>; Quintus, Conor</li>\n</ul>\n</li>\n<li><em>execution tickets</em>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=MtvbGuBbNqI\" rel=\"noopener nofollow ugc\"><em>Attester-proposer separation</em></a>; Justin</li>\n<li><a href=\"https://ethresear.ch/t/execution-tickets/17944\"><em>Execution tickets</em></a>; Justin, Mike</li>\n<li><a href=\"https://ethresear.ch/t/economic-analysis-of-execution-tickets/18894\"><em>Economic Analysis of Execution Tickets</em></a>; Jonah, Davide</li>\n<li><a href=\"https://ethresear.ch/t/block-auction-epbs-versus-execution-ticket/19232\"><em>Block-auction ePBS versus Execution Ticket</em></a>; Terence</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3><a name=\"h-1-motivation-3\" class=\"anchor\" href=\"https://ethresear.ch#h-1-motivation-3\"></a>(1) – Motivation</h3>\n<p>Before descending into this murky rabbit hole, let’s start by simply motivating the necessity of a block-space distribution mechanism. Validators in Proof-of-Stake protocols are tasked with producing and voting on blocks. The figure below, from Barnabé’s excellent “<a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\" rel=\"noopener nofollow ugc\"><em>More pictures about proposers and builders</em></a>,” describes these as “proposing” and “attesting” rights, respectively.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/d/7d85ca7f1812a5822490fa079365301c99733620.png\" data-download-href=\"https://ethresear.ch/uploads/default/7d85ca7f1812a5822490fa079365301c99733620\" title=\"upload_72dad4dc4f8c77f0d57f8f126b3c2e46\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/d/7d85ca7f1812a5822490fa079365301c99733620_2_690x219.png\" alt=\"upload_72dad4dc4f8c77f0d57f8f126b3c2e46\" data-base62-sha1=\"hUqkro39EJ5rltxQKhLzwWWHCNy\" width=\"690\" height=\"219\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/d/7d85ca7f1812a5822490fa079365301c99733620_2_690x219.png, https://ethresear.ch/uploads/default/optimized/3X/7/d/7d85ca7f1812a5822490fa079365301c99733620_2_1035x328.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/7/d/7d85ca7f1812a5822490fa079365301c99733620_2_1380x438.png 2x\" data-dominant-color=\"D6D1D5\"></a></div><p></p>\n<h4><a name=\"h-1-what-4\" class=\"anchor\" href=\"https://ethresear.ch#h-1-what-4\"></a>1) What</h4>\n<p>(<span class=\"math\">\\uparrow</span> <a href=\"https://twitter.com/SBF_FTX/status/1591989554881658880?lang=en\" rel=\"noopener nofollow ugc\">important cultural ref</a>.)</p>\n<p>A block-space distribution mechanism is the process by which the protocol determines the owner of the “proposing” or “block construction” rights. Proof-of-Stake protocols typically use some version of the following rules:</p>\n<ul>\n<li><strong>block-space (proposing) rights</strong> – A random validator is elected as the leader and permitted to create the next block.</li>\n<li><strong>voting (attesting) rights</strong> – All validators vote during some time window for the block they see as the canonical head.</li>\n</ul>\n<p>Validators perform these tasks because they receive rewards for doing so. We categorize the rewards according to their origin in either the consensus layer (the issuance from the protocol – e.g., newly minted <code>ETH</code>) or the execution layer (transaction fees and MEV):</p>\n<ol>\n<li><strong>Consensus layer</strong><br>\na. <em>Attestation rewards</em> – see <a href=\"https://github.com/ethereum/annotated-spec/blob/160764ac180eca2cea3581f731ee96ac7098f9f7/phase0/beacon-chain.md#components-of-attestation-deltas\" rel=\"noopener nofollow ugc\">attestation deltas</a>.<br>\nb. <em>Block rewards</em> – see <a href=\"https://github.com/ethereum/annotated-spec/blob/160764ac180eca2cea3581f731ee96ac7098f9f7/phase0/beacon-chain.md#rewards-and-penalties-1\" rel=\"noopener nofollow ugc\"><code>get_proposer_reward</code></a>.</li>\n<li><strong>Execution layer</strong><br>\na. <em>Transaction fees</em> – see <a href=\"https://etherscan.io/gastracker\" rel=\"noopener nofollow ugc\">gas tracker</a>.<br>\nb. <em>MEV (transaction ordering)</em> – see <a href=\"https://mevboost.pics/\" rel=\"noopener nofollow ugc\">mevboost.pics</a>.</li>\n</ol>\n<p>Rewards <code>1a</code>, <code>1b</code>, &amp; <code>2a</code> are well understood and “<a href=\"https://barnabe.substack.com/p/seeing-like-a-protocol\" rel=\"noopener nofollow ugc\">in the view</a>” of the protocol. MEV rewards present a more serious challenge because fully capturing the value realized by transaction ordering is difficult. Unlike the other rewards, even the amount of MEV in a block is unknowable for all intents and purposes (as a permissionless and pseudonymous system, it’s impossible to trace who controls each account and any corresponding offchain activity that may be profitable in tandem). MEV also changes dramatically over time (e.g., as a function of price volatility), resulting in execution layer rewards having a much higher variance than the consensus layer rewards. Further, the Ethereum protocol, as implemented, has no insight into the MEV being produced and extracted by its transactions. To improve protocol visibility into MEV, many mechanisms try to approximate the MEV in a given block; we refer to these as <em>MEV oracles</em>. Block-space distribution mechanisms generally have the potential to produce such an oracle, making the protocol “MEV-aware.”</p>\n<p>This suggests the question, <em>why does the protocol care about being MEV-aware?</em> One answer: <strong>MEV awareness may increase the protocol’s ability to preserve the homogeneity of validator rewards, even if validators have varying degrees of sophistication.</strong> For example, if the protocol could accurately burn all MEV, then the validator incentives would be fully in the protocol’s view (just like <code>1a</code>, <code>1b</code>, &amp; <code>2a</code> above). Alternatively, a mechanism that shares all MEV among validators regardless of their sophistication (e.g., <a href=\"https://ethresear.ch/t/committee-driven-mev-smoothing/10408\">mev-smoothing</a>) would seem to promote a larger, more diverse and decentralized validator set, while keeping the MEV rewards as an extra incentivization to stake. Without MEV awareness, the validators best equipped to extract or smooth MEV (e.g., due to relationships with block builders, proprietary algorithms/software, access to exclusive order flow, &amp; economies of scale) may earn disproportionately high rewards and exert significant centralization pressures on the protocol.</p>\n<p>Ethereum protocol design strives to keep a decentralized validator set at all costs. It probably goes without saying, but for completeness: <strong>the protocol’s credible neutrality, censorship resistance, and permissionlessness are directly downstream of a decentralized validator set.</strong></p>\n<h4><a name=\"block-space-distribution-today-5\" class=\"anchor\" href=\"https://ethresear.ch#block-space-distribution-today-5\"></a>Block-space distribution today</h4>\n<p>In Ethereum today, <a href=\"https://mevboost.pics/\" rel=\"noopener nofollow ugc\"><code>mev-boost</code></a> accounts for <span class=\"math\">\\approx 90\\%</span> of all blocks. Using <code>mev-boost</code>, proposers (the validator randomly selected as the leader) sell their block-building rights to the highest paying bidder through an auction. The figure below demonstrates this flow (we exclude the <a href=\"https://www.relayscan.io/\" rel=\"noopener nofollow ugc\">relays</a> because they functionally serve as an extension of the builders).</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/7/b70bdfef2fd8dc26a478c2b870495ea39ebd07bc.png\" data-download-href=\"https://ethresear.ch/uploads/default/b70bdfef2fd8dc26a478c2b870495ea39ebd07bc\" title=\"upload_5f698b1a28978bd8f9779e596c471d9a\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/7/b70bdfef2fd8dc26a478c2b870495ea39ebd07bc_2_252x499.png\" alt=\"upload_5f698b1a28978bd8f9779e596c471d9a\" data-base62-sha1=\"q7iOKKk8JeMriCTq5Tc7z3t7NqQ\" width=\"252\" height=\"499\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/7/b70bdfef2fd8dc26a478c2b870495ea39ebd07bc_2_252x499.png, https://ethresear.ch/uploads/default/optimized/3X/b/7/b70bdfef2fd8dc26a478c2b870495ea39ebd07bc_2_378x748.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/7/b70bdfef2fd8dc26a478c2b870495ea39ebd07bc_2_504x998.png 2x\" data-dominant-color=\"F6F2F4\"></a></div><br>\n.<br>\nProposers are incentivized to outsource their block building because builders (the canonical name for MEV-extracting agents specializing in sequencing transactions) pay them more than they would have earned had they built the block themselves. Circling back to our goal of “<strong>preserving the homogeneity of validator rewards in the presence of MEV</strong>,” we see that <code>mev-boost</code> allows access to the builder market for <em>all validators</em>, effectively preserving near-equivalent MEV rewards among solo stakers and professional staking service providers – great! But…<p></p>\n<p>Of course, there is a but… <code>mev-boost</code> has issues that continue to rankle some of the Ethereum community. Without being exhaustive, a few of the negative side-effects of taking the <code>mev-boost</code> medicine are:</p>\n<ul>\n<li><strong>Relays</strong> – These <a href=\"https://www.relayscan.io/\" rel=\"noopener nofollow ugc\">trusted-third parties</a> broker the sale of blocks between proposers and builders. The immense reliance on relays increases the fragility of the protocol as a whole, as demonstrated through <a href=\"https://collective.flashbots.net/t/disclosure-mitigation-of-block-equivocation-strategy-with-early-getpayload-calls-for-proposers/1705\" rel=\"noopener nofollow ugc\">repeated</a>, <a href=\"https://research.lido.fi/t/bloxroute-feb-6th-post-mortem/6586\" rel=\"noopener nofollow ugc\">incidents</a>, <a href=\"https://gist.github.com/benhenryhunter/5c397db3985a59d14a52816305a6c1b8\" rel=\"noopener nofollow ugc\">involving</a>, <a href=\"https://gist.github.com/benhenryhunter/7b7d9c9e3218aad52f75e3647b83a6cc\" rel=\"noopener nofollow ugc\">relays</a>. Further, since relays have no inherent revenue stream, more exotic (and closed-source) methods of capturing margins (e.g., <a href=\"https://bloxroute.com/pulse/introducing-the-validator-gateway-boost-your-ethereum-validator-rewards/\" rel=\"noopener nofollow ugc\">timing games as a service</a> and <a href=\"https://twitter.com/sui414/status/1778708084510302445\" rel=\"noopener nofollow ugc\">bid adjustments</a>) are being implemented.</li>\n<li><strong>Out-of-protocol software is brittle</strong> – Beyond the relays, participation in the <code>mev-boost</code> market requires validators to run additional software. The standard suite for solo staking now involves running four binaries: (i) the consensus beacon node, (ii) the consensus validator client, (iii) the execution client, and (iv) mev-boost. Beyond the significant overhead for solo stakers, reliance on this software also provides another potential point of failure during hard forks. See the <a href=\"https://collective.flashbots.net/t/impact-of-the-prysm-invalid-signature-bug-on-the-mev-boost-ecosystem-at-the-shapella-fork/1623\" rel=\"noopener nofollow ugc\">Shapella incident</a> and the <a href=\"https://writings.flashbots.net/preparing-for-dencun\" rel=\"noopener nofollow ugc\">Dencun upgrade</a> for an example of the complexity induced by having more out-of-protocol software.</li>\n<li><strong>Builder centralization and censorship</strong> – While this is likely <a href=\"https://vitalik.eth.limo/general/2021/12/06/endgame.html\" rel=\"noopener nofollow ugc\">inevitable</a>, builder centralization was accelerated by the mass adoption of <code>mev-boost</code>. <a href=\"https://www.relayscan.io/\" rel=\"noopener nofollow ugc\">Three builders</a> account for <span class=\"math\">\\approx 95\\%</span> of <code>mev-boost</code> blocks (<span class=\"math\">85\\%</span> of all Ethereum blocks). <code>mev-boost</code> implements an open-outcry, first-price, winner-takes-all auction, leading to high levels of builder concentration and <a href=\"https://ethresear.ch/t/game-theoretic-model-for-mev-boost-auctions-mma/16206\">strategic</a>, <a href=\"https://ethresear.ch/t/bid-cancellations-considered-harmful/15500\">bidding</a>. Without <a href=\"https://ethresear.ch/t/no-free-lunch-a-new-inclusion-list-design/16389\">inclusion lists</a> or another censorship-resistance gadget, builders have extreme influence over transaction inclusion and exclusion – see <a href=\"https://censorship.pics/\" rel=\"noopener nofollow ugc\">censorship.pics</a>.</li>\n<li><strong>Timing games</strong> – While <a href=\"https://arxiv.org/abs/2305.09032\" rel=\"noopener nofollow ugc\">timing games</a> are known to be a fundamental issue in Proof-of-Stake protocols, <code>mev-boost</code> pushes staking service providers to compete on thin margins. Additionally, relays (who conduct <code>mev-boost</code> auctions on the proposer’s behalf) serve as sophisticated middlemen facilitating timing games. Thus, we have seen <a href=\"https://p2p.org/economy/unlock-p2p-orgs-mev-enhancement-feature/\" rel=\"noopener nofollow ugc\">marketing</a> endorsing playing timing games to boost the yield from staking with a specific provider.</li>\n</ul>\n<p><em>“OK, OK … blah blah … we have heard this story before … <a href=\"https://youtu.be/q8wJqMbr6eY?si=LVryerWbrw3_ge-I\" rel=\"noopener nofollow ugc\">tell me something I don’t know</a>.” (<span class=\"math\">\\leftarrow</span> h/t Barnabé for the aptly-named, 14k-views on youtube, musical reference.)</em></p>\n<h3><a name=\"h-2-enumeration-6\" class=\"anchor\" href=\"https://ethresear.ch#h-2-enumeration-6\"></a>(2) – Enumeration</h3>\n<p>Obligatory ‘stage-setting’ out of the way, let’s look a little more carefully at the ~essence~ of a block-space distribution mechanism.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/5/55cc9892e24d897856dff5e70b48fe8682903b6e.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/55cc9892e24d897856dff5e70b48fe8682903b6e\" title=\"upload_cdbf47258422c2a96ea2903ce113a113\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/5/55cc9892e24d897856dff5e70b48fe8682903b6e_2_552x367.jpeg\" alt=\"upload_cdbf47258422c2a96ea2903ce113a113\" data-base62-sha1=\"cf0VErVtcwbNNGlnvZ7LASL7nYi\" width=\"552\" height=\"367\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/5/55cc9892e24d897856dff5e70b48fe8682903b6e_2_552x367.jpeg, https://ethresear.ch/uploads/default/optimized/3X/5/5/55cc9892e24d897856dff5e70b48fe8682903b6e_2_828x550.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/5/5/55cc9892e24d897856dff5e70b48fe8682903b6e.jpeg 2x\" data-dominant-color=\"57362A\"></a></div><br>\n<sub><strong>^ “<a href=\"https://youtu.be/mvy4YH9--Vw?t=108\" rel=\"noopener nofollow ugc\"><em>Is that what I think it is?</em></a>”</strong></sub><p></p>\n<h4><a name=\"the-elementshttpsenwikipediaorgwikieuclid27s_elements-of-block-space-distribution-7\" class=\"anchor\" href=\"https://ethresear.ch#the-elementshttpsenwikipediaorgwikieuclid27s_elements-of-block-space-distribution-7\"></a>The <a href=\"https://en.wikipedia.org/wiki/Euclid%27s_Elements\" rel=\"noopener nofollow ugc\">elements</a> of block-space distribution</h4>\n<p>Consider the game of acquiring block space; MEV incentivizes agents to participate, while the combination of in-protocol and out-of-protocol software defines the rules. When designing this game, what elements should be considered? To answer this question, we use a familiar rhetorical pattern of “who, what, when, where, &amp; how” (hopefully <a href=\"https://ethresear.ch#h-1-motivation-3\">Section 1</a> sufficiently answered “why”), which we refer to as the <code>W^4H questions</code>. (<span class=\"math\">\\leftarrow</span> h/t Barnabé pt. 2 for the connection to “<a href=\"https://www.goodreads.com/book/show/22749723-who-gets-what-and-why\" rel=\"noopener nofollow ugc\"><em>Who Gets What – and Why</em></a>”).</p>\n<ul>\n<li><em><strong>Who</strong> controls the outcome of the game?</em></li>\n<li><em><strong>What</strong> is the good that players are competing for?</em></li>\n<li><em><strong>When</strong> does the game take place?</em></li>\n<li><em><strong>Where</strong> does the MEV oracle come from?</em></li>\n<li><em><strong>How</strong> is the block builder chosen?</em></li>\n</ul>\n<p>These questions might seem overly simplistic, but when considered in isolation, each can be viewed as an axis in the design space to measure mechanisms. To demonstrate this, we highlight a few different species from the block-space distribution mechanism <a href=\"https://en.wikipedia.org/wiki/Genus\" rel=\"noopener nofollow ugc\">genus</a> that have been explored in the past. While they may feel disjointed and unrelated, their relationship is clarified by understanding how they answer the <code>W^4H questions</code>.</p>\n<h4><a name=\"execution-tickets-and-other-animals-8\" class=\"anchor\" href=\"https://ethresear.ch#execution-tickets-and-other-animals-8\"></a>Execution tickets and other animals</h4>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/0/5/05be4a7b2ce343036ba89733f9371dc1cbaa2b5b.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/05be4a7b2ce343036ba89733f9371dc1cbaa2b5b\" title=\"upload_23e73e8aae1d7223973af83053d41ebc\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/0/5/05be4a7b2ce343036ba89733f9371dc1cbaa2b5b_2_328x500.jpeg\" alt=\"upload_23e73e8aae1d7223973af83053d41ebc\" data-base62-sha1=\"OO5cbvPqLWsW7LCqlUWknUvu9d\" width=\"328\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/0/5/05be4a7b2ce343036ba89733f9371dc1cbaa2b5b_2_328x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/0/5/05be4a7b2ce343036ba89733f9371dc1cbaa2b5b_2_492x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/0/5/05be4a7b2ce343036ba89733f9371dc1cbaa2b5b_2_656x1000.jpeg 2x\" data-dominant-color=\"AABDC6\"></a></div><br>\n<sub><strong>^ fantastic book.</strong></sub><p></p>\n<p>We present a compendium of many different proposed mechanisms. Note that this is only a subset of the rather substantial literature around these designs – cf. <a href=\"https://notes.ethereum.org/@mikeneuder/infinite-buffet\" rel=\"noopener nofollow ugc\">infinite buffet</a>. For each of the following, we summarize only the key ideas (see <a href=\"https://ethresear.ch#related-work-2\">related work</a> for more).</p>\n<ul>\n<li>Execution tickets\n<ul>\n<li><strong>Key ideas</strong> – Block building and proposing rights are sold directly through “tickets” issued by the protocol. Ticket holders are randomly sampled to become block builders with a fixed lookahead. The ticket holder has the authority to produce a block at the assigned slot.</li>\n</ul>\n</li>\n<li>Block-auction PBS\n<ul>\n<li><strong>Key ideas</strong> – The protocol bestows block production rights through a random leader-election process. The selected validator can sell their block outright to the builder market or build it locally. The builder must ~commit to a specific block~ when bidding in the auction. <code>mev-boost</code> is an out-of-protocol instantiation of block-auction PBS; enshrined PBS (ePBS), as <a href=\"https://ethresear.ch/t/two-slot-proposer-builder-separation/10980\">originally presented</a>, is the in-protocol equivalent.</li>\n</ul>\n</li>\n<li>MEV-burn/mev-smoothing\n<ul>\n<li><strong>Key ideas</strong> – A committee is tasked with enforcing a minimum value over the bid the proposer selects in an auction. By requiring the proposer to choose a “large enough” bid, an MEV oracle is created. The MEV is either <em>smoothed</em> between committee members or <em>burned</em> (smoothed over all <code>ETH</code> holders).</li>\n</ul>\n</li>\n<li>Slot-auction PBS\n<ul>\n<li><strong>Key ideas</strong> – Similar to block-auction PBS but instead sells the <a href=\"https://mirror.xyz/0x03c29504CEcCa30B93FF5774183a1358D41fbeB1/CPYI91s98cp9zKFkanKs_qotYzw09kWvouaAa9GXBrQ\" rel=\"noopener nofollow ugc\">slot</a> to the builder market ~without~ requiring a commitment to a specific block – sometimes referred to as block space futures. By not requiring the builders to commit to a particular block, future slots may be auctioned off ahead of time rather than waiting until the slot itself.</li>\n</ul>\n</li>\n<li>Partial-block auction\n<ul>\n<li><strong>Key ideas</strong> – Allows a more flexible unit for selling block-space. Instead of selling the full block or slot, allow proposers to sell <em>some</em> of their block, e.g., the top-of-block (which is the most valuable for arbitrageurs), while retaining the rest-of-block construction. Live in other Proof-of-Stake networks, e.g., Jito’s <a href=\"https://jito-labs.gitbook.io/mev/searcher-resources/block-engine\" rel=\"noopener nofollow ugc\">block engine</a> and Skip <a href=\"https://docs.skip.money/blocksdk/lanes/existing-lanes/mev\" rel=\"noopener nofollow ugc\">MEV lane</a>.</li>\n</ul>\n</li>\n<li>APS-burn a.k.a. Execution Auction (nomenclature in flux &amp; the EA acronym has a bit of … <a href=\"https://en.wikipedia.org/wiki/Effective_altruism\" rel=\"noopener nofollow ugc\">baggage</a>)\n<ul>\n<li><strong>Key ideas</strong> – A brand new proposal from <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\" rel=\"noopener nofollow ugc\">Barnabé</a> which compels a proposer to auction off the block building and proposing rights ahead of time. The slot is sold ex-ante (a fixed amount of time in advance) without requiring a commitment to a specific block; a committee (à la mev-burn/smoothing) enforces the winning bid is sufficiently large.</li>\n</ul>\n</li>\n</ul>\n<p>We know, we know – it’s a lot to keep track of; it’s nearly a full-time job just to stay abreast of all these acronyms. But by comparing these proposals along the axes laid out by the <code>W^4H questions</code>, we can see how they all fit together as different parts of the same design space.</p>\n<h4><a name=\"applying-w4h-a-comparative-analysis-9\" class=\"anchor\" href=\"https://ethresear.ch#applying-w4h-a-comparative-analysis-9\"></a>Applying W^4H: a comparative analysis</h4>\n<p>For each of the five <code>W^4H questions</code>, we describe different trade-offs made by the aforementioned proposals. For brevity, we don’t analyze each question for each proposal; we instead focus on highlighting key differences arising from each line of questioning.</p>\n<ul>\n<li><em><strong>Who</strong> controls the outcome of the game?</em>\n<ul>\n<li>With execution tickets, the protocol dictates the winner of the game by randomly choosing from the set of ticket holders.</li>\n<li>With block-auction PBS, the proposer (protocol-elected leader) unilaterally chooses the winner of the game.</li>\n<li>With mev-burn, the proposer still chooses the winner, but the winning bid is constrained by the committee, reducing the proposer’s agency.</li>\n</ul>\n</li>\n<li><em><strong>What</strong> is the good that players are competing for?</em>\n<ul>\n<li>With block-auction PBS, the entire block is sold, but bids must commit to the block contents.</li>\n<li>With slot-auction PBS, the entire block is sold, but without any specific block commitment.</li>\n<li>With partial-block PBS, a portion of the block is sold.</li>\n</ul>\n</li>\n<li><em><strong>When</strong> does the game take place?</em>\n<ul>\n<li>With block-auction PBS, the auction takes place during the slot.</li>\n<li>With slot-auction PBS, the auction may take place many slots (e.g., 32) ahead of time because there is no block-content commitment.</li>\n<li>With execution tickets, the tickets are assigned to slots at a fixed lookahead after being sold ex-ante by the protocol (more on the ticket-selling model we use below).</li>\n</ul>\n</li>\n<li><em><strong>Where</strong> does the MEV oracle come from?</em>\n<ul>\n<li>With mev-burn/smoothing, a committee enforces that a sufficiently large bid is selected as the winner; this bid size is the oracle.</li>\n<li>With execution tickets, the total money spent on tickets serves as the oracle.</li>\n</ul>\n</li>\n<li><em><strong>How</strong> is the block builder chosen?</em>\n<ul>\n<li>In block-auction PBS, any outsourced block production has a winner-take-all allocation, with the highest bidder granted the block-building rights.</li>\n<li>Within execution tickets, many different allocation mechanisms can be implemented. In the original proposal, for example, where a random ticket is selected, the mechanism is ‘proportional-to-ticket-count’; in this case, the highest paying bidder (whoever holds the most tickets) merely has the highest probability of being selected, meaning they are not guaranteed the block building rights.</li>\n<li>If that (^) seems opaque, don’t worry. The entire following section is a deep dive into these different allocations.</li>\n</ul>\n</li>\n</ul>\n<h4><a name=\"motivational-interlude-10\" class=\"anchor\" href=\"https://ethresear.ch#motivational-interlude-10\"></a>Motivational interlude</h4>\n<p>Before continuing, let’s review our original motivation for block-space distribution mechanisms:</p>\n<blockquote>\n<p><strong>Block-space distribution mechanisms aim to preserve the homogeneity of validator rewards in the presence of MEV.</strong></p>\n</blockquote>\n<p>This is a great grounding, but if that is our only goal, why not just continue using <code>mev-boost</code>? Well, remember that <code>mev-boost</code> has some negative side effects that we probably want the endgame protocol to be resilient against. We highlight four other potential design goals of a block-space distribution mechanism:</p>\n<ol>\n<li><em>Encouraging a wider set of builders to be competitive.</em></li>\n<li><em>Allow validators and builders to interact trustlessly.</em></li>\n<li><em>Incorporating MEV-awareness into the base layer protocol.</em></li>\n<li><em>Removing MEV from validator rewards altogether.</em></li>\n</ol>\n<p>Note that while (1, 2, &amp; 3) appear relatively uncontroversial (*knock on wood*), (4) is more opinionated (and requires (3) as a pre-condition). The protocol may hope to eliminate MEV rewards from validator rewards as a means to ensure that the consensus layer rewards (what the protocol controls) more accurately reflect the full incentives of the system. This also ties into questions around staking macro-economics and the idea of <a href=\"https://ethresear.ch/t/endgame-staking-economics-a-case-for-targeting/18751\">protocol</a>, <a href=\"https://notes.ethereum.org/@mikeneuder/iiii\" rel=\"noopener nofollow ugc\">issuance</a> – a much more politically-charged discussion. On the other hand, MEV rewards are a byproduct of network usage; MEV could instead be seen as a <a href=\"https://www.nano210.blog/infinite-blockspace-equilibrium/\" rel=\"noopener nofollow ugc\">value capture</a> mechanism for the native token. We aren’t trying to address these questions here but rather explore how different answers to them would shape the design of the mechanism.</p>\n<p>What can we do at the protocol-design level to align with these desiderata? As laid out above, there are many trade-offs to consider, but in the following section, we examine “<em>How is the block builder chosen?</em>” to improve on some of these dimensions.</p>\n<h3><a name=\"h-3-interrogation-11\" class=\"anchor\" href=\"https://ethresear.ch#h-3-interrogation-11\"></a>(3) – Interrogation</h3>\n<p><strong>Editorial note:</strong> As mentioned earlier, this section is longer and more technical than the others – feel free to skip to <a href=\"https://ethresear.ch#h-4-extrapolation-18\">Section 4</a> if you are time (or interest) constrained!</p>\n<p><strong>Section goal:</strong> <em>To demonstrate the quantitative trade-off between MEV-oracle quality and the “fairness” of the two most familiar approaches to allocating block proposer rights, which we call <code>Proportional-all-pay</code> and <code>Winner-take-all</code>.</em></p>\n<p>We aim to accomplish this with the following subsections:</p>\n<ul>\n<li><a href=\"https://ethresear.ch#preliminaries-12\"><em>Preliminaries</em></a> – Motivate the fixed-price, unlimited-quantity execution ticket sale mechanism we use.</li>\n<li><a href=\"https://ethresear.ch#model-13\"><em>Model</em></a> - Introduce the notation needed to analyze the model.</li>\n<li><a href=\"https://ethresear.ch#familiar-allocation-mechanisms-14\"><em>Familiar allocation mechanisms</em></a> - Describe the <code>Proportional-all-pay</code> and <code>Winner-take-all</code> mechanisms using the established framework.</li>\n<li><a href=\"https://ethresear.ch#comparing-the-outcomes-15\"><em>Comparing the outcomes</em></a> - Calculate the resulting equilibria in a two-player example.</li>\n<li><a href=\"https://ethresear.ch#aside-1-calculating-equilibrium-bids-16\"><em>Aside #1: Calculating equilibrium bids</em></a> - Derive the equilibria in the general case.</li>\n<li><a href=\"https://ethresear.ch#aside-2-tullock-contests-17\"><em>Aside #2: Tullock Contests</em></a> - Contextualize the model as a Tullock Contest and draw connections to the existing literature.</li>\n</ul>\n<p>Let’s <a href=\"https://youtu.be/GLsCR2RMBak?t=119\" rel=\"noopener nofollow ugc\">dig</a> in.</p>\n<h4><a name=\"preliminaries-12\" class=\"anchor\" href=\"https://ethresear.ch#preliminaries-12\"></a>Preliminaries</h4>\n<p>Before diving into the space of allocation mechanisms made possible with execution tickets, we must first set up the model. Consider a protocol that sells execution tickets with the following rules:</p>\n<ol>\n<li>the price is fixed at <code>1 WEI</code>, and</li>\n<li>unlimited tickets can be bought and sold from the protocol.</li>\n</ol>\n<p><strong>Note:</strong> <em>this version of execution tickets is effectively equivalent to creating two disjoint staking mechanisms – one each for attesting and proposing. Small changes in the design, e.g., not allowing tickets to be resold to the protocol, may have massive implications for how the market plays out, but that isn’t the focus of this article. Instead, we narrowly explore the question of block-space allocation, given an existing ticket holder set.</em></p>\n<p>Notably, the set of block producers is disjoint (from the protocol’s perspective) from the set of attesters – individuals must select which part of the protocol they participate in by deciding whether to stake or buy tickets. The secondary ticket market may evolve as a venue for selling the building rights just in time to the builder market (as is done in <code>mev-boost</code> today).</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/4/e4f36ef0b6e6e5d80c4a923d9465bf74212af039.png\" data-download-href=\"https://ethresear.ch/uploads/default/e4f36ef0b6e6e5d80c4a923d9465bf74212af039\" title=\"upload_45a1fa23182dd6a28c2c07dc2479f150\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/4/e4f36ef0b6e6e5d80c4a923d9465bf74212af039_2_486x499.png\" alt=\"upload_45a1fa23182dd6a28c2c07dc2479f150\" data-base62-sha1=\"wFopQiId1m57tNMc332Tz7uwpvj\" width=\"486\" height=\"499\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/4/e4f36ef0b6e6e5d80c4a923d9465bf74212af039_2_486x499.png, https://ethresear.ch/uploads/default/optimized/3X/e/4/e4f36ef0b6e6e5d80c4a923d9465bf74212af039_2_729x748.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/e/4/e4f36ef0b6e6e5d80c4a923d9465bf74212af039_2_972x998.png 2x\" data-dominant-color=\"F9F7F9\"></a></div><br>\n<span class=\"math\">\\cdot</span><br>\nSeparately, builders may choose to interact directly with the protocol by buying execution tickets themselves, but their capital may be better utilized as active liquidity, capturing arbitrage across trading venues. Thus, they may prefer buying block space on the secondary market during the just-in-time auction instead.<p></p>\n<p>Why restrict ourselves to this posted-price-unlimited-supply mechanism? Two reasons:</p>\n<ol>\n<li><em>It’s not clear that a sophisticated market could even be implemented in the consensus layer.</em> The clients are optimized to allow any validator with consumer-grade hardware to participate in the network. This desideratum may be incompatible with fast auctions, bonding curves, or other possible ticket-selling mechanisms. Questions around how many tickets are sold, the MEV around onchain ticket-sale inclusion (meta-MEV?!), and the timing (and timing games) of ticket sales seem closer to execution layer concerns than something that could reasonably be implemented by Ethereum consensus while keeping hardware requirements limited.</li>\n</ol>\n<blockquote>\n<p>“<em>One may imagine the inclusion of ET market-related transactions to possibly induce MEV, whether these transactions are included in the beacon block or the execution payload.</em>” – <strong>Barnabé in</strong> “<a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\" rel=\"noopener nofollow ugc\"><em>More pictures about proposers and builders</em></a>.”</p>\n</blockquote>\n<ol start=\"2\">\n<li><em>Even if (a big if) the protocol ~could~ implement a more rigid ticket-selling market, the design space for such a mechanism is immense.</em> Many potential pricing mechanisms have been discussed, e.g., bonding curves, 1559-style dynamic pricing, auctions, etc.; making general claims about these remains outside the scope of this post.</li>\n</ol>\n<p>Therefore, we focus on the “unlimited, 1 <code>WEI</code> posted-price” version of execution tickets, where the protocol internalizes minimal complexity. With this framing, we can ask the question that is probably <a href=\"https://youtu.be/5KNEZJ6KkLI?t=53\" rel=\"noopener nofollow ugc\">burning</a> you up inside, “<em>given a set of execution ticket holders, how should the winner be selected?</em>” … sounds easy enough, right? Turns out there is a good deal we can say, even with such a seemingly simple question; let’s explore a few different options.</p>\n<h4><a name=\"model-13\" class=\"anchor\" href=\"https://ethresear.ch#model-13\"></a>Model</h4>\n<p>Consider the repeated game of buying execution tickets to earn MEV rewards for your investment.</p>\n<ul>\n<li>During each period, each player effectively submits a bid, which is the number of tickets they buy. Denote the vector of bids by <span class=\"math\">\\mathbf{b}</span>, where <span class=\"math\">b_i</span> is the bid of the <span class=\"math\">i^{th}</span> player.</li>\n<li>Each player has a valuation for winning the block production rights. Denote the vector of valuations by <span class=\"math\">\\mathbf{v}</span>, where <span class=\"math\">v_i</span> is the value of the <span class=\"math\">i^{th}</span> player.</li>\n<li>At each time step, an allocation mechanism determines each player’s allocation based on the vector of bids. Assuming bidders are risk-neutral (i.e., don’t care between winning 2 <code>ETH</code> with probability <span class=\"math\">0.5</span> vs. 1 <code>ETH</code> with probability <span class=\"math\">1</span>), we can equivalently say that they are each allocated “some portion” of the block, which can be alternatively be interpreted as “the probability that they win a given block.” In an <span class=\"math\">n</span> player game, let <span class=\"math\">x: \\mathbf{b} \\rightarrow [0,1]^n</span> denote the map implementing an allocation mechanism, where <span class=\"math\">x_i(\\mathbf{b})</span> is the allocation of the <span class=\"math\">i^{th}</span> player, under the constraint that <span class=\"math\">\\sum_i x_i(\\mathbf{b}) =1</span> (i.e., the mechanism fully allocates).</li>\n<li>Each player’s payment is collected at each round. Let <span class=\"math\">p: \\mathbf{b} \\rightarrow \\mathbb{R}_{\\geq 0}^n</span> denote the payment rule determined by the set of bids, where <span class=\"math\">p_i(\\mathbf{b})</span> is the payment of the <span class=\"math\">i^{th}</span> player.</li>\n<li>The utility function of each player in the game is, <span class=\"math\">U_i(\\mathbf{b}) = v_i x_i(\\mathbf{b}) - p_i(\\mathbf{b})</span>. The intuition is that “a player’s utility is their value for winning multiplied by the amount they won, less their payment.”</li>\n</ul>\n<h4><a name=\"familiar-allocation-mechanisms-14\" class=\"anchor\" href=\"https://ethresear.ch#familiar-allocation-mechanisms-14\"></a>Familiar allocation mechanisms</h4>\n<p>Consider two (quite different) possible mechanisms.</p>\n<p><code>Proportional-all-pay</code> (a slight modification to the <a href=\"https://ethresear.ch/t/execution-tickets/17944\">original</a> execution tickets proposal)</p>\n<ul>\n<li>During each round, all players submit a bid. Denote the vector of bids by <span class=\"math\">\\mathbf{b}</span>.</li>\n<li>The probability that a bid wins the game is the value of the bid divided by the sum of all the values of the bids,</li>\n</ul>\n<div class=\"math\">\nx_i(\\mathbf{b}) = \\frac{b_i}{\\sum_j b_j}.\n</div>\n<ul>\n<li>Each player pays their bid, no matter the outcome of the game (hence “all-pay”), <span class=\"math\">p_i(\\mathbf{b}) = b_i.</span><a href=\"https://ethresear.ch#fn1dst\"><span class=\"math\">^{[1]}</span></a><a name=\"fn1\" href=\"https://ethresear.ch\"></a></li>\n</ul>\n<p><code>Winner-take-all</code> (the current implementation of PBS)</p>\n<ul>\n<li>During each round, all players submit a bid. Denote the vector of bids by <span class=\"math\">\\mathbf{b}</span>.</li>\n<li>The highest bidder wins the game, so <span class=\"math\">x_i(\\mathbf{b}) = 1</span> if <span class=\"math\">\\max(\\mathbf{b}) = b_i</span> and <span class=\"math\">x_i(\\mathbf{b}) = 0</span> otherwise (where ties are broken in favor of the lower index bidder, say).</li>\n<li>Only the winning player pays the value of their bid, so <span class=\"math\">p_i(\\mathbf{b}) = b_i</span> if <span class=\"math\">\\max(\\mathbf{b}) = b_i</span> and <span class=\"math\">p_i(\\mathbf{b}) = 0</span> otherwise (same tie-breaking as above).<a href=\"https://ethresear.ch#fn2dst\"><span class=\"math\">^{[2]}</span></a><a name=\"fn2\" href=\"https://ethresear.ch\"></a></li>\n</ul>\n<h4><a name=\"comparing-the-outcomes-15\" class=\"anchor\" href=\"https://ethresear.ch#comparing-the-outcomes-15\"></a>Comparing the outcomes</h4>\n<p>To demonstrate the different outcomes from these two mechanisms, consider the two-player game where <code>Player 1</code> has a valuation of <span class=\"math\">v_1 = 4</span> and <code>Player 2</code> has a valuation of <span class=\"math\">v_2 = 2.</span> (We consider a complete information setting in which the individual values are common knowledge. To see how the equilibria bid is calculated and for extended discussion, see <a href=\"https://ethresear.ch#aside-1-calculating-equilibrium-bids-16\">Aside 1</a>.)</p>\n<ul>\n<li><strong><code>Proportional-all-pay</code> outcome:</strong>\n<ul>\n<li>Equilibrium Bids: <span class=\"math\">\\qquad\\,\\,\\,\\;\\;\\; b_1 = 8/9</span>, <span class=\"math\">\\,b_2 = 4/9</span></li>\n<li>Equilibrium Allocations: <span class=\"math\">\\;\\;\\; x_1 = 2/3</span>, <span class=\"math\">x_2 = 1/3</span></li>\n<li>Equilibrium Payments: <span class=\"math\">\\;\\;\\;\\; p_1 = 8/9</span>, <span class=\"math\">\\,p_2 = 4/9</span></li>\n</ul>\n</li>\n</ul>\n<p>This all should feel intuitively correct; with <span class=\"math\">v_1 = 2 \\cdot v_2</span> (<code>Player 1</code> has <code>2x</code> the value for the block), <code>Player 1</code> bids, receives and pays twice as much as <code>Player 2</code>.</p>\n<ul>\n<li><strong><code>Winner-take-all</code> outcome:</strong>\n<ul>\n<li>Equilibrium Bids: <span class=\"math\">\\qquad\\,\\,\\,\\;\\;\\; b_1 = 2+\\epsilon</span>, <span class=\"math\">b_2 = 2</span></li>\n<li>Equilibrium Allocations: <span class=\"math\">\\;\\;\\; x_1 = 1</span>, <span class=\"math\">\\quad\\;\\; x_2 = 0</span></li>\n<li>Equilibrium Payments: <span class=\"math\">\\;\\;\\;\\,\\, p_1 = 2+\\epsilon</span>, <span class=\"math\">p_2 = 0</span></li>\n</ul>\n</li>\n</ul>\n<p>This is pretty different. <code>Player 1</code> bids and pays just over <code>Player 2</code>’s value (we use <span class=\"math\">\\epsilon</span> to denote a small amount), receiving the entire allocation. <code>Player 2</code> receives nothing and pays nothing.<a href=\"https://ethresear.ch#fn3dst\"><span class=\"math\">^{[3]}</span></a><a name=\"fn3\" href=\"https://ethresear.ch\"></a></p>\n<p>Now consider the “revenue” (or the sum of the bids collected by the mechanism) generated from each case:</p>\n<ul>\n<li><strong><code>Proportional-all-pay</code> revenue:</strong> <span class=\"math\">b_1 + b_2 = 4/3</span></li>\n<li><strong><code>Winner-take-all</code> revenue:</strong> <span class=\"math\">\\qquad\\quad\\,\\,\\,\\;\\;\\;\\; b_1 = 2+\\epsilon</span></li>\n</ul>\n<p><code>Winner-take-all</code> has better revenue, corresponding to a more accurate MEV oracle (and thus more MEV burned or smoothed by the protocol) than <code>Proportional-all-pay</code>. Intuitively, by allocating block-production rights to players with lower values (as <code>Proportional-all-pay</code> does), we forgo revenue we would have received had we simply allocated the entire rights to the player with the highest value. We point the interested reader to <a href=\"https://ethresear.ch#aside-1-calculating-equilibrium-bids-16\">Aside 1</a> for a more complete treatment.</p>\n<p>Another factor to consider is the “fairness” or “distribution” of the allocation mechanism. For example, suppose we agree on the metric: <span class=\"math\">\\text{fairness} = \\sqrt{x_1 \\cdot x_2}</span> (we use the geometric mean because if <span class=\"math\">x_1 + x_2</span> has a fixed sum, the geometric mean is maximized at <span class=\"math\">x_1 = x_2</span> and zero if either <span class=\"math\">x_1,x_2</span> is zero). Now, let’s look at the fairness outcomes of the two candidate mechanisms:</p>\n<ul>\n<li><strong><code>Proportional-all-pay</code> fairness:</strong> <span class=\"math\">\\sqrt{1/3 \\cdot 2/3} \\approx 0.471</span></li>\n<li><strong><code>Winner-take-all</code> fairness:</strong> <span class=\"math\">\\qquad\\qquad\\;\\,\\;\\sqrt{1 \\cdot 0} = 0</span></li>\n</ul>\n<p>Here, the “performance” of the two mechanisms flips – the <code>Winner-take-all</code> is <em>less fair</em> because <code>Player 2</code> has no chance of winning the game with a lower value. In the <code>Proportional-all-pay</code>, <code>Player 2</code> can hope to win some blocks despite bidding a lower value. As another example, consider the case where <span class=\"math\">v_1=v_2+\\epsilon</span>. The <code>Winner-take-all</code> mechanism allocates all the rights to <code>Player 1</code>, while the <code>Proportional-all-pay</code> splits the rights approximately in half.</p>\n<blockquote>\n<p>Brief note: why might the protocol care about fairness? In a decentralized protocol, a single actor having too much power undermines the credible neutrality of the system. As such, the protocol may be willing to “pay” (in the form of reduced revenue) to ensure that a resource is more evenly distributed among players. Alternatively, we could consider this a measure of “entropy” or even simply randomness being injected into the outcome of the game to try to reduce the influence the most dominant player can have.</p>\n</blockquote>\n<p>This leads to the punchline from this small example: <strong>a fundamental trade-off exists between MEV-oracle quality and fairness.</strong> The <code>Proportional-all-pay</code> mechanism (and hence the original execution tickets proposal) is fairer because both players win the game with some probability, incentivizing them each (but more importantly, the higher value player) to <a href=\"https://en.wikipedia.org/wiki/Bid_shading\" rel=\"noopener nofollow ugc\">shade</a> their bid accordingly, lowering the revenue, and thus the MEV-oracle accuracy, of the mechanism. The first price mechanism elicits higher bids since bidders only pay if they win the entire block production rights, increasing the revenue, but this <code>Winner-take-all</code> dynamic makes the allocation less fair.</p>\n<p><em>Open question: is <code>Proportional-all-pay</code> an “optimal” Sybil-proof mechanism?</em> In the permissionless setting, we only consider Sybil-proof mechanisms, where a player doesn’t benefit from splitting their bid into multiple identities. We posit that the <code>Proportional-all-pay</code> mechanism sits in the <a href=\"https://en.wikipedia.org/wiki/Habitable_zone\" rel=\"noopener nofollow ugc\">Goldilock’s Zone</a> of a Sybil-proof mechanism that gets both good revenue/MEV-oracle accuracy and fairness. We leave as an interesting open problem to determine the extent to which the <code>Proportional-all-pay</code> mechanism’s “optimality” (e.g., we were unable to find another Sybil-proof mechanism that dominates it in both revenue and fairness).</p>\n<h4><a name=\"aside-1-calculating-equilibrium-bids-16\" class=\"anchor\" href=\"https://ethresear.ch#aside-1-calculating-equilibrium-bids-16\"></a>Aside <span class=\"hashtag-raw\">#1</span> – Calculating equilibrium bids</h4>\n<p><a href=\"https://ethresear.ch#h-4-extrapolation-18\">Convenience link</a> to skip to the conclusion for the less-keen reader <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>In the numerical example above, we provide the equilibrium bids for the <code>Winner-take-all</code> and <code>Proportional-all-pay</code> mechanisms without proof. How can these be determined generally (e.g., continuing to assume that bidders’ values are common knowledge)?<a href=\"https://ethresear.ch#fn4dst\"><span class=\"math\">^{[4]}</span></a><a name=\"fn4\" href=\"https://ethresear.ch\"></a></p>\n<p>The <code>Winner-take-all</code> is the familiar <a href=\"https://www.econport.org/econport/request?page=man_auctions_firstpricesealed\" rel=\"noopener nofollow ugc\">First Price Auction</a> setting. In such auctions, the complete information Pure-Nash equilibrium has the two highest-value bidders, each bidding the second-highest bidder’s value, with every other agent bidding below this. In effect, we expect that the highest-value bidder always wins while paying the second highest bidder’s value (we represent this simply as <span class=\"math\">b_1=b_2+\\epsilon</span>, though you could equivalently tie-break in favor of the higher-value player).</p>\n<p>In the <code>Proportional-all-pay</code> setting, each player has the utility,</p>\n<div class=\"math\">\n\\begin{align}\nU_i (\\mathbf{b}) &amp;= v_i \\cdot x_i(\\mathbf{b}) - b_i \\\\\n&amp;= v_i \\cdot \\frac{b_i}{\\sum_j b_j} - b_i.\n\\end{align}\n</div>\n<p>To determine the existence of a <a href=\"https://en.wikipedia.org/wiki/Nash_equilibrium\" rel=\"noopener nofollow ugc\">Pure Nash Equilibrium</a>, we consider each player’s first- and second-order conditions. Let <span class=\"math\">\\mathbf{b}^*</span> denote the candidate equilibrium set of bids.</p>\n<ol>\n<li><strong>First-order condition</strong>: <span class=\"math\">\\partial U_i / \\partial b_i (\\mathbf{b^*}) = 0</span> (or <span class=\"math\">\\partial U_i / \\partial b_i (\\mathbf{b^*}) \\leq 0, \\;\\forall i \\text{ s.t. } b^*_i=0</span>.)\n<ul>\n<li>Intuitively, this condition checks a non-zero-bidding player is (to first order) locally indifferent to small changes in its bid.</li>\n</ul>\n</li>\n<li><strong>Second-order condition</strong>: <span class=\"math\">\\partial^2 U_i / \\partial b_i^2 &lt; 0</span>\n<ul>\n<li>Intuitively, this condition ensures that the utility function is concave, implying that locally best responses are globally best for all players.</li>\n</ul>\n</li>\n</ol>\n<p>In our simple two-player example in the <code>Proportional-all-pay</code> setting, we have the following.</p>\n<div class=\"math\">\n\\begin{align}\n\\frac{\\partial U_1}{\\partial b_1}(\\mathbf{b}) = \\frac{v_1 b_2}{(b_1 + b_2)^2} - 1 = 0 \\; , \\quad \\frac{\\partial U_2}{\\partial b_2}(\\mathbf{b}) = \\frac{v_2 b_1}{(b_1 + b_2)^2} - 1 = 0\n\\end{align}\n</div>\n<p>This system can be solved to find the equilibrium bids, <span class=\"math\">\\mathbf{b}^*</span>,</p>\n<div class=\"math\">\n\\begin{align}\nb^*_1 = \\frac{v_1^2 v_2}{(v_1 + v_2)^2}\\; , \\quad b^*_2 = \\frac{v_2^2 v_1}{(v_1 + v_2)^2}.\n\\end{align}\n</div>\n<p>For our toy example, we have <span class=\"math\">v_1=4, \\; v_2=2 \\implies b_1^* = 32/36, \\; b_2^* = 16/36</span>. We can verify our first-order conditions</p>\n<div class=\"math\">\n\\begin{align}\n\\frac{4 \\cdot 16/36}{16/9} - 1 = 0 \\; , \\quad \\frac{2 \\cdot 32/36}{16/9} - 1 = 0 \\quad \\checkmark\n\\end{align}\n</div>\n<p>The second-order conditions can also be verified – this is left as an exercise for the reader <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<h4><a name=\"aside-2-tullock-contests-17\" class=\"anchor\" href=\"https://ethresear.ch#aside-2-tullock-contests-17\"></a>Aside <span class=\"hashtag-raw\">#2</span> – Tullock Contests</h4>\n<p><a href=\"https://youtu.be/lL2ZwXj1tXM?t=60\" rel=\"noopener nofollow ugc\">Last chance</a> to <a href=\"https://ethresear.ch#h-4-extrapolation-18\">skip to the conclusion</a>. (If you continue, by definition, you are the “interested reader” – <a href=\"https://www.youtube.com/watch?v=SC4xMk98Pdc&amp;t=35s\" rel=\"noopener nofollow ugc\">congrats</a>.)</p>\n<p>The model described above is established in the algorithmic game theory literature as a <a href=\"https://www.chapman.edu/ESI/wp/GeneralizedTullockContest-Sheremeta.pdf\" rel=\"noopener nofollow ugc\">Tullock Contest</a> – named for Gordon Tullock, who explored the idea in his seminal work, “<a href=\"https://link.springer.com/chapter/10.1007/978-3-540-79182-9_6\" rel=\"noopener nofollow ugc\"><em>Efficient Rent Seeking</em></a>.” He motivates this study by considering situations where investment is made before the outcome is known and where the investments might not transfer easily between participants, e.g., political spending.</p>\n<blockquote>\n<p>“<em>Suppose, for example, that we organize a lobby in Washington for the purpose of raising the price of milk and are unsuccessful. We cannot simply transfer our collection of contacts, influences, past bribes, and so forth to the steel manufacturers’ lobby. In general, our investments are too specialized, and, in many cases, they are matters of very particular and detailed goodwill to a specific organization. It is true that we could sell the steel lobby our lobbyists with their connections and perhaps our mailing list. But presumably, all these things have been bought by us at their proper cost. Our investment has not paid, but there is nothing left to transfer.</em>” – <strong>Gordon Tullock (1980)</strong></p>\n</blockquote>\n<p>This allocation mechanism has been applied in the previous crypto literature as well. Back in 2018 (ancient history in crypto-terms), Arnosti and Weinberg wrote “<a href=\"https://arxiv.org/abs/1811.08572\" rel=\"noopener nofollow ugc\"><em>Bitcoin: A natural oligopoly</em></a>,” which demonstrates that even small operating cost advantages among miners in a Proof-of-Work system lead to surprisingly concentrated equilibria. Similarly, Bahrani, Garimidi, and Roughgarden (these names sound familiar :D) explored the centralization effects of heterogeneity in block building skill in “<a href=\"https://arxiv.org/abs/2401.12120\" rel=\"noopener nofollow ugc\"><em>Centralization in Block Building and Proposer-Builder Separation</em></a>.” There appears to be a deep relationship between permissionless crypto-economic systems, where anti-Sybil mechanisms typically require financial investment for participation, and Tullock Contests – more on this <code>Soon™</code> (maybe).</p>\n<h3><a name=\"h-4-extrapolation-18\" class=\"anchor\" href=\"https://ethresear.ch#h-4-extrapolation-18\"></a>(4) – Extrapolation</h3>\n<p>Phew, thanks for hanging in there; let’s take stock of what we learned. <strong><a href=\"https://ethresear.ch#h-3-interrogation-11\">Section 3</a> demonstrates the fundamental trade-off between MEV-oracle accuracy and fairness of an instantiation of an execution ticket mechanism.</strong> A protocol may be willing to *pay* (in the form of reduced revenue) for more distribution and entropy with the goal of improving and maintaining the protocol’s credible neutrality. Further, using the model to derive equilibrium bids helps inform how we may expect agents to respond to various allocation and payment rules. <a href=\"https://youtu.be/Hm3JodBR-vs?t=21\" rel=\"noopener nofollow ugc\">Neat</a> – our framework led to some interesting and hopefully helpful insights! Maybe we can extend it to other problems in the space as well?</p>\n<p>Further questions that this specific model may help answer (returning to three of our <code>W^4 questions</code>):</p>\n<ul>\n<li><em><strong>What</strong> is the good that players are competing for?</em>\n<ul>\n<li>Can we extend the model dimensionality, allowing different players to have different values for portions of the block (e.g., an arbitrageur may disproportionately value the top of a block but have zero value for the remainder)?</li>\n</ul>\n</li>\n<li><em><strong>When</strong> does the game take place?</em>\n<ul>\n<li>How does the MEV-oracle accuracy change if the game takes place far ahead of time versus during the slot itself (e.g., pricing future expected MEV versus present realizable MEV)?</li>\n</ul>\n</li>\n<li><em><strong>How</strong> is the block builder chosen?</em>\n<ul>\n<li>Are there other Sybil-proof mechanisms that dominate <code>Proportional-all-pay</code> in both revenue and fairness?</li>\n<li>Can we more formally characterize the fundamental trade-offs between revenue and fairness?</li>\n<li>Given the Sybil-proofness constraint, what alternative allocation and payment rules should be explored (e.g., Tullock contests where the allocation rule is parameterized by <span class=\"math\">\\alpha&gt;1</span> where <span class=\"math\">x_i = b_i^\\alpha / \\sum_j b_j^\\alpha</span>), and can we identify the optimal choice?</li>\n</ul>\n</li>\n</ul>\n<p>Zooming back out, other versions of the <code>W^4H questions</code> may require different models to reason about.</p>\n<ul>\n<li><em><strong>Who</strong> controls the outcome of the game?</em>\n<ul>\n<li>In the committee-enforced version of these mechanisms, how could collusive behavior emerge?</li>\n<li>If the just-in-time block auction continues to take place out-of-protocol, should we explicitly describe the secondary market?</li>\n</ul>\n</li>\n<li><em><strong>When</strong> does the game take place?</em>\n<ul>\n<li>How critical is network latency when considering lookahead block-space sales versus same-slot? Is it worth modeling the <a href=\"https://dl.acm.org/doi/pdf/10.1145/42282.42283\" rel=\"noopener nofollow ugc\">partially-synchronous</a> setting?</li>\n<li>How do block builder valuations change if multi-slot MEV is feasible?</li>\n</ul>\n</li>\n<li><em><strong>Where</strong> does the MEV oracle come from?</em>\n<ul>\n<li>If it comes from the committee, are there incentives for committee members to behave dishonestly?</li>\n<li>Do such incentives depend on whether protocol-captured MEV is burned or smoothed?</li>\n</ul>\n</li>\n</ul>\n<p>As per usual, open questions abound, but we hope (a) <code>W^4H questions</code> help expand the understanding of block-space distribution mechanisms and (b) the deep dive into allocation mechanisms helps inform the potential design space of execution tickets.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/f/8f4ceb270ae099c612cbb2afb4958a9bea1b42d1.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/8f4ceb270ae099c612cbb2afb4958a9bea1b42d1\" title=\"upload_a24cdf5b513fb4e410700573687adcd6\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/f/8f4ceb270ae099c612cbb2afb4958a9bea1b42d1_2_690x493.jpeg\" alt=\"upload_a24cdf5b513fb4e410700573687adcd6\" data-base62-sha1=\"krH4GmXJutATDXVkFG65HsnaAi5\" width=\"690\" height=\"493\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/f/8f4ceb270ae099c612cbb2afb4958a9bea1b42d1_2_690x493.jpeg, https://ethresear.ch/uploads/default/optimized/3X/8/f/8f4ceb270ae099c612cbb2afb4958a9bea1b42d1_2_1035x739.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/f/8f4ceb270ae099c612cbb2afb4958a9bea1b42d1_2_1380x986.jpeg 2x\" data-dominant-color=\"625453\"></a></div><br>\n<sub><strong>^ <a href=\"https://youtu.be/WSLMN6g_Od4?t=92\" rel=\"noopener nofollow ugc\">The world once we figure out MEV.</a></strong></sub><p></p>\n<p>Excited to be here with y’all.</p>\n<p><em>— made with <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/heart.png?v=12\" title=\":heart:\" class=\"emoji\" alt=\":heart:\" loading=\"lazy\" width=\"20\" height=\"20\"> by mike, pranav, &amp; dr. tim roughgarden.</em></p>\n<hr>\n<h3><a name=\"footnotes-19\" class=\"anchor\" href=\"https://ethresear.ch#footnotes-19\"></a>footnotes</h3>\n<p><span class=\"math\">^{[1]}</span><a name=\"fn1dst\" href=\"https://ethresear.ch\"></a>: The “all-pay” feature is made possible by burning the price paid for each ticket. <a href=\"https://ethresear.ch#fn1\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/leftwards_arrow_with_hook.png?v=12\" title=\":leftwards_arrow_with_hook:\" class=\"emoji\" alt=\":leftwards_arrow_with_hook:\" loading=\"lazy\" width=\"20\" height=\"20\">︎</a></p>\n<p><span class=\"math\">^{[2]}</span><a name=\"fn2dst\" href=\"https://ethresear.ch\"></a>: The “winner-pay” version could be done by refunding all non-winning ticket holders their payment at the end of each round. <a href=\"https://ethresear.ch#fn2\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/leftwards_arrow_with_hook.png?v=12\" title=\":leftwards_arrow_with_hook:\" class=\"emoji\" alt=\":leftwards_arrow_with_hook:\" loading=\"lazy\" width=\"20\" height=\"20\">︎</a></p>\n<p><span class=\"math\">^{[3]}</span><a name=\"fn3dst\" href=\"https://ethresear.ch\"></a>: As mentioned earlier, simply refunding the non-winning tickets instantiates the “winner-pays” property. <a href=\"https://ethresear.ch#fn3\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/leftwards_arrow_with_hook.png?v=12\" title=\":leftwards_arrow_with_hook:\" class=\"emoji\" alt=\":leftwards_arrow_with_hook:\" loading=\"lazy\" width=\"20\" height=\"20\">︎</a></p>\n<p><span class=\"math\">^{[4]}</span><a name=\"fn4dst\" href=\"https://ethresear.ch\"></a>: This is primarily for tractability in calculating equilibria analytically. Although a strong assumption, it’s not unreasonable in the context of lookahead auctions where bidders might have established prior distributions on their competitor’s valuations. We also view the insights from studying the complete-information equilibria as valuable heuristics for how we may expect these mechanisms to behave in practice. <a href=\"https://ethresear.ch#fn4\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/leftwards_arrow_with_hook.png?v=12\" title=\":leftwards_arrow_with_hook:\" class=\"emoji\" alt=\":leftwards_arrow_with_hook:\" loading=\"lazy\" width=\"20\" height=\"20\">︎</a></p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/on-block-space-distribution-mechanisms/19764\">Read full topic</a></p>","link":"https://ethresear.ch/t/on-block-space-distribution-mechanisms/19764","pubDate":"Sat, 08 Jun 2024 12:42:54 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19764"},"source":{"@url":"https://ethresear.ch/t/on-block-space-distribution-mechanisms/19764.rss","#text":"On block-space distribution mechanisms"}},{"title":"The Preconfirmation Sauna","dc:creator":"The-CTra1n","category":"Architecture","description":"<h1><a name=\"the-preconfirmation-sauna-1\" class=\"anchor\" href=\"https://ethresear.ch#the-preconfirmation-sauna-1\"></a>The Preconfirmation Sauna</h1>\n<p><em>We are <a href=\"https://switchboard.nethermind.io/\" rel=\"noopener nofollow ugc\">Switchboard</a>, a Nethermind-backed team dedicated to answering the most pressing preconfirmation questions. Thanks to <a class=\"mention\" href=\"https://ethresear.ch/u/swapnilraj\">@swapnilraj</a>,<a class=\"mention\" href=\"https://ethresear.ch/u/tkstanczak\">@tkstanczak</a>,<a class=\"mention\" href=\"https://ethresear.ch/u/julian\">@Julian</a>,<a class=\"mention\" href=\"https://ethresear.ch/u/linoscope\">@linoscope</a>, and Michal Zajac for your helpful comments.</em></p>\n<p><em><strong>TL;DR:</strong> Decentralized preconfirmers come with significant tradeoffs that will likely make them impractical for the forseeable future. The preconfirmation sauna creates a repeated game amongst permissionless preconfirmers which incentivizes trust, specialization within these tradeoffs, innovation, as well as user-focused preconfirmation policies. More than this, the sauna provides a common interface for all entities in the preconfirmation supply chain to interact, simplifying the preconfirmation process. We believe this set of sauna-related health benefits can unlock preconfirmations.</em></p>\n<p>In the short time that we as an industry have been thinking about preconfirmations, <a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">more or less since November 2023</a>, several teams have emerged to compete for the title of “the preconfirmation protocol”. This is despite almost no shared understanding or appreciation for how a preconfirmer should behave, or how this behaviour should be incentivized.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/7/77482b8de0ad4950c6713b95d52d9508699a1a3b.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/77482b8de0ad4950c6713b95d52d9508699a1a3b\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/7/77482b8de0ad4950c6713b95d52d9508699a1a3b_2_517x291.jpeg\" alt=\"image\" data-base62-sha1=\"h1drs3g3BOZxpvFX3hFT2bZWkKD\" width=\"517\" height=\"291\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/7/77482b8de0ad4950c6713b95d52d9508699a1a3b_2_517x291.jpeg, https://ethresear.ch/uploads/default/optimized/3X/7/7/77482b8de0ad4950c6713b95d52d9508699a1a3b_2_775x436.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/7/7/77482b8de0ad4950c6713b95d52d9508699a1a3b_2_1034x582.jpeg 2x\" data-dominant-color=\"5E4A40\"></a></div><p></p>\n<p>This article outlines Switchboard’s vision for how this preconfirmation competition should play out: specifically, how it can be harnessed to encourage innovation without siloing off parts of the transaction supply chain, and how it can address technological barriers to preconfirmations including fair exchange (see Appendix for more details).</p>\n<p><strong>Goal:</strong> Leverage this emergent preconfirmation protocol competition to enable preconfirmations in what we call the preconfirmation sauna.</p>\n<p><strong>Non-goals:</strong></p>\n<ul>\n<li>Engineer the preconfirmation sauna immediately. The sauna needs preconfirmation protocols just like the preconfirmation protocols need the sauna. Until these protocols emerge, the sauna remains a vision. The engineering specifications will develop as the needs of everyone in the preconfirmation supply chain becomes clearer. In this sense, we are waiting for the rocks to heat up before adding water.</li>\n<li>Confuse the preconfirmation sauna with <a href=\"https://www.youtube.com/watch?v=jrm4ZUoj9xY&amp;list=PLJqWcTqh_zKHDFarAcF29QfdMlUpReZrR&amp;index=13\" rel=\"noopener nofollow ugc\">commit-boost.</a> Commit-boost is a mev-boost rewrite to allow L1 proposers to commit to certain restrictions on their blocks while still outsourcing partial block-building rights. We share their vision for a unified interface for proposer commitments, preconfirmations being a perfect example of a proposer commitment. The sauna isn’t just focused on a unified interface though; it brings competition, pricing policies, preconfirmer registration &amp; slashing conditions, trust, etc. In that sense, commit-boost will depend on the sauna to make preconfirmations a reality.</li>\n</ul>\n<h2><a name=\"the-multi-headed-hydra-of-preconfirmations-2\" class=\"anchor\" href=\"https://ethresear.ch#the-multi-headed-hydra-of-preconfirmations-2\"></a>The Multi-headed Hydra of Preconfirmations</h2>\n<p>The problem of offering preconfirmations is a multi-headed hydra. What makes a preconfirmer “good” or “bad” will depend on many factors including, but not limited to:</p>\n<ul>\n<li>Latency</li>\n<li>Throughput</li>\n<li>(Trusted) execution guarantees</li>\n<li>Privacy</li>\n<li>Cost</li>\n<li>Interoperability with other protocols</li>\n<li>Decentralization</li>\n<li>General trust</li>\n<li>Liveness/censorship resistance</li>\n<li>Ability to express intents</li>\n</ul>\n<p>Most of these factors have trade-offs, so deciding on a single preconfirmation protocol which somewhat specializes in a subset of these criteria would be a mistake at this early stage of preconfirmation development.</p>\n<h3><a name=\"encouraging-competition-3\" class=\"anchor\" href=\"https://ethresear.ch#encouraging-competition-3\"></a>Encouraging Competition</h3>\n<p>Beyond the warm fuzzy feelings we get from many permissionless preconfirmers, we need competing preconfirmers to incentivize competition and keep preconfirmation strategies honest and transparent. Although some preconfirmation guarantees require tradeoffs, e.g. cost vs latency, the benefits of repeated honest behaviour and its long-term access to the preconfirmation market/revenue has almost no trade-off considerations that come into play. Even in the fringe cases where malicious behaviour may have significant immediate profits for a preconfirmer, proposers can always opt-in to choosing entities whose reputational value dominates any such profits, e.g. Flashbots, Vitalik, etc. (even within this set of “trusted” entities, there will be other tradeoffs that must be considered).</p>\n<p>This out-of-the-sauna trust will be necessary as the demand for high-throughput, low-latency preconfirmations likely means we need to delegate preconfirmations temporarily to high-resource and/or centralized entities/committees. In the sauna, misbehaving preconfirmers can be reported and deprioritized by users and proposers, creating a significant disincentive for preconfirmers to act maliciously. As such, users and proposers can immediately begin to depend on the subjective parts of the preconfirmation supply chain such as pricing policies and expected response times that are necessary for preconfirmations to become a reality now.</p>\n<h2><a name=\"the-flaw-in-existing-approaches-4\" class=\"anchor\" href=\"https://ethresear.ch#the-flaw-in-existing-approaches-4\"></a>The flaw in existing approaches</h2>\n<p>The community has been semi-publicly focused on the infrastructure that enables a proposer to offer preconfirmations. There are 2 broad solutions in this regard:</p>\n<ul>\n<li>The based proposer commits to a specific preconfirmation protocol ahead of time. Most projects are looking at this. On its current trajectory, this is probably a “winner-takes-most” approach with each project trying to establish itself as the only game in town.</li>\n<li>The based rollup commits to a specific preconfirmation protocol ahead of time and this preconfirmation protocol is trusted to enable preconfirmations. If the preconfirmation protocol fails, liveness breaks.</li>\n</ul>\n<p>The endgame for both of these approaches requires the user and the proposer to trust a single preconfirmation protocol indefinitely. We see it as unacceptable to depend on the honest behaviour of a single preconfirmation protocol preconfirming all transactions for Ethereum.</p>\n<p>If all of the preconfirmation flow is coming through one specific preconfirmation protocol, this removes competition and places an entity that can rent-capture between Ethereum and its users. More than this, it is unlikely that an emergent preconfirmation protocol could/should be trusted without strong technical guarantees, or viable alternatives for users and validators to switch to. In this sense, trust is a powerful property for emerging technologies that can bridge technological barriers to key problems.</p>\n<p>With respect to preconfirmations, one such problem that trust can address is the fair exchange of preconfirmation requests and responses. In the Appendix, we discuss how the trust generated through the preconfirmation sauna offers a viable solution to the fair exchange problem.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/a/4a85e73316a1e964f707ca071b550976707e83f2.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/4a85e73316a1e964f707ca071b550976707e83f2\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/a/4a85e73316a1e964f707ca071b550976707e83f2_2_517x346.jpeg\" alt=\"image\" data-base62-sha1=\"aDgdzzzGuiRNNdWF6dVuKkWO8Iq\" width=\"517\" height=\"346\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/a/4a85e73316a1e964f707ca071b550976707e83f2_2_517x346.jpeg, https://ethresear.ch/uploads/default/optimized/3X/4/a/4a85e73316a1e964f707ca071b550976707e83f2_2_775x519.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/a/4a85e73316a1e964f707ca071b550976707e83f2_2_1034x692.jpeg 2x\" data-dominant-color=\"F8F8F8\"></a></div><br>\nThe current path to preconfirmations involves many protocols building by themselves, competing for a critical mass of validator adoption. Until that point, preconfirmation infrastructure will fragment until one emerges as dominant. This game ends with the best-backed/-connected protocol winning. This leads to an indefinite monopoly on the preconfirmation supply chain, which harms both competition and trust.<p></p>\n<h1><a name=\"enter-the-sauna-5\" class=\"anchor\" href=\"https://ethresear.ch#enter-the-sauna-5\"></a>Enter the Sauna.</h1>\n<p>From <a href=\"https://en.wikipedia.org/wiki/Finnish_sauna\" rel=\"noopener nofollow ugc\">Wikipedia</a>: “Saunas are strictly egalitarian places: no titles or hierarchies are used in the sauna.” Business is often done in saunas. If someone is ever caught misbehaving, people can choose not to sauna with them again.</p>\n<p>The preconfirmation sauna is completely agnostic to the preconfirmation protocols that exist within the sauna framework. To enter the preconfirmation sauna, preconfirmers and their respective protocols register as prospective preconfirmers in the system. Proposers then choose whichever preconfirmer(s) they like to delegate preconfirmation rights to.</p>\n<p>Although the intuition is that proposers would choose the preconfirmer paying the most for the opportunity, there are other factors at play. Proposers must trust the preconfirmer to broadcast all of the preconfirmations to the network ahead of/at block building time, depending on whether or not the preconfirmer is also the one building the final block. This is because preconfirmations almost certainly need proposer slashing conditions to prevent <a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">safety or liveness faults.</a> As such, a proposer risks being slashed by choosing an untrusted preconfirmer.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/5/65a590148c5dbc6e81dc2013a87d91f7d21ce4e0.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/65a590148c5dbc6e81dc2013a87d91f7d21ce4e0\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/5/65a590148c5dbc6e81dc2013a87d91f7d21ce4e0_2_517x286.jpeg\" alt=\"image\" data-base62-sha1=\"evcWm05gUbqjWUZMRvyEV4OE1Gg\" width=\"517\" height=\"286\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/5/65a590148c5dbc6e81dc2013a87d91f7d21ce4e0_2_517x286.jpeg, https://ethresear.ch/uploads/default/optimized/3X/6/5/65a590148c5dbc6e81dc2013a87d91f7d21ce4e0_2_775x429.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/6/5/65a590148c5dbc6e81dc2013a87d91f7d21ce4e0_2_1034x572.jpeg 2x\" data-dominant-color=\"D4CEBF\"></a></div><br>\nTo enable preconfirmations we need healthy competition among protocols. Importantly, this competition should not be over fragmenting users and validators, but over the quality of preconfirmations being offered. Competition over improved preconfirmation guarantees not only creates an incentive to act honestly, but also an incentive to innovate. The vision of the sauna is to ensure permissionless access to the preconfirmation game, and to leverage the competition and trust that this permissionlessness brings. For this to happen, switching between protocols needs to be seamless for everyone in the supply chain. Although this probably requires some standards, standards aren’t a necessity.<p></p>\n<h2><a name=\"everyone-to-the-sauna-6\" class=\"anchor\" href=\"https://ethresear.ch#everyone-to-the-sauna-6\"></a>Everyone to the Sauna.</h2>\n<p>If we want proposers and users to engage in specific preconfirmation protocols, we need trust. More than trust, there needs to be clear incentives for everyone to engage with one another.</p>\n<ol>\n<li><strong>Proposers want to use the preconfirmer.</strong> Proposers need to know that committing to a preconfirmation protocol will generate higher revenue than simply outsourcing building through something like mev-boost. This requires the preconfirmation protocols to be paying competitively for the right to preconfirm. Almost by definition, this can only be achieved through competition among independent protocols. Proposers also need to know with a high degree of confidence that a preconfirmer will maintain liveness and forward all preconfirmations to the network, and avoid any proposer slashing conditions. With a sauna full of preconfirmers, proposers can choose more robust preconfirmers with less failure and slashing risk at the expense of lost revenue. Proposers can also opt for riskier preconfirmers offering higher revenue. The choice is theirs!</li>\n<li><strong>Users want to use the preconfirmer.</strong> Fundamentally, preconfirmation revenue can only be generated through user submission of preconfirmation requests. This requires user to trust in the preconfirmation protocol. With only a single preconfirmation protocol, this likely leads to preconfirmation policies that favour the relayer and not the user or proposer. User adoption of minimally trusted preconfirmations (no/limited guarantees of inclusion, selection biases on inclusion, etc.) will likely be limited.  In that sense, we need competing preconfirmation protocols to incentivize trust in the preconfirmer and policies that favour the users.</li>\n</ol>\n<p>Trust breeds trust. With a sauna full of competing preconfirmation protocols, there are clear incentives to optimize preconfirmation policies and guarantees, including trust (recall the Repeated Preconfirmation Sauna Game), to secure selection from the proposer and the users.</p>\n<h2><a name=\"life-after-sauna-7\" class=\"anchor\" href=\"https://ethresear.ch#life-after-sauna-7\"></a>Life after Sauna</h2>\n<p>Importantly, the use of the sauna isn’t necessary. Proposers can communicate directly with, and commit to, their preferred preconfirmer outside of the sauna. We still imagine an endgame where there is some preconfirmer that trustlessly provides “perfect” preconfirmations.</p>\n<h1><a name=\"conclusion-8\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-8\"></a>Conclusion</h1>\n<p>Until the perfect preconfirmation protocol emerges, protocols need to compete, experiment and innovate while still enabling preconfirmations. More than this, the ability to delegate, send, and receive preconfirmations should be as simple and standardized as possible. To do this, a credibly neutral platform is essential. This is what we envision for the sauna. We look forward to seeing you in there.</p>\n<h3><a name=\"call-to-action-9\" class=\"anchor\" href=\"https://ethresear.ch#call-to-action-9\"></a>Call to Action</h3>\n<p>At Switchboard, we aren’t just building therapeutic wooden structures. We’re also working on improving the preconfirmation protocols themselves. Although we believe preconfirmations could probably be offered along Justin’s timeline of this year, with help from the sauna, <a href=\"https://ethresear.ch/t/the-preconfirmation-sauna/19762#the-multi-headed-hydra-of-preconfirmations-2\">the multi-headed hydra of preconfirmations</a> must be tackled. Preconfirmation RnD, to which Switchboard is committed, will be vital in this regard.</p>\n<h2><a name=\"appendix-the-fair-exchange-problem-a-sauna-case-study-10\" class=\"anchor\" href=\"https://ethresear.ch#appendix-the-fair-exchange-problem-a-sauna-case-study-10\"></a>Appendix. The Fair Exchange Problem: A Sauna Case Study</h2>\n<p>There are many issues that a preconfirmation protocol must address to be considered viable, <a href=\"https://ethresear.ch/t/strawmanning-based-preconfirmations/19695\">some of which are outlined here through a strawman framing of a preconfirmation protocol.</a> <a href=\"https://x.com/_julianma/status/1796552412687155320\" rel=\"noopener nofollow ugc\">One of the key components needed for preconfirmations is the fair exchange of preconfirmation requests</a> from users and responses, the preconfirmations, from the preconfirmers.</p>\n<p>Fair exchange is a hard problem. Users want to get the strongest possible guarantees of inclusion/execution when they submit a request, while preconfirmers want to give the weakest guarantees of inclusion/execution, retaining as much optionality as they can until the block must be built. The most well-known solution we have for fair exchange, albeit for block building, is <a href=\"https://boost.flashbots.net/\" rel=\"noopener nofollow ugc\">mev-boost</a>. This solution hinges on trust in the relayers that execute the fair exchange of blocks between block builders and block proposers. This game started out with a single trusted Flashbots relayer, but now many trusted relayers exist. Some builders even run their own relayer, most notably <a href=\"https://docs.titanrelay.xyz/\" rel=\"noopener nofollow ugc\">Titan</a>. Doesn’t this break the fair exchange guarantees of a trust intermediary? No!</p>\n<p>Titan relay have a significant incentive to never betray the trust of L1 proposers, and indirectly, builders using the Titan relay. With the Titan relay, Titan builder has a clear advantage compared to submitting blocks to any other relay, as Titan builder bids can be updated much quicker at the Titan relay than if the bids needed to first be relayed to an external relay. Furthermore, if any Titan misbehaviour is ever detected (or even reasonably suspected), proposers will stop trusting, listening to, and selecting the Titan relayer. Consequently, Titan would probably lose the edge they get from relaying their own blocks forever if a single misbehaviour is ever detected. This is incredibly powerful. This is the <em>Repeated Sauna Game.</em></p>\n<p>The Repeated Sauna Game can also be played between preconfirmers. Some protocols may pride themselves on trustless approaches to the fair exchange problem: something like a censorship-resistant input tape with strong data-availability guarantees. Unfortunately, this will come at latency, throughput, and cost tradeoffs. In that sense, users and proposers are probably happy to accept guarantees from the Titan of preconfirmations, even if that currently means a centralized entity with no formal guarantees of fair exchange. Thanks to the Repeated Preconfirmation Sauna Game, Titan preconfirmer has just as much to lose, if not more, from misbehaving when offering preconfirmations. With preconfirmations, the preconfirmer will be able to capture revenue from preconfirming, albeit within the bounds of the ordering and execution policies that they commit to offering users and proposers. Thus, the Repeated Preconfirmation Sauna Game has tangible incentives to keep preconfirmers behaving honestly, enabling fair exchange, among many other services where some amount of trust can bridge current technological barriers.</p>\n<p>To summarize, the Repeated Preconfirmation Sauna Game establishes dependable economic trust among rational preconfirmers through:</p>\n<ul>\n<li>The existence of alternative rational and competitive preconfirmers.</li>\n<li>The monitoring of preconfirmer behaviour by many independent observers; users, wallets, proposers, other preconfirmers, etc.</li>\n<li>Reputation and eligibility for future, likely increasing, revenue outweighing short-term incentives to deviate.</li>\n</ul>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/the-preconfirmation-sauna/19762\">Read full topic</a></p>","link":"https://ethresear.ch/t/the-preconfirmation-sauna/19762","pubDate":"Fri, 07 Jun 2024 17:15:40 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19762"},"source":{"@url":"https://ethresear.ch/t/the-preconfirmation-sauna/19762.rss","#text":"The Preconfirmation Sauna"}},{"title":"Censorship Resistance Through Game Theory","dc:creator":"antonydenyer","category":"Block proposer","description":"<blockquote>\n<p>tldr; relays should divulge more metadata about the block so that validators can make more informed decisions that align with their preferences</p>\n</blockquote>\n<blockquote>\n<p><em>Thanks to <a class=\"mention\" href=\"https://ethresear.ch/u/simbro\">@simbro</a> <a class=\"mention\" href=\"https://ethresear.ch/u/mmp\">@mmp</a> for early feedback</em></p>\n</blockquote>\n<p>Censorship resistance is a fundamental property that underpins the decentralised nature of blockchain networks and ensures the integrity and accessibility of transactions within the system. While the threat of “hard censorship” is well understood, the challenges faced by preventing “soft censorship” resistance are more nuanced.</p>\n<p>“Soft censorship” involves delaying or slowing down the propagation and inclusion of valid transactions. It could be accidental or deliberate; either way, it disrupts the normal flow of transactions, negatively impacts execution quality and harms user experience.</p>\n<p>“Hard censorship” means the complete and permanent prevention or blocking of valid transactions from landing on-chain (e.g., OFAC compliance). The majority of research on censorship resistance has focused on this topic.</p>\n<p>Previous approaches to mitigating censorship have focused on inclusion lists and tend towards some form of unconditionality. A proposer must include a transaction, or it is a protocol violation.</p>\n<aside class=\"quote quote-modified\" data-post=\"1\" data-topic=\"18500\">\n  <div class=\"title\">\n    <div class=\"quote-controls\"></div>\n    <img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://ethresear.ch/user_avatar/ethresear.ch/mikeneuder/48/11832_2.png\" class=\"avatar\">\n    <a href=\"https://ethresear.ch/t/unconditional-inclusion-lists/18500\">Unconditional inclusion lists</a> <a class=\"badge-category__wrapper \" href=\"https://ethresear.ch/c/proof-of-stake/block-proposer/10\"><span data-category-id=\"10\" style=\"--category-badge-color: #AB9364; --category-badge-text-color: #FFFFFF; --parent-category-badge-color: #3AB54A;\" data-parent-category-id=\"5\" data-drop-close=\"true\" class=\"badge-category --has-parent\" title=\"This is for discussing the implementation of the full proof of stake system.  E.g., going beyond PoS/PoW hybrid to full PoS.\"><span class=\"badge-category__name\">Block proposer</span></span></a>\n  </div>\n  <blockquote>\n    <a name=\"unconditional-inclusion-lists-1\" class=\"anchor\" href=\"https://ethresear.ch#unconditional-inclusion-lists-1\"></a>Unconditional inclusion lists\n <a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/d/d6fe238dfb55e13146a0b91b64a514c48122f44d.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/d6fe238dfb55e13146a0b91b64a514c48122f44d\" title=\"upload_d8336517ff27bb713b162aea8e862611\">[upload_d8336517ff27bb713b162aea8e862611]</a> \n^lol \n\\cdot \nby <a href=\"https://twitter.com/mikeneuder\" rel=\"noopener nofollow ugc\">mike</a> &amp; <a href=\"https://twitter.com/nero_eth\" rel=\"noopener nofollow ugc\">toni</a> based on discussions with <a href=\"https://twitter.com/potuz1\" rel=\"noopener nofollow ugc\">potuz</a> &amp; <a href=\"https://twitter.com/terencechain\" rel=\"noopener nofollow ugc\">terence</a> \n\\cdot \ntuesday – january 30, 2024 \n\\cdot \ntl;dr; Inclusion lists return agency to the proposer in a PBS world by allowing them to express preferences over the transactions included onchain, despite outsourcing their block production to the specialized builder market. This document discretizes the inclusion list design, advocates for a specific feature s…\n  </blockquote>\n</aside>\n\n<p>By applying game theory principles to PBS, incentives can be leveraged to foster etherum aligned outcomes. Our goal is to create a scenario where including all valid transactions and resisting censorship attempts becomes the dominant strategy for block builders. This approach not only addresses the challenges of soft censorship but also mitigates the risks of hard censorship. It has the potential to improve the integrity of ethereum significantly.</p>\n<p>This proposal is not meant to replace inclusion lists but should be considered a progressive move towards more robust forms of censorship resistance.</p>\n<h2><a name=\"what-motivates-validators-1\" class=\"anchor\" href=\"https://ethresear.ch#what-motivates-validators-1\"></a>What motivates validators</h2>\n<p>Under mev-boost, the most profitable block always wins; this assumes that all actors in the PBS auction are rational. However, it fails to account for the fact that some validators are motivated by factors other than profit. PBS has impacted censorship resistance and pushed the network towards centralisation. Many validators (over 8% at last count) refrain from using mev-boost, perhaps because of concerns around censorship and centralisation. Validators may perceive themselves as being more ethereum aligned if they are not running mev-boost because they accept transactions that block builders censor.</p>\n<aside class=\"quote quote-modified\" data-post=\"1\" data-topic=\"19753\">\n  <div class=\"title\">\n    <div class=\"quote-controls\"></div>\n    <img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://ethresear.ch/user_avatar/ethresear.ch/nero_eth/48/14934_2.png\" class=\"avatar\">\n    <a href=\"https://ethresear.ch/t/is-it-worth-using-mev-boost/19753\">Is it worth using MEV-Boost?</a> <a class=\"badge-category__wrapper \" href=\"https://ethresear.ch/c/economics/16\"><span data-category-id=\"16\" style=\"--category-badge-color: #BF1E2E; --category-badge-text-color: #FFFFFF;\" data-drop-close=\"true\" class=\"badge-category \"><span class=\"badge-category__name\">Economics</span></span></a>\n  </div>\n  <blockquote>\n    <a name=\"is-it-worth-using-mev-boost-1\" class=\"anchor\" href=\"https://ethresear.ch#is-it-worth-using-mev-boost-1\"></a>Is it worth using MEV-Boost?\nTo answer that question from an economic perspective, we will look into the APYs. \n&gt; For simplicity, we assume a total of 1 million active validators and ignore sync-committee rewards. \n&gt; The underlying data ranges from November 2023 - 6 June 2024 and includes all slots. \nFirst, let’s check the difference between local block building and using MEV-Boost. \nWe can see that the block reward is higher for MEV-Boost users: \n <a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/9/e91a721ea6757f818e7a0fd840534c63a581145e.png\" data-download-href=\"https://ethresear.ch/uploads/default/e91a721ea6757f818e7a0fd840534c63a581145e\" title=\"reward_comparison (3)\">[reward_comparison (3)]</a> \nThe median block rewar…\n  </blockquote>\n</aside>\n\n<h2><a name=\"block-builders-2\" class=\"anchor\" href=\"https://ethresear.ch#block-builders-2\"></a>Block Builders</h2>\n<p>The current implementation of PBS is designed so that block builders will pay the maximum possible to validators, to the detriment of all other factors. One reason PBS was introduced was the idea that block builders would be better at building blocks than validators, especially solo validators. They would be better connected and have access to private order flow. The problem is that better was assumed to mean more profitable. The current optimum strategy is to be a vertically integrated searcher builder that can pay the most for a block. Anything that gets included in that block is secondary and only there to reduce the cost burden on the purchase of the block.</p>\n<p>We need to change the game, so the optimum strategy is to fill the block with as many transactions and blobs as possible within the protocol’s constraints and pay the validator for the privilege. Put another way, block builders should be better at building blocks than validators. To achieve this new optimum strategy, they must be well connected to the far reaches of the network, accept transactions from any source, and include all valid transactions.</p>\n<p>In short we need to force the transaction supply chain to be more representative of validators wishes.</p>\n<p><a href=\"https://www.antonydenyer.co.uk/assets/img/blog/block-proposer-inclusion-lists/censorship-pics.png\" rel=\"noopener nofollow ugc\"><img src=\"https://ethresear.ch/uploads/default/original/3X/b/c/bce4e393de8cc20c5571269b8ac90ab767c26d3d.png\" alt=\"chart showing 10% validators censor - 39% builders censor\" data-base62-sha1=\"qX29IME5hWkSZ1LXpZZEBnIsyLj\" width=\"690\" height=\"316\"></a></p>\n<p>Source: <a href=\"https://censorship.pics/\" rel=\"noopener nofollow ugc\">https://censorship.pics/</a></p>\n<h2><a name=\"how-to-introduce-a-dilemma-3\" class=\"anchor\" href=\"https://ethresear.ch#how-to-introduce-a-dilemma-3\"></a>How to introduce a dilemma</h2>\n<p>Currently, block proposers are missing out on priority fee rewards. Let’s assume an OFAC censored transaction is in the mempool tc, and a block builder creates a ‘censored’ block bc. The total amount of rewards available is bc + tc. However, the block proposer only gets bc. The block proposer is choosing to accept bc because the rewards are greater than what they could build themselves (see <a href=\"https://ethereum.github.io/beacon-APIs/#/Validator/produceBlockV3\" rel=\"noopener nofollow ugc\">builder_boost_factor</a>). The block builder knows it can build a better block than the block proposer as they have more order flow. The only thing that keeps the block builder from bidding just above the fees in a block containing mempool transactions is healthy competition between block builders.</p>\n<p>Previous works have explored the possibility of a multi-proposer system or partial block auctions requiring significant protocol and infrastructure changes.</p>\n<aside class=\"quote quote-modified\" data-post=\"1\" data-topic=\"18777\">\n  <div class=\"title\">\n    <div class=\"quote-controls\"></div>\n    <img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://ethresear.ch/user_avatar/ethresear.ch/mikeneuder/48/11832_2.png\" class=\"avatar\">\n    <a href=\"https://ethresear.ch/t/concurrent-block-proposers-in-ethereum/18777\">Concurrent Block Proposers in Ethereum</a> <a class=\"badge-category__wrapper \" href=\"https://ethresear.ch/c/proof-of-stake/block-proposer/10\"><span data-category-id=\"10\" style=\"--category-badge-color: #AB9364; --category-badge-text-color: #FFFFFF; --parent-category-badge-color: #3AB54A;\" data-parent-category-id=\"5\" data-drop-close=\"true\" class=\"badge-category --has-parent\" title=\"This is for discussing the implementation of the full proof of stake system.  E.g., going beyond PoS/PoW hybrid to full PoS.\"><span class=\"badge-category__name\">Block proposer</span></span></a>\n  </div>\n  <blockquote>\n    <a name=\"concurrent-block-proposers-in-ethereum-1\" class=\"anchor\" href=\"https://ethresear.ch#concurrent-block-proposers-in-ethereum-1\"></a>Concurrent Block Proposers in Ethereum\n <a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/2X/5/5d7f225cd21b2e950c8fb59fe4a2e2864e3b639e.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/5d7f225cd21b2e950c8fb59fe4a2e2864e3b639e\" title=\"upload_9cfebe6c788a99112f6efb3a851deac0\">[upload_9cfebe6c788a99112f6efb3a851deac0]</a> \n^look ma, we are trying to end the proposer monopoly \n\\cdot \nby <a href=\"https://twitter.com/mikeneuder\" rel=\"noopener nofollow ugc\">mike</a> &amp; <a href=\"https://twitter.com/MaxResnick1\" rel=\"noopener nofollow ugc\">max</a> – friday; february 23, 2024. \n\\cdot \nAbstract: The Ethereum protocol elects a single proposer to produce a block during each 12-second slot. That proposer has unilateral authority over the set of transactions included. As a result, time-sensitive transactions can be censored by a single party. We present an initial analysis of increasing th…\n  </blockquote>\n</aside>\n\n<aside class=\"quote quote-modified\" data-post=\"1\" data-topic=\"13879\">\n  <div class=\"title\">\n    <div class=\"quote-controls\"></div>\n    <img loading=\"lazy\" alt=\"\" width=\"24\" height=\"24\" src=\"https://ethresear.ch/user_avatar/ethresear.ch/barnabe/48/4742_2.png\" class=\"avatar\">\n    <a href=\"https://ethresear.ch/t/unbundling-pbs-towards-protocol-enforced-proposer-commitments-pepc/13879\">Unbundling PBS: Towards protocol-enforced proposer commitments (PEPC)</a> <a class=\"badge-category__wrapper \" href=\"https://ethresear.ch/c/economics/16\"><span data-category-id=\"16\" style=\"--category-badge-color: #BF1E2E; --category-badge-text-color: #FFFFFF;\" data-drop-close=\"true\" class=\"badge-category \"><span class=\"badge-category__name\">Economics</span></span></a>\n  </div>\n  <blockquote>\n    Many thanks to <a class=\"mention\" href=\"https://ethresear.ch/u/fradamt\">@fradamt</a> <a class=\"mention\" href=\"https://ethresear.ch/u/casparschwa\">@casparschwa</a> <a class=\"mention\" href=\"https://ethresear.ch/u/vbuterin\">@vbuterin</a> <a class=\"mention\" href=\"https://ethresear.ch/u/ralexstokes\">@ralexstokes</a> <a class=\"mention\" href=\"https://ethresear.ch/u/nikete\">@nikete</a> for discussions and comments related to the following post. Personal opinions are expressed in the first-person-singular. \nProtecting the proposer and ensuring liveness of the chain are a big part of why PBS is considered to be moved into the Ethereum protocol. Ideally, when the proposer utilises the services of a builder, there is a contract between parties for the delivery of some goods (valuable blockspace), and the contract …\n  </blockquote>\n</aside>\n\n<h2><a name=\"proposer-inclusion-lists-4\" class=\"anchor\" href=\"https://ethresear.ch#proposer-inclusion-lists-4\"></a>Proposer inclusion lists</h2>\n<p>To introduce some form of dilemma for the block builder, the block proposer should have better visibility of what they are delegating. Currently, the relay only exposes information about fee rewards and gas used. We could <a href=\"https://github.com/ethereum/beacon-APIs/issues/450\" rel=\"noopener nofollow ugc\">extend builder_boost_factor</a> to include an opinion about gas used that would only require changes on the consensus layer client. But let’s go much further; the relay should publish the transaction hashes of the winning bid. The consensus layer client can then check against its view of the mempool and decide if it wants to delegate block building to that relay.</p>\n<p>To frame this in more formal game theoretical terms and notation, we can consider the interaction between the block proposer and the block builder as a strategic game. This game involves decisions on whether to include certain transactions (t1 and t2) in the block, based on the incentives (tips and MEV) associated with each transaction. The players in this game are the block proposer and the block builder, and their strategies involve deciding which transactions to include or censor.</p>\n<h2><a name=\"game-setup-5\" class=\"anchor\" href=\"https://ethresear.ch#game-setup-5\"></a>Game Setup</h2>\n<p>Players: Block Proposer (P) and Block Builder (B).</p>\n<h2><a name=\"strategies-6\" class=\"anchor\" href=\"https://ethresear.ch#strategies-6\"></a>Strategies:</h2>\n<p>For Block Proposer <code>(P)</code>: Accept <code>(A)</code> or Censor <code>(C)</code> transactions.</p>\n<p>For Block Builder <code>(B)</code>: Accept <code>(A)</code> or Censor <code>(C)</code> transactions.</p>\n<p>Payoffs: Defined in terms of gwei received from tips and MEV.</p>\n<h2><a name=\"transactions-7\" class=\"anchor\" href=\"https://ethresear.ch#transactions-7\"></a>Transactions</h2>\n<p><code>t1</code>: A censored public mempool transaction paying <code>1</code> gwei in tips.</p>\n<p><code>t2</code>: A private transaction paying <code>2</code> gwei in tips and <code>2</code> gwei in MEV.</p>\n<h2><a name=\"payoff-matrix-8\" class=\"anchor\" href=\"https://ethresear.ch#payoff-matrix-8\"></a>Payoff Matrix</h2>\n<p>The outcomes of the game can be represented in a payoff matrix where the rows represent the Block Builder’s strategies, and the columns represent the Block Proposer’s strategies. The payoffs are represented as tuples, with the first element being the payoff for the Block Proposer and the second element being the payoff for the Block Builder.</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>B \\ P</th>\n<th>Accept (A)</th>\n<th>Censor (C)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Accept (A)</td>\n<td>(3, 2)</td>\n<td>(3, 2)</td>\n</tr>\n<tr>\n<td>Censor (C)</td>\n<td>(1, 0)</td>\n<td>(2, 2)</td>\n</tr>\n</tbody>\n</table>\n</div><h2><a name=\"analysis-9\" class=\"anchor\" href=\"https://ethresear.ch#analysis-9\"></a>Analysis</h2>\n<p>Builder censors and proposer censors (C, C): The block contains <code>t2</code>. The proposer receives <code>2</code> gwei in tips, and the builder receives <code>2</code> gwei in MEV. This is a Win-Lose scenario in the original description, but in game-theoretical terms, it’s a Nash Equilibrium if the builder’s payoff for censoring is higher than accepting without proposer enforcement.</p>\n<p>Builder censors and proposer accepts (C, A): The proposer chooses to build a block with <code>t1</code>, receiving <code>1</code> gwei in tips. The validator is “eth aligned” and wishes to forgo the additional rewards. It is a Lose-Lose scenario, indicating a misalignment of strategies leading to suboptimal payoffs for both players.</p>\n<p>Builder accepts and proposer accepts (A, A): The block contains both <code>t1</code> and <code>t2</code>. The proposer receives <code>3</code> gwei in tips, and the builder receives <code>2</code> gwei in MEV. This is a Win-Win scenario, representing a Pareto optimal outcome where no player can be made better off without making the other player worse off.</p>\n<p>Builder accepts and proposer censors/doesn’t enforce (A, C): The block contains both <code>t1</code> and <code>t2</code> because it is more profitable. The proposer receives <code>3</code> gwei in tips, and the builder receives <code>2</code> gwei in MEV. This is also a Win-Win scenario, similar to (A, A), indicating that the proposer’s decision to censor does not change the outcome due to the builder’s acceptance.</p>\n<p>In this strategic game, the optimal outcomes for both players are when both accept the transactions, leading to a Win-Win situation. The game illustrates the importance of alignment in strategies between the block proposer and the block builder to maximize their respective payoffs.</p>\n<h2><a name=\"summary-10\" class=\"anchor\" href=\"https://ethresear.ch#summary-10\"></a>Summary</h2>\n<p>Some validators need to be irrational (10% already are) whilst using mev-boost. Solo Validators Can Stay Retarded Longer Than Block Builders Can Stay Solvent.</p>\n<p>The threat of not accepting a block builder’s block should be enough incentive for them to choose not to censor transactions.</p>\n<p>Which validators censor and which do not will become apparent over time. This may mean that block builders will change their tactics depending on who is proposing the next block.</p>\n<p>Smaller transactions and participants are less likely to be sidelined by profit-maximising behaviour. This will lead to priority fees trending downwards.</p>\n<p>Block builders will help strengthen the network rather than centralise it.</p>\n<p>No hard fork required. The only changes needed are in the relay spec, the consensus layer client and some minor changes in the execution client.</p>\n<p>The only downside I can foresee is that relays may be leaking some information to other block builders.</p>\n<p>Minor changes to clients</p>\n<p>Minor changes to relay infrastructure</p>\n<h1><a name=\"conclusion-11\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-11\"></a>Conclusion</h1>\n<p>In summary, by leveraging game theory principles, this proposal aims to significantly reduce transaction censorship by block builders, fostering a more inclusive and decentralized network. In the best case, it will lead to the cessation of censorship practices among block builders, enhancing the network’s integrity. In the worst case, given the relatively minor changes required, it might represent a learning opportunity with minimal loss. At the very least, it promises to stimulate more competition and differentiation within the block builder market, contributing to the overall health and diversity of the ecosystem.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/censorship-resistance-through-game-theory/19760\">Read full topic</a></p>","link":"https://ethresear.ch/t/censorship-resistance-through-game-theory/19760","pubDate":"Fri, 07 Jun 2024 07:48:03 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19760"},"source":{"@url":"https://ethresear.ch/t/censorship-resistance-through-game-theory/19760.rss","#text":"Censorship Resistance Through Game Theory"}},{"title":"1st completely trustless Blockchain, using pure math and zk-snarks for validation. = High censorship resistance","dc:creator":"cryptskii","category":"zk-s[nt]arks","description":"<h1><a name=\"private-scalable-fully-decentralized-payment-network-without-compromise-1\" class=\"anchor\" href=\"https://ethresear.ch#private-scalable-fully-decentralized-payment-network-without-compromise-1\"></a>Private Scalable Fully Decentralized Payment Network <em>(Without Compromise)</em></h1>\n<p><strong>Brandon “Cryptskii” Ramsay</strong></p>\n<h1><a name=\"abstract-2\" class=\"anchor\" href=\"https://ethresear.ch#abstract-2\"></a>Abstract</h1>\n<p>This research paper presents a novel decentralized payment network model that leverages zero-knowledge proofs (ZKPs) to ensure transaction validity and balance consistency without relying on validators or consensus mechanisms. The network features a fixed token supply, airdropped to participants at inception, eliminating the need for mining and associated costs. The core design focuses on direct mutual verification between sender and receiver, with an extensive exploration of the underlying mathematical foundations, formal proofs, algorithms, and data structures underpinning this system.</p>\n<p>The proposed payment network aims to address key challenges faced by existing decentralized payment systems, such as high transaction costs, scalability limitations, and privacy concerns. By employing ZKPs and a unilateral payment channel architecture, the network enables efficient, secure, and privacy-preserving transactions without the need for intermediaries or complex consensus protocols. The paper provides a comprehensive analysis of the system’s security, privacy, and scalability properties, along with detailed comparisons to alternative approaches. The underlying mathematical framework and formal proofs are rigorously defined, ensuring the robustness and correctness of the proposed model.</p>\n<h1><a name=\"introduction-3\" class=\"anchor\" href=\"https://ethresear.ch#introduction-3\"></a>Introduction</h1>\n<p>Decentralized payment systems have garnered significant attention due to their potential to provide secure, transparent, and efficient financial transactions without intermediaries. However, existing solutions often face challenges related to high transaction costs, scalability limitations, and privacy concerns. This research introduces a novel decentralized payment network that leverages zero-knowledge proofs (ZKPs) and unilateral payment channels to address these issues.</p>\n<p>The proposed network architecture is designed to address specific challenges faced by existing decentralized payment systems:</p>\n<ol>\n<li>The absence of mining and associated costs solves the issue of high transaction fees and energy consumption in traditional proof-of-work-based systems.</li>\n<li>The elimination of validators and consensus mechanisms tackles the scalability limitations and potential centralization risks in proof-of-stake and delegated systems.</li>\n<li>The use of storage partitioning and off-chain payment channels addresses the scalability and privacy concerns associated with storing all transactions on-chain.</li>\n</ol>\n<p>By distributing a fixed token supply to participants at the network’s inception, the system eliminates the need for mining and its associated costs. The network focuses on enabling direct mutual verification of transactions between senders and receivers, ensuring the validity of transactions and the consistency of account balances without relying on validators or consensus mechanisms. By leveraging zk-SNARKs, the network allows for direct proof of validity between sender and receiver, as the succinct zero-knowledge proofs inherently prove the correctness of transactions.</p>\n<p>To enhance efficiency and scalability, the network uses a multi-tier Merkle tree system with Merkle proofs, ensuring that only a constant succinct size <span class=\"math\">(O(1))</span> of data is submitted to the blockchain. This design minimizes on-chain storage requirements and ensures data availability.</p>\n<p>At the core of this novel payment network lies a comprehensive mathematical framework that leverages zero-knowledge proofs, particularly zk-SNARKs, to validate transactions and generate wallet state proofs. These proofs enable efficient verification of transaction validity and balance updates while preserving user privacy.</p>\n<p>The network’s architecture is composed of several key components, including unilateral payment channels, hierarchical smart contracts, and partitioned storage nodes. These components work together to enable scalable, secure, and privacy-preserving transactions, while minimizing on-chain storage requirements and ensuring data availability.</p>\n<p>To ensure the robustness and correctness of the proposed model, the paper presents formal algorithms, theorems, and proofs for crucial aspects of the system, such as the Balance Consistency Theorem and the dispute resolution mechanism. These mathematical formalisms provide a solid foundation for the security and reliability of the payment network.</p>\n<p>Furthermore, the paper includes an in-depth analysis of the network’s security, privacy, and scalability properties, highlighting its advantages over alternative approaches, such as traditional blockchain-based payment systems and centralized payment networks. The analysis also acknowledges potential limitations and challenges, such as the complexity of zk-SNARK implementations and the need for ongoing optimizations.</p>\n<p>The main contributions of this research can be summarized as follows:</p>\n<ol>\n<li>A comprehensive mathematical framework for ensuring transaction validity and balance consistency using zero-knowledge proofs, particularly zk-SNARKs.</li>\n<li>A detailed description of the network’s architecture, including unilateral payment channels, hierarchical smart contracts, and partitioned storage nodes.</li>\n<li>Formal algorithms, theorems, and proofs for key components of the system, such as the Balance Consistency Theorem, zk-SNARK proof generation, smart contract verification, and dispute resolution.</li>\n<li>An in-depth analysis of the network’s security, privacy, and scalability properties, along with detailed comparisons to alternative approaches.</li>\n<li>An exploration of promising use cases that leverage the enhanced privacy features of the proposed system.</li>\n</ol>\n<p>The proposed decentralized payment network presents a promising approach to enabling secure, private, and scalable transactions in a decentralized setting, paving the way for more efficient and accessible financial services on the blockchain. The extensive mathematical formalism and rigorous analysis provided in this paper contribute to the growing body of research on decentralized payment systems and demonstrate the potential of zero-knowledge proofs in enhancing the security, privacy, and scalability of blockchain-based financial applications.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/6/d6d467a101f5b9aae81288f1c0d30234082f2bcd.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/d6d467a101f5b9aae81288f1c0d30234082f2bcd\" title=\"DALL·E_2024-06-05_20.49.33_-_A_high-level_overview_of_a_decentralized_payment_network_architecture._The_diagram_includes_Off-Cha\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/6/d6d467a101f5b9aae81288f1c0d30234082f2bcd_2_575x499.jpeg\" alt=\"DALL·E_2024-06-05_20.49.33_-_A_high-level_overview_of_a_decentralized_payment_network_architecture._The_diagram_includes_Off-Cha\" data-base62-sha1=\"uEtfJQwTCmabOiEAZSjJdDoxXeB\" width=\"575\" height=\"499\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/6/d6d467a101f5b9aae81288f1c0d30234082f2bcd_2_575x499.jpeg, https://ethresear.ch/uploads/default/optimized/3X/d/6/d6d467a101f5b9aae81288f1c0d30234082f2bcd_2_862x748.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/d/6/d6d467a101f5b9aae81288f1c0d30234082f2bcd.jpeg 2x\" data-dominant-color=\"D4D5CF\"></a></div><p></p>\n<h1><a name=\"background-4\" class=\"anchor\" href=\"https://ethresear.ch#background-4\"></a>Background</h1>\n<p>This section introduces the key concepts and technologies used in the proposed decentralized payment network, providing a solid foundation for understanding the system’s design and functionality.</p>\n<h2><a name=\"zero-knowledge-proofs-zkps-5\" class=\"anchor\" href=\"https://ethresear.ch#zero-knowledge-proofs-zkps-5\"></a>Zero-Knowledge Proofs (ZKPs)</h2>\n<p>Zero-knowledge proofs (ZKPs) are cryptographic protocols that enable one party (the prover) to prove to another party (the verifier) that a statement is true without revealing any information beyond the validity of the statement itself. ZKPs have numerous applications in blockchain technology, particularly in privacy-preserving transactions and scalable off-chain solutions.</p>\n<p>One prominent type of ZKP is zk-SNARKs (Zero-Knowledge Succinct Non-Interactive Arguments of Knowledge). zk-SNARKs enable the generation of succinct proofs that can be verified quickly, making them well-suited for blockchain applications where proofs need to be stored on-chain and verified by multiple parties.</p>\n<p><strong>Definition</strong>: A zero-knowledge proof for a statement <span class=\"math\">S</span> is a protocol between a prover <span class=\"math\">P</span> and a verifier <span class=\"math\">V</span> such that:</p>\n<ul>\n<li><strong>Completeness</strong>: If <span class=\"math\">S</span> is true, <span class=\"math\">V</span> will be convinced by <span class=\"math\">P</span> with high probability.</li>\n<li><strong>Soundness</strong>: If <span class=\"math\">S</span> is false, <span class=\"math\">V</span> will not be convinced by <span class=\"math\">P</span> except with negligible probability.</li>\n<li><strong>Zero-Knowledge</strong>: If <span class=\"math\">S</span> is true, <span class=\"math\">V</span> learns nothing beyond the fact that <span class=\"math\">S</span> is true.</li>\n</ul>\n<p>In the proposed decentralized payment network, zk-SNARKs are employed to prove the validity of transactions and generate wallet state proofs, ensuring the privacy and security of user balances while enabling efficient verification.</p>\n<h1><a name=\"system-architecture-6\" class=\"anchor\" href=\"https://ethresear.ch#system-architecture-6\"></a>System Architecture</h1>\n<p>The proposed decentralized payment network consists of several key components: off-chain payment channels, hierarchical smart contracts, and partitioned storage nodes. This section provides a detailed description of each component and their interactions within the overall system.<br>\nCertainly! Here is the document reformatted in Markdown with low-level LaTeX math included:</p>\n<h3><a name=\"unilateral-payment-channels-7\" class=\"anchor\" href=\"https://ethresear.ch#unilateral-payment-channels-7\"></a>Unilateral Payment Channels</h3>\n<p>Payment channels are a key component of scalable blockchain solutions, enabling off-chain transactions between parties without the need to record every transaction on the main blockchain. In the proposed network, each user has a unilateral payment channel associated with their wallet contract, which holds their tokens off-chain. This design choice simplifies channel management and enables cross-partition transactions.</p>\n<p><strong>Definition:</strong> A unilateral payment channel between a user <span class=\"math\">U</span> and their wallet contract <span class=\"math\">W</span> is a tuple <span class=\"math\">(B, T_1, T_2, \\ldots, T_n)</span>, where:</p>\n<ul>\n<li><span class=\"math\">B</span> is the initial balance of <span class=\"math\">U</span> in the payment channel.</li>\n<li><span class=\"math\">T_1, T_2, \\ldots, T_n</span> are the transactions executed within the payment channel.</li>\n</ul>\n<p>The final state of the payment channel is determined by the cumulative effect of all transactions <span class=\"math\">T_1, T_2, \\ldots, T_n</span> on the initial balance <span class=\"math\">B</span>.</p>\n<p>To set up a unilateral payment channel, a user creates a wallet contract on the blockchain and transfers the desired amount of tokens to the contract. The wallet contract manages the user’s off-chain balance and state updates through zk-SNARK proofs. When a user wants to transfer tokens to another user, they generate a zk-SNARK proof that verifies the validity of the transaction and includes the necessary metadata for the recipient to generate the next transaction proof. This design enables instant transaction finality and eliminates the need for on-chain confirmation.</p>\n<h3><a name=\"example-1-unilateral-payment-channel-setup-and-transactions-8\" class=\"anchor\" href=\"https://ethresear.ch#example-1-unilateral-payment-channel-setup-and-transactions-8\"></a>Example 1: Unilateral Payment Channel Setup and Transactions</h3>\n<p>Suppose Alice wants to set up a unilateral payment channel with an initial balance of 100 tokens. She creates a wallet contract <span class=\"math\">W_A</span> on the blockchain and transfers 100 tokens to it. The wallet contract initializes Alice’s off-chain balance to 100 tokens.</p>\n<p>Later, Alice decides to send 30 tokens to Bob. She generates a zk-SNARK proof <span class=\"math\">\\pi_1</span> that verifies the validity of the transaction, including the availability of sufficient funds and the correctness of the updated balances. Upon generating the proof <span class=\"math\">\\pi_1</span>, the wallet contract immediately locks 30 tokens, reducing Alice’s available balance to 70 tokens. Alice sends the transaction details and the proof <span class=\"math\">\\pi_1</span> to Bob.</p>\n<p>Bob verifies the proof <span class=\"math\">\\pi_1</span> to ensure the transaction’s validity. If the proof is valid, Alice and Bob update their local off-chain balances accordingly. Alice’s balance remains 70 tokens, while Bob’s balance increases by 30 tokens. Both parties sign the proof <span class=\"math\">\\pi_1</span> to authorize the future rebalancing of their respective payment channels.</p>\n<p>If Bob does not accept the proof within a specified timeout period, the smart contract automatically releases the locked funds back to Alice’s available balance, ensuring no funds are indefinitely locked.</p>\n<p>This example demonstrates how unilateral payment channels enable secure, off-chain transactions between users while preserving privacy and scalability.</p>\n<h3><a name=\"off-chain-payment-channel-operations-9\" class=\"anchor\" href=\"https://ethresear.ch#off-chain-payment-channel-operations-9\"></a>Off-Chain Payment Channel Operations</h3>\n<p>As introduced in Section 2, off-chain payment channels form the foundation of the proposed network’s scalability. Each user has a unilateral payment channel associated with their wallet contract, which holds their tokens off-chain. The channel setup and transaction process can be formally described as follows:</p>\n<p><strong>Channel Setup</strong></p>\n<pre><code class=\"lang-auto\">\\begin{algorithm}[H]\n\\caption{Unilateral Payment Channel Setup}\n\\begin{algorithmic}[1]\n\\Procedure{SetupChannel}{$U, W, B$}\n\\State $U$ creates a wallet contract $W$ on the blockchain\n\\State $U$ transfers $B$ tokens to $W$\n\\State $W$ initializes the off-chain balance of $U$ to $B$\n\\State \\textbf{return} $W$\n\\EndProcedure\n\\end{algorithmic}\n\\end{algorithm}\n</code></pre>\n<p>Here, <span class=\"math\">U</span> represents the user, <span class=\"math\">W</span> is the wallet contract, and <span class=\"math\">B</span> is the initial balance in the payment channel.</p>\n<p><strong>Off-Chain Transactions</strong></p>\n<pre><code class=\"lang-auto\">\\begin{algorithm}[H]\n\\caption{Off-Chain Transaction}\n\\begin{algorithmic}[1]\n\\Procedure{OffchainTransaction}{$S, R, T$}\n\\State $S$ generates a zk-SNARK proof $\\pi$ for the transaction $T$\n\\State $S$'s wallet contract locks the transaction amount\n\\State $S$ sends $(T, \\pi)$ to $R$\n\\State $R$ verifies $\\pi$ to ensure the validity of $T$\n\\If{$\\pi$ is valid}\n\\State $S$ updates their local off-chain balance\n\\State $R$ updates their local off-chain balance\n\\State $S$ and $R$ sign $\\pi$ to authorize rebalancing\n\\Else\n\\State $S$'s wallet contract releases the locked amount after timeout\n\\EndIf\n\\State \\textbf{return} $(T, \\pi)$\n\\EndProcedure\n\\end{algorithmic}\n\\end{algorithm}\n</code></pre>\n<p>Here, <span class=\"math\">S</span> represents the sender, <span class=\"math\">R</span> is the receiver, and <span class=\"math\">T</span> is the transaction. The zk-SNARK proof <span class=\"math\">\\pi</span> verifies the validity of the transaction, including the availability of sufficient funds and the correctness of the updated balances. If the proof is valid, both parties update their local off-chain balances and sign the proof to authorize the future rebalancing of their payment channels. If the proof is not accepted within a specified timeout period, the smart contract automatically releases the locked funds back to the sender’s available balance.</p>\n<h3><a name=\"hierarchical-smart-contracts-10\" class=\"anchor\" href=\"https://ethresear.ch#hierarchical-smart-contracts-10\"></a>Hierarchical Smart Contracts</h3>\n<p>The hierarchical smart contract structure is a key component of the proposed network, enabling efficient rebalancing of payment channels and management of cross-partition transactions. The structure consists of three layers: root contracts, intermediate contracts, and wallet contracts.</p>\n<ul>\n<li>\n<p><strong>Root Contracts:</strong></p>\n<p><strong>Responsibilities:</strong></p>\n<ul>\n<li>Serve as the entry point for users and maintain a mapping of intermediate contracts.</li>\n<li>Aggregate Merkle roots from intermediate contracts and submit a single, final aggregated Merkle root.</li>\n<li>Submit the final Merkle root to the blockchain at regular intervals, ensuring the global state is verifiable on-chain with minimal frequency and cost being a constant size <span class=\"math\">O(1)</span>.</li>\n</ul>\n</li>\n<li>\n<p><strong>Intermediate Contracts:</strong></p>\n<p><strong>Responsibilities:</strong></p>\n<ul>\n<li>Manage liquidity pools for specific transaction types or user groups.</li>\n<li>Maintain a mapping of wallet contracts and are responsible for rebalancing payment channels based on the transaction proofs submitted by users.</li>\n<li>Collect Merkle roots from wallet contracts and aggregate them into a single Merkle tree within their partition.</li>\n<li>Periodically submit the aggregated Merkle root to the root contract.</li>\n<li>Ensure the state within their partition is verifiable on-chain with minimal frequency and cost.</li>\n</ul>\n</li>\n<li>\n<p><strong>Wallet Contracts:</strong></p>\n<p><strong>Responsibilities:</strong></p>\n<ul>\n<li>Represent individual user payment channels and hold the users’ off-chain balances.</li>\n<li>Generate zk-SNARK proofs for their state and submit these proofs to the storage nodes.</li>\n<li>Store proofs to the storage nodes for data availability.</li>\n</ul>\n</li>\n</ul>\n<p>The hierarchical structure allows for efficient liquidity management and reduced on-chain transaction costs, as rebalancing operations are performed at the intermediate level, and the root contracts only need to process periodic updates.</p>\n<h3><a name=\"example-3-hierarchical-smart-contract-interaction-11\" class=\"anchor\" href=\"https://ethresear.ch#example-3-hierarchical-smart-contract-interaction-11\"></a>Example 3: Hierarchical Smart Contract Interaction</h3>\n<p>Continuing with the previous examples, suppose Alice, Bob, Carol, and David belong to the same user group managed by an intermediate contract <span class=\"math\">IC_1</span>. The intermediate contract <span class=\"math\">IC_1</span> is mapped to a root contract <span class=\"math\">RC</span>.</p>\n<ul>\n<li>\n<p>When Alice sends 30 tokens to Bob (transaction <span class=\"math\">T_1</span>), she generates a zk-SNARK proof <span class=\"math\">\\pi_1</span>. Upon generating the proof <span class=\"math\">\\pi_1</span>, Alice’s wallet contract immediately locks 30 tokens, reducing her available balance accordingly. The transaction proof <span class=\"math\">\\pi_1</span> is then submitted to the intermediate contract <span class=\"math\">IC_1</span>. The intermediate contract verifies the proof and updates the balances of Alice’s and Bob’s wallet contracts accordingly.</p>\n</li>\n<li>\n<p>Similarly, when Alice receives 50 tokens from Carol (transaction <span class=\"math\">T_2</span>), Carol generates a zk-SNARK proof <span class=\"math\">\\pi_2</span>. Upon generating the proof <span class=\"math\">\\pi_2</span>, Carol’s wallet contract immediately locks 50 tokens, reducing her available balance. The transaction proof <span class=\"math\">\\pi_2</span> is then submitted to <span class=\"math\">IC_1</span>, which verifies the proof and updates the balances of Alice’s and Carol’s wallet contracts.</p>\n</li>\n<li>\n<p>Periodically, the intermediate contract <span class=\"math\">IC_1</span> submits a summary of the balance updates to the root contract <span class=\"math\">RC</span>, which maintains a global view of the network’s state by submitting a single aggregated Merkle root to the blockchain.</p>\n</li>\n</ul>\n<p>This hierarchical structure, with the immediate balance locking mechanism, ensures that all transactions are secure and funds are not double spent, even if there are delays in transaction acceptance or verification.</p>\n<h3><a name=\"storage-nodes-and-blockchain-interaction-12\" class=\"anchor\" href=\"https://ethresear.ch#storage-nodes-and-blockchain-interaction-12\"></a>Storage Nodes and Blockchain Interaction</h3>\n<p>To ensure data availability and scalability, the proposed network employs storage nodes that store the off-chain transaction history and wallet state proofs. Each storage node maintains a copy of the entire off-chain data, ensuring redundancy and decentralization.</p>\n<p><strong>Storage Node Operations:</strong></p>\n<ul>\n<li><strong>Storing Proofs:</strong> Storage nodes store zk-SNARK proofs for individual wallet states. Each wallet maintains its own Merkle tree that includes these proofs.</li>\n<li><strong>Aggregating Data:</strong> At regular intervals, storage nodes aggregate the off-chain data into a single Merkle root, representing the state of all payment channels they manage. This Merkle root is then submitted to the intermediate contracts.</li>\n</ul>\n<pre><code class=\"lang-python\">def store_proof(proof, user, wallet):\n    # Store the proof for user and wallet contract\n    # Update the local Merkle tree with the proof\n\ndef submit_merkle_root():\n    # Generate the Merkle root for all stored proofs\n    # Submit the Merkle root to the intermediate contract\n</code></pre>\n<p>The blockchain acts as a secure and immutable ledger, storing the Merkle roots submitted by the root contract. This allows for efficient</p>\n<p>verification of the network’s global state, as any discrepancies between the off-chain data and the on-chain Merkle roots can be easily detected and resolved.</p>\n<p>This hierarchical structure enables efficient verification of individual payment channels and the entire network state without storing the full transaction history on-chain. By leveraging the security and immutability of the blockchain while keeping the majority of the data off-chain, the proposed network achieves a balance between scalability, data availability, and security.</p>\n<h3><a name=\"example-4-storage-node-operation-and-blockchain-interaction-13\" class=\"anchor\" href=\"https://ethresear.ch#example-4-storage-node-operation-and-blockchain-interaction-13\"></a>Example 4: Storage Node Operation and Blockchain Interaction</h3>\n<p>Following the previous examples, suppose storage node <span class=\"math\">SN_1</span> is responsible for storing the transaction proofs and wallet state proofs for Alice, Bob, Carol, and David.</p>\n<ul>\n<li>When Alice generates a wallet state proof <span class=\"math\">\\pi_s</span> after transactions <span class=\"math\">T_1, T_2,</span> and <span class=\"math\">T_3</span>, she submits the proof to the storage node <span class=\"math\">SN_1</span>. The storage node stores the proof and updates its local Merkle tree with the new proof.</li>\n<li>Similarly, when Bob, Carol, and David generate their wallet state proofs, they submit them to <span class=\"math\">SN_1</span>, which stores the proofs and updates its local Merkle tree accordingly.</li>\n<li>At the end of each epoch, <span class=\"math\">SN_1</span> generates a Merkle root <span class=\"math\">R</span> that represents the state of all payment channels it manages. The storage node then submits the Merkle root <span class=\"math\">R</span> to the intermediate contract, providing a compact and tamper-evident snapshot of the network’s state.</li>\n<li>The intermediate contract aggregates the Merkle roots from all storage nodes within its partition and submits a single final Merkle root to the root contract.</li>\n<li>The root contract aggregates the Merkle roots from all intermediate contracts and submits a single final Merkle root to the blockchain.</li>\n<li>The blockchain stores the submitted Merkle root, allowing for efficient verification of the network’s global state. If any discrepancies arise between the off-chain data and the on-chain Merkle roots, they can be easily detected and resolved using the dispute resolution mechanism described in the following section.</li>\n</ul>\n<p>This hierarchical structure, combined with immediate balance locking and zk-SNARK proofs, ensures secure, efficient, and scalable off-chain transactions, maintaining the integrity and security of the overall network.</p>\n<h1><a name=\"transaction-validity-and-balance-consistency-14\" class=\"anchor\" href=\"https://ethresear.ch#transaction-validity-and-balance-consistency-14\"></a>Transaction Validity and Balance Consistency</h1>\n<p>To ensure the validity of transactions and the consistency of account balances, the proposed payment network employs a combination of zero-knowledge proofs and formal mathematical proofs. This section presents the core theorems and algorithms that underpin the system’s security and correctness. <em>(as stated in the abstract, we have a fixed supply released in full at genesis)</em></p>\n<h2><a name=\"transaction-validity-15\" class=\"anchor\" href=\"https://ethresear.ch#transaction-validity-15\"></a>Transaction Validity</h2>\n<p>Each transaction in the proposed network is accompanied by a zk-SNARK proof that verifies the following conditions:</p>\n<ul>\n<li>The sender has sufficient balance to cover the transaction amount.</li>\n<li>The sender’s updated balance is correctly computed.</li>\n<li>The receiver’s updated balance is correctly computed.</li>\n</ul>\n<p>Let <span class=\"math\">T_i</span> be a transaction in which sender <span class=\"math\">S</span> transfers <span class=\"math\">\\Delta_i</span> tokens to receiver <span class=\"math\">R</span>. The accompanying zk-SNARK proof <span class=\"math\">\\pi_i</span> ensures the following conditions:</p>\n<div class=\"math\">\n\\begin{align*}\nB_S &amp;\\geq \\Delta_i \\\\\nB'_S &amp;= B_S - \\Delta_i \\\\\nB'_R &amp;= B_R + \\Delta_i\n\\end{align*}\n</div>\n<p>where <span class=\"math\">B_S</span> and <span class=\"math\">B_R</span> are the initial balances of <span class=\"math\">S</span> and <span class=\"math\">R</span>, respectively, and <span class=\"math\">B'_S</span> and <span class=\"math\">B'_R</span> are the updated balances after the transaction.</p>\n<h2><a name=\"balance-consistency-16\" class=\"anchor\" href=\"https://ethresear.ch#balance-consistency-16\"></a>Balance Consistency</h2>\n<p>To prove the consistency of account balances in the presence of valid transactions, we present the following theorem:</p>\n<p><strong>Theorem (Balance Consistency)</strong>: Given a series of valid transactions <span class=\"math\">T_1, T_2, \\ldots, T_n</span> between two parties <span class=\"math\">S</span> and <span class=\"math\">R</span>, the final balances <span class=\"math\">B'_S</span> and <span class=\"math\">B'_R</span> satisfy:</p>\n<div class=\"math\">\nB'_S + B'_R = B_S + B_R\n</div>\n<p>where <span class=\"math\">B_S</span> and <span class=\"math\">B_R</span> are the initial balances of <span class=\"math\">S</span> and <span class=\"math\">R</span>, respectively.</p>\n<p><strong>Proof</strong>: We prove the theorem by induction on the number of transactions <span class=\"math\">n</span>.</p>\n<p><strong>Base case</strong>: For <span class=\"math\">n = 1</span>, we have a single transaction <span class=\"math\">T_1</span> with amount <span class=\"math\">\\Delta_1</span>. The updated balances after the transaction are:</p>\n<div class=\"math\">\n\\begin{align*}\nB'_S &amp;= B_S - \\Delta_1 \\\\\nB'_R &amp;= B_R + \\Delta_1\n\\end{align*}\n</div>\n<p>Adding the above equations yields:</p>\n<div class=\"math\">\nB'_S + B'_R = B_S + B_R\n</div>\n<p><strong>Inductive step</strong>: Assume the theorem holds for <span class=\"math\">n = k</span> transactions. We prove that it also holds for <span class=\"math\">n = k + 1</span> transactions.</p>\n<p>Let <span class=\"math\">B^{(k)}_S</span> and <span class=\"math\">B^{(k)}_R</span> be the balances after the first <span class=\"math\">k</span> transactions. By the induction hypothesis, we have:</p>\n<div class=\"math\">\nB^{(k)}_S + B^{(k)}_R = B_S + B_R\n</div>\n<p>Now, consider the <span class=\"math\">(k+1)</span>-th transaction <span class=\"math\">T_{k+1}</span> with amount <span class=\"math\">\\Delta_{k+1}</span>. The updated balances after this transaction are:</p>\n<div class=\"math\">\n\\begin{align*}\nB^{(k+1)}_S &amp;= B^{(k)}_S - \\Delta_{k+1} \\\\\nB^{(k+1)}_R &amp;= B^{(k)}_R + \\Delta_{k+1}\n\\end{align*}\n</div>\n<p>Adding the above equations and substituting the induction hypothesis yields:</p>\n<div class=\"math\">\n\\begin{align*}\nB^{(k+1)}_S + B^{(k+1)}_R &amp;= (B^{(k)}_S - \\Delta_{k+1}) + (B^{(k)}_R + \\Delta_{k+1}) \\\\\n&amp;= B^{(k)}_S + B^{(k)}_R \\\\\n&amp;= B_S + B_R\n\\end{align*}\n</div>\n<p>Therefore, the theorem holds for <span class=\"math\">n = k + 1</span> transactions.</p>\n<p>By the principle of mathematical induction, the theorem holds for any number of valid transactions<br>\n<span class=\"math\">n \\geq 1</span>. <span class=\"math\">\\blacksquare</span></p>\n<p>The Balance Consistency theorem ensures that the total balance of the system remains constant throughout a series of valid transactions, providing a fundamental property for the security and correctness of the proposed payment network.</p>\n<h1><a name=\"fraud-prevention-mechanisms-17\" class=\"anchor\" href=\"https://ethresear.ch#fraud-prevention-mechanisms-17\"></a>Fraud Prevention Mechanisms</h1>\n<p>The proposed decentralized payment network integrates multiple layers of fraud prevention mechanisms through its hierarchical smart contract system and the use of zk-SNARKs. These measures ensure the integrity and consistency of transaction states, inherently preventing the submission of outdated or fraudulent states. This section outlines how these mechanisms work in detail.</p>\n<h3><a name=\"zk-snark-proofs-and-state-updates-18\" class=\"anchor\" href=\"https://ethresear.ch#zk-snark-proofs-and-state-updates-18\"></a>ZK-SNARK Proofs and State Updates</h3>\n<p>The network leverages zk-SNARKs to validate each transaction. The key elements include:</p>\n<ul>\n<li>\n<p><strong>Proof of Validity</strong>: Each transaction within the network must be accompanied by a zk-SNARK proof. This proof verifies several critical aspects:</p>\n<ul>\n<li>The sender has sufficient balance to cover the transaction.</li>\n<li>The sender’s updated balance after the transaction is correctly computed.</li>\n<li>The receiver’s updated balance after the transaction is correctly computed.</li>\n</ul>\n</li>\n<li>\n<p><strong>Consistent State Management</strong>: Each user’s wallet contract maintains a Merkle tree of state proofs. Each state update (i.e., each transaction) is validated through zk-SNARKs, ensuring it is consistent with the previously recorded state. This cryptographic validation prevents unauthorized or incorrect state changes.</p>\n</li>\n</ul>\n<h3><a name=\"prevention-of-old-state-submission-19\" class=\"anchor\" href=\"https://ethresear.ch#prevention-of-old-state-submission-19\"></a>Prevention of Old State Submission</h3>\n<p>The design of the proposed network inherently prevents the submission of outdated or fraudulent states through the following mechanisms:</p>\n<ul>\n<li>\n<p><strong>Proof Consistency</strong>: Each zk-SNARK proof submitted for a state update must be consistent with the latest recorded state. Intermediate contracts aggregate data from wallet contracts, and root contracts submit these aggregated roots to the blockchain. Any attempt to submit an old state would be detected as it would not match the current aggregated Merkle root.</p>\n</li>\n<li>\n<p><strong>On-Chain Verification</strong>: The final aggregated Merkle root submitted by the root contract is stored on the blockchain, providing a tamper-evident record of the global state. During dispute resolution, the submitted state proofs are verified against this on-chain Merkle root to ensure only the most recent valid state is considered.</p>\n</li>\n</ul>\n<h3><a name=\"mitigated-need-for-watchtowers-20\" class=\"anchor\" href=\"https://ethresear.ch#mitigated-need-for-watchtowers-20\"></a>Mitigated Need for Watchtowers</h3>\n<p>Due to the robust fraud prevention mechanisms built into the proposed system, the traditional need for watchtowers entities that monitor the blockchain for malicious activities and act on behalf of users is significantly reduced. The hierarchical structure and the use of zk-SNARKs ensure that:</p>\n<ul>\n<li>Each state update is cryptographically verified, preventing unauthorized changes.</li>\n<li>The aggregated Merkle roots provide a consistent and tamper-evident record of the network’s state.</li>\n<li>Dispute resolution is handled efficiently and fairly based on the most recent valid state proofs.</li>\n</ul>\n<p>The comprehensive fraud prevention mechanisms of the proposed decentralized payment network ensure high levels of security and integrity without the need for external monitoring entities like watchtowers. The hierarchical smart contract system and zk-SNARKs work together to maintain consistent and verifiable transaction states, providing a secure and efficient framework for decentralized financial transactions.</p>\n<h3><a name=\"role-of-the-dao-21\" class=\"anchor\" href=\"https://ethresear.ch#role-of-the-dao-21\"></a>Role of the DAO</h3>\n<p>While the built-in mechanisms provide robust security and minimize the need for watchtowers, there are scenarios where manual involvement might be necessary. To address these situations, a Decentralized Autonomous Organization (DAO) can be implemented to manage and oversee the network’s operations. The DAO would play a crucial role in:</p>\n<ul>\n<li><strong>Handling Exceptional Cases</strong>: Situations that require manual intervention beyond the automated fraud prevention and dispute resolution mechanisms.</li>\n<li><strong>Balancing Automation and Trust</strong>: Ensuring the right mix of automated processes, cryptographic proofs, and trust mechanisms to maintain network integrity.</li>\n<li><strong>Democratic Decision-Making</strong>: Leveraging community governance to make decisions on critical issues, such as protocol upgrades, handling disputes that the automated system cannot resolve, and other governance matters.</li>\n</ul>\n<h4><a name=\"dao-functions-22\" class=\"anchor\" href=\"https://ethresear.ch#dao-functions-22\"></a>DAO Functions</h4>\n<ol>\n<li><strong>Manual Dispute Resolution</strong>: For disputes that cannot be resolved through automated proofs, the DAO can step in to review and make a final decision based on community consensus.</li>\n<li><strong>Protocol Upgrades</strong>: The DAO can propose and vote on protocol upgrades to enhance the system’s functionality and security.</li>\n<li><strong>Network Oversight</strong>: Providing ongoing oversight and making strategic decisions to ensure the network remains secure and efficient.</li>\n</ol>\n<p>The combination of zk-SNARKs, hierarchical smart contracts, and the DAO creates a robust framework for fraud prevention and network governance. The minimized need for watchtowers is achieved through advanced cryptographic verification and efficient dispute resolution mechanisms. However, the DAO ensures that any issues requiring manual involvement are handled with a balance of automation, trust, rigorous mathematical verification, and democratic decision-making. This comprehensive approach provides a secure, scalable, and trustworthy decentralized payment network.</p>\n<h2><a name=\"dispute-resolution-23\" class=\"anchor\" href=\"https://ethresear.ch#dispute-resolution-23\"></a>Dispute Resolution</h2>\n<p>In the event of a dispute between parties, the proposed network employs a dispute resolution mechanism based on the submitted zk-SNARK proofs and Merkle roots. The dispute resolution process can be formally described as follows:</p>\n<pre><code class=\"lang-auto\">\\begin{algorithm}[H]\n\\caption{Dispute Resolution}\n\\begin{algorithmic}[1]\n\\Procedure{ResolveDispute}{$S, R, \\pi_S, \\pi_R$}\n\\State $S$ submits their final state proof $\\pi_S$\n\\State $R$ submits their final state proof $\\pi_R$\n\\State Verify $\\pi_S$ and $\\pi_R$ against the submitted Merkle roots\n\\If{$\\pi_S$ is valid and $\\pi_R$ is invalid}\n\\State Resolve the dispute in favor of $S$\n\\ElsIf{$\\pi_R$ is valid and $\\pi_S$ is invalid}\n\\State Resolve the dispute in favor of $R$\n\\Else\n\\State Resolve the dispute based on the most recent valid state proof\n\\EndIf\n\\EndProcedure\n\\end{algorithmic}\n\\end{algorithm}\n</code></pre>\n<p>Here, <span class=\"math\">S</span> and <span class=\"math\">R</span> represent the disputing parties, and <span class=\"math\">\\pi_S</span> and <span class=\"math\">\\pi_R</span> are their respective final state proofs. The dispute resolution mechanism verifies the submitted proofs against the Merkle roots stored on-chain and resolves the dispute based on the validity of the proofs. This ensures that the resolution is based on the most recent valid state of the payment channel, preventing fraud and maintaining the integrity of the system.</p>\n<p>The dispute resolution process follows these steps:</p>\n<ol>\n<li><strong>Dispute Initiation:</strong> Either party can initiate a dispute by submitting a dispute request to the relevant smart contract (e.g., the intermediate contract managing their user group).</li>\n<li><strong>Evidence Submission:</strong> Both parties are required to submit their final state proofs <span class=\"math\">(\\pi_S \\text{ and } \\pi_R)</span> within a predefined timeframe (e.g., 24 hours). These proofs represent the latest state of their respective payment channels and include the relevant transaction history.</li>\n<li><strong>Proof Verification:</strong> The dispute resolution mechanism verifies the submitted proofs against the Merkle roots stored on-chain. This verification process ensures that the proofs are valid and consistent with the global state of the network.</li>\n<li><strong>Resolution:</strong> The dispute is resolved based on the validity of the submitted proofs:\n<ul>\n<li>If <span class=\"math\">\\pi_S</span> is valid and <span class=\"math\">\\pi_R</span> is invalid, the dispute is resolved in favor of party <span class=\"math\">S</span>.</li>\n<li>If <span class=\"math\">\\pi_R</span> is valid and <span class=\"math\">\\pi_S</span> is invalid, the dispute is resolved in favor of party <span class=\"math\">R</span>.</li>\n<li>If both proofs are valid, the dispute is resolved based on the most recent valid state proof, determined by the timestamp or sequence number associated with the proofs.</li>\n<li>If neither proof is valid or if one party fails to submit their proof within the required timeframe, the dispute can be escalated to a higher-level contract (e.g., the root contract) or a trusted third party for manual review and resolution.</li>\n</ul>\n</li>\n<li><strong>Outcome Enforcement:</strong> Once the dispute is resolved, the smart contracts automatically enforce the outcome by updating the balances of the involved parties according to the resolution decision. This may involve redistributing tokens between the parties’ payment channels or applying penalties for fraudulent behavior.</li>\n</ol>\n<p>To incentivize honest behavior and discourage frivolous disputes, the network can implement additional mechanisms:</p>\n<ul>\n<li><strong>Dispute Bond:</strong> Parties initiating a dispute may be required to post a bond (in the form of tokens) that is forfeited if their submitted proof is found to be invalid or if they fail to submit their proof within the required timeframe. This bond serves as a deterrent against malicious actors and ensures that disputing parties have a stake in the resolution process.</li>\n<li><strong>Reputation System:</strong> The network can maintain a reputation score for each user based on their history of successful transactions and dispute resolutions. Users with a high reputation score may be given preference in case of ambiguous disputes or may enjoy reduced dispute bond requirements. Conversely, users with a history of fraudulent behavior or frivolous disputes may face higher bond requirements or even temporary suspension from the network.</li>\n</ul>\n<p>By combining cryptographic proofs, smart contract automation, and economic incentives, the proposed dispute resolution mechanism ensures that conflicts are resolved fairly and efficiently while maintaining the integrity of the payment network.</p>\n<p><strong>Example 5: Dispute Resolution</strong></p>\n<p>Suppose a dispute arises between Alice and Bob regarding the final state of their payment channel. Alice claims that her final balance is 100 tokens, while Bob claims that Alice’s final balance is 80 tokens.</p>\n<ol>\n<li><strong>Dispute Initiation:</strong> Alice initiates a dispute by submitting a dispute request to the intermediate contract <span class=\"math\">IC_1</span> that manages their user group. She deposits the required dispute bond of 10 tokens.</li>\n<li><strong>Evidence Submission:</strong> Alice and Bob submit their respective final state proofs, <span class=\"math\">\\pi_A</span> and <span class=\"math\">\\pi_B</span>, to the dispute resolution mechanism within the 24-hour timeframe. Alice’s proof <span class=\"math\">\\pi_A</span> shows her balance as 100 tokens, while Bob’s proof <span class=\"math\">\\pi_B</span> shows Alice’s balance as 80 tokens.</li>\n<li><strong>Proof Verification:</strong> The dispute resolution mechanism verifies the submitted proofs against the Merkle roots stored on-chain. It finds that Alice’s proof <span class=\"math\">\\pi_A</span> is consistent with the on-chain state, while Bob’s proof <span class=\"math\">\\pi_B</span> is invalid.</li>\n<li><strong>Resolution:</strong> As Alice’s proof <span class=\"math\">\\pi_A</span> is valid and Bob’s proof <span class=\"math\">\\pi_B</span> is invalid, the dispute is resolved in favor of Alice. The resolution confirms that Alice’s final balance is indeed 100 tokens.</li>\n<li><strong>Outcome Enforcement:</strong> The intermediate contract <span class=\"math\">IC_1</span> automatically updates the balances of Alice and Bob’s payment channels according to the resolution decision. Alice’s balance remains at 100 tokens, while Bob’s balance is adjusted based on the discrepancy. Additionally, Bob’s dispute bond of 10 tokens is forfeited and distributed as a reward to Alice for submitting a valid proof.</li>\n</ol>\n<p>This example demonstrates how the dispute resolution mechanism ensures the integrity of the payment network by resolving conflicts based on the validity of the submitted zk-SNARK proofs and the Merkle roots stored on-chain, while also incentivizing honest behavior through the use of dispute bonds.</p>\n<h2><a name=\"comparison-to-alternative-approaches-24\" class=\"anchor\" href=\"https://ethresear.ch#comparison-to-alternative-approaches-24\"></a>Comparison to Alternative Approaches</h2>\n<p>The proposed decentralized payment network offers several advantages over alternative approaches, such as traditional blockchain-based payment systems and centralized payment networks.</p>\n<p>Compared to traditional blockchain-based payment systems, the proposed network provides higher scalability and privacy. The use of off-chain payment channels and zk-SNARKs enables faster and more private transactions, while the hierarchical smart contract structure and partitioned storage nodes enable more efficient processing and storage of transaction data.</p>\n<p>Compared to centralized payment networks, the proposed system offers greater security, transparency, and censorship resistance. By leveraging the security and immutability of blockchain technology and the privacy-preserving properties of zk-SNARKs, the network can provide a more secure and transparent payment infrastructure that is resistant to censorship and control by central authorities.</p>\n<p><strong>Example 6: Comparison to Centralized Payment Networks</strong></p>\n<p>Suppose a centralized payment network relies on a single trusted entity to process transactions and manage user balances. While this approach may offer high transaction throughput, it also presents several risks and limitations:</p>\n<ol>\n<li><strong>Single point of failure</strong>: If the central entity experiences technical issues or becomes compromised, the entire payment network may become unavailable or vulnerable to fraud.</li>\n<li><strong>Lack of transparency</strong>: Users must trust the central entity to manage their funds honestly and securely, without the ability to independently verify the state of their balances or the validity of transactions.</li>\n<li><strong>Censorship risk</strong>: The central entity may choose to block or reverse transactions based on their own criteria, censoring users or restricting access to the payment network.</li>\n</ol>\n<p>In contrast, the proposed decentralized payment network addresses these issues through its use of blockchain technology, zk-SNARKs, and a decentralized architecture:</p>\n<ol>\n<li><strong>Decentralization</strong>: The network is maintained by a distributed network of storage nodes and smart contracts, eliminating the single point of failure and ensuring the availability and resilience of the system.</li>\n<li><strong>Transparency and verifiability</strong>: Users can independently verify the state of their balances and the validity of transactions using the zk-SNARK proofs and the Merkle roots stored on-chain, providing a high level of transparency and trust in the system.</li>\n<li><strong>Censorship resistance</strong>: The decentralized nature of the network and the use of zk-SNARKs ensure that transactions cannot be easily censored or reversed by any single entity, preserving the freedom and autonomy of users.</li>\n</ol>\n<p>This example highlights the significant advantages of the proposed decentralized payment network over centralized alternatives, providing a more secure, transparent, and censorship-resistant payment infrastructure for users.</p>\n<h1><a name=\"analysis-25\" class=\"anchor\" href=\"https://ethresear.ch#analysis-25\"></a>Analysis</h1>\n<p>This section provides a comprehensive analysis of the security, privacy, and scalability properties of the proposed decentralized payment network, and compares it to alternative approaches.</p>\n<p>We delve into the technical details of the zk-SNARK implementation, discuss potential challenges and trade-offs, explore additional privacy-enhancing techniques, and consider the governance aspects of the system.</p>\n<h2><a name=\"security-analysis-26\" class=\"anchor\" href=\"https://ethresear.ch#security-analysis-26\"></a>Security Analysis</h2>\n<p>The security of the proposed network relies on the soundness and completeness of the zk-SNARK proofs, as well as the integrity of the hierarchical smart contract structure. We employ the state-of-the-art zk-SNARK construction proposed by Groth, which offers succinct proofs and efficient verification. The zk-SNARK scheme is built upon the q-Power Knowledge of Exponent (q-PKE) assumption and the q-Decisional Diffie-Hellman (q-DDH) assumption in bilinear groups.</p>\n<p>Let <span class=\"math\">\\mathcal{G}_1</span>, <span class=\"math\">\\mathcal{G}_2</span>, and <span class=\"math\">\\mathcal{G}_T</span> be cyclic groups of prime order <span class=\"math\">p</span>, and let <span class=\"math\">e : \\mathcal{G}_1 \\times \\mathcal{G}_2 \\rightarrow \\mathcal{G}_T</span> be a bilinear map. The q-PKE assumption states that for any polynomial-size adversary <span class=\"math\">\\mathcal{A}</span>, the following probability is negligible in the security parameter <span class=\"math\">\\lambda</span>:</p>\n<div class=\"math\">\n\\Pr\\left[\n\\begin{array}{c}\ng \\xleftarrow{\\$} \\mathcal{G}_1, \\quad \\alpha, s \\xleftarrow{\\$} \\mathbb{Z}_p, \\quad g_2 \\leftarrow g^{\\alpha},\\\\\n(c_1, \\ldots, c_q) \\xleftarrow{\\$} \\mathbb{Z}_p^q, \\quad t_i \\leftarrow g^{c_i} \\cdot g_2^{s \\cdot c_i},\\\\\n(h, \\hat{h}) \\leftarrow \\mathcal{A}(g, g_2, \\{t_i\\}_{i=1}^q) : \\\\\nh = g^s \\wedge \\hat{h} \\neq \\prod_{i=1}^q t_i^{c_i}\n\\end{array}\n\\right]\n</div>\n<p>The q-DDH assumption states that for any polynomial-size adversary <span class=\"math\">\\mathcal{A}</span>, the following probability is negligible in the security parameter <span class=\"math\">\\lambda</span>:</p>\n<div class=\"math\">\n\\Pr\\left[\n\\begin{array}{c}\ng \\xleftarrow{\\$} \\mathcal{G}_1, \\quad \\alpha, s, r \\xleftarrow{\\$} \\mathbb{Z}_p, \\quad g_2 \\leftarrow g^{\\alpha},\\\\\n(c_1, \\ldots, c_q) \\xleftarrow{\\$} \\mathbb{Z}_p^q, \\quad t_i \\leftarrow \\begin{cases}\ng_2^{c_i}, &amp; \\text{if } b=0\\\\\ng_2^{c_i + s}, &amp; \\text{if } b=1\n\\end{cases},\\\\\nb \\xleftarrow{\\$} \\{0, 1\\}, \\quad b' \\leftarrow \\mathcal{A}(g, g_2, \\{t_i\\}_{i=1}^q) : \\\\\nb = b'\n\\end{array}\n\\right]\n</div>\n<p>Under these assumptions, the zk-SNARK construction ensures that the proofs are sound and complete, meaning that a prover cannot create a valid proof for a false statement (soundness) and that a valid proof always verifies successfully (completeness). Consequently, transactions are guaranteed to be valid, and balances are correctly updated, preventing double-spending and other fraudulent activities.</p>\n<h1><a name=\"attack-vector-prevention-27\" class=\"anchor\" href=\"https://ethresear.ch#attack-vector-prevention-27\"></a>Attack Vector Prevention</h1>\n<p>The hierarchical smart contract structure, combined with the storage nodes, ensures that the network’s global state remains consistent and verifiable, even in the presence of malicious actors. The smart contracts are implemented using the Solidity language and are formally verified using the Oyente and Zeus tools to ensure their correctness and security.</p>\n<p><strong>1. Collusion during the trusted setup ceremony:</strong></p>\n<ul>\n<li>Mitigated by the use of secure multi-party computation (MPC) protocols like ZEXE, ensuring a distributed setup process.</li>\n<li>Involvement of diverse participants reduces the likelihood of successful collusion.</li>\n</ul>\n<p><strong>2. Collusion among users:</strong></p>\n<ul>\n<li>Prevented by the use of unforgeable and computationally binding zk-SNARK proofs (PLONK), making it infeasible for users to create valid proofs for fraudulent transactions.</li>\n<li>Smart contracts verify proofs before executing transactions, ensuring only legitimate transactions are processed.</li>\n</ul>\n<p><strong>3. Collusion among storage nodes:</strong></p>\n<ul>\n<li>Mitigated by the distributed storage architecture with multiple nodes maintaining data copies, making it difficult for nodes to collude and provide false data without detection.</li>\n<li>The use of Merkle trees and hash-based commitments allows smart contracts to verify data authenticity.</li>\n</ul>\n<p><strong>4. Smart contract vulnerabilities:</strong></p>\n<ul>\n<li>Addressed by formal verification tools, independent security audits, secure coding practices, access controls, and error handling mechanisms.</li>\n<li>Upgradability and emergency stop mechanisms allow for deploying security patches and freezing contracts in case of severe vulnerabilities.</li>\n</ul>\n<p><strong>5. Privacy leaks:</strong></p>\n<ul>\n<li>Mitigated by the use of zk-SNARKs, ensuring transaction privacy.</li>\n<li>Mixing techniques, anonymity networks, metadata obfuscation, and regular security assessments further enhance privacy protection.</li>\n</ul>\n<p><strong>6. Sybil attacks:</strong></p>\n<ul>\n<li>Inherently resistant due to the use of zk-SNARK proofs, smart contract verification, and the underlying blockchain’s consensus mechanism.</li>\n<li>The system’s design, including proof validity and economic disincentives, makes it infeasible for attackers to create and manipulate multiple identities or payment channels.</li>\n<li>The requirement of fees to set up payment channels and execute transactions further discourages Sybil attacks by making them financially costly for attackers.</li>\n</ul>\n<p><strong>7. Denial-of-Service (DoS) attacks:</strong></p>\n<ul>\n<li>Inherently mitigated by the computational cost of generating zk-SNARK proofs for each transaction, making it impractical for attackers to flood the network with a large number of transactions.</li>\n<li>The decentralized architecture and the resilience of the underlying Ethereum blockchain provide additional protection against DoS attacks.</li>\n</ul>\n<h1><a name=\"scalability-analysis-28\" class=\"anchor\" href=\"https://ethresear.ch#scalability-analysis-28\"></a>Scalability Analysis</h1>\n<p>The proposed decentralized payment network exhibits significant scalability potential due to its innovative use of zero-knowledge proofs (ZKPs), particularly zk-SNARKs, and the absence of traditional consensus mechanisms, which together enable instant finality. In this section, we will provide a detailed mathematical assessment and real-world benchmarks to validate the network’s scalability potential.</p>\n<h2><a name=\"mathematical-formalism-of-tps-scalability-29\" class=\"anchor\" href=\"https://ethresear.ch#mathematical-formalism-of-tps-scalability-29\"></a>Mathematical Formalism of TPS Scalability</h2>\n<p>Let us define the total time per transaction <span class=\"math\">T_{tx}</span> as the sum of the time for proof generation <span class=\"math\">T_{pg}</span>, network latency <span class=\"math\">T_{nl}</span>, and the overhead for contract execution and state updates <span class=\"math\">T_{oh}</span>. Given that we aim for high scalability, we will leverage parallel processing capabilities of nodes to handle multiple channels efficiently.</p>\n<div class=\"math\">\nT_{tx} = T_{pg} + T_{nl} + T_{oh}\n</div>\n<p>Assuming average values for these times, such as:</p>\n<div class=\"math\">\n\\begin{align*}\nT_{pg} &amp; \\approx 50 \\text{ ms} \\\\\nT_{nl} &amp; \\approx 50 \\text{ ms} \\\\\nT_{oh} &amp; \\approx 50 \\text{ ms} \\\\\n\\end{align*}\n</div>\n<p>The total time per transaction can be approximated as:</p>\n<div class=\"math\">\nT_{tx} = 50 \\text{ ms} + 50 \\text{ ms} + 50 \\text{ ms} = 150 \\text{ ms}\n</div>\n<p>Thus, the transactions per second (TPS) per node can be calculated as:</p>\n<div class=\"math\">\nTPS_{\\text{per node}} = \\frac{1}{T_{tx}} = \\frac{1}{150 \\text{ ms} / 1000 \\text{ ms/s}} \\approx 6.67 \\text{ TPS}\n</div>\n<p>If we consider the network scaling linearly with the number of nodes, the total TPS for <span class=\"math\">n</span> nodes can be expressed as:</p>\n<div class=\"math\">\nTPS_{\\text{total}} = TPS_{\\text{per node}} \\times n = 6.67 \\times n\n</div>\n<p>For example, with 100 nodes, the network could achieve:</p>\n<div class=\"math\">\nTPS_{\\text{total}} = 6.67 \\times 100 = 667 \\text{ TPS}\n</div>\n<h2><a name=\"tps-within-channels-30\" class=\"anchor\" href=\"https://ethresear.ch#tps-within-channels-30\"></a>TPS Within Channels</h2>\n<p>To further detail the TPS within individual payment channels, consider that each node can manage multiple channels. Let <span class=\"math\">c</span> denote the number of channels a node can handle, and let <span class=\"math\">T_{channel}</span> represent the time to process a transaction within a channel.</p>\n<div class=\"math\">\nT_{channel} = T_{pg} + T_{nl} + T_{oh} = 70 \\text{ ms} \\quad (\\text{considering optimized conditions})\n</div>\n<p>Thus, the TPS per channel:</p>\n<div class=\"math\">\nTPS_{\\text{per channel}} = \\frac{1}{T_{channel}} = \\frac{1}{70 \\text{ ms} / 1000 \\text{ ms/s}} \\approx 14.29 \\text{ TPS}\n</div>\n<p>If each node can handle <span class=\"math\">c</span> channels, the total TPS per node considering channels would be:</p>\n<div class=\"math\">\nTPS_{\\text{node, channels}} = TPS_{\\text{per channel}} \\times c\n</div>\n<p>Assuming a node can handle 10,000 channels:</p>\n<div class=\"math\">\nTPS_{\\text{node, channels}} = 14.29 \\times 10,000 = 142,900 \\text{ TPS}\n</div>\n<p>For a network with <span class=\"math\">n</span> nodes, the total TPS could be:</p>\n<div class=\"math\">\nTPS_{\\text{total, channels}} = 142,900 \\times n\n</div>\n<h2><a name=\"real-world-micro-benchmarks-31\" class=\"anchor\" href=\"https://ethresear.ch#real-world-micro-benchmarks-31\"></a>Real-World Micro Benchmarks</h2>\n<p>To validate these theoretical calculations, we consider benchmarks from existing state channel implementations:</p>\n<ol>\n<li><strong>Celer Network</strong>: Claims to handle up to 15,000 TPS per node.</li>\n<li><strong>Raiden Network</strong>: Aims for several thousand TPS per node.</li>\n<li><strong>Lightning Network</strong>: Estimates around 1,000 TPS per node in practical scenarios.</li>\n</ol>\n<p>Given these benchmarks, our assumption of handling 10,000 channels per node with approximately 14.29 TPS per channel, resulting in 142,900 TPS per node, is ambitious but within a reasonable range for a highly optimized implementation leveraging zk-SNARKs and efficient contract management.</p>\n<h2><a name=\"potential-bottlenecks-32\" class=\"anchor\" href=\"https://ethresear.ch#potential-bottlenecks-32\"></a>Potential Bottlenecks</h2>\n<p>Despite the promising scalability, several bottlenecks could impact performance:</p>\n<ol>\n<li><strong>Proof Generation and Verification</strong>: While zk-SNARKs are efficient, the complexity of proofs can increase with advanced use cases.</li>\n<li><strong>Network Latency</strong>: Global transactions can introduce delays that affect overall throughput.</li>\n<li><strong>Smart Contract Efficiency</strong>: Inefficiencies in smart contracts can create processing delays.</li>\n<li><strong>Storage and Data Management</strong>: Managing large numbers of channels and associated data could become challenging.</li>\n<li><strong>Node Reliability and Security</strong>: Ensuring the reliability and security of each node is critical.</li>\n</ol>\n<p>Addressing these bottlenecks through ongoing optimization and robust infrastructure will be crucial to achieving the theoretical TPS and ensuring the network’s scalability and robustness.</p>\n<h2><a name=\"summary-33\" class=\"anchor\" href=\"https://ethresear.ch#summary-33\"></a>Summary</h2>\n<p>The proposed decentralized payment network, leveraging zk-SNARKs and instant finality mechanisms, exhibits significant scalability potential. The mathematical formalism and real-world benchmarks indicate that the network can achieve high TPS by efficiently managing multiple channels per node. Continuous optimization and addressing potential bottlenecks will be essential to realizing this potential in practice.</p>\n<h1><a name=\"scalability-comparison-with-existing-layer-2-solutions-34\" class=\"anchor\" href=\"https://ethresear.ch#scalability-comparison-with-existing-layer-2-solutions-34\"></a>Scalability Comparison with Existing Layer 2 Solutions</h1>\n<h3><a name=\"key-features-of-the-proposed-network-35\" class=\"anchor\" href=\"https://ethresear.ch#key-features-of-the-proposed-network-35\"></a>Key Features of the Proposed Network</h3>\n<ol>\n<li><strong>Unilateral Payment Channels:</strong> Enables high transaction throughput by facilitating off-chain transactions.</li>\n<li><strong>Zero-Knowledge Proofs (zk-SNARKs):</strong> Ensures privacy and efficient transaction validity.</li>\n<li><strong>Instant Finality:</strong> Transactions achieve instant finality without on-chain confirmations.</li>\n<li><strong>Partitioned Storage Nodes:</strong> Manages off-chain data efficiently, reducing on-chain storage requirements.</li>\n</ol>\n<h2><a name=\"existing-layer-2-solutions-36\" class=\"anchor\" href=\"https://ethresear.ch#existing-layer-2-solutions-36\"></a>Existing Layer 2 Solutions</h2>\n<p><strong>State Channels (e.g., Lightning Network, Raiden Network):</strong></p>\n<ul>\n<li><strong>Scalability:</strong> High throughput off-chain.</li>\n<li><strong>Finality:</strong> Near-instant off-chain finality.</li>\n<li><strong>Challenges:</strong> Requires channel monitoring and on-chain closures.</li>\n</ul>\n<p><strong>Plasma:</strong></p>\n<ul>\n<li><strong>Scalability:</strong> High throughput with off-chain child chains.</li>\n<li><strong>Finality:</strong> Periodic on-chain commitments.</li>\n<li><strong>Challenges:</strong> Complex exit management and data availability.</li>\n</ul>\n<p><strong>Optimistic Rollups:</strong></p>\n<ul>\n<li><strong>Scalability:</strong> Batches transactions off-chain.</li>\n<li><strong>Finality:</strong> Delayed due to fraud proof periods.</li>\n<li><strong>Challenges:</strong> Requires fraud proof monitoring.</li>\n</ul>\n<p><strong>ZK-Rollups:</strong></p>\n<ul>\n<li><strong>Scalability:</strong> High throughput with off-chain transaction bundling.</li>\n<li><strong>Finality:</strong> Near-instant with zk-SNARKs.</li>\n<li><strong>Challenges:</strong> Complex proof generation.</li>\n</ul>\n<h2><a name=\"comparative-analysis-37\" class=\"anchor\" href=\"https://ethresear.ch#comparative-analysis-37\"></a>Comparative Analysis</h2>\n<p><strong>Throughput and Finality:</strong></p>\n<ul>\n<li>The proposed network achieves high throughput and instant finality, comparable to state channels and ZK-Rollups and superior to Optimistic Rollups.</li>\n</ul>\n<p><strong>Efficiency and Cost:</strong></p>\n<ul>\n<li>More cost-efficient by reducing on-chain transactions and eliminating mining, outperforming state channels and Plasma.</li>\n</ul>\n<p><strong>Data Management:</strong></p>\n<ul>\n<li>Efficient off-chain data management through partitioned storage nodes, similar to Plasma and rollups.</li>\n</ul>\n<p><strong>Security and Privacy:</strong></p>\n<ul>\n<li>Robust security and privacy with zk-SNARKs, comparable to ZK-Rollups and superior to solutions relying on fraud proofs.</li>\n</ul>\n<h1><a name=\"implementation-details-38\" class=\"anchor\" href=\"https://ethresear.ch#implementation-details-38\"></a>Implementation Details</h1>\n<p>The proposed decentralized payment network is implemented using a combination of Rust, TypeScript, and Solidity. The core components, such as the zk-SNARK proof generation and verification, are written in Rust for performance and security reasons. The smart contracts are developed using Solidity, while the frontend and client-side interactions are built with TypeScript.</p>\n<h3><a name=\"specific-zk-snark-construction-39\" class=\"anchor\" href=\"https://ethresear.ch#specific-zk-snark-construction-39\"></a>Specific zk-SNARK Construction</h3>\n<p>The system employs the PLONK zk-SNARK construction, which offers universality, updatability, and efficient proof generation and verification. PLONK allows for the creation of a universal and updateable structured reference string (SRS) that can be reused across multiple circuits or applications, reducing the complexity and coordination overhead associated with repeated trusted setups.</p>\n<p>The PLONK circuits are designed using the arkworks library in Rust, which provides a set of tools and primitives for building zk-SNARK circuits compatible with the PLONK proving system. The library supports efficient constraint generation, witness computation, and proof generation, making it well-suited for the development of the decentralized payment network.</p>\n<h3><a name=\"challenges-and-optimizations-40\" class=\"anchor\" href=\"https://ethresear.ch#challenges-and-optimizations-40\"></a>Challenges and Optimizations</h3>\n<p>One of the main challenges in implementing PLONK is the complexity of designing and optimizing the circuits to take advantage of the universal SRS. This requires a deep understanding of the PLONK framework and the techniques for constructing efficient and secure circuits.</p>\n<p>To address this challenge, the implementation leverages various optimization techniques, such as:</p>\n<ol>\n<li>Constraint system optimization: Minimizing the number of constraints in the circuit by using efficient gate design and layout techniques, such as gate aggregation and constant folding.</li>\n<li>Witness compression: Reducing the size of the witness by using compact data representations and eliminating redundant information.</li>\n<li>Proof aggregation: Batching multiple proofs together to reduce the overall proof size and verification cost.</li>\n</ol>\n<p>These optimizations help to improve the performance and scalability of the PLONK-based zk-SNARK circuits, ensuring that the decentralized payment network can handle a high volume of transactions efficiently.</p>\n<h3><a name=\"integration-with-ethereum-41\" class=\"anchor\" href=\"https://ethresear.ch#integration-with-ethereum-41\"></a>Integration with Ethereum</h3>\n<p>The smart contracts for the payment network are implemented using Solidity and deployed on the Ethereum blockchain. The contracts interact with the PLONK proofs generated by the Rust components through a verification contract that is optimized for the PLONK proving system.</p>\n<p>The verification contract is designed to be gas-efficient and supports batch verification of PLONK proofs, allowing multiple proofs to be verified in a single transaction. This helps to reduce the overall cost and improve the throughput of the system.</p>\n<h3><a name=\"trusted-setup-ceremony-42\" class=\"anchor\" href=\"https://ethresear.ch#trusted-setup-ceremony-42\"></a>Trusted Setup Ceremony</h3>\n<p>As PLONK requires a trusted setup for the universal SRS, a multi-party computation (MPC) ceremony is conducted to generate the SRS. The ceremony involves multiple participants from different organizations and backgrounds, ensuring that no single party has control over the entire setup process.</p>\n<p>The MPC ceremony is organized and facilitated using secure computation frameworks, such as the ZEXE library, which provides a set of tools and protocols for conducting distributed key generation and parameter setup.</p>\n<h4><a name=\"concise-example-private-asset-transfer-43\" class=\"anchor\" href=\"https://ethresear.ch#concise-example-private-asset-transfer-43\"></a>Concise Example: Private Asset Transfer</h4>\n<p>In a private asset transfer, Alice can transfer assets to Bob without revealing the transaction details to the public. Using PLONK, Alice generates a proof π that verifies the validity of the transfer and her sufficient balance without disclosing the transaction amount Δ.</p>\n<p>Transfer <span class=\"math\">T = (A, B, \\pi)</span> where <span class=\"math\">\\pi</span> is the PLONK proof</p>\n<ol>\n<li><span class=\"math\">\\pi \\leftarrow \\text{generateProof}(A, B, \\Delta)</span></li>\n<li>Submit <span class=\"math\">(A, B, \\pi)</span> to the transfer contract</li>\n<li>Contract verifies <span class=\"math\">\\pi</span>\n<ul>\n<li>If <span class=\"math\">\\pi</span> is valid, execute transfer from <span class=\"math\">A</span> to <span class=\"math\">B</span></li>\n<li>Else, reject transfer</li>\n</ul>\n</li>\n</ol>\n<p>The proof <span class=\"math\">\\pi</span> ensures the following conditions:</p>\n<ul>\n<li><span class=\"math\">B_A \\geq \\Delta</span> (Alice’s balance is sufficient)</li>\n<li><span class=\"math\">B_A' = B_A - \\Delta</span> (Alice’s updated balance)</li>\n<li><span class=\"math\">B_B' = B_B + \\Delta</span> (Bob’s updated balance)</li>\n</ul>\n<p>The smart contract executes the transfer only if the proof is valid, ensuring the transfer’s legitimacy without revealing the transaction details.</p>\n<p>By leveraging PLONK, the proposed decentralized payment network achieves a balance between privacy, scalability, and ease of implementation. The universal and updateable nature of PLONK, combined with the optimization techniques and secure trusted setup ceremony, provides a solid foundation for building a privacy-focused and efficient payment system.</p>\n<h1><a name=\"use-cases-for-privacy-44\" class=\"anchor\" href=\"https://ethresear.ch#use-cases-for-privacy-44\"></a>Use Cases for Privacy</h1>\n<h3><a name=\"confidential-voting-systems-45\" class=\"anchor\" href=\"https://ethresear.ch#confidential-voting-systems-45\"></a>Confidential Voting Systems</h3>\n<p>Confidential voting systems are a critical use case for enhanced privacy in decentralized networks. Voting systems must ensure that each vote is anonymous and secure while maintaining the integrity and transparency of the election process. By leveraging zk-SNARKs, our network can provide a solution that guarantees the confidentiality of votes while allowing for public verification of election results.</p>\n<p>In a confidential voting system built on the proposed network, voters would cast their votes through private transactions, with zk-SNARKs proving that each vote is valid and belongs to an eligible voter without revealing the voter’s identity. The votes would be tallied through a series of confidential transactions, with the final result verifiable through the aggregated Merkle roots stored on-chain. This approach ensures that the voting process is transparent and auditable while preserving the privacy of individual voters.</p>\n<h3><a name=\"private-asset-transfers-46\" class=\"anchor\" href=\"https://ethresear.ch#private-asset-transfers-46\"></a>Private Asset Transfers</h3>\n<p>Private asset transfers are another significant use case for enhanced privacy in a decentralized network. These transfers require confidentiality to protect the financial privacy of users, ensuring that transaction details remain private while the integrity of the transfer is verifiable.</p>\n<p>With the proposed network, users can transfer assets through confidential payment channels, with zk-SNARKs proving the validity of the transactions without revealing the amounts or the identities of the parties involved. This feature is particularly valuable for businesses and individuals who wish to keep their financial transactions private, such as in the case of sensitive business deals, wealth management, or personal remittances.</p>\n<h3><a name=\"secure-health-records-management-47\" class=\"anchor\" href=\"https://ethresear.ch#secure-health-records-management-47\"></a>Secure Health Records Management</h3>\n<p>Secure health records management is an essential use case for enhanced privacy, where sensitive health information must be kept confidential while ensuring that authorized parties can verify the records. Using zk-SNARKs, the proposed network can enable the secure storage and sharing of health records while maintaining patient privacy.<br>\nIn this use case, health records would be stored off-chain, with zk-SNARKs proving the authenticity and integrity of the records without revealing their contents. Patients can grant access to their records to authorized parties, such as healthcare providers or insurance companies, through private transactions. The authorized parties can then verify the records’ authenticity using the zk-SNARK proofs, ensuring that the records have not been tampered with while preserving patient confidentiality.</p>\n<h3><a name=\"global-payment-system-48\" class=\"anchor\" href=\"https://ethresear.ch#global-payment-system-48\"></a>Global Payment System</h3>\n<p>A global payment system is perhaps the most scalable and impactful use case for a decentralized network with enhanced privacy. Such a system must provide sufficient privacy to protect user transactions while ensuring transparency and scalability to facilitate mass adoption. By leveraging zk-SNARKs, the proposed network can achieve a balanced privacy level that ensures transaction confidentiality without hindering scalability or regulatory compliance.</p>\n<p>In a global payment system built on the proposed network, users can transact through confidential payment channels, with zk-SNARKs proving the validity of transactions without revealing the amounts or the identities of the parties involved. This privacy level can be customized based on the specific requirements of different jurisdictions, ensuring compliance with local regulations while still preserving user privacy.</p>\n<p>To facilitate cross-border transactions and enable seamless interoperability with existing payment systems, the network can integrate with traditional financial institutions and payment processors through secure off-chain communication channels. These channels can leverage zk-SNARKs to prove the authenticity of transactions and balances without revealing sensitive information, enabling a hybrid approach that combines the benefits of decentralized privacy with the reach and stability of established financial networks.</p>\n<p>By leveraging zk-SNARKs in these use cases, the proposed decentralized payment network can provide enhanced privacy and scalability, making it suitable for a wide range of applications. These examples illustrate how the network can achieve a balance between privacy and transparency, facilitating mass adoption while maintaining the necessary confidentiality.</p>\n<h1><a name=\"conclusion-49\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-49\"></a>Conclusion</h1>\n<p>The proposed decentralized payment network offers:</p>\n<ol>\n<li><strong>Higher Throughput:</strong> Comparable to or exceeding state channels and rollups.</li>\n<li><strong>Instant Finality:</strong> Superior to Optimistic Rollups.</li>\n<li><strong>Cost Efficiency:</strong> Reduces on-chain interactions and eliminates mining.</li>\n<li><strong>Enhanced Privacy:</strong> Matches or surpasses ZK-Rollups.</li>\n</ol>\n<p>The unique combination of features in the proposed network makes it a potentially more scalable and private solution compared to existing Layer 2 systems.<br>\nBy leveraging zk-SNARKs in these use cases, we can provide enhanced privacy and scalability, making our decentralized network suitable for a wide range of applications. These examples illustrate how the network can achieve a balance between privacy and transparency, facilitating mass adoption while maintaining the necessary confidentiality.</p>\n<h1><a name=\"references-50\" class=\"anchor\" href=\"https://ethresear.ch#references-50\"></a>References</h1>\n<ol>\n<li>Poon, J., &amp; Dryja, T. (2016). The Bitcoin Lightning Network: Scalable Off-Chain Instant Payments. <em>Lightning Network Whitepaper</em>. <a href=\"https://lightning.network/lightning-network-paper.pdf\" rel=\"noopener nofollow ugc\">https://lightning.network/lightning-network-paper.pdf</a></li>\n<li>Buterin, V., &amp; Poon, J. (2017). Plasma: Scalable Autonomous Smart Contracts. <em>Plasma Whitepaper</em>. <a href=\"https://plasma.io/plasma.pdf\" rel=\"noopener nofollow ugc\">https://plasma.io/plasma.pdf</a></li>\n<li>Raiden Network Team. (2017). Raiden Network: Fast, Cheap, Scalable Token Transfers for Ethereum. <a href=\"https://raiden.network/101.html\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Raiden Network</a></li>\n<li>Celer Network. (2019). Celer Network: Bring Internet Scale to Every Blockchain. <em>Celer Network Whitepaper</em>. <a href=\"https://www.celer.network/doc/CelerNetwork-Whitepaper.pdf\" rel=\"noopener nofollow ugc\">https://www.celer.network/doc/CelerNetwork-Whitepaper.pdf</a></li>\n<li>PLONK Documentation. (n.d.). ZK-SNARKs: PLONK. Retrieved from <a href=\"https://docs.plonk.cafe/\" rel=\"noopener nofollow ugc\">https://docs.plonk.cafe/</a></li>\n<li>Ben-Sasson, E., Chiesa, A., Tromer, E., &amp; Virza, M. (2014). Scalable Zero-Knowledge via Cycles of Elliptic Curves. In <em>International Cryptology Conference</em> (pp. 276-294). Springer, Berlin, Heidelberg.</li>\n<li>Groth, J. (2016). On the Size of Pairing-based Non-interactive Arguments. In <em>Annual International Conference on the Theory and Applications of Cryptographic Techniques</em> (pp. 305-326). Springer, Berlin, Heidelberg.</li>\n<li>Zhang, F., Cecchetti, E., Croman, K., Juels, A., &amp; Shi, E. (2016). Town Crier: An Authenticated Data Feed for Smart Contracts. In <em>Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security</em> (pp. 270-282).</li>\n<li>Ben-Sasson, E., Chiesa, A., Genkin, D., Tromer, E., &amp; Virza, M. (2015). SNARKs for C: Verifying Program Executions Succinctly and in Zero Knowledge. In <em>Annual Cryptology Conference</em> (pp. 90-108). Springer, Berlin, Heidelberg.</li>\n<li>Hioki, L., Dompeldorius, A., &amp; Hashimoto, Y. (2024). Plasma Next: Plasma without Online Requirements. <em>Ethereum Research</em>. Retrieved from <a href=\"https://ethresear.ch/t/plasma-next-plasma-without-online-requirements/18786\" class=\"inline-onebox\">Plasma Next: Plasma without Online Requirements</a></li>\n</ol>\n            <p><small>2 posts - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/1st-completely-trustless-blockchain-using-pure-math-and-zk-snarks-for-validation-high-censorship-resistance/19756\">Read full topic</a></p>","link":"https://ethresear.ch/t/1st-completely-trustless-blockchain-using-pure-math-and-zk-snarks-for-validation-high-censorship-resistance/19756","pubDate":"Thu, 06 Jun 2024 19:34:00 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19756"},"source":{"@url":"https://ethresear.ch/t/1st-completely-trustless-blockchain-using-pure-math-and-zk-snarks-for-validation-high-censorship-resistance/19756.rss","#text":"1st completely trustless Blockchain, using pure math and zk-snarks for validation. = High censorship resistance"}},{"title":"Is it worth using MEV-Boost?","dc:creator":"Nero_eth","category":"Economics","description":"<h1><a name=\"is-it-worth-using-mev-boost-1\" class=\"anchor\" href=\"https://ethresear.ch#is-it-worth-using-mev-boost-1\"></a>Is it worth using MEV-Boost?</h1>\n<p>To answer that question from an economic perspective, we will look into the APYs.<br>\n&gt; <em>For simplicity, we assume a total of 1 million active validators and ignore sync-committee rewards.</em><br>\n&gt; <em>The underlying data ranges from November 2023 - 6 June 2024 and includes all slots.</em></p>\n<p>First, let’s check the <strong>difference between local block building and using MEV-Boost</strong>.<br>\nWe can see that the block reward is higher for MEV-Boost users:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/9/e91a721ea6757f818e7a0fd840534c63a581145e.png\" data-download-href=\"https://ethresear.ch/uploads/default/e91a721ea6757f818e7a0fd840534c63a581145e\" title=\"reward_comparison (3)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/9/e91a721ea6757f818e7a0fd840534c63a581145e_2_690x316.png\" alt=\"reward_comparison (3)\" data-base62-sha1=\"xg7UrIIoRbKFT6xFOkrE06yGpwG\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/9/e91a721ea6757f818e7a0fd840534c63a581145e_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/e/9/e91a721ea6757f818e7a0fd840534c63a581145e_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/9/e91a721ea6757f818e7a0fd840534c63a581145e.png 2x\" data-dominant-color=\"F8E5E4\"></a></div><p></p>\n<p><strong>The median block reward increases from 0.0076 to 0.0380 ETH (400% more).</strong></p>\n<h2><a name=\"what-does-that-mean-on-an-annual-basis-2\" class=\"anchor\" href=\"https://ethresear.ch#what-does-that-mean-on-an-annual-basis-2\"></a>What does that mean on an annual basis?</h2>\n<p>The statistical 2.6 blocks a validator gets to propose per year yield a total of <strong>0.0199 ETH in block rewards</strong>.<br>\nFor MEV-Boost blocks, the 2.6 blocks yield a total of <strong>0.0998 ETH per year</strong>.</p>\n<p>When shown in a pie chart, we can see that the share of the block reward (green) grows from 2.96% to 13.4%, compared to the total expected rewards per year.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/4/c452b447c422ed7be7095bd313ef4f9081bcf9c4.png\" data-download-href=\"https://ethresear.ch/uploads/default/c452b447c422ed7be7095bd313ef4f9081bcf9c4\" title=\"rewards_comp_pie\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/4/c452b447c422ed7be7095bd313ef4f9081bcf9c4_2_690x316.png\" alt=\"rewards_comp_pie\" data-base62-sha1=\"s0KMbuiLlX2JvfESoEpDSJNXsEc\" width=\"690\" height=\"316\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/4/c452b447c422ed7be7095bd313ef4f9081bcf9c4_2_690x316.png, https://ethresear.ch/uploads/default/optimized/3X/c/4/c452b447c422ed7be7095bd313ef4f9081bcf9c4_2_1035x474.png 1.5x, https://ethresear.ch/uploads/default/original/3X/c/4/c452b447c422ed7be7095bd313ef4f9081bcf9c4.png 2x\" data-dominant-color=\"D0DBDF\"></a></div><p></p>\n<h3><a name=\"what-does-that-mean-for-the-apy-3\" class=\"anchor\" href=\"https://ethresear.ch#what-does-that-mean-for-the-apy-3\"></a>What does that mean for the APY?</h3>\n<p>For validators <strong>not using MEV-Boost</strong>, the expected annual revenue is <strong>0.929 ETH.</strong><br>\nFor validators <strong>using MEV-Boost</strong>, the expected annual revenue is <strong>1.009 ETH.</strong><br>\n<strong>These are additional ~8.6% of revenue.</strong></p>\n<p><strong>Using MEV-Boost increases the APR from 2.93% to 3.24%.</strong></p>\n<p>For the <strong>APY</strong> (compounding every epoch):</p>\n<p><span class=\"math\">\\text{APY}_{local\\ builder} = \\left(1 + \\frac{\\text{APR}}{n} \\right)^n - 1  = \\left(1 + \\frac{\\text{0.0297}}{365 \\times 225} \\right)^{365 \\times 225} - 1 = 2.97\\%</span></p>\n<p><span class=\"math\">\\text{APY}_{mevboost} = \\left(1 + \\frac{\\text{APR}}{n} \\right)^n - 1  = \\left(1 + \\frac{\\text{0.0324}}{365 \\times 225} \\right)^{365 \\times 225} - 1 = 3.29\\%</span></p>\n<p><strong>Finally, using MEV-Boost increases the APY from 2.97% to 3.29%.</strong></p>\n<hr>\n<p>Find the code used for this analysis <a href=\"https://github.com/nerolation/is-mevboost-worth-it\">here</a>.</p>\n            <p><small>10 posts - 7 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/is-it-worth-using-mev-boost/19753\">Read full topic</a></p>","link":"https://ethresear.ch/t/is-it-worth-using-mev-boost/19753","pubDate":"Thu, 06 Jun 2024 16:15:23 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19753"},"source":{"@url":"https://ethresear.ch/t/is-it-worth-using-mev-boost/19753.rss","#text":"Is it worth using MEV-Boost?"}},{"title":"Gossipsub Network Dynamicity through GRAFTs and PRUNEs","dc:creator":"yiannisbot","category":"Networking","description":"<h1><a name=\"summary-tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#summary-tldr-1\"></a>Summary &amp; TL;DR</h1>\n<p>The ProbeLab team (<a href=\"https://probelab.io/\" rel=\"noopener nofollow ugc\">https://probelab.io </a>) is carrying out a study on the performance of Gossipsub in Ethereum’s P2P network. Following from our previous post on the <a href=\"https://ethresear.ch/t/gossip-iwant-ihave-effectiveness-in-ethereums-gossipsusb-network/19686\">“Effectiveness of Gossipsub’s gossip mechanism”</a>, in this post we investigate the frequency of <code>GRAFT</code> and <code>PRUNE</code> messages and the dynamicity in terms of session duration and network stability that results from these protocol primitives. For the purposes of this study, we have built a tool called Hermes (<a href=\"https://github.com/probe-lab/hermes/\" rel=\"noopener nofollow ugc\">GitHub - probe-lab/hermes: A Gossipsub listener and tracer. </a>), which acts as a GossipSub listener and tracer. Hermes subscribes to all relevant pubsub topics and traces all protocol interactions. The results reported here are from a 3.5hr trace.</p>\n<p><strong>Study Description:</strong> The purpose of this study is to determine the frequency between <code>GRAFT</code> and <code>PRUNE</code> messages as a distribution and standard deviation per topic. We measure the session duration between our peer and other peers, split per client and attempt to identify any anomalies (e.g., too short connections) and potential patterns.</p>\n<p><strong>TL;DR:</strong> <strong>Overall, we conclude that Gossipsub is keeping a stable mesh as far as the <code>MeshDegree</code> goes</strong>, barely exceeding the <code>DLow</code> and <code>DHigh</code> thresholds of 6 and 12, respectively, despite increased dynamicity at times (i.e., increased numbers of <code>GRAFTs</code> and <code>PRUNEs</code>). <strong>Teku nodes always tear down connections to our node within a few seconds (or less) and fail to keep any connection running for longer periods of time (even minutes).</strong> This fact is likely to lead to some instability, which, however, doesn’t seem to be impacting the correct operation of the rest of the network.</p>\n<blockquote>\n<p>For more details and results on Ethereum’s network head over to <a href=\"https://probelab.io/\" rel=\"noopener nofollow ugc\">https://probelab.io </a> for discv5 Weekly Network Health Reports.</p>\n</blockquote>\n<h1><a name=\"background-2\" class=\"anchor\" href=\"https://ethresear.ch#background-2\"></a>Background</h1>\n<p>GossipSub is the most widely used libp2p PubSub routing mechanism. Gossipsub includes enhanced PubSub routing that aims to reduce the bandwidth by maintaining fewer connections per subscribed topic (through the mesh) and sending some sporadic message metadata for resilience purposes (through the gossip mechanism). This ensures that despite the message being broadcasted using the shortest latency path (mesh), the peers still have the backup of sharing <code>msg_ids</code> (gossip) to prevent missing messages that have already propagated through the network.</p>\n<p>Because GossipSub reduces the overall number of connected peers by topic, known as meshes, having enough peers on these is crucial for efficient message broadcasting in any network. These meshes work as a connectivity sub-layer under the libp2p connections, as there is no direct map between 1_libp2p_peer_connection ↔ 1_mesh_peer_connection.<br>\nThis differentiation provides efficiency to the protocol, as a peer doesn’t need to “waste” bandwidth sending full messages to more peers than the needed ones while avoiding to spam peers who already shared the same message.</p>\n<p>However, this means that the routing mechanism has to control how many peers it is connected to, or how many it needs to <code>GRAFT</code> (add) or <code>PRUNE</code> (remove) for each mesh, complicating things a little more.</p>\n<p>This report provides insights into the <code>GRAFT</code> and <code>PRUNE</code> events (Network Dynamicity), and RPC calls (Session Duration) that our <code>Hermes</code>-based node [<a href=\"https://github.com/probe-lab/hermes/\" rel=\"noopener nofollow ugc\">link to Hermes GH repo</a>] could track over 3.5 hours while participating in the Holesky testnet.</p>\n<h1><a name=\"results-3\" class=\"anchor\" href=\"https://ethresear.ch#results-3\"></a>Results</h1>\n<h3><a name=\"add-and-remove-peer-events-4\" class=\"anchor\" href=\"https://ethresear.ch#add-and-remove-peer-events-4\"></a>Add and Remove peer events</h3>\n<p>The stability of the network’s mesh relies heavily on the connections that the libp2p host keeps open. The following graph shows the number of <code>ADD_PEER</code> and <code>REMOVE_PEER</code> that the Hermes node tracked during the 3.5 hour run.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/9/69d25298153741ab11ad06836c18a6a5e46d85a2.png\" data-download-href=\"https://ethresear.ch/uploads/default/69d25298153741ab11ad06836c18a6a5e46d85a2\" title=\"add-remove-peers-overall\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/9/69d25298153741ab11ad06836c18a6a5e46d85a2_2_517x309.png\" alt=\"add-remove-peers-overall\" data-base62-sha1=\"f68KpsTmQ1RkAEVvAwXzR8NJdgC\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/9/69d25298153741ab11ad06836c18a6a5e46d85a2_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/6/9/69d25298153741ab11ad06836c18a6a5e46d85a2_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/9/69d25298153741ab11ad06836c18a6a5e46d85a2.png 2x\" data-dominant-color=\"F6F4F4\"></a></div><p></p>\n<p>From the plot, we don’t see any particularly inconsistent behaviour or pattern that stands out. The number of connections and disconnections at the libp2p host remains relatively stable around ~40 events per minute.</p>\n<h3><a name=\"graft-and-prune-events-5\" class=\"anchor\" href=\"https://ethresear.ch#graft-and-prune-events-5\"></a><code>GRAFT</code> and <code>PRUNE</code> events</h3>\n<p><code>GRAFT</code> and <code>PRUNE</code> messages define when a peer is added or removed from a mesh we subscribe to. Thus, they directly show the dynamics of the peer connections within a topic mesh.</p>\n<p>The following graph shows the number of <code>GRAFTs</code> and <code>PRUNEs</code> registered by the <code>Hermes</code> node.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/7/b727e2a934e16138448ad37108aad42f831ed244.png\" data-download-href=\"https://ethresear.ch/uploads/default/b727e2a934e16138448ad37108aad42f831ed244\" title=\"graft-prune-all-topics\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/7/b727e2a934e16138448ad37108aad42f831ed244_2_517x309.png\" alt=\"graft-prune-all-topics\" data-base62-sha1=\"q8gPwXDy3j368eK0Ps6YWGbRZJy\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/7/b727e2a934e16138448ad37108aad42f831ed244_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/b/7/b727e2a934e16138448ad37108aad42f831ed244_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/b/7/b727e2a934e16138448ad37108aad42f831ed244.png 2x\" data-dominant-color=\"FAF9F8\"></a></div><p></p>\n<p>We have also split this down by topic, and produced related plots, which however, we don’t include here, as the split is roughly equal among topics.</p>\n<p>We observe that the number of recorded events spikes after the ~2.5 hours of Hermes operation, jumping from peaks of ~100 events per minute to peaks of up to 700-800 events per minute.</p>\n<h3><a name=\"correlation-with-graft-and-prune-rpc-events-6\" class=\"anchor\" href=\"https://ethresear.ch#correlation-with-graft-and-prune-rpc-events-6\"></a>Correlation with <code>GRAFT</code> and <code>PRUNE</code> RPC events</h3>\n<p>After 2 hours of the node being up online, we can see that the GossipSub host tracks mesh connectivity at a higher frequency than during the first hours. Since the RPC calls can include multiple topic <code>GRAFTs</code> or <code>PRUNEs</code>, these events correspond to the sum of original sent and received RPC calls.</p>\n<p>Taking a closer look at the origin of those messages with the following plot, we can see that the most significant number of events belong to <code>RECV_PRUNE</code> and <code>SENT_GRAFTs</code>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/0/50d7b77597f2824a7f9a9c6559bea2f78cfe1b08.png\" data-download-href=\"https://ethresear.ch/uploads/default/50d7b77597f2824a7f9a9c6559bea2f78cfe1b08\" title=\"graft_prune_rpc_collection_all_graft_and_prune_rpc_calls\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/0/50d7b77597f2824a7f9a9c6559bea2f78cfe1b08_2_517x309.png\" alt=\"graft_prune_rpc_collection_all_graft_and_prune_rpc_calls\" data-base62-sha1=\"bxamQ8oxg7uUKAvQiuAoCR4dXe0\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/0/50d7b77597f2824a7f9a9c6559bea2f78cfe1b08_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/5/0/50d7b77597f2824a7f9a9c6559bea2f78cfe1b08_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/0/50d7b77597f2824a7f9a9c6559bea2f78cfe1b08.png 2x\" data-dominant-color=\"F9F9F8\"></a></div><p></p>\n<p>As before, we have also split this down by topic, and produced related plots, which however, we don’t include here, as the split is roughly equal among topics.</p>\n<p>We can see that there is some perturbation to the stability of the meshes due to increased number of <code>GRAFT</code> and <code>PRUNE</code> events at the end of the trace period. There are two possible explanations for this:</p>\n<ul>\n<li>Remote nodes are dropping our connection for whatever reason (low peer score, or just sporadic <code>PRUNE</code> messages because their mesh is full), and our <code>Hermes</code> node counters this drop of peers by sending more <code>GRAFT</code> messages to keep it up with the <code>MeshDegree = 8</code> .</li>\n<li>We are sending too many <code>GRAFT</code> messages to rotate our peers and test the connection to other nodes in the network, which is countered by the remote peers by sending <code>PRUNE</code> messages as their mesh might be full already. Note that <code>Hermes</code> has an upper limit of 500 simultaneous connections, so we expect it to have a higher range of connected peers than other nodes in the network.</li>\n</ul>\n<p>In any case, we do not consider this to be an alarming event and the increased number of events might just be due to increased network activity. We will verify that this is not an alarming case through further experiments in the near future, where we’ll collect traces for a longer period of time.</p>\n<h3><a name=\"mesh-connection-times-7\" class=\"anchor\" href=\"https://ethresear.ch#mesh-connection-times-7\"></a>Mesh connection times</h3>\n<p>It is important to have a mix between steady connections and some rotation degree of these ones within each of the topic meshes. In fact, this level of rotation is the one that can guarantee that a node doesn’t end up eclipsed by malicious actors (although GossipSub-v1.1 does have the gossiping feature as well to overcome eclipse attempts).<br>\nThe following graphs show the average connection times per peer and per mesh.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/6/66fb050fc61e3129fb919dd9610a801b39b7ae25.png\" data-download-href=\"https://ethresear.ch/uploads/default/66fb050fc61e3129fb919dd9610a801b39b7ae25\" title=\"connection_stability_cdf_per_topic\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/6/66fb050fc61e3129fb919dd9610a801b39b7ae25_2_517x309.png\" alt=\"connection_stability_cdf_per_topic\" data-base62-sha1=\"eH0vA0nEiO5mUfqQ6ocAdOGkhEN\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/6/66fb050fc61e3129fb919dd9610a801b39b7ae25_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/6/6/66fb050fc61e3129fb919dd9610a801b39b7ae25_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/6/66fb050fc61e3129fb919dd9610a801b39b7ae25.png 2x\" data-dominant-color=\"F9F9F9\"></a></div><p></p>\n<p>Measuring which is the average connection stability at the node level can showcase weird behaviours from the network. In this case, our <code>Hermes</code> run did measure dispersed results were:</p>\n<ul>\n<li>80% of the peers drop the connection after a few seconds of establishing it, although it has to be noted that the high percentage here owes to the spikes we’ve seen towards the end of the trace period in this particular dataset. We do not expect this to be the normal behaviour under “steady state”.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/a/aa2b04f9e67c1fa8016566a43b29bf371df1ea0e.png\" data-download-href=\"https://ethresear.ch/uploads/default/aa2b04f9e67c1fa8016566a43b29bf371df1ea0e\" title=\"connection_stability_cdf_per_topic-80\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/a/aa2b04f9e67c1fa8016566a43b29bf371df1ea0e_2_517x309.png\" alt=\"connection_stability_cdf_per_topic-80\" data-base62-sha1=\"ohnkZX6RJPrzZHubT89EoYsWpSC\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/a/aa2b04f9e67c1fa8016566a43b29bf371df1ea0e_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/a/a/aa2b04f9e67c1fa8016566a43b29bf371df1ea0e_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/a/aa2b04f9e67c1fa8016566a43b29bf371df1ea0e.png 2x\" data-dominant-color=\"F8F8F8\"></a></div><p></p>\n<ul>\n<li>10% of the peers remain connected for a total of ~4 minutes.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/a/8a01eb6b12aa60b64754879178b983fb20e68bfa.png\" data-download-href=\"https://ethresear.ch/uploads/default/8a01eb6b12aa60b64754879178b983fb20e68bfa\" title=\"connection_stability_cdf_per_topic-10\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/a/8a01eb6b12aa60b64754879178b983fb20e68bfa_2_517x309.png\" alt=\"connection_stability_cdf_per_topic-10\" data-base62-sha1=\"jGS0e2fmNaTcWpB9Vs1TRHtHisi\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/a/8a01eb6b12aa60b64754879178b983fb20e68bfa_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/8/a/8a01eb6b12aa60b64754879178b983fb20e68bfa_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/8/a/8a01eb6b12aa60b64754879178b983fb20e68bfa.png 2x\" data-dominant-color=\"F9F9F9\"></a></div><p></p>\n<ul>\n<li>the remaining 10% of the connections remain between ~5 mins and 1.6 hours.</li>\n</ul>\n<p>However, these plots do not give the full picture. As we saw with the number of <code>GRAFT</code> and <code>PRUNE</code> messages, there is a time relation on these distributions. What this means is that just because 80% of the connections happen within the first second, doesn’t really mean that they were recently distributed over the trace period. To provide more clarity, we plot the connection duration (in seconds) split in 30min windows over the 3.5hr trace period.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/7/d7497c137c7f6a4f77e93f3c5bef2454db964bb5.png\" data-download-href=\"https://ethresear.ch/uploads/default/d7497c137c7f6a4f77e93f3c5bef2454db964bb5\" title=\"connection-duration-30min-window-total\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/7/d7497c137c7f6a4f77e93f3c5bef2454db964bb5_2_517x309.png\" alt=\"connection-duration-30min-window-total\" data-base62-sha1=\"uIw5Yim5FCUnVAJqTD4ptHHYHo9\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/7/d7497c137c7f6a4f77e93f3c5bef2454db964bb5_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/d/7/d7497c137c7f6a4f77e93f3c5bef2454db964bb5_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/d/7/d7497c137c7f6a4f77e93f3c5bef2454db964bb5.png 2x\" data-dominant-color=\"F1F3F5\"></a></div><p></p>\n<p>Correlating the sudden spikes of GRAFT and PRUNE towards the end of the trace period, we find the following: the connections established over the first 2 hours and a half were indeed longer in duration.</p>\n<p>We have created graphs breaking down the connections by topic, by agent, and by both topic and agent for 30min windows. We present only one representative plot here, as we didn’t see any behaviour that stands out, other than the following:</p>\n<ul>\n<li>Lodestar clearly maintains connections for longer periods of time, followed by Nimbus</li>\n<li>Teku nodes consistently disconnect almost immediately.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/7/679381131aa608c213d2e3de19ca87ecfd44454e.png\" data-download-href=\"https://ethresear.ch/uploads/default/679381131aa608c213d2e3de19ca87ecfd44454e\" title=\"connection_duration-30min_user_agents_total\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/7/679381131aa608c213d2e3de19ca87ecfd44454e_2_517x309.png\" alt=\"connection_duration-30min_user_agents_total\" data-base62-sha1=\"eMhcKSbvtrn86jfIDLwXRNZBsLQ\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/7/679381131aa608c213d2e3de19ca87ecfd44454e_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/6/7/679381131aa608c213d2e3de19ca87ecfd44454e_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/7/679381131aa608c213d2e3de19ca87ecfd44454e.png 2x\" data-dominant-color=\"F5F4F4\"></a></div><p></p>\n<p>Both of our observations are also evident from the following table, which includes the percentiles of the total connected time per client (in seconds).</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Percentiles</th>\n<th>p25</th>\n<th>p50</th>\n<th>p80</th>\n<th>p90</th>\n<th>p99</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Grandine</td>\n<td>6.53</td>\n<td>17.22</td>\n<td>31.52</td>\n<td>43.67</td>\n<td>117.36</td>\n</tr>\n<tr>\n<td>Lighthouse</td>\n<td>9.94</td>\n<td>19.82</td>\n<td>36.25</td>\n<td>74.89</td>\n<td>570.02</td>\n</tr>\n<tr>\n<td>Lodestar</td>\n<td>2.06</td>\n<td>7.12</td>\n<td>1768.40</td>\n<td>5855.87</td>\n<td>7165.20</td>\n</tr>\n<tr>\n<td>Nimbus</td>\n<td>200.44</td>\n<td>523.96</td>\n<td>599.88</td>\n<td>599.97</td>\n<td>4157.40</td>\n</tr>\n<tr>\n<td>Prysm</td>\n<td>5.00</td>\n<td>5.00</td>\n<td>175.65</td>\n<td>594.67</td>\n<td>4322.25</td>\n</tr>\n<tr>\n<td>Teku</td>\n<td>0.10</td>\n<td>0.13</td>\n<td>0.64</td>\n<td>1.72</td>\n<td>5.85</td>\n</tr>\n<tr>\n<td>Unknown</td>\n<td>0.07</td>\n<td>0.14</td>\n<td>5.00</td>\n<td>5.22</td>\n<td>5.90</td>\n</tr>\n</tbody>\n</table>\n</div><h3><a name=\"resulting-number-of-peers-per-mesh-8\" class=\"anchor\" href=\"https://ethresear.ch#resulting-number-of-peers-per-mesh-8\"></a>Resulting number of peers per mesh</h3>\n<p>It is important to highlight that despite the spike in network connectivity and the relevant RPC interactions our node has kept a stable range of connections within each of the topic meshes.</p>\n<p>The following graph shows the total number of mesh connections for each topic, binned at 5 minute intervals.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/c/dcccaabc9e3ab2c55c355ca18311035e560e9988.png\" data-download-href=\"https://ethresear.ch/uploads/default/dcccaabc9e3ab2c55c355ca18311035e560e9988\" title=\"graft_and_prune_events_collection_mesh_connectivity_for_topics\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/c/dcccaabc9e3ab2c55c355ca18311035e560e9988_2_517x309.png\" alt=\"graft_and_prune_events_collection_mesh_connectivity_for_topics\" data-base62-sha1=\"vvhxvhEHUYtWFEXzGn3EArh5qzu\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/c/dcccaabc9e3ab2c55c355ca18311035e560e9988_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/d/c/dcccaabc9e3ab2c55c355ca18311035e560e9988_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/d/c/dcccaabc9e3ab2c55c355ca18311035e560e9988.png 2x\" data-dominant-color=\"F6F5F6\"></a></div><p></p>\n<p>The range of connections per topic barely goes below 6, even at the last hour of data, where we’ve seen the spikes in <code>GRAFT</code> and <code>PRUNE</code> events. We can observe that:</p>\n<ul>\n<li>GossipSub is doing a good job at keeping the range of connections around the <code>gossipSubD=8</code>  (between the <code>gossipSubDlo=6</code> and the <code>gossipSubDhi=12</code>).</li>\n<li>This ratio of connections per topic does see a small drop on the last hour of the run, matching the sudden spike of <code>RECV_PRUNEs</code> seen in earlier plots.</li>\n<li>The drop in the number of connections during the last hour does seem related to the fact that the connections opened during this period were actually way shorter than the previous ones.</li>\n</ul>\n<h1><a name=\"conclusions-and-takeaways-9\" class=\"anchor\" href=\"https://ethresear.ch#conclusions-and-takeaways-9\"></a>Conclusions and takeaways</h1>\n<ul>\n<li><strong>Overall, we conclude that Gossipsub is keeping a stable mesh as far as the <code>MeshDegree</code> goes</strong>, barely exceeding the <code>DLow</code> and <code>DHigh</code> thresholds of 6 and 12, respectively, despite increased dynamicity at times (i.e., increased numbers of <code>GRAFTs</code> and <code>PRUNEs</code>).</li>\n<li><strong>Teku nodes always tear down connections to our node within a few seconds (or less) and fail to keep any connection running for longer periods of time (even minutes).</strong> This fact is likely to lead to some instability, which, however, doesn’t seem to be impacting the correct operation of the rest of the network (at least from what we can see so far).</li>\n<li><strong>Our data shows a sudden spike in <code>GRAFT</code> and <code>PRUNE</code> events during the last hour of the study, despite the <code>ADD_PEER</code> and <code>REMOVE_PEER</code> events staying steady over the entire run.</strong> This could suggest that <code>Hermes</code> or the network is struggling to maintain mesh connections with other participants.\n<ul>\n<li>The spike in <code>GRAFTs</code> and <code>PRUNEs</code> generally comes from incoming <code>PRUNE</code> events followed by subsequent outgoing <code>GRAFT</code> events. It is still not clear what triggers this behaviour, i.e., if it’s just an anomaly coming from the strict connectivity limits from remote peers that refuse connections quite often, or if it’s <code>Hermes</code> the one that spams remote peers with <code>GRAFTs</code> more than it should and remote peers in turn respond with <code>PRUNE</code> events.</li>\n<li>We conclude that this incident is interesting to keep an eye on (e.g., nodes end up with stable connections at the Host level, but struggling to keep a healthy number of connections in each mesh) and verify through a longer experiment. However, we do not consider this to be a critical incident, i.e., doesn’t cause any other metric to suffer.</li>\n</ul>\n</li>\n</ul>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/gossipsub-network-dynamicity-through-grafts-and-prunes/19750\">Read full topic</a></p>","link":"https://ethresear.ch/t/gossipsub-network-dynamicity-through-grafts-and-prunes/19750","pubDate":"Thu, 06 Jun 2024 07:46:13 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19750"},"source":{"@url":"https://ethresear.ch/t/gossipsub-network-dynamicity-through-grafts-and-prunes/19750.rss","#text":"Gossipsub Network Dynamicity through GRAFTs and PRUNEs"}},{"title":"Based Sequencer Selection","dc:creator":"simbro","category":"Layer 2","description":"<p>This is an exploratory proposal for a method of deterministically identifying sequencers on L2s to route transactions to, in order to facilitate universal synchronous composability between L2s. This approach uses the Ethereum base layer as a universal and credibly neutral sequencer selection mechanism, intended as a fallback to based sequencing, in cases where based sequencing may not be suitable for an L2 to adopt fully. This is very much an initial proposal intended for general feedback, discussion and debate.</p>\n<h1><a name=\"proposal-1\" class=\"anchor\" href=\"https://ethresear.ch#proposal-1\"></a>Proposal</h1>\n<p>LimeChain’s proposal on <a href=\"https://ethresear.ch/t/vanilla-based-sequencing/19379\">Vanilla Based Sequencing</a> describes two methods for selecting the sequencer on L2: primary selection, when the current L1 proposer has opted-in to be an L2 sequencer for the rollup, and fallback selection, when the current L1 proposer has <em>not</em> opted-in to be an L2 sequencer for the rollup, and hence some other method is required to select the L2 sequencer.</p>\n<p>In the <a href=\"https://ethresear.ch/t/vanilla-based-sequencing/19379#fallback-selection-12\">fallback selection mechanism</a>, the L2 selects an L1 proposer at random from the other opted-in L1 proposers to be the L2 sequencer. This method will work perfectly well, but limits the possibility for synchronous composability between rollups. A single L1 proposer that is also the designated sequencer on multiple rollups is able to offer guarantees that bundles of transactions will be executed atomically on the respective rollups. In the fallback selection mechanism, there is no longer a single L1 proposer sequencing for two or more rollups at the same time, and instead we have separate and distinct L1 proposers, and guarantees of atomic execution of transactions are no longer possible.</p>\n<p>To address this challenge, I propose to explore the idea of a deterministic sequencer selection function on L1 that can be used by any rollup. This would allow wallets or pre-confirmation gateways to identify which sequencers will be selected when, on which rollups, allowing them to route pre-confirmation requests accordingly.</p>\n<p>The high level idea is that a pre-confirmation gateway can accept a bundle of transactions, typically a pair of transactions to be executed on two distinct rollups, and can route the requests to the relevant sequencers on the respective rollups, obtaining the preconf promises for the user.</p>\n<h1><a name=\"requirements-2\" class=\"anchor\" href=\"https://ethresear.ch#requirements-2\"></a>Requirements</h1>\n<ul>\n<li>\n<p>Sequencers on L2s will need to be recorded via some central registry on L1 (perhaps an extension of the L1 <a href=\"https://ethresear.ch/t/credibly-neutral-preconfirmation-collateral-the-preconfirmation-registry/19634\">pre-confirmation registry</a>), and will need to be able to issue pre-confirmations.</p>\n</li>\n<li>\n<p>Pre-confirmations will probably need to be confirmed in 2 rounds instead of one. The first request is to place a lock on the preconfs (on a very short timeframe, in the order of 100s of milliseconds), and the second is to confirm. This will allow a pre-confirmation gateway (or wallet) to obtain a commitment that both sequencers on their respective rollups will issue a preconf promise, and when the sequencer has commitments from both, it can confirm the preconf requests and receive the preconf promises from both. The nomenclature gets a bit confusing here and will need to be thought about.  Alternatively, another potentially less complicated but less secure approach is to allow the pre-confirmation gateway to cancel a pre-confirmation upon only receiving a preconf promise from one but not both L2 sequencers.</p>\n</li>\n<li>\n<p>There is a deterministic function in a smart contract on L1 which can be used to identify which L2 sequencer is going to be selected when on which rollup. This could leverage <code>prevrandao</code> via <code>block.difficulty</code> to provide a lookahead which L2s use to select sequencers on L2.  This could be as simple as function that acts as a PRF which accepts a lookahead size <span class=\"math\">n</span> measured in slots, and bounded range <span class=\"math\">r</span> corresponding to the number of L2 sequencers, and which references <code>block.difficulty</code> to return a list of random sequencers ids of size <span class=\"math\">n</span>, within the range <span class=\"math\">r</span>.</p>\n</li>\n<li>\n<p>May require some collateral to incentivize L2 sequencers to honor preconf requests, and to keep the L1 registry up-to-date, though this last point could prove difficult to coordinate among L2s and will require some more thought.</p>\n</li>\n</ul>\n<h1><a name=\"rationale-3\" class=\"anchor\" href=\"https://ethresear.ch#rationale-3\"></a>Rationale</h1>\n<p>The fallback sequencer selection will be employed by L2s more frequently in the beginning, until enough L1 proposers opt-in to based sequencing.</p>\n<p><a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">We need at least 20% of Ethereum’s validator set to opt-in to based sequencing in order to have at least 1 proposer per epoch</a>. Moreover, these proposers will need to opt in to being sequencers for a number of rollups (assuming enough rollups will provision for this in their sequencer designs - tbd). All of this is against a background of numerous AVSs that could offer more economically attractive alternatives for proposers to opt into.</p>\n<p>Assuming we do reach the required threshold of 20% of the Ethereum validator set having opted-in to based sequencing (roughly 200K validators), depending on the design of decentralized L2s, they may not be able to support this many sequencers. For L2s that might seek to implement some form of consensus protocol using a validator set with a proposer selection mechanism, it may be impractical to support 200K validators. In this instance, having a credibly neutral sequencer selection mechanism would be helpful.</p>\n<p>Furthermore, the fallback selection mechanism will likely to be continued to be employed by newer or smaller rollups in the future, before they can build a large enough share of L1 proposers that opt-in to being sequencers for their rollups. Again, in this instance, credibly neutral sequencer selection could be appealing.</p>\n<p>The fallback selection by itself doesn’t support universal synchronous composability, but synchronizing sequencer selection across rollups in a credibly neutral way (by using the L1), can facilitate USC.</p>\n<h1><a name=\"risks-and-trade-offs-4\" class=\"anchor\" href=\"https://ethresear.ch#risks-and-trade-offs-4\"></a>Risks and Trade-offs</h1>\n<p>Users will need to trust the crypto-economic guarantees of the respective L2s that they are seeking preconfs of atomic execution of transactions from. Even if the L2 sequencers are also L1 validators (note that they don’t need to be), users will still need to rely on the L2’s security.</p>\n<p>Under the primary selection method of the vanilla based sequencing approach, these security guarantees are improved somewhat, as we are dealing with a single L1 proposer for both rollups, and so their ability to offer guarantees of atomic transaction execution across L2s is improved.</p>\n<p>Assuming that the L1 proposer posts the data from each rollup to the L1, then we also benefit from the subjective finality of those transactions, and so we know within one slot if the respective transactions have been included or not. This also a strong assumption however, as it depends on the volume of transactions on L2, with most rollups waiting until they have enough transactions to completely fill a blob with compressed data, which may not happen within one L1 slot. So again, it falls back to the user relying on the crypto-economic security of the L2s themselves.</p>\n<p>This approach will of course require some buy-in from L2s that will need to implement the fallback sequencer selection, but this is also the case with based sequencing in general.</p>\n<p>A major trade-off is the increased complexity from managing atomic execution guarantees, as described in the requirements section above. This will likely involve a lock-and-confirm mechanism between L2 sequencers and the preconf gateways (or a user’s wallet), whereby the preconf gateway asks the sequencer to put a hold on a preconf for about a second, and then confirms that they want to go ahead with the preconf.</p>\n<h1><a name=\"open-questions-5\" class=\"anchor\" href=\"https://ethresear.ch#open-questions-5\"></a>Open Questions</h1>\n<p>It’s not clear to me exactly how to incentivize L2s or L2 sequencers to keep the registry up-to-date. If an L2 sequencer ceases to participate as an L2 sequencer, the registry will need to reflect this. This challenge is addressed in mteam’s proposal for <a href=\"https://ethresear.ch/t/credibly-neutral-preconfirmation-collateral-the-preconfirmation-registry/19634#penalties-4\">Credibly Neutral Preconfirmation Collateral</a>, and potentially the same registry could be used for L2 sequencers, but this needs to be explored. Using a separate registry could bloat the ecosystem with the redundant overhead of managing multiple registrations for based-sequencing proposers.</p>\n<p>There may be understandable apprehension from the ecosystem if the preconf gateways on L1 are used to route transactions to sequencers on L2s. This will cause even more centralization across the ecosystem, with potentially only 2 or 3 preconf gateways routing transactions across L1 and also a number of L2s. This could be improved through routing to individual sequencers via independent gateways on each L2, but this needs to be explored further.</p>\n<p>This proposal as it stands will not withstand L1 re-orgs.  It is an open question how the sequencer selection mechanism can be impervious to L1 re-orgs.</p>\n<hr>\n<p>All questions, feedback, criticisms are very welcome.</p>\n            <p><small>5 posts - 3 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/based-sequencer-selection/19747\">Read full topic</a></p>","link":"https://ethresear.ch/t/based-sequencer-selection/19747","pubDate":"Wed, 05 Jun 2024 13:59:19 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19747"},"source":{"@url":"https://ethresear.ch/t/based-sequencer-selection/19747.rss","#text":"Based Sequencer Selection"}},{"title":"An RSA Deterministic Key Generation Scheme: Algorithm and Security Analysis","dc:creator":"AshelyYan","category":"Cryptography","description":"<p>TL;DR: We propose a secure and practical deterministic key generation scheme and pseudorandom number generator, from which RSA keys can be generated to simplify key backup and retrieval.<br>\nThis research is a joint effort from Ethereum Fellows: <a class=\"mention\" href=\"https://ethresear.ch/u/mason-mind\">@Mason-Mind</a> <a class=\"mention\" href=\"https://ethresear.ch/u/georgesheth\">@georgesheth</a> <a class=\"mention\" href=\"https://ethresear.ch/u/dennis\">@dennis</a> <a class=\"mention\" href=\"https://ethresear.ch/u/ashelyyan\">@AshelyYan</a>.</p>\n<h1><a name=\"h-1-introduction-1\" class=\"anchor\" href=\"https://ethresear.ch#h-1-introduction-1\"></a>1. Introduction</h1>\n<p>Traditionally, cryptographic keys are generated using randomness to ensure unpredictability.<br>\nIn contrast, deterministic key generation refers to the process of generating cryptographic keys in a deterministic manner. In deterministic key generation, a single starting point (seed) is used to derive the keys using some Key Derivation Function (KDF). It brings some convenience in key management, however, also security risks and privacy concerns. The advantages can be concluded as follows:</p>\n<ul>\n<li>Streamlined key management: Users can generate a sequence of keys from the initial seed, eliminating the necessity to store multiple keys individually. Instead, they only need to safeguard the initial seed in order to secure all the derived keys.</li>\n<li>Simplified key backup and retrieval: Users can regenerate all the cryptographic keys from the initial seed, which simplifies the key retrieval.</li>\n<li>Meet the industry demand. Industry developers are always looking for this solution and has huge value to the product delivery.</li>\n</ul>\n<p>However, in this function, if the seed is compromised, every derived key becomes vulnerable to potential threats. Therefore, it is important to keep the initial seed secure. Meanwhile, it is essential that the initial seed remains unpredictable to adversaries, for reasons that are self-evident.</p>\n<p>The main difficulty in designing a KDF is the initial keying material. When the source keying material is not uniformly random or pseudorandom, additional preprocessing is needed. In blockchain, there are some applications and solutions. <a href=\"https://eprints.qut.edu.au/82221/1/hdwallet.pdf\" rel=\"noopener nofollow ugc\">Hierarchical Deterministic Bitcoin Wallets</a> provide an interesting way of managing cryptographic keys, which form a tree structure. At the root, there is a randomly generated master seed. Using the deterministic key generation technique outlined in the <a href=\"https://github.com/bitcoin/bips/blob/70d9b07ab80ab3c267ece48f74e4e2250226d0cc/bip-0032.mediawiki\" rel=\"noopener nofollow ugc\">BIP32</a> standard, this master seed can produce child keys. Since all the keys are generated deterministically, the same set of keys can be generated from the master seed. <a href=\"https://argon2.online/#:~:text=Argon2%20is%20cryptographic%20hashing%20algorithm,is%20optimized%20for%20password%20hashing.\" rel=\"noopener nofollow ugc\">Argon2</a> is another popular approach for key derivation. It is designed to be resistant against brute-force attacks. Argon2 improves security by using a salt and a password as inputs. The salt is a unique random value. The purpose of using salt is to prevent attackers from using precomputed tables (rainbow tables) to apply brute-force attacks on passwords. Since unique salts are used, even if two users have the same password, their hashed values are still different.</p>\n<p>In this proposal, we consider a particular problem of deterministic key generation, which generates RSA keys from ECDSA signatures. We assume that each user has an ECDSA private key <span class=\"math\">sk</span>, and wants to generate an RSA key pair. Instead of generating the RSA key pair separately, we make the RSA key pair a deterministic function of <span class=\"math\">sk</span> and a fixed message <span class=\"math\">m</span>. Our goal is to make the RSA keys secure. In particular, we want the probability of RSA key collisions from different users to be negligible. Due to the nature of RSA key generation, it is not enough to generate a single random number and use it directly as the private key. Instead, we need a pseudorandom number generator. Due to this requirement, we cannot use the approaches that we discussed previously.</p>\n<p>To solve this problem, we propose a good deterministic key generation scheme and pseudorandom number generator, from which RSA keys can be generated. From a high level of the scheme, we pick the initial seed to be a signature <span class=\"math\">sig(m, sk)</span>. The hash of the signature is then used as the key of the AES cipher. The algorithm and security analysis can be found as follows.</p>\n<h1><a name=\"h-2-algorithm-2\" class=\"anchor\" href=\"https://ethresear.ch#h-2-algorithm-2\"></a>2. Algorithm</h1>\n<p>Our goal is to generate RSA keys securely and deterministically from ECDSA signatures. To achieve this goal, we use the standard procedure to generate RSA keys and a pseudorandom number generator <span class=\"math\">prng</span>, which provides all sources of randomness. The sequence that <span class=\"math\">prng</span> generates is a deterministic function of the ECDSA private key <span class=\"math\">sk</span> and the message <span class=\"math\">m</span>. Therefore, the same user always generates the same RSA key pair. But from the adversary’s point of view, the sequence that <span class=\"math\">prng</span> generates looks random. Hence the RSA keys are random.</p>\n<p>At a high level, we start with an ECDSA signature. We do not assume that the signature is pseudorandom. Instead, we assume it to be unforgeable. This implies that the signatures form a sufficiently large space. (Otherwise, the brute-force attack would succeed with non-negligible probability.) We also assume that SHA256 is a random oracle, which roughly means that the result of the hash function looks random to an adversary unless the adversary knows the preimage of the function. But since we already assumed that ECDSA signatures are unforgeable, the adversary knows the preimage of the hash function with negligible probability. We can safely conclude that the pseudorandom of the result of the hash function, which we use as the key to AES block cipher. We then get a good pseudorandom number generator, from which random keys can be generated.</p>\n<p>Algorithm 1 describes the details of the algorithm. Given an ECDSA private key <span class=\"math\">sk</span> and a message <span class=\"math\">m</span>, first sign <span class=\"math\">m</span> using <span class=\"math\">sk</span> to get an ECDSA signature <span class=\"math\">sig</span>. We then use SHA256 to hash <span class=\"math\">sig</span> to get a <span class=\"math\">key</span>, and set <span class=\"math\">seed</span> to be the hash of <span class=\"math\">key</span>. A pseudorandom number generator <span class=\"math\">prng_{sig}</span> can thus be obtained using AES encryption. We define <span class=\"math\">AES(seed, key)</span> to be the sequence of AES encryption in counter mode: <span class=\"math\">AES_{ENC}(seed, key)</span>, <span class=\"math\">AES_{ENC}(seed+1, key)</span>, <span class=\"math\">AES_{ENC}(seed+2, key)</span>, <span class=\"math\">\\ldots</span>.</p>\n<pre><code class=\"lang-auto\">Algorithm 1: Deterministic Key Generation\nInput: a fixed message m, secret key sk from ECDSA\nOutput: RSA key pair\nFunction:  detGenKeyPair(m, sk)\nsig = ECDSA_Sign(m, sk)\nkey = SHA256(sig)\nseed = SHA256(key)\nprng_sig = AES(seed, key)\nRSAKeyPair(prng_sig)\n\n</code></pre>\n<p>To generate some RSA key pairs, we use the standard RSA key generation procedure (Algorithm 1). The pseudorandom number generator is responsible for providing all the randomness used in Algorithm 2.</p>\n<pre><code class=\"lang-auto\">Algorithm 2: RSA Key Generation using prng\nFunction:  RSAKeyPair(prng_sig)\np &lt;- prgn while p is not a prime do\np &lt;- prgn\nq &lt;- prgn while q is not a prime do\nq &lt;- prgn\nCompute n = p*q\nCompute l(n) = (p-1)*(q-1)\nPick some e (e and l(n) are relatively prime)\nCompute d: e * d = 1 mod l(n)\nReturn: e, d, n\n\n</code></pre>\n<p>In order to show that <span class=\"math\">detGenKeyPair</span> returns ``good’’ RSA key pairs, we compare our algorithm with a popular reference implementation <span class=\"math\">\\textit{Forge}</span>, which is a native implementation of TLS and various other cryptographic tools in JavaScript. <span class=\"math\">\\textit{Forge}</span> implements a function <span class=\"math\">\\textit{forge.pki.rsa.generateKeyPair}</span>, which generates RSA key pairs. From now on, we will refer to <span class=\"math\">\\textit{forge.pki.rsa.generateKeyPair}</span> as <span class=\"math\">\\textit{generateKeyPair}</span>. Our goal is to show that the key pairs, that <span class=\"math\">deGenKeyPair</span> generates, are as good as the key pairs, which generateKeyPair generates.</p>\n<p>More precisely, we want to show that, for any probabilistic polynomial-time adversary <span class=\"math\">\\mathcal{A}</span>, given Oracle access to the deterministic key generation function <span class=\"math\">deGenKeyPair(\\cdot, \\cdot)</span> and <span class=\"math\">generateKeyPair</span> from <span class=\"math\">generateKeyPair</span>, <span class=\"math\">\\mathcal{A}</span> cannot distinguish between the keys generated by the two oracles.</p>\n<h1><a name=\"h-3-security-analysis-3\" class=\"anchor\" href=\"https://ethresear.ch#h-3-security-analysis-3\"></a>3. Security Analysis</h1>\n<h2><a name=\"h-31-indistinguishability-4\" class=\"anchor\" href=\"https://ethresear.ch#h-31-indistinguishability-4\"></a>3.1 Indistinguishability</h2>\n<p>Firstly, we prove that  adversary <span class=\"math\">\\mathcal{A}</span> cannot distinguish between the keys generated by <span class=\"math\">deGenKeyPair</span> and <span class=\"math\">generateKeyPair</span>.</p>\n<p><em>Theorem 1:</em> For any probabilistic polynomial-time adversary <span class=\"math\">\\mathcal{A}</span>, <span class=\"math\">|Pr[\\mathcal{A}^{deGenKeyPair(\\cdot,\\cdot)}=1]-Pr[\\mathcal{A}^{generateKeyPair(\\cdot)}=1]|</span> is negligible, assuming:</p>\n<p>(1) <span class=\"math\">SHA256</span> is a random oracle.</p>\n<p>(2) <span class=\"math\">ECDSA</span> signatures are unforgeable.</p>\n<p>(3) <span class=\"math\">AES</span> is a pseudorandom function family.</p>\n<p><em>Proof 1:</em> We use proof by contradiction. We show that if the adversary <span class=\"math\">\\mathcal{A}</span> can distinguish between the keys generated by the two procedures, it must be the case that at least one of the assumptions does not hold.</p>\n<p>Suppose that <span class=\"math\">|Pr[\\mathcal{A}^{deGenKeyPair(\\cdot,\\cdot)}=1]-Pr[\\mathcal{A}^{generateKeyPair(\\cdot)}=1]|</span> is non-negligible. Since all the randomness comes from <span class=\"math\">prng_{sig}</span> and <span class=\"math\">prng_{rand}</span>, it must be the case that <span class=\"math\">\\mathcal{A}</span> can distinguish between <span class=\"math\">prng_{sig}</span> and <span class=\"math\">prng_{rand}</span> with non-negligible probability. Recall that <span class=\"math\">prng_{sig}</span> is a sequence obtained by running AES encryption in the <span class=\"math\">\\textit{counter}</span> mode. So <span class=\"math\">prng_{sig}</span> is <span class=\"math\">AES_{Enc}(seed, key)</span>, <span class=\"math\">AES_{Enc}(seed+1, key)</span>, <span class=\"math\">AES_{Enc}(seed+2, key)</span>, etc. Let <span class=\"math\">\\mathcal{K}</span> be the set of all possible keys. There are two possibilities: (i) <span class=\"math\">key</span> is uniformly at random from <span class=\"math\">\\mathcal{K}</span>, which violates our assumption that <span class=\"math\">AES</span> is a pseudorandom function family. (ii) <span class=\"math\">key</span> is not uniformly at random from <span class=\"math\">\\mathcal{K}</span>.</p>\n<p>Suppose that <span class=\"math\">key</span> is not uniformly at random from <span class=\"math\">\\mathcal{K}</span>. According to Algorithm 1, <span class=\"math\">key = SHA256(sig)</span>, where <span class=\"math\">sig=ECDSA\\_Sign(m, sk)</span>. There are two cases to consider. (i) <span class=\"math\">\\mathcal{A}</span> knows <span class=\"math\">sig</span>, which violates our assumption that <span class=\"math\">ECDSA</span> signatures are unforgeable. (ii) <span class=\"math\">\\mathcal{A}</span> does not know <span class=\"math\">sig</span>. This violates our assumption that <span class=\"math\">SHA256</span> is a random oracle.</p>\n<h2><a name=\"h-32-collision-resistance-5\" class=\"anchor\" href=\"https://ethresear.ch#h-32-collision-resistance-5\"></a>3.2 Collision-resistance</h2>\n<p><em>Theorem 2:</em> If the probability of collision of keys generated by <span class=\"math\">generateKeyPair</span> is negligible, the probability of collision of keys generated by <span class=\"math\">deGenKeyPair</span> is also negligible.</p>\n<p><em>Proof 2:</em> We use proof by contradiction. Suppose that the probability of collision of keys generated by <span class=\"math\">generateKeyPair</span> is negligible, and the probability of collision of keys generated by <span class=\"math\">deGenKeyPair</span> is non-negligible. The adversary can generate a set of keys <span class=\"math\">\\mathcal{K}</span>, and count the number of collisions in <span class=\"math\">\\mathcal{K}</span>. If the number of collisions is negligible, then the keys are generated by <span class=\"math\">generateKeyPair</span>, otherwise, they are generated by <span class=\"math\">deGenKeyPair</span>. So the adversary can distinguish between which oracle it is interacting with. But according to Theorem 1, such an adversary does not exist.</p>\n<h2><a name=\"h-33-correctness-6\" class=\"anchor\" href=\"https://ethresear.ch#h-33-correctness-6\"></a>3.3 Correctness</h2>\n<p>Let <span class=\"math\">(e,d,n)</span> be the keys that <span class=\"math\">\\textit{detGenKeyPair}</span> returns. Let <span class=\"math\">m</span> be a message, the encryption function, and the decryption function are defined as follows. <span class=\"math\">RSA_{enc}(m) \\stackrel{def}{=} m^e</span> mod <span class=\"math\">n</span>, <span class=\"math\">RSA_{dec}(m) \\stackrel{def}{=} m^d</span> mod <span class=\"math\">n</span>.</p>\n<p><em>Theorem 3:</em> Let <span class=\"math\">(e, d, n)</span> be any RSA key, which <span class=\"math\">\\textit{detGenKeyPair}</span> returns. For any message <span class=\"math\">m</span>, <span class=\"math\">RSA_{dec}(RSA_{enc}(m)) \\equiv m</span> mod <span class=\"math\">n</span>.</p>\n<p><em>Proof 3:</em> Since <span class=\"math\">l(n) = (p-1)\\times(q-1)</span> and <span class=\"math\">e \\times d = 1</span> mod <span class=\"math\">l(n)</span>, there must exist some integer <span class=\"math\">k</span> s.t. <span class=\"math\">e \\times d = k \\times (p-1) \\times (q-1) + 1</span>. So <span class=\"math\">RSA_{dec}(RSA_{enc}(m)) \\equiv m^{e\\times d}</span> mod <span class=\"math\">n \\equiv m^{ k \\times (p-1) \\times (q-1) + 1}</span> mod <span class=\"math\">n</span>.</p>\n<p><span class=\"math\">RSA_{dec}(RSA_{enc}(m)) \\equiv (m^{ k \\times (q-1)})^{p-1} \\times m</span> mod <span class=\"math\">p \\equiv m</span> mod <span class=\"math\">p</span>, by Fermat’s Little Theorem.</p>\n<p>Similary, <span class=\"math\">RSA_{dec}(RSA_{enc}(m)) \\equiv (m^{ k \\times (p-1)})^{q-1} \\times m</span> mod <span class=\"math\">q \\equiv m</span> mod <span class=\"math\">q</span>, by Fermat’s Little Theorem.</p>\n<p>According to the Chinese Remainder Theorem, <span class=\"math\">RSA_{dec}(RSA_{enc}(m)) \\equiv m</span> mod <span class=\"math\">n</span>.</p>\n<h1><a name=\"h-4-conclusion-7\" class=\"anchor\" href=\"https://ethresear.ch#h-4-conclusion-7\"></a>4. Conclusion</h1>\n<p>Our approach begins by enabling users to sign a fixed message using their ECDSA secret keys, ensuring the unforgeability of these signatures against potential adversaries. Subsequently, we employ SHA256 to hash the generated signatures, producing pseudorandom output, with the assumption that SHA256 behaves as a dependable random oracle. This resulting hash serves as the key input for the AES block cipher, facilitating the creation of our PRNG. We provide rigorous proof of the security of this construction from indistinguishability, collusion-resistance and correctness.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/an-rsa-deterministic-key-generation-scheme-algorithm-and-security-analysis/19745\">Read full topic</a></p>","link":"https://ethresear.ch/t/an-rsa-deterministic-key-generation-scheme-algorithm-and-security-analysis/19745","pubDate":"Wed, 05 Jun 2024 13:20:32 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19745"},"source":{"@url":"https://ethresear.ch/t/an-rsa-deterministic-key-generation-scheme-algorithm-and-security-analysis/19745.rss","#text":"An RSA Deterministic Key Generation Scheme: Algorithm and Security Analysis"}},{"title":"BlockTech500 Index: Mitigating the greed and centralized mentalities stifling innovation and killing the true ethos","dc:creator":"cryptskii","category":"Meta-innovation","description":"<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/4/b45345d09be9f5b1ecace719e29ebfb6e9b9eb41.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/b45345d09be9f5b1ecace719e29ebfb6e9b9eb41\" title=\"IMG_8324.PNG\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/4/b45345d09be9f5b1ecace719e29ebfb6e9b9eb41_2_690x460.jpeg\" alt=\"IMG_8324.PNG\" data-base62-sha1=\"pJem370r1Ir13zPr9zQsM7xTaj7\" width=\"690\" height=\"460\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/4/b45345d09be9f5b1ecace719e29ebfb6e9b9eb41_2_690x460.jpeg, https://ethresear.ch/uploads/default/optimized/3X/b/4/b45345d09be9f5b1ecace719e29ebfb6e9b9eb41_2_1035x690.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/4/b45345d09be9f5b1ecace719e29ebfb6e9b9eb41_2_1380x920.jpeg 2x\" data-dominant-color=\"E5DCD3\"></a></div><p></p>\n<h1><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>TL;DR</h1>\n<h2><a name=\"backround-2\" class=\"anchor\" href=\"https://ethresear.ch#backround-2\"></a>Backround</h2>\n<p>In the early days of banking, the pitch or narrative presented to customers focused on a few key benefits:</p>\n<ol>\n<li>\n<p><strong>Safety and Security:</strong> Banks and early banking institutions like temples or palaces offered a secure place to store valuable commodities, such as grain, precious metals, and other goods. This was particularly important in ancient times when theft and insecurity were common.</p>\n</li>\n<li>\n<p><strong>Convenience:</strong> Banking institutions provided a convenient way to manage financial transactions. Instead of carrying large amounts of money or goods, individuals could deposit their wealth and make transactions through the bank, simplifying trade and commerce.</p>\n</li>\n<li>\n<p><strong>Facilitation of Trade:</strong> By acting as intermediaries, banks facilitated trade by providing loans and credit. This allowed merchants to finance their operations, expand their businesses, and engage in long-distance trade more effectively.</p>\n</li>\n<li>\n<p><strong>Record Keeping:</strong> Banks maintained detailed records of deposits, loans, and other transactions. This provided individuals and businesses with a reliable way to keep track of their financial activities and plan for the future.</p>\n</li>\n<li>\n<p><strong>Financial Services:</strong> Banks offered various financial services, such as currency exchange, loans, and credit. This enabled individuals and businesses to access funds when needed and manage their finances more effectively.</p>\n</li>\n<li>\n<p><strong>Interest and Returns:</strong> Early banks often offered interest on deposits, providing an incentive for people to deposit their money rather than keeping it idle. This also allowed banks to use deposited<br>\nfunds for lending and investment, generating returns for both the bank and the depositor.</p>\n</li>\n<li>\n<p><strong>Stability and <span class=\"math\">Trust</span>:</strong> Over time, reputable banking institutions established a sense of stability and trust. Customers were reassured by the bank’s reliability and the formalized processes they offered, which were often backed by influential entities like governments or wealthy families.</p>\n</li>\n</ol>\n<p>The narrative was centered around the idea that banks provided a <span class=\"math\">safe</span>, <span class=\"math\">convenient</span>(See \"Athens Greece News Post below), and efficient way to manage and grow wealth (whose wealth?), thereby supporting both individual and commercial financial needs.</p>\n<p>That was the Value prop…<br>\n-----------------------------------------------------------------------------------------------------------&gt;</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/5/a58b7a35df757d9b12f198dd9220c5fc83bc1094.png\" data-download-href=\"https://ethresear.ch/uploads/default/a58b7a35df757d9b12f198dd9220c5fc83bc1094\" title=\"Screenshot 2024-06-01 at 11.14.40 PM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/5/a58b7a35df757d9b12f198dd9220c5fc83bc1094_2_553x500.png\" alt=\"Screenshot 2024-06-01 at 11.14.40 PM\" data-base62-sha1=\"nCtBULE91eltnNSlWf2auJLAFWQ\" width=\"553\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/5/a58b7a35df757d9b12f198dd9220c5fc83bc1094_2_553x500.png, https://ethresear.ch/uploads/default/optimized/3X/a/5/a58b7a35df757d9b12f198dd9220c5fc83bc1094_2_829x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/a/5/a58b7a35df757d9b12f198dd9220c5fc83bc1094_2_1106x1000.png 2x\" data-dominant-color=\"F2F2F2\"></a></div><br>\n-------------------------------------------------------------------&gt;<br>\n<strong>While blockchain technologies advocate for decentralization in terms of architecture and governance, the mechanisms for funding and development can sometimes exhibit centralized characteristics. Here are a few reasons for this and some implications</strong><br>\n-------------------------------------------------------------------&gt;<br>\nBanks aren’t the problem. A bank is just a building. Greed is the problem. It creates a barrier for entry, and an even bigger barrier for innovation to thrive how it should, without sacrificing ideologies just to get funding and then being stuck between getting the funds by joining the “Old Boys Club” or sticking to your moral grounds and ideals but not being able to do anything with it.<p></p>\n<h3><a name=\"stifling-innovation-and-replacing-it-with-what-have-now-become-nothing-but-mere-catch-phrases-decentralization-doesnt-matter-on-its-own-its-just-the-potential-pathway-to-get-what-we-really-need-from-all-this-3\" class=\"anchor\" href=\"https://ethresear.ch#stifling-innovation-and-replacing-it-with-what-have-now-become-nothing-but-mere-catch-phrases-decentralization-doesnt-matter-on-its-own-its-just-the-potential-pathway-to-get-what-we-really-need-from-all-this-3\"></a>Stifling innovation and replacing it with what have now become nothing but mere catch phrases. “Decentralization” doesn’t matter on its own. It’s just the potential pathway to get what we really need from all this:</h3>\n<ul>\n<li>Equality</li>\n<li>Freedom of choice and speech</li>\n<li>Self Sovereignty</li>\n<li>Trust inherently</li>\n</ul>\n<h2><a name=\"why-care-about-decentralization-4\" class=\"anchor\" href=\"https://ethresear.ch#why-care-about-decentralization-4\"></a><strong>Why Care About Decentralization?:</strong></h2>\n<p>Decentralization isn’t just about rejecting centralized control for its own sake. Instead, it addresses several critical societal and operational concerns:</p>\n<ol>\n<li>\n<p><strong>Empowerment and Equity</strong>: Decentralization shifts the power from a centralized authority to multiple stakeholders, enabling a fairer distribution of power. This shift promotes equity, allowing individuals and smaller entities more influence over decisions that affect their lives and operations.</p>\n</li>\n<li>\n<p><strong>Community and Stakeholder Engagement</strong>: By involving more participants in the decision-making process, decentralization enhances community engagement. This involvement can lead to decisions that better reflect the diverse interests and needs of the broader community.</p>\n</li>\n<li>\n<p><strong>Transparency and Accountability</strong>: Decentralized systems often require mechanisms that make operations more transparent and participants more accountable. This openness can reduce corruption and increase trust among stakeholders.</p>\n</li>\n<li>\n<p><strong>Innovation and Diversity of Thought</strong>: Decentralization encourages a wider range of ideas and solutions, fostering innovation. In a decentralized system, individuals and teams have the freedom to experiment and implement diverse solutions, which can lead to more creative and effective outcomes.</p>\n</li>\n<li>\n<p><strong>Resilience Against Failures and Attacks</strong>: A decentralized structure is less prone to systemic failures and cyber attacks. Since there’s no central point of failure, challenges or breaches in one area do not cripple the entire system, making it more robust and reliable.</p>\n</li>\n</ol>\n<p>In summary, when we discuss why we care about decentralization, we’re focusing on building systems that are equitable, inclusive, and designed to serve the broader interests of all stakeholders &amp; users involved, rather than just enhancing the profitability of a few. This approach not only strengthens the system’s ethical foundation but also its operational efficacy and societal impact.</p>\n<h1><a name=\"cause-for-concern-at-the-root-pain-points-for-startups-5\" class=\"anchor\" href=\"https://ethresear.ch#cause-for-concern-at-the-root-pain-points-for-startups-5\"></a>Cause for Concern at the Root (Pain Points for Startups):</h1>\n<h3><a name=\"centralization-in-grant-distribution-6\" class=\"anchor\" href=\"https://ethresear.ch#centralization-in-grant-distribution-6\"></a>Centralization in Grant Distribution</h3>\n<ol>\n<li>\n<p><strong>Resource Allocation</strong>: Even in decentralized networks, there’s often a need to manage resources, including capital, in a way that ensures the ecosystem grows healthily. Foundations often steward these resources because they have the infrastructure to manage and distribute funds effectively.</p>\n</li>\n<li>\n<p><strong>Quality Control</strong>: By funneling grants through foundations or similar bodies, the ecosystem can maintain a certain level of quality and coherence in development. This helps prevent fragmentation and ensures that projects align with the overall strategic goals of the blockchain.</p>\n</li>\n<li>\n<p><strong>Initial Stages of Ecosystem Development</strong>: In the early phases of any blockchain ecosystem, more centralized control can help steer the project towards stability and maturity. As the ecosystem matures, mechanisms can be implemented to decentralize decision-making processes, including funding.</p>\n</li>\n</ol>\n<h3><a name=\"implications-7\" class=\"anchor\" href=\"https://ethresear.ch#implications-7\"></a>Implications</h3>\n<ol>\n<li>\n<p><strong>Gatekeeping</strong>: Centralized funding can lead to gatekeeping, where only projects that align with the specific visions of the grant-giving bodies are funded. This can stifle innovation outside of those parameters.</p>\n</li>\n<li>\n<p><strong>Influence Over Development</strong>: Foundations or core teams can significantly influence the direction of the blockchain’s development through funding decisions. This can potentially conflict with the decentralized ethos of blockchain technology.</p>\n</li>\n<li>\n<p><strong>Dependency</strong>: Relying on central bodies for funding might create dependency, which could be problematic if the goals of the central body change or if it faces financial difficulties.</p>\n</li>\n</ol>\n<h3><a name=\"vc-funding-8\" class=\"anchor\" href=\"https://ethresear.ch#vc-funding-8\"></a>VC Funding</h3>\n<p>Venture capitalists often look for proof of partnerships with established entities and early user adoption as indicators of a startup’s viability and potential for success. These requirements can sometimes push startups into traditional frameworks and infrastructures, even within innovative fields like blockchain.</p>\n<h3><a name=\"why-vcs-value-partnerships-and-user-adoption-9\" class=\"anchor\" href=\"https://ethresear.ch#why-vcs-value-partnerships-and-user-adoption-9\"></a>Why VCs Value Partnerships and User Adoption</h3>\n<ol>\n<li><strong>Risk Mitigation</strong>: Partnerships with established companies can signal that the startup has passed certain due diligence checks, reducing the perceived risk for investors.</li>\n<li><strong>Market Access</strong>: Established partners can provide market access, credibility, and resources that might be difficult for a startup to achieve on its own.</li>\n<li><strong>Validation</strong>: Early user adoption, even on a small scale, serves as a proof of concept that there is market demand for the startup’s offerings.</li>\n</ol>\n<h3><a name=\"challenges-for-startups-10\" class=\"anchor\" href=\"https://ethresear.ch#challenges-for-startups-10\"></a>Challenges for Startups</h3>\n<ol>\n<li><strong>Compromise on Innovation</strong>: To secure partnerships, startups might need to align their products or services more closely with existing systems, which can sometimes water down their innovative aspects.</li>\n<li><strong>Dependency</strong>: Relying on established networks can create dependencies that may inhibit the startup’s ability to pivot or adapt in the future.</li>\n<li><strong>Dilution of Vision</strong>: In trying to meet investor criteria for partnerships and early adoption, startups might stray from their original vision, potentially compromising on the disruptive potential of their technology.</li>\n</ol>\n<p>Even as blockchain aims to decentralize many aspects of technology and finance, the evolution of its ecosystems often requires a blend of centralized and decentralized methods, especially in nascent stages.</p>\n<h3><a name=\"execution-delivery-11\" class=\"anchor\" href=\"https://ethresear.ch#execution-delivery-11\"></a>Execution &amp; Delivery</h3>\n<p>When a business or organization chooses between a “for-profit model” or a “for decentralization” model, it’s not just selecting a financial framework but also defining its core values and operational principles. The choice reflects the entity’s commitment either to maximizing profits for shareholders or to spreading power and benefits more evenly across its network of participants. We are still a long way from achieving this.</p>\n<h1><a name=\"proposed-mitigation-strategy-12\" class=\"anchor\" href=\"https://ethresear.ch#proposed-mitigation-strategy-12\"></a>Proposed Mitigation Strategy</h1>\n<p>In the rapidly evolving blockchain and cryptocurrency ecosystem, promising projects with strong technical fundamentals often struggle to gain visibility and attract resources. The space is increasingly dominated by hype-driven speculation and over-commercialization, leading to the proliferation of “meme coins” and other assets with little intrinsic value unlocked. This trend disadvantages serious developers and innovators, hindering the growth of truly transformative technologies.</p>\n<p>To address this issue, we propose the creation of a “BlockTech500” decentralized index fund that selects ranks for blockchain assets based on rigorous technical reviews and quantitative metrics. By shifting focus to fundamental technical strengths, this index aims to surface undervalued projects, provide a more efficient allocation of capital, and align incentives between investors and developers building the future foundations of Web3.</p>\n<h2><a name=\"key-benefits-13\" class=\"anchor\" href=\"https://ethresear.ch#key-benefits-13\"></a>Key Benefits</h2>\n<ul>\n<li>Amplifying developer mindshare and attracting talent to technically meritorious projects.</li>\n<li>Providing an alternative to hype-based speculation and promoting fundamental value investing.</li>\n<li>Leveraging the wisdom of technical experts in a scalable, decentralized manner.</li>\n<li>Enabling a community-led governance model for index curation and evolution.</li>\n</ul>\n<h2><a name=\"index-methodology-14\" class=\"anchor\" href=\"https://ethresear.ch#index-methodology-14\"></a>Index Methodology</h2>\n<h3><a name=\"quantitative-review-criteria-15\" class=\"anchor\" href=\"https://ethresear.ch#quantitative-review-criteria-15\"></a>Quantitative Review Criteria</h3>\n<p><strong>Definition:</strong> Let <span class=\"math\">P = \\{p_1, p_2, \\ldots, p_n\\}</span> be the set of candidate blockchain projects. Each project <span class=\"math\">p_i</span> is evaluated across <span class=\"math\">m</span> criteria <span class=\"math\">C = \\{c_1, c_2, \\ldots, c_m\\}</span>, which include:</p>\n<p><strong>Primary Criteria:</strong></p>\n<ol>\n<li><strong>Decentralization</strong>: Measured by node distribution, consensus mechanism robustness, Nakamoto coefficient. Denote as <span class=\"math\">c_1(p_i)</span>.</li>\n<li><strong>Scalability</strong>: Quantified by transaction throughput, block latency, state storage efficiency. Denote as <span class=\"math\">c_2(p_i)</span>.</li>\n<li><strong>Privacy</strong>: Assessed by the strength of privacy primitives, data obfuscation techniques, zero-knowledge proof schemes. Denote as <span class=\"math\">c_3(p_i)</span>.</li>\n<li><strong>Security</strong>: Score incorporating cryptographic primitives, attack resistance, formal verification, bug bounty programs. Denote as <span class=\"math\">c_4(p_i)</span>.</li>\n<li><strong>Innovation</strong>: Evaluates novel consensus algorithms, virtual machine architectures, smart contract languages. Denote as <span class=\"math\">c_5(p_i)</span>.</li>\n<li><strong>Censorship Resistance</strong>: Measures the cost and difficulty of censoring transactions, smart contracts, and user activity. Denote as <span class=\"math\">c_6(p_i)</span>.</li>\n<li><strong>Productivity</strong>: Quantifies developer productivity based on gas efficiency, contract deployment cost, tooling quality. Denote as <span class=\"math\">c_7(p_i)</span>.</li>\n</ol>\n<p><strong>Tiebreaker Criteria:</strong></p>\n<ol>\n<li><strong>Community Engagement</strong>: Aggregated from platform usage, transaction volume, social sentiment. Denote as <span class=\"math\">c_8(p_i)</span>.</li>\n<li><strong>Adoption</strong>: Quantified by dApp ecosystem growth, institutional partnerships. Denote as <span class=\"math\">c_9(p_i)</span>.</li>\n<li><strong>Exposure</strong>: Measures brand awareness, media coverage, search interest. Denote as <span class=\"math\">c_{10}(p_i)</span>.</li>\n</ol>\n<h3><a name=\"data-aggregation-16\" class=\"anchor\" href=\"https://ethresear.ch#data-aggregation-16\"></a>Data Aggregation</h3>\n<p>On-chain metrics for the above criteria are computed using SQL queries on data indexed by Dune Analytics:</p>\n<pre><code class=\"lang-sql\">-- Calculate Nakamoto coefficient\nSELECT \n  1.0 - sum(power(balance / total_balance, 2)) AS nakamoto_coeff\nFROM (\n  SELECT \n    sum(value) AS balance \n  FROM addresses a\n  GROUP BY 1\n  ORDER BY 1 DESC\n  LIMIT (SELECT greatest(1, ceil(0.01 * count(distinct address))) FROM addresses)\n) t, (SELECT sum(value) AS total_balance FROM addresses) t2;\n</code></pre>\n<p>Off-chain data from Github, social media, and VC deal flow are integrated to derive a holistic project view.</p>\n<h3><a name=\"scoring-weighting-17\" class=\"anchor\" href=\"https://ethresear.ch#scoring-weighting-17\"></a>Scoring &amp; Weighting</h3>\n<p>A weighted sum of criteria scores ranks each project:</p>\n<div class=\"math\">\nS(p_i) = \\sum_{j=1}^{m} w_j \\cdot c_j(p_i)\n</div>\n<p>with weights <span class=\"math\">w_j</span> satisfying <span class=\"math\">\\sum_j w_j = 1</span> and higher weight on primary criteria.</p>\n<h2><a name=\"index-rebalancing-via-versus-battles-18\" class=\"anchor\" href=\"https://ethresear.ch#index-rebalancing-via-versus-battles-18\"></a>Index Rebalancing via Versus Battles</h2>\n<h3><a name=\"reputation-and-rewards-19\" class=\"anchor\" href=\"https://ethresear.ch#reputation-and-rewards-19\"></a>Reputation and Rewards</h3>\n<p><strong>Voters</strong>:</p>\n<ul>\n<li>\n<p>Users who vote correctly (i.e., their vote aligns with the final outcome) see an increase in their reputation score, while users who vote incorrectly lose reputation.</p>\n</li>\n<li>\n<p>The magnitude of the reputation change for voters is constant, regardless of the number of ranks skipped in the challenge.</p>\n</li>\n<li>\n<p>Voters’ rewards are determined strictly by their voting reputation weights, with higher reputation scores leading to higher rewards for correct votes.</p>\n</li>\n</ul>\n<p><strong>Proposers</strong>:</p>\n<ul>\n<li>\n<p>If a proposer initiates a challenge and the challenger token wins, the proposer’s reputation weight increases by a fixed amount, regardless of the number of ranks skipped. The proposer’s reward is calculated as follows:</p>\n</li>\n<li>\n<p>for each rank skipped, the proposer receives an additional 1x their initial bet (e.g., if the proposer challenged a token one rank above and won, their reward would be 2x their initial bet; if they challenged a token two ranks above and won, their reward would be 3x their initial bet).</p>\n</li>\n<li>\n<p>If the proposer initiates a challenge and the higher-ranked token maintains its position, the proposer loses their bet and also loses reputation weight. The reputation weight loss for proposers is 1x for each rank skipped in the challenge.</p>\n</li>\n</ul>\n<h1><a name=\"workflow-example-20\" class=\"anchor\" href=\"https://ethresear.ch#workflow-example-20\"></a>Workflow Example</h1>\n<p>Consider the following example of a proposer-initiated versus match:</p>\n<p><strong>Voters</strong>:</p>\n<ul>\n<li>\n<p>Users who voted correctly (i.e., in alignment with the final outcome) see an increase in their reputation score.</p>\n</li>\n<li>\n<p>The magnitude of this increase is constant, regardless of the number of ranks skipped in the challenge. Users with higher reputation scores receive higher rewards for their correct votes. Users who voted incorrectly lose reputation.</p>\n</li>\n</ul>\n<p><strong>Proposer</strong>:</p>\n<ul>\n<li>\n<p>If the challenger token <span class=\"math\">t_C</span> wins, the proposer’s reputation weight increases by a fixed amount, and their reward is calculated as follows:</p>\n</li>\n<li>\n<p>they receive their initial bet of <span class=\"math\">1000</span> tokens plus an additional <span class=\"math\">1000</span> tokens for skipping one rank, resulting in a total reward of <span class=\"math\">2000</span> tokens (2x their initial bet).</p>\n</li>\n<li>\n<p>If the higher-ranked token <span class=\"math\">t_A</span> maintains its position, the proposer loses their bet of 1000 tokens and 1x reputation weight, as the challenged token was one rank above the challenger.</p>\n</li>\n</ul>\n<h2><a name=\"governance-incentives-21\" class=\"anchor\" href=\"https://ethresear.ch#governance-incentives-21\"></a>Governance &amp; Incentives</h2>\n<p>BlockTech500 is governed by a DAO that votes on disputed versus results, proposals, and criteria adjustments.</p>\n<h3><a name=\"initial-index-composition-and-asset-addition-process-22\" class=\"anchor\" href=\"https://ethresear.ch#initial-index-composition-and-asset-addition-process-22\"></a>Initial Index Composition and Asset Addition Process</h3>\n<p>The initial composition of the <span class=\"math\">BlockTech500</span> index will be determined through a rigorous, multi-stage process designed to identify the most technically meritorious blockchain projects at the time of launch. Let <span class=\"math\">\\mathcal{U}</span> denote the universe of all eligible blockchain assets, and let <span class=\"math\">\\mathcal{I}_0 \\subseteq \\mathcal{U}</span> represent the initial index composition.</p>\n<p>As the blockchain ecosystem evolves over time, it will be necessary to periodically update the index composition to reflect the emergence of new technically meritorious projects. To this end, we propose the following asset addition process.</p>\n<p>This two-part methodology, consisting of a rigorous initial selection process and an ongoing asset addition/removal mechanism, is designed to maintain the <span class=\"math\">BlockTech500</span> index’s compositional legitimacy over time. By subjecting all assets, both initial and subsequent, to the same comprehensive technical evaluation process, we ensure that the index remains a true reflection of the most meritorious projects in the evolving blockchain landscape.</p>\n<p>Moreover, the use of a diverse panel of independent experts (DAO Governance Delegates) which need to be nominated and win enough user votes to be in the top voted on nominees so that they are allowed to stake <span class=\"math\">X</span> tokens and become a delegate and a transparent, scoring system helps to mitigate potential biases and conflicts of interest in the index construction process. The inclusion of a deliberative weight-setting process allows for the incorporation of qualitative expert judgment while still maintaining a high degree of objectivity and repeatability. To become a delegate of the DAO you must stake <span class=\"math\">X</span> amount of tokens and they must vote among themselves to come up with dispute resolutions. they too have rep scores, but not weighted ones in the sense of voting power. but those always opposing the majority vote, would risk being replaced for underperformance at each quarterly review and nomination and election cycle of delegates. as the lowest performing ones could be replaced by new nominees if the voters lean that way</p>\n<p>Ultimately, while no index construction methodology is perfect, we believe that the proposed approach strikes an appropriate balance between rigor, objectivity, and adaptability. By carefully managing the initial index composition and instituting a robust asset addition process, the <span class=\"math\">BlockTech500</span> index can serve as a legitimate and enduring benchmark for technical merit in the dynamic world of blockchain technology.</p>\n<h1><a name=\"comparisons-23\" class=\"anchor\" href=\"https://ethresear.ch#comparisons-23\"></a>Comparisons</h1>\n<p>Sure, let’s correct that section with a comparison to Messari.</p>\n<hr>\n<p><strong>Messari vs. BlockTech 500 Index</strong></p>\n<ol>\n<li>\n<p><strong>Decentralization:</strong></p>\n<ul>\n<li>\n<p><strong>Messari:</strong> Provides comprehensive research and data analysis on various blockchain projects, including decentralization metrics. Messari evaluates node distribution, consensus mechanisms, and other decentralization factors to assess the overall robustness and security of blockchain networks.</p>\n</li>\n<li>\n<p><strong>BlockTech 500 Index:</strong> Evaluates projects on decentralization by examining node distribution, consensus mechanism robustness, and the Nakamoto coefficient. This ensures that projects are judged on their true decentralization and security merits, similar to Messari’s approach.</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Community Engagement:</strong></p>\n<ul>\n<li>\n<p><strong>Messari:</strong> Engages the community through detailed research reports, market analysis, and data dashboards. While it provides extensive insights and allows user interactions, it does not incorporate direct community voting for project evaluations.</p>\n</li>\n<li>\n<p><strong>BlockTech 500 Index:</strong> Incorporates versus voting challenges where the community actively participates in ranking decisions, increasing engagement and ensuring the community’s voice plays a crucial role in project evaluations. This gamified approach can drive higher community involvement compared to Messari.</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Indexing Mechanisms:</strong></p>\n<ul>\n<li>\n<p><strong>Messari:</strong> Focuses on providing in-depth research, market data, and analysis for blockchain projects. Messari offers tools and resources for tracking project metrics, market performance, and industry trends, but it does not maintain a dedicated index ranking system based purely on technical evaluations.</p>\n</li>\n<li>\n<p><strong>BlockTech 500 Index:</strong> Provides a structured, transparent ranking system that evaluates projects based on a wide range of technical criteria, helping highlight technically strong projects and providing them with the necessary visibility. The index aims to shift focus to fundamental technical strengths, offering an alternative to hype-driven market rankings.</p>\n</li>\n</ul>\n</li>\n</ol>\n<p>By focusing on core technical attributes such as decentralization, scalability, privacy, and security, the BlockTech 500 Index can highlight projects that are technically robust and innovative, similar to how Messari provides detailed insights but with an added layer of community-driven evaluation and gamified engagement.</p>\n<h2><a name=\"the-graph-network-24\" class=\"anchor\" href=\"https://ethresear.ch#the-graph-network-24\"></a>The Graph Network</h2>\n<p><strong>1. Decentralization:</strong></p>\n<ul>\n<li>\n<p><strong>The Graph</strong>: Uses a network of nodes to index data from multiple blockchains, relying on economic incentives through the Graph Token (GRT) to maintain decentralization. Indexers stake GRT to participate, and curators signal high-quality subgraphs by staking GRT.</p>\n</li>\n<li>\n<p><strong>BlockTech 500 Index</strong>: Emphasizes decentralization through comprehensive technical evaluations, including scalability, privacy, security, innovation, censorship resistance, and productivity.</p>\n</li>\n</ul>\n<p><strong>2. Community Engagement:</strong></p>\n<ul>\n<li>\n<p><strong>The Graph</strong>: Community engagement is driven through the roles of curators, indexers, and delegators. Each role is incentivized to participate and ensure the quality of the indexed data. Curators earn rewards for identifying valuable subgraphs.</p>\n</li>\n<li>\n<p><strong>BlockTech 500 Index</strong>: Adds an interactive element to community participation with versus voting challenges. This direct involvement can drive more engagement and a sense of ownership among community members.</p>\n</li>\n</ul>\n<p><strong>3. Indexing Mechanisms:</strong></p>\n<ul>\n<li>\n<p><strong>The Graph</strong>: Provides a decentralized indexing and querying protocol for blockchain data, using GraphQL to make the data easily accessible. Indexers stake tokens to ensure data reliability, and the system uses economic incentives to maintain integrity.</p>\n</li>\n<li>\n<p><strong>BlockTech 500 Index</strong>: While not a data indexing protocol, it offers a comprehensive ranking system based on technical evaluations, aiming to provide visibility and credibility to technically strong projects, which might otherwise be overlooked due to a lack of community engagement or exposure.</p>\n</li>\n</ul>\n<hr>\n<h3><a name=\"currently-there-arent-any-cryptocurrency-ranking-and-review-dapps-or-tools-that-allow-for-this-level-of-gamification-and-precision-where-high-quality-decentralized-community-level-insights-which-can-be-incentivized-in-such-an-exact-approach-as-head-to-head-comparisons-which-are-broken-down-even-further-into-categories-25\" class=\"anchor\" href=\"https://ethresear.ch#currently-there-arent-any-cryptocurrency-ranking-and-review-dapps-or-tools-that-allow-for-this-level-of-gamification-and-precision-where-high-quality-decentralized-community-level-insights-which-can-be-incentivized-in-such-an-exact-approach-as-head-to-head-comparisons-which-are-broken-down-even-further-into-categories-25\"></a>Currently there aren’t any Cryptocurrency ranking and review dapps or tools that allow for this level of gamification and precision where high quality decentralized community level insights which can be incentivized in such an exact approach as head to head comparisons which are broken down even further into categories.</h3>\n<hr>\n<h1><a name=\"advantages-benefits-26\" class=\"anchor\" href=\"https://ethresear.ch#advantages-benefits-26\"></a>Advantages &amp; Benefits</h1>\n<h3><a name=\"increasing-visibility-and-credibility-27\" class=\"anchor\" href=\"https://ethresear.ch#increasing-visibility-and-credibility-27\"></a>Increasing Visibility and Credibility</h3>\n<ol>\n<li>\n<p><strong>Highlighting Technical Merit</strong>: By focusing on core technical attributes such as decentralization, scalability, privacy, and security, the index brings attention to projects that are technically robust and innovative, even if they have not yet built a large community or gained significant exposure.</p>\n<ul>\n<li><strong>Case Study</strong>: Projects like Algorand and Polkadot, which are technically advanced, have benefitted from increased visibility through rankings and technical evaluations despite initially having smaller communities compared to giants like Ethereum.</li>\n</ul>\n</li>\n<li>\n<p><strong>Attracting Funding and Partnerships</strong>: Being featured in a prestigious, technically-focused index like the BlockTech 500 can attract investors and partnerships. Investors often look for technically sound projects that have the potential for growth. This can provide the necessary capital for these projects to further develop their community and market presence.</p>\n<ul>\n<li><strong>Example</strong>: Technical excellence often attracts venture capital interest. For example, projects that focus on innovative consensus algorithms or novel scalability solutions can secure funding from tech-savvy investors looking for the next breakthrough.</li>\n</ul>\n</li>\n</ol>\n<h3><a name=\"facilitating-community-growth-28\" class=\"anchor\" href=\"https://ethresear.ch#facilitating-community-growth-28\"></a>Facilitating Community Growth</h3>\n<ol>\n<li>\n<p><strong>Building Trust</strong>: Inclusion in the BlockTech 500 Index can serve as a stamp of approval for technical quality, helping to build trust among potential users and developers. This can drive community engagement as more individuals and organizations feel confident in participating.</p>\n<ul>\n<li><strong>Impact</strong>: Trust can lead to increased participation from developers and users, which is crucial for community growth. Projects with high technical ratings can see a surge in developer interest, leading to more contributions and improvements.</li>\n</ul>\n</li>\n<li>\n<p><strong>Leveraging Exposure</strong>: The exposure from being listed in the BlockTech 500 can help technically strong projects that lack marketing prowess or community engagement to gain visibility. This can lead to organic growth as more people become aware of the project’s potential and start contributing to or using the technology.</p>\n<ul>\n<li><strong>Example</strong>: Innovative blockchain projects that receive media coverage and analyst attention due to their technical merits can experience a significant increase in community interest and engagement.</li>\n</ul>\n</li>\n</ol>\n<h3><a name=\"addressing-the-innovation-gap-29\" class=\"anchor\" href=\"https://ethresear.ch#addressing-the-innovation-gap-29\"></a>Addressing the Innovation Gap</h3>\n<ol>\n<li>\n<p><strong>Encouraging Innovation</strong>: By recognizing and rewarding technical innovation, the index encourages projects to focus on developing new technologies and solutions. This can lead to a healthier blockchain ecosystem with a variety of robust, innovative projects.</p>\n<ul>\n<li><strong>Outcome</strong>: Projects that might have otherwise remained unnoticed due to their lack of marketing can gain the spotlight, promoting a diverse range of solutions and technologies in the blockchain space.</li>\n</ul>\n</li>\n<li>\n<p><strong>Support for Undervalued Projects</strong>: Projects that are technically sound but undervalued in the market due to lack of exposure can benefit from the structured and transparent evaluation provided by the BlockTech 500 Index. This can help level the playing field, ensuring that technical merit is recognized and rewarded.</p>\n<ul>\n<li><strong>Benefit</strong>: This helps ensure that good technology does not go unnoticed and that resources are allocated more efficiently within the blockchain ecosystem.</li>\n</ul>\n</li>\n</ol>\n<p>In conclusion, the <span class=\"math\">BlockTech500</span> Index can significantly help projects that are strong in innovation and technical aspects but lack in community and other tiebreaker attributes. By providing these projects with increased visibility and credibility, the index can attract funding and partnerships, build community trust, and ultimately ensure that technical excellence is recognized and rewarded.</p>\n            <p><small>3 posts - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/blocktech500-index-mitigating-the-greed-and-centralized-mentalities-stifling-innovation-and-killing-the-true-ethos/19713\">Read full topic</a></p>","link":"https://ethresear.ch/t/blocktech500-index-mitigating-the-greed-and-centralized-mentalities-stifling-innovation-and-killing-the-true-ethos/19713","pubDate":"Sun, 02 Jun 2024 06:35:43 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19713"},"source":{"@url":"https://ethresear.ch/t/blocktech500-index-mitigating-the-greed-and-centralized-mentalities-stifling-innovation-and-killing-the-true-ethos/19713.rss","#text":"BlockTech500 Index: Mitigating the greed and centralized mentalities stifling innovation and killing the true ethos"}},{"title":"Integrating Governance Tokens and Memecoins: A Dual-Token System for Enhanced Blockchain Efficiency and Stability","dc:creator":"cryptskii","category":"Economics","description":"<h1><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>TL;DR</h1>\n<h2><a name=\"background-2\" class=\"anchor\" href=\"https://ethresear.ch#background-2\"></a>Background</h2>\n<p>In the evolving landscape of blockchain technology, different types of tokens serve distinct purposes, creating unique economic dynamics and challenges. Governance tokens and memecoins are two prominent types of tokens with contrasting roles:</p>\n<ol>\n<li>\n<p><strong>Governance Tokens</strong>: These tokens are typically used for voting, decision-making, and protocol governance within a blockchain network. They hold significant importance in controlling and influencing the network’s future direction. However, their critical role often results in low transaction frequency, as holders prefer to retain them for strategic governance purposes rather than regular transactions. This low velocity can lead to decreased liquidity and underutilization of their potential as a medium of exchange.</p>\n</li>\n<li>\n<p><strong>Memecoins</strong>: Designed for high-frequency transactions, memecoins are intended to be used as everyday transactional currency. They offer fast transaction times and are widely adopted for various payment activities. Despite their high velocity and liquidity, memecoins usually do not contribute to the network’s security or governance, leading to a separation between transactional utility and network governance.</p>\n</li>\n</ol>\n<p>This dichotomy creates a fragmented token economy where neither type of token fully exploits its potential, affecting the overall efficiency and stability of the blockchain ecosystem. Governance tokens remain largely inactive in everyday commerce, while memecoins, although frequently used, do not enhance the security or governance of the network.</p>\n<h2><a name=\"problem-3\" class=\"anchor\" href=\"https://ethresear.ch#problem-3\"></a>Problem</h2>\n<p>The key challenge within blockchain systems employing governance tokens and memecoins e.g. <span class=\"math\">(DOGE)</span> or “<span class=\"math\">Dogecoin</span>” revolve around the distinct usage intentions and transaction demands for each type of token. Governance tokens, typically used for voting and protocol governance, often lack incentives for regular transactions due to their importance in network control. This can lead to decreased liquidity and underutilization of the tokens’ potential as a medium of exchange. Conversely, memecoins are designed for high-frequency transactions but might not contribute significantly to network security or governance. This dichotomy results in a fragmented token economy where neither type fully exploits its potential, thus affecting the overall efficiency and stability of the blockchain ecosystem.</p>\n<h2><a name=\"proposal-4\" class=\"anchor\" href=\"https://ethresear.ch#proposal-4\"></a>Proposal</h2>\n<p>To address these issues, an innovative system design is proposed dubbed “<span class=\"math\">TTTs</span>” or <strong>“Turtle Time Tokens”</strong>. <span class=\"math\">(TTTs)</span> have intentionally delayed transaction confirmation times to harmonize the economic roles of governance tokens and memecoins. By intentionally extending the confirmation time for governance token transactions, their velocity can be decreased, promoting value stability and encouraging use in strategic, high-value transactions or staking for governance purposes. Conversely, memecoins can serve as the primary medium for everyday transactions due to their faster confirmations, enhancing the blockchain’s usability and liquidity.</p>\n<p>This dual-token system aims to create a balanced distribution of token utility across different network activities, fostering a robust economic environment that supports both governance and rapid transaction needs. The decoupling of governance and transactional roles enhances the efficiency and stability of the blockchain ecosystem, ensuring that each token type serves its intended purpose effectively.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/5/e5c5edd5c4d97aa8cb0c718003700faed4f7b44f.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/e5c5edd5c4d97aa8cb0c718003700faed4f7b44f\" title=\"Screenshot 2024-06-01 at 1.14.24 PM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e5c5edd5c4d97aa8cb0c718003700faed4f7b44f_2_495x500.jpeg\" alt=\"Screenshot 2024-06-01 at 1.14.24 PM\" data-base62-sha1=\"wMFoUkJClZXRAl9zN1YhaElUgDd\" width=\"495\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e5c5edd5c4d97aa8cb0c718003700faed4f7b44f_2_495x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/e/5/e5c5edd5c4d97aa8cb0c718003700faed4f7b44f_2_742x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/e/5/e5c5edd5c4d97aa8cb0c718003700faed4f7b44f_2_990x1000.jpeg 2x\" data-dominant-color=\"7C8674\"></a></div><p></p>\n<h2><a name=\"breakdown-5\" class=\"anchor\" href=\"https://ethresear.ch#breakdown-5\"></a>Breakdown</h2>\n<p>The proposed solution aims to integrate the economic roles of governance tokens and memecoins more cohesively by altering transaction confirmation times and restricting the staking capabilities of the chosen memecoin being used as the native payment token, enhances the distinct utility of each token type, promoting a balanced and efficient blockchain ecosystem.</p>\n<h3><a name=\"governance-tokens-6\" class=\"anchor\" href=\"https://ethresear.ch#governance-tokens-6\"></a>Governance Tokens:</h3>\n<p>By intentionally extending the confirmation time for governance token transactions, we can decrease their velocity, thus stabilizing their value and encouraging their use in more deliberate, high-value transactions or staking for governance purposes. This design leverages longer confirmation times to disincentivize frivolous use and preserve the tokens for strategic decisions and network support. Governance tokens, therefore, become more valuable for long-term network governance and security.</p>\n<h3><a name=\"wrapped-memecoins-7\" class=\"anchor\" href=\"https://ethresear.ch#wrapped-memecoins-7\"></a>Wrapped Memecoins:</h3>\n<p>Wrapped Dogecoin (wDOGE) and similar memecoins can serve as the primary medium for everyday transactions due to their faster confirmations, enhancing the blockchain’s usability and liquidity. To maintain this liquidity and usability, wrapped memecoins would be blocked from staking capabilities. This restriction ensures that memecoins remain liquid and readily available for transactions, preventing them from being locked up in staking contracts. By keeping memecoins out of staking, the focus for staking and network security remains on governance tokens.</p>\n<h3><a name=\"benefits-of-the-dual-token-system-8\" class=\"anchor\" href=\"https://ethresear.ch#benefits-of-the-dual-token-system-8\"></a>Benefits of the Dual-Token System</h3>\n<ol>\n<li>\n<p><strong>Balanced Token Utility</strong>:</p>\n<ul>\n<li><strong>Governance Tokens</strong>: Used for high-value transactions, governance, and staking. Extended confirmation times encourage strategic use and value stability.</li>\n<li><strong>Wrapped Memecoins</strong>: Used for everyday transactions with fast confirmations, ensuring high liquidity and usability. Blocking staking capabilities maintains their transactional focus.</li>\n</ul>\n</li>\n<li>\n<p><strong>Economic Stability</strong>:</p>\n<ul>\n<li><strong>Governance Tokens</strong>: Reduced velocity and increased stability due to longer confirmation times.</li>\n<li><strong>Wrapped Memecoins</strong>: Enhanced value stability as their valuation is decoupled from the fluctuating underlying value of the protocol’s governance aspects.</li>\n</ul>\n</li>\n<li>\n<p><strong>Security and Compensation</strong>:</p>\n<ul>\n<li><strong>Transaction Fees</strong>: The application of gas fees on memecoin transactions ensures that network validators are adequately compensated, maintaining network security and operational integrity without the need for memecoins to contribute directly to governance.</li>\n<li><strong>Staking Focus</strong>: Governance tokens are the primary focus for staking, enhancing network security and governance efficiency.</li>\n</ul>\n</li>\n</ol>\n<h3><a name=\"implementation-9\" class=\"anchor\" href=\"https://ethresear.ch#implementation-9\"></a>Implementation</h3>\n<ol>\n<li>\n<p><strong>Governance Token Design</strong>:</p>\n<ul>\n<li>Implement extended confirmation times for governance token transactions.</li>\n<li>Design smart contracts for staking governance tokens to secure the network and participate in protocol governance.</li>\n</ul>\n</li>\n<li>\n<p><strong>Wrapped Memecoin Design</strong>:</p>\n<ul>\n<li>Ensure fast confirmation times for memecoin transactions.</li>\n<li>Implement smart contracts that block staking capabilities for wrapped memecoins, ensuring their liquidity and transactional focus.</li>\n</ul>\n</li>\n<li>\n<p><strong>Economic and Security Models</strong>:</p>\n<ul>\n<li>Develop models to calculate optimal confirmation times and transaction fees to balance liquidity, stability, and network security.</li>\n<li>Create incentives for validators to process both governance token and memecoin transactions, ensuring robust network security.</li>\n</ul>\n</li>\n</ol>\n<p>By integrating these design choices, the proposed solution promotes a more balanced distribution of token utility across different network activities, fostering a robust economic environment that supports both governance and rapid transaction needs. This dual-token system enhances the overall efficiency and stability of the blockchain ecosystem, ensuring that each token type serves its intended purpose effectively.</p>\n<h3><a name=\"utility-expansion-and-demand-10\" class=\"anchor\" href=\"https://ethresear.ch#utility-expansion-and-demand-10\"></a>Utility Expansion and Demand</h3>\n<div class=\"math\">\nU = \\sum_{i=1}^{n} u_i\n</div>\n<p>where <span class=\"math\">u_i</span> represents a specific use case the token enables. All else equal, a higher <span class=\"math\">U</span> should correspond to increased demand <span class=\"math\">D</span>, which we can model simply as:</p>\n<div class=\"math\">\nD = \\alpha U - \\beta P + \\epsilon\n</div>\n<p>where <span class=\"math\">P</span> is the token price, <span class=\"math\">\\alpha</span>, <span class=\"math\">\\beta</span> are coefficients representing the sensitivity of demand to utility and price respectively, and <span class=\"math\">\\epsilon</span> captures all other demand factors. Therefore, the increase in utility from permitting <span class=\"math\">T_g</span> transactions should boost demand for governance tokens by <span class=\"math\">\\alpha \\Delta U</span>.</p>\n<h3><a name=\"value-stability-and-velocity-impacts-11\" class=\"anchor\" href=\"https://ethresear.ch#value-stability-and-velocity-impacts-11\"></a>Value Stability and Velocity Impacts</h3>\n<p>With intentionally long confirmation times <span class=\"math\">\\tau_g</span> for <span class=\"math\">T_g</span> transactions creating a natural disincentive for using governance tokens in everyday payments and commerce compared to the memecoin with <span class=\"math\">\\tau_m</span> confirmations. This should reduce the velocity <span class=\"math\">V_g</span> of governance tokens. From the equation of exchange:</p>\n<div class=\"math\">\nMV = PQ\n</div>\n<p>where <span class=\"math\">M</span> is money supply, <span class=\"math\">V</span> is velocity, <span class=\"math\">P</span> is price level, and <span class=\"math\">Q</span> is real economic output transacted in the token. Reduced <span class=\"math\">V_g</span> puts upward pressure on <span class=\"math\">P_g</span>. Compared to memecoins used for payments, this dynamic could make governance token prices <span class=\"math\">P_g</span> more stable.</p>\n<p>We can quantify the velocity difference as follows. Let <span class=\"math\">\\lambda_g</span> be the fraction of <span class=\"math\">M_g</span> governance tokens transacted per unit time and <span class=\"math\">\\lambda_m</span> be the equivalent for <span class=\"math\">M_m</span> memecoins. Assuming the confirmation time drives usage, the expected velocities are:</p>\n<div class=\"math\">\nV_g = \\frac{\\lambda_g}{\\tau_g}, \\quad V_m = \\frac{\\lambda_m}{\\tau_m}\n</div>\n<p>So the velocity ratio simplifies to:</p>\n<div class=\"math\">\n\\frac{V_g}{V_m} = \\frac{\\lambda_g \\tau_m}{\\lambda_m \\tau_g}\n</div>\n<p>If <span class=\"math\">\\lambda_g \\approx \\lambda_m</span> (similar transaction demand) but <span class=\"math\">\\tau_g \\gg \\tau_m</span>, then <span class=\"math\">V_g \\ll V_m</span>. Memecoins should have much higher velocity and be the dominant medium of exchange.</p>\n<h3><a name=\"fee-revenue-and-security-budget-12\" class=\"anchor\" href=\"https://ethresear.ch#fee-revenue-and-security-budget-12\"></a>Fee Revenue and Security Budget</h3>\n<p>However, the governance token transactions <span class=\"math\">T_g</span>, though slower, still generate fee revenue for validators. If <span class=\"math\">T_g</span> transactions are a fraction <span class=\"math\">\\phi</span> of all transactions and the average fee is <span class=\"math\">\\bar{f}</span>, then the expected security budget from governance token usage is:</p>\n<div class=\"math\">\nB_g = \\phi \\bar{f} \\lambda_g M_g\n</div>\n<p>Compared to a system with only memecoins, this design increases the total security budget by <span class=\"math\">B_g</span>, without inflating <span class=\"math\">V_m</span> and putting downward pressure on <span class=\"math\">P_m</span>. The security ratio between the two tokens is:</p>\n<div class=\"math\">\n\\frac{B_g}{B_m} = \\frac{\\phi \\lambda_g M_g}{(1 - \\phi) \\lambda_m M_m}\n</div>\n<p>Even if <span class=\"math\">\\phi</span> and <span class=\"math\">M_g</span> are small compared to memecoins, this can still be a significant security contribution, especially if governance tokens have a higher average transaction size and therefore higher <span class=\"math\">\\bar{f}</span>.</p>\n<h3><a name=\"user-experience-and-economic-incentives-13\" class=\"anchor\" href=\"https://ethresear.ch#user-experience-and-economic-incentives-13\"></a>User Experience and Economic Incentives</h3>\n<p>The contrasting confirmation times <span class=\"math\">\\tau_g</span> and <span class=\"math\">\\tau_m</span> create a natural UX and economic incentive for users to treat the two tokens differently in their activities:</p>\n<pre data-code-wrap=\"algorithm\"><code class=\"lang-plaintext\">Algorithm 1 User Token Selection\n\nv ← value of transaction\nut ← user’s time preference\nif v is low and ut prefers fast settlement then\n    Use memecoin\nelse\n    if staking or network utility dominates then\n        Use governance token\n    else\n        Use either based on other factors\n    end if\nend if\n</code></pre>\n<p>Users are incentivized to use memecoins for everyday small transactions given the faster <span class=\"math\">\\tau_m</span> confirmations. Conversely, governance staking and protocol utility create a strong incentive to hold governance tokens despite their slower transactability.</p>\n<p>In essence, the system economically “prices in” the opportunity cost of using scarce governance tokens in transactions through the longer confirmation times <span class=\"math\">\\tau_g</span>. This encourages efficient allocation between staking and transacting. At the margin, a user should only transact a governance token if the economic gain exceeds the time value and staking opportunity cost.</p>\n<h3><a name=\"memecoin-stability-and-single-purpose-design-14\" class=\"anchor\" href=\"https://ethresear.ch#memecoin-stability-and-single-purpose-design-14\"></a>Memecoin Stability and Single-Purpose Design</h3>\n<p>As mentioned, a key factor in a memecoin’s potential stability is its focused, single-purpose design optimized for payments. Unlike governance tokens or more complex multi-purpose tokens, a memecoin like Dogecoin aims to excel at one core function: facilitating fast, cheap, and reliable transactions.</p>\n<p>This specialization has several potential benefits for stability:</p>\n<ol>\n<li><strong>Reduced Exposure to Protocol-Level Risks</strong>: By being used across multiple networks, a memecoin can diversify its risk exposure. Even if a particular network experiences issues or a decline in the perceived value of its governance token, the memecoin’s value may remain more stable given its usage and acceptance on other chains.</li>\n<li><strong>Network Effect and Lindy Effect</strong>: As a memecoin gains adoption as a payment method across multiple platforms, it can benefit from a strong network effect. The more users and merchants accept it, the more valuable and stable it becomes. Over time, this can create a self-reinforcing cycle of stability (the Lindy effect).</li>\n<li><strong>Decoupling from Platform Innovation</strong>: A payment-focused memecoin’s value is less strongly coupled to the technological progress and innovations of any single platform. As long as it continues to meet its core payment functionality, its value can remain relatively stable even if some networks advance faster than others.</li>\n</ol>\n<p>We can formalize this concept of a memecoin’s “stability advantage” <span class=\"math\">SA</span> over a platform-specific governance token as follows:</p>\n<div class=\"math\">\nSA = \\frac{\\sigma_g}{\\sigma_m}\n</div>\n<p>where <span class=\"math\">\\sigma_g</span> is the price volatility of the governance token and <span class=\"math\">\\sigma_m</span> is the price volatility of the memecoin. All else equal, we would expect <span class=\"math\">SA &gt; 1</span> for a widely adopted memecoin used across many platforms.</p>\n<h3><a name=\"quantifying-cross-platform-adoption-15\" class=\"anchor\" href=\"https://ethresear.ch#quantifying-cross-platform-adoption-15\"></a>Quantifying Cross-Platform Adoption</h3>\n<p>The stability advantage of a cross-platform memecoin depends heavily on the degree and distribution of its adoption across networks. We can quantify this “adoption spread” <span class=\"math\">A_s</span> as:</p>\n<div class=\"math\">\nA_s = 1 - \\sum_{i=1}^{N} \\left(\\frac{T_i}{T}\\right)^2\n</div>\n<p>where <span class=\"math\">N</span> is the total number of networks the memecoin is used on, <span class=\"math\">T_i</span> is the transaction volume on the <span class=\"math\">i</span>-th network, and <span class=\"math\">T</span> is the total transaction volume across all networks.</p>\n<p><span class=\"math\">A_s</span> ranges from 0 to <span class=\"math\">1 - \\frac{1}{N}</span>, with higher values indicating more evenly spread adoption. An <span class=\"math\">A_s</span> close to 0 means the memecoin is heavily dominated by usage on a single network, while a value close to <span class=\"math\">1 - \\frac{1}{N}</span> indicates relatively equal adoption across all <span class=\"math\">N</span> networks.</p>\n<p>Putting it together, we can propose a simple model for the stability <span class=\"math\">S</span> of a cross-platform memecoin:</p>\n<div class=\"math\">\nS = k \\cdot A_s \\cdot SA\n</div>\n<p>where <span class=\"math\">k</span> is a constant reflecting other factors like overall cryptocurrency market conditions. This suggests that a memecoin’s stability is driven by both its inherent stability advantage over platform-specific tokens and the breadth of its adoption across platforms.</p>\n<h3><a name=\"factors-contributing-to-stability-16\" class=\"anchor\" href=\"https://ethresear.ch#factors-contributing-to-stability-16\"></a>Factors Contributing to Stability</h3>\n<ol>\n<li>\n<p><strong>Increased Liquidity</strong>:</p>\n<ul>\n<li><strong>Widespread Use</strong>: As <span class=\"math\">wDOGE</span> is adopted across multiple blockchains, its liquidity would increase. High liquidity typically reduces price volatility, as large trades can be absorbed without significantly affecting the price.</li>\n<li><strong>Liquidity Pools</strong>: Enhanced liquidity pools and decentralized exchanges on multiple blockchains would facilitate seamless conversion and trading, further stabilizing the price.</li>\n</ul>\n</li>\n<li>\n<p><strong>Broad Network Effect</strong>:</p>\n<ul>\n<li><strong>Adoption and Usage</strong>: The more widely <span class=\"math\">wDOGE</span> is used, the stronger its network effect becomes. As more merchants, users, and platforms accept and use <span class=\"math\">wDOGE</span> for payments, its utility and trust increase, contributing to price stability.</li>\n<li><strong>Lindy Effect</strong>: The longer <span class=\"math\">wDOGE</span> is used successfully, the more likely it is to continue being used, enhancing its reputation and perceived stability.</li>\n</ul>\n</li>\n<li>\n<p><strong>Diversified Risk</strong>:</p>\n<ul>\n<li><strong>Cross-Platform Stability</strong>: By being used on multiple blockchains, $wDOGE$’s value is less tied to the performance or issues of any single blockchain. This diversification reduces the risk of value fluctuations due to problems on one specific network.</li>\n<li><strong>Decoupling from Governance</strong>: Since <span class=\"math\">wDOGE</span> is not used for governance or staking, its value is decoupled from the complexities and risks associated with network governance decisions and staking economics.</li>\n</ul>\n</li>\n</ol>\n<h3><a name=\"economic-model-for-stability-17\" class=\"anchor\" href=\"https://ethresear.ch#economic-model-for-stability-17\"></a>Economic Model for Stability</h3>\n<ol>\n<li>\n<p><strong>Supply and Demand Dynamics</strong>:</p>\n<ul>\n<li><strong>Stable Demand</strong>: As <span class=\"math\">wDOGE</span> becomes a preferred payment token across multiple blockchains, the consistent demand for transactions helps stabilize its value.</li>\n<li><strong>Predictable Supply</strong>: Assuming the supply of wrapped Dogecoin is managed effectively (e.g., through minting and burning mechanisms that maintain a 1:1 peg with the original Dogecoin), the predictability in supply further contributes to price stability.</li>\n</ul>\n</li>\n<li>\n<p><strong>Velocity of Money</strong>:</p>\n<ul>\n<li><strong>High Velocity</strong>: <span class=\"math\">wDOGE</span> ’s use in frequent, everyday transactions ensures high velocity. According to the equation of exchange <span class=\"math\">(MV = PQ)</span> (where <span class=\"math\">(M)</span> is money supply, <span class=\"math\">(V)</span> is velocity, <span class=\"math\">(P)</span> is price level, and <span class=\"math\">(Q)</span> is real output), high velocity helps maintain a stable <span class=\"math\">(P)</span> if <span class=\"math\">(Q)</span> (transaction volume) is also high and stable.</li>\n<li><strong>Transactional Stability</strong>: As <span class=\"math\">wDOGE</span> is used primarily for payments, the consistent transaction volume across multiple blockchains contributes to its price stability.</li>\n</ul>\n</li>\n</ol>\n<h3><a name=\"benefits-of-stabilized-wdoge-for-payments-18\" class=\"anchor\" href=\"https://ethresear.ch#benefits-of-stabilized-wdoge-for-payments-18\"></a>Benefits of Stabilized <span class=\"math\">wDOGE</span> for Payments</h3>\n<ol>\n<li>\n<p><strong>Reliable Medium of Exchange</strong>:</p>\n<ul>\n<li><strong>Price Stability</strong>: With reduced volatility, <span class=\"math\">wDOGE</span> becomes a more reliable medium of exchange, encouraging its use in everyday transactions without concerns over significant value changes.</li>\n<li><strong>Merchant Adoption</strong>: Merchants are more likely to accept a stable token for payments, reducing the risk of loss due to price fluctuations.</li>\n</ul>\n</li>\n<li>\n<p><strong>User Confidence</strong>:</p>\n<ul>\n<li><strong>Trust and Acceptance</strong>: Stability fosters trust among users, making them more comfortable holding and transacting with <span class=\"math\">wDOGE</span>.</li>\n<li><strong>Wider Adoption</strong>: As user confidence grows, wider adoption follows, creating a positive feedback loop that further stabilizes the token’s value.</li>\n</ul>\n</li>\n<li>\n<p><strong>Integration with Financial Systems</strong>:</p>\n<ul>\n<li><strong>Easier Integration</strong>: A stable payment token can be more easily integrated with traditional financial systems, such as point-of-sale systems, online payment gateways, and financial services.</li>\n<li><strong>Regulatory Compliance</strong>: Stability can also make it easier to comply with regulatory requirements, as regulators often favor less volatile assets for payment purposes.</li>\n</ul>\n</li>\n</ol>\n<p><em>Widespread adoption of  e.g. <span class=\"math\">wDOGE</span> across multiple blockchains has the potential to significantly stabilize its value, making it an even more effective and reliable payment token. The increased liquidity, broad network effect, diversified risk, and stable supply and demand dynamics contribute to this stability. A stable Memecoin enhances user confidence, encourages merchant adoption, and facilitates integration with traditional financial systems, promoting its use as a preferred medium of exchange in the cryptocurrency ecosystem.</em></p>\n<h2><a name=\"advantages-19\" class=\"anchor\" href=\"https://ethresear.ch#advantages-19\"></a>Advantages</h2>\n<p>Allowing fungible governance tokens to be spent but with slower confirmations than memecoins is a powerful tokenomic design pattern. It creates a natural separation in token utility and incentivizes staking while still harnessing transactional usage for security. More broadly, it illustrates how subtle technical choices like confirmation times can be deeply interlinked with a cryptocurrency’s economic structure and incentives.</p>\n<h2><a name=\"applications-20\" class=\"anchor\" href=\"https://ethresear.ch#applications-20\"></a>Applications</h2>\n<p>Improving our understanding of these tokenomic principles can help inform the rational engineering of future blockchain networks. Despite these challenges, the potential of a widely adopted, cross-platform memecoin to achieve relative stability compared to platform-specific tokens remains compelling. As decentralized networks continue to evolve, observing the dynamics of payment-focused memecoins like <span class=\"math\">Dogecoin</span> can provide valuable insights into the future of cryptocurrency stability and adoption.</p>\n<h2><a name=\"comparisons-21\" class=\"anchor\" href=\"https://ethresear.ch#comparisons-21\"></a>Comparisons</h2>\n<p>The proposed dual-token system with differentiated confirmation times using <span class=\"math\">TTTs</span> for governance tokens and memecoins like <span class=\"math\">DOGE</span>, is a novel approach to harmonizing the economic roles of different token types in blockchain networks. To better understand its potential impact and significance, it’s essential to compare it with other leading concepts and approaches in this area.</p>\n<ol>\n<li>\n<p><strong>Dual-Token Economies</strong>: The idea of using multiple token types within a single blockchain ecosystem is not new. Several projects, such as Decred and Cosmos, have implemented dual-token economies to separate the roles of staking, governance, and transactions. However, the proposed system takes this concept further by introducing differentiated confirmation times to optimize the utility and stability of each token type.</p>\n</li>\n<li>\n<p><strong>Stablecoin Designs</strong>: Stablecoins, such as Tether <span class=\"math\">(USDT)</span> and USD Coin <span class=\"math\">(USDC)</span>, have gained popularity as a means to mitigate the volatility of cryptocurrencies. These tokens are typically pegged to a stable asset, like the US dollar, to maintain a consistent value. While the proposed system’s memecoin (e.g., <span class=\"math\">wDOGE</span>) is not explicitly designed as a stablecoin, its focus on payments and stability shares some similarities with stablecoin concepts. The key difference lies in the approach to achieving stability - through widespread adoption and decoupling from governance, rather than an explicit peg.</p>\n</li>\n<li>\n<p><strong>Velocity Reduction Mechanisms</strong>: Some projects have explored mechanisms to reduce token velocity and encourage holding, such as transaction fees, demurrage, or time-locked staking. The proposed system’s extended confirmation times for governance tokens can be seen as a novel velocity reduction mechanism that aligns with the token’s intended use case. This approach is more organically tied to the network’s economic incentives compared to external mechanisms.</p>\n</li>\n<li>\n<p><strong>Interoperability and Cross-Chain Adoption</strong>: The proposed system emphasizes the importance of widespread adoption of memecoins like <span class=\"math\">wDOGE</span> across multiple blockchains. This aligns with the growing trend of interoperability and cross-chain solutions in the blockchain space. Projects like Polkadot, Cosmos, and Chainlink are working on enabling seamless communication and value transfer between different blockchains. The proposed system can leverage these advancements to facilitate the widespread adoption and stability of memecoins.</p>\n</li>\n<li>\n<p><strong>Economic Incentive Design</strong>: The field of tokenomics focuses on designing incentive structures that align the behavior of network participants with the overall goals of the system. The proposed dual-token system is a prime example of economic incentive design, as it creates a clear separation of roles and incentives for governance token holders and memecoin users. This approach is in line with the ongoing research and experimentation in the field of tokenomics.</p>\n</li>\n</ol>\n<p>While the proposed system introduces novel concepts, such as differentiated confirmation times and the specific focus on memecoins like wDOGE, it also builds upon and complements existing approaches in the blockchain space. The emphasis on stability, interoperability, and incentive alignment is consistent with the general direction of the industry.</p>\n<h2><a name=\"conclusion-22\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-22\"></a>Conclusion</h2>\n<p>The design choices for blockchain governance and payment tokens have far-reaching implications for network dynamics, user behavior, and overall economic stability. By leveraging different confirmation times for governance and payment tokens, we can create a balanced ecosystem that encourages efficient token usage, enhances security, and promotes long-term stability. Further research and comparative analysis will continue to refine these models and inform the development of robust and scalable blockchain systems.</p>\n            <p><small>3 posts - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/integrating-governance-tokens-and-memecoins-a-dual-token-system-for-enhanced-blockchain-efficiency-and-stability/19707\">Read full topic</a></p>","link":"https://ethresear.ch/t/integrating-governance-tokens-and-memecoins-a-dual-token-system-for-enhanced-blockchain-efficiency-and-stability/19707","pubDate":"Sat, 01 Jun 2024 17:16:48 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19707"},"source":{"@url":"https://ethresear.ch/t/integrating-governance-tokens-and-memecoins-a-dual-token-system-for-enhanced-blockchain-efficiency-and-stability/19707.rss","#text":"Integrating Governance Tokens and Memecoins: A Dual-Token System for Enhanced Blockchain Efficiency and Stability"}},{"title":"Strawmanning Based Preconfirmations","dc:creator":"linoscope","category":"Layer 2","description":"<p>By <a href=\"https://twitter.com/linoscope\" rel=\"noopener nofollow ugc\">Lin Oshitani</a> (Nethermind Research). Thanks to <a href=\"https://twitter.com/ConorMcMenamin9\" rel=\"noopener nofollow ugc\">Conor</a> and <a href=\"https://www.linkedin.com/in/aikaterini-panagiota-stouka/\" rel=\"noopener nofollow ugc\">Aikaterini</a> for the detailed discussions and review. Thanks also to <a href=\"https://twitter.com/smartprogrammer\" rel=\"noopener nofollow ugc\">Ahmad</a> and  <a href=\"https://twitter.com/Brechtpd\" rel=\"noopener nofollow ugc\">Brecht</a> for their review and comments. This work was partly funded by Taiko. The views expressed are my own and do not necessarily reflect those of the reviewers or Taiko.</p>\n<h1><a name=\"introduction-1\" class=\"anchor\" href=\"https://ethresear.ch#introduction-1\"></a>Introduction</h1>\n<p><a href=\"https://ethresear.ch/t/based-rollups-superpowers-from-l1-sequencing/15016/\">Based sequencing</a> provides a credibly neutral shared sequencer layer that enables composability among rollups and between rollups and L1. Additionally, <a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">based preconfirmations</a> provide fast preconfirmation services on top of based sequencing, significantly enhancing the user experience as a result. However, compared to non-preconfirming based sequencing, naive implementations of based preconfirmations introduce negative externalities that require thoughtful consideration. Although issues have been highlighted in works such as <a href=\"https://www.youtube.com/watch?v=b3o2YP6sxpg\" rel=\"noopener nofollow ugc\">this Bell Curve episode</a> (mainly in the context of non-based sequencers) and <a href=\"https://research.chainbound.io/examining-the-based-sequencing-spectrum\" rel=\"noopener nofollow ugc\">this write-up</a> from Chainbound, we believe the topic remains largely underexplored.</p>\n<p>In this post, we will analyze a simple “strawman” preconfirmation setup, identify its shortcomings, and shed light on the challenges that future solutions must address.</p>\n<h1><a name=\"the-strawman-2\" class=\"anchor\" href=\"https://ethresear.ch#the-strawman-2\"></a>The Strawman</h1>\n<p>The strawman based preconfirmation setup is as follows:</p>\n<ul>\n<li>The L1 proposer may or may not delegate the preconf right to some external entity.\n<ul>\n<li>We use the term <em>preconfer</em> to describe the entity providing preconfirmations, which can either be the L1 proposer itself or an entity delegated from the L1 proposer.</li>\n</ul>\n</li>\n<li>The preconfer handles preconfirmations by providing two endpoints:\n<ul>\n<li>Request endpoint: For users and searchers to request preconfirmations.</li>\n<li>Promise endpoint: For streaming the preconf results to the public. It enables the preconfirmation requester to promptly receive the result while allowing other users to stay updated on the latest preconfirmed state before initiating their own preconfirmations.</li>\n</ul>\n</li>\n<li>Users will include a “preconf tip” to the requests to incentivize preconfers to provide preconfirmations.</li>\n<li>The preconfer preconfirms transactions primarily on a first-come-first-serve basis.</li>\n</ul>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/6/2/62f461e44a685f6ecf9401c8c6ad62689a826ec1.jpeg\" alt=\"Based Preconf (2) (1)\" data-base62-sha1=\"e7onuIzRDpwD9KD1j3CE3w7YPDP\" width=\"649\" height=\"282\"></p>\n<p>Furthermore, because they are significantly more complex to design and implement, we focus solely on execution promises. Execution promises guarantee the exact sequence and state of a transaction. In contrast, inclusion promises only ensure that a transaction will be included without specifying the conditions of its inclusion.</p>\n<h1><a name=\"the-problems-3\" class=\"anchor\" href=\"https://ethresear.ch#the-problems-3\"></a>The Problems</h1>\n<p>We will cover six problems with the strawman based preconfirmation design:</p>\n<ul>\n<li>Problem 1: Latency races</li>\n<li>Problem 2: Congestion</li>\n<li>Problem 3: Tip pricing</li>\n<li>Problem 4: Fair exchange</li>\n<li>Problem 5: Liveness</li>\n<li>Problem 6: Early auctions</li>\n</ul>\n<h2><a name=\"problem-1-latency-races-4\" class=\"anchor\" href=\"https://ethresear.ch#problem-1-latency-races-4\"></a><strong>Problem 1: Latency races</strong></h2>\n<p>Whoever has the lowest latency to the preconfer gains all the MEV <a href=\"https://docs.cow.fi/mevblocker/concepts/mev-concepts/what-is-backrunning\" rel=\"noopener nofollow ugc\">back-running profit</a>. This is because they can:</p>\n<ol>\n<li>Be the first to obtain the latest state of the chain through the promise endpoint and</li>\n<li>be the first to insert their back-run transaction via the request endpoint.</li>\n</ol>\n<p>This structure has historically <a href=\"https://academic.oup.com/qje/article/130/4/1547/1916146\" rel=\"noopener nofollow ugc\">incentivized <em>latency races</em></a>, where network participants strive to minimize latency to the limit. Eventually, this would lead to searchers choosing to colocate or vertically integrate with preconfers, which significantly risks the network’s <a href=\"https://collective.flashbots.net/t/decentralized-crypto-needs-you-to-be-a-geographical-decentralization-maxi/1385\" rel=\"noopener nofollow ugc\">geographical decentralization</a>.</p>\n<p>Such latency races have been a long-lasting concern for existing centralized sequencers. For example, the Arbitrum team has explored the idea of <a href=\"https://github.com/OffchainLabs/nitro/pull/1504\" rel=\"noopener nofollow ugc\">implementing Proof of Work</a> (PoW) where they grant fast connections to participants who succeed in PoW while imposing artificial delays on participants who do not. However, this proposal encountered <a href=\"https://research.arbitrum.io/t/thoughts-on-arbitrums-proposal-to-score-connections-by-pow/8121\" rel=\"noopener nofollow ugc\">backlash from the community</a> due to the substantial economic waste introduced.</p>\n<h2><a name=\"problem-2-congestion-5\" class=\"anchor\" href=\"https://ethresear.ch#problem-2-congestion-5\"></a>Problem 2: Congestion</h2>\n<p>Given that L2 transaction fees are typically low, searchers may choose to avoid latency races altogether and instead flood the rollup with probabilistic arbitrage attempts. This can be done by spamming an arbitrage contract that attempts an arbitrage and rollbacks if it fails. In Solana, where the fee is extremely low, it has been <a href=\"https://www.jito.network/blog/solving-the-mev-problem-on-solana-a-guide-for-stakers/#:~:text=Solana%20validators%20are%20wasting%20more%20than%2058%25%20of%20their%20time%20processing%20failed%20arbitrages\" rel=\"noopener nofollow ugc\">reported</a> that validators waste ~58% of their time processing such failed arbitrage transactions.</p>\n<p>This would result in a situation resembling pre-Flashbots <a href=\"https://arxiv.org/abs/1904.05234\" rel=\"noopener nofollow ugc\">priority gas auctions</a>, where the competition among searchers congests the block space with failed arbitrage transactions, ultimately driving up gas fees for regular users.</p>\n<h2><a name=\"problem-3-tip-pricing-6\" class=\"anchor\" href=\"https://ethresear.ch#problem-3-tip-pricing-6\"></a>Problem 3: Tip pricing</h2>\n<p>The preconfer must solve an <a href=\"https://hackmd.io/@EspressoSystems/bft-and-proposer-promised-preconfirmations#:~:text=online%20MEV%20maximization%20problem\" rel=\"noopener nofollow ugc\">online MEV problem</a>, where they decide whether to preconf a transaction with no/limited visibility to other transactions that compete for the same position. For example, suppose the preconfer receives a preconf request with 1 ETH tip. How would the preconfer know that the tip is appropriately priced? Should they accept the tip and preconf immediately or wait for a while in case there is another request with a higher tip?</p>\n<h2><a name=\"problem-4-fair-exchange-7\" class=\"anchor\" href=\"https://ethresear.ch#problem-4-fair-exchange-7\"></a>Problem 4: Fair exchange</h2>\n<p>The preconfer can withhold preconf promises and not return them to the user in a timely manner. Note that preconfers are incentivized to withhold preconf promises as much as possible to maximize their opportunity to reorder and insert transactions, thereby increasing their MEV.</p>\n<p>As an extreme example, the preconfer could withhold all promises during its window (12 sec or more), reorder and inject txs as it wishes, and only publish the promises when the final tx batch is submitted to L1.</p>\n<h2><a name=\"problem-5-liveness-8\" class=\"anchor\" href=\"https://ethresear.ch#problem-5-liveness-8\"></a>Problem 5: Liveness</h2>\n<p>For the case when the proposer delegates the preconfirming rights to an external preconfer, the liveness and censorship resistance of the preconfirmations will rely solely on this single external entity for the duration of the preconfer’s slot(s).</p>\n<h2><a name=\"problem-6-early-auctions-9\" class=\"anchor\" href=\"https://ethresear.ch#problem-6-early-auctions-9\"></a>Problem 6: Early auctions</h2>\n<p>Any system with L1 composable preconfirmations (i.e., preconfirmation of L1 transactions) will likely result in <em>preconfer-builder integration,</em> where preconfer and builder become the same entity. This is for two reasons:</p>\n<ul>\n<li>With L1 preconfirmations, most cross-domain MEV, including CEX-DEX arbitrage, will be captured through preconfirmed transactions.\n<ul>\n<li>Considering the bulk of MEV revenue comes from CEX-DEX arbitrage, this means that most MEV revenue will be secured through preconfirmations. Consequently, the revenue from building the non-preconfirmed portion of the block will be greatly reduced.</li>\n</ul>\n</li>\n<li>Preconfed L1 transactions must be included at the top of the current block.\n<ul>\n<li>Inserting any transactions before a preconfirmed transaction could alter the state anticipated by the preconfirmation, potentially invalidating the preconfirmation guarantee. This means builders must constantly incorporate the latest preconfed transactions into their blocks, which would be extremely difficult, if not unfeasible.</li>\n</ul>\n</li>\n</ul>\n<p>Combined with preconf delegation happening ahead of the proposer’s slot, preconfer-builder integration leads us to a world where L1 proposers delegate their preconfirmation rights <em>and block-building rights</em> to the same external entity <em>ahead of time</em> for their slot.</p>\n<p>Selecting the block builder in advance, known as <em>early auctions</em>, contrasts sharply with the current MEV-Boost PBS pipeline, where block builders are dynamically chosen <em>just-in-time</em> (<em>JIT</em>) within the slot through block auctions. More details comparing JIT auctions and early auctions can be found <a href=\"https://collective.flashbots.net/t/when-to-sell-your-blocks/2814\" rel=\"noopener nofollow ugc\">here</a>.</p>\n<p>The goal of based sequencing is to inherit the security of L1. However, with based preconfirmations, we risk altering the security landscape of the underlying L1 itself. Although early auctions might not be entirely detrimental (further research and experimentation are needed), they represent a fundamental shift from the current MEV-Boost builder market. Therefore, they should be introduced with great care, especially when introduced off-protocol, where control over centralization tendencies is limited.</p>\n<h1><a name=\"conclusion-10\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-10\"></a>Conclusion</h1>\n<p>We observed that naive implementations of preconfirmations can lead to various negative externalities. As with all things in blockchains, trade-offs are inevitable. However, such negative effects should be mitigated as much as possible and, when needed, introduced as a deliberate choice, not an accident.</p>\n<p>At Nethermind, along with our collaborators, we are actively researching solutions that address the issues outlined in this document. Stay tuned for more updates!</p>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/strawmanning-based-preconfirmations/19695\">Read full topic</a></p>","link":"https://ethresear.ch/t/strawmanning-based-preconfirmations/19695","pubDate":"Fri, 31 May 2024 11:43:01 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19695"},"source":{"@url":"https://ethresear.ch/t/strawmanning-based-preconfirmations/19695.rss","#text":"Strawmanning Based Preconfirmations"}},{"title":"Gossip IWANT/IHAVE Effectiveness in Ethereum's Gossipsusb network","dc:creator":"yiannisbot","category":"Networking","description":"<h1><a name=\"summary-tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#summary-tldr-1\"></a>Summary &amp; TL;DR</h1>\n<p>The ProbeLab team (<a href=\"https://probelab.io\" rel=\"noopener nofollow ugc\">https://probelab.io</a>) is carrying out a study on the performance of Gossipsub in Ethereum’s P2P network. This post is reporting the first of a list of metrics that the team will be diving into, namely, how efficient is Gossipsub’s gossip mechanism. For the purposes of this study, we have built a tool called Hermes (<a href=\"https://github.com/probe-lab/hermes/\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - probe-lab/hermes: A Gossipsub listener and tracer.</a>), which acts as a GossipSub listener and tracer. Hermes subscribes to all relevant pubsub topics and traces all protocol interactions. The results reported here are from a 3.5hr trace.</p>\n<p><strong>Study Description:</strong> The purpose of this study is to identify the ratio between the number of <code>IHAVE</code> messages sent and the number of <code>IWANT</code> messages received from our node. This should be done both in terms of overall messages, but also in terms of <code>msgIDs</code>. This metric will give us an overview of the effectiveness of Gossipsub’s gossip mechanism, i.e., how useful the bandwidth consumed by gossip messages really is.</p>\n<p><strong>TL;DR:</strong> <strong>The effectiveness of Gossipsub’s gossip mechanism, i.e., the <code>IHAVE</code> and <code>IWANT</code> message exchange is not efficient in the Ethereum network.</strong> Message ratios between Sent <code>IHAVEs</code> and Received <code>IWANTs</code> can reach to more than 1:50 for some topics. Suggested optimisations and things to investigate to improve effectiveness are given at the end of this report.</p>\n<h2><a name=\"overall-results-sent-ihaves-vs-received-iwant-2\" class=\"anchor\" href=\"https://ethresear.ch#overall-results-sent-ihaves-vs-received-iwant-2\"></a>Overall Results - Sent IHAVEs vs Received IWANT</h2>\n<p>The plots below do not differentiate between different topics. They present aggregates over all topics. The ratio of sent <code>IHAVEs</code> vs received <code>IWANTs</code> does not seem extreme (top plot) with a ratio of less than 1:2, but digging deeper into the number of <code>msgIDs</code> carried by those <code>IHAVE</code> and <code>IWANT</code> messages shows a different picture (middle plot). The ratio itself for all three topics are given in the third (bottom plot), where we see that especially for the beacon_block topic the ratio is close to 1:100 and going a lot higher at times.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/7/27e3878da92a987de30755da843003d2390d2852.png\" data-download-href=\"https://ethresear.ch/uploads/default/27e3878da92a987de30755da843003d2390d2852\" title=\"gossip_control_msgs_sent_ihave_vs_recv_iwant_messages\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/7/27e3878da92a987de30755da843003d2390d2852_2_517x309.png\" alt=\"gossip_control_msgs_sent_ihave_vs_recv_iwant_messages\" data-base62-sha1=\"5GS6guu22d7JvCUaDaT4M9KpCjE\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/7/27e3878da92a987de30755da843003d2390d2852_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/2/7/27e3878da92a987de30755da843003d2390d2852_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/2/7/27e3878da92a987de30755da843003d2390d2852.png 2x\" data-dominant-color=\"F9F8F8\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/6/169e349eb5bf6f5eae425791f895e9ae32a5a41d.png\" data-download-href=\"https://ethresear.ch/uploads/default/169e349eb5bf6f5eae425791f895e9ae32a5a41d\" title=\"gossip_control_msgs_sent_ihave_vs_recv_iwant_message_ids\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/6/169e349eb5bf6f5eae425791f895e9ae32a5a41d_2_517x309.png\" alt=\"gossip_control_msgs_sent_ihave_vs_recv_iwant_message_ids\" data-base62-sha1=\"3e5spcR8uui86liVE47bS1wp1oN\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/6/169e349eb5bf6f5eae425791f895e9ae32a5a41d_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/1/6/169e349eb5bf6f5eae425791f895e9ae32a5a41d_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/1/6/169e349eb5bf6f5eae425791f895e9ae32a5a41d.png 2x\" data-dominant-color=\"F6F6F6\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/3/a37bfd19efcd740d899634ae0d27a92413c2cb2e.png\" data-download-href=\"https://ethresear.ch/uploads/default/a37bfd19efcd740d899634ae0d27a92413c2cb2e\" title=\"gossip_control_msgs_ration_of_sent_ihave_vs_recv_iwant_message_ids_all_topics\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/3/a37bfd19efcd740d899634ae0d27a92413c2cb2e_2_517x309.png\" alt=\"gossip_control_msgs_ration_of_sent_ihave_vs_recv_iwant_message_ids_all_topics\" data-base62-sha1=\"nkfth88x4NjdAsKzgTt6Hkoeym2\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/3/a37bfd19efcd740d899634ae0d27a92413c2cb2e_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/a/3/a37bfd19efcd740d899634ae0d27a92413c2cb2e_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/3/a37bfd19efcd740d899634ae0d27a92413c2cb2e.png 2x\" data-dominant-color=\"F9F6F4\"></a></div><p></p>\n<h2><a name=\"per-topic-results-sent-ihaves-vs-received-iwant-3\" class=\"anchor\" href=\"https://ethresear.ch#per-topic-results-sent-ihaves-vs-received-iwant-3\"></a>Per Topic Results - Sent IHAVEs vs Received IWANT</h2>\n<p>Next, we’re diving into the ratio <em>per topic</em> to get a better understanding of the gossip effectiveness for each topic. We’re presenting the overall number as well as the ratio per topic. The ratio of sent <code>IHAVEs</code> vs received <code>IWANTs</code> is more extreme and reaches an average of close to 1:100 for the <code>beacon_block</code> topic, 1:10 for the <code>beacon_aggregate_and_proof</code> topic and 1:6 for the <code>sync_committee_contribution_and_proof</code> topic.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/0/b/0b1d31747dac95b38c72afe9858fb9211ded447c.png\" data-download-href=\"https://ethresear.ch/uploads/default/0b1d31747dac95b38c72afe9858fb9211ded447c\" title=\"gossip_control_msgs_sent_ihave_vs_recv_iwant_message_ids_69ae0e99_beacon_block\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/0/b/0b1d31747dac95b38c72afe9858fb9211ded447c_2_517x309.png\" alt=\"gossip_control_msgs_sent_ihave_vs_recv_iwant_message_ids_69ae0e99_beacon_block\" data-base62-sha1=\"1AjNuB7chyphAJT4OYkyGtGgHZa\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/0/b/0b1d31747dac95b38c72afe9858fb9211ded447c_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/0/b/0b1d31747dac95b38c72afe9858fb9211ded447c_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/0/b/0b1d31747dac95b38c72afe9858fb9211ded447c.png 2x\" data-dominant-color=\"F9F7F6\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/5/d5ac836932182c36c9ef2f0097bc2c27a8b39beb.png\" data-download-href=\"https://ethresear.ch/uploads/default/d5ac836932182c36c9ef2f0097bc2c27a8b39beb\" title=\"gossip_control_msgs_sent_ihave_vs_recv_iwant_message_ids_69ae0e99_beacon_aggregate_and_proof\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/5/d5ac836932182c36c9ef2f0097bc2c27a8b39beb_2_517x309.png\" alt=\"gossip_control_msgs_sent_ihave_vs_recv_iwant_message_ids_69ae0e99_beacon_aggregate_and_proof\" data-base62-sha1=\"uufjaWfUlpHVPGvVHcFjTbzJLqX\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/5/d5ac836932182c36c9ef2f0097bc2c27a8b39beb_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/d/5/d5ac836932182c36c9ef2f0097bc2c27a8b39beb_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/d/5/d5ac836932182c36c9ef2f0097bc2c27a8b39beb.png 2x\" data-dominant-color=\"FAF9F9\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/a/aa5d777e133a0cf20446b3e978d7060fbc4a8086.png\" data-download-href=\"https://ethresear.ch/uploads/default/aa5d777e133a0cf20446b3e978d7060fbc4a8086\" title=\"gossip_control_msgs_sent_ihave_vs_recv_iwant_message_ids_69ae0e99_sync_committee_contribution_and_proof\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/a/aa5d777e133a0cf20446b3e978d7060fbc4a8086_2_517x309.png\" alt=\"gossip_control_msgs_sent_ihave_vs_recv_iwant_message_ids_69ae0e99_sync_committee_contribution_and_proof\" data-base62-sha1=\"oj7q8DBeVJwr1Jguwh6YR9Tcm46\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/a/aa5d777e133a0cf20446b3e978d7060fbc4a8086_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/a/a/aa5d777e133a0cf20446b3e978d7060fbc4a8086_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/a/aa5d777e133a0cf20446b3e978d7060fbc4a8086.png 2x\" data-dominant-color=\"F9F8F7\"></a></div><p></p>\n<p>It is clear that there is an excess of <code>IHAVE</code> messages sent compared to the usefulness that these provide in terms of received <code>IWANT</code> messages. There’s at least a 10x bandwidth consumption that we could optimise for if we reduced the ratios especially for the <code>beacon_block</code> and <code>beacon_aggregate_and_proof</code> topics.</p>\n<p>The <code>beacon_aggregate_and_proofs</code> topic sends hundreds of thousands of <code>message_ids</code> over the wire in a minute, with very few <code>IWANT</code> messages in return. The ratio of sent <code>IHAVE</code> <code>msgIDs</code> to the received <code>IWANT msgIDs</code> stays around 10 times bigger.</p>\n<h2><a name=\"overall-results-received-ihave-vs-sent-iwant-4\" class=\"anchor\" href=\"https://ethresear.ch#overall-results-received-ihave-vs-sent-iwant-4\"></a>Overall Results - Received IHAVE vs Sent IWANT</h2>\n<p>The situation is even more extreme for the case of Received <code>IHAVE</code> vs Sent <code>IWANT</code> messages in terms of overhead. We include below the overall results only, as well as the ratios per topic. We consider that the ratios are even higher here because our node is rather well-connected (keeps connections to 250 peers) and therefore is more likely to be included in the <code>GossipFactor</code> fraction of peers that are chosen to send gossip to (i.e., <code>IHAVEs</code>). This in turn means that we must be receiving lots of duplicate <code>msgIDs</code> in those <code>IHAVE</code> messages. Digging into the number of duplicate messages are subject to a different metric further down in this report.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/8/e8bfe2c7e1e5061cc1e6189027c61cb561e5ebff.png\" data-download-href=\"https://ethresear.ch/uploads/default/e8bfe2c7e1e5061cc1e6189027c61cb561e5ebff\" title=\"gossip_control_msgs_recv_ihave_vs_sent_iwant_messages\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/8/e8bfe2c7e1e5061cc1e6189027c61cb561e5ebff_2_517x309.png\" alt=\"gossip_control_msgs_recv_ihave_vs_sent_iwant_messages\" data-base62-sha1=\"xcZSYvske1XnexqrEXJ6DiGeMeH\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/8/e8bfe2c7e1e5061cc1e6189027c61cb561e5ebff_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/e/8/e8bfe2c7e1e5061cc1e6189027c61cb561e5ebff_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/8/e8bfe2c7e1e5061cc1e6189027c61cb561e5ebff.png 2x\" data-dominant-color=\"F9F9FA\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/7/d7221f99eab26664812e8a7b8a5af32da2457f1a.png\" data-download-href=\"https://ethresear.ch/uploads/default/d7221f99eab26664812e8a7b8a5af32da2457f1a\" title=\"gossip_control_msgs_recv_ihave_vs_sent_iwant_message_ids\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/7/d7221f99eab26664812e8a7b8a5af32da2457f1a_2_517x309.png\" alt=\"gossip_control_msgs_recv_ihave_vs_sent_iwant_message_ids\" data-base62-sha1=\"uH9LrKJX2vCMAuQjSkOn6KnoS5s\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/7/d7221f99eab26664812e8a7b8a5af32da2457f1a_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/d/7/d7221f99eab26664812e8a7b8a5af32da2457f1a_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/d/7/d7221f99eab26664812e8a7b8a5af32da2457f1a.png 2x\" data-dominant-color=\"F5F6F7\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/3/93bb45e0850316dea9fa50186848459a21d1d3bd.png\" data-download-href=\"https://ethresear.ch/uploads/default/93bb45e0850316dea9fa50186848459a21d1d3bd\" title=\"gossip_control_msgs_ration_of_recv_ihave_vs_sent_iwant_message_ids_all_topics\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/3/93bb45e0850316dea9fa50186848459a21d1d3bd_2_517x309.png\" alt=\"gossip_control_msgs_ration_of_recv_ihave_vs_sent_iwant_message_ids_all_topics\" data-base62-sha1=\"l4TpX9YgaXH7AEezMiRQc931Qst\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/3/93bb45e0850316dea9fa50186848459a21d1d3bd_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/9/3/93bb45e0850316dea9fa50186848459a21d1d3bd_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/9/3/93bb45e0850316dea9fa50186848459a21d1d3bd.png 2x\" data-dominant-color=\"F6F3F1\"></a></div><p></p>\n<h2><a name=\"anomalies-5\" class=\"anchor\" href=\"https://ethresear.ch#anomalies-5\"></a>Anomalies</h2>\n<p>Gossipsub messages should always be assigned to a particular topic, as not all peers are subscribed to all topics. Having a topic helps with correctly identifying invalid messages and avoiding overloading of peers with messages they’re not interested in.</p>\n<p>We have consistently seen throughout the duration of the experiment both <code>IHAVE</code> and <code>IWANT</code> messages sent to our node with an empty topic. Both of these are considered anomalies, especially given that the <code>IWANT</code> messages we received were for <code>msgIDs</code> that we didn’t advertise through an <code>IHAVE</code> message earlier.</p>\n<p>Digging deeper into the results, we have seen that 49 out of the 55 peers that we received messages with an empty topic were Teku nodes. We have started the following Github issue to surface the anomaly: <a href=\"https://github.com/libp2p/jvm-libp2p/issues/361\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Possible Bug on GossipSub implementation that makes sharing `IHAVE` control messages with empty topics · Issue #361 · libp2p/jvm-libp2p · GitHub</a>, which has been fixed: <a href=\"https://github.com/libp2p/jvm-libp2p/pull/365\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Set topicID on outbound IHAVE and ignore inbound IHAVE for unknown topic by StefanBratanov · Pull Request #365 · libp2p/jvm-libp2p · GitHub</a>.</p>\n<h2><a name=\"takeaways-6\" class=\"anchor\" href=\"https://ethresear.ch#takeaways-6\"></a>Takeaways</h2>\n<ul>\n<li>The average effectiveness ratio of the gossip functionality is higher than 1:10 across topics, which is not ideal.</li>\n<li>Messages that are generated less frequently (such as <code>beacon_block</code> topic messages) are primarily propagated through the mesh and less through gossip (<code>IHAVE/IWANT</code> messages), hence the higher ratios, which reach up to 1:100 for this particular topic.</li>\n<li>GossipSub control messages are relevant, but we identify two different use-cases for GossipSub that don’t benefit in the same way from all these control messages:\n<ul>\n<li>Big but less frequent messages → more prone to <code>DUPLICATED</code> messages, but with less overhead on the <code>IHAVE</code> control side. The gossiping effectiveness is rather small here.</li>\n<li>Small but very frequent messages → add significant overhead on the bandwidth usage as many more <code>msg_ids</code> are added in each <code>IHAVE</code> message.</li>\n</ul>\n</li>\n</ul>\n<h2><a name=\"optimisation-potential-7\" class=\"anchor\" href=\"https://ethresear.ch#optimisation-potential-7\"></a>Optimisation Potential</h2>\n<p>Clearly, having an effectiveness ratio of 1:10 or even less, i.e., consuming &gt;10x more bandwidth for <code>IHAVE/IWANT</code> messages than actually needed, is not ideal. Three directions for improvement have been identified, although none of them has been implemented, tested, or simulated.</p>\n<ol>\n<li>Bloom filters: instead of sending <code>msgIDs</code> in <code>IHAVE/IWANT</code> messages, peers can send a bloom filter of the messages that they have received within the “message window history”.</li>\n<li>Adjust <code>GossipsubHistoryGossip</code> factor from 3 to 2: This requires some more testing, but it’s a straightforward item to consider. This parameter, set to 3 by default [<a href=\"https://github.com/libp2p/go-libp2p-pubsub/blob/048a4d30d0c3c00829181fd81aa697eb60497448/gossipsub.go#L39\" rel=\"noopener nofollow ugc\">link</a>], defines for how many heartbeats do we send <code>IHAVE</code> messages for. Sending messages for 3 heartbeats ago obviously increases the number of messages with questionable return (i.e., how many <code>IWANT</code> messages do we receive in return).</li>\n<li>Adaptive <code>GossipFactor</code> per topic: As per the original go implementation of Gossipsub [<a href=\"https://github.com/libp2p/go-libp2p-pubsub/blob/048a4d30d0c3c00829181fd81aa697eb60497448/gossipsub.go#L115\" rel=\"noopener nofollow ugc\">link</a>], the <code>GossipFactor</code> affects how many peers we will emit gossip to at each heartbeat. The protocol sends gossip to <code>GossipFactor * (total number of non-mesh peers)</code>. Making this a parameter that is adaptive to the ratio of Sent <code>IHAVE</code> vs Received <code>IWANT</code> messages per topic can greatly reduce the overhead seen.\n<ol>\n<li>Nodes sharing lots of <code>IHAVE</code> messages with very few <code>IWANT</code> messages in return could reduce the factor (saving bandwidth).</li>\n<li>Nodes receiving a significant amount of <code>IWANT</code> messages through gossip could actually increase the <code>GossipFactor</code> accordingly to help out the rest of the network.</li>\n<li>There is further adjustments that can be made if a node detects that a big part of its messages come from <code>IWANT</code> messages that it sends. These could revolve around increasing the mesh size <code>D</code>, or rotating the peers it has in its mesh.</li>\n</ol>\n</li>\n</ol>\n<p>For more details and results on Ethereum’s network head over to <a href=\"https://probelab.io\" rel=\"noopener nofollow ugc\">https://probelab.io</a>.</p>\n            <p><small>4 posts - 3 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/gossip-iwant-ihave-effectiveness-in-ethereums-gossipsusb-network/19686\">Read full topic</a></p>","link":"https://ethresear.ch/t/gossip-iwant-ihave-effectiveness-in-ethereums-gossipsusb-network/19686","pubDate":"Thu, 30 May 2024 06:21:28 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19686"},"source":{"@url":"https://ethresear.ch/t/gossip-iwant-ihave-effectiveness-in-ethereums-gossipsusb-network/19686.rss","#text":"Gossip IWANT/IHAVE Effectiveness in Ethereum's Gossipsusb network"}}]}}}