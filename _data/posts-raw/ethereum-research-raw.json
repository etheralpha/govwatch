{"rss":{"@version":"2.0","@xmlns:discourse":"http://www.discourse.org/","@xmlns:atom":"http://www.w3.org/2005/Atom","@xmlns:dc":"http://purl.org/dc/elements/1.1/","channel":{"title":"Ethereum Research - Latest topics","link":"https://ethresear.ch/latest","description":"Latest topics","lastBuildDate":"Thu, 04 Jul 2024 20:41:05 +0000","atom:link":{"@href":"https://ethresear.ch/latest.rss","@rel":"self","@type":"application/rss+xml"},"item":[{"title":"Leaderless and Leader-Based Preconfirmations","dc:creator":"chrmatt","category":"Economics","description":"<p><em>Joint work with <a class=\"mention\" href=\"https://ethresear.ch/u/murat\">@murat</a>. Thanks to <a class=\"mention\" href=\"https://ethresear.ch/u/the-ctra1n\">@The-CTra1n</a> and <a class=\"mention\" href=\"https://ethresear.ch/u/bemagri\">@bemagri</a> for reviewing and providing valuable feedback.</em></p>\n<h1><a name=\"introduction-1\" class=\"anchor\" href=\"https://ethresear.ch#introduction-1\"></a>Introduction</h1>\n<p>A preconfirmation (preconf) for the context of this article refers to a promise about a given set of transactions relative to a future block, e.g., execution of a transaction in the next block or placing transactions at the top of the block. Entities who want to obtain a preconf can bid a certain amount indicating how much they are willing to pay for a preconf.</p>\n<p>One dimension in which preconfs can be distinguished is whether there exists a unique preconf provider for every L1 block (a preconf leader), or whether there can be multiple competing preconf providers for every L1 block, without a leader. We here discuss the two approaches, their respective advantages and disadvantages, and how they can be combined. A particularly promising approach for combining the two concepts to obtain the best of both worlds appears to be using “sourcing leaders”, which are operating in a leaderless setting and collect preconfs from competing preconf providers.</p>\n<h1><a name=\"overview-and-definitions-2\" class=\"anchor\" href=\"https://ethresear.ch#overview-and-definitions-2\"></a>Overview and Definitions</h1>\n<h2><a name=\"leader-based-preconfs-3\" class=\"anchor\" href=\"https://ethresear.ch#leader-based-preconfs-3\"></a>Leader-Based Preconfs</h2>\n<p>The simplest form of preconfs are ones issued by an appointed leader. This leader must have the authority to issue preconfs and have some means to enforce them. It is not necessary to have a single leader overall, as long as there is a unique, predetermined, and publicly known leader at each point in time. A straightforward way to choose leaders is using the current L1 proposer, as, e.g., in <a href=\"https://github.com/Commit-Boost/commit-boost-client\" rel=\"noopener nofollow ugc\">commit-boost</a>. More sophisticated leader-election methods are discussed below, and can be employed by <a href=\"https://docs.primev.xyz/concepts/what-is-mev-commit\" rel=\"noopener nofollow ugc\">mev-commit</a>.</p>\n<h2><a name=\"leaderless-preconfs-4\" class=\"anchor\" href=\"https://ethresear.ch#leaderless-preconfs-4\"></a>Leaderless Preconfs</h2>\n<p>An alternative to leader-based preconfs is to have multiple preconf providers simultaneously. The most natural instantiation of this is to have the block builders act as preconf providers, leveraging the strengths of the existing mev-boost landscape. This mechanism is <a href=\"https://docs.primev.xyz/concepts/what-is-mev-commit\" rel=\"noopener nofollow ugc\">used by mev-commit</a>. In this case, a single preconf provider cannot provide an authoritative preconf; in case the block builders are preconf providers, a single builder can only promise to honor the preconf for the blocks this block builder builds.</p>\n<p>A preconf from a single block builder thus constitutes a probabilistic preconf in the sense that the preconf is conditioned on the issuing block builder winning the corresponding block. This can already be useful, e.g., for arbitrage searchers. A proper preconf with a 100% guarantee is obtained if all block builders preconfirm. A subtlety of this is that the set of all possible block builders must be known, which is not the case in a permissionless setting. This is solved by mev-commit by letting <a href=\"https://docs.primev.xyz/get-started/providers/registering-a-provider\" rel=\"noopener nofollow ugc\">block builders register</a> as providers and <a href=\"https://docs.primev.xyz/get-started/validators\" rel=\"noopener nofollow ugc\">proposers and relays opt-in</a> to only deliver blocks from registered block builders. Analyzing the game-theoretic interplay between bidders and multiple preconf providers is an interesting open problem.</p>\n<h1><a name=\"comparison-5\" class=\"anchor\" href=\"https://ethresear.ch#comparison-5\"></a>Comparison</h1>\n<p>Both approaches have their advantages and disadvantages, which we discuss below.</p>\n<h2><a name=\"advantages-of-leader-based-preconfs-6\" class=\"anchor\" href=\"https://ethresear.ch#advantages-of-leader-based-preconfs-6\"></a>Advantages of Leader-Based Preconfs</h2>\n<p>The most obvious advantage of leader-based preconfs is that a single preconf already constitutes almost a 100% guarantee (almost because the slot may be missed or the chain reorged). This simplifies the protocol interaction and also possibly provides faster feedback. Note that reorg risks are the same for all types of preconfs, so we do not discuss them further here.</p>\n<h2><a name=\"advantages-of-leaderless-preconfs-7\" class=\"anchor\" href=\"https://ethresear.ch#advantages-of-leaderless-preconfs-7\"></a>Advantages of Leaderless Preconfs</h2>\n<p>Having multiple simultaneous preconf providers creates a competitive environment, allowing for efficient preconf price discovery and thereby optimizing validator yield. A single provider having a preconf monopoly, on the other hand, can dictate the prices arbitrarily.</p>\n<p>Further advantages come from letting the block builders be the preconf providers. First, block builders have sufficient sophistication to properly price preconfs. Secondly, builders are building the blocks and thus are the only entities that can issue preconfs without interfering with block production and adding latency: If another party issues a preconf, it must be communicated to the block builders such that they can build compatible blocks, and failure to receive the preconf in time leads to the block builder building a block violating the preconf. This also means that there is some delay between issuing the preconf and the builders learning about it in a leader based approach, which is particularly problematic towards the end of a slot, where builders may learn too late about the preconf. This also creates an advantage for block builders with fast connections to the preconf leaders, potentially leading to further centralization. Furthermore, receiving a preconf from a separate entity interferes with the block building strategy of the builders and thus can potentially lead to substantially less valuable blocks. Finally, leaderless preconfs can be integrated more easily into the existing mev-boost infrastructure.</p>\n<h1><a name=\"leader-election-8\" class=\"anchor\" href=\"https://ethresear.ch#leader-election-8\"></a>Leader Election</h1>\n<p>As mentioned above, the simplest way to elect a preconf leader is to choose the current L1 proposer. This, however, requires additional sophistication from the proposer and likely leads to economic inefficiencies. It is therefore likely that proposers want to outsource preconfs similarly to how proposers outsource block building in PBS, even though this might raise concerns such as increased complexity due to additional actors, and potentially more centralization. A crucial difference from PBS is that preconf leaders need to be chosen in advance, i.e., before preconf bids are available. Thus, when the right to become a preconf leader is auctioned off, the potential leaders need to place their bids in the leader election without knowing the value they can derive from becoming a leader. This means their bids can only be based on expected values rather than actual amounts as in PBS, similarly to <a href=\"https://ethresear.ch/t/execution-tickets/17944\">execution tickets</a>. A notable exemption to this are scenarios in which preconfs are not time critical such as preconfs for blob inclusion bids. In this case, the auction can be run after all preconf bids have been issued and thus the auction can be based on the actual value instead of the expected one (cf. <a href=\"https://ethresear.ch/t/blob-preconfirmations-with-inclusion-lists-to-mitigate-blob-contention-and-censorship/19150\">Ethereum Research - Blob Preconfirmations with Inclusion Lists to Mitigate Blob Contention and Censorship</a>).</p>\n<p>One concern with an expected-value-based auction is that this value likely remains relatively stable over time and thus a possible scenario is that a single entity that is very good at pricing wins an overwhelming fraction of the auctions, leading to centralization and a preconf monopoly (cf. <a href=\"https://collective.flashbots.net/t/when-to-sell-your-blocks/2814/1\" rel=\"noopener nofollow ugc\">The Flashbots Collective - When To Sell Your Blocks</a>). A possible mitigation to this problem is to instead of running an auction, sell lottery tickets and choose the leader randomly as the holder of the winning ticket. This is akin to a similar mechanism recently proposed by <a href=\"https://hackmd.io/@EspressoSystems/market-design\" rel=\"noopener nofollow ugc\">Espresso Systems in a related context</a>. Further research is required to determine an optimal pricing structure for such lotteries.</p>\n<h1><a name=\"combining-leaderless-and-leader-based-preconfs-9\" class=\"anchor\" href=\"https://ethresear.ch#combining-leaderless-and-leader-based-preconfs-9\"></a>Combining Leaderless and Leader-Based Preconfs</h1>\n<p>To obtain the best of both worlds, one can combine a leaderless with a leader-based approach. We discuss some options how to achieve this below.</p>\n<h2><a name=\"simultaneous-leaders-and-leaderless-providers-10\" class=\"anchor\" href=\"https://ethresear.ch#simultaneous-leaders-and-leaderless-providers-10\"></a>Simultaneous Leaders and Leaderless Providers</h2>\n<p>One option to combine leaderless and leader-based preconfs is to have a dedicated preconf leader, but let this leader operate simultaneously with multiple non-leader preconf providers. We assume below that the non-leader providers are block builders. In such a scheme, both the leader and the builders can issue preconfs at any point in time. When the leader issues a preconf, it must be communicated to the block builders, who then need to honor them when building their blocks. At this point, block builders cannot commit to the already committed bid anymore (since such commitment would not add any value). On the other hand, if a builder issues a preconf first, the leader can still commit to the same bid, turning the preconf from the builder into a 100% guaranteed preconf.</p>\n<p>While this approach might appear conceptually simple, it comes with several challenges. One issue is that it is probably very hard, if not impossible, for the leader to issue execution preconfs that are compatible with execution preconfs of the block builders. This approach might therefore be limited to inclusion preconfs. Another issue is the timing of preconfs: For the mechanism to work, a total order among preconfs needs to be established, since a builder should only be rewarded for a preconf on a bid that also been committed to by the leader if the builder committed first. This total order can be established by a dedicated side-chain, such as the mev-commit chain. Nevertheless, there is room for leaders to play games with the competing builders by delaying their preconfs or trying to frontrun the builders. Yet another difficulty of this approach are the more complex incentives. Who should be paid how much in case multiple preconfs are issued? Developing a fair mechanism that leads to good preconf prices requires further research.</p>\n<h2><a name=\"sourcing-leaders-11\" class=\"anchor\" href=\"https://ethresear.ch#sourcing-leaders-11\"></a>Sourcing Leaders</h2>\n<p>An alternative is to have leaders that themselves have no authority to enforce preconfs. Instead, the leaders receive bids from end users and subsequently try to obtain preconfs from the preconf providers. We call such leaders “sourcing leaders”. Once the sourcing leader has obtained preconfs from all providers, they issue a preconf to the end user. A sourcing leader is not strictly speaking a leader as defined above, but can provide the same advantage of a leader, namely issuing preconfs that themselves provide a 100% guarantee to the end user.</p>\n<p>The role of a sourcing leader can be taken on by sophisticated actors such as solvers. A sourcing leader can in this case also offer preconfs before all providers have issued one and charge a premium to take on the risk that the preconf is violated. It is furthermore possible to have multiple competing sourcing leaders that offer preconfs with different prices at different speeds, where users can choose the best one for their purposes.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/d/1df247e0731521b812fdecf14287017b6e1a772b.png\" data-download-href=\"https://ethresear.ch/uploads/default/1df247e0731521b812fdecf14287017b6e1a772b\" title=\"Sourcing Leader\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/d/1df247e0731521b812fdecf14287017b6e1a772b_2_690x219.png\" alt=\"Sourcing Leader\" data-base62-sha1=\"4gUVHYGaEyvc0pfRNT49WM5vDdh\" width=\"690\" height=\"219\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/d/1df247e0731521b812fdecf14287017b6e1a772b_2_690x219.png, https://ethresear.ch/uploads/default/optimized/3X/1/d/1df247e0731521b812fdecf14287017b6e1a772b_2_1035x328.png 1.5x, https://ethresear.ch/uploads/default/original/3X/1/d/1df247e0731521b812fdecf14287017b6e1a772b.png 2x\" data-dominant-color=\"F6F7F3\"></a></div><br>\n<strong>Figure 1:</strong> Illustration of the interaction between an end user, a sourcing leader running a bidder node, and three preconf providers.<p></p>\n<h1><a name=\"conclusion-and-open-problems-12\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-and-open-problems-12\"></a>Conclusion and Open Problems</h1>\n<p>Both leader-based and leaderless preconfs offer unique advantages and challenges. Leader-based preconfs offer a 100% guarantee (ignoring missed slots and reorgs) with a single preconfirmation, whereas leaderless ones create a competitive environment, enabling efficient price discovery, and potentially leading to more valuable blocks. Different methods for leader election also have their own trade-offs, with options ranging from auctions to lotteries.</p>\n<p>Combining leaderless and leader-based preconfs can provide the benefits of both systems. One approach is to have a dedicated preconf leader operating alongside non-leader providers. Another approach is to use sourcing leaders who have no enforcement authority themselves, but attempt to obtain preconfs from providers. Both approaches allow for a high degree of competition, but also pose additional challenges.</p>\n<p>There are still several unresolved research problems uncovered in this article. One of them is to analyze the game-theoretic interplay between bidders and multiple preconf providers in a leaderless preconf system. For a leader-based approach, relevant open problems are determining an optimal pricing structure for preconf leader lotteries to mitigate the risk of centralization and a preconf monopoly, and how to integrate with the existing mev-boost infrastructure. For combining leaderless and leader-based preconfs, designing fair mechanisms for the interaction between both types of preconf providers is left for future research. Finally, an important open question is how the approach with a sourcing leader compares to the others in terms of obtaining fair prices.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/leaderless-and-leader-based-preconfirmations/19971\">Read full topic</a></p>","link":"https://ethresear.ch/t/leaderless-and-leader-based-preconfirmations/19971","pubDate":"Thu, 04 Jul 2024 20:41:05 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19971"},"source":{"@url":"https://ethresear.ch/t/leaderless-and-leader-based-preconfirmations/19971.rss","#text":"Leaderless and Leader-Based Preconfirmations"}},{"title":"Execution Consensus Separation","dc:creator":"MaxResnick","category":"Economics","description":"<h2><a name=\"execution-consensus-separation-1\" class=\"anchor\" href=\"https://ethresear.ch#execution-consensus-separation-1\"></a>Execution Consensus Separation</h2>\n<p><strong></strong></p><div class=\"lightbox-wrapper\"><strong><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/b/4b9eb4b7bcec14c8b9a8aee948a332d9d48013e4.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/4b9eb4b7bcec14c8b9a8aee948a332d9d48013e4\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/b/4b9eb4b7bcec14c8b9a8aee948a332d9d48013e4_2_500x500.jpeg\" alt=\"\" data-base62-sha1=\"aMXPQe8Rfupqg6eipS7beY3dGAY\" width=\"500\" height=\"500\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/b/4b9eb4b7bcec14c8b9a8aee948a332d9d48013e4_2_500x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/4/b/4b9eb4b7bcec14c8b9a8aee948a332d9d48013e4_2_750x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/b/4b9eb4b7bcec14c8b9a8aee948a332d9d48013e4_2_1000x1000.jpeg 2x\" data-dominant-color=\"C3BBA4\"></a></strong></div><br>\nMEV is fundamentally about control. The proposer has control of which transactions make it into blocks and which order they appear in. In other words MEV is all about censorship and reordering. All of the goals on the Ethereum roadmap related to MEV are therefore impossible without fixing these things. The good news is that fixing these things is possible, the bad news is that the solution requires us to work together to study and prove the security of some meaningful upgrades to both consensus and execution.<p></p>\n<p>Current work on the <a href=\"https://x.com/VitalikButerin/status/1741190491578810445\" rel=\"noopener nofollow ugc\">“Scourge” section</a> of the <a href=\"https://ethereum.org/en/roadmap/\" rel=\"noopener nofollow ugc\">Ethereum roadmap</a> has been siloed. People work on individual problems and sometimes lose the broader scope of what we are ultimately trying to achieve. <a href=\"https://ethresear.ch/t/epbs-design-constraints/18728\">ePBS</a>, <a href=\"https://ethereum-magicians.org/t/eip-7547-inclusion-lists/17474\" rel=\"noopener nofollow ugc\">Inclusion Lists</a>, <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590\">MEV Burn</a>, <a href=\"https://github.com/flashbots/mev-boost/issues/139\" rel=\"noopener nofollow ugc\">Distributed Block Building</a>, and <a href=\"https://x.com/VitalikButerin/status/1741190491578810445\" rel=\"noopener nofollow ugc\">Application-layer MEV minimization</a>, are examples of ideas that require censorship resistance and control over ordering, but we haven’t yet addressed the pre-requisites. Solving these allows us to kill 5 birds with 1 stone. But to do this we need to think from first principles and work on the underlying root causes rather than tinkering with a thin veneer on top of the protocol.</p>\n<p>Solving MEV at the protocol level requires buy in from all three levels of the chain:</p>\n<ol>\n<li><strong>Consensus Layer:</strong> Multiple concurrent proposers.</li>\n<li><strong>Execution Layer:</strong> Delayed execution and deterministic scheduling rules.</li>\n<li><strong>Application Layer:</strong> Order-agnostic applications.</li>\n</ol>\n<h2><a name=\"consensus-layer-2\" class=\"anchor\" href=\"https://ethresear.ch#consensus-layer-2\"></a>Consensus layer</h2>\n<p>We cannot get anywhere without vastly improved censorship resistance at the consensus layer. This is what allows us to hold auctions and prevent censorship of competing bids. The root cause of Ethereum’s weak censorship resistance is the fact that only a single entity can include transactions during each 12 second slot. <strong>Multiple concurrent proposers (MCP)</strong> fixes this problem. Instead of coming to consensus on an ordered block of transactions from a single block proposer, each of the K proposers propose a set of transactions at the same time. The protocol then aggregates these proposals using a <strong>common subset</strong> primitive (or a similar algorithm, this is an active area of research), yielding an unordered set of transactions which are to be included in the block.</p>\n<p>MCP solves the problem of censorship-resistant inclusion, achieving the goals of <a href=\"https://ethereum-magicians.org/t/eip-7547-inclusion-lists/17474\" rel=\"noopener nofollow ugc\">Inclusion Lists</a> in a more natural way. The output is an unordered set of transactions, so it does not solve the problem of reordering. That will be the responsibility of the execution layer.</p>\n<p>MCP is an area of active study and we encourage people to get involved. See SMG <a href=\"https://mechanism.org/spec/01\" rel=\"noopener nofollow ugc\">SPEC-01</a> for a theoretical description of MCP. Work is currently underway at SMG to formally specify MCP and create a proposed implementation of a gadget for use in the Ethereum protocol. Contact us if you are interested in working on this.</p>\n<h2><a name=\"execution-layer-3\" class=\"anchor\" href=\"https://ethresear.ch#execution-layer-3\"></a>Execution layer</h2>\n<p>Ethereum’s execution layer must be upgraded to solve the problem of transaction reordering. To do this, we must delay the calculation of the state root to the next block so that the execution layer has time to implement a deterministic ordering rule.</p>\n<p>Once it has the transactions, the execution layer has a new important job: figuring out how to order them. To do this, we need to select a <strong>deterministic scheduling rule</strong>. This is an area of active study where we encourage people to get involved. There are many promising candidates: <a href=\"https://www.paradigm.xyz/2024/06/priority-is-all-you-need\" rel=\"noopener nofollow ugc\">priority fee ordering</a>, as-needed execution, and <a href=\"https://github.com/flashbots/mev-boost/issues/139\" rel=\"noopener nofollow ugc\">distributed block building</a>. We will elaborate on the last two in an upcoming article.</p>\n<p>With delayed execution and a deterministic scheduling rule, Ethereum’s execution layer will determine the order of transactions in a block, allowing it to achieve the same goals as <a href=\"https://github.com/flashbots/mev-boost/issues/139\" rel=\"noopener nofollow ugc\">distributed block building</a> and <a href=\"https://ethresear.ch/t/epbs-design-constraints/18728\">ePBS</a> in a more natural way. In addition, since the ordering is enforced by the logic of the protocol, not by the goodwill of any particular validator, the protocol can burn all the fees at this stage, achieving the goals of <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590\">MEV Burn</a>.</p>\n<h2><a name=\"application-layer-4\" class=\"anchor\" href=\"https://ethresear.ch#application-layer-4\"></a>Application layer</h2>\n<p>Assuming we succeed in the above upgrades, Ethereum’s application layer will be free to upgrade their applications to be natively MEV-resistant while remaining totally onchain. We call the class of things they will do <strong>order-agnostic applications</strong> or order-agnostic mechanisms.</p>\n<p>For example take the problem of liquidation MEV. For the sake of argument, suppose we have 1000 ETH that needs to be liquidated for DAI. We don’t know what the appropriate price is for the ETH, so we have two options: we can guess the right price and have a posted price available to the first person who claims it, which is how Compound and Aave work, and leads to tremendous value leaked to liquidation races, reducing UX. Or, we can hold a Dutch auction, which leads to slightly less value leakage, but doesn’t allow us to clear the distressed debt right away. But now, with MCP and deterministic scheduling, these protocols can simply hold an onchain auction for the right to liquidate 1000 ETH and elicit the price that way.</p>\n<p>Order agnostic application design has a number of benefits, and there are many more examples of places where MEV leaks that can be solved. Future posts will elaborate on this.</p>\n<h2><a name=\"conclusion-5\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-5\"></a>Conclusion</h2>\n<p>The successful implementation of these upgrades will result in a much friendlier Ethereum for both developers and users. The first step of this research program is fleshing out and proving the security of a multi proposer design with simultaneous release. Other blockchains have multiple proposers, but are not designed in the same way or for the same purpose. If you are a consensus researcher interested in working on this topic, please reach out, we have funding available for this.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/execution-consensus-separation/19964\">Read full topic</a></p>","link":"https://ethresear.ch/t/execution-consensus-separation/19964","pubDate":"Wed, 03 Jul 2024 19:09:20 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19964"},"source":{"@url":"https://ethresear.ch/t/execution-consensus-separation/19964.rss","#text":"Execution Consensus Separation"}},{"title":"Fork Choice compliance test suites & test generator","dc:creator":"ericsson49","category":"Consensus","description":"<p>This is a preliminary announcement, we’ll officially announce during the next All Core Devs call.</p>\n<p>We (TxRx team, ConsenSys) have implemented a Fork Choice compliance test generator as well as have generated Fork Choice compliance test suites.</p>\n<p>Overall F/C compliance testing methodology is described <a href=\"https://hackmd.io/@ericsson49/fork-choice-implementation-vs-spec-testing\" rel=\"noopener nofollow ugc\">here</a>.</p>\n<p>In this report we briefly describe the results of the initial implementation phase (i.e. the F/C test generator and F/C test suites).  A more detailed description of the work is TBD.</p>\n<p>This work was supported by a grant from the Ethereum Foundation.</p>\n<h1><a name=\"implementation-status-1\" class=\"anchor\" href=\"https://ethresear.ch#implementation-status-1\"></a>Implementation status</h1>\n<h2><a name=\"test-generator-2\" class=\"anchor\" href=\"https://ethresear.ch#test-generator-2\"></a>Test generator</h2>\n<p>The initial version of the Fork Choice tests generator is implemented and currently available as a draft <a href=\"https://github.com/ethereum/consensus-specs/pull/3831\" rel=\"noopener nofollow ugc\">consensus-specs PR</a>. We have been focusing on minimizing efforts for client implementer teams to adopt the generated tests. The only a small change to the existing <a href=\"https://github.com/ethereum/consensus-specs/tree/dev/tests/formats/fork_choice\" rel=\"noopener nofollow ugc\">FC test format</a> is the addition of a <a href=\"https://github.com/ericsson49/eth2.0-specs/tree/fc-compliance2/tests/formats/fork_choice#checks-step\" rel=\"noopener nofollow ugc\">new check</a>, which is safe to ignore initially.</p>\n<h2><a name=\"test-suites-3\" class=\"anchor\" href=\"https://ethresear.ch#test-suites-3\"></a>Test suites</h2>\n<p>We have developed test generation parameters for three suites at the moment.</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Test suite</th>\n<th>size</th>\n<th>Purpose</th>\n<th>Status</th>\n<th>Link</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Tiny</td>\n<td>135 tests</td>\n<td>Demonstration, smoke testing</td>\n<td>Done</td>\n<td><a href=\"https://drive.google.com/file/d/1dWbkJY27fhOVX8i4aUuZ7VBkH3P_Vr1i/view?usp=drive_link\" rel=\"noopener nofollow ugc\">link</a></td>\n</tr>\n<tr>\n<td>Small</td>\n<td>1472 tests</td>\n<td>Initial adoption, smoke testing</td>\n<td>Done</td>\n<td><a href=\"https://drive.google.com/file/d/1EAIeTL5F3zelXK5pBkSLuawJjuLWQx3r/view?usp=drive_link\" rel=\"noopener nofollow ugc\">link</a></td>\n</tr>\n<tr>\n<td>Standard</td>\n<td>13240 tests</td>\n<td>Main testing</td>\n<td>Done</td>\n<td><a href=\"https://drive.google.com/file/d/1_56JObwYWHARgm5QYmE4vrkcLEru854G/view?usp=drive_link\" rel=\"noopener nofollow ugc\">link</a></td>\n</tr>\n<tr>\n<td>Extended</td>\n<td>about 100K tests</td>\n<td>Extended testing</td>\n<td>TBD</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</div><p><strong>Note</strong>: We are able to generate the Extended test suite. However, it will take significant time (about a week), therefore, we have delayed actual test suite generation until it will be demanded.</p>\n<p>It should be possible to generate test suites for any fork (Altair, Capella, Deneb) and preset (mainnet or minimal). However, test generation for mainnet is very slow. We have tested minimal/altair and minimal/deneb.</p>\n<p>Test generation currently is slow (about 10-15 seconds per test on average). However, a multiprocessing mode is supported (about 2 seconds per test on Apple M1). Generation of the Standard test suite takes about 8 hours (multiprocessing mode) or two days (single process mode).</p>\n<p>The reasons of slow performance are known and are to be alleviated in future. Currently, our top priority is to simplify adoption of the new test suites.</p>\n<h2><a name=\"testing-the-tests-4\" class=\"anchor\" href=\"https://ethresear.ch#testing-the-tests-4\"></a>Testing the tests</h2>\n<p>We have run the generated tests against <a href=\"https://github.com/Consensys/teku\" rel=\"noopener nofollow ugc\">Teku</a>, using Teku test runner and against the official executable Fork Choice spec (minimal/deneb), using a simple Python <a href=\"https://github.com/ericsson49/eth2.0-specs/blob/4a0745bd7c0ec6d6a216a8baf81bcb80c30ccaa3/tests/generators/fork_choice_generated/test_run.py\" rel=\"noopener nofollow ugc\">test runner</a>.</p>\n<h1><a name=\"test-generation-approach-5\" class=\"anchor\" href=\"https://ethresear.ch#test-generation-approach-5\"></a>Test generation approach</h1>\n<p>The test generation approach is a mix of model-based and fuzz testing.</p>\n<p>Principles:</p>\n<ul>\n<li>the Fork Choice spec is virtually “decomposed” into two parts: topological sorting of events and actual event processing</li>\n<li>tests are generated for the event processing part, the topological sorting part is addressed via event shuffling (time shift plus drop/duplication)</li>\n<li>models are used to describe the spec aspects that we want to cover. There are two flavors: trees of various shapes (for block trees and super-majority link trees) and predicates to be covered (<code>filter_block_tree</code>)</li>\n<li>for each model there can be multiple solutions, each solution can be seen as a template (e.g. SM link tree + block tree) which can be instantiated in multiple ways (varying validator actions)</li>\n<li>each test case can be mutated multiple times</li>\n</ul>\n<p>Tests are generated with four steps:</p>\n<ol>\n<li>Models (implemented using MiniZinc), describing abstract coverage aspects that we want to cover. Currently there are three models: <a href=\"https://github.com/ericsson49/eth2.0-specs/blob/4a0745bd7c0ec6d6a216a8baf81bcb80c30ccaa3/tests/generators/fork_choice_generated/model/minizinc/SM_links.mzn\" rel=\"noopener nofollow ugc\">SM link</a> (super-majority link) tree model, <a href=\"https://github.com/ericsson49/eth2.0-specs/blob/4a0745bd7c0ec6d6a216a8baf81bcb80c30ccaa3/tests/generators/fork_choice_generated/model/minizinc/Block_tree.mzn\" rel=\"noopener nofollow ugc\">Block tree</a> model and <a href=\"https://github.com/ericsson49/eth2.0-specs/blob/4a0745bd7c0ec6d6a216a8baf81bcb80c30ccaa3/tests/generators/fork_choice_generated/model/minizinc/Block_cover3.mzn\" rel=\"noopener nofollow ugc\">Block cover</a> model.</li>\n<li>For each model a set of solutions is produced. The models are parameterized, which affects the size of solution set generated.\n<ul>\n<li>SM link and block tree solutions are combined into a single block tree.</li>\n</ul>\n</li>\n<li>Each solution is instantiated using two test instantiators (<a href=\"https://github.com/ericsson49/eth2.0-specs/blob/4a0745bd7c0ec6d6a216a8baf81bcb80c30ccaa3/tests/generators/fork_choice_generated/instantiators/block_tree.py\" rel=\"noopener nofollow ugc\">block tree</a> and <a href=\"https://github.com/ericsson49/eth2.0-specs/blob/4a0745bd7c0ec6d6a216a8baf81bcb80c30ccaa3/tests/generators/fork_choice_generated/instantiators/block_cover.py\" rel=\"noopener nofollow ugc\">block cover</a>). The instantiation is randomized, i.e. a coin is flipped on each decision point. This results in a complete Fork Choice test case (i.e. <em>anchor state</em> plus a sequence of <em>tick</em> | <em>block</em> | <em>attestation</em> | <em>attester_slashing</em> events).</li>\n<li>Each test case is mutated via <a href=\"https://github.com/ericsson49/eth2.0-specs/blob/4a0745bd7c0ec6d6a216a8baf81bcb80c30ccaa3/tests/generators/fork_choice_generated/instantiators/mutation_operators.py\" rel=\"noopener nofollow ugc\">mutation</a> (shuffling) operators. Currently, there are thee mutation operator: time shift, drop and duplicate (with consequent shifting).</li>\n</ol>\n<p>The models are developed manually.<br>\nSolutions to the models are produced with a special <a href=\"https://github.com/ericsson49/eth2.0-specs/blob/4a0745bd7c0ec6d6a216a8baf81bcb80c30ccaa3/tests/generators/fork_choice_generated/generate_test_instances.py\" rel=\"noopener nofollow ugc\">generator</a>.<br>\nTest instantiators and mutations are performed with <a href=\"https://github.com/ericsson49/eth2.0-specs/blob/4a0745bd7c0ec6d6a216a8baf81bcb80c30ccaa3/tests/generators/fork_choice_generated/test_gen.py\" rel=\"noopener nofollow ugc\">test_gen.py</a>.</p>\n<p>After tests are generated, one can validate the produced test steps using <a href=\"https://github.com/ericsson49/eth2.0-specs/blob/4a0745bd7c0ec6d6a216a8baf81bcb80c30ccaa3/tests/generators/fork_choice_generated/test_run.py\" rel=\"noopener nofollow ugc\">test_run.py</a> script, which executes the steps using the pyspecs, performing prescribed checks.</p>\n<h1><a name=\"test-structure-6\" class=\"anchor\" href=\"https://ethresear.ch#test-structure-6\"></a>Test structure</h1>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Test group</th>\n<th>size (standard suite)</th>\n<th>parameters (solutions + variations + mutations)</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Block tree</td>\n<td>4096 tests</td>\n<td>1024*2*(1+1)</td>\n<td>focus on trees of varying shapes</td>\n</tr>\n<tr>\n<td>Block weight</td>\n<td>2048 tests</td>\n<td>8*64*(1+3)</td>\n<td>focus on producing block trees with varying weights</td>\n</tr>\n<tr>\n<td>Shuffling</td>\n<td>2048 tests</td>\n<td>8*4*(1+63)</td>\n<td>focus on shuffling/mutation operators</td>\n</tr>\n<tr>\n<td>Attester slashing</td>\n<td>1024 tests</td>\n<td>8*16*(1+7)</td>\n<td>focus on attester slashing</td>\n</tr>\n<tr>\n<td>Invalid messages</td>\n<td>1024 tests</td>\n<td>8*32*(1+3)</td>\n<td>focus on invalid messages</td>\n</tr>\n<tr>\n<td>Block cover</td>\n<td>3000 tests</td>\n<td>60*5*(1+9)</td>\n<td>cover various combinations of predicates from the <code>filter_block_tree</code> method</td>\n</tr>\n</tbody>\n</table>\n</div><h1><a name=\"future-steps-7\" class=\"anchor\" href=\"https://ethresear.ch#future-steps-7\"></a>Future steps</h1>\n<ul>\n<li>improve performance. Performance is adequate right now (for the initial adoption phase). But is the main blocker otherwise.</li>\n<li>more flexible test generation. More and better models, better instantiators, better mutation operators.</li>\n<li>coverage-guided fuzzing</li>\n<li>new test vector format (don’t need full test cases for fuzz testing, as need to compare against the FC spec anyway)</li>\n</ul>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/fork-choice-compliance-test-suites-test-generator/19954\">Read full topic</a></p>","link":"https://ethresear.ch/t/fork-choice-compliance-test-suites-test-generator/19954","pubDate":"Tue, 02 Jul 2024 20:00:49 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19954"},"source":{"@url":"https://ethresear.ch/t/fork-choice-compliance-test-suites-test-generator/19954.rss","#text":"Fork Choice compliance test suites & test generator"}},{"title":"Ethereum Node Message Propagation Bandwidth Consumption","dc:creator":"yiannisbot","category":"Networking","description":"<h1><a name=\"summary-tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#summary-tldr-1\"></a>Summary &amp; TL;DR</h1>\n<p>The ProbeLab team (<a href=\"https://probelab.io/\" rel=\"noopener nofollow ugc\">probelab.io </a>) is carrying out a study on the performance of Gossipsub in Ethereum’s P2P network. Following from our previous post on the <a href=\"https://ethresear.ch/t/number-duplicate-messages-in-ethereums-gossipsub-network/19921\" class=\"inline-onebox\">Number Duplicate Messages in Ethereum's Gossipsub Network</a>, in this post we investigate bandwidth consumption at the GossipSub level, i.e., bandwidth consumption for message propagation. The target of the study is to identify the protocol components that consume the biggest share of network bandwidth. The study has been co-authored by <a class=\"mention\" href=\"https://ethresear.ch/u/cortze\">@cortze</a> and <a class=\"mention\" href=\"https://ethresear.ch/u/yiannisbot\">@yiannisbot</a>.</p>\n<p>For the purposes of this study, we have built a tool called <strong>Hermes, which acts as a GossipSub listener and tracer</strong> (<a href=\"https://github.com/probe-lab/hermes/\" rel=\"noopener nofollow ugc\">GitHub - probe-lab/hermes: A Gossipsub listener and tracer. </a>). Hermes subscribes to all relevant pubsub topics and traces all protocol interactions. The results reported here are from a 3.5hr trace.</p>\n<p><strong>Study Description:</strong> The distributed nature of p2p systems makes them generally less effective in computational, latency, and bandwidth consumption. This is due to the extra interactions between nodes needed to organize a p2p network without a central authority that bridges between peers. Thus, taking care of processes, such as peer or content discovery, content sharing, and message broadcasting often become a challenge, or bottleneck.</p>\n<p>Ethereum is not different in that respect. Message propagation takes a large portion of the network bandwidth used by a node in the Ethereum network. This study investigates bandwidth consumption at the GossipSub level. The target is to identify the protocol components that consume the biggest share of network bandwidth.</p>\n<p><strong>TL;DR:</strong> Despite the fact that the configuration of our <code>Hermes</code> node, which, in this case, doesn’t represent a standard node in the Ethereum network, the bandwidth consumption numbers of GossipSub validate that there’s plenty of space for optimization.</p>\n<p>We observed that a significant portion of bandwidth is spent on <code>SENT_IHAVE</code> messages (23.4% of the total bandwidth and 30% of the total outgoing bandwidth) and <code>RECV_IHAVE</code> messages (10% of the total bandwidth, and 42% of the total inbound bandwidth).</p>\n<p>More than anything, these findings validate the improvement recommendations made during our previous study on the “Effectiveness of Gossipsub’s gossip mechanism”: <a href=\"https://ethresear.ch/t/gossip-iwant-ihave-effectiveness-in-ethereums-gossipsusb-network/19686\" class=\"inline-onebox\">Gossip IWANT/IHAVE Effectiveness in Ethereum's Gossipsusb network</a></p>\n<p>Taking into account that a node doesn’t only receive duplicated messages but also generates duplicates to others, we strongly recommend pushing the <a href=\"https://github.com/libp2p/specs/pull/560\" rel=\"noopener nofollow ugc\">GossipSub1.2</a> initiative, as it will effectively eliminate the bandwidth wasted on receiving or generating duplicates, which amounts to ~42% of total bandwidth.</p>\n<h1><a name=\"results-on-bandwidth-consumption-2\" class=\"anchor\" href=\"https://ethresear.ch#results-on-bandwidth-consumption-2\"></a>Results on Bandwidth Consumption</h1>\n<blockquote>\n<p><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/eyes.png?v=12\" title=\":eyes:\" class=\"emoji\" alt=\":eyes:\" loading=\"lazy\" width=\"20\" height=\"20\"> NOTES: The bandwidth usage displayed in this study is limited to:</p>\n<ul>\n<li>The <code>Holesky</code> network</li>\n<li>The GossipSub RPC calls</li>\n<li>The following GossipSub topics:\n<ul>\n<li><code>beacon_block</code></li>\n<li><code>beacon_aggregate_and_proof</code></li>\n<li><code>sync_commmittee_contribution_and_proof</code></li>\n<li><code>attester_slashing</code></li>\n<li><code>proposer_slashing</code></li>\n<li><code>voluntary_exit</code> * (check <code>Hermes</code> issue → <a href=\"https://github.com/probe-lab/hermes/issues/24\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Broadcasting of invalid `voluntary_exit` messages to mesh peers · Issue #24 · probe-lab/hermes · GitHub</a>)</li>\n<li><code>bls_to_execution_change</code></li>\n</ul>\n</li>\n<li>The bandwidth of <code>SENT_IHAVE</code> and <code>RECV_IHAVE</code> RPC calls has been calculated based on the number of bytes per <code>topic</code>  strings and <code>msg_ids</code> that were inside.</li>\n</ul>\n</blockquote>\n<h2><a name=\"netin-vs-netout-3\" class=\"anchor\" href=\"https://ethresear.ch#netin-vs-netout-3\"></a>NetIn vs NetOut</h2>\n<p>The study starts with a general overview of what is the ratio of sent vs received bandwidth consumption. The following graph shows that on the <code>Hermes</code> node, the biggest share of the bandwidth comes from the data that we send out to the connected peers.</p>\n<p>The total outbound bandwidth is around 3 to 4 times higher than the inbound. Note that <code>Hermes</code> differs from a standard node in that it keeps more peer connections (around 250 peers). This clearly has a significant impact on bandwidth usage. That said, although the numbers are not representative of the bandwidth usage of a normal node in absolute terms, the percentage split still represents that of a normal node.</p>\n<p>Narrowing down, we observe a ratio of 700-800 KB/s for outgoing traffic and 200 KB/s for incoming traffic.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/f/4fb2e194b5b97ea9f84092740d059ad4447d2061.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/4fb2e194b5b97ea9f84092740d059ad4447d2061\" title=\"bandwidth-in-out\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/f/4fb2e194b5b97ea9f84092740d059ad4447d2061_2_517x309.jpeg\" alt=\"bandwidth-in-out\" data-base62-sha1=\"bn2YdJQu0qTJ9woJOCS7ZJq8IWB\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/f/4fb2e194b5b97ea9f84092740d059ad4447d2061_2_517x309.jpeg, https://ethresear.ch/uploads/default/optimized/3X/4/f/4fb2e194b5b97ea9f84092740d059ad4447d2061_2_775x463.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/f/4fb2e194b5b97ea9f84092740d059ad4447d2061_2_1034x618.jpeg 2x\" data-dominant-color=\"FAF9F9\"></a></div><p></p>\n<h2><a name=\"bandwidth-based-on-each-event-type-4\" class=\"anchor\" href=\"https://ethresear.ch#bandwidth-based-on-each-event-type-4\"></a>Bandwidth based on each event type</h2>\n<p>GossipSub sends multiple types of messages with different purposes. From control messages to keep the mesh stable to pure messages or gossip  <code>IHAVE</code> / <code>IWANT</code>  messages to ensure that the host didn’t miss any message. Each of these message types requires sending RPC calls, adding up to the total of sent and received network traffic.</p>\n<p>The following graphs isolate the bandwidth attributed to each of the events. The first one shows the raw KB/s over time, and the second one shows the percentage of each event over the aggregated total.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/3/b352576dc2b9350a99470bde3eb0710d0e710d3c.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/b352576dc2b9350a99470bde3eb0710d0e710d3c\" title=\"bandwidth-by-event\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/3/b352576dc2b9350a99470bde3eb0710d0e710d3c_2_517x309.jpeg\" alt=\"bandwidth-by-event\" data-base62-sha1=\"pAlSKDwvzy4cMRcBJ9DWkTI1OHO\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/3/b352576dc2b9350a99470bde3eb0710d0e710d3c_2_517x309.jpeg, https://ethresear.ch/uploads/default/optimized/3X/b/3/b352576dc2b9350a99470bde3eb0710d0e710d3c_2_775x463.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/3/b352576dc2b9350a99470bde3eb0710d0e710d3c_2_1034x618.jpeg 2x\" data-dominant-color=\"F7F6F6\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/b/ab8bda76fba67303a9b9991902f5ff1805c63175.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/ab8bda76fba67303a9b9991902f5ff1805c63175\" title=\"bandwidth-ratio-by-event\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/b/ab8bda76fba67303a9b9991902f5ff1805c63175_2_517x309.jpeg\" alt=\"bandwidth-ratio-by-event\" data-base62-sha1=\"otzhtJaZcdLr3nceJzttiOy4qGx\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/b/ab8bda76fba67303a9b9991902f5ff1805c63175_2_517x309.jpeg, https://ethresear.ch/uploads/default/optimized/3X/a/b/ab8bda76fba67303a9b9991902f5ff1805c63175_2_775x463.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/a/b/ab8bda76fba67303a9b9991902f5ff1805c63175_2_1034x618.jpeg 2x\" data-dominant-color=\"F6F6F8\"></a></div><p></p>\n<h3><a name=\"percentage-table-5\" class=\"anchor\" href=\"https://ethresear.ch#percentage-table-5\"></a>Percentage Table</h3>\n<pre><code>| Event | % of total BW | % of Received BW | % of Sent BW |\n| --- | --- | --- | --- |\n| RECV_GRAFT | 0.000367 | 0.001565 | ———————— |\n| RECV_IHAVE | 9.974349 | 42.537746 | ———————— |\n| RECV_IWANT | 2.368042 | 10.099021 | ———————— |\n| RECV_MSG  (duplicated) | 7.347250 | 31.333920 | ———————— |\n| RECV_MSG | 3.640691 | 15.526507 | ———————— |\n| RECV_PRUNE | 0.002973 | 0.012678 | ———————— |\n| RECV_SUBS | 0.114559 | 0.488562 | ———————— |\n| SENT_GRAFT | 0.002863 | ———————— | 0.003740 |\n| SENT_IHAVE | 23.404913 | ———————— | 30.573967 |\n| SENT_IWANT | 0.094569 | ———————— | 0.123536 |\n| SENT_MSG | 53.049257 | ———————— | 69.298539 |\n| SENT_PRUNE | 0.000164 | ———————— | 0.000214 |\n| SENT_SUBS | 0.000003 | ———————— | 0.000004 |\n</code></pre>\n<p>From the above graphs, we can observe that:</p>\n<ul>\n<li>The <code>SENT_MSG</code> event is the one that consumes the most network traffic, with a total of 53% of the total network traffic and 69% of the total sent traffic.<br>\nIt has a spiky oscillation between 500 to 700 KB/s, and it is clearly the most bandwidth consuming event.<br>\nIt is hard to define which is the ratio of duplicates that all those sent messages generate on the remote side. However, we could assume that it would follow a similar pattern to the <code>RECV_MSG</code> one (2 duplicate bytes per 1 original byte).</li>\n<li>Surprisingly, the <code>SENT_IHAVE</code> event follows <code>SENT_MSG</code>s in terms of consumed bandwidth with a total of 23.4% of the total bandwidth and 30% of the total outgoing bandwidth. Interestingly, subscribing to topics with a high frequency of messages (even if they are small in size), does have an impact on the bandwidth that we use sending those <code>IHAVE</code> messages.<br>\nEach <code>IHAVE</code> is limited to <code>5,000</code> message IDs; however, with a message ID of 40 bytes, it still adds up to a maximum of 200KBs in message IDs on every heartbeat (0.7s in the case of Ethereum).</li>\n<li><code>RECV_IHAVES</code> represent 10% of the total bandwidth, and 42% of the total inbound bandwidth, with an inbound network bandwidth requirement of 100KB/s.</li>\n<li>The above two points showcase that, far from being negligible on the overall value they provide, the total bandwidth used on <code>IHAVE</code> messages represents almost 400KB/s, consuming 23% of the total outgoing bandwidth and more than 40% of the incoming bandwidth.</li>\n<li>The <code>RECV_MSG</code> events remain in the fourth position with a representation of 11% of the total consumed bandwidth, where only 3.6% belong to unique or original messages, and the remaining 7.3% belong to duplicates. In terms of the overall inbound bandwidth, they represent 15% and 31%, respectively, for original and duplicated received messages.</li>\n<li>On a much lower ratio, the whole list of <code>RECV_IWANT</code> messages stays within a lower 2.3% of the total bandwidth usage, which represents 10% of the total received bytes.</li>\n</ul>\n<h2><a name=\"comparison-with-live-nodes-6\" class=\"anchor\" href=\"https://ethresear.ch#comparison-with-live-nodes-6\"></a>Comparison with live nodes</h2>\n<p>In order to validate the previous measurements taken from the GossipSub module at <code>Hermes</code>, we’ve compared the bandwidth usage ratios with standard running Ethereum nodes:</p>\n<ul>\n<li>Local Prysm node at home setup (Holesky) reports an average received network traffic of 386KB/s and a sent network traffic of 580KB/s.<br>\nAlthough the numbers might be slightly different, these measurements take the whole traffic of the Beacon Node docker container, which includes:\n<ul>\n<li>Peer discovery</li>\n<li>Requests/Responses like <code>beacon_blocs</code> or <code>blobs</code> by range or by root</li>\n</ul>\n</li>\n</ul>\n<p>The MigaLabs <a href=\"https://monitoreth.io/node_metrics#network-in-out\" rel=\"noopener nofollow ugc\">public dashboard</a> at <a href=\"https://monitoreth.io/node_metrics\" rel=\"noopener nofollow ugc\">monitor.eth</a> shows slightly bigger bandwidth usage than the ones we measured. However, it is unclear whether the measurement includes the Execution Layer. The reported bandwidth reports an average of 290KB/s inbound and 1.2MB/s outbound, although it doesn’t include many data points (5 points per hour) and the variation is noticeable.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/7/c7cf74da4a25ce8b98d757eeaebf56696d2c6aa6.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/c7cf74da4a25ce8b98d757eeaebf56696d2c6aa6\" title=\"migalabs\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/7/c7cf74da4a25ce8b98d757eeaebf56696d2c6aa6_2_517x315.jpeg\" alt=\"migalabs\" data-base62-sha1=\"svBunEWiCdQ7bxoz0bAfHwJe18i\" width=\"517\" height=\"315\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/7/c7cf74da4a25ce8b98d757eeaebf56696d2c6aa6_2_517x315.jpeg, https://ethresear.ch/uploads/default/optimized/3X/c/7/c7cf74da4a25ce8b98d757eeaebf56696d2c6aa6_2_775x472.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/7/c7cf74da4a25ce8b98d757eeaebf56696d2c6aa6_2_1034x630.jpeg 2x\" data-dominant-color=\"EEF3FA\"></a></div><p></p>\n<h1><a name=\"conclusions-and-takeaways-7\" class=\"anchor\" href=\"https://ethresear.ch#conclusions-and-takeaways-7\"></a>Conclusions and takeaways</h1>\n<p>Despite the fact that the configuration of our <code>Hermes</code> node, which, in this case, doesn’t represent a standard node in the Ethereum network, the bandwidth consumption numbers of GossipSub validate that there’s plenty of space for optimization.</p>\n<p>We observed that <strong>a significant portion of bandwidth is spent on <code>SENT_IHAVE</code> (23.4% of the total bandwidth and 30% of the total outgoing bandwidth) and <code>RECV_IHAVE</code> (10% of the total bandwidth, and 42% of the total inbound bandwidth)</strong>.</p>\n<p>More than anything, these findings validate the improvement recommendations made during our previous study on the “Effectiveness of Gossipsub’s gossip mechanism”: <a href=\"https://ethresear.ch/t/gossip-iwant-ihave-effectiveness-in-ethereums-gossipsusb-network/19686\" class=\"inline-onebox\">Gossip IWANT/IHAVE Effectiveness in Ethereum's Gossipsusb network</a></p>\n<p>Taking into account that a node doesn’t only receive duplicated messages but also generates duplicates to others, we strongly recommend pushing the <a href=\"https://github.com/libp2p/specs/pull/560\" rel=\"noopener nofollow ugc\">GossipSub1.2</a> initiative, as it will effectively eliminate the bandwidth wasted on receiving or generating duplicates, which amounts to ~42% of total bandwidth.</p>\n<p>Even currently though, the network bandwidth usage of a host in the Ethereum network (around 300 KB/s inbound and 1.1 MB/s outbound, including the EL) still constitutes a small percentage of the <a href=\"https://fairinternetreport.com/research/internet-speed-by-country/\" rel=\"noopener nofollow ugc\">average household</a> bandwidth availability, which varies between 8MB/s and 26MB/s depending on the region.</p>\n<p>For more details and <strong>weekly network health reports on Ethereum’s discv5 DHT network</strong> head over to <a href=\"https://probelab.io/\" rel=\"noopener nofollow ugc\">probelab.io</a>.</p>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/ethereum-node-message-propagation-bandwidth-consumption/19952\">Read full topic</a></p>","link":"https://ethresear.ch/t/ethereum-node-message-propagation-bandwidth-consumption/19952","pubDate":"Tue, 02 Jul 2024 14:39:15 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19952"},"source":{"@url":"https://ethresear.ch/t/ethereum-node-message-propagation-bandwidth-consumption/19952.rss","#text":"Ethereum Node Message Propagation Bandwidth Consumption"}},{"title":"Fork Choice Attacks and Protections in EPBS","dc:creator":"terence","category":"Proof-of-Stake","description":"<h2><a name=\"introduction-1\" class=\"anchor\" href=\"https://ethresear.ch#introduction-1\"></a>Introduction</h2>\n<p>This post explores fork choice attacks through the perspective of ePBS, focusing on the new fork choice boost parameters and the rationale behind their design. We’ll begin by examining why these parameters are crucial, followed by a review of the existing designs. For background reading, I recommend reading <a href=\"https://ethresear.ch/t/payload-boosts-in-epbs/18769\">Payload Boosts in ePBS</a> by Potuz. Additionally, for a deeper understanding of how the LMD GHOST fork choice operates today, consider Ben Edgington’s section on fork choice in his book, <a href=\"https://eth2book.info/capella/part3/forkchoice/\" rel=\"noopener nofollow ugc\">Upgrading Ethereum</a>. Let’s dive in!</p>\n<h4><a name=\"references-2\" class=\"anchor\" href=\"https://ethresear.ch#references-2\"></a>References</h4>\n<p><a href=\"https://ethresear.ch/t/payload-boosts-in-epbs/18769\">Payload boosts in ePBS</a> - Feb/2024 By Potuz<br>\n<a href=\"https://ethresear.ch/t/sandwitch-attacks-on-epbs/19538/1\">Sandwitch attacks on ePBS</a> - May/2024 By Potuz</p>\n<h2><a name=\"fork-choice-attacks-today-3\" class=\"anchor\" href=\"https://ethresear.ch#fork-choice-attacks-today-3\"></a>Fork choice attacks today</h2>\n<p>We analyze these scenarios from both the attacker’s and the victim’s perspectives, focusing on two consecutive proposal slots, each with distinct proposers. Two primary types of attacks can emerge:</p>\n<ol>\n<li>The proposer of slot <span class=\"math\">n+1</span> attacks the proposer of slot <span class=\"math\">n</span>.</li>\n<li>The proposer of slot <span class=\"math\">n</span> attacks the proposer of slot <span class=\"math\">n+1</span>.</li>\n</ol>\n<p>To clarify, by “attack,” we mean an attempt to reorg the block out of the canonical chain. The motives behind such a reorg typically include:</p>\n<ol>\n<li>Stealing the content of the block.</li>\n<li>Increasing the time available to build the block, making a 24-second block more valuable than a 12-second one.</li>\n</ol>\n<h3><a name=\"post-anti-attack-4\" class=\"anchor\" href=\"https://ethresear.ch#post-anti-attack-4\"></a>Post-anti attack</h3>\n<p>The first type of attack is a post-anti attack, where the proposer of slot <span class=\"math\">n+1</span> attempts to reorg the block from slot <span class=\"math\">n</span>. In this scenario, the proposer of <span class=\"math\">n+1</span> utilizes the <a href=\"https://eth2book.info/capella/part3/forkchoice/phase0/#proposer-boost\" rel=\"noopener nofollow ugc\">proposer boost</a> to gain an advantage and potentially reorg the block from slot <span class=\"math\">n</span>. Currently, the proposer boost is set at 40%. This means that as long as the block at slot <span class=\"math\">n</span> receives votes from more than 40% of the beacon committee, it is safe against a reorg. Typically, we define the percentage of the beacon committee that belongs to the attacker as <span class=\"math\">\\delta</span>. An attacker can successfully reorg a block if <span class=\"math\">\\delta &gt; 1 - PB</span>, which is 60% under today’s parameters.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/f/3f93dac13fced8dbaa43115f19cd6ae45668406d.png\" data-download-href=\"https://ethresear.ch/uploads/default/3f93dac13fced8dbaa43115f19cd6ae45668406d\" title=\"Screenshot 2024-06-26 at 12.57.24 PM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/f/3f93dac13fced8dbaa43115f19cd6ae45668406d_2_690x297.png\" alt=\"Screenshot 2024-06-26 at 12.57.24 PM\" data-base62-sha1=\"94qRa6yB9FmxWYQnfG0nT5DPwyV\" width=\"690\" height=\"297\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/f/3f93dac13fced8dbaa43115f19cd6ae45668406d_2_690x297.png, https://ethresear.ch/uploads/default/original/3X/3/f/3f93dac13fced8dbaa43115f19cd6ae45668406d.png 1.5x, https://ethresear.ch/uploads/default/original/3X/3/f/3f93dac13fced8dbaa43115f19cd6ae45668406d.png 2x\" data-dominant-color=\"EDE4E3\"></a></div><p></p>\n<h3><a name=\"ex-anti-attack-5\" class=\"anchor\" href=\"https://ethresear.ch#ex-anti-attack-5\"></a>Ex-anti attack</h3>\n<p>The second type of attack is known as the ex-anti attack, where the proposer of slot <span class=\"math\">n</span> attempts to reorg the block from slot <span class=\"math\">n+1</span>. This type of attack is inherently difficult to pull off because the proposer boost grants a 40% advantage to the block at slot <span class=\"math\">n+1</span>. To successfully carry out this attack, the attacker’s beacon committee must withhold their attestations and block then release them synchronously which occurs shortly after the block at slot <span class=\"math\">n+1</span> is published. To reorg the block at slot <span class=\"math\">n+1</span>, the attacker’s beacon committee support must exceed the proposer boost. We can assert that an attacker can reorg a block if <span class=\"math\">\\delta &gt; PB</span>, which is 40% under today’s parameter.</p>\n<p>It is worth mentioning in ex-anti attack, attackers who propose multiple consecutive slots have an added advantage. For two slots, the effectiveness of the attack can be simplified to the expression <span class=\"math\">\\delta / 2 &gt; PB</span>, requiring only 20% of the stake per slot to reorg an honest block.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/c/ccb28f1581907f015d5780dae95dd78444ba59d8.png\" data-download-href=\"https://ethresear.ch/uploads/default/ccb28f1581907f015d5780dae95dd78444ba59d8\" title=\"Screenshot 2024-06-26 at 12.57.38 PM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/c/ccb28f1581907f015d5780dae95dd78444ba59d8_2_690x340.png\" alt=\"Screenshot 2024-06-26 at 12.57.38 PM\" data-base62-sha1=\"tcPXOipxqyVGi1rugZQ6DsNrmt2\" width=\"690\" height=\"340\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/c/ccb28f1581907f015d5780dae95dd78444ba59d8_2_690x340.png, https://ethresear.ch/uploads/default/original/3X/c/c/ccb28f1581907f015d5780dae95dd78444ba59d8.png 1.5x, https://ethresear.ch/uploads/default/original/3X/c/c/ccb28f1581907f015d5780dae95dd78444ba59d8.png 2x\" data-dominant-color=\"EDE2E1\"></a></div><p></p>\n<h2><a name=\"fork-choice-attacks-in-epbs-6\" class=\"anchor\" href=\"https://ethresear.ch#fork-choice-attacks-in-epbs-6\"></a>Fork choice attacks in ePBS</h2>\n<p>In the ePBS model, the introduction of a <strong>builder block between two proposer blocks</strong> complicates the landscape of potential attacks beyond what we see today. This addition expands the array of possible attack scenarios:</p>\n<h3><a name=\"pre-epbs-scenarios-7\" class=\"anchor\" href=\"https://ethresear.ch#pre-epbs-scenarios-7\"></a>Pre-ePBS Scenarios:</h3>\n<ol>\n<li><strong>Proposer <span class=\"math\">n+1</span> attacking proposer <span class=\"math\">n</span></strong> - This scenario concerns post-anti reorg safety.</li>\n<li><strong>Proposer <span class=\"math\">n</span> attacking proposer <span class=\"math\">n+1</span></strong> - This scenario concerns ex-anti reorg safety.</li>\n</ol>\n<h3><a name=\"post-epbs-scenarios-8\" class=\"anchor\" href=\"https://ethresear.ch#post-epbs-scenarios-8\"></a>Post-ePBS Scenarios:</h3>\n<ol>\n<li><strong>Proposer of <span class=\"math\">n+1</span> and builder of <span class=\"math\">n</span> collude and attack proposer of <span class=\"math\">n</span></strong> - This scenario concerns proposer post-anti reorg safety.</li>\n<li><strong>Proposer and builder of <span class=\"math\">n</span> collude and attack proposer of <span class=\"math\">n+1</span></strong> - This scenario concerns proposer ex-anti reorg safety.</li>\n<li><strong>Proposer of <span class=\"math\">n+1</span> and <span class=\"math\">n</span> collude and attack builder of <span class=\"math\">n</span></strong> - This scenario introduces builder safety, including reorg safety and withholding safety.</li>\n</ol>\n<p>Before we go into the specific attack scenarios under the ePBS framework, it’s important to establish the incentives for honest builder behavior. Similar to the proposer boost, builders are also incentivized through boosts for honest actions through <a href=\"https://ethresear.ch/t/payload-timeliness-committee-ptc-an-epbs-design/16054\">payload timeliness committee</a>.</p>\n<ul>\n<li><strong>Reveal Boost (<span class=\"math\">RB</span>)</strong>: Awarded to builders who timely reveal their payloads.</li>\n<li><strong>Withheld Boost (<span class=\"math\">WB</span>)</strong>: Granted if a builder, feeling unsafe about revealing the payload, opts to release a withheld message. This boost gives weight to the parent block of the committed consensus block.</li>\n</ul>\n<p>These boosts also ensure both builder <strong>reveal</strong> and <strong>withhold</strong> safety. Builder reveal safety means that if the builder acted honestly and revealed a payload in a timely fashion (as attested by the PTC), then the revealed payload should be on-chain. Builder withhold safety means that if a beacon block containing a builder’s header is withheld or revealed late, then that beacon block should not be the canonical head of the blockchain in the view of honest validators.</p>\n<p>To ensure clarity and maintain focus throughout our discussion, we will designate the boosts as follows: Reveal Boost (<span class=\"math\">RB</span>), Withheld Boost (<span class=\"math\">WB</span>), and Proposer Boost (<span class=\"math\">PB</span>). The specific values of these boosts will be displayed towards the end of the post. Now, let’s explore the first scenario: the proposer post-anti attack in ePBS.</p>\n<h3><a name=\"proposer-post-anti-attack-9\" class=\"anchor\" href=\"https://ethresear.ch#proposer-post-anti-attack-9\"></a>Proposer post-anti attack</h3>\n<p>As you may have noted, this scenario is similar to the post-anti attack today, except that the builder of <span class=\"math\">n</span> colludes with the proposer of <span class=\"math\">n+1</span>. We also assume that a portion of the beacon committee is part of the malicious team, represented by <span class=\"math\">\\delta</span>. The post-anti attack is successful if <span class=\"math\">WB + PB + \\delta &gt; 1 - \\delta</span>. This indicates that post-anti attack resistance is weaker in ePBS due to the added power of the withheld boost from the colluding builder.</p>\n<p>Let’s examine the benefits for the attacker in a successful attack:</p>\n<ul>\n<li>The block at <span class=\"math\">n+1</span> gains two slots worth of transactions by reorg out <span class=\"math\">n</span>, resulting in more time and more transactions, thereby increasing its block value.</li>\n<li>Since <span class=\"math\">n</span>'s payload was revealed as withheld, and both <span class=\"math\">n</span>'s builder and <span class=\"math\">n+1</span>'s proposer collude, there is no opportunity to steal <span class=\"math\">n</span>'s payload transaction content. They are all on the same team.</li>\n<li>From <span class=\"math\">n</span>'s proposer’s perspective, the loss includes the opportunity to propose a beacon block, and from the protocol’s perspective, it results in the loss of one slot worth of consensus liveness.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/c/bceef4d59d54e6590addac9fc886b98f4d419f29.png\" data-download-href=\"https://ethresear.ch/uploads/default/bceef4d59d54e6590addac9fc886b98f4d419f29\" title=\"Screenshot 2024-06-26 at 12.57.48 PM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/c/bceef4d59d54e6590addac9fc886b98f4d419f29_2_690x225.png\" alt=\"Screenshot 2024-06-26 at 12.57.48 PM\" data-base62-sha1=\"qXnJ1gNl05bHQXJCDbl0st1Z3aF\" width=\"690\" height=\"225\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/c/bceef4d59d54e6590addac9fc886b98f4d419f29_2_690x225.png, https://ethresear.ch/uploads/default/original/3X/b/c/bceef4d59d54e6590addac9fc886b98f4d419f29.png 1.5x, https://ethresear.ch/uploads/default/original/3X/b/c/bceef4d59d54e6590addac9fc886b98f4d419f29.png 2x\" data-dominant-color=\"ECEBEB\"></a></div><p></p>\n<h3><a name=\"proposer-ex-anti-attack-10\" class=\"anchor\" href=\"https://ethresear.ch#proposer-ex-anti-attack-10\"></a>Proposer ex-anti attack</h3>\n<p>Let’s move on to the second scenario: the proposer ex-anti attack in ePBS. In this scenario, we will examine the most extreme version where the builder’s Reveal Boost (<span class=\"math\">RB</span>) is leveraged for the ex-anti attack. What does this attack look like?</p>\n<p>The proposer of slot <span class=\"math\">n</span> withholds the block and the beacon committee, represented by <span class=\"math\">\\delta</span>, withholds the attestations. The attacking builder of slot <span class=\"math\">n</span> releases the payload on time to gain the <span class=\"math\">RB</span>. The ex-anti attack is successful if <span class=\"math\">RB + \\delta &gt; PB</span>. However, realistically, the proposer will try to split the beacon committee into portions seen (<span class=\"math\">x</span>) and not seen (<span class=\"math\">1-x</span>). This modifies the equation to <span class=\"math\">RB + x + \\delta &gt; PB + 1-x</span>.</p>\n<p>Let’s examine the benefits for the attacker in a successful attack:</p>\n<ul>\n<li>The block at slot <span class=\"math\">n</span> reorgs out slot <span class=\"math\">n+1</span>. Unlike a post-anti attack, the builder of slot <span class=\"math\">n</span> must commit and release the payload on time to gain the <span class=\"math\">RB</span>. Due to this commitment:\n<ul>\n<li>Even if the attack is successful, it only provides one slot of transactions without leading to more time and more transactions. The proposer of slot <span class=\"math\">n+2</span> benefits here.</li>\n<li>It cannot steal slot <span class=\"math\">n+1</span>'s transactions because the payload is pre-committed, leaving nothing to steal from the consensus block.</li>\n</ul>\n</li>\n</ul>\n<p>In other words, the ex-anti attack is less valuable than the post-anti attack if we assume the worst-case scenario for both.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/0/f/0fb72294c98dbb6a1be55419420ebf8144cfaa62.png\" data-download-href=\"https://ethresear.ch/uploads/default/0fb72294c98dbb6a1be55419420ebf8144cfaa62\" title=\"Screenshot 2024-06-26 at 12.57.58 PM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/0/f/0fb72294c98dbb6a1be55419420ebf8144cfaa62_2_690x263.png\" alt=\"Screenshot 2024-06-26 at 12.57.58 PM\" data-base62-sha1=\"2f1wGpugRr37GmsAmnwR3VpEas2\" width=\"690\" height=\"263\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/0/f/0fb72294c98dbb6a1be55419420ebf8144cfaa62_2_690x263.png, https://ethresear.ch/uploads/default/original/3X/0/f/0fb72294c98dbb6a1be55419420ebf8144cfaa62.png 1.5x, https://ethresear.ch/uploads/default/original/3X/0/f/0fb72294c98dbb6a1be55419420ebf8144cfaa62.png 2x\" data-dominant-color=\"ECEBEC\"></a></div><p></p>\n<h3><a name=\"builder-attacks-11\" class=\"anchor\" href=\"https://ethresear.ch#builder-attacks-11\"></a>Builder attacks</h3>\n<p>Finally, let’s move to the last section: proposers of <span class=\"math\">n</span> and <span class=\"math\">n+1</span> collude to attack the builder of <span class=\"math\">n</span>. We will divide this section into two parts. The first part will focus on reorg out the builder’s payload, and the second part will focus on making the payload part of the canonical chain even if the builder chooses to withhold it.</p>\n<h4><a name=\"payload-reorging-attack-12\" class=\"anchor\" href=\"https://ethresear.ch#payload-reorging-attack-12\"></a>Payload reorging attack</h4>\n<p>Let’s examine the first part. The proposer of slot <span class=\"math\">n</span> releases the block late / attempts to split the beacon committee view, resulting in <span class=\"math\">x</span> beacon committee members voting for the block and <span class=\"math\">1-x</span> not voting for it. The builder reveals the payload on time and gains a <span class=\"math\">RB</span>. The proposer of slot <span class=\"math\">n+1</span> could then reorg the payload by reorg the entire proposer block of slot <span class=\"math\">n</span>, which is more powerful than just reorganizing the payload itself. The attack is successful if <span class=\"math\">PB + 1 - x &gt; RB + x</span>.</p>\n<p>What does a successful attack provide to the attacker?</p>\n<ul>\n<li>Given that proposers of slots <span class=\"math\">n</span> and <span class=\"math\">n+1</span> are colluding, there is no extra slot advantage gained by reorg out the block at slot $n. It is essentially the same as not proposing a block at slot <span class=\"math\">n</span>.</li>\n<li>A minor advantage of the collusion between the two proposers is the ability to steal the payload transactions from slot <span class=\"math\">n</span>. This issue is mitigated if transactions are protected by binding them to slot $n. This scenario is known as a next-slot unbundling attack, which differs from same-slot unbundling. Same-slot unbundling is impossible in ePBS.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/5/e50f3d20a2b304825cb05436a2a3e610fbddcf4f.png\" data-download-href=\"https://ethresear.ch/uploads/default/e50f3d20a2b304825cb05436a2a3e610fbddcf4f\" title=\"Screenshot 2024-06-26 at 12.58.35 PM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e50f3d20a2b304825cb05436a2a3e610fbddcf4f_2_690x210.png\" alt=\"Screenshot 2024-06-26 at 12.58.35 PM\" data-base62-sha1=\"wGlZmhivExZmbhXE31kjqHprbZ5\" width=\"690\" height=\"210\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e50f3d20a2b304825cb05436a2a3e610fbddcf4f_2_690x210.png, https://ethresear.ch/uploads/default/original/3X/e/5/e50f3d20a2b304825cb05436a2a3e610fbddcf4f.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/5/e50f3d20a2b304825cb05436a2a3e610fbddcf4f.png 2x\" data-dominant-color=\"EAE8E9\"></a></div><p></p>\n<h4><a name=\"payload-withholding-attack-13\" class=\"anchor\" href=\"https://ethresear.ch#payload-withholding-attack-13\"></a>Payload withholding attack</h4>\n<p>Let’s look at the second part. The proposer of slot <span class=\"math\">n</span> releases the block late or tries to split the beacon committee view, resulting in <span class=\"math\">x</span> beacon committee members voting for the block and <span class=\"math\">1-x</span> not voting for it. The builder withholds the payload on time and gains a Withheld Boost (<span class=\"math\">WB</span>). The proposer of slot <span class=\"math\">n+1</span> could attempt to force the builder to fulfill unconditional payment by making the block at slot <span class=\"math\">n</span> canonical, which from the chain’s perspective, appears as if the builder did not release the payload. The attack is successful if <span class=\"math\">PB + x &gt; WB + 1 - x</span>.</p>\n<p>What does a successful attack provide to the attacker?</p>\n<ul>\n<li>The only plausible scenario for this attack is when the builder is not confident in revealing the payload and hence withholds it. In this case, the proposer of slot <span class=\"math\">n+1</span>, colluding with the proposer of slot <span class=\"math\">n</span>, wants to take the builder’s payment regardless.</li>\n<li>Another primary advantage is that the block at slot <span class=\"math\">n+1</span> can contain two slots’ worth of transactions since the builder submits an empty payload by withholding.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/f/5f04c5fc36d5b005e7dcc6c7839e90f40a4a0af7.png\" data-download-href=\"https://ethresear.ch/uploads/default/5f04c5fc36d5b005e7dcc6c7839e90f40a4a0af7\" title=\"Screenshot 2024-06-26 at 12.58.09 PM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/f/5f04c5fc36d5b005e7dcc6c7839e90f40a4a0af7_2_690x266.png\" alt=\"Screenshot 2024-06-26 at 12.58.09 PM\" data-base62-sha1=\"dyzAmVXHa4DOfATzFHIDC6hfmMD\" width=\"690\" height=\"266\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/f/5f04c5fc36d5b005e7dcc6c7839e90f40a4a0af7_2_690x266.png, https://ethresear.ch/uploads/default/original/3X/5/f/5f04c5fc36d5b005e7dcc6c7839e90f40a4a0af7.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/f/5f04c5fc36d5b005e7dcc6c7839e90f40a4a0af7.png 2x\" data-dominant-color=\"EBE9EA\"></a></div><p></p>\n<h3><a name=\"boost-numbers-14\" class=\"anchor\" href=\"https://ethresear.ch#boost-numbers-14\"></a>Boost numbers</h3>\n<p>Finally, let’s summarize the equations for each worst-case attack scenario if the attacker wins:</p>\n<ol>\n<li><strong>Proposers post-anti attack</strong>: <span class=\"math\">WB + PB + \\delta &gt; 1 - \\delta</span></li>\n<li><strong>Proposers ex-anti attack</strong>: <span class=\"math\">RB + x + \\delta &gt; PB + 1 - x</span></li>\n<li><strong>Builder reorg payload attack</strong>: <span class=\"math\">PB + 1 - x &gt; RB + x</span></li>\n<li><strong>Builder withhold payload attack</strong>: <span class=\"math\">PB + x &gt; WB + 1 - x</span></li>\n</ol>\n<p>Overall, we can derive that the parameters are approximately <span class=\"math\">PB = 20\\%</span>, <span class=\"math\">WB = 40\\%</span>, <span class=\"math\">RB = 40\\%</span>, and <span class=\"math\">\\delta = 20\\%</span>. This means we can tolerate a malicious beacon committee up to 20%, whereas today, this tolerance is 40%.</p>\n<p>The real question to ask is whether the worst-case scenario of a 20% attack even makes sense, as in the ex-anti attack, the builder must release the payload to perform the attack. Nevertheless, it certainly represents a degradation in fork choice. A 20% attack is significantly more dangerous in the post-anti attack than in the ex-anti attack due to the additional time available.</p>\n<p>Something we haven’t analyzed here is how multi-slot liveness may play a role in this context. Given (block, slot) voting and under worse network asynchrony conditions, we may experience prolonged empty slots, making recovery difficult. Solutions like a backoff scheme have been proposed, which require further thought and analysis.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/fork-choice-attacks-and-protections-in-epbs/19951\">Read full topic</a></p>","link":"https://ethresear.ch/t/fork-choice-attacks-and-protections-in-epbs/19951","pubDate":"Tue, 02 Jul 2024 14:24:34 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19951"},"source":{"@url":"https://ethresear.ch/t/fork-choice-attacks-and-protections-in-epbs/19951.rss","#text":"Fork Choice Attacks and Protections in EPBS"}},{"title":"P2P ZK Light Client Bridge between Tron and Ethereum L2s","dc:creator":"alexhook","category":"Applications","description":"<p><em>By <a href=\"https://x.com/alexhooketh\" rel=\"noopener nofollow ugc\">Alex Hook</a>. Thanks to these people for inspiration, feedback and suggestions: <a href=\"https://x.com/alexanderchopan\" rel=\"noopener nofollow ugc\">accountless.eth</a>, <a href=\"https://x.com/pseudotheos\" rel=\"noopener nofollow ugc\">pseudotheos</a>, <a href=\"https://x.com/domothy\" rel=\"noopener nofollow ugc\">Domothy</a>, <a href=\"https://x.com/DoganEth\" rel=\"noopener nofollow ugc\">Dogan Alpaslan</a>, <a href=\"https://zkp2p.xyz\" rel=\"noopener nofollow ugc\">ZKP2P team</a></em></p>\n<hr>\n<p><strong>Abstract.</strong> USDT on the Tron Network has emerged as a dominant crypto application in the Third World countries. However, the current cartelized control of the Tron Network results in elevated transaction fees, capital concentration, and an ecosystem isolated from other crypto networks. We propose a design for a cost-effective, peer-to-peer bridge from USDT TRC20 to Ethereum L2 networks, utilizing zero-knowledge light verification of the Tron blockchain.</p>\n<h1><a name=\"introduction-1\" class=\"anchor\" href=\"https://ethresear.ch#introduction-1\"></a>Introduction</h1>\n<p>According to <a href=\"https://tokenterminal.com/terminal/datasets/stablecoins\" rel=\"noopener nofollow ugc\">Token Terminal</a>, USDT on Tron has achieved preeminence by several metrics, including outstanding supply, 30d transfer volume, number of transfers, and number of holders. At the time of writing, the second place by volume, DAI on Ethereum, has only ~20% less volume than it, but two orders of magnitude fewer holders and number of transfers. The second place by number of transfers, USDC on Base, has 5x fewer transfers.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/4/6476c0c44ca7866bfea5a4f35205a47fa7c74204.png\" data-download-href=\"https://ethresear.ch/uploads/default/6476c0c44ca7866bfea5a4f35205a47fa7c74204\" title=\"Screenshot 2024-06-27 at 8.00.11 PM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/4/6476c0c44ca7866bfea5a4f35205a47fa7c74204_2_690x459.png\" alt=\"Screenshot 2024-06-27 at 8.00.11 PM\" data-base62-sha1=\"ekKaNu8ucguOQdkgvdDfU0wTl7S\" width=\"690\" height=\"459\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/4/6476c0c44ca7866bfea5a4f35205a47fa7c74204_2_690x459.png, https://ethresear.ch/uploads/default/optimized/3X/6/4/6476c0c44ca7866bfea5a4f35205a47fa7c74204_2_1035x688.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/4/6476c0c44ca7866bfea5a4f35205a47fa7c74204.png 2x\" data-dominant-color=\"161618\"></a></div><p></p>\n<p>This shows Tron USDT’s monstrous levels of payment usage among individuals. Unsurprising—Tron team has done an extensive advertisement campaign for its payment solution in Africa and Latin America. Shortly after, the network effect spread it to the developing countries in Asia and Post-Soviet area.</p>\n<p>If we look at the areas of the largest prevalence of Tron USDT, a noteworthy pattern can be noticed. Tron USDT is largely used in the countries with weak economies and unsustainable local currencies: Türkiye, Lebanon, Zimbabwe, Venezuela, Argentina, and more. In these countries, traditional banking doesn’t provide people with options for reliable store of value and means of payment, as local currencies are unreliable, and foreign currencies are either banned for payment use or subject to strict control.</p>\n<h3><a name=\"problems-2\" class=\"anchor\" href=\"https://ethresear.ch#problems-2\"></a>Problems</h3>\n<p>It is fair to say that USDT on Tron is one of the largest crypto applications by usage today. Millions of people around the world are interacting with it every day. It’s massively used as a store of value, acts as a medium of exchange in isolated economies such as Northern Cyprus, Cuba, and Vietnam. <a href=\"https://mirror.xyz/0x8958D0c419BCDFB8A86b8c0089552bE015fbe364/ODhOuYjK80atc9_jGprXotSo3PNobT1PRLFtorXHBrA\" rel=\"noopener nofollow ugc\">Local P2P platforms are building their infrastructure around USDT on Tron</a>. However, its dominance presents certain challenges for the broader Web3 community:</p>\n<ul>\n<li>\n<p><em>A primary concern is the high degree of centralization</em> within the Tron Network. <a href=\"https://github.com/alexhooketh/tron-light-client/blob/cc3e037c5b71ba5e6216c8d19fee4dfe9d254e69/README.md\" rel=\"noopener nofollow ugc\">According to our research</a>, over the past 250 days there were only 28 unique block producers. The same entities are constantly winning the DPoS election due to delegations from the largest TRX holders. Most of these Super Representatives (block producers in Tron) <a href=\"https://tronscan.org/#/sr/representatives\" rel=\"noopener nofollow ugc\">lack any public information</a> beyond their status as block producers.</p>\n</li>\n<li>\n<p>Despite this centralization, <em>transaction fees on Tron remain among the highest in crypto</em>—<a href=\"https://developers.tron.network/docs/resource-model#energy\" rel=\"noopener nofollow ugc\">420 sun</a> (1 sun = 1e-6 TRX) per gas. At the <a href=\"https://coinmarketcap.com/currencies/tron/\" rel=\"noopener nofollow ugc\">TRX’s price of ~0.000035 ETH</a>, this roughly corresponds to Ethereum L1’s gas price of 14.7 gwei. The usual fee for USDT transfers in Tron is <strong>$1-1.5 in TRX</strong>, rendering small transfers barely economical. However, the usage is still very high, as Tron’s ecosystem is isolated and there’s no convenient way to interact with other ecosystems from it.</p>\n</li>\n</ul>\n<p>In contrast, the Ethereum ecosystem continues to thrive. Following the Dencun upgrade, transaction fees on rollups have drastically decreased to <a href=\"https://www.growthepie.xyz/fundamentals/transaction-costs\" rel=\"noopener nofollow ugc\">less than a cent</a> per ERC20 transfer. Combined with L2s, Ethereum DeFi <a href=\"https://defillama.com/chains\" rel=\"noopener nofollow ugc\">now comprises &gt;80% of the entire DeFi TVL</a>. <a href=\"https://l2beat.com/scaling/activity\" rel=\"noopener nofollow ugc\">Rollups alone consistently handle upwards of 100 TPS</a>, <a href=\"https://mirror.xyz/alexhook.eth/y9PTlM6tVr0H8X68r1LV2UwAnT9D6u1MEEiUFvcpyG0\" rel=\"noopener nofollow ugc\">with theoretical limits of 400-800 TPS</a> depending on the specific rollup. OP Mainnet has upgraded to Stage 1 trustlessness with all OP Chains and ZKsync catching up this summer. Arbitrum is working towards Stage 2.</p>\n<p>People in developed countries are already integrated with Ethereum. By allowing ones from developing countries to seamlessly move into it from Tron, we can unite these disparate ecosystems and mitigate the risks associated with increasing centralization and monopolization of Sun’s machine.</p>\n<h1><a name=\"rationale-3\" class=\"anchor\" href=\"https://ethresear.ch#rationale-3\"></a>Rationale</h1>\n<p>The protocol for cross-chain transfers from Tron should ideally possess the following characteristics:</p>\n<ul>\n<li><strong>Trust-minimized:</strong> The system should preclude the provision of incorrect information about the Tron blockchain or the theft of locked funds, except in the event of an attack on Tron’s consensus. In such a case, the security council authorized to stop the system can be established.</li>\n<li><strong>Permissionless liquidity supply:</strong> The protocol should allow any entity to provide liquidity at their preferred rate. This fosters fair competition among providers, potentially resulting in more favorable and flexible exchange rates based on order size.</li>\n<li><strong>Permissionless operation:</strong> While a centralized relay for light client updates and order fulfillment is acceptable, provided there exists a self-proposing mechanism in case of liveness failure, the relay must not serve as a source of trust. When feasible, on-chain operations should be implemented instead (e.g., a paymaster for gasless order claims).</li>\n<li><strong>As simple as possible from the Tron side:</strong> Gas fees on Tron are extremely high, so it may be not affordable for users to execute more than necessary on-chain. Moreover, USDT Tron users are mostly using wallets such as Trust Wallet, Exodus, hardware wallets, and local exchange accounts, that do not support contract calls or token approvals. The only Tron wallet with these features, TronLink, is not common among USDT Tron users.</li>\n<li><strong>Reasonably cheap on the destination side:</strong> Zero-knowledge proofs should be employed where possible to minimize costs. While the system can be more extensive than on the Tron side, it should still be optimized to keep user claim costs low.</li>\n<li><strong>Single liquidity hub with enshrined bridging:</strong> The protocol should be deployed on a single L2 network to prevent liquidity fragmentation. To mitigate protocol isolation, cross-chain token bridges can be integrated at the UI level, <a href=\"https://zkp2p.xyz/send\" rel=\"noopener nofollow ugc\">similarly to ZKP2P</a>.</li>\n<li><strong>USDC-native:</strong> Given USDC’s prevalence in the Ethereum ecosystem, the protocol can be based on USDC, effectively providing USDT-USDC swaps. However, USDC is virtually unknown in areas of extensive USDT Tron usage, so this difference should be addressed on UX level to reduce user distrust.</li>\n</ul>\n<h1><a name=\"trons-consensus-and-protocol-101-4\" class=\"anchor\" href=\"https://ethresear.ch#trons-consensus-and-protocol-101-4\"></a>Tron’s consensus and protocol 101</h1>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/1/81e8ead1ee5585f245d51ac55f4f1db43f3785d2.png\" data-download-href=\"https://ethresear.ch/uploads/default/81e8ead1ee5585f245d51ac55f4f1db43f3785d2\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/1/81e8ead1ee5585f245d51ac55f4f1db43f3785d2_2_540x500.png\" alt=\"image\" data-base62-sha1=\"ixeCejOInAPU2vMrquK9b0A0RuW\" width=\"540\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/1/81e8ead1ee5585f245d51ac55f4f1db43f3785d2_2_540x500.png, https://ethresear.ch/uploads/default/original/3X/8/1/81e8ead1ee5585f245d51ac55f4f1db43f3785d2.png 1.5x, https://ethresear.ch/uploads/default/original/3X/8/1/81e8ead1ee5585f245d51ac55f4f1db43f3785d2.png 2x\" data-dominant-color=\"E9ECF1\"></a></div><p></p>\n<p>Every 6 hours (7200 blocks), network participants delegate their TRX to validator candidates. The 27 candidates accumulating the most votes are elected as Super Representatives (SRs), who are then responsible for block production. Block producer selection follows a deterministic round-robin pattern. A block is considered finalized after receiving 18 confirmations, 2/3 of the SR set.</p>\n<p>The block production is an ECDSA signature over the SHA256 hash of the protobuf-encoded block header. That is, one block = one signature. The top 128 representatives, beyond the 27 SRs, are designated as Super Representative Partners, voting on blocks produced by SRs. However, <a href=\"https://developers.tron.network/docs/concensus#block-generation-mechanism\" rel=\"noopener nofollow ugc\">as producers are predictable and the longest-chain rule is applied</a>, there is no necessity in validating votes.</p>\n<p>Block header consists of the following elements:</p>\n<pre><code class=\"lang-auto\">message BlockHeader {\n  message raw {\n    int64 timestamp = 1;\n    bytes txTrieRoot = 2;\n    bytes parentHash = 3;\n    int64 number = 7;\n    bytes witness_address = 9;\n    int32 version = 10;\n  }\n  raw raw_data = 1;\n  bytes witness_signature = 2;\n}\n</code></pre>\n<p>Even though state root is formally specified in the protocol, it’s not added to the header. We assume this is for backward-compatibility purposes, as the current version of Tron Network does not merkleize state.</p>\n<p>The signature is made over a SHA256 hash of the serialized <code>raw_data</code> element. That is, by utilizing light verification, we can access only one transaction-specific element—the Merkle root of the transaction tree. However, in Tron, transactions carry their execution status, so we don’t need to access the state to validate the success of one-transaction operations, such as TRC20 transfer().</p>\n<pre><code class=\"lang-auto\">message Transaction {\n  ...\n  message Result {\n    enum code {\n      SUCESS = 0;\n      FAILED = 1;\n    }\n    enum contractResult {\n      DEFAULT = 0;\n      SUCCESS = 1;\n      REVERT = 2;\n      BAD_JUMP_DESTINATION = 3;\n      OUT_OF_MEMORY = 4;\n      PRECOMPILED_CONTRACT = 5;\n      STACK_TOO_SMALL = 6;\n      STACK_TOO_LARGE = 7;\n      ILLEGAL_OPERATION = 8;\n      STACK_OVERFLOW = 9;\n      OUT_OF_ENERGY = 10;\n      OUT_OF_TIME = 11;\n      JVM_STACK_OVER_FLOW = 12;\n      UNKNOWN = 13;\n      TRANSFER_FAILED = 14;\n      INVALID_CODE = 15;\n    }\n    int64 fee = 1;\n    code ret = 2;\n    contractResult contractRet = 3;\n    ...\n}\n</code></pre>\n<p>Votes for witnesses (representatives) are of a specific transaction type. This means that in order to calculate the votes, the light client has to download all transactions and re-execute ones of this type.</p>\n<pre><code class=\"lang-auto\">message Transaction {\n  message Contract {\n    enum ContractType {\n      ...\n      VoteWitnessContract = 4;\n      ...\n}\n</code></pre>\n<p>However, considering the fact that the SR set is almost static, we believe that it would be computationally cheaper to delegate choosing the canonical set to DAO or enshrine the set into the circuit.</p>\n<p>Normal contract calls, such as TRC20 transfer, have the <code>TriggerSmartContract</code> type and are nearly identical to ERC20 transactions. This means that we can prove the USDT transfer on Tron network using only the transaction root, which can be safely accessed on-chain using ZK light client relay.</p>\n<h1><a name=\"design-proposal-5\" class=\"anchor\" href=\"https://ethresear.ch#design-proposal-5\"></a>Design proposal</h1>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/b/4b4b8d0d74dfe0a7dd5991bce974eac97c8621fc.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/4b4b8d0d74dfe0a7dd5991bce974eac97c8621fc\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/b/4b4b8d0d74dfe0a7dd5991bce974eac97c8621fc_2_690x402.jpeg\" alt=\"image\" data-base62-sha1=\"aK5G0popcNRNLMaEk9IdJmFRNq4\" width=\"690\" height=\"402\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/b/4b4b8d0d74dfe0a7dd5991bce974eac97c8621fc_2_690x402.jpeg, https://ethresear.ch/uploads/default/optimized/3X/4/b/4b4b8d0d74dfe0a7dd5991bce974eac97c8621fc_2_1035x603.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/b/4b4b8d0d74dfe0a7dd5991bce974eac97c8621fc_2_1380x804.jpeg 2x\" data-dominant-color=\"F0F0F0\"></a></div><p></p>\n<p>The proposed cross-chain swap mechanism involves three primary entities: the <em>User</em>, the <em>Buyer</em> (or liquidity provider), and the <em>Relayer</em>. The process unfolds as follows:</p>\n<ol>\n<li>\n<p><em>The Buyer</em> locks USDC into the swap contract on the L2, specifying their exchange rate and Tron address for transfers.</p>\n</li>\n<li>\n<p><em>The User</em> selects a <em>Buyer</em> offering the most favorable rate with sufficient liquidity. <em>The User</em> then initiates a transaction on the L2 to temporarily lock a portion of the <em>Buyer’s</em> USDC. This step prevents liquidity depletion before order fulfillment. If supported by the L2, this transaction may be funded by a paymaster.</p>\n</li>\n<li>\n<p><em>The User</em> transfers the corresponding amount of Tron USDT to the <em>Buyer’s</em> specified address.</p>\n</li>\n<li>\n<p>Following 18 block confirmations (~54 seconds, ensuring finality), the <em>Relayer</em> retrieves the latest Tron block headers and generates a ZK proof to them. The circuit for light verification must contain the transaction root from the header as the public input so that it’s known to the relay contract. This proof is needed to efficiently prove the new Tron blocks and their transaction roots <em>to the relay contract</em>.</p>\n</li>\n<li>\n<p><em>The Relayer</em> obtains the finalized transaction from the Tron blockchain and generates a zero-knowledge proof of transaction inclusion against the transaction root. This proof is needed to efficiently prove the order fulfillment <em>to the swap contract</em>. Just like light client proofs, transaction proofs can be aggregated to minimize the costs of on-chain proof verification.</p>\n</li>\n<li>\n<p><em>The Relayer</em> submits these proofs to the respective smart contracts on the L2. Upon verification, the swap contract releases the funds to the <em>User</em> and allocates a small portion to the <em>Relayer</em> as compensation. In case of liveness failure, the <em>User</em> can generate and relay proofs themselves, removing the need for relayer fees.</p>\n</li>\n<li>\n<p><em>The Buyer</em> can exchange their acquired Tron USDT for USDC on the L2 through various means, including direct 1:1 exchange with issuers, and reinvest in the swap contract.</p>\n</li>\n</ol>\n<p>This system streamlines the user experience to just two primary actions: committing to the order on the destination chain and transferring Tron USDT to a specified address. The User receives the equivalent USDC on the L2 within approximately one minute. This system can even be used to accept payments in USDT Tron, requiring only a web browser with a connected wallet for order creation.</p>\n<p>For Buyers, liquidity provision is fully automated. They create a Tron wallet, and supply USDC with specified Tron address to the smart contract. When their liquidity is out, it is automatically removed. Received USDT can be spent and exchanged back to USDC at any time. This system is expected to provide higher exchange rates than the existing P2P platforms, as the rate is competitive and there’s no need to cover the costs of KYC and other web2-specific processes.</p>\n<p>Relayers require only a server running relayer and ZK prover software. As relayers do not serve as the source of trust, this role can be either permissionless or delegated to the development team, provided self-proposing functionality is supported.</p>\n<h1><a name=\"zk-light-client-poc-6\" class=\"anchor\" href=\"https://ethresear.ch#zk-light-client-poc-6\"></a>ZK Light Client PoC</h1>\n<p>We’ve written a proof-of-concept of ZK light verification of Tron blocks in Noir language. It receives the previous and new block IDs with a transaction root as the public input, and the block header as the private input. It does not implement round-robin checks and election mechanism for efficiency purposes, and the SR set is hardcoded into the circuit. The proof is generated in about 35 seconds on an M1 machine.</p>\n<p>For the production version of this system, it may be necessary to rewrite the circuits to STARK-based proof systems and/or implement GPU proving to improve proving speed.</p>\n<p>The source code can be found here: <a href=\"https://github.com/alexhooketh/zktron\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - alexhooketh/zktron: ZK light client for Tron Network written in Noir</a></p>\n<h1><a name=\"conclusion-7\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-7\"></a>Conclusion</h1>\n<p>The proposed P2P ZK Light Client Bridge between Tron and Ethereum L2s is a significant advancement in addressing the problems of Tron Network in a Web3 way. By leveraging zero-knowledge proofs and efficient light client verification, this system offers a trust-minimized, permissionless, and cost-effective solution for bridging the gap between these two prominent blockchain ecosystems.</p>\n<p>This bridge design addresses several key challenges:</p>\n<ol>\n<li>It mitigates the risks associated with the centralization of the Tron Network by providing users with seamless access to the more decentralized and robust Ethereum ecosystem.</li>\n<li>It significantly reduces transaction costs for users, particularly benefiting those in developing economies who rely heavily on USDT for daily transactions and value storage.</li>\n<li>It enhances liquidity and interoperability between Tron and Ethereum, expanding Ethereum ecosystem to the areas of extensive Tron usage.</li>\n<li>It maintains a high level of security through the use of ZK proofs, ensuring the integrity of cross-chain transactions without compromising on efficiency.</li>\n</ol>\n<p>By bridging these ecosystems, we can solve the problem of increasing influence of Tron, taking a significant step towards realizing the vision of a truly global, decentralized financial infrastructure that can benefit users across all economic backgrounds.</p>\n<p>We welcome feedback and questions from the community. Feel free to leave your comments, suggestions, or inquiries in the comments section below. <strong>Thank you for reading.</strong></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/p2p-zk-light-client-bridge-between-tron-and-ethereum-l2s/19931\">Read full topic</a></p>","link":"https://ethresear.ch/t/p2p-zk-light-client-bridge-between-tron-and-ethereum-l2s/19931","pubDate":"Fri, 28 Jun 2024 20:03:10 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19931"},"source":{"@url":"https://ethresear.ch/t/p2p-zk-light-client-bridge-between-tron-and-ethereum-l2s/19931.rss","#text":"P2P ZK Light Client Bridge between Tron and Ethereum L2s"}},{"title":"Orbit SSF: solo-staking-friendly validator set management for SSF","dc:creator":"fradamt","category":"Economics","description":"<p><em>Much of the post came together during a week of in-person whiteboarding with <a href=\"https://rig.ethereum.org\" rel=\"noopener nofollow ugc\">RIG</a> and wannabe RIGs like myself, Ansgar and Toni. Thanks in particular to <a href=\"https://twitter.com/weboftrees\" rel=\"noopener nofollow ugc\">Anders</a>, <a href=\"https://twitter.com/adietrichs\" rel=\"noopener nofollow ugc\">Ansgar</a>, <a href=\"https://twitter.com/barnabemonnot\" rel=\"noopener nofollow ugc\">Barnabé</a>, <a href=\"https://twitter.com/soispoke\" rel=\"noopener nofollow ugc\">Thomas</a> for continued discussions and feedback, again to Anders for most of the ideas around individual incentives, and again to Barnabé for the diagrams about finality. The core idea that the post explores was originally proposed by Vitalik in <a href=\"https://ethresear.ch/t/sticking-to-8192-signatures-per-slot-post-ssf-how-and-why/17989#approach-3-rotating-participation-ie-committees-but-accountable-5\">this post</a></em>.</p>\n<h2><a name=\"where-we-are-1\" class=\"anchor\" href=\"https://ethresear.ch#where-we-are-1\"></a>Where we are</h2>\n<p>The <a href=\"https://notes.ethereum.org/@vbuterin/single_slot_finality\" rel=\"noopener nofollow ugc\">Single Slot Finality (SSF) roadmap</a> has <a href=\"https://notes.ethereum.org/@vbuterin/single_slot_finality#What-are-the-key-questions-we-need-to-solve-to-implement-single-slot-finality\" rel=\"noopener nofollow ugc\">three main components</a>:</p>\n<ul>\n<li>Consensus algorithm</li>\n<li>Signature aggregation</li>\n<li>Validator set economics</li>\n</ul>\n<p>Since the previously linked post, there has been a lot of progress on the consensus algorithm side, with <a href=\"https://ethresear.ch/t/a-simple-single-slot-finality-protocol/14920\">multiple</a> <a href=\"https://arxiv.org/abs/2310.11331\" rel=\"noopener nofollow ugc\">candidate</a> <a href=\"https://notes.ethereum.org/@fradamt/chained-3sf\" rel=\"noopener nofollow ugc\">protocols</a> and <a href=\"https://github.com/fradamt/ssf/tree/main/high_level\" rel=\"noopener nofollow ugc\">the beginning of a specification effort</a>. There have also been some effort to explore the design space of signature aggregation, both with a <a href=\"https://ethresear.ch/t/horn-collecting-signatures-for-faster-finality/14219\">networking</a> <a href=\"https://ethresear.ch/t/flooding-protocol-for-collecting-attestations-in-a-single-slot/17553\">focus</a> and a <a href=\"https://ethresear.ch/t/signature-merging-for-large-scale-consensus/17386\">cryptographic focus</a>. Still, we are likely not close to being able to reliably aggregate millions of signatures per slot, without increasing the slot time or validator requirements significantly. On the staking economics side, there has been lots of work over the last year, but for the most part focused on understanding <a href=\"https://mirror.xyz/barnabe.eth/v7W2CsSVYW6I_9bbHFDqvqShQ6gTX3weAtwkaVAzAL4\" rel=\"noopener nofollow ugc\">liquid staking</a> and <a href=\"https://mirror.xyz/barnabe.eth/96MD_A194uXLLjcOWePW3O2N3P-JG-SHtNxU0b40o50\" rel=\"noopener nofollow ugc\">restaking</a>, and on <em>stake</em> capping, i.e., constraining the amount of ETH staked (if you’re reading this, you’re probably already at least at a surface level familiar with the issuance conversation, in which case you might want to dig deeper and check out these posts <a href=\"https://ethresear.ch/t/properties-of-issuance-level-consensus-incentives-and-variability-across-potential-reward-curves/18448/1\">[1]</a> <a href=\"https://ethresear.ch/t/endgame-staking-economics-a-case-for-targeting/18751\">[2]</a>). Here, we are instead interested in <em>validator capping</em>, i.e., constraining the amount of validator identities in the system, or at least the ones actively participating at any given time, to satisfy technical constraints. Some ideas in this direction can be found in this <a href=\"https://ethresear.ch/t/sticking-to-8192-signatures-per-slot-post-ssf-how-and-why/17989#what-would-8192-signatures-per-slot-under-ssf-look-like-2\">recent post</a>, and in fact <a href=\"https://ethresear.ch/t/sticking-to-8192-signatures-per-slot-post-ssf-how-and-why/17989#approach-3-rotating-participation-ie-committees-but-accountable-5\">approach 3</a> from the post provides the foundation for this post. Moreover, a recent important development is that <a href=\"https://eips.ethereum.org/EIPS/eip-7251\" rel=\"noopener nofollow ugc\">EIP-7251 (MaxEB)</a> has been included in the <a href=\"https://github.com/ethereum/consensus-specs/blob/a3a6c916b236c9e8904090303f0c38ae49db1002/specs/electra/beacon-chain.md\" rel=\"noopener nofollow ugc\">Electra fork</a>. Validator effective balances will be allowed to be as high as 2048 ETH, enabling staking pools to <a href=\"https://notes.ethereum.org/@fradamt/maxeb-consolidation\" rel=\"noopener nofollow ugc\">consolidate their validators</a>, a new capability which we can leverage in our designs.</p>\n\n<h2><a name=\"goals-2\" class=\"anchor\" href=\"https://ethresear.ch#goals-2\"></a>Goals</h2>\n<p>With the goal of finding a design which can make its way into the protocol in a reasonable timeline, we are here going to focus on solutions that <em>do not</em> rely on large improvements in the signature aggregation process. We also do not think it is very realistic to propose significant increases of the slot time, which have many externalities. Given these technical constraints, let’s focus on a minimal set of properties that we ideally want to achieve:</p>\n<ul>\n<li><strong>Validator capping</strong>: at most <span class=\"math\">N</span> <em>active</em> validators at a time. For example, <span class=\"math\">N = 2^{15} \\approx 32k</span>, which we know we can handle because it is the size of a committee today. If we wanted to completely remove attestation aggregation, we would likely need to drop this number to a few thousands.</li>\n<li><strong>Solo staking viability</strong>: staking with 32 ETH is <em>guaranteed</em> to still be possible, <em>and</em> the solo staking yield should still not compare unfavorably to delegated staking yields.</li>\n<li><strong>High eventual economic security</strong>: More than <span class=\"math\">D_f</span> stake provides economic security, at least <em>eventually</em>. For example <span class=\"math\">D_f = 20M</span> ETH. Ideally, we also do not have to wait longer than today for it (two epochs).</li>\n<li><strong>Fast finality</strong>: at least <em>some</em> amount of economic security is available shortly after a block is proposed (think: 10 to 30 seconds, not over 10 minutes).</li>\n<li><strong>Optimally secure consensus protocol</strong>: the consensus protocol is (provably) resilient to ~1/2 adversaries under network synchrony, and 1/3 under partial synchrony.</li>\n</ul>\n<p>Without solo staking viability as defined here, we could simply raise the minimum balance, or go with approaches that allow for a low minimum balance but do not <em>guarantee</em> it, for example in the face of large stakers intentionally splitting their stake. Such solutions would likely have to lean on <a href=\"https://ethresear.ch/t/sticking-to-8192-signatures-per-slot-post-ssf-how-and-why/17989#approach-1-go-all-in-on-decentralized-staking-pools-3\">decentralized staking pools</a> or <a href=\"https://ethresear.ch/t/sticking-to-8192-signatures-per-slot-post-ssf-how-and-why/17989#approach-2-two-tiered-staking-4\">two-tier staking</a> to preserve the accessible nature of staking as it is today, or perhaps even to carve out a more tailored role for smaller stakers, as is suggested by <a href=\"https://ethresear.ch/t/unbundling-staking-towards-rainbow-staking/18683\">rainbow staking</a>. While there is merit to these approaches and we believe they (and more generally the role of solo staking/broad consensus participation) deserve further exploration, we are choosing here to only explore designs that are compatible with this narrow interpretation of solo staking viability.</p>\n<h2><a name=\"overview-of-approaches-3\" class=\"anchor\" href=\"https://ethresear.ch#overview-of-approaches-3\"></a>Overview of approaches</h2>\n<p>Validator capping, solo staking viability and high economic security immediately raise an issue: high economic security requires millions of ETH to participate in finalizing and a minimum balance of 32 ETH then implies a worst case of hundreds of thousands or millions of validators (~1M at the time of writing), which seems to conflict with validator capping. There are two main classes of approaches that attempt to deal with this problem:</p>\n<ul>\n<li><strong>Validator set rotation</strong>: the full validator set is allowed to be large, but only a subset is actively participating at any given time.</li>\n<li><strong>Economic validator set capping</strong>: the size of the full validator set is constrained through economic incentives. To <em>guarantee</em> a small validator set size we can for example <a href=\"https://notes.ethereum.org/@vbuterin/single_slot_finality#Economic-capping-of-total-validator-count\" rel=\"noopener nofollow ugc\">reduce issuance past the target validator count</a>. However, this leaves all stakers open to a cheap griefing attack, where a small amount of stake can have a disproportionate negative impact on issuance.</li>\n</ul>\n<p>In this post we are not going to focus on the latter approach <em>in isolation</em>, but we are going to propose a way to combine economic incentives with a form of validator set rotation.</p>\n<h2><a name=\"validator-set-rotation-4\" class=\"anchor\" href=\"https://ethresear.ch#validator-set-rotation-4\"></a>Validator set rotation</h2>\n<p>The current protocol also has to deal with the issue we have outlined in the previous section, and the chosen “solution” is precisely validator set rotation: only 1/32 of the validator set votes in any given slot. This design <a href=\"https://notes.ethereum.org/@vbuterin/serenity_design_rationale#Why-32-ETH-validator-sizes\" rel=\"noopener nofollow ugc\">trades off finality time</a>, and fails to satisfy our desired property of fast finality.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/3/83646288afbace1b452239618b34e83319531d0a.png\" data-download-href=\"https://ethresear.ch/uploads/default/83646288afbace1b452239618b34e83319531d0a\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/3/83646288afbace1b452239618b34e83319531d0a_2_690x388.png\" alt=\"\" data-base62-sha1=\"iKlCA32LycAi46S9VPKqAkwVfcK\" role=\"presentation\" width=\"690\" height=\"388\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/3/83646288afbace1b452239618b34e83319531d0a_2_690x388.png, https://ethresear.ch/uploads/default/optimized/3X/8/3/83646288afbace1b452239618b34e83319531d0a_2_1035x582.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/3/83646288afbace1b452239618b34e83319531d0a_2_1380x776.png 2x\" data-dominant-color=\"F2EBEB\"></a></div><p></p>\n<p>Let’s then explore whether we can use validator set rotation without giving up on fast finality or other properties.</p>\n<h3><a name=\"fast-rotation-5\" class=\"anchor\" href=\"https://ethresear.ch#fast-rotation-5\"></a>Fast rotation</h3>\n<p>One way to go about validator set rotation is to have committees which rotate fast, as in the current protocol. In order to avoid a high time-to-finality, we can use a different consensus protocol allowing for <a href=\"https://ethresear.ch/t/a-model-for-cumulative-committee-based-finality/10259\">committee-based finality</a>, i.e., such that even a committee can provide economic security proportional to its stake. In fact, the post linked above deals with <em>cumulative</em> committee-based finality, where the consensus protocol even allows for accumulation of economic security over multiple finalizations, such that <span class=\"math\">k</span> committees finalizing in a row results in <span class=\"math\">k</span> times the economic security that a single committee can provide. We get two birds with one stone, getting both fast (partial) finality and full <em>eventual</em> economic security. In particular, we could have full finality <em>in the same time as today</em> (which gives enough time for each committee to do its own finalization by voting twice), but with the big improvement that economic security accrues every slot, rather than all at once after two epochs.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/6/b6816fefcf5021bb672ed76029c844d1f311047d.png\" data-download-href=\"https://ethresear.ch/uploads/default/b6816fefcf5021bb672ed76029c844d1f311047d\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/6/b6816fefcf5021bb672ed76029c844d1f311047d_2_690x388.png\" alt=\"\" data-base62-sha1=\"q2wduFO5R7MYGIGZUtJuCPBHYHb\" role=\"presentation\" width=\"690\" height=\"388\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/6/b6816fefcf5021bb672ed76029c844d1f311047d_2_690x388.png, https://ethresear.ch/uploads/default/optimized/3X/b/6/b6816fefcf5021bb672ed76029c844d1f311047d_2_1035x582.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/6/b6816fefcf5021bb672ed76029c844d1f311047d_2_1380x776.png 2x\" data-dominant-color=\"F0E9E9\"></a></div><p></p>\n<p>This seems like a clear improvement on today’s protocol, so why are we not just doing it? An answer comes from the consensus protocol design space: it is not clear at this point how to have an optimally secure dynamically available protocol with <em>fast</em> rotating committees. In fact, much of the problems with the LMD-GHOST component of today’s protocol, or at least the <a href=\"https://ethresear.ch/t/reorg-resilience-and-security-in-post-ssf-lmd-ghost/14164#introduction-2\">fundamental ones</a>, come precisely from the interaction of multiple committees. In short, an adversary can accumulate weight across multiple committees, and use it to reorg honest blocks that have a single committee supporting them.</p>\n<p>For interested readers, there actually are optimally secure dynamically available consensus protocols that allow for committees (<a href=\"https://arxiv.org/abs/2209.03255\" rel=\"noopener nofollow ugc\">[1]</a> <a href=\"https://eprint.iacr.org/2022/1448.pdf\" rel=\"noopener nofollow ugc\">[2]</a> for example), but all known ones suffer from catastrophic failures under even short-lived asynchrony (<a href=\"https://arxiv.org/abs/2302.11326\" rel=\"noopener nofollow ugc\">[1]</a> <a href=\"https://arxiv.org/abs/2309.05347\" rel=\"noopener nofollow ugc\">[2]</a>). It is not known whether this is a fundamental limitation, but at least so far we do not know any protocol that gets around it.</p>\n<h3><a name=\"slow-rotation-6\" class=\"anchor\" href=\"https://ethresear.ch#slow-rotation-6\"></a>Slow rotation</h3>\n<p>There is however a simple way to avoid the problem altogether: giving up on <em>fast</em> committee rotation, and instead having a committee which rotates out slowly, for example by replacing a small percentage of it every slot. The upshot is that such a committee effectively acts as a full validator set, in the sense that its actions do not interact with those of other committees, as would be the case with fast rotation. We can in principle take any protocol that works when the whole validator set is able to participate at once, and make it work with this mechanism by slowing down the rotation sufficiently.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/c/4c21c0ca0871b1e7c6440325b3a3174df016793f.png\" data-download-href=\"https://ethresear.ch/uploads/default/4c21c0ca0871b1e7c6440325b3a3174df016793f\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/c/4c21c0ca0871b1e7c6440325b3a3174df016793f_2_690x389.png\" alt=\"\" data-base62-sha1=\"aRuBpte10OnGqL9pyadMTWF1PXx\" role=\"presentation\" width=\"690\" height=\"389\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/c/4c21c0ca0871b1e7c6440325b3a3174df016793f_2_690x389.png, https://ethresear.ch/uploads/default/optimized/3X/4/c/4c21c0ca0871b1e7c6440325b3a3174df016793f_2_1035x583.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/c/4c21c0ca0871b1e7c6440325b3a3174df016793f_2_1380x778.png 2x\" data-dominant-color=\"F0E8E9\"></a></div><p></p>\n<p>At a first glance, one obvious downside is that a full rotation of the validator set would be much slower than today, and thus so would finality. However, we could do things a bit differently, by decoupling the committee which votes for the available chain (LMD-GHOST votes) from those which vote for finality (Casper FFG votes). Only LMD-GHOST has problems with fast committee rotation, so we could have a slowly rotating committee whose votes count for LMD-GHOST and in parallel also fast rotating committees whose votes accumulate economic security over time, up to full finality in no more than today’s two epochs.</p>\n<p>Besides some amount of extra complexity in the consensus protocol, one remaining downside is that we leave a single committee “in charge” of LMD-GHOST for extended periods of time. Moreover, while linearly accumulating finality is a strict improvement over today’s step function finality, we do not achieve something even stronger, namely getting a high level of economic security immediately. This is of course impossible to achieve given the constraints we have laid out, <em>unless we make some assumptions about the stake distribution</em>, for example that it is <a href=\"https://notes.ethereum.org/@vbuterin/single_slot_finality#The-good-news-gains-from-enabling-voluntary-validator-balance-consolidation\" rel=\"noopener nofollow ugc\">Zipfian</a>, or anyway such that a large portion of the stake is concentrated in the first few thousand entities.</p>\n\n<h2><a name=\"orbit-ssf-stable-core-rotating-periphery-7\" class=\"anchor\" href=\"https://ethresear.ch#orbit-ssf-stable-core-rotating-periphery-7\"></a>Orbit SSF: Stable core, rotating periphery</h2>\n<p>Our starting point is <a href=\"https://ethresear.ch/t/sticking-to-8192-signatures-per-slot-post-ssf-how-and-why/17989#approach-3-rotating-participation-ie-committees-but-accountable-5\">approach 3 from this post</a>, where validators are (roughly) sampled by balance, so that validators with a lot of stake are always in the validator set. Contrast this with the previously considered validator set rotation approaches where validators were (implicitly) sampled by indices, as we do today, which results in each committee having small weight regardless of what the stake distribution looks like.</p>\n<p>We then consider adding consolidation incentives, to have stronger guarantees about the level of finality that we can reach with a single committee. The rotating parts of the committee can then rotate slowly, and we do not need to take on the extra consensus complexity of decoupling voting for the available chain and for the finality gadget. Moreover, there is never a small committee (in terms of stake) in charge of a critical consensus component: at all times, we can expect the active validator set to hold a meaningful fraction of the whole stake.</p>\n<h3><a name=\"active-validator-set-management-8\" class=\"anchor\" href=\"https://ethresear.ch#active-validator-set-management-8\"></a>Active validator set management</h3>\n<p>There are two key components here:</p>\n<ul>\n<li><em>Active validator set selection</em>: We set a stake threshold <span class=\"math\">T</span> (in principle it could also be set dynamically), and then define the probability of validator with stake <span class=\"math\">S</span> to be sampled in the active set to be <span class=\"math\">p(S) = \\min(\\frac{S}{T}, 1) = \n\\begin{cases}\n\\frac{S}{T} &amp; S \\le T \\\\ \n1 &amp; S \\ge T \n\\end{cases}</span><br>\nA validator with stake <span class=\"math\">S \\le T</span> is selected with probability <span class=\"math\">\\frac{S}{T}</span> proportional to its stake, whereas validators with stake <span class=\"math\">S \\ge T</span> are <em>always</em> in the validator set. The idea here is of course that it is helpful to have a stable core of large validators always in the active set, because they contribute a lot of economic security but still only add the same load as any other validator.</li>\n<li><em>Reward adjustment</em>: We adjust attestation rewards so that all validators still get compensated proportionally to their stake, regardless of whether they fall below or above the threshold <span class=\"math\">T</span>. To define the reward function, we take as reference the maximum attestation reward <span class=\"math\">R</span> that the protocol gives to a validator with stake <span class=\"math\">T</span>, for a single attestation (<span class=\"math\">R</span> can of course vary depending on the overall issuance level). Given <span class=\"math\">R</span>, the maximum reward for an attestation by a validator with stake <span class=\"math\">S</span> is <span class=\"math\">r(S) = R\\cdot\\max(1, \\frac{S}{T}) = \n\\begin{cases} \nR &amp; S \\le T \\\\\nR \\cdot \\frac{S}{T} &amp;S \\ge T\n\\end{cases}</span><br>\nOverall, the <em>expected</em> rewards of a validator with stake <span class=\"math\">S</span> are then <span class=\"math\">p(S)\\cdot r(S) = R\\cdot\\frac{S}{T} = \\frac{R}{T} \\cdot S</span>. In other words, <span class=\"math\">\\frac{R}{T}</span> per unit of stake, regardless of how it is distributed.  To help visualize this, here’s a plot of <span class=\"math\">p(S)</span>, <span class=\"math\">r(S)</span> and <span class=\"math\">p(S)\\cdot r(S)</span>, for <span class=\"math\">R = 2</span> (arbitrary value just for the plot) and <span class=\"math\">T = 1024</span>. Validators with less than <span class=\"math\">T</span> stake do have higher variance, because they only participate <span class=\"math\">\\frac{S}{T}</span> of the time, but over longer periods of time the variance will still very low, since attestation rewards are constant and very frequent.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/9/69e8f45397940a38df6d146660314fa29c2f790c.png\" data-download-href=\"https://ethresear.ch/uploads/default/69e8f45397940a38df6d146660314fa29c2f790c\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/9/69e8f45397940a38df6d146660314fa29c2f790c_2_690x355.png\" alt=\"\" data-base62-sha1=\"f6VeGDwB2D2UCdmEsfim0SsEgoY\" role=\"presentation\" width=\"690\" height=\"355\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/9/69e8f45397940a38df6d146660314fa29c2f790c_2_690x355.png, https://ethresear.ch/uploads/default/optimized/3X/6/9/69e8f45397940a38df6d146660314fa29c2f790c_2_1035x532.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/6/9/69e8f45397940a38df6d146660314fa29c2f790c_2_1380x710.png 2x\" data-dominant-color=\"FCFBFC\"></a></div><p></p>\n<h4><a name=\"validator-capping-9\" class=\"anchor\" href=\"https://ethresear.ch#validator-capping-9\"></a>Validator capping</h4>\n<p>We can easily compute the expected size of an active validator set <span class=\"math\">V_a</span> that is sampled this way from a full validator set <span class=\"math\">V</span> whose total deposit size is <span class=\"math\">D</span>:<br>\n<span class=\"math\">\\mathbb{E}[|V_a|] = \\sum_{i \\in V} p(S_i) = \\sum_{i \\in V} \\min(\\frac{S_i}{T}, 1) = \\frac{1}{T}\\sum_{i \\in V} \\min(S_i, T) \\le \\frac{1}{T}\\sum_{i \\in V} S_i = \\frac{D}{T}</span></p>\n<p>Basically, any validator with stake <span class=\"math\">S \\le T</span> contributes exactly <span class=\"math\">\\frac{S}{T}</span> to the expectation. Crucially, these contribution scale linearly in <span class=\"math\">S</span>: the only effect of splitting up to <span class=\"math\">T</span> stake into small validators is to increase the variance of the active validator set size, without affecting the expectation. As for validators with stake <span class=\"math\">S &gt; T</span>, they even decrease the expectation compared to the worst case, which is <span class=\"math\">\\frac{D}{T}</span>, equal to the full validator set size if all validators had <span class=\"math\">T</span> stake.</p>\n<p>For example, we can set <span class=\"math\">T = 4096</span> ETH, giving us a <em>maximum</em> expected active validator set size of <span class=\"math\">\\frac{120M}{4096} \\approx 30k</span>. If we were to employ stake capping (we will later discuss how to do so in this context) to ensure (or have high assurances) that <span class=\"math\">D</span> is bounded by (for example) <span class=\"math\">2^{25}M</span> ETH, we could even set <span class=\"math\">T = 1024</span> and still have an expected active validator set size of at most ~32k. There can of course be deviations from this expected size, but with high probability the actual active validator set size would always fall within reasonably narrow bounds, so we can have very strong guarantees about the maximum load that we would need to be able to handle. We look at this in more detail <a href=\"https://ethresear.ch#Validator-capping-active-validator-set-variance\">in the appendix</a>.</p>\n<h3><a name=\"incentivizing-consolidation-10\" class=\"anchor\" href=\"https://ethresear.ch#incentivizing-consolidation-10\"></a>Incentivizing consolidation</h3>\n<p>Let <span class=\"math\">D_a</span> be the active deposit size, i.e., the total stake of the active validator set, contrasted with the total deposit size <span class=\"math\">D</span>, the stake of the whole validator set. Optimistically, as long as there is sufficient consolidation, <span class=\"math\">D_a</span> will be high, a clear improvement over the <a href=\"https://ethresear.ch#Slow-rotation\">previous slow rotation approach</a>. Still, we would like this to be more than an optimistic property. The question we are left to answer is then how we can ensure, or at least highly incentivize, a high <span class=\"math\">\\frac{D_a}{D}</span> ratio. For example, we want to prevent that all validators keep 32 ETH balances (no one consolidates), which would result in <span class=\"math\">\\mathbb{E}[D_a] = \\frac{32}{T} D</span>, e.g., only <span class=\"math\">\\frac{D}{32}</span> with <span class=\"math\">T = 1024</span>. With today’s <span class=\"math\">D = 32M</span> ETH, the expected active deposit size would only be <span class=\"math\">1M</span> ETH. On the other hand, we do not want to reward consolidated validators disproportionately compared to small validators.</p>\n<p>We explore two complementary approaches:</p>\n<ul>\n<li><strong>Collective consolidation incentives</strong>, growing the size of the pie for the whole validator set when the set is more consolidated.</li>\n<li><strong>Individual consolidation incentives</strong>, accounting for the extra risk accruing from further individual consolidation.</li>\n</ul>\n<h4><a name=\"collective-consolidation-incentives-11\" class=\"anchor\" href=\"https://ethresear.ch#collective-consolidation-incentives-11\"></a>Collective consolidation incentives</h4>\n<p>The first approach we explore is to reward <em>everyone</em> for consolidation, spreading out the benefits beyond the consolidating validators so as to maintain rewards undifferentiated, while still providing an incentive to consolidate.</p>\n<p>A first proposal in this direction is to set the rewards based on <span class=\"math\">D_a</span>, rather than <span class=\"math\">D</span>. For example, we could use the same issuance curve <span class=\"math\">I</span> we use today, but where the deposit size used as input is <span class=\"math\">D_a</span> instead of <span class=\"math\">D</span>: the cumulative issuance would then be <span class=\"math\">I(D_a)</span>, and the resulting yield per unit of stake <span class=\"math\">\\frac{I(D_a)}{D}</span>. Notably, <span class=\"math\">I</span> is monotonically increasing, so, whenever <span class=\"math\">D_a &lt; D</span>, the cumulative issuance <span class=\"math\">I(D_a)</span> is less than the maximum issuance <span class=\"math\">I(D)</span> that would be possible at this deposit size, with full consolidation. The yield gap <span class=\"math\">\\frac{I(D) - I(D_a)}{D}</span> between the current yield and the yield with full consolidation then acts as a consolidation incentive.</p>\n<p>Consolidation incentives aside, another way to think about this proposal is that we simply pay for the economic security we get, at least from a single committee: if today our security budget for <span class=\"math\">X</span> amount of deposits is <span class=\"math\">Y</span>, as expressed by <span class=\"math\">I(X) = Y</span>, we would now be wiling to pay <span class=\"math\">Y</span> in order to get <span class=\"math\">X</span> amount of <em>active</em> deposits. To get an idea of what this looks like in practice, here’s a color plot of the yield for <span class=\"math\">(D, \\frac{D_a}{D})</span> (starting from <span class=\"math\">D = 1</span> to help the visualization).</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/f/afced2f656e5db107f33e22007ab6b5fdd5859fc.png\" data-download-href=\"https://ethresear.ch/uploads/default/afced2f656e5db107f33e22007ab6b5fdd5859fc\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/f/afced2f656e5db107f33e22007ab6b5fdd5859fc_2_623x500.png\" alt=\"\" data-base62-sha1=\"p5gFTZPPTproPBqzWH6pZ7NieCM\" role=\"presentation\" width=\"623\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/f/afced2f656e5db107f33e22007ab6b5fdd5859fc_2_623x500.png, https://ethresear.ch/uploads/default/original/3X/a/f/afced2f656e5db107f33e22007ab6b5fdd5859fc.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/f/afced2f656e5db107f33e22007ab6b5fdd5859fc.png 2x\" data-dominant-color=\"7D689B\"></a></div><p></p>\n<h4><a name=\"individual-consolidation-incentives-12\" class=\"anchor\" href=\"https://ethresear.ch#individual-consolidation-incentives-12\"></a>Individual consolidation incentives</h4>\n<p><em>Credit to Anders for raising the issue of differentiated risk and for proposing the kind of individual incentives we explore here</em></p>\n<p>Though our exploration of collective incentives has found them to be decently strong, there is one factor we have not considered: validators with stake <span class=\"math\">\\ll T</span> have a better risk profile than validators with stake <span class=\"math\">\\ge T</span>. This is because they are in the active only a fraction of the time, which means two things:</p>\n<ul>\n<li>In a staking pool, accidental slashing caused by a bad setup can be caught early with only a fraction of the validators being subject to it</li>\n<li>Tail risk of mass slashing or leaking, for example due to client bugs, is much lower, as in many cases this would only affect the active set. For a staking pool, this effectively caps the pool’s slashing exposure to a fraction of the stake, in almost all scenarios.</li>\n</ul>\n<p>We might then be unwilling to solely rely on collective incentives, which cannot properly account for the risk differentiation between consolidated and non consolidated validators, itself an individual anti-consolidation incentive. On the other hand, we are hesitant to use individual consolidation incentives, because differentiated rewards threaten our goal of solo staking viability. Faced with this dilemma, a potential approach to mitigate the consequences on solo staking viability is to try to set individual consolidation incentives that just offset the added risk from consolidation. The goal is for risk-adjusted rewards to be roughly equivalent for consolidated and non consolidated validators, so that the available choices of higher risk, higher reward and lower risk, lower rewards are similarly attractive. In particular, it is then at least in principle possible (though not guaranteed) to have a validator set where both setups coexist, so that we can aspire to both have a high consolidation ratio and solo staking viability.</p>\n<p>Concretely, here’s a way we could go about this. Given the base yield <span class=\"math\">y(D_a, D) = \\frac{I(D_a, D)}{D}</span>, we can adjust the yield of a validator with <span class=\"math\">S</span> stake to be <span class=\"math\">y(D_a, D)(1 + \\frac{\\min(S,T)}{T}g(\\frac{D_a}{D}))</span>, where <span class=\"math\">g(x)</span> is decreasing and <span class=\"math\">g(1) = 0</span>. In other words, a validator with <span class=\"math\">S</span> stake gets additional <em>consolidation yield</em> <span class=\"math\">y_c(D_a, D, S) = \\frac{\\min(S,T)}{T}g(\\frac{D_a}{D})y(D_a, D)</span>, or equivalently its yield increases by a factor of <span class=\"math\">\\frac{\\min(S,T)}{T}g(\\frac{D_a}{D})</span>, up to <span class=\"math\">g(\\frac{D_a}{D})</span> for fully consolidated validators with <span class=\"math\">S = T</span>. This factor decreases as <span class=\"math\">\\frac{D_a}{D}</span> grows, because there are diminishing returns to further consolidation (same reason why the staking yield falls as the total deposit size grows). In particular, it falls all the way to <span class=\"math\">0</span> if <span class=\"math\">\\frac{D_a}{D}</span> goes to <span class=\"math\">1</span>, restoring the base yield <span class=\"math\">y(D_a, D)</span> for everyone, and generally making the rewards less and less differentiated as more consolidation occurs. The idea is that an equilibrium will be reached where <span class=\"math\">g(\\frac{D_a}{D})</span> just about compensates for the additional risk from consolidating, and further consolidation is not incentivized. We can even set <span class=\"math\">g</span> to reach <span class=\"math\">0</span> at some lower level of consolidation that we are happy with, leaving more space for staking with non consolidated validators to be economically viable. For example, if <span class=\"math\">g(0.8) = 0</span>, then a validator with 32 ETH gets the same yield, and less risk, as a validator with 1024 ETH, even if 20% of the stake is made up of 32 ETH validators.</p>\n<p>Let’s now look at a specific form of <span class=\"math\">g</span>. The simplest possible choice is a linear function, which is fully determined by <span class=\"math\">g(0)</span>, the initial yield increase factor when there is no consolidation at all. The function is then simply <span class=\"math\">g(x) = g(0)(1 - x)</span>. For example <span class=\"math\">g(x) = \\frac{1-x}{4}</span>, where the maximum yield increase is 25%. The extra yield of a validator with stake <span class=\"math\">S</span> is:<br>\n<span class=\"math\">y_c(D_a, D, S) = g(0)\\frac{\\min(S,T)}{T} \\cdot y(D_a, D) \\cdot (1 - \\frac{D_a}{D})</span></p>\n<p>Let’s see what this looks like in combination with the collective incentives introduced <a href=\"https://ethresear.ch#Collective-consolidation-incentives\">in the previous section</a>, where issuance is based on <span class=\"math\">D_a</span>, i.e., <span class=\"math\">y(D_a, D) = \\frac{I(D_a)}{D}</span>, and <span class=\"math\">I</span> is the current issuance curve <span class=\"math\">I(x) = c\\sqrt{x}</span>. The maximum consolidation yield, or the yield advantage of a consolidated validator over a regular one, is:</p>\n<p><span class=\"math\">y_c(D_a, D, S=T) = g(0) \\cdot y(D_a, D) (1 - \\frac{D_a}{D})  = \\\\\n= g(0) \\cdot c \\cdot \\frac{\\sqrt{D_a}}{D}(1 - \\frac{D_a}{D}) = \\\\ g(0) \\cdot c \\cdot \\frac{1}{\\sqrt{D_a}} \\frac{D_a}{D}(1 - \\frac{D_a}{D})</span></p>\n<p>The next color plot shows <span class=\"math\">y_c(D_a, D, S=T)</span> as a function of <span class=\"math\">\\frac{D_a}{D}</span> and <span class=\"math\">D_a</span>, for <span class=\"math\">g(0) = \\frac{1}{4}</span> (some portion on the upper left corner is infeasible, because <span class=\"math\">D</span> would be <span class=\"math\">&gt; 120M</span>). Horizontally, the function looks like <span class=\"math\">x(1-x)</span>: the consolidation yield is low at low consolidation levels, when collective incentives are strong, and at high consolidation levels, when we don’t have a strong requirement for more consolidation and we are more worried about the economic viability of running non consolidated validators. Vertically it looks like <span class=\"math\">\\frac{1}{\\sqrt{y}}</span>, with the consolidation yield slowly falling off as <span class=\"math\">D_a</span> grows and we have less need for consolidation in general, since the economic security of the active set is determined by <span class=\"math\">D_a</span>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/c/fc72bbb9885865bf40afe632e841d2ab2ff06e70.png\" data-download-href=\"https://ethresear.ch/uploads/default/fc72bbb9885865bf40afe632e841d2ab2ff06e70\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/c/fc72bbb9885865bf40afe632e841d2ab2ff06e70_2_586x500.png\" alt=\"\" data-base62-sha1=\"A1g8wBtX7JtPMjUEgSaM9LKu2pa\" role=\"presentation\" width=\"586\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/c/fc72bbb9885865bf40afe632e841d2ab2ff06e70_2_586x500.png, https://ethresear.ch/uploads/default/original/3X/f/c/fc72bbb9885865bf40afe632e841d2ab2ff06e70.png 1.5x, https://ethresear.ch/uploads/default/original/3X/f/c/fc72bbb9885865bf40afe632e841d2ab2ff06e70.png 2x\" data-dominant-color=\"766D9D\"></a></div><p></p>\n<p>We can of course very easily modify any such function <span class=\"math\">g</span> so that the incentives fall to <span class=\"math\">0</span> after a certain consolidation level <span class=\"math\">r_0 \\in [0,1]</span>, by replacing <span class=\"math\">g</span> with <span class=\"math\">\\tilde{g}(x) = \\max(g(\\frac{x}{r_0}), 0)</span>, which squeezes <span class=\"math\">g</span> in the range <span class=\"math\">[0,r_0]</span> and sets the consolidation yield to <span class=\"math\">0</span> afterwards. For example, this is the consolidation yield with <span class=\"math\">r_0 = 80\\%</span>, starting from the previous <span class=\"math\">g(x) = \\frac{1-x}{4}</span>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/b/1bf37fb8df61c4442a5054ccdaf8d55b02c351f9.png\" data-download-href=\"https://ethresear.ch/uploads/default/1bf37fb8df61c4442a5054ccdaf8d55b02c351f9\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/b/1bf37fb8df61c4442a5054ccdaf8d55b02c351f9_2_573x500.png\" alt=\"\" data-base62-sha1=\"3ZgAjvFoa0GKzhRXjujMwX2Pbnj\" role=\"presentation\" width=\"573\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/b/1bf37fb8df61c4442a5054ccdaf8d55b02c351f9_2_573x500.png, https://ethresear.ch/uploads/default/original/3X/1/b/1bf37fb8df61c4442a5054ccdaf8d55b02c351f9.png 1.5x, https://ethresear.ch/uploads/default/original/3X/1/b/1bf37fb8df61c4442a5054ccdaf8d55b02c351f9.png 2x\" data-dominant-color=\"736296\"></a></div><p></p>\n\n\n\n<h2><a name=\"appendix-13\" class=\"anchor\" href=\"https://ethresear.ch#appendix-13\"></a>Appendix</h2>\n<h3><a name=\"validator-capping-active-validator-set-variance-14\" class=\"anchor\" href=\"https://ethresear.ch#validator-capping-active-validator-set-variance-14\"></a>Validator capping: active validator set variance</h3>\n<p>Let’s also get an upper bound on the variance of the active validator set size. <span class=\"math\">\\mathbb{V}[|V_a|] = \\mathbb{V}[\\sum_{i\\in V} \\chi_{\\{i \\in V_a\\}}] = \\sum_{i\\in V} \\mathbb{V}[\\chi_{\\{i \\in V_a\\}}]</span>, since each validator is sampled independently. Moreover, <span class=\"math\">\\mathbb{V}[\\chi_{\\{i \\in V_a\\}}] = 0</span> whenever <span class=\"math\">S_i \\ge T</span>, since validator <span class=\"math\">i</span> is then always in <span class=\"math\">V_a</span>.<br>\nFor <span class=\"math\">S_i &lt; T</span>, the variance is <span class=\"math\">\\mathbb{V}[\\chi_{\\{i \\in V_a\\}}] = p(S_i)(1 - p(S_i)) = \\frac{S_i}{T}(1 - \\frac{S_i}{T})</span>, which is maximized when <span class=\"math\">p(S_i) = \\frac{1}{2}</span>, or equivalently when <span class=\"math\">S_i = \\frac{T}{2}</span>, in which case <span class=\"math\">\\mathbb{V}[\\chi_{\\{i \\in V_a\\}}] = \\frac{1}{4}</span>. Therefore, <span class=\"math\">\\mathbb{V}[|V_a|] \\le \\frac{1}{4}|V|</span>.</p>\n<p>Concretely, say we keep a minimum balance of 32 ETH, so that the maximum validator set size <span class=\"math\">|V|</span> is ~4M. The standard deviation of <span class=\"math\">|V_a|</span> is then bounded by <span class=\"math\">\\frac{\\sqrt{|V|}}{2} \\approx 1000</span>. The probability of deviations beyond 10k is then vanishingly low. We can then even explicitly cap the active validator set size, say at 40k validators. Doing so introduces only a tiny correlation to the sampling of different validators, because sampling is completely unaffected other than in the exceedingly rare events of massive deviations.</p>\n<h3><a name=\"collective-incentives-15\" class=\"anchor\" href=\"https://ethresear.ch#collective-incentives-15\"></a>Collective incentives</h3>\n<h4><a name=\"quantifying-the-individual-effect-of-collective-consolidation-incentives-16\" class=\"anchor\" href=\"https://ethresear.ch#quantifying-the-individual-effect-of-collective-consolidation-incentives-16\"></a>Quantifying the individual effect of collective consolidation incentives</h4>\n<p>Let’s look into the consolidation incentives a bit more quantitatively. While it is true that there is always some consolidation incentive whenever consolidation is at all possible, we should also consider how strong these incentives are for various stakers. In particular, the strength of the incentives varies based on how large a staker is, because a consolidation increases yield <em>for everyone</em>, not just for the party which peforms it. In other words, the gains of a consolidation are socialized, to avoid having a sort of consolidation reward, which would effectively disadvantage smaller validators that cannot access it. Consolidation incentives are therefore stronger the larger a validator is. On the one hand, this means that sufficiently large validators have a strong incentive to consolidate, which means we should expect <span class=\"math\">D_a</span> to always represent at least a meaningful portion of the total stake <span class=\"math\">D</span>. On the other hand, it means that small but still meaningfully sized stakers (e.g. 1%) might not be particularly incentivized to consolidate.</p>\n<p>To quantify this, let’s look at how much of an issuance increase there is in the event of the full consolidation of a staker having a fraction <span class=\"math\">p</span> of the total stake <span class=\"math\">D</span>, when <span class=\"math\">\\frac{D_a}{D} = r</span>. Here we assume that the stake <span class=\"math\">pD</span> in question is initially not consolidated at all, and neglect the small effect it has on <span class=\"math\">D_a</span> (e.g. if <span class=\"math\">T = 1024</span>, a minimum balance validator only increases <span class=\"math\">D_a</span> by 1/32 of its stake). Issuance, and thus yield, increases by a factor of <span class=\"math\">\\frac{I(D_a + pD) - I(D_a)}{I(D_a)} = \\frac{I((r + p)D)}{I(rD)} - 1</span>. Plugging in the definition of <span class=\"math\">I</span>, we can simplify this to <span class=\"math\">\\sqrt{1 + \\frac{p}{r}} - 1</span>. As expected, the consolidation incentives grow with <span class=\"math\">p</span>. It is also expected that they fall with <span class=\"math\">r</span>, since the issuance curve <span class=\"math\">I</span> is concave. As it turns out, there’s no dependency on <span class=\"math\">D</span> for this particular form of <span class=\"math\">I</span>.</p>\n<p>We now plot <span class=\"math\">100(\\sqrt{1 + \\frac{p}{r}} - 1)</span>, the <em>percentage</em> of yield increase that every validator experiences when a fraction <span class=\"math\">p</span> of the stake is fully consolidated, starting from <span class=\"math\">D_a = rD</span>. We restrict <span class=\"math\">r</span> to the range <span class=\"math\">[0.1, 1]</span> for ease of visualization, because the consolidation incentives blow up for <span class=\"math\">r</span> near <span class=\"math\">0</span>, as we would wish. Notice that the minimum <span class=\"math\">r</span> is actually <span class=\"math\">1/32</span> for <span class=\"math\">T = 1024</span> and minimum balance 32 ETH.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/c/ccde75a7bf33c1105849424713dceee8fd5b151d.png\" data-download-href=\"https://ethresear.ch/uploads/default/ccde75a7bf33c1105849424713dceee8fd5b151d\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/c/ccde75a7bf33c1105849424713dceee8fd5b151d_2_598x500.png\" alt=\"\" data-base62-sha1=\"tem1kroyOKaBQXYVjWJIVIa3wKN\" role=\"presentation\" width=\"598\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/c/ccde75a7bf33c1105849424713dceee8fd5b151d_2_598x500.png, https://ethresear.ch/uploads/default/original/3X/c/c/ccde75a7bf33c1105849424713dceee8fd5b151d.png 1.5x, https://ethresear.ch/uploads/default/original/3X/c/c/ccde75a7bf33c1105849424713dceee8fd5b151d.png 2x\" data-dominant-color=\"7B709D\"></a></div><p></p>\n<p>On the other hand, the <em>absolute</em> yield increase <span class=\"math\">100\\cdot\\frac{I(D_a + pD) - I(D_a)}{D_a}</span> is not independent of <span class=\"math\">D</span>. We plot it here specifically for <span class=\"math\">D = 30M</span> ETH. For lower values of <span class=\"math\">D</span>, the consolidation incentives only get stronger in absolute terms.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/3/53bb8a566b7597b844788fa776551f98df5b36c3.png\" data-download-href=\"https://ethresear.ch/uploads/default/53bb8a566b7597b844788fa776551f98df5b36c3\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/3/53bb8a566b7597b844788fa776551f98df5b36c3_2_567x500.png\" alt=\"\" data-base62-sha1=\"bWJqSdQAyBUtYmkNMf9epAepaw3\" role=\"presentation\" width=\"567\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/3/53bb8a566b7597b844788fa776551f98df5b36c3_2_567x500.png, https://ethresear.ch/uploads/default/original/3X/5/3/53bb8a566b7597b844788fa776551f98df5b36c3.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/3/53bb8a566b7597b844788fa776551f98df5b36c3.png 2x\" data-dominant-color=\"755A8F\"></a></div><p></p>\n<p>Finally, we also plot the yearly ETH returns from consolidation, <span class=\"math\">(I(D_a + pD) - I(D_a))\\cdot \\frac{p}{r}</span>, again for <span class=\"math\">D = 30M</span> ETH.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/8/68a7e7faee22708549d1b4c2738e1016de2cf661.png\" data-download-href=\"https://ethresear.ch/uploads/default/68a7e7faee22708549d1b4c2738e1016de2cf661\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/8/68a7e7faee22708549d1b4c2738e1016de2cf661_2_578x500.png\" alt=\"\" data-base62-sha1=\"eVPort1z1I8g2c6cJ9PLb4e9vDr\" role=\"presentation\" width=\"578\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/8/68a7e7faee22708549d1b4c2738e1016de2cf661_2_578x500.png, https://ethresear.ch/uploads/default/original/3X/6/8/68a7e7faee22708549d1b4c2738e1016de2cf661.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/8/68a7e7faee22708549d1b4c2738e1016de2cf661.png 2x\" data-dominant-color=\"7C5D91\"></a></div><p></p>\n<h4><a name=\"generalizing-collective-incentives-17\" class=\"anchor\" href=\"https://ethresear.ch#generalizing-collective-incentives-17\"></a>Generalizing collective incentives</h4>\n<p>When <span class=\"math\">I</span> is our current issuance curve, <span class=\"math\">I(x) = c\\sqrt{x}</span>, we have that <span class=\"math\">I(D_a) = c\\sqrt{D_a} = c \\sqrt{D} \\sqrt{\\frac{D_a}{D}} = I(D)\\sqrt{\\frac{D_a}{D}}</span>. In other words, we can think about the previous proposal as incentivizing a high <span class=\"math\">\\frac{D_a}{D}</span> ratio by directly a  applying an issuance penalty based on it. More generally, we can let the issuance be <span class=\"math\">I(D_a, D) = I(D) \\cdot \\delta(\\frac{D_a}{D})</span> for any <span class=\"math\">\\delta</span> such that <span class=\"math\">\\delta(0) = 0</span> and <span class=\"math\">\\delta(1) = 1</span>. With this, the yield increase from consolidating is exactly <span class=\"math\">\\frac{I(D)}{D} \\cdot (\\delta(r + p) - \\delta(p))</span>, i.e., a fraction <span class=\"math\">\\delta(r + p) - \\delta(r)</span> of the maximum yield available at deposit size <span class=\"math\">D</span>. The percentage yield increase is instead <span class=\"math\">\\frac{\\delta(r + p) - \\delta(r)}{\\delta(r)}</span>. The simplest case is <span class=\"math\">\\delta(r) = r</span>, where <span class=\"math\">I(D_a, D) = I(D) \\cdot \\frac{D_a}{D}</span>, in which case the yield increase is simply <span class=\"math\">p \\frac{I(D)}{D}</span>, constant in <span class=\"math\">r</span>, and the percentage yield increase is <span class=\"math\">\\frac{p}{r}</span>.</p>\n<p>In this form, we can more clearly separate the design of incentives to stake from that of incentives to consolidate the stake: <span class=\"math\">I(D)</span> provides the <em>maximum</em> possible incentive to stake at a given total deposit level <span class=\"math\">D</span>, while <span class=\"math\">\\delta</span> regulates the incentive to consolidate at a given ratio <span class=\"math\">\\frac{D_a}{D}</span>. We can for example have <span class=\"math\">I</span> being concave, as it is currently, but <span class=\"math\">\\delta</span> linear as in the previous example: the protocol then considers stake deposits to have diminishing returns, while it believes consolidation to be equally valuable regardless of where <span class=\"math\">\\frac{D_a}{D}</span> currently sits.</p>\n<h4><a name=\"discouragement-attacks-18\" class=\"anchor\" href=\"https://ethresear.ch#discouragement-attacks-18\"></a>Discouragement attacks</h4>\n<p>At any point, it is possible to increase <span class=\"math\">D</span> while barely increasing <span class=\"math\">D_a</span>, by activating validators with minimum balance. Thus, the issuance <span class=\"math\">I(D_a)</span> is approximately constant, but distributed to more stake. This is the same <a href=\"https://ethresear.ch/t/reward-curve-with-tempered-issuance-eip-research-post/19171#h-53-discouragement-attacks-32\">discouragement attack</a> that would be possible with a constant issuance curve, or with issuance capped at some maximum value, where the yield also decreases like <span class=\"math\">\\frac{1}{D}</span>. While worse than today, where it decreases like <span class=\"math\">\\frac{1}{\\sqrt{D}}</span>, this discouragement attack is nothing like the ultra cheap griefing vector that would arise with if we were to <a href=\"https://notes.ethereum.org/@vbuterin/single_slot_finality#Economic-capping-of-total-validator-count\" rel=\"noopener nofollow ugc\">use issuance to target a validator count</a>. For example, say we started reducing issuance past our ideal target of ~30k validators, and were to go negative at 40k. Then, activating a few thousands minimum balance validators, in the order of 0.01% to 0.1% of the stake, would be enough to make yields go negative. On the other hand, in the context of the discouragement attack we are considering here, reducing yield by a factor of <span class=\"math\">k</span> requires increasing the deposit size by a factor of <span class=\"math\">k</span>. For example, halving issuance when <span class=\"math\">D = </span> 20M requires depositing another 20M.</p>\n<h4><a name=\"stake-capping-19\" class=\"anchor\" href=\"https://ethresear.ch#stake-capping-19\"></a>Stake capping</h4>\n<p>If we were to set the issuance based on <span class=\"math\">D_a</span>, we would not be able to immediately adopt any issuance curve that reduces issuance past some deposit size, like the ones discussed <a href=\"https://ethresear.ch/t/reward-curve-with-tempered-issuance-eip-research-post/19171/1\">here</a> and <a href=\"https://ethresear.ch/t/endgame-staking-economics-a-case-for-targeting/18751\">here</a>. The reason for that is simple: if issuance goes down past a certain value of <span class=\"math\">D_a</span>, but it turns out that the yield at that point is still attractive, the incentives are such that <span class=\"math\">D</span> would still grow (more stake wants yield at these levels) while <span class=\"math\">D_a</span> would not (growing <span class=\"math\">D_a</span> lowers yield). In fact, instead of consolidation incentives, we end up having incentives for splitting up stake over multiple validators, so as to decrease <span class=\"math\">D_a</span> and keep it at the point of maximum issuance! Meanwhile, stake capping is not achieved, at least not any more than we would already achieve it by capping issuance at the maximum value, rather than having it decrease afterwards.</p>\n<p>If we did want to adopt some form of stake capping, we would then need to do things a bit differently. We could let the issuance be <span class=\"math\">I(D_a, D) = I(D_a) - f(D)</span>, where <span class=\"math\">f</span> acts to reduce the issuance past some critical <em>total</em> deposit size. Intuitively, the goal is to try to ensure two things at once: that we have enough <span class=\"math\">D_a</span>, and that we do not have too much <span class=\"math\">D</span>. For example:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/8/c83ba4769d0fc0c8db841d28c0210dfdd3ab53d2.png\" data-download-href=\"https://ethresear.ch/uploads/default/c83ba4769d0fc0c8db841d28c0210dfdd3ab53d2\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/8/c83ba4769d0fc0c8db841d28c0210dfdd3ab53d2_2_690x227.png\" alt=\"\" data-base62-sha1=\"szlhcoivv3C1f39gOu2D53j1GDM\" role=\"presentation\" width=\"690\" height=\"227\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/8/c83ba4769d0fc0c8db841d28c0210dfdd3ab53d2_2_690x227.png, https://ethresear.ch/uploads/default/optimized/3X/c/8/c83ba4769d0fc0c8db841d28c0210dfdd3ab53d2_2_1035x340.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/8/c83ba4769d0fc0c8db841d28c0210dfdd3ab53d2_2_1380x454.png 2x\" data-dominant-color=\"FCFBFB\"></a></div><p></p>\n<p>To help visualizing the effect of this further, here are the cumulative issuance and yield while holding <span class=\"math\">\\frac{D_a}{D} = 0.8</span>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/0/4/044c55ed764d7dfddac4c2df5be73783c8017800.png\" data-download-href=\"https://ethresear.ch/uploads/default/044c55ed764d7dfddac4c2df5be73783c8017800\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/0/4/044c55ed764d7dfddac4c2df5be73783c8017800_2_690x230.png\" alt=\"\" data-base62-sha1=\"C1spzZDMLzgSjTKbE8OiZDLzzy\" role=\"presentation\" width=\"690\" height=\"230\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/0/4/044c55ed764d7dfddac4c2df5be73783c8017800_2_690x230.png, https://ethresear.ch/uploads/default/optimized/3X/0/4/044c55ed764d7dfddac4c2df5be73783c8017800_2_1035x345.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/0/4/044c55ed764d7dfddac4c2df5be73783c8017800_2_1380x460.png 2x\" data-dominant-color=\"FBFBFD\"></a></div><p></p>\n<p>Finally, here is a color plot of the yield in the <span class=\"math\">(D, \\frac{D_a}{D})</span> space. <span class=\"math\">D</span> starts at 2 to help the visualization be effective.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/4/744db3435b9b033af6e55309e19068c435be1ffb.png\" data-download-href=\"https://ethresear.ch/uploads/default/744db3435b9b033af6e55309e19068c435be1ffb\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/4/744db3435b9b033af6e55309e19068c435be1ffb_2_690x463.png\" alt=\"\" data-base62-sha1=\"gARReogoNl8zna20D2vLzhJY3N1\" role=\"presentation\" width=\"690\" height=\"463\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/4/744db3435b9b033af6e55309e19068c435be1ffb_2_690x463.png, https://ethresear.ch/uploads/default/original/3X/7/4/744db3435b9b033af6e55309e19068c435be1ffb.png 1.5x, https://ethresear.ch/uploads/default/original/3X/7/4/744db3435b9b033af6e55309e19068c435be1ffb.png 2x\" data-dominant-color=\"69AEA9\"></a></div><p></p>\n<h3><a name=\"individual-incentives-20\" class=\"anchor\" href=\"https://ethresear.ch#individual-incentives-20\"></a>Individual incentives</h3>\n<h4><a name=\"total-issuance-21\" class=\"anchor\" href=\"https://ethresear.ch#total-issuance-21\"></a>Total issuance</h4>\n<p>The total <em>extra</em> issuance is:</p>\n<p><span class=\"math\">I_c(D_a, D) = \\sum_{i \\in V} y_c(D_a, D, S_i) S_i = g(0) y(D_a, D)(1 - \\frac{D_a}{D}) \\sum_{i \\in V} p(S_i)S_i = \\\\ = g(0)y(D_a, D)\\cdot D_a(1 - \\frac{D_a}{D}) = g(0)I(D_a)\\cdot \\frac{D_a}{D}(1 - \\frac{D_a}{D}) = \\\\\n= g(0) \\sqrt{D} \\sqrt{\\frac{D_a}{D}}\\cdot \\frac{D_a}{D}(1 - \\frac{D_a}{D}) = g(0)I(D) \\sqrt{\\frac{D_a}{D}}\\cdot \\frac{D_a}{D}(1 - \\frac{D_a}{D})</span></p>\n<p>The total issuance then is:</p>\n<p><span class=\"math\">I_T(D_a, D) = I(D_a) + I_c(D_a, D) = I(D_a)(1 + g(0) \\frac{D_a}{D}(1 - \\frac{D_a}{D})) = \\\\\n= c \\sqrt{D} \\sqrt{\\frac{D_a}{D}}(1 + g(0)\\cdot \\frac{D_a}{D}(1 - \\frac{D_a}{D})) = \\\\\n= I(D) \\sqrt{\\frac{D_a}{D}} (1 + g(0)\\frac{D_a}{D}(1 - \\frac{D_a}{D})) = I(D) \\cdot h(\\frac{D_a}{D})</span>, where <span class=\"math\">h(x) = \\sqrt{x}(1 + g(0)x(1-x))</span>. For <span class=\"math\">g(0) = \\frac{1}{4}</span>, we have that <span class=\"math\">h(x) \\le 1</span> for <span class=\"math\">x \\in [0,1]</span>, so <span class=\"math\">I(D)</span> remains an upper bound on the total issuance.</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/5/4/543c7981de3b9feeff11aff29ac6556c3f9ad5cf.png\" alt=\"\" data-base62-sha1=\"c1bFMcZrRaXcIkPXUUEDXiUanGn\" role=\"presentation\" width=\"547\" height=\"435\"></p>\n<h4><a name=\"generalizing-individual-consolidation-incentives-22\" class=\"anchor\" href=\"https://ethresear.ch#generalizing-individual-consolidation-incentives-22\"></a>Generalizing individual consolidation incentives</h4>\n<p>More generally, we can choose any consolidation yield curve <span class=\"math\">y_c(D_a, D, S) = \\frac{\\min(S,T)}{T} y_c(D_a, D)</span>, not necessarily depending on <span class=\"math\">y(D_a, D)</span>, or even any curve <span class=\"math\">y_c(D_a, D, S)</span> with a different kind of dependency on <span class=\"math\">S</span>. An interesting example of the first kind is the curve <span class=\"math\">y_c(D_a, D, S) = \\frac{\\min(S,T)}{T} (y(D) - y(D_a, D))</span>, where <span class=\"math\">y_c(D_a, D, S)</span> essentially interpolates between the yield <span class=\"math\">y(D) = y(D_a = D, D)</span> that would be paid out to a fully consolidated validator set at deposit size <span class=\"math\">D</span>, and the base yield <span class=\"math\">y(D_a, D)</span> paid out at the current consolidation level. In other words, a validator with <span class=\"math\">T</span> stake always gets paid the maximum possible yield for deposit size <span class=\"math\">D</span>, <span class=\"math\">y(D)</span>, regardless of the consolidation level achieved by the whole validator set, while validators with minimum stake get paid closer to the base yield <span class=\"math\">y(D_a, D)</span>, and their yield linearly increases to <span class=\"math\">y(D)</span> as they consolidate. In this case, the consolidation incentives are quite a bit stronger at lower consolidation levels.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/2/5229207a5722061af774a3d38e53aa0d28a08a89.png\" data-download-href=\"https://ethresear.ch/uploads/default/5229207a5722061af774a3d38e53aa0d28a08a89\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/2/5229207a5722061af774a3d38e53aa0d28a08a89_2_573x500.png\" alt=\"\" data-base62-sha1=\"bIPgwmePdQuVbpyQmyyHGwdjaOd\" role=\"presentation\" width=\"573\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/2/5229207a5722061af774a3d38e53aa0d28a08a89_2_573x500.png, https://ethresear.ch/uploads/default/original/3X/5/2/5229207a5722061af774a3d38e53aa0d28a08a89.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/2/5229207a5722061af774a3d38e53aa0d28a08a89.png 2x\" data-dominant-color=\"766C9C\"></a></div><p></p>\n<p>While the absolute yield increase falls with <span class=\"math\">D_a</span>, the percentage yield increase from consolidating does not. As it turns out, it only depends on <span class=\"math\">\\frac{D_a}{D}</span>:<br>\n<span class=\"math\">\\frac{y_c(D_a, D)}{y(D_a, D)} = \\frac{y(D) - y(D_a, D)}{y(D_a, D)} =\n\\frac{y(D)}{y(D_a, D)} - 1 = \\sqrt{\\frac{D}{D_a}} - 1 </span></p>\n<p>In other words, this also fits the previous form <span class=\"math\">y_c(D_a, D, S) = \\frac{\\min(S,T)}{T} g(\\frac{D_a}{D}) y(D_a, D)</span>, with <span class=\"math\">g(x) = \\sqrt{\\frac{1}{x}} - 1</span> instead of a linear function.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/a/4ab4a1cd832f6644730fd660799e1167f71af570.png\" data-download-href=\"https://ethresear.ch/uploads/default/4ab4a1cd832f6644730fd660799e1167f71af570\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/a/4ab4a1cd832f6644730fd660799e1167f71af570_2_690x293.png\" alt=\"\" data-base62-sha1=\"aESkMqsbe5AMVaB57Ru9FCVKXGU\" role=\"presentation\" width=\"690\" height=\"293\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/a/4ab4a1cd832f6644730fd660799e1167f71af570_2_690x293.png, https://ethresear.ch/uploads/default/optimized/3X/4/a/4ab4a1cd832f6644730fd660799e1167f71af570_2_1035x439.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/a/4ab4a1cd832f6644730fd660799e1167f71af570_2_1380x586.png 2x\" data-dominant-color=\"F9F9F9\"></a></div><p></p>\n<p>Since <span class=\"math\">y(D_a, D) + y_c(D_a, D, S) \\le y(D)</span>, it still holds that <span class=\"math\">I(D)</span> is a bound on the total issuance. In fact, the total issuance can be worked out to be <span class=\"math\">I_T(D_a, D) = I(D_a) + I_c(D_a, D) = I(D) \\sqrt{\\frac{D_a}{D}}(1 + \\sqrt{\\frac{D_a}{D}} (1 - \\sqrt{\\frac{D_a}{D}})) = I(D) h(\\frac{D_a}{D})</span>, with <span class=\"math\">h(x) = \\sqrt{x}(1 + \\sqrt{x}(1 - \\sqrt{x})))</span>, which we compare here to the previous example:</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/8/e/8e42613ed48e495edae62b74cecc8f994f7499a9.png\" alt=\"\" data-base62-sha1=\"kiu1b4gGXQkdW7Ynxy73Oed55rz\" role=\"presentation\" width=\"547\" height=\"435\"></p>\n            <p><small>3 posts - 3 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/orbit-ssf-solo-staking-friendly-validator-set-management-for-ssf/19928\">Read full topic</a></p>","link":"https://ethresear.ch/t/orbit-ssf-solo-staking-friendly-validator-set-management-for-ssf/19928","pubDate":"Fri, 28 Jun 2024 07:22:10 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19928"},"source":{"@url":"https://ethresear.ch/t/orbit-ssf-solo-staking-friendly-validator-set-management-for-ssf/19928.rss","#text":"Orbit SSF: solo-staking-friendly validator set management for SSF"}},{"title":"Number Duplicate Messages in Ethereum's Gossipsub Network","dc:creator":"yiannisbot","category":"Networking","description":"<h1><a name=\"summary-tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#summary-tldr-1\"></a>Summary &amp; TL;DR</h1>\n<p>The ProbeLab team (<a href=\"https://probelab.io/\" rel=\"noopener nofollow ugc\">probelab.io</a>) is carrying out a study on the performance of Gossipsub in Ethereum’s P2P network. Following from our previous post on the “<a href=\"https://ethresear.ch/t/gossipsub-network-dynamicity-through-grafts-and-prunes/19750\">Gossipsub Network Dynamicity through GRAFTs and PRUNEs</a>” in this post we investigate the number of messages and duplicated messages seen by our node, per topic. There is no public data on the overhead that broadcasting messages and control data over the network imply on each participating node.</p>\n<p>For the purposes of this study, we have built a tool called <strong>Hermes, which acts as a GossipSub listener and tracer</strong> (<a href=\"https://github.com/probe-lab/hermes/\" rel=\"noopener nofollow ugc\">GitHub - probe-lab/hermes: A Gossipsub listener and tracer.</a>). Hermes subscribes to all relevant pubsub topics and traces all protocol interactions. The results reported here are from a 3.5hr trace.</p>\n<p><strong>Study Description:</strong> Gossipsub’s design is inherently allowing for message duplicates. A brief model we develop shows that it’s normal to receive each message up to 3 extra times (as a duplicate). This excludes the gossip mechanism which propagates messages through the IHAVE/IWANT control message sequence.</p>\n<p><strong>TL;DR:</strong> We find that indeed duplicates through mesh stay in the order of 3 per message or below, which, however, doesn’t count for duplicates through gossip. For instance, there are edge cases where a message is requested (and responded to) through an IWANT message while the actual message is already in transit. Eventually, this results in an extra duplicate. We make two recommendations:</p>\n<ol>\n<li><strong>Reduce the number of concurrent <code>IWANT</code> messages we send through a limiting factor</strong> (somewhat similar to kademlia’s <code>alpha</code> parameter).</li>\n<li><strong>Lower the current <code>heartbeat</code> frequency (i.e., increasing the <code>heartbeat</code> interval) from 0.7 seconds to 1 second</strong> (as per the original protocol spec and recommendation). This would reduce the excessive <code>IHAVE</code> messages and reduce the chances of generating extra duplicates.</li>\n</ol>\n<h1><a name=\"background-2\" class=\"anchor\" href=\"https://ethresear.ch#background-2\"></a>Background</h1>\n<p><a href=\"https://github.com/libp2p/specs/blob/f25d0c22e5ef045c8c050bc91c297468de35f720/pubsub/gossipsub/gossipsub-v1.1.md\" rel=\"noopener nofollow ugc\">GossipSub</a> is a routing system that can be enabled on libp2p’s <a href=\"https://github.com/libp2p/specs/blob/f25d0c22e5ef045c8c050bc91c297468de35f720/pubsub/README.md\" rel=\"noopener nofollow ugc\">PubSub</a> message broadcasting protocol. This protocol organizes the message broadcasting channels on what is commonly known as Topics, where peers subscribed to a given topic keep a particular subset of connected peers for that particular topic. This subset of peer connections per topic is also known as “mesh”.</p>\n<p>In the case of GossipSub, the standard broadcasting mechanism of PubSub is extended with a few sets of enhancements that make it:</p>\n<ul>\n<li>more efficient than what is commonly called flooding, reducing the protocol’s bandwidth usage</li>\n<li>more resilient, as the protocol:\n<ul>\n<li>shares metadata of seen messages over sporadic Gossip messages (for censorship or Sybil attacks)</li>\n<li>keeps a local score for each mesh-connected peer to ensure healthy and useful connections, where each peer keeps connections with the highest scoring neighbours</li>\n<li>avoids sharing a message with peers that already sent the message to us</li>\n</ul>\n</li>\n</ul>\n<p>This all looks good on paper. However, there is still no public data on the overhead that broadcasting messages and control data over the network imply on each participating node. Even more importantly, how much room for improvement exists within the protocol and the implementations to make it more optimal.</p>\n<h2><a name=\"expected-results-3\" class=\"anchor\" href=\"https://ethresear.ch#expected-results-3\"></a>Expected Results</h2>\n<p>Message propagation through the GossipSub’s mesh considers some occasional duplicates that can arrive as the message might come from different peers within the mesh:</p>\n<p>Given:</p>\n<ul>\n<li><code>n</code> as the number of nodes in the graph</li>\n<li><code>k</code> as the mesh degree</li>\n<li><code>l</code> as the number of connections (links) between two nodes <span class=\"math\">l = \\frac{nk}{2}</span></li>\n</ul>\n<p>The number of links used to propagate a message to all nodes in the graph can be defined as <code>n-1 ~= n</code>. The links form a spanning tree with the message origin as root (<code>n</code> is big enough compared to the initial sender link, so that it can be considered negligible).</p>\n<p>The number of links not used to propagate a specific message corresponds to <span class=\"math\">l-n = \\frac{n(k-2)}{2}</span>.</p>\n<p>This means that on average each node will have 1 link used to receive a message, 1 to propagate it to a peer that doesn’t have it yet. And the rest <code>k-2</code>, to either send or receive the duplicate message.</p>\n<p>Assuming that <span class=\"math\">\\frac{k-2}{2}</span> links are used to send the message to peers that already have it, it means that we receive <span class=\"math\">\\frac{k-2}{2}</span> duplicate messages.</p>\n<p>In the case of Ethereum, <code>k=8</code>, and therefore, it follows that <span class=\"math\">\\frac{k-2}{2} = 3</span>. So, <strong>the expected value is to receive 3 duplicate messages for each message</strong>.</p>\n<h1><a name=\"results-4\" class=\"anchor\" href=\"https://ethresear.ch#results-4\"></a>Results</h1>\n<p>As previously introduced, this report aims to provide insights on:</p>\n<ul>\n<li>the number of duplicate messages that we receive per each shared message in the network,</li>\n<li>the extra bandwidth that we are spending on duplicates,</li>\n<li>any existing unexpected behavior or potential optimization that could be applied on GossipSub.</li>\n</ul>\n<blockquote>\n<p>NOTES:<br>\nThe numbers presented in the following sections belong to the same 3.5 hours run of <code>Hermes</code> as the previous studies, with the following extra configuration:</p>\n<ul>\n<li>The experiment is ran on the <code>Holesky</code> network</li>\n<li>Our node was subscribed to the following topics:\n<ul>\n<li><code>beacon_block</code></li>\n<li><code>beacon_aggregate_and_proof</code></li>\n<li><code>sync_commmittee_contribution_and_proof</code></li>\n<li><code>attester_slashing</code></li>\n<li><code>proposer_slashing</code></li>\n<li><code>voluntary_exit</code> * (check <code>Hermes</code> issue → <a href=\"https://github.com/probe-lab/hermes/issues/24\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Broadcasting of invalid `voluntary_exit` messages to mesh peers · Issue #24 · probe-lab/hermes · GitHub</a>)</li>\n<li><code>bls_to_execution_change</code></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2><a name=\"overall-number-of-messages-5\" class=\"anchor\" href=\"https://ethresear.ch#overall-number-of-messages-5\"></a>Overall Number of Messages</h2>\n<p>To give a little bit of context, the report starts by taking a look at the number of messages and the respective duplicates received over time. The following graph shows the number of <code>HANDLED</code> events by the libp2p-host in comparison with the <code>DELIVERED</code> and <code>DUPLICATED</code> ones.</p>\n<blockquote>\n<p>NOTE: In this report we will consider the <code>DELIVER</code> events as unique identifier of the arrival of a message. This is because the internal event tracer at the libp2p host notifies of the arrival of a unique message at multiple levels, which in turn, makes the <code>HANDLED</code> and <code>DELIVER</code> events at the arrival of a new message the exact same notification, just at different levels of the host.</p>\n</blockquote>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/5/65a05809dfbc2915a07ceadedbf9cd8d85f16fe8.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/65a05809dfbc2915a07ceadedbf9cd8d85f16fe8\" title=\"overall-number-of-events\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/5/65a05809dfbc2915a07ceadedbf9cd8d85f16fe8_2_517x309.jpeg\" alt=\"overall-number-of-events\" data-base62-sha1=\"ev1L6qSl7syrgmrIZtjuY2llzoA\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/5/65a05809dfbc2915a07ceadedbf9cd8d85f16fe8_2_517x309.jpeg, https://ethresear.ch/uploads/default/optimized/3X/6/5/65a05809dfbc2915a07ceadedbf9cd8d85f16fe8_2_775x463.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/6/5/65a05809dfbc2915a07ceadedbf9cd8d85f16fe8_2_1034x618.jpeg 2x\" data-dominant-color=\"FAF8F7\"></a></div><p></p>\n<ul>\n<li>The number of unique messages (i.e., <code>HANDLE_MESSAGE</code>) stays steady around the 3,000 and 3,200 unique messages per minute.</li>\n<li>By looking closer into the messages per topic (not shown here), we observe that the topic with the highest message frequency is the <code>beacon_aggregate_and_proof</code> one, receiving over 90% of the tracked unique messages.</li>\n<li>There are some duplicated spikes at the <code>beacon_block</code> topic that reach up to 60 duplicates  in some occasions.</li>\n<li>The number of duplicates seems to vary quite wildly over time, which can be related to the number of connections per mesh (as per the analysis done further up which showed that 3 duplicates per message are expected).</li>\n</ul>\n<h2><a name=\"number-of-duplicate-messages-6\" class=\"anchor\" href=\"https://ethresear.ch#number-of-duplicate-messages-6\"></a>Number of Duplicate Messages</h2>\n<p>When it comes to the actual number of <code>DUPLICATE</code> messages, the following figures show that number of duplicates can oscillate over time.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/d/edacb4d1d050448d2a5b17ef6c67ed0cb3ca42e0.png\" data-download-href=\"https://ethresear.ch/uploads/default/edacb4d1d050448d2a5b17ef6c67ed0cb3ca42e0\" title=\"duplicates-per-topic\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/d/edacb4d1d050448d2a5b17ef6c67ed0cb3ca42e0_2_517x309.png\" alt=\"duplicates-per-topic\" data-base62-sha1=\"xUzbhYcATSYazyzdVOOG41gMiKk\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/d/edacb4d1d050448d2a5b17ef6c67ed0cb3ca42e0_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/e/d/edacb4d1d050448d2a5b17ef6c67ed0cb3ca42e0_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/d/edacb4d1d050448d2a5b17ef6c67ed0cb3ca42e0.png 2x\" data-dominant-color=\"F8F6F5\"></a></div><p></p>\n<p>Clearly, the <code>beacon_block</code> topic seems to be the only one generating the largest number of spikes at times.</p>\n<h2><a name=\"cdf-of-duplicate-messages-7\" class=\"anchor\" href=\"https://ethresear.ch#cdf-of-duplicate-messages-7\"></a>CDF of Duplicate Messages</h2>\n<p>The following graph shows the Cumulative Distribution Function (CDF) of the duplicates per message per topic. In the graph, we can see that:</p>\n<ul>\n<li>smaller but more frequent messages like the <code>beacon_ggregate_and_proof</code> and <code>sync_commitee_contributions</code> do have fewer duplicates.\n<ul>\n<li>between 32% and 45% of the messages do not have any duplicates.</li>\n<li>50% of the messages are received with less than 2 duplicate messages, keeping the mean lower than the theoretical target of <code>3</code> duplicates per message.</li>\n<li>the upper tail shows that less than 10% of the messages get more than 4 duplicates, with a cap at 8-10 duplicates (i.e., the node’s mesh size, <code>D</code>).</li>\n</ul>\n</li>\n<li>the case of the <code>beacon_blocks</code> is completely different.\n<ul>\n<li>there are almost no recorded messages without duplicates (1%-2%).</li>\n<li>54% of the messages report the expected <code>3</code>  duplicates from the mesh</li>\n<li>Taking look at the tail of the CDF (shown in the dropdown plot further down) there are a few messages that were received up to 34 or 40 times.</li>\n</ul>\n</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/0/1/0153b674d22c5c90c7fee45cbf880ec5b865d548.png\" data-download-href=\"https://ethresear.ch/uploads/default/0153b674d22c5c90c7fee45cbf880ec5b865d548\" title=\"CDF-duplicates\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/0/1/0153b674d22c5c90c7fee45cbf880ec5b865d548_2_517x309.png\" alt=\"CDF-duplicates\" data-base62-sha1=\"bJPwVmfET6tLeQyWl4YQPYDdgc\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/0/1/0153b674d22c5c90c7fee45cbf880ec5b865d548_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/0/1/0153b674d22c5c90c7fee45cbf880ec5b865d548_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/0/1/0153b674d22c5c90c7fee45cbf880ec5b865d548.png 2x\" data-dominant-color=\"FAFBFA\"></a></div><p></p>\n<h2><a name=\"correlation-between-message-size-and-number-of-duplicates-8\" class=\"anchor\" href=\"https://ethresear.ch#correlation-between-message-size-and-number-of-duplicates-8\"></a>Correlation between Message Size and Number of Duplicates</h2>\n<p>From the CDF above there seems to be a pattern of “the bigger the size of the message, the more duplicates it has”. So we went a step further to investigate if there is indeed a correlation. The following graph shows that the correlation between the size of a message and the number of duplicates is somewhat present but is not a norm or at least doesn’t follow any fixed pattern.</p>\n<p>The figure is complemented by two auxiliary quartile plots or “boxplots”, which represent the given distribution of points of their respective axis, helping us understand that:</p>\n<ul>\n<li><code>sync_commmittee_contribution_and_proof</code> messages are the smallest ones in size, which also correlates with the smallest ratio of duplicate messages.</li>\n<li><code>beacon_aggregate_and_proof</code> messages are the second ones in size, having also a bigger tail of duplicates on the Y concentration plot.</li>\n<li><code>beacon_block</code> messages, despite being the ones with the widest variation in size, do not follow any particular pattern that could correlate the message size with the number of duplicates.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/b/fb40e85a2381cd48f38c553e329c3f0083a27196.png\" data-download-href=\"https://ethresear.ch/uploads/default/fb40e85a2381cd48f38c553e329c3f0083a27196\" title=\"msg-size-number-of-duplicates\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/b/fb40e85a2381cd48f38c553e329c3f0083a27196_2_383x374.png\" alt=\"msg-size-number-of-duplicates\" data-base62-sha1=\"zQGUmj0RcJ4b7t7Xb3gPJPbgAuO\" width=\"383\" height=\"374\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/b/fb40e85a2381cd48f38c553e329c3f0083a27196_2_383x374.png, https://ethresear.ch/uploads/default/optimized/3X/f/b/fb40e85a2381cd48f38c553e329c3f0083a27196_2_574x561.png 1.5x, https://ethresear.ch/uploads/default/original/3X/f/b/fb40e85a2381cd48f38c553e329c3f0083a27196.png 2x\" data-dominant-color=\"F1F4F2\"></a></div><p></p>\n<p>As such, we conclude that <strong>there is no correlation between message size and number of duplicates</strong>.</p>\n<h2><a name=\"arrival-time-of-duplicates-9\" class=\"anchor\" href=\"https://ethresear.ch#arrival-time-of-duplicates-9\"></a>Arrival Time of Duplicates</h2>\n<p>Reducing the number of duplicates has already been a topic of discussion in the community. There are already some proposals like <a href=\"https://github.com/libp2p/specs/blob/f25d0c22e5ef045c8c050bc91c297468de35f720/pubsub/gossipsub/gossipsub-v1.2.md\" rel=\"noopener nofollow ugc\">gossipsub1.2 </a> that spotted this large number of duplicated messages previously, proposing the addition of a new control <code>IDONTWANT</code> message that could not only notify other peers that we already got a message, but also cancel the <code>IWANT</code> ongoing messages.</p>\n<p>In order to see how effective the <code>IDONTWANT</code> control message would be, we’ve computed the time between the first delivery of each message and their respective first duplicate. This is done to validate that there is enough time to send the <code>IDONTWANT</code> message once a new message is received (prior to the message validation) and before the duplicate starts being sent over.</p>\n<p>The following graph gives the time between the delivery time of a message and the time to the first duplicated message in seconds.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/8/e87ebed2ebacfb8abd79473ceb14e2af58bc7b82.png\" data-download-href=\"https://ethresear.ch/uploads/default/e87ebed2ebacfb8abd79473ceb14e2af58bc7b82\" title=\"arrival-cdf\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/8/e87ebed2ebacfb8abd79473ceb14e2af58bc7b82_2_517x309.png\" alt=\"arrival-cdf\" data-base62-sha1=\"xaKk5a8MYdLbvQ71TzXe9xKjiV4\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/8/e87ebed2ebacfb8abd79473ceb14e2af58bc7b82_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/e/8/e87ebed2ebacfb8abd79473ceb14e2af58bc7b82_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/8/e87ebed2ebacfb8abd79473ceb14e2af58bc7b82.png 2x\" data-dominant-color=\"FAFBFA\"></a></div><p></p>\n<p>Results show that 50% of the duplicated beacon blocks arrive within 73 milliseconds, roughly an entire Round Trip Time (RTT) with a well connected peer. In practice, this means that <strong>the <code>IDONTWANT</code> message could prevent at least the other 50% of messages that arrive between 73 milliseconds and 2 seconds of the first arrival</strong>.</p>\n<p>We’ve spotted that a big part of the duplicated messages arrive from <code>IWANT</code> messages that we sent milliseconds before the arrival of the same message though the mesh.<br>\nThe <a href=\"https://github.com/libp2p/specs/blob/f25d0c22e5ef045c8c050bc91c297468de35f720/pubsub/gossipsub/gossipsub-v1.2.md\" rel=\"noopener nofollow ugc\">gossipsub1.2</a> proposal already contemplates <a href=\"https://github.com/libp2p/specs/blob/f25d0c22e5ef045c8c050bc91c297468de35f720/pubsub/gossipsub/gossipsub-v1.2.md#cancelling-iwant\" rel=\"noopener nofollow ugc\">this scenario</a>, where the same <code>IDONTWANT</code> message could break or stop any ongoing responses to <code>IWANT</code> messages for that <code>msgID</code>.</p>\n<p>In summary, we conclude that <strong>the <code>IDONTWANT</code> control message addition to Gossipsub will be a valuable enhancement that can indeed prevent the vast majority of duplicate messages</strong>.</p>\n<h1><a name=\"conclusions-and-takeaways-10\" class=\"anchor\" href=\"https://ethresear.ch#conclusions-and-takeaways-10\"></a>Conclusions and takeaways</h1>\n<blockquote>\n<p>This set of conclusions have been extracted from running the <code>go-libp2p</code>  implementation and, although it also involves the traces of how other implementations interact with Hermes, it might be a biased conclusion from the point of view of the Go implementation.</p>\n</blockquote>\n<ol>\n<li>\n<p>We have identified that there is no limit on the number of peers that we simultaneously send <code>IWANT</code> messages to for the same <code>msgID</code>.<br>\nWe identify that this has some benefits:</p>\n<ul>\n<li>Concurrently fetches the message from multiple actors.</li>\n<li>Bypasses bandwidth limitations of peer(s) we have sent <code>IWANT</code> messages to, since we have forwarded the <code>IWANT</code> message to multiple peers.</li>\n</ul>\n<p>However, it also has obvious downsides:</p>\n<ul>\n<li>\n<p>We receive multiple duplicates from the peers that respond to our simultaneous <code>IWANT</code> request, consuming more bandwidth on both ends.</p>\n</li>\n<li>\n<p>The message could be already on the wire through the mesh connections, so when the <code>IWANT</code> message responses arrive, the message was already delivered through the mesh.</p>\n</li>\n<li>\n<p>There is no track of who we contacted for a given message, given that Gossipsub is:</p>\n<ul>\n<li>forwarding the message only the first time we see it, and</li>\n<li>removing the peer that sent us the message from the list of peers we’re broadcasting the message to and forgetting about that peer.</li>\n</ul>\n<p>This makes the entire broadcasting process unaware of who sent us that message in <code>IHAVE</code>s, or who we are already contacting for a particular message - resulting in multiple duplicates.</p>\n</li>\n</ul>\n<p><a href=\"https://github.com/libp2p/specs/blob/f25d0c22e5ef045c8c050bc91c297468de35f720/pubsub/gossipsub/gossipsub-v1.2.md#cancelling-iwant\" rel=\"noopener nofollow ugc\">Canceling ongoing <code>IWANT</code>messages</a> with <code>IDONTWANT</code> messages, which is a proposal included in <a href=\"https://github.com/libp2p/specs/blob/f25d0c22e5ef045c8c050bc91c297468de35f720/pubsub/gossipsub/gossipsub-v1.2.md\" rel=\"noopener nofollow ugc\">gossipsub1.2</a> is a valuable enhancement that will limit the number of duplicates.</p>\n<h3><a name=\"recommendation-1-11\" class=\"anchor\" href=\"https://ethresear.ch#recommendation-1-11\"></a><strong>Recommendation 1</strong></h3>\n<p>We propose having a limiting factor (somewhat similar to kademlia’s <code>alpha</code> parameter), which would limit the number of concurrent <code>IWANT</code> messages we send for the same <code>msgID</code>.</p>\n<hr>\n<hr>\n</li>\n<li>\n<p>The gossiping mechanism of Gossipsub acts as a backup mechanism to the broadcasting/mesh propagation part of the protocol for those messages that didn’t manage to reach all nodes in the network. The more frequent gossiping is, the higher its contribution becomes to message propagation (i.e., more messages are being requested through <code>IWANT</code> requests because they have not reached the entirety of the network).</p>\n<p>An edge case that results from very frequent gossiping (i.e., small <code>heartbeat</code> interval) is that messages that are already in transit, but have not been downloaded completely, are being requested through an <code>IWANT</code> message. This inevitably results in a duplicate message once both messages arrive at their destination.</p>\n<p>It is hard to quantify how often the message responses to <code>IWANT</code> messages are indeed future duplicates, but it is still worth pointing out that high heartbeat frequency increases the chances of those edge cases.</p>\n<h3><a name=\"recommendation-2-12\" class=\"anchor\" href=\"https://ethresear.ch#recommendation-2-12\"></a>Recommendation 2</h3>\n<p>A quick and straightforward optimization is to <strong>lower the current <code>heartbeat</code> frequency (i.e., increasing the <code>heartbeat</code> interval) from 0.7 seconds to 1 second</strong> (as per the original protocol spec and recommendation). This would reduce the excessive <code>IHAVE</code> messages and reduce the chances of generating extra duplicates.</p>\n<hr>\n<hr>\n</li>\n<li>\n<p>We have spotted some edge cases that may occur due to the “lack” of control over the triggered events at GossipSub (<code>IHAVE</code>/ <code>IWANT</code>).</p>\n<p>It isn’t easy to judge from the logs whether those cases are just a matter of timing, as GossipSub replies to those events as interruptions (at least in the Go implementation), or if some of those cases are caused by a bug in one of the implementations.</p>\n<p>We found that <strong>the number of messages where we received multiple duplicates from the same peer to just 1% of the total number of <code>beacon_blocks</code> received</strong>. We, therefore, conclude that this is not critical or an issue that requires further investigation.</p>\n</li>\n</ol>\n<p>For more details and <strong>weekly network health reports on Ethereum’s discv5 DHT network</strong> head over to <a href=\"https://probelab.io/\" rel=\"noopener nofollow ugc\">probelab.io</a>.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/number-duplicate-messages-in-ethereums-gossipsub-network/19921\">Read full topic</a></p>","link":"https://ethresear.ch/t/number-duplicate-messages-in-ethereums-gossipsub-network/19921","pubDate":"Thu, 27 Jun 2024 08:48:46 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19921"},"source":{"@url":"https://ethresear.ch/t/number-duplicate-messages-in-ethereums-gossipsub-network/19921.rss","#text":"Number Duplicate Messages in Ethereum's Gossipsub Network"}},{"title":"Estimating Validator Decentralization Using p2p Data","dc:creator":"jonasbostoen","category":"Networking","description":"<blockquote>\n<p>Written by <a href=\"https://x.com/mempirate\" rel=\"noopener nofollow ugc\">Jonas</a> &amp; <a href=\"https://x.com/namn_grg\" rel=\"noopener nofollow ugc\">Naman</a> from <a href=\"https://x.com/chainbound_\" rel=\"noopener nofollow ugc\">Chainbound</a>.<br><br>\nThis research was funded by the Robust Incentives Group at the Ethereum Foundation. This work is specifically related to ROP-8. Additional information can be found <a href=\"https://www.notion.so/bad7233658cc41f38b26e7b4f6cf6e8b?pvs=21\" rel=\"noopener nofollow ugc\">here</a>. We want to thank <a href=\"https://x.com/soispoke\" rel=\"noopener nofollow ugc\">soispoke</a>, the <a href=\"https://x.com/EthPandaOps\" rel=\"noopener nofollow ugc\">EF DevOps team</a>, <a href=\"https://migalabs.io/\" rel=\"noopener nofollow ugc\">MigaLabs</a> and <a href=\"https://probelab.io/\" rel=\"noopener nofollow ugc\">ProbeLab</a> for their advice and contributions!</p>\n</blockquote>\n<h2><a name=\"table-of-contents-1\" class=\"anchor\" href=\"https://ethresear.ch#table-of-contents-1\"></a>Table of Contents</h2>\n<ul>\n<li><a href=\"https://ethresear.ch#introduction\">Introduction</a></li>\n<li><a href=\"https://ethresear.ch#anatomy-of-a-validator\">Anatomy of a validator</a></li>\n<li><a href=\"https://ethresear.ch#attestation-duties-and-committees\">Attestation duties and committees</a></li>\n<li><a href=\"https://ethresear.ch#attestation-subnets\">Attestation subnets</a>\n<ul>\n<li><a href=\"https://ethresear.ch#subnet-types\">Subnet types</a></li>\n</ul>\n</li>\n<li><a href=\"https://ethresear.ch#validator-footprints\">Validator footprints</a></li>\n<li><a href=\"https://ethresear.ch#methodology\">Methodology</a>\n<ul>\n<li><a href=\"https://ethresear.ch#long-lived-subnets\">Long-lived subnets &amp; node metadata</a></li>\n<li><a href=\"https://ethresear.ch#short-lived-subnets\">Short-lived subnets</a></li>\n<li><a href=\"https://ethresear.ch#estimating-validator-counts\">Estimating validator counts</a></li>\n</ul>\n</li>\n<li><a href=\"https://ethresear.ch#architecture\">Architecture</a>\n<ul>\n<li><a href=\"https://ethresear.ch#crawler\">Crawler</a></li>\n<li><a href=\"https://ethresear.ch#consumer\">Consumer</a></li>\n</ul>\n</li>\n<li><a href=\"https://ethresear.ch#results\">Result</a></li>\n<li><a href=\"https://ethresear.ch#limitations\">Limitations</a></li>\n<li><a href=\"https://ethresear.ch#references\">References</a></li>\n</ul>\n<h2><a name=\"introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#introduction-2\"></a>Introduction</h2>\n<p>The geographical distribution of a validator set is <a href=\"https://collective.flashbots.net/t/decentralized-crypto-needs-you-to-be-a-geographical-decentralization-maxi/1385\" rel=\"noopener nofollow ugc\">one of the most critical factors</a> in determining a blockchain’s level of decentralization. Validator decentralization is vital for Ethereum. It enhances network security, resilience, and censorship resistance by distributing control and minimizing the risk of single points of failure or malicious attacks.</p>\n<p>It is well known that Ethereum has a <a href=\"https://beaconcha.in/charts/validators\" rel=\"noopener nofollow ugc\">very large</a> validator set, but <strong>is this validator set geographically distributed?</strong> Ethereum has a substantial amount  of beacon nodes running on the consensus layer network, with current estimates at around ~12,000 active nodes (<a href=\"https://nodewatch.io/\" rel=\"noopener nofollow ugc\">source</a>). A beacon node serves as a <em>potential</em> entrypoint into the network for validators, but it is not representative of the actual validator distribution.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/f/8f1dda810cb6cc5f9d3db8c3c592d8167d16710e.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/8f1dda810cb6cc5f9d3db8c3c592d8167d16710e\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/f/8f1dda810cb6cc5f9d3db8c3c592d8167d16710e_2_500x500.jpeg\" alt=\"image\" data-base62-sha1=\"kq4ePn5GSlTcVja0bZSn5dC7WbQ\" width=\"500\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/f/8f1dda810cb6cc5f9d3db8c3c592d8167d16710e_2_500x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/8/f/8f1dda810cb6cc5f9d3db8c3c592d8167d16710e_2_750x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/f/8f1dda810cb6cc5f9d3db8c3c592d8167d16710e_2_1000x1000.jpeg 2x\" data-dominant-color=\"8C7D75\"></a></div><br>\n<small><em>Probably not.</em></small><p></p>\n<p>In this article, we present the methodology and results of an investigation aiming to address this question. We start with some context about the logical components making up a validator, then proceed with some potential methods of identifying validators on the beacon P2P network. We then expand on our chosen methodology and finally present the results.</p>\n<h2><a name=\"anatomy-of-a-validator-3\" class=\"anchor\" href=\"https://ethresear.ch#anatomy-of-a-validator-3\"></a>Anatomy of a validator</h2>\n<p>An Ethereum validator is a virtual entity that consists of a balance, public key and other properties on the beacon chain. They are roughly responsible for 4 things:</p>\n<ol>\n<li>Proposing new blocks</li>\n<li>Voting on other block proposals (attesting)</li>\n<li>Aggregating attestations</li>\n<li>Slashing other validators in case they commit faults</li>\n</ol>\n<p>A <em>validator client</em> is the piece of software that executes these responsibilities for each of its registered validator keys (which can be many). But a validator client on its own cannot connect to the P2P beacon network to talk directly to other validators. Instead, it connects to an entity known as a <em>beacon node</em>, which is a standalone client that maintains the beacon chain and communicates with other beacon nodes.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/8/68536fc182f09a1eb2c1e4b89f380dd4aca9c326.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/68536fc182f09a1eb2c1e4b89f380dd4aca9c326\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/8/68536fc182f09a1eb2c1e4b89f380dd4aca9c326_2_495x500.jpeg\" alt=\"image\" data-base62-sha1=\"eSUpYglwr9kKf0Zn4wTZyTzSai2\" width=\"495\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/8/68536fc182f09a1eb2c1e4b89f380dd4aca9c326_2_495x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/6/8/68536fc182f09a1eb2c1e4b89f380dd4aca9c326_2_742x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/6/8/68536fc182f09a1eb2c1e4b89f380dd4aca9c326_2_990x1000.jpeg 2x\" data-dominant-color=\"F6F1F1\"></a></div><br>\n<small><em>Schematic of validator clients and a beacon node</em></small><p></p>\n<p>Beacon nodes can have a number of validators attached to them that ranges from zero to thousands. In fact, <a href=\"https://medium.com/@grandine/grandine-0-4-1-released-fb98daef6d60\" rel=\"noopener nofollow ugc\">it’s been reported</a> that in some Ethereum testnets client developers have been running upwards of 50k validators on a single machine. This separation of concerns makes our investigation somewhat harder: a simple crawl of the P2P network might give us a good overview of the set of online beacon nodes in real time, but this is not representative of the overall validator client distribution at all. Before we address this problem, we’ll take a closer look at validator duties and their footprint on the network.</p>\n<h2><a name=\"attestation-duties-and-committees-4\" class=\"anchor\" href=\"https://ethresear.ch#attestation-duties-and-committees-4\"></a>Attestation duties and committees</h2>\n<p>As mentioned above, one of the main responsibilities of a validator is voting on blocks by broadcasting <em>attestations</em>. These attestations express the view of a validator about which chain they think is correct. In more detail, they actually cast 2 different votes: one to express their view of the current head block, and one to help finalize past blocks. This is because Ethereum’s  consensus is a combination of <a href=\"https://arxiv.org/pdf/2003.03052\" rel=\"noopener nofollow ugc\">2 subprotocols</a>: LMD GHOST, a fork-choice rule, and a finality gadget called Casper FFG.</p>\n<p>These duties are assigned randomly every epoch (with some <a href=\"https://github.com/ethereum/consensus-specs/blob/29f39487de964683bbe13d11c7c58b3fe13dca10/specs/phase0/validator.md#lookahead\" rel=\"noopener nofollow ugc\">lookahead</a>) with RANDAO as the source of randomness. Validators get assigned to one slot per epoch at which they have to cast their attestation, which is just a message with the votes that is signed over with the validator BLS private key. These votes are then to be packed and stored in the next beacon block. However, if <a href=\"https://beaconcha.in/charts/validators\" rel=\"noopener nofollow ugc\">all 1 million validators</a> were to attest for every block, the network would be flooded with messages, and the proposer that is supposed to pack these attestations into their block would have trouble verifying all of those signatures in time. This would make Ethereum’s design goal of low resource validation unfeasible.</p>\n<p>To address these issues, the beacon network is subdivided into <em>committees</em>, which are subsets of the active validator set that distribute the overall workload. Committees have a minimum size of <span class=\"math\">128</span> validators, and there are <span class=\"math\">64</span> committees that are assigned per slot. But how is this achieved in practice? What network primitives do we require to enable such a logical separation?</p>\n<h2><a name=\"attestation-subnets-5\" class=\"anchor\" href=\"https://ethresear.ch#attestation-subnets-5\"></a>Attestation subnets</h2>\n<p>The Ethereum consensus P2P network is built with <a href=\"https://github.com/libp2p/specs/tree/master/pubsub/gossipsub\" rel=\"noopener nofollow ugc\">GossipSub</a>, a scalable pubsub protocol running on libp2p. Being a pubsub protocol, GossipSub supports publish/subscribe patterns and the segmentation of networks into logical components called <em>topics</em> (aka P2P overlays)<em>.</em> These are the networking primitives that underpin beacon committees.</p>\n<p>One example of a topic is the <a href=\"https://github.com/ethereum/consensus-specs/blob/29f39487de964683bbe13d11c7c58b3fe13dca10/specs/phase0/p2p-interface.md#beacon_block\" rel=\"noopener nofollow ugc\"><code>beacon_block</code></a> topic, which is a <em>global topic</em> on which new beacon blocks are broadcast. Every validator must subscribe to this topic in order to update their local view of the chain and perform their duties.</p>\n<p>The attestation overlays look quite a bit different. For each committee, we derive a subnet ID based on the committee index (0-64). The topic for the respective subnets then becomes <a href=\"https://github.com/ethereum/consensus-specs/blob/29f39487de964683bbe13d11c7c58b3fe13dca10/specs/phase0/p2p-interface.md#beacon_attestation_subnet_id\" rel=\"noopener nofollow ugc\"><code>beacon_attestation_{subnet_id}</code></a>. Every validator knows their upcoming attestation duties at least 1 epoch ahead of time and can join the correct subnet in advance. When they have to make an attestation, they broadcast it on this subnet.</p>\n<p>As mentioned before, these attestations are eventually supposed to make it into a beacon block. But since upcoming proposers might not be subscribed to these subnets, how does that work? This is where <em>attestation aggregators</em> come in. These are a subset of the beacon committees that are responsible for <em>aggregating</em> all of the attestations they see and broadcasting the aggregate attestations on the global <a href=\"https://github.com/ethereum/consensus-specs/blob/29f39487de964683bbe13d11c7c58b3fe13dca10/specs/phase0/p2p-interface.md#beacon_attestation_subnet_id\" rel=\"noopener nofollow ugc\"><code>beacon_aggregate_and_proof</code></a> topic. This topic is again a mandatory global topic that all validators will be subscribed to, thus providing a way for local unaggregated attestations to make it into the global view of the network. Per committee, there’s a target number of aggregators of <span class=\"math\">16</span>.</p>\n<h3><a name=\"subnet-types-6\" class=\"anchor\" href=\"https://ethresear.ch#subnet-types-6\"></a>Subnet types</h3>\n<p>These attestation subnets described above are ephemeral and directly tied to the validator duties. We call these <strong>short-lived</strong> attestation subnets. The problem with these ephemeral subnets is that they are not very robust, and could result in lost messages. To deal with this issue, the notion of a “<a href=\"https://github.com/ethereum/consensus-specs/issues/2749\" rel=\"noopener nofollow ugc\">subnet backbone</a>” was introduced.</p>\n<p>This backbone consists of <strong>long-lived</strong>, persistent subnet subscriptions that are not tied to validator duties but rather a <a href=\"https://github.com/ethereum/consensus-specs/blob/29f39487de964683bbe13d11c7c58b3fe13dca10/specs/phase0/p2p-interface.md#attestation-subnet-subscription\" rel=\"noopener nofollow ugc\">deterministic function</a> of the beacon node’s unique ID and the current epoch. These long-lived subnets are maintained for <span class=\"math\">256</span> epochs, or around 27 hours, and each beacon node has to subscribe to 2 of them. They are also advertised on the discovery layer, making it easier for beacon nodes with certain duties to find peers on the relevant subnets.</p>\n<h2><a name=\"validator-footprints-7\" class=\"anchor\" href=\"https://ethresear.ch#validator-footprints-7\"></a>Validator footprints</h2>\n<p>Returning to the separation of the beacon node and validator clients, there’s now a clear footprint that validators leave on the beacon node’s network identity: their short-lived subnet subscriptions. This will be the core of our methodology.</p>\n<h2><a name=\"methodology-8\" class=\"anchor\" href=\"https://ethresear.ch#methodology-8\"></a>Methodology</h2>\n<p>Generally, the beacon network consists of 3 domains:</p>\n<ul>\n<li>The discovery domain</li>\n<li>The Req/Resp domain</li>\n<li>The gossip domain</li>\n</ul>\n<p>Each of these domains provides some information about a beacon node.</p>\n<h3><a name=\"long-lived-subnets-node-metadata-9\" class=\"anchor\" href=\"https://ethresear.ch#long-lived-subnets-node-metadata-9\"></a>Long-lived subnets &amp; node metadata</h3>\n<p>At the <strong>discovery layer</strong> (<a href=\"https://github.com/ethereum/devp2p/blob/5713591d0366da78a913a811c7502d9ca91d29a8/discv5/discv5.md\" rel=\"noopener nofollow ugc\">discv5</a>), a beacon node’s identity consists of an <a href=\"https://github.com/ethereum/consensus-specs/blob/29f39487de964683bbe13d11c7c58b3fe13dca10/specs/phase0/p2p-interface.md#enr-structure\" rel=\"noopener nofollow ugc\">ENR</a> with some additional metadata. This metadata can roughly be represented as the following object:</p>\n<pre data-code-wrap=\"js\"><code class=\"lang-js\">{ \n\tpeer_id, \n\tip, \n\ttcp_port, \n\tudp_port, \n\tattnets, // Important\n\tfork_digest, \n\tnext_fork_version, \n\tnext_fork_epoch \n}\n</code></pre>\n<p>This metadata helps other peers connect to peers that are relevant to them, indeed, one of the extra metadata fields are the (long-lived) attestation subnets that this node is subscribed to!</p>\n<p>The <strong>Req/Resp domain</strong> is where the actual handshake happens. This is where nodes exchange <code>Status</code> messages that look like the following in order to establish a connection:</p>\n<pre data-code-wrap=\"js\"><code class=\"lang-js\">(\n  fork_digest: ForkDigest\n  finalized_root: Root\n  finalized_epoch: Epoch\n  head_root: Root\n  head_slot: Slot\n)\n</code></pre>\n<p>The underlying protocol used for the Req/Resp domain is (again) libp2p. On the lower levels, additional information like <code>client_version</code> is also exchanged when connections are set up.</p>\n<p>It is at this level that peers can also exchange <code>MetaData</code> objects to identify each other’s most up to date long-lived subnet subscriptions. The <a href=\"https://github.com/ethereum/consensus-specs/blob/29f39487de964683bbe13d11c7c58b3fe13dca10/specs/phase0/p2p-interface.md#metadata\" rel=\"noopener nofollow ugc\"><code>MetaData</code></a> object looks like this:</p>\n<pre data-code-wrap=\"js\"><code class=\"lang-js\">(\n  seq_number: uint64\n  attnets: Bitvector[ATTESTATION_SUBNET_COUNT]\n  ...\n)\n</code></pre>\n<h3><a name=\"short-lived-subnets-10\" class=\"anchor\" href=\"https://ethresear.ch#short-lived-subnets-10\"></a>Short-lived subnets</h3>\n<p>So far, we’ve only seen how nodes exchange metadata and their long-lived subnet subscriptions, which tell us nothing about potential validators. For that, we need the short-lived subnets, which we can only collect on the gossip domain. Our initial strategy was doing just that:</p>\n<ol>\n<li>Listen to incoming topic subscription requests</li>\n<li>Save and index them</li>\n</ol>\n<p>However, on an initial review of the data, we saw way too many beacon nodes that didn’t subscribe to any additional subnets besides their long-lived, mandatory subscriptions.</p>\n<p>Our assumption was that in order to publish data on a gossipsub topic, one needed to be subscribed to it. It turns out that this is not the case, and many clients have different behaviour to minimize bandwidth and CPU usage. Rather than subscribing to the subnet directly, the peer finds other peers that are subscribed to the required subnet beforehand and shares the attestation with them. The subscribed peers make sure to verify and forward these attestations. Remember that in theory, only attestation aggregators need to be listening to all incoming attestations in order to do their jobs. This is exactly what was happening, and explains why we had so little short-lived subnet observations.</p>\n<p>With this understanding, we could now tune our assumptions:</p>\n<ul>\n<li>For each subnet, there’s a target of <code>TARGET_AGGREGATORS_PER_COMMITTEE=16</code> aggregators per committee</li>\n<li>This means that on average, there will only be <span class=\"math\">16</span> validators per committee that will be subscribed to an additional short-lived subnet for the duration of an epoch</li>\n<li>This results in a maximum of <span class=\"math\">16 * 32 * 64 = 32768</span> useful observations per epoch</li>\n</ul>\n<p>With these assumptions in mind, we can start estimating validator counts.</p>\n<h3><a name=\"estimating-validator-counts-11\" class=\"anchor\" href=\"https://ethresear.ch#estimating-validator-counts-11\"></a>Estimating validator counts</h3>\n<p>For each observation, we subtract the number of long-lived subnets <span class=\"math\">S_l</span> from all subscribed subnets <span class=\"math\">S_{all}</span> to arrive at the number of short-lived subnets <span class=\"math\">S_s</span>:</p>\n<div class=\"math\">\nS_s = S_{all} - S_l\n</div>\n<p>Since we know aggregators are subscribed to one additional subnet per epoch, <span class=\"math\">S_s</span> will result in an estimated validator count for a certain beacon node in this epoch. Note that just one observation will not be enough to get an accurate estimate, because of the following reasons:</p>\n<ul>\n<li>It could be that a validator is not an aggregator for this epoch, and thus won’t subscribe to any subnets</li>\n<li>There could be overlap between the long-lived and short-lived subnets</li>\n</ul>\n<p>Due to this reason, we continuously try to collect observations for each known beacon node per epoch, and save the maximum estimated validator counts. Note also that the ceiling for validator estimations is at <span class=\"math\">64 - 2</span>, because that’s the maximum amount of short-lived subnets we can record. This is important! It means that for beacon nodes with more than <span class=\"math\">62</span> validators, we can not estimate how many there are, and just record the ceiling. We want to highlight again that this is just an estimation and won’t be a very accurate representation of the total number of validators.</p>\n<h2><a name=\"architecture-12\" class=\"anchor\" href=\"https://ethresear.ch#architecture-12\"></a>Architecture</h2>\n<p>In this section we’ll dive a bit deeper into the architecture. All the code for this is open source and can be found in this repository: <a href=\"https://github.com/chainbound/valtrack\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - chainbound/valtrack: An Ethereum validator crawler</a>. A lot of the crawler code is based on projects like <a href=\"https://github.com/probe-lab/hermes\" rel=\"noopener nofollow ugc\">Hermes</a> and <a href=\"https://github.com/migalabs/armiarma/\" rel=\"noopener nofollow ugc\">Armiarma</a>. An overview can be seen here:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/8/e856490bf2dd28b100abeb8c0f37e50f389e882b.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/e856490bf2dd28b100abeb8c0f37e50f389e882b\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/8/e856490bf2dd28b100abeb8c0f37e50f389e882b_2_690x305.jpeg\" alt=\"image\" data-base62-sha1=\"x9lDAThNmCeGPC4C8xt1R0touRd\" width=\"690\" height=\"305\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/8/e856490bf2dd28b100abeb8c0f37e50f389e882b_2_690x305.jpeg, https://ethresear.ch/uploads/default/optimized/3X/e/8/e856490bf2dd28b100abeb8c0f37e50f389e882b_2_1035x457.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/e/8/e856490bf2dd28b100abeb8c0f37e50f389e882b_2_1380x610.jpeg 2x\" data-dominant-color=\"F5F9F2\"></a></div><p></p>\n<h3><a name=\"crawler-13\" class=\"anchor\" href=\"https://ethresear.ch#crawler-13\"></a>Crawler</h3>\n<p>The crawler is the core component of the system. It will crawl the discv5 discovery DHT, find nodes that are on the correct network by looking at the metadata in their ENRs, and then try to connect with them. It will keep a local cache of known peers and try to reconnect every epoch to get updated observations.</p>\n<p>We outline 2 types of events (observations): <code>PeerDiscoveryEvent</code> and <code>MetadataReceivedEvent</code>. The second one is most relevant and contains the following fields:</p>\n<pre data-code-wrap=\"go\"><code class=\"lang-go\">type MetadataReceivedEvent struct {\n\tENR               string          `json:\"enr\"`\n\tID                string          `json:\"id\"`\n\tMultiaddr         string          `json:\"multiaddr\"`\n\tEpoch             int             `json:\"epoch\"`\n\tMetaData          *eth.MetaDataV1 `json:\"metadata\"`\n\tSubscribedSubnets []int64         `json:\"subscribed_subnets\"`\n\tClientVersion     string          `json:\"client_version\"`\n\tCrawlerID         string          `json:\"crawler_id\"`\n\tCrawlerLoc        string          `json:\"crawler_location\"`\n\tTimestamp         int64           `json:\"timestamp\"` // Timestamp in UNIX milliseconds\n}\n</code></pre>\n<p>Along with some metadata, this contains all of the fields required to apply the previously described methodology: <code>SubscribedSubnets</code> contains the actually subscribed subnets, obtained by listening on the GossipSub domain, and <code>MetaData</code> contains the peer’s long-lived subnets.</p>\n<p>All of these events are then sent to a persistent message queue, where they are stored until they’re read by the consumer.</p>\n<h3><a name=\"consumer-14\" class=\"anchor\" href=\"https://ethresear.ch#consumer-14\"></a>Consumer</h3>\n<p>The consumer turns the event logs into a stateful view of the network by implementing the methodology described above. It parses the short-lived subnets from the metadata events to get the estimated validator counts, and updates any existing entries in its stateful view. This stateful view is saved in a local sqlite database, which we expose over an API. The table schema roughly looks like this:</p>\n<pre data-code-wrap=\"sql\"><code class=\"lang-sql\">validator_tracker (\n\tpeer_id TEXT PRIMARY KEY,\n\tenr TEXT,\n\tmultiaddr TEXT,\n\tip TEXT,\n\tport INTEGER,\n\tlast_seen INTEGER,\n\tlast_epoch INTEGER,\n\tclient_version TEXT,\n\tpossible_validator BOOLEAN,\n\tmax_validator_count INTEGER,\n\tnum_observations INTEGER,\n\thostname TEXT,\n\tcity TEXT,\n\tregion TEXT,\n\tcountry TEXT,\n\tlatitude REAL,\n\tlongitude REAL,\n\tpostal_code TEXT,\n\tasn TEXT,\t\n\tasn_organization TEXT,\n\tasn_type TEXT\n)\n</code></pre>\n<p>We then join this data together with an IP location dataset to provide more information about geographical distribution.</p>\n<h2><a name=\"results-15\" class=\"anchor\" href=\"https://ethresear.ch#results-15\"></a>Results</h2>\n<p><a href=\"https://www.chainbound.io/\" rel=\"noopener nofollow ugc\">Chainbound</a> runs a <a href=\"https://github.com/chainbound/valtrack\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - chainbound/valtrack: An Ethereum validator crawler</a> deployment that pushes all data to Dune every 24 hours.</p>\n<blockquote>\n<p><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/bulb.png?v=12\" title=\":bulb:\" class=\"emoji\" alt=\":bulb:\" loading=\"lazy\" width=\"20\" height=\"20\"> Dune table link: <a href=\"https://dune.com/data/dune.rig_ef.validator_metadata\" rel=\"noopener nofollow ugc\">https://dune.com/data/dune.rig_ef.validator_metadata</a>.</p>\n</blockquote>\n<p><em>This data has been stripped of sensitive information such as IP addresses and exact coordinates. However, it retains information like city, coordinates with a precision of a 10km radius, and ASN information.</em></p>\n<p>An example dashboard leveraging this information can be seen <a href=\"https://chainbound.grafana.net/dashboard/snapshot/AmuaGRjfOrARoc7BWY9L43dD5jIgsgnf?orgId=1\" rel=\"noopener nofollow ugc\">here</a>.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/5/e5a141037b8bcb98e8247ccb94f3daeeb2d143ce.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/e5a141037b8bcb98e8247ccb94f3daeeb2d143ce\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e5a141037b8bcb98e8247ccb94f3daeeb2d143ce_2_690x360.jpeg\" alt=\"image\" data-base62-sha1=\"wLoPcaK1sTQjSqB8eaUjEMdLPK6\" width=\"690\" height=\"360\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e5a141037b8bcb98e8247ccb94f3daeeb2d143ce_2_690x360.jpeg, https://ethresear.ch/uploads/default/optimized/3X/e/5/e5a141037b8bcb98e8247ccb94f3daeeb2d143ce_2_1035x540.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/e/5/e5a141037b8bcb98e8247ccb94f3daeeb2d143ce_2_1380x720.jpeg 2x\" data-dominant-color=\"212220\"></a></div><p></p>\n<p>We also store the individual event logs, like PeerDiscoveryEvent and MetadataReceivedEvent. These are available on demand by sending an email to <a href=\"mailto:admin@chainbound.io\">admin@chainbound.io</a>.</p>\n<h2><a name=\"limitations-16\" class=\"anchor\" href=\"https://ethresear.ch#limitations-16\"></a>Limitations</h2>\n<ul>\n<li>The maximum number of validators we can estimate with this methodology per beacon node is 62, due to that being the maximum amount of short-lived subnet subscriptions. This will result in a significantly underreported total number of validators, but should still be able to provide a reasonable estimation of the geographical distribution.</li>\n<li>We failed to gather any meaningful data on Teku nodes over the 30-day period, which could signify an error in our P2P implementation and impact the results.</li>\n<li>These results will be skewed towards validators attached to beacon nodes that have opened P2P networking ports in their firewall, which will mostly be beacon nodes running on cloud providers. The reason for this is that our crawler can more easily connect to nodes that have exposed ports.</li>\n</ul>\n<h2><a name=\"references-17\" class=\"anchor\" href=\"https://ethresear.ch#references-17\"></a>References</h2>\n<ul>\n<li><a href=\"https://eth2book.info/capella/\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Upgrading Ethereum</a></li>\n<li><a href=\"https://hackmd.io/@dmarz/ethereum_overlays\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">The Hitchhiker's Guide to P2P Overlays in Ethereum Consensus - HackMD</a></li>\n<li><a href=\"https://github.com/ethereum/consensus-specs/tree/dev\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - ethereum/consensus-specs: Ethereum Proof-of-Stake Consensus Specifications</a></li>\n</ul>\n            <p><small>4 posts - 4 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/estimating-validator-decentralization-using-p2p-data/19920\">Read full topic</a></p>","link":"https://ethresear.ch/t/estimating-validator-decentralization-using-p2p-data/19920","pubDate":"Thu, 27 Jun 2024 08:33:30 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19920"},"source":{"@url":"https://ethresear.ch/t/estimating-validator-decentralization-using-p2p-data/19920.rss","#text":"Estimating Validator Decentralization Using p2p Data"}},{"title":"Presenting Klaster - rethinking chain abstraction","dc:creator":"fichiokaku","category":"Applications","description":"<h1><a name=\"introduction-1\" class=\"anchor\" href=\"https://ethresear.ch#introduction-1\"></a>Introduction</h1>\n<p>We are witnessing an ever-growing list of new chains popping out, and attracting a high level of activity and transactions. Ethereum is also scaling nicely, and with the EIP-4844 it’s becoming increasingly cheaper to onboard as a user and start interacting with chains.</p>\n<p>This introduces fragmentation, which in our opinion is here to stay especially in a world where there will be hundreds of chains, users will demand fragmentation to be solved for. If we build solutions that kind of aggregate different assets in some sort of “centralized” service only to make all chains look like one and make it easy to move across chains, then we haven’t accomplished much.</p>\n<p>We propose a solution which abstracts away chains and solves for fragmentation by introducing <strong>Klaster</strong> - a network of nodes placed between the users and chains. This layer wraps multiple blockchain networks and makes it easy for users to execute complex transaction flows spanning across one or more chains - all of that approved by the single off-chain signature.</p>\n<p>By introducing the Klaster Nodes as a generic execution network, and defining how cross-chain transactions are being bundled and approved, we hope to set the standard for building chain abstracted applications. This goes beyond just a simple balance abstraction - spend your funds from one chain by interacting on another chain. It provides a “full” chain abstraction by allowing any arbitrary flow to be defined and executed.</p>\n<h1><a name=\"tldr-2\" class=\"anchor\" href=\"https://ethresear.ch#tldr-2\"></a>TL;DR</h1>\n<p>Klaster Protocol aims to position itself as a chain abstraction framework which allows dApps or Wallets to build complex cross-chain transaction bundles and let the users sign only once to execute these bundles across one or more blockchain networks.</p>\n<p>We introduce two key concepts:</p>\n<ul>\n<li><strong>iTx bundles</strong>: series of (possibly dependent) transactions spanning across many chains</li>\n<li><strong>Transaction Commitment Layer</strong>: network of nodes providing execution guarantees and offering orchestrated iTx execution across many blockchain networks</li>\n</ul>\n<p>Klaster Protocol leans on Smart Accounts and ERC-4337 EntryPoint and by introducing the economic incentives provides a reliable network of Klaster Nodes which anyone can use to build truly chain abstracted dApps while not sacrificing on the security, or taking the control from the user.</p>\n<h1><a name=\"klaster-3\" class=\"anchor\" href=\"https://ethresear.ch#klaster-3\"></a>Klaster</h1>\n<p>Klaster provides an infrastructure for building chain abstracted apps. Klaster does this by introducing a network of Nodes, which act as a <strong>Transaction Commitment Layer</strong>. This layer is placed between the dApp and multiple blockchain networks, It talks to the outside world (users, dApps) via <strong>interchain transactions (iTx)</strong>.</p>\n<p>Developers can use these primitives to:</p>\n<ul>\n<li>Build chain abstracted dApps (no switch network button)</li>\n<li>Define complex flows involving multiple chains without having to think of the specifics of how the flow will get executed</li>\n<li>Automate the execution of the dependent actions spanning across many chains</li>\n<li>Onboard the users from different chains and ecosystems into their dApp with a single user signature</li>\n</ul>\n<p>Users on the other hand:</p>\n<ul>\n<li>Can interact with chain abstracted dApps using any wallet they prefer</li>\n<li>Don’t have to care of where their funds are, the dApp will be able to spend their funds from other chains with a single user signature</li>\n<li>Don’t have to “lock” their funds in order for the dApp to consume their funds</li>\n<li>Can use any asset on any chain to pay for gas cost of the full iTx execution involving many transactions on different chains</li>\n</ul>\n<h2><a name=\"core-concepts-4\" class=\"anchor\" href=\"https://ethresear.ch#core-concepts-4\"></a>Core concepts</h2>\n<p>At its core, Klaster leans on its unique approach of <strong>separating transaction signing from<br>\nthe transaction execution</strong>.</p>\n<p>If we think about how the EOA is executing a transaction on an EVM - it’s all bundled in the same operation - sign &amp; execute happening simultaneously with the user having one EOA wallet popup and interacting with the chain/RPC.</p>\n<p>A more advanced approach can be seen with the Account Abstraction (ERC-4337), where users can approve their UserOp and then hand it over to the Bundler for execution. This approach is still bounded to one single chain - the one where the user’s smart account is deployed.</p>\n<p>Klaster Model breaks the boundaries of a single chain, and allows an account owner to approve a complex series of (possibly dependent) UserOps targeting different blockchain networks - with a single off-chain signature! This signature is then provided to the Klaster Node (what would be a bundler in AA), for orchestrating an execution across all the different chains.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/5/755b51c20b470de874fc70cf3589d99577681458.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/755b51c20b470de874fc70cf3589d99577681458\" title=\"photo_2024-06-26_14-25-17\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/5/755b51c20b470de874fc70cf3589d99577681458_2_690x388.jpeg\" alt=\"photo_2024-06-26_14-25-17\" data-base62-sha1=\"gKbvVdl5b0MbxGkSTU7mNJbVSkw\" width=\"690\" height=\"388\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/5/755b51c20b470de874fc70cf3589d99577681458_2_690x388.jpeg, https://ethresear.ch/uploads/default/optimized/3X/7/5/755b51c20b470de874fc70cf3589d99577681458_2_1035x582.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/7/5/755b51c20b470de874fc70cf3589d99577681458.jpeg 2x\" data-dominant-color=\"111126\"></a></div><p></p>\n<p>As seen from the illustration above, if the user wanted to bridge funds and then swap on the destination chain, they would usually execute two transactions, on two different applications (Bridge app &amp; then DEX app), while also having to pay for gas fees on two different chains.</p>\n<p>By splitting the signature from the execution, Klaster is able to convert two actions into one <strong>iTx bundle</strong> and then execute them through the Klaster Node. Klaster node will figure out the ordering of transactions, and execute them as user intended, while also covering for execution fees.</p>\n<h2><a name=\"interchain-transaction-itx-bundle-5\" class=\"anchor\" href=\"https://ethresear.ch#interchain-transaction-itx-bundle-5\"></a>Interchain Transaction (iTx bundle)</h2>\n<p><strong>Interchain Transaction (iTx)</strong> is the fundamental working unit used within the Klaster protocol. It’s a bundle of one or more blockchain transactions spanning across one or more blockchain networks. It fully describes what the user or the dApp is trying to achieve. One iTx, consisting of two transactions, might be: “bridge assets from chain A using some 3rd party bridge to chain B, and then swap bridged assets for something else on chain B”.</p>\n<p>From the Klaster Protocol perspective, one iTx bundle is actually a Merkle Tree of all the UserOps as leaves, and is defined by its Merkle Root hash (iTx hash): <strong>one iTx bundle = one unique iTx hash</strong>.</p>\n<p>Any on-chain interaction on any blockchain network can be converted to the UserOp and placed as a part of a bigger iTx Merkle Tree - meaning the iTx tree approach can be used to basically define any complex operation spanning across multiple blockchain networks provided that there’s at least some liquidity services connecting the chains.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/a/2a26e4bc6a55b451b319a567816c3f9fd11c8b5a.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/2a26e4bc6a55b451b319a567816c3f9fd11c8b5a\" title=\"photo_2024-06-26_14-27-23\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/a/2a26e4bc6a55b451b319a567816c3f9fd11c8b5a_2_690x388.jpeg\" alt=\"photo_2024-06-26_14-27-23\" data-base62-sha1=\"60TnJ5InGFe0a5l7hGbxUDxiBzI\" width=\"690\" height=\"388\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/a/2a26e4bc6a55b451b319a567816c3f9fd11c8b5a_2_690x388.jpeg, https://ethresear.ch/uploads/default/optimized/3X/2/a/2a26e4bc6a55b451b319a567816c3f9fd11c8b5a_2_1035x582.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/2/a/2a26e4bc6a55b451b319a567816c3f9fd11c8b5a.jpeg 2x\" data-dominant-color=\"090C1E\"></a></div><p></p>\n<p>Transaction Commitment Layer takes unsigned iTx requests, and <strong>commits</strong> to execute them in the specific time frame - and therefore provides a reliable execution layer capable of executing the parts of the iTx on different blockchain networks. This involves strategically determining the optimal order for executing the individual transactions within the bundle. For instance, if a transaction on Polygon relies on assets being transferred from Ethereum first, the node will ensure that the Ethereum transfer is finalized before proceeding with the Polygon transaction.</p>\n<h2><a name=\"high-level-protocol-overview-6\" class=\"anchor\" href=\"https://ethresear.ch#high-level-protocol-overview-6\"></a>High Level Protocol Overview</h2>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/4/44e74558671473aa21b67bb54151e8dea1ce9070.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/44e74558671473aa21b67bb54151e8dea1ce9070\" title=\"photo_2024-06-26_14-28-18\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/4/44e74558671473aa21b67bb54151e8dea1ce9070_2_690x388.jpeg\" alt=\"photo_2024-06-26_14-28-18\" data-base62-sha1=\"9PxXJWMlULz3fk0Ml7o63hEfXVe\" width=\"690\" height=\"388\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/4/44e74558671473aa21b67bb54151e8dea1ce9070_2_690x388.jpeg, https://ethresear.ch/uploads/default/optimized/3X/4/4/44e74558671473aa21b67bb54151e8dea1ce9070_2_1035x582.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/4/4/44e74558671473aa21b67bb54151e8dea1ce9070.jpeg 2x\" data-dominant-color=\"121229\"></a></div><p></p>\n<p>The following steps are involved for the user/dApp to interact with the Klaster Protocol:</p>\n<ol>\n<li>dApp defines a list of operations to be executed across one or many chains and bundle them together into the iTx</li>\n<li>dApp asks the Klaster Network for a quote (fee) for executing an iTx</li>\n<li>dApp receives back the iTx with included fee amount and cryptographic execution guarantees given by the Klaster Network</li>\n<li>User signs the iTx by signing its root iTx hash and then broadcasts the signed iTx back to the Klaster Network</li>\n</ol>\n<p>Once the Klaster Network receives the signed iTx, it will charge the user upfront by pulling the fee amount as defined in the quote, and it will start processing the transactions from the iTx bundle, executing them on the different blockchain networks in the correct order. The specifics of how the fee is being calculated and charged upfront is outlined in the technical breakdown section.</p>\n<h2><a name=\"chain-abstraction-vs-balance-abstraction-aave-example-7\" class=\"anchor\" href=\"https://ethresear.ch#chain-abstraction-vs-balance-abstraction-aave-example-7\"></a>Chain Abstraction vs Balance Abstraction (AAVE example)</h2>\n<p>While balance abstraction is a great step forward in solving for liquidity fragmentation, it’s not covering all bases. Let’s say we want to build a chain abstracted version of AAVE, where users can interact with the dApp not only by having the “balance” abstracted away (supply assets from one chain to AAVE deployed on another chain), but also having an <strong>AAVE “position” abstracted</strong> away which is a more dApp specific use-case.</p>\n<p>For example, a user might have 100 USDC supplied on AAVE on Optimism, but they want to switch the position to Base, and supply USDC there, because of better rates. Or there’s a bot that wants to do this periodically, in the user’s name and with the user’s approval.</p>\n<p>Right now, the user would have to unwind their position, find a bridge to use, move liquidity to Base and then resupply the USDC. This involves signing multiple transactions and switching between multiple frontends and blockchain networks / RPCs, not to mention also having some gas dust on these chains to be able to execute transactions in the first place. We believe this is unsustainable and there has to be a way of “standardizing” these interactions &amp; making life easier on the user facing side.</p>\n<p>By using Klaster protocol, this complicated “position” rebalancing operation can be converted to one simple iTx bundle containing three UserOps:</p>\n<ul>\n<li>[<em>Optimism</em>] UserOp1: unwinds AAVE USDC position on Optimism</li>\n<li>[<em>Optimism</em>] UserOp2: bridges 100 USDC to Base using some third party bridge (across bridge, for example)</li>\n<li>[<em>Base</em>] UserOp3: supplies 100 USDC on AAVE</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/a/aaccd85ed18ac9bacdc8cfe3806eb872019b0363.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/aaccd85ed18ac9bacdc8cfe3806eb872019b0363\" title=\"photo_2024-06-26_14-35-03\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/a/aaccd85ed18ac9bacdc8cfe3806eb872019b0363_2_690x390.jpeg\" alt=\"photo_2024-06-26_14-35-03\" data-base62-sha1=\"omY31xaFV6pEcJlwMaJ8dhocK5R\" width=\"690\" height=\"390\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/a/aaccd85ed18ac9bacdc8cfe3806eb872019b0363_2_690x390.jpeg, https://ethresear.ch/uploads/default/optimized/3X/a/a/aaccd85ed18ac9bacdc8cfe3806eb872019b0363_2_1035x585.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/a/a/aaccd85ed18ac9bacdc8cfe3806eb872019b0363.jpeg 2x\" data-dominant-color=\"121327\"></a></div><p></p>\n<p>The only thing the user would have to do from their side is provide one signature for the iTx and the balance reposition would be handled by the Klaster Protocol automatically. No gas required on the destination chain. No different apps involved. One simple signature. And we bet that if the developers are provided with tools like Klaster, many more other interesting use-cases might emerge other than the one we’re describing here.</p>\n<h1><a name=\"technical-breakdown-i-want-to-know-more-8\" class=\"anchor\" href=\"https://ethresear.ch#technical-breakdown-i-want-to-know-more-8\"></a>Technical Breakdown (I want to know more)</h1>\n<h2><a name=\"smart-accounts-itx-module-9\" class=\"anchor\" href=\"https://ethresear.ch#smart-accounts-itx-module-9\"></a>Smart Accounts - iTx Module</h2>\n<p>Using an iTx bundle in combination with Smart Contract Accounts allows for one very powerful feature to be implemented - and is there to help on the UX side: <strong>single signature iTx approvals</strong>.</p>\n<p>Smart Account modular architecture allows for building a standardized ERC-7579 module which “understands” iTx bundles and can be installed on top of existing smart account wallets or used to initialize new wallets as the UserOp model allows for providing the wallet initialization data as a UserOp parameter.</p>\n<p>A smart account owner can approve the whole iTx bundle of many chain transactions by only <strong>signing once</strong> - one off-chain signature of the iTx Merkle Root hash can be used to approve for executing all the transactions across many chains.</p>\n<p>As mentioned earlier, the tree is defined by its Merkle root hash - iTx hash. The smart contract owner signs the iTx hash with a signer. This typically is an EOA which is a common owner of all the smart accounts across different chains where the assets are being bridged and consumed, and by providing one signature, all of these operations are immediately executable.</p>\n<p>If the user doesn’t have a smart contract account on one or more blockchain networks - the accounts can be “lazy deployed” for the user - meaning, the iTx bundle can contain an operation which bridges some amount of funds to the “not yet created” account as the address of the smart account can be precomputed.</p>\n<p>By having the iTx validation module as a standardized module - Klaster protocol remains neutral &amp; unopiniated - it can work with different smart account providers.</p>\n<h2><a name=\"klaster-fees-node-selection-10\" class=\"anchor\" href=\"https://ethresear.ch#klaster-fees-node-selection-10\"></a>Klaster Fees &amp; Node Selection</h2>\n<p>The Klaster Transaction Commitment Layer consists of many Klaster Nodes - all of them being equal. Every Node is defined by its wallet address, and in order for nodes to join the network, they have to stake capital - this is how the nodes provide uptime &amp; execution guarantees.</p>\n<p>Klaster Nodes are taking care of the following:</p>\n<ol>\n<li>Estimating iTx fees &amp; responding to quote requests</li>\n<li>Committing to iTx execution (or rejecting the request)</li>\n<li>Executing fully signed iTx (if previously committed to execution)</li>\n</ol>\n<h3><a name=\"estimating-itx-fees-responding-to-quote-requests-11\" class=\"anchor\" href=\"https://ethresear.ch#estimating-itx-fees-responding-to-quote-requests-11\"></a>Estimating iTx fees &amp; responding to quote requests</h3>\n<p>When the user or the dApp asks the protocol for quotes, every node will estimate the total cost of executing the iTx on different chains. The node adds its own fee on top of the total cost, including the <strong>success execution tip</strong> (more on this in the “optimistic execution” chapter) and responds back with the full cost the user will have to pay in order for the node to do the job.</p>\n<h3><a name=\"committing-to-itx-execution-or-rejecting-the-request-12\" class=\"anchor\" href=\"https://ethresear.ch#committing-to-itx-execution-or-rejecting-the-request-12\"></a>Committing to iTx execution (or rejecting the request)</h3>\n<p>The user or the dApp chooses the best received quote by taking into account the total execution cost offered by each of the nodes, and their reputation. The dApp then connects directly with the selected node, and asks for a commitment - a guarantee from the node that they are going to execute the iTx in full, provided that the user pays for what the node asks for.</p>\n<p>The node commits to the iTx execution by</p>\n<ol>\n<li>Prepending the payment tx* in the list of the transactions in the iTx bundle</li>\n<li>Signing the root iTx hash with its own private key - essentially binding itself to the execution of the iTx</li>\n</ol>\n<p>*<em>A payment transaction generated and prepended by the node transfers some liquid asset from the user’s account to the node wallet address. The asset is selected by the user and the amount is calculated by the node to cover for all the execution costs + the node fee. This means that the user can pay for the execution on any chain and in any asset supported by the node.</em></p>\n<h3><a name=\"executing-fully-signed-itx-if-previously-committed-to-execution-13\" class=\"anchor\" href=\"https://ethresear.ch#executing-fully-signed-itx-if-previously-committed-to-execution-13\"></a>Executing fully signed iTx (if previously committed to execution)</h3>\n<p>Once the dApp receives the iTx which includes the payment transaction and the node commitment, the user is finally prompted to approve the full iTx bundle by signing the root iTx hash - essentially approving the execution of all the transactions contained in the bundle. The iTx bundle, whose root iTx hash has been signed by both the node (commitment) &amp; user (execution approval) is sent to back the selected node which:</p>\n<ol>\n<li>Verifies the iTx bundle integrity (calculates &amp; verifies merkle root)</li>\n<li>Verifies the commitment signature (make sure the node really did commit to this iTx)</li>\n<li>Verifies the user signature</li>\n<li>Collects the payment from the user (the first transaction in the iTx bundle)</li>\n<li>Once the payment is complete, proceeds to execute the rest of the operations by performing the optimistic execution algorithm</li>\n</ol>\n<p>If the node fails to execute the iTx bundle, the user can use the node commitment (node iTx signature) to initiate a slashing request and prove on-chain that the node actually promised to execute the iTx but failed to do so in a given timeframe.</p>\n<h2><a name=\"meta-paymaster-and-multichain-gas-refunds-14\" class=\"anchor\" href=\"https://ethresear.ch#meta-paymaster-and-multichain-gas-refunds-14\"></a>Meta Paymaster and Multichain Gas Refunds</h2>\n<p>For the node to be fully operational, they have to own the native coin balance on their wallet address for every chain they support - in order to be able to pay for gas and execute UserOps as a part of iTx bundle. By accepting the upfront payment from the user in one token and one chain, and then executing the transactions and subsidizing gas on one or more chains, Klaster Node acts in a way as a Meta Paymaster.</p>\n<p>The node executes UserOps contained in the iTx by routing them through the official ERC-4337 EntryPoint on different chains, and after receiving post-operation execution callbacks with the actual gas consumption data, the node will execute refunds for every processed UserOp, that is if actual UserOp cost (including the Klaster Node fee) was less than the maximum UserOp that was prepaid by the user. The process is illustrated below:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/c/9ca11c122eee71670ddf3e95a2ecee88cf427bcb.png\" data-download-href=\"https://ethresear.ch/uploads/default/9ca11c122eee71670ddf3e95a2ecee88cf427bcb\" title=\"klaster-meta-paymaster-latest\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/c/9ca11c122eee71670ddf3e95a2ecee88cf427bcb_2_569x500.png\" alt=\"klaster-meta-paymaster-latest\" data-base62-sha1=\"mlBEZLgyhBSYSQ9N480C2fNG6GD\" width=\"569\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/c/9ca11c122eee71670ddf3e95a2ecee88cf427bcb_2_569x500.png, https://ethresear.ch/uploads/default/optimized/3X/9/c/9ca11c122eee71670ddf3e95a2ecee88cf427bcb_2_853x750.png 1.5x, https://ethresear.ch/uploads/default/original/3X/9/c/9ca11c122eee71670ddf3e95a2ecee88cf427bcb.png 2x\" data-dominant-color=\"F7F5F5\"></a></div><p></p>\n<p>By relying on the official ERC-4337 EntryPoint for UserOp routing, the Klaster Protocol is staying compliant with the AA space, since most of the AA wallets today choose to trust and give control to one EntryPoint contract. Any existing AA wallet could technically activate the Klaster iTx module and gain cross-chain capabilities.</p>\n<h2><a name=\"optimistic-itx-execution-15\" class=\"anchor\" href=\"https://ethresear.ch#optimistic-itx-execution-15\"></a>Optimistic iTx Execution</h2>\n<p>Klaster Node is incentivized to execute UserOps from a given iTx bundle in the right order of events, without the user having to explicitly provide the order of events.</p>\n<p>The right order of events is implicitly deduced by the Klaster Node, by repeatedly simulating every UserOp, between the timestamp deadlines set by the user when defining UserOp, and waiting for the simulation to yield 0 <em>REVERT</em> opcodes in the simulated execution breakdown. Once this happens, Klaster Node “knows” all the preconditions have been met (whatever they may be) and will proceed to execute the UserOp as this maxmizes the profits for the Klaster Node.</p>\n<p>In our AAVE example from above, Klaster Node will wait for the bridge action to complete without having to be aware of which bridge is being used and what the estimated bridge time to destination might be. It’s not even aware of the context of any UserOp or the potential dependencies between those. The execution flow would look like this:</p>\n<ol start=\"0\">\n<li>\n<p>The Node executes the Payment UserOp (at index 0 in the list of UserOps). That way the Node charges for the full execution of all the other UserOps upfront and can proceed with the next steps</p>\n</li>\n<li>\n<p>The Node “sees” that out of three UserOps (<strong>unwind, bridge, supply</strong>), the only one with 0 REVERTs is the <strong>unwind</strong> operation, and it proceeds to execute the UserOp successfully (on Optimism)</p>\n</li>\n<li>\n<p>Afterward, another operation that yields 0 REVERTs is the bridge operation as the funds are now there to be bridged (unwinded position), so it proceeds to execute <strong>bridge</strong> action (on Optimism)</p>\n</li>\n<li>\n<p>Finally, once the funds arrive at the user’s dest chain smart account (whenever that may be, depending on the 3rd party bridge being used), the <strong>supply</strong> operation is executed which marks the full iTx execution as complete.</p>\n</li>\n</ol>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/b/bb781b0246065508b7a832ee5060408e61d20a87.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/bb781b0246065508b7a832ee5060408e61d20a87\" title=\"photo_2024-06-26_14-45-59\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/b/bb781b0246065508b7a832ee5060408e61d20a87_2_690x388.jpeg\" alt=\"photo_2024-06-26_14-45-59\" data-base62-sha1=\"qKqBVROVuFJal5ahEzMAhfZQb3h\" width=\"690\" height=\"388\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/b/bb781b0246065508b7a832ee5060408e61d20a87_2_690x388.jpeg, https://ethresear.ch/uploads/default/optimized/3X/b/b/bb781b0246065508b7a832ee5060408e61d20a87_2_1035x582.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/b/b/bb781b0246065508b7a832ee5060408e61d20a87.jpeg 2x\" data-dominant-color=\"101224\"></a></div><p></p>\n<p>By having this generic approach of not being aware of the context, iTx bundles can express pretty much any complex cross-chain flow. To incentivize the node to wait for the simulation success (0 REVERTs), but then also to execute the UserOp <strong>as soon as 0 REVERT is detected,</strong> Klaster fee will include the <strong>diminishing success tip</strong>. This fee can be collected by the Node only if the UserOp was executed with 0 REVERT status and the tip is fading to 0 as the UserOp execution moment is closing to the upper bound execution timestamp.</p>\n<p><em>It is still possible for some of the UserOps to fail, for example, 3rd party bridge not working properly. In that case - the node has fulfilled its obligation, as it’s recorded on-chain that the node “attempted” to execute the UserOp, although the funds haven’t reached the destination chain. In that case, the node is protected from slashing, while the user experienced a partially executed iTx. The funds are still owned by the user, and have remained on their wallet on one of the chains where the UserOp failed.</em></p>\n<h1><a name=\"integration-16\" class=\"anchor\" href=\"https://ethresear.ch#integration-16\"></a>Integration</h1>\n<p>dApp/Wallet developers will soon have access to the SDK, which in turn will allow for building chain abstracted applications much more efficiently, while staying neutral and not locking the developer to having to use any specific technology.</p>\n<p>The developers are free to use any bridges or 3rd party services as a part of the iTx bundle - depending on the level of security/speed they require, and to rely on different AA wallet providers as the smart account wallets used behind the scenes.</p>\n<p>On the user side, they have to sign once, and see their cross-chain intent being executed step by step without having to do any other action or even own gas funds on any of the chains they interact with.</p>\n<p>This is how we see it developed further and how dApps might integrate the SDK in order to provide cross-chain experience to the end user:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/5/65e8e1fa54439727f6d9a820b1d86e740f228025.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/65e8e1fa54439727f6d9a820b1d86e740f228025\" title=\"photo_2024-06-18_13-18-43\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/5/65e8e1fa54439727f6d9a820b1d86e740f228025_2_690x315.jpeg\" alt=\"photo_2024-06-18_13-18-43\" data-base62-sha1=\"exxaKL5HjNu0eIBhA9Tgu83F4rz\" width=\"690\" height=\"315\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/5/65e8e1fa54439727f6d9a820b1d86e740f228025_2_690x315.jpeg, https://ethresear.ch/uploads/default/original/3X/6/5/65e8e1fa54439727f6d9a820b1d86e740f228025.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/6/5/65e8e1fa54439727f6d9a820b1d86e740f228025.jpeg 2x\" data-dominant-color=\"191C1E\"></a></div><p></p>\n<h1><a name=\"demo-use-cases-17\" class=\"anchor\" href=\"https://ethresear.ch#demo-use-cases-17\"></a>Demo &amp; Use Cases</h1>\n<p>At the moment, we’re building a chain abstracted AAVE dApp - to showcase what the protocol can do in terms of UX improvements.</p>\n<p>The frontend will only contain two buttons: “supply” &amp; “borrow” without specifying the chains. When executing borrow or supply, user’s funds will be routed to any chain where the AAVE market’s rates are most favorable, regardless of the fact which chain the user’s funds are on.</p>\n<p>If the user wants to rebalance the existing position, again, it’s a one-click interaction for the user, but in the background, iTx is being executed by the Klaster Nodes.</p>\n<p>Some other interesting use cases:</p>\n<ul>\n<li>streamlined checkout flows</li>\n<li>easier onboarding to the SocialFi L2/L3 apps, as Klaster protocol works with AA by default, and many of these apps choose to have embedded wallets generated for the users behind the scenes</li>\n<li>building chain abstracted flavors of dapps that are natively multichain (DEXs, lending markets, NFT marketplaces)</li>\n<li>single-chain dApps can use the Klaster Stack to streamline onboarding flows, attracting users from various chains. With Klaster Stack, users can interact with the dApp in just one click, regardless of their original blockchain</li>\n</ul>\n<h1><a name=\"faq-18\" class=\"anchor\" href=\"https://ethresear.ch#faq-18\"></a>FAQ</h1>\n<p><strong>Q: Is Klaster a Blockchain Network?</strong><br>\nA: No.</p>\n<p><strong>Q: What’s the current development status?</strong></p>\n<p>A: Centralized Klaster Node including the SDK and the docs is in the testing phase and will be launched very soon. The decentralization phase including the slashing and multichain staking which in turn makes the network more reliable will most likely be rolled out later this year.</p>\n<p><strong>Q: What are the dangers of using Klaster Protocol?</strong></p>\n<p>A: Dangers are mostly related to the impaired UX.</p>\n<p>For example, malicous Klaster Node can refuse to process an iTx bundle in full - they only execute the Payment UserOp part of the iTx bundle. The user can still replay their UserOps manually and achieve the same effect but will have to pay for gas execution themselves. Nodes on the other hand get slashed in the decentralized model because the user can submit a proof of Node commiting to execute the iTx but failing to do so in a given timeframe - which is fully verifiable on-chain. As the AA wallets are used behind the scenes, the user is in full control of their funds, and the security is reduced to security of bridges used as an intermediary steps to move assets between chains. Klaster’s iTx-enabled AA wallet module is pending audits and the reports will be shared soon.</p>\n<p><strong>Q: Can I run my own node, and what are the advantages of running a node?</strong></p>\n<p>A: Klaster Protocol will host its own public node, with the implementation publicly available for everyone to take a look and verify the inner workings of the Node itself. While the initial version of the protocol is not decentralized in a sense of having a p2p networking implemented between public Klaster nodes, anyone can still choose to run their own Klaster Node either for their own purposes (only handling one single dApp) or even providing this node for others to connect to.</p>\n<p>New chains can spin up their own Klaster node to easily onboard users from other chains.</p>\n<p>Klaster Node if operational earns a % of the total gas processed and is another revenue stream for Node operators. To set up a node, one needs to have a wallet connected to the node, and funded with native coin on every chain which the Node operator decides to support.</p>\n<p><strong>Q: How does Klaster compare to other chain abstraction solutions?</strong></p>\n<p>A: For a start, we think we have a unique approach here in being highly focused on the UX part. We’re trying to stay as generic and as neutral as possible, and we’ve developed something that can be used today to fix the UX in some ways. Comparing to some other approaches we see being built in this space, Klaster’s main difference is that Klaster doesn’t work with liquidity nor does it require the Node operators to provide liquidity - meaning it’s easier to run the network and gain an initial base of Node operators. It doesn’t try to be “one solution fits all” which hides away blockchains completely, but rather a framework where, given the fact that the cross-chain action details are known upfront - it enables developers to easily define and build the action, and for the user to sign once and see the effects happening on different chains.</p>\n<p><strong>Q: Where does Klaster Protocol fit in the CAKE framework?</strong></p>\n<p>A: According to the CAKE Layer definitions, we’d say Klaster comes somewhere in the Settlement Layer (Execution part).</p>\n<p><strong>Q: Is Klaster Protocol a bridge?</strong></p>\n<p>A: Not really. Klaster Protocol can <em>wrap</em> bridges and other services to create a true cross-chain experience by having bridge action only there as a one step of the more comple iTx interaction.</p>\n<p><strong>Q: I want to know more about the slashing process. Why do the Nodes have to stake capital, and how does slashing work?</strong></p>\n<p>A: Klaster Nodes have to execute iTx bundles if they previously “promised” to the user they will do so. There has to be a way of punishing the Node for not doing their job - or even worse, collecting the fee payment from the user but never executing their desired intent. To make this possible, Klaster Nodes have to stake capital in order to be accepted by the network and allowed to execute iTx bundles on user’s behalf.</p>\n<p>Every UserOp contains lower and upper bound timestamps, and the interval between these are when the UserOp is considered valid and can be executed on-chain. When the Node builds a full iTx tree, and signs the root iTx hash with their private key - we say the Node is “commited” to the iTx. The user has received the full quote including the Node commitment, and can use this commitment to initiate a slashing procedure if the nonce of the user’s smart account was not increased by one in the given timeframe, on any chain where their UserOp was <strong>not executed</strong>.</p>\n<p><strong>Q: Is Klaster Protocol actually an Intent Solver network?</strong></p>\n<p>A: Not really. Intents mean the user describes the end-result state and <em>someone somehow</em> finds the solution to the steps (txs) required to achieve the desired outcome. Klaster takes a completely opposite approach. The design space of the intent solvers is just too big and solving for all cases using intents is simply too complicated. We say - let’s make the system more exact, in a sense that, we assume that the developers of either dApps or wallets will always know upfront what exactly they want to achieve - and then let’s give them tools and means of how to express this interaction (iTx bundle) while making it easy for users to approve and execute these iTx bundles.</p>\n<p>Klaster Protocol though is a great tool for Intent Solvers to express &amp; execute their “paths of execution” once they solve for some specific user’s request.</p>\n<p><strong>Q: What’s the role of AA Wallets in the Klaster Protocol?</strong></p>\n<p>A: AA Wallet is the only viable option for Klaster Protocol to work. Since we need to be able to have the user authorize many actions with only one signature - the only possibility for this to work is to actually use programmable smart contract wallets.</p>\n<p><strong>Q: How is the Node protected from users? How are the users protected from the Node?</strong></p>\n<p>A: The Node charges for its service fee plus all the other execution gas costs upfront. This way, the node might overcharge for the gas spendings, but the user will still get charged fairly if the actual gas spent was lower than what the node calculated. The Node will not commit to execute the iTx if the iTx looks risky - too short timespans for the UserOp execution, or the UserOp execution window which starts far away in the future (gas price spike risks).</p>\n<p>The user is protected from the Node by being the only owner of the AA Wallet which used to execute iTx steps. Even if the Klaster Network dies completely, the user can still access and manage funds. The Klaster Node can only do what the user explicitly signs &amp; approves.</p>\n<p><strong>Q: Does the user need to own the funds on the AA Wallet to interact with the Klaster Protocol in the first place?</strong></p>\n<p>A: Unfortunately yes. If the user’s coming with an EOA wallet and assets are held by this EOA, the user will have to execute at least one EOA transaction and move funds from this wallet to an iTx enabled AA wallet to be able to use Klaster for chain abstraction / gas abstraction purposes. Luckily, the EIP-7702 which is confirmed will improve this flow substantially.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/presenting-klaster-rethinking-chain-abstraction/19910\">Read full topic</a></p>","link":"https://ethresear.ch/t/presenting-klaster-rethinking-chain-abstraction/19910","pubDate":"Wed, 26 Jun 2024 13:13:35 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19910"},"source":{"@url":"https://ethresear.ch/t/presenting-klaster-rethinking-chain-abstraction/19910.rss","#text":"Presenting Klaster - rethinking chain abstraction"}},{"title":"Pricing Gas Fee Derivatives","dc:creator":"FinnCF","category":"Economics","description":"<p><em>Thanks to Nethermind, <a class=\"mention\" href=\"https://ethresear.ch/u/tkstanczak\">@tkstanczak</a>, <a class=\"mention\" href=\"https://ethresear.ch/u/swapnilraj\">@swapnilraj</a> , <a class=\"mention\" href=\"https://ethresear.ch/u/dapplion\">@dapplion</a>, Martin Koppelmann and <a class=\"mention\" href=\"https://ethresear.ch/u/drewvanderwerff\">@DrewVanderWerff</a> for discussion, feedback and review.</em></p>\n<p><strong>This is the first instalment in a series of posts where I will outline a methodology for understanding and pricing gas derivatives. The following approach for pricing will be valuable for gas hedging and can also be applied to develop a subscription model for Ethereum.</strong></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/0/2075264e1980cd984ec67a32af4bbe1689af4874.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/2075264e1980cd984ec67a32af4bbe1689af4874\" title=\"There-Will-Be-Blood1-ezgif.com-webp-to-jpg-converter\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/0/2075264e1980cd984ec67a32af4bbe1689af4874_2_690x460.jpeg\" alt=\"There-Will-Be-Blood1-ezgif.com-webp-to-jpg-converter\" data-base62-sha1=\"4D8gNDuOYVZUHwi3Mns3cWsly6w\" width=\"690\" height=\"460\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/0/2075264e1980cd984ec67a32af4bbe1689af4874_2_690x460.jpeg, https://ethresear.ch/uploads/default/original/3X/2/0/2075264e1980cd984ec67a32af4bbe1689af4874.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/2/0/2075264e1980cd984ec67a32af4bbe1689af4874.jpeg 2x\" data-dominant-color=\"A49A93\"></a></div><p></p>\n<p><em>There Will Be Blood” (2007) - are we going to be unwitting extras in the ‘digital oil’ sequel?</em></p>\n<p><strong>TLDR:</strong> I show how a two-factor model can be used to price base fee options, of both European and American type. A developed gas derivatives market would be highly beneficial for participants looking to hedge against volatile operational expenses on gas or for those aiming to speculate on future gas fee trends.</p>\n<p><strong>Why Price Base Fee Derivatives?</strong></p>\n<p>Gas expenditure is a substantial portion of operational costs within blockchain ecosystems. Whether it involves L2 sequencers committing transactions to L1, the running of a DeFi protocols keeper, interacting with oracle contracts, rebalancing liquidity on platforms like Uniswap, verifying proofs, or conducting arbitrage, gas fees are an unpredictable expense. This inherent volatility poses challenges for financial planning and budgeting in blockchain operations. Gas hedging, analogous to its counterpart in traditional financial markets, provides a mechanism to manage and mitigate this uncertainty.</p>\n<p>By purchasing gas derivatives, stakeholders can secure current gas fee levels for future transactions, effectively insuring against unforeseen spikes in gas prices. Additionally, with a strike price of zero on a call option, one can fully prepay for gas, paving the way for a ‘gas subscription’ model on Ethereum—assuming a delivery mechanism is established. This research could be particularly useful for pre-confirmations, where blockspace is purchased in advance.</p>\n<p>The following post breaks down the importance of understanding base fees, examining their volatility, and proposing a detailed model for pricing base fee derivatives. The first section delves into the calculation of base fees, while the second outlines their structure. In the third section, a model incorporating both deterministic and stochastic components is detailed to simulate base fees using a Monte Carlo process. The fourth and final section explains how to use these Monte Carlo generated paths to price base fee options, including both European and American types. Use cases of this research include participants that want to examine the fair value of a base fee option, a task helpful for those interacting with derivative protocols like Oiler’s Pitch lake <a href=\"https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4123018\" rel=\"noopener nofollow ugc\">[1]</a>.</p>\n<p>This post is the first in a series on the topic, aimed at sparking interest among both Ethereum researchers and traders. My goal is to engage quants in the conversation around Ethereum infrastructure.</p>\n<p><strong>Understanding Base Fees</strong></p>\n<p>Before pricing base fees, we should understand its constituent parts. EIP-1559, implemented in the London hard fork of Ethereum in August 2021, introduced a significant overhaul to the transaction fee mechanism on the Ethereum network. The proposal aimed to improve the predictability and efficiency of transaction fees, addressing several issues inherent in the previous auction-based system. Under EIP-1559, each block has a base fee, which is dynamically adjusted according to network congestion. When demand for block space increases, the base fee rises, and when demand decreases, the base fee falls. This mechanism helps to stabilize transaction fees and makes them more predictable for users.</p>\n<p>The specific adjustment rule proposed in the EIP-1559 spec computes the base fee <span class=\"math\">BF_{\\text{cur}}</span> for the current block from the base fee <span class=\"math\">BF_{\\text{pred}}</span> and size <span class=\"math\">s_{\\text{pred}}</span> of the predecessor block using the following formula, where <span class=\"math\">s_{\\text{target}}</span> denotes the target block size:</p>\n<div class=\"math\">\nBF_{\\text{cur}} := BF_{\\text{pred}} \\cdot \\left( 1 + \\frac{1}{8} \\cdot \\frac{s_{\\text{pred}} - s_{\\text{target}}}{s_{\\text{target}}} \\right)\n\n</div>\n<p>In short, the next base fee is adjusted by a percentage that equals one-eighth of the difference to the target percentage - meaning base fees are within the bounds of 12.5% higher or lower than the previous block. As is visible below when comparing gas usage, full blocks of 30M are most frequent, with gas usage of just below 13M second most frequent.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/3/f3ef180d0b94b634c3727e72c56bcf12cb7ccbfa.png\" data-download-href=\"https://ethresear.ch/uploads/default/f3ef180d0b94b634c3727e72c56bcf12cb7ccbfa\" title=\"Histogram\"><img src=\"https://ethresear.ch/uploads/default/original/3X/f/3/f3ef180d0b94b634c3727e72c56bcf12cb7ccbfa.png\" alt=\"Histogram\" data-base62-sha1=\"yNWht17n1rIqlO3o4FDnqqgNmH0\" width=\"657\" height=\"500\" data-dominant-color=\"F6F6F6\"></a></div><p></p>\n<p><strong>Those Are Some Large Percentage Changes… Why Are Base Fees So Volatile?</strong></p>\n<p>Several factors contribute to the high volatility of base fees, with the non-storability of base fees and the limited block-space supply being the most significant. Since block-space has a strict limit to 30M gas, which cannot be stored or transferred over time, supply in each time period is fixed, while demand can fluctuate based on usage needs. Base fees for transactions is thus demand inelastic. Consequently, during periods of low demand, the base fee remains relatively stable. However, during peak times, the relative insensitivity of demand to price changes can lead to significant volatility in short-term base fee prices—‘Jumps’. This situation is similar to the electricity market, where demand remains high regardless of price, causing extreme price volatility during peak usage. In the blockchain context, the necessity of paying the base fee to conduct transactions ensures somewhat steady demand, even as prices fluctuate dramatically.</p>\n<p>Additionally, since base fees are influenced by the previous base fee, a block with high demand for blockspace—such as one resulting from the deployment of a large simultaneous smart-contract architecture—will primarily impact users in the following block. Users pay for blockspace based on the previous blocks usage, not the current one. Consequently, in the short term, a deployer will not always experience the negative externalities of increasing gas fees for near-future blockchain users. This creates a scenario where users are indifferent to increasing base fees by the cap of 12.5%. Current discussions, as well researched by SMG <a href=\"https://www.mechanism.org/spec/04\" rel=\"noopener nofollow ugc\">[2]</a>, suggest to minimise this externality, and subsequent short-term volatility by modifying the denominator to a higher value. The change would reduce sensitivity to randomness in gas usage and better align the process with underlying trends, improving stability and predictability.</p>\n<p><strong>Characteristics of Base Fees</strong></p>\n<p>Base fees can be simulated through understanding the structure of gas usage, before feeding the resulting parameters into the <span class=\"math\">BF_{\\text{cur}}</span> equation to find the base fees, or observing base fees themself. The model I propose focuses on the latter, as a result of my focus being on hourly averaged base fees for use in 1 day plus dated options, and a focus on gas usage would also mean accounting for variable gas limits. The model I am proposing is very flexible, and allow us to simultaneously include trends, seasonality, mean reversion, volatility and jumps.</p>\n<p><strong>Overarching Trend</strong></p>\n<p>Unlike electricity, wherein supply can vary, base fees relate directly to the demand side usage of a product, a blockchain. When a new EIP is passed as to change the structure of base fees, or if gas usage dramatically decreases. Unlike electricity, trends in gas usage are far shorter and dissimilar to one another, trends should thus be likened to regimes. For example, one regime may be a simple horizontal linear trend in periods of stable usage,  where another is an exponential trend downwards as a result of blobs being recently introduced.</p>\n<p><strong>Seasonality</strong></p>\n<p>Base Fee demand is heavily influenced by varying usage of economic and business activities of agents on the underlying blockchain. Different kinds of seasonality appear in the data; intra-daily and weekly. As it is usual in this type of research, I assume that seasonality is generated by deterministic factors and since I use the average hourly prices.</p>\n<p><strong>Mean-reversion</strong></p>\n<p>In the short term, during periods of high demand, base fees spike, discouraging excessive gas usage, which in turn reduces congestion and drives fees back down. Conversely, during low demand periods, lower fees encourage more transactions, increasing congestion and pushing fees back up. This cyclical nature of congestion creates a mean-reverting behaviour in base fees. Essentially, despite short-term fluctuations, base fees tend to stabilize around an average level, influenced by the balance of demand and network capacity.</p>\n<p><strong>Jumps and volatility</strong></p>\n<p>By simple eye inspection of base fees over time, there is clear existence of important jumps in the behaviour of base fees, as a result of sequential filling of blocks. One of the characteristics of evolution of these jumps is that the base fees do not stay in the new level, to which it jumps, but revert to the previous level rapidly. Such a behaviour can be captured by introducing a jump-diffusion component to a simulation model.</p>\n<h2><a name=\"pricing-base-fees-1\" class=\"anchor\" href=\"https://ethresear.ch#pricing-base-fees-1\"></a><strong>Pricing Base Fees</strong></h2>\n<p>How should one price option premiums? Determining the appropriate pricing model for gas fees involves understanding their nature and selecting an appropriate financial framework. Gas fees could be treated as equities, interest rates, or commodities, each with distinct modelling approaches. Popular analytical models like the Black-Scholes closed-form model, often used for equities, offer theoretical insights into price movements and volatility - but in the case of base fees, the underlying assumption of normality in returns would be too naive, and the mean reversion and seasonality present in base fees wouldn’t be accounted for. Alternatively, numerical methods such as finite difference and Monte Carlo simulations would provide far more flexible and robust techniques for capturing the stochastic and path dependent nature of base fees. I therefore opt for the Monte Carlo simulation approach.</p>\n<h2><a name=\"model-specification-and-estimation-2\" class=\"anchor\" href=\"https://ethresear.ch#model-specification-and-estimation-2\"></a><strong>Model Specification and Estimation</strong></h2>\n<p><strong>Exponential Trend Examination</strong></p>\n<p>I first assess the presence of an exponential trend by computing the weekly statistics of the mean and standard deviation. If the spot price series exhibits an exponential trend, then the means and standard deviations, computed over time periods, should be correlated with a statistically significant slope.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/f/ffd93a4891dbf0193c6c5b3a00494d51f2569a4a.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/ffd93a4891dbf0193c6c5b3a00494d51f2569a4a\" title=\"Figure_1\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/f/ffd93a4891dbf0193c6c5b3a00494d51f2569a4a_2_690x449.jpeg\" alt=\"Figure_1\" data-base62-sha1=\"Avla6XsllENLQWlA6IbBDukGQBk\" width=\"690\" height=\"449\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/f/ffd93a4891dbf0193c6c5b3a00494d51f2569a4a_2_690x449.jpeg, https://ethresear.ch/uploads/default/optimized/3X/f/f/ffd93a4891dbf0193c6c5b3a00494d51f2569a4a_2_1035x673.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/f/f/ffd93a4891dbf0193c6c5b3a00494d51f2569a4a_2_1380x898.jpeg 2x\" data-dominant-color=\"F8F8F8\"></a></div><p></p>\n<p>Demonstrated by a p-value close to zero (4.43e-18), an exponential trend is evident in the data. When base fees are high, base fees are volatile. Consequently, to simplify modelling and work with linear trends, I from hereon out use the logarithm of the base fee.</p>\n<h3><a name=\"deterministic-model-specification-3\" class=\"anchor\" href=\"https://ethresear.ch#deterministic-model-specification-3\"></a><strong>Deterministic Model Specification</strong></h3>\n<p>We have seen in the previous section that a reasonable model for base fee prices should allow for the existence of deterministic seasonality, the possibility of mean-reversion, seasonality jumps, and volatility (randomness). Therefore, I propose a model that simultaneously incorporates all these factors in a flexible way.</p>\n<p>The combined long-term model can be written as the composite of a deterministic component <span class=\"math\">f(t)</span> and a stochastic component <span class=\"math\">X_t</span>:</p>\n<div class=\"math\">\n\\log(BF_t) = f(t) + X_t\n</div>\n<p><strong>Estimation of Deterministic Component</strong> <span class=\"math\">f(t)</span></p>\n<p>The deterministic component  <span class=\"math\">f(t)</span> is given by the sum of piecewise regime-based quadratic polynomial trends and sinusoidal functions corresponding to different harmonics and periods:</p>\n<div class=\"math\">\nf(t) = \\sum_{i=1}^{m} \\mathbb{I}{\\{t \\in R_i\\}} \\left( \\gamma{i,0} + \\gamma_{i,1} t + \\gamma_{i,2} t^2 \\right) + \\beta_1 \\sin\\left(\\frac{2\\pi t}{24}\\right) + \\beta_2 \\cos\\left(\\frac{2\\pi t}{24}\\right) \\\\\n + \\beta_3 \\sin\\left(\\frac{4\\pi t}{24}\\right) + \\beta_4 \\cos\\left(\\frac{4\\pi t}{24}\\right) + \\beta_5 \\sin\\left(\\frac{8\\pi t}{24}\\right) + \\beta_6 \\cos\\left(\\frac{8\\pi t}{24}\\right) \\\\\n + \\beta_7 \\sin\\left(\\frac{2\\pi t}{168}\\right) + \\beta_8 \\cos\\left(\\frac{2\\pi t}{168}\\right) + \\beta_9 \\sin\\left(\\frac{4\\pi t}{168}\\right) + \\beta_{10} \\cos\\left(\\frac{4\\pi t}{168}\\right) \\\\\n + \\beta_{11} \\sin\\left(\\frac{8\\pi t}{168}\\right) + \\beta_{12} \\cos\\left(\\frac{8\\pi t}{168}\\right) + \\xi_t\n</div>\n<p>Where:</p>\n<ul>\n<li><span class=\"math\">\\log BF_t</span> is the logarithm of the base fees per gasat time (t).</li>\n<li><span class=\"math\">t</span> is the time in hours since the start of the sample.</li>\n<li><span class=\"math\">\\beta_1</span> and <span class=\"math\">\\beta_2</span> are the coefficients for the fundamental daily seasonal components (1 day period).</li>\n<li><span class=\"math\">\\beta_3</span> and <span class=\"math\">\\beta_4</span>  are the coefficients for the first harmonic daily seasonal components (1 day period).</li>\n<li><span class=\"math\">\\beta_5</span> and <span class=\"math\">\\beta_6</span> are the coefficients for the second harmonic daily seasonal components (1 day period).</li>\n<li><span class=\"math\">\\beta_7</span> and <span class=\"math\">\\beta_8</span> are the coefficients for the fundamental weekly seasonal components (7 day period).</li>\n<li><span class=\"math\">\\beta_9</span> and <span class=\"math\">\\beta_{10}</span>  are the coefficients for the first harmonic weekly seasonal components (7 day period).</li>\n<li><span class=\"math\">\\beta_{11}</span> and <span class=\"math\">\\beta_{12}</span> are the coefficients for the second harmonic weekly seasonal components (7 day period).</li>\n<li><span class=\"math\">\\mathbb{I}_{\\{t \\in R_i\\}}</span> is an indicator function that equals 1 if <span class=\"math\">t</span> is within regime <span class=\"math\">R_i</span> and 0 otherwise.</li>\n<li><span class=\"math\">\\gamma_{i,0}</span>, <span class=\"math\">\\gamma_{i,1}</span>, and <span class=\"math\">\\gamma_{i,2}</span> are the coefficients for the piecewise polynomial trend within regime <span class=\"math\">R_i</span>.</li>\n<li><span class=\"math\">\\xi_t</span> is the error term.</li>\n</ul>\n<p>For each regime <span class=\"math\">R_i</span>, I fit a quadratic model of the form:</p>\n<div class=\"math\">\nz_i(t) = \\gamma_{i,0} + \\gamma_{i,1} t + \\gamma_{i,2} t^2\n</div>\n<p>To discover the boundaries of each regime, I utilise binary segmentation for detection of change points within the time series. This technique employs a piecewise model, identifying changes based on the L2 norm (Euclidean distance). Initially, the algorithm treats the entire time series as a single segment, searching for a point that maximises the cost function by minimising the residual sum of squares. When a significant change point is identified, the segment is split, and the algorithm recursively continues this process until no further significant change points are found.</p>\n<p>In our dataset of roughly two years, and discovered partially heuristically, I identify 16 change points, 17 regimes, with an initial regime immediately after EIP-1559’s release. This finding indicates that the underlying trend in base fees shifts approximately every half to two months. Such shifts are likely influenced by market events such as changes in market sentiment, or other critical factors, all of which could warrant their own focused research to fully understand their cause. I then discover the parameters <span class=\"math\">\\gamma_{i,0}</span>, <span class=\"math\">\\gamma_{i,1}</span>, <span class=\"math\">\\gamma_{i,2}</span> for each regime <span class=\"math\">R_i</span>, using the least squares method. This involves minimising the sum of the squared differences between the observed values <span class=\"math\">BF_t</span> and the predicted values <span class=\"math\">z_i(t)</span> within each regime <span class=\"math\">R_i</span>:</p>\n<div class=\"math\">\n\\min_{\\gamma_{i,0}, \\gamma_{i,1}, \\gamma_{i,2}} \\sum_{t \\in R_i} \\left( BF_t - (\\gamma_{i,0} + \\gamma_{i,1} t + \\gamma_{i,2} t^2) \\right)^2\n</div>\n<p>To solve this minimisation problem, I set up the following normal equations by taking partial derivatives with respect to each parameter and setting them to zero:</p>\n<div class=\"math\">\n\\frac{\\partial}{\\partial \\hat{\\gamma}_{i,0}} \\sum{t \\in R_i} \\left( y_t - (\\hat{\\gamma_{i,0}} + \\hat{\\gamma}_{i,1}) + \\hat{\\gamma}_{i,2} t^2) \\right)^2 = 0 \\\\\n\\frac{\\partial}{\\partial \\hat{\\gamma}_{i,1}} \\sum_{t \\in R_i} \\left( y_t - (\\hat{\\gamma}_{i,0} + \\hat{\\gamma}_{i,1} t + \\hat{\\gamma}_{i,2} t^2) \\right)^2 = 0 \\\\\n\\frac{\\partial}{\\partial \\hat{\\gamma}_{i,2}} \\sum_{t \\in R_i} \\left( y_t - (\\hat{\\gamma}_{i,0} + \\hat{\\gamma}_{i,1} t + \\hat{\\gamma}_{i,2} t^2) \\right)^2 = 0\n</div>\n<p>Solving these equations yields the least squares estimates for <span class=\"math\">\\hat{\\gamma}_{i,0}</span><em>, <span class=\"math\">\\hat{\\gamma}_{i,1}</span></em>, <span class=\"math\">\\hat{\\gamma}_{i,2}</span>  for each regime <span class=\"math\">R_i</span>. The below figure displays the resulting regimes and trend curves. The regression analysis has a low <span class=\"math\">R^2</span> for the majority of regimes, indicating that the trends are well-fitted to the data. Notably, the current regime, characterised by the implementation of EIP-4844, differs markedly from the previous two regimes, as base fees dramatically decrease immediately after the fork, and are recovering upwards, likely due to the recent bull market activity. I eagerly ask for a discussion with respect to the underlying reasons for each trend.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/9/4935f9d2b9492a72761b825cbab25df5fc18342c.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/4935f9d2b9492a72761b825cbab25df5fc18342c\" title=\"Trends\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/9/4935f9d2b9492a72761b825cbab25df5fc18342c_2_690x412.jpeg\" alt=\"Trends\" data-base62-sha1=\"arEuSKCbnnzOeAkaUJJ2j5fSkiw\" width=\"690\" height=\"412\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/9/4935f9d2b9492a72761b825cbab25df5fc18342c_2_690x412.jpeg, https://ethresear.ch/uploads/default/optimized/3X/4/9/4935f9d2b9492a72761b825cbab25df5fc18342c_2_1035x618.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/9/4935f9d2b9492a72761b825cbab25df5fc18342c_2_1380x824.jpeg 2x\" data-dominant-color=\"D8D8D8\"></a></div><p></p>\n<p>To calibrate the seasonality components, I first analyse the seasonality present within the data. To do so, I performed a spectral analysis using the Fast Fourier Transform (FFT). The FFT decomposes the time-domain signal into its constituent frequencies, allowing us to compute the power spectrum, which represents the signal’s power distribution across different frequencies. I focused on the positive half of the spectrum and converted frequencies to periods in hours. Significant periodic components were identified by locating peaks in the power spectrum. The identified cycles, with the most prominent displaying daily (24 hours) and weekly (168 hours) seasonality, reinforcing the sinusoidal functions specified above. I visualise the results below to highlight the dominant seasonal patterns in the data.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/c/fc3302537e3548a88afc036869c60322fd6efed6.png\" data-download-href=\"https://ethresear.ch/uploads/default/fc3302537e3548a88afc036869c60322fd6efed6\" title=\"Period\"><img src=\"https://ethresear.ch/uploads/default/original/3X/f/c/fc3302537e3548a88afc036869c60322fd6efed6.png\" alt=\"Period\" data-base62-sha1=\"zZ3BL3NlSxFFSyo8OltJ5sQGyWi\" width=\"690\" height=\"413\" data-dominant-color=\"F6F6F6\"></a></div><p></p>\n<p>In estimating the <span class=\"math\">\\beta</span> parameters, I also use a least squares optimisation method. Given the observed log base fees <span class=\"math\">BF</span> and the seasonality matrix <span class=\"math\">C</span>, the objective is to estimate the seasonality parameters <span class=\"math\">\\beta</span> that minimise the sum of squared residuals. This is formulated as:</p>\n<div class=\"math\">\n\\min_{\\beta} \\| log(BF)_{detrended} - C \\beta \\|^2\n\n</div>\n<p>where:</p>\n<ul>\n<li><span class=\"math\">log(BF)_{detrended}</span>  is the vector of de-trended log base fees,</li>\n<li><span class=\"math\">C</span>  is the matrix containing the seasonality functions (sine, cosine),</li>\n<li><span class=\"math\">\\beta</span>  is the vector of seasonality parameters to be estimated.</li>\n</ul>\n<p>The expanded form of the objective function is:</p>\n<div class=\"math\">\n\\min_{\\beta} \\sum_{I=1}^{n} (log(BF_i)_{detrended} - C_i \\beta)^2\n</div>\n<p>where  <span class=\"math\">log(BF_i)_{detrended}</span> is the <span class=\"math\">i</span> -th observed log base fee and <span class=\"math\">C_i</span>  is the  <span class=\"math\">i</span>-th row of the seasonality matrix. To find the least squares solution, I set the gradient of the objective function with respect to <span class=\"math\">\\beta</span> to zero, yielding the normal equations:</p>\n<div class=\"math\">\n\\frac{\\partial}{\\partial \\beta} \\left( \\sum_{i=1}^{n} (log(BF_i)_{detrended} - C_i \\beta)^2 \\right) = -2 C^T (log(BF_i)_{detrended} - C \\hat{\\beta}) = 0\n</div>\n<p>Simplifying, I obtain:</p>\n<div class=\"math\">\nC^T C \\hat{\\beta} = C^T log(BF)_{detrended}\n</div>\n<p>Solving the normal equations for  \\beta  provides the least squares estimates:</p>\n<div class=\"math\">\n\\hat{\\beta} = (C^T C)^{-1} C^T log(BF)_{detrended}\n</div>\n<p>where  <span class=\"math\">(C^T C)^{-1} C^T</span>  is the Moore-Penrose pseudoinverse of <span class=\"math\">C</span>. The de-seasonalized and de-trended log prices are then calculated by subtracting the combined seasonality components from the observed log prices, as is shown in the figure below.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/f/8f324d5ecfcda3c65cc3aebdbfbd09ac4e6bf621.png\" data-download-href=\"https://ethresear.ch/uploads/default/8f324d5ecfcda3c65cc3aebdbfbd09ac4e6bf621\" title=\"Seasoned\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/f/8f324d5ecfcda3c65cc3aebdbfbd09ac4e6bf621_2_690x459.png\" alt=\"Seasoned\" data-base62-sha1=\"kqM37m2kMYtSbjVExRHE71r8LOV\" width=\"690\" height=\"459\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/f/8f324d5ecfcda3c65cc3aebdbfbd09ac4e6bf621_2_690x459.png, https://ethresear.ch/uploads/default/optimized/3X/8/f/8f324d5ecfcda3c65cc3aebdbfbd09ac4e6bf621_2_1035x688.png 1.5x, https://ethresear.ch/uploads/default/original/3X/8/f/8f324d5ecfcda3c65cc3aebdbfbd09ac4e6bf621.png 2x\" data-dominant-color=\"E7E7E7\"></a></div><p></p>\n<p>Visibly, base fees in the Ethereum network fluctuate due to weekly and daily patterns of usage. During the week, gas usage is typically higher as business activities, market trading, and development deployments peaks. This weekly seasonality contrasts with daily patterns where peak periods of gas usage occur in the morning and evening as global participants, including Europe and North America, overlap in activity.</p>\n<p>Despite removing trend and overarching seasonality, I observe that autocorrelative structure is still present in our time series. To address this, I explore the autocorrelation function (ACF) and the partial autocorrelation function (PACF) of the data. The ACF helps identify the correlation between observations at different lags of base fees, providing insights into the persistence of shocks over time. The PACF isolates the direct effect of a lagged observation by controlling for the contributions of intermediate lags, aiding in the identification of the order of the autoregressive (AR) terms in an ARIMA model. By observing the graph below, we observe 34 autocorrelated lags, and 5 partially autocorrelated lags.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/1/519bf7d93d2812acc39ec47dc5879a39ec44dca8.png\" data-download-href=\"https://ethresear.ch/uploads/default/519bf7d93d2812acc39ec47dc5879a39ec44dca8\" title=\"Autocorrelation\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/1/519bf7d93d2812acc39ec47dc5879a39ec44dca8_2_532x500.png\" alt=\"Autocorrelation\" data-base62-sha1=\"bDWPN45wRC6lD7jbNjVIE7ADiGc\" width=\"532\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/1/519bf7d93d2812acc39ec47dc5879a39ec44dca8_2_532x500.png, https://ethresear.ch/uploads/default/optimized/3X/5/1/519bf7d93d2812acc39ec47dc5879a39ec44dca8_2_798x750.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/1/519bf7d93d2812acc39ec47dc5879a39ec44dca8.png 2x\" data-dominant-color=\"F7F7F8\"></a></div><p></p>\n<p>To address these lags, I fit an ARIMA(34, 5, 5) model to the de-seasonalized and de-trended data. This model captures the autoregressive and moving average components along with differencing. By fitting this model, we obtain the residuals, which represent the underlying structure of the noise after accounting for these components. Upon examining the residuals, we find that the distribution of the noise is sharply centered around zero with fat tails. The transition between the central peak and the tails appears to follow an exponential pattern. Consequently, we fit a Laplace distribution to the residuals and compare the observed values against the expected values, where the Laplace distribution is defined as:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/2/520b0b7803ad250ea93fc680b158f762eb2571b0.png\" data-download-href=\"https://ethresear.ch/uploads/default/520b0b7803ad250ea93fc680b158f762eb2571b0\" title=\"StandardisedResidules\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/2/520b0b7803ad250ea93fc680b158f762eb2571b0_2_673x500.png\" alt=\"StandardisedResidules\" data-base62-sha1=\"bHMOAw93sRQhyBwLwX9SBgV3SJW\" width=\"673\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/2/520b0b7803ad250ea93fc680b158f762eb2571b0_2_673x500.png, https://ethresear.ch/uploads/default/optimized/3X/5/2/520b0b7803ad250ea93fc680b158f762eb2571b0_2_1009x750.png 1.5x, https://ethresear.ch/uploads/default/original/3X/5/2/520b0b7803ad250ea93fc680b158f762eb2571b0.png 2x\" data-dominant-color=\"E5E5E5\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/5/65238658d70c03f7293ed41bb385d7eb95d65c7d.png\" data-download-href=\"https://ethresear.ch/uploads/default/65238658d70c03f7293ed41bb385d7eb95d65c7d\" title=\"PDF\"><img src=\"https://ethresear.ch/uploads/default/original/3X/6/5/65238658d70c03f7293ed41bb385d7eb95d65c7d.png\" alt=\"PDF\" data-base62-sha1=\"eqIkPIclg3tyr5OguFbDup38DRX\" width=\"690\" height=\"499\" data-dominant-color=\"F6F6F6\"></a></div><p></p>\n<div class=\"math\">\nf(x; \\mu, b, \\kappa) =\n\\begin{cases}\n\\frac{\\kappa}{b} \\exp \\left( \\frac{x - \\mu}{b} \\kappa \\right), &amp; \\text{if } x \\leq \\mu \\\\\n\\frac{1}{b \\kappa} \\exp \\left( -\\frac{x - \\mu}{b \\kappa} \\right), &amp; \\text{if } x &gt; \\mu\n\\end{cases}\n</div>\n<ul>\n<li><span class=\"math\">\\mu</span>  is the location parameter (mean),</li>\n<li><span class=\"math\">b &gt; 0</span>  is the scale parameter,</li>\n<li><span class=\"math\">\\kappa &gt; 0</span>  controls the asymmetry of the distribution. a Kappa equal to 1 produces a symmetrical Laplace distribution.</li>\n</ul>\n<p>A Laplace distribution is significant because it characterises the distribution as having exponential decay on both sides of the peak. In the context of Ethereum base fees, changes often occur as a percentage of the previous base fee rather than by fixed amounts. This implies that large deviations from the mean are more probable than would be expected under a normal distribution, leading to the characteristic heavy tails of the Laplace distribution. The sharp central peak of the Laplace distribution indicates a high probability of small changes around the long term mean. The fat tails, on the other hand, reflect the occasional large percentage changes, driven by significant network, a series of full block events or structural shifts in demand for block space. One would expect a higher denominator parameter (reducing sensitivity of base fees to gas usage) to create a ‘tighter’ distribution with a lower standard deviation.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/3/8359c539f8d3aae5ec27461b63895a852255410e.png\" data-download-href=\"https://ethresear.ch/uploads/default/8359c539f8d3aae5ec27461b63895a852255410e\" title=\"QQ\"><img src=\"https://ethresear.ch/uploads/default/original/3X/8/3/8359c539f8d3aae5ec27461b63895a852255410e.png\" alt=\"QQ\" data-base62-sha1=\"iJYSC13DlTKQWf41aaxKvw1neA6\" width=\"690\" height=\"482\" data-dominant-color=\"F6F6F6\"></a></div><p></p>\n<p>I plot the theoretical quantiles of the Laplace distribution against the observed residual quantiles in a QQ plot. The plot revealed that a few outlier observations exhibited fatter tails than predicted by the Laplace distribution, indicating that the residuals have more extreme values than our model accounts for. Nevertheless, the majority of the data points followed the expected distribution, suggesting that the Laplace distribution still provides a reasonable fit for the central portion of the residuals.</p>\n<p><strong>Stochastic Component Specification</strong></p>\n<div class=\"math\">\nX_t = \\log BF_t - f(t)\n</div>\n<p><strong>Cox, Ingersoll &amp; Ross Poisson Asymmetrical Laplace calibrated model</strong></p>\n<p>Removing the trend and observing the noise, the stochastic component <span class=\"math\">X_t</span>  is modelled as an Ornstein-Uhlenbeck process (mean-reverting) with jumps, incorporating a Laplace distribution for both the noise term and the jump size</p>\n<div class=\"math\">\ndX_t = (\\alpha - \\kappa X_t) \\, dt + \\sigma \\, dL_t + J(\\mu_J, \\sigma_J) \\, d\\Pi(\\lambda),\n</div>\n<p>where:</p>\n<ul>\n<li><span class=\"math\">α</span> is the drift parameter,</li>\n<li><span class=\"math\">κ</span>  is the rate of mean reversion,</li>\n<li><span class=\"math\">σ</span> is the volatility,</li>\n<li><span class=\"math\">L_t</span> is a noise term following a Laplace distribution,</li>\n<li><span class=\"math\">J(μ_J , σ_J )</span> is the jump size, following a Laplace distribution with mean  <span class=\"math\">μ_J</span> and scale parameter <span class=\"math\">σ_J</span> ,</li>\n<li><span class=\"math\">Π(λ)</span> is a Poisson process with jump intensity <span class=\"math\">λ</span>.</li>\n</ul>\n<p>The transition probabilities for base fee equilibrium prices follow a Poisson-Laplace process. This can be expressed as:</p>\n<div class=\"math\">\n\np(X_t | X_{t-1}) = \\lambda \\frac{1}{2b} \\exp\\left(-\\frac{|X_t - (a \\Delta t + \\phi X_{t-1} + \\mu_J)|}{\\sqrt{v_t (\\sigma^2 + \\sigma_J^2)}}\\right)\n\n</div>\n<div class=\"math\">\n\n• (1-\\lambda) \\cdot \\frac{1}{2b} \\exp\\left(-\\frac{|X_t - (a \\Delta t + \\phi X_{t-1})|}{\\sqrt{v_t \\sigma^2}}\\right)\n\n</div>\n<p>where:</p>\n<ul>\n<li><span class=\"math\">∆t</span> is the time increment,</li>\n<li><span class=\"math\">a</span> is the drift term,</li>\n<li><span class=\"math\">φ</span> is the autoregressive coefficient,</li>\n<li><span class=\"math\">b</span> is the scale parameter of the Laplace distribution.</li>\n</ul>\n<p>The parameters <span class=\"math\">Q = {α, κ, σ, a, b, μ_J , σ_J , λ}</span> can first be estimated by Maximum Likelihood (ML). This approach ensures that the parameters <span class=\"math\">Q</span> are optimised to best fit the observed data under the specified model. The results of the simulation, displayed below, demonstrate the simulated log base fees for the next month. Notably, considering the most recent regime of exponential increase, I adopt a neutral market approach by assuming a linear (horizontal) trend. For pricing derivative products, consideration of what the future trend will be should be taken into account. After retrieving calibrated parameters, a range of future hourly dates is produced, before trend and seasonality is added back in, and the exponential is taken to revert the log.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/f/af172a8475671fb615b0494f03c0e53f7d01c0fb.png\" data-download-href=\"https://ethresear.ch/uploads/default/af172a8475671fb615b0494f03c0e53f7d01c0fb\" title=\"Simulation\"><img src=\"https://ethresear.ch/uploads/default/original/3X/a/f/af172a8475671fb615b0494f03c0e53f7d01c0fb.png\" alt=\"Simulation\" data-base62-sha1=\"oYVbO1JwGawPmAVbevQaHsA8azp\" width=\"592\" height=\"500\" data-dominant-color=\"EDEDED\"></a></div><p></p>\n<p><strong>ARIMA Monte Carlo Method</strong></p>\n<p>An alternative method, which requires less computation simulates a monte-carlo process by modelling standardised residuals directly from a Laplace distribution, augmenting these standardised residuals back de-normalising them, before generating future paths as the composite of both this noise and ARIMA forecasts. A simulated residual path is shown below, producing the resulting simulation.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/0/70411cba63138e2322e32a338e350acc9dbeebe9.png\" data-download-href=\"https://ethresear.ch/uploads/default/70411cba63138e2322e32a338e350acc9dbeebe9\" title=\"Residules\"><img src=\"https://ethresear.ch/uploads/default/original/3X/7/0/70411cba63138e2322e32a338e350acc9dbeebe9.png\" alt=\"Residules\" data-base62-sha1=\"g12YHbrpBrMQwa4AeEc4UsqLGLT\" width=\"651\" height=\"500\" data-dominant-color=\"C1C1C1\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/7/a71fae0b0032a14bc4099ebbd6b20f28c69bfd5a.png\" data-download-href=\"https://ethresear.ch/uploads/default/a71fae0b0032a14bc4099ebbd6b20f28c69bfd5a\" title=\"Sim2\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/7/a71fae0b0032a14bc4099ebbd6b20f28c69bfd5a_2_690x479.png\" alt=\"Sim2\" data-base62-sha1=\"nQrBTZVN1buZmreRCJfvg0ig7FM\" width=\"690\" height=\"479\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/7/a71fae0b0032a14bc4099ebbd6b20f28c69bfd5a_2_690x479.png, https://ethresear.ch/uploads/default/original/3X/a/7/a71fae0b0032a14bc4099ebbd6b20f28c69bfd5a.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/7/a71fae0b0032a14bc4099ebbd6b20f28c69bfd5a.png 2x\" data-dominant-color=\"F1F1F1\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/e/ce326060566053721576245372a025708af87d0b.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/ce326060566053721576245372a025708af87d0b\" title=\"Screenshot 2024-06-14 at 12.50.40\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/e/ce326060566053721576245372a025708af87d0b_2_687x500.jpeg\" alt=\"Screenshot 2024-06-14 at 12.50.40\" data-base62-sha1=\"tq6hYLwpO4zaLmP1LAnql1SW0Xh\" width=\"687\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/e/ce326060566053721576245372a025708af87d0b_2_687x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/c/e/ce326060566053721576245372a025708af87d0b_2_1030x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/e/ce326060566053721576245372a025708af87d0b_2_1374x1000.jpeg 2x\" data-dominant-color=\"F2F2F2\"></a></div><p></p>\n<p><strong>Pricing with these simulated values</strong></p>\n<p>For the purpose of hedging, pricing a European call or put option based on the simulated paths can be expressed as follows. Let <span class=\"math\">BF_T^i</span> represent base fees per gas at maturity <span class=\"math\">T</span> for the <span class=\"math\">i</span>-th simulated path, where <span class=\"math\">i = 1, 2, \\ldots, N</span>, and denote the strike price by <span class=\"math\">K</span>. The payoff for the European call option at maturity for the <span class=\"math\">i</span>-th path is given by <span class=\"math\">\\max(BF_T^i - K, 0)</span>, and for the European put option, it is given by <span class=\"math\">\\max(K - BF_T^i, 0)</span>. To find the option price, I first calculate the average payoff across all <span class=\"math\">N</span> simulated paths: <span class=\"math\">\\frac{1}{N} \\sum_{i=1}^N \\max(BF_T^i - K, 0)</span> for the call option, and <span class=\"math\">\\frac{1}{N} \\sum_{i=1}^N \\max(K - BF_T^i, 0)</span> for the put option. These average payoffs are then discounted to the present value using the risk-free rate <span class=\"math\">r</span>, giving the price of the European call option at time 0 as <span class=\"math\">C_0 = e^{-rT} \\times \\frac{1}{N} \\sum_{i=1}^N \\max(BF_T^i - K, 0)</span> and the price of the European put option at time 0 as <span class=\"math\">P_0 = e^{-rT} \\times \\frac{1}{N} \\sum_{i=1}^N \\max(K - BF_T^i, 0)</span>.</p>\n<p>In pricing a gas plan where the underwriter subsidises the entire unit of gas at any point before <span class=\"math\">T</span> I can model this as an American call option on gas fees with a strike price of zero and implement the Longstaff and Schwartz Regression Approach. This method involves calculating the payoff at the final period <span class=\"math\">T</span> as the gas fee <span class=\"math\">BF_T^i</span> for each path <span class=\"math\">i</span>, assuming no transaction has been exercised before this time. Moving one time step backward, one regress the discounted future payoffs against the current gas fees <span class=\"math\">BF_t^i</span> to estimate continuation values. This regression, known as a basis function, typically includes terms like a constant, <span class=\"math\">BF_t^i</span>, and <span class=\"math\">(BF_t^i)^2</span>. At each time step <span class=\"math\">t</span>, we compare the immediate exercise value <span class=\"math\">BF_t^i</span> with the estimated continuation value <span class=\"math\">\\hat{C}_t^i</span> from the regression. If the exercise value is higher, one updates the cash flow to reflect exercising the option; otherwise, we carry forward the discounted cash flow. Finally, the option price at time 0 (now) is obtained by averaging the discounted cash flows across all paths and all time periods.</p>\n<p><strong>Utility in Oiler Pitch Lake</strong><br>\nOiler Pitch Lake is a protocol designed to allow liquidity providers (LPs) by pooling their assets to act as sellers in time-weighted moving average (TWAP) base fee cash-settled call options. Utilizing Starknet STARKS and the Fossil coprocessor for verifiability, Pitch Lake determines option payoffs based on the average base fee over a specified time interval, akin to an Asian option.</p>\n<p>Given that LPs put up a limited amount of collateral, there is a cap on each option’s payoff. To protect LPs, a reserve price can be set, which is the minimum price at which the option must be sold. Using the aforementioned methodology, this reserve price can be calculated with both accuracy and verifiability, ensuring that LPs are safeguarded. Pitch Lake is currently in development and is expected to launch in the coming months.</p>\n<p><strong>Next Steps</strong></p>\n<ul>\n<li><strong>Call for reproduction</strong>: Please reproduce my analysis and methodology. Working with complex financial mathematics can be prone to assumptions that may be easily violated. View this as an initial attempt to dive into the gas fee pricing topic</li>\n<li><strong>What about the blobs market and L2 fee markets? I</strong> am currently working on similar analysis for the blob fee market place, L2 fees, and other blockchains. Expect more results soon.</li>\n</ul>\n<p><strong>Bibliography</strong><br>\n[1] Oiler Pitch Lake. <a href=\"https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4123018\" rel=\"noopener nofollow ugc\">https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4123018</a><br>\n[2] SMG Spec <a href=\"https://www.mechanism.org/spec/04\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">04</a><br>\n[3] [2] Lucia, Julio J., Schwartz, Eduaro. “Electricity Prices and Power Derivatives: Evidence from the Nordic Power Exchange.” Review of Derivatives Research. Vol. 5, Issue 1, pp 5-50, 2002. <a href=\"https://link.springer.com/article/10.1023/A:1013846631785\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Electricity Prices and Power Derivatives: Evidence from the Nordic Power Exchange | Review of Derivatives Research</a><br>\n[4] Seifert, Jan, Uhrig-Homburg, Marliese. “Modelling Jumps in Electricity Prices: Theory and Empirical Evidence.” <em>Review of Derivatives Research</em>. Vol. 10, pp 59-85, 2007. <a href=\"https://uk.mathworks.com/help/fininst/simulating-electricity-prices-with-mean-reversion-and-jump-diffusion.html\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Simulating Electricity Prices with Mean-Reversion and Jump-Diffusion - MATLAB &amp; Simulink - MathWorks United Kingdom</a><br>\n[5] Escribano, Alvaro, Pena, Juan Ignacio, Villaplana, Pablo. “Modeling Electricity Prices: International Evidence.” Universidad Carloes III de Madrid, Working Paper 02-27, 2002. Modeling Electricity Prices: International Evidence <a href=\"https://papers.ssrn.com/sol3/papers.cfm?abstract_id=299360\" rel=\"noopener nofollow ugc\">https://papers.ssrn.com/sol3/papers.cfm?abstract_id=299360</a></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/pricing-gas-fee-derivatives/19898\">Read full topic</a></p>","link":"https://ethresear.ch/t/pricing-gas-fee-derivatives/19898","pubDate":"Mon, 24 Jun 2024 20:59:59 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19898"},"source":{"@url":"https://ethresear.ch/t/pricing-gas-fee-derivatives/19898.rss","#text":"Pricing Gas Fee Derivatives"}},{"title":"Execution Auctions as an Alternative to Execution Tickets","dc:creator":"jonahb27","category":"Block proposer","description":"<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/2/128696dce49653e3211f52d33f86612013a883c4.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/128696dce49653e3211f52d33f86612013a883c4\" title=\"ealien\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/2/128696dce49653e3211f52d33f86612013a883c4_2_500x500.jpeg\" alt=\"ealien\" data-base62-sha1=\"2DSWWBKsULHjCEkAeXhOyr1MCuU\" width=\"500\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/2/128696dce49653e3211f52d33f86612013a883c4_2_500x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/1/2/128696dce49653e3211f52d33f86612013a883c4_2_750x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/1/2/128696dce49653e3211f52d33f86612013a883c4_2_1000x1000.jpeg 2x\" data-dominant-color=\"816B67\"></a></div><p></p>\n<p><br>\n<em>By <a href=\"https://twitter.com/_JonahB_\">Jonah Burian</a> &amp; <a href=\"https://twitter.com/DavideCrapis\">Davide Crapis</a></em></p>\n<p><em>Special thanks to <a href=\"https://x.com/weboftrees\">Anders Elowsson</a>, <a href=\"https://twitter.com/barnabemonnot\">Barnabé Monnot</a>, <a href=\"https://twitter.com/drakefjustin\">Justin Drake</a> and <a href=\"https://twitter.com/mikeneuder\">Mike Neuder</a> for the feedback and review.</em></p>\n<h1><a name=\"introduction-1\" class=\"anchor\" href=\"https://ethresear.ch#introduction-1\"></a>Introduction</h1>\n<p>There is a principal-agent problem in Ethereum. While the protocol creates MEV, it leaks it to proposers. Moreover, MEV in its current state exposes the protocol to other externalities, such as <a href=\"https://arxiv.org/abs/2305.09032\">timing games</a>. It is widely held in the research community that capturing and properly redistributing MEV is an important step in the evolution of Ethereum, to make the protocol more resilient and efficient (<em>note: there are some people who <a href=\"https://www.nano210.blog/infinite-blockspace-equilibrium/\">disagree</a>)</em>. The only way to solve this principal-agent problem is for the protocol to sell the rights to earn the MEV with a credible and efficient mechanism.</p>\n<p>After many years of research, two approaches have recently emerged as potential avenues for solving MEV-burn. These are mechanisms where the right to propose an execution payload is not given for free to the <em>beacon proposer</em>, but it is instead sold separately to an <em>execution proposer</em>.</p>\n<ul>\n<li><strong>Execution Auctions (EAs):</strong> The right to propose an execution payload is <em>deterministically allocated</em> in advance for each slot, the slot execution proposer can purchase this right by bidding in a slot auction held beforehand, for example <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ#:~:text=introduce%20it%20next.-,Slot%2Dauction%2B32%20ePBS,-We%20suggest%20now\">32 slots earlier</a>.</li>\n<li><strong>Execution Tickets (ETs):</strong> the execution proposer right is not deterministically allocated, proposers can purchase a lottery ticket in advance and then, before each slot, a winner is drawn at random from the ticket pool and gets the right to propose.\n<ul>\n<li>The simple version of the protocol gives the winner the right to propose the following block. This was the focus of <a href=\"https://ethresear.ch/t/economic-analysis-of-execution-tickets/18894\">Economic Analysis of Execution Tickets</a>.</li>\n<li>The original execution ticket post <a href=\"https://ethresear.ch/t/execution-tickets/17944#:~:text=There%20exists%20a,market%20function%20smoothly.\">suggested</a> a general version of the protocol where the winner has the right to propose <span class=\"math\">m</span> slots later (e.g., 32). The intuition for why winners are given slots multiple slots in advance as opposed to immediately is that the solution allows for winners to offer preconfs.</li>\n</ul>\n</li>\n</ul>\n<p>The mechanisms have the same objective but important differences. The goal of this post is to compare the two solutions.</p>\n<h1><a name=\"setup-2\" class=\"anchor\" href=\"https://ethresear.ch#setup-2\"></a>Setup</h1>\n<p>We will introduce formulas throughout this post to outline the key economic differences between the protocols. We will also explain the practical nuances, so if you want to skip the math, no worries! For the extra curious, we lay out the proof of the formulas in the appendix.</p>\n<h2><a name=\"terms-3\" class=\"anchor\" href=\"https://ethresear.ch#terms-3\"></a>Terms</h2>\n<ul>\n<li><span class=\"math\">t</span> — discrete time intervals (slot).</li>\n<li><span class=\"math\">n</span> — the number of tickets.</li>\n<li><span class=\"math\">d</span> is the inter-slot discount rate used to calculate the present value of future prizes.\n<ul>\n<li>Note: assuming that the vanilla staking rate is the risk-free rate in Ethereum, <span class=\"math\">d \\approx 10^{-8}</span></li>\n</ul>\n</li>\n<li><span class=\"math\">\\mathcal{R}</span> is a random variable representing the value of controlling an execution payload at time <span class=\"math\">t</span>.\n<ul>\n<li>We term this the Execution Layer Reward (EL Reward) which equals MEV + fees in slot <span class=\"math\">t</span>.</li>\n<li>We assume that <span class=\"math\">\\mathcal{R}</span> has a distribution that does not vary with time and that each draw is independent. (This is usually not the case in practice, as EL rewards are time-varying and correlated, but it allows for a less complicated analysis that can be expanded later.)</li>\n</ul>\n</li>\n<li><span class=\"math\">\\mu_{\\mathcal{R}}</span> is the expected value of <span class=\"math\">\\mathcal{R}</span>.</li>\n<li><span class=\"math\">V_{ticket}</span> — Net Present Value (NPV) of a single ticket.\n<ul>\n<li>Note: present value of some value <span class=\"math\">X</span> realized at time <span class=\"math\">t</span> is calculated as <span class=\"math\">\\frac{X}{(1+d)^t}</span>.</li>\n</ul>\n</li>\n<li><span class=\"math\">m</span> — number of slots t after winning that the right to propose is given (e.g., <span class=\"math\">m=32</span>).</li>\n</ul>\n<h2><a name=\"northstar-4\" class=\"anchor\" href=\"https://ethresear.ch#northstar-4\"></a>Northstar</h2>\n<p>The expected net present value of all future EL Rewards is</p>\n<div class=\"math\">\nNPV_{\\mathcal{R}} = \\frac{\\mu_{\\mathcal{R}}}{d}\n</div>\n<p>This is the total value of all block space from now into the future of Ethereum. Given that the goal of the Execution Auctions and Execution Tickets is to capture the value of block space and redistribute the value to align with the protocol’s goals, all solutions must be analyzed in terms of how well they capture <span class=\"math\">NPV_{\\mathcal{R}}</span>.</p>\n<p><em>Note: Capturing all the value depends on the selling mechanism. In this analysis, we assume that the selling mechanism is efficient. Detailed analysis of the selling mechanism in a dynamic/repeated strategic interaction context is an open problem currently under research.</em></p>\n<h1><a name=\"execution-auctions-5\" class=\"anchor\" href=\"https://ethresear.ch#execution-auctions-5\"></a>Execution Auctions</h1>\n<p>Execution Auctions (EAs) are essentially slot auctions carried out in advance:</p>\n<ul>\n<li><strong>Proposer right allocation:</strong> the <em>execution proposer right</em> for slot <span class=\"math\">k+m</span> is sold <span class=\"math\">m</span> slots in advance, at slot <span class=\"math\">k</span>.</li>\n<li><strong>Selling mechanism:</strong> the beacon proposer of slot <span class=\"math\">k</span> receives bids for that right and commits to the highest bid, attesters vote.</li>\n</ul>\n<p>A <strong>secondary market</strong> will most likely develop where an EA ticket winner can resell their proposer right before their turn to propose. Even if the protocol does not allow them to transfer that right, this can be easily done via an out-of-protocol gadget.</p>\n<h1><a name=\"execution-tickets-6\" class=\"anchor\" href=\"https://ethresear.ch#execution-tickets-6\"></a>Execution Tickets</h1>\n<p>Execution Tickets (ETs) have a lottery component that adds uncertainty on the specific block a holder will be able to propose in the future, this can be resolved closer to the time of proposing or further ahead of time.</p>\n<ul>\n<li><strong>Proposer right allocation:</strong> the <em>execution proposer right</em> for <em>a slot</em> in the future is sold in the form of a lottery ticket.</li>\n<li><strong>Selling mechanism:</strong> assume there are already <span class=\"math\">n</span> tickets in the lottery pool, at each slot a ticket is selected as lottery winner (e.g., at the end of the slot using RANDAO) and a new ticket is sold to enter the pool starting from the next slot.\n<ul>\n<li><strong>Pricing:</strong> We assume an English Auction for comparison with EAs.</li>\n<li><strong>Uncertainty resolution:</strong> we can have a next-slot execution lottery, where at the end of slot <span class=\"math\">k</span> we select proposer for slot <span class=\"math\">k+1</span> (we term these sETs i.e, simple ETs), or a future-slot execution lottery, where at the end of slot <span class=\"math\">k</span> we select proposer for slot <span class=\"math\">k+m</span> (we term these ETs).</li>\n</ul>\n</li>\n</ul>\n<p>Similarly to EAs, a secondary market will likely emerge where a ticket holder or a winning ticket holder can resell their right to participate in the lottery or propose.</p>\n<p><em>Note: In the initial post <a href=\"https://ethresear.ch/t/economic-analysis-of-execution-tickets/18894\">Economic Analysis of Execution Tickets</a> we did not yet make the distinction between sETs and ETs. That post was about sETs (a special case of ETs).</em></p>\n<p><em>Note 2: <a href=\"https://twitter.com/drakefjustin\">Justin </a> perceptively pointed out that we don’t know how to achieve low-latency randomness using RANDAO, and VDFs wouldn’t help either. Low-latency RANDAO would be biasable (as well as fully predictable when you control two slots in a row).</em></p>\n<h1><a name=\"analysis-7\" class=\"anchor\" href=\"https://ethresear.ch#analysis-7\"></a>Analysis</h1>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/0/c088b53c1b671ac4704f3ff5c99e4b792264c861.png\" data-download-href=\"https://ethresear.ch/uploads/default/c088b53c1b671ac4704f3ff5c99e4b792264c861\" title=\"Chart 1\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/0/c088b53c1b671ac4704f3ff5c99e4b792264c861_2_690x174.png\" alt=\"Chart 1\" data-base62-sha1=\"rtezk8xnuYUlQay3ev0LK4UzPDX\" width=\"690\" height=\"174\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/0/c088b53c1b671ac4704f3ff5c99e4b792264c861_2_690x174.png, https://ethresear.ch/uploads/default/optimized/3X/c/0/c088b53c1b671ac4704f3ff5c99e4b792264c861_2_1035x261.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/0/c088b53c1b671ac4704f3ff5c99e4b792264c861_2_1380x348.png 2x\" data-dominant-color=\"F5F5F4\"></a></div><p></p>\n<p><em>Note: All approximations assume <span class=\"math\">m</span> (time from when the ticket wins to when the right is conferred) and <span class=\"math\">n</span> (number of ETs) are not large. Given that <span class=\"math\">d</span> is nearly zero, we are able to simplify the equations.</em></p>\n<p><em>Note 2: Without using the approximation,</em> EA tickets <em>and ETs have some Dead Weight Loss associated with the fact that winning tickets cannot be immediately used, i.e., there is some loss given the time discount. The intuition for the approximation is that given <span class=\"math\">d</span> is small, this value loss due to the time discount is nominal.</em></p>\n<p><em>Note 3: While we assume in the approximation for the variance of sETs and ETs that <span class=\"math\">n</span> is small, we discussed in “<a href=\"https://ethresear.ch/t/economic-analysis-of-execution-tickets/18894\">Economic Analysis of Execution Tickets</a>” that a large <span class=\"math\">n</span> leads to less centralization risk and more democratization in terms of who can afford a ticket. That said, a large <span class=\"math\">n</span> creates valuation complexity and adds the additional complexity of having to run a large sale at the beginning of the lottery to bootstrap the ticket pool. (Read the article to learn more.)</em></p>\n<p>Here is a simplified version of the chart assuming the approximation.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/a/dad825aa8d8c8324d64726716ed5a0fd84508ffe.png\" data-download-href=\"https://ethresear.ch/uploads/default/dad825aa8d8c8324d64726716ed5a0fd84508ffe\" title=\"Chart 2\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/a/dad825aa8d8c8324d64726716ed5a0fd84508ffe_2_517x186.png\" alt=\"Chart 2\" data-base62-sha1=\"vdZbghIIZtfAZi5CikXIfj4In5I\" width=\"517\" height=\"186\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/a/dad825aa8d8c8324d64726716ed5a0fd84508ffe_2_517x186.png, https://ethresear.ch/uploads/default/optimized/3X/d/a/dad825aa8d8c8324d64726716ed5a0fd84508ffe_2_775x279.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/d/a/dad825aa8d8c8324d64726716ed5a0fd84508ffe_2_1034x372.png 2x\" data-dominant-color=\"F3F2F1\"></a></div><p></p>\n<p>Notice that all three approaches using the approximation arrive at the same conclusion: we can effectively capture (assuming an efficient auction) all the value associated with block space. Moreover, in each design, the tickets have a simple explanation: they are worth about the value associated with proposing an execution payload.</p>\n<p>The variance of the ticket value is the variance of the rewards per slot, which is about as good as you are going to get given that the rights to propose are sold in advance, namely prior to the block’s construction.</p>\n<h1><a name=\"sure-thing-vs-future-possibility-comparing-eas-and-setsets-8\" class=\"anchor\" href=\"https://ethresear.ch#sure-thing-vs-future-possibility-comparing-eas-and-setsets-8\"></a>Sure Thing vs Future Possibility: Comparing EAs and sETs/ETs</h1>\n<p>We now turn to comparing EAs and sETs/ETs to elucidate trade-offs when thinking about implementing such mechanisms in practice. It should be noted that most of the tradeoffs stand from the fundamental difference between EAs and sETs/ETs - the former is a deterministic protocol while the latter leverages nondeterminism.</p>\n<ul>\n<li><strong>Implementation Simplicity:</strong> EAs are simpler to implement, the tickets do not require randomness so there is no need to worry about RANDAO bias. Moreover, it is unclear how to implement the randomness for sETs. The secondary market for proposer rights with EA tickets will be much simpler than with sETs/ETs, no need to worry about ticket MEV. Moreover, there seems to be a <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\">clear path to implement EAs via ePBS</a> and bypassability not an issue since we’re selling future slots.</li>\n<li><strong>Simpler Assets:</strong> It is easier to reason about a deterministic asset than a random one, which makes EA better than sETs and ETS. That said, buyers in the protocol are most likely sophisticated, and the current paradigm for selecting validators relies on randomness, meaning maintaining non-determinism won’t be a substantial break from the status quo. However, a counterargument is that current proposers might not be buyers of tickets.</li>\n<li><strong>Variance could affect valuation and EA tickets are less exposed:</strong> It is reasonable for ticket holders to apply a risk discount to the tickets; that is, they might value the tickets less given risk aversion. While EA tickets are only exposed to the variance in the value of the EL rewards in slot <span class=\"math\">t+m</span>, both sETs and ETs are exposed to the variance in EL rewards and the variance in when a ticket wins. Intuitively, EA would therefore have the lowest risk discount.</li>\n<li><strong>Efficiency:</strong> From the protocol’s POV, sETs are more efficient because proposer rights are sold closer to the slot of the MEV in expectation while EAs and ETs have dead weight loss in theory. That said, when factoring in risk aversion, EAs might be more efficient.</li>\n<li><strong>Preconfs</strong>: Preconfs require there to be a lookahead, meaning the protocol must know in advance who will control the rights to the execution payload. While EAs and ETs allow for preconfs, sETs do not, as winners are decided at each block.</li>\n<li><strong>Cost-of-control:</strong>\n<ul>\n<li><strong>In EA</strong>\n<ul>\n<li>EAs put <em>transaction liveness</em> risk on Ethereum—namely, the cost of monopolizing block space is disjoint from the security budget of Ethereum, and the cost of controlling consecutive blocks has a fixed value. Controlling <span class=\"math\">x</span> blocks in a row costs approximately <strong><span class=\"math\">\\approx x\\mu_{\\mathcal{R}}</span></strong>. Luckily, new <a href=\"https://eips.ethereum.org/EIPS/eip-7547\">IL designs</a> could rectify this. Even with ILs, relying heavily on them is suboptimal (they are designed to be a last resort, not commonplace—this can be argued). Importantly as well, the ability to consistently control multiple slots means that well-capitalized parties will perpetually win more block space. This could lead to centralization of the execution payload construction pipeline, exacerbating the current centralization challenges within this pipeline. (See the Multi-block MEV section in “<a href=\"https://arxiv.org/abs/2404.04262\">Future of MEV</a>”).</li>\n<li><a href=\"https://twitter.com/barnabemonnot\">Barnabé</a> aptly noted to us that saying the “the cost of monopolizing block space is disjoint from the security budget of Ethereum” is no different from the existing setup where validators can sell building rights. Currently, validators can sell multiple consecutive blocks in a row. <em>This does not mean that the centralization argument is incorrect but indicates that EAs are not a substantial break from the status quo.</em></li>\n</ul>\n</li>\n<li><strong>In sETs (and ETs):</strong>\n<ul>\n<li>\n<p>While the cost of monopolizing block space is disjoint from the security budget with sETs (and ETs), it is substantially more expensive and less likely that a single party can control multiple consecutive blocks in a row. Non-determinism prevents guaranteed control over block space reducing the likelihood of control. Randomness serves as a defense against centralization.</p>\n<ul>\n<li>\n<p>The first chart provides an intuitive understanding of this principle. It shows a scenario with 100 outstanding sETs/ETs. If someone owns 95% of the initial outstanding tickets (remember, one is subsequently minted per block), the probability of winning 20 slots in a row is approximately 4%, while the probability of winning 35 in a row is almost impossible.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/3/63786be4729c8134b1fa101788af325a31fb7427.png\" data-download-href=\"https://ethresear.ch/uploads/default/63786be4729c8134b1fa101788af325a31fb7427\" title=\"Graph 1\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/3/63786be4729c8134b1fa101788af325a31fb7427_2_690x412.png\" alt=\"Graph 1\" data-base62-sha1=\"ebXgP4xKHyVdS6L27kHzwpKT6TR\" width=\"690\" height=\"412\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/3/63786be4729c8134b1fa101788af325a31fb7427_2_690x412.png, https://ethresear.ch/uploads/default/original/3X/6/3/63786be4729c8134b1fa101788af325a31fb7427.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/3/63786be4729c8134b1fa101788af325a31fb7427.png 2x\" data-dominant-color=\"F9F9F9\"></a></div><p></p>\n</li>\n<li>\n<p>Moreover, the costs of controlling <span class=\"math\">P\\%</span> of the blocks increases in <span class=\"math\">n</span> (See: <a href=\"https://ethresear.ch/t/economic-analysis-of-execution-tickets/18894\">Economic Analysis of Execution Tickets</a>)<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/5/b5e0ee59790fe044c3adbb4ae4f5ae4408e0694c.png\" data-download-href=\"https://ethresear.ch/uploads/default/b5e0ee59790fe044c3adbb4ae4f5ae4408e0694c\" title=\"Graph 2\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/5/b5e0ee59790fe044c3adbb4ae4f5ae4408e0694c_2_690x186.png\" alt=\"Graph 2\" data-base62-sha1=\"pWYkKCA6Si5dMIJYoRvDheBE7cU\" width=\"690\" height=\"186\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/5/b5e0ee59790fe044c3adbb4ae4f5ae4408e0694c_2_690x186.png, https://ethresear.ch/uploads/default/optimized/3X/b/5/b5e0ee59790fe044c3adbb4ae4f5ae4408e0694c_2_1035x279.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/5/b5e0ee59790fe044c3adbb4ae4f5ae4408e0694c_2_1380x372.png 2x\" data-dominant-color=\"F9FAFA\"></a></div><p></p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Where ETs differ:</strong></p>\n<ul>\n<li>While an attacker in sETs must rely on chance to win consecutive blocks, a clever ETs user can buy a sequence of winning tickets for <span class=\"math\">t+m</span> to <span class=\"math\">t+m+x</span> on the secondary market, making the centralization in ETs similar to the centralization problem with EAs. One can argue that sETs are subject to the same risk as an out-of-protocol auction for control of the sETs winners’ rights can happen. That said, there may be honest actors who don’t sell rights to execution payload construction. If one of these holders wins, they end the sequence of winning blocks for a sET attacker, meaning that a sET attack, even with the out-of-protocol option, is exposed to uncertainty.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1><a name=\"concluding-remarks-9\" class=\"anchor\" href=\"https://ethresear.ch#concluding-remarks-9\"></a>Concluding Remarks</h1>\n<p>EAs dominate in simplicity, while sETs protect from centralization but at the expense of allowing for preconfs. sETs may also be unimplementable in the Ethereum Protocol today given the RANDAO problem. ILs can curb centralization concerns with EAs, and the secondary market for sETs/ETs can nullify their protective benefits. Moreover, EAs are not a substantial break from the status quo in terms of centralization.</p>\n<p><em>While there are still open questions around implementing EAs and their efficiency, EAs seem to be superior to sETs and ETs for the Ethereum protocol.</em></p>\n<h1><a name=\"related-work-10\" class=\"anchor\" href=\"https://ethresear.ch#related-work-10\"></a><strong>Related work</strong></h1>\n<p><em>This list is copied and pasted from</em> <a href=\"https://ethresear.ch/t/on-block-space-distribution-mechanisms/19764\">On block-space distribution mechanisms</a> with the addition of <a href=\"https://ethresear.ch/t/on-block-space-distribution-mechanisms/19764\">On block-space distribution mechanisms</a>. lol</p>\n<ol>\n<li><em>mev-boost &amp; relays</em>\n<ul>\n<li><a href=\"https://ethresear.ch/t/mev-boost-merge-ready-flashbots-architecture/11177\"><em>MEV-Boost: Merge ready Flashbots Architecture</em></a>; Flashbots team</li>\n<li><a href=\"https://ethresear.ch/t/relays-in-a-post-epbs-world/16278\"><em>Relays in a post-ePBS world</em></a>; Mike, Jon, Hasu, Tomasz, Chris, Toni</li>\n</ul>\n</li>\n<li><em>mev-burn / mev-smoothing</em>\n<ul>\n<li><a href=\"https://ethresear.ch/t/burning-mev-through-block-proposer-auctions/14029\"><em>Burning MEV through block proposer auctions</em></a>; Domothy</li>\n<li><a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590\"><em>MEV burn – a simple design</em></a>; Justin</li>\n<li><a href=\"https://ethresear.ch/t/committee-driven-mev-smoothing/10408\"><em>Committee-driven MEV smoothing</em></a>; Francesco</li>\n<li><a href=\"https://ethresear.ch/t/dr-changestuff-or-how-i-learned-to-stop-worrying-and-love-mev-burn/17384\"><em>Dr. changestuff or: how I learned to stop worrying and love mev-burn</em></a>; Mike, Toni, Justin</li>\n</ul>\n</li>\n<li><em>enshrined Proposer-Builder Separation (ePBS)</em>\n<ul>\n<li><a href=\"https://ethresear.ch/t/two-slot-proposer-builder-separation/10980\"><em>Two-slot proposer/builder separation</em></a>; Vitalik</li>\n<li><a href=\"https://ethresear.ch/t/unbundling-pbs-towards-protocol-enforced-proposer-commitments-pepc/13879\"><em>Unbundling PBS: towards protocol-enforced proposer commitments (PEPC)</em></a>; Barnabé</li>\n<li><a href=\"https://barnabe.substack.com/p/pbs\"><em>Notes on Proposer-Builder Separation</em></a>; Barnabé</li>\n<li><a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\"><em>More pictures about proposers and builders</em></a>; Barnabé</li>\n<li><a href=\"https://ethresear.ch/t/why-enshrine-proposer-builder-separation-a-viable-path-to-epbs/15710\"><em>Why enshrine Proposer-Builder Separation?</em></a>; Mike, Justin</li>\n<li><a href=\"https://ethresear.ch/t/epbs-design-constraints/18728\"><em>ePBS design constraints</em></a>; Potuz</li>\n<li><a href=\"https://mirror.xyz/barnabe.eth/LJUb_TpANS0VWi3TOwGx_fgomBvqPaQ39anVj3mnCOg\"><em>Reconsidering the market structure of PBS</em></a>; Barnabé</li>\n</ul>\n</li>\n<li><em>block-space futures</em>\n<ul>\n<li><a href=\"https://mirror.xyz/0x03c29504CEcCa30B93FF5774183a1358D41fbeB1/CPYI91s98cp9zKFkanKs_qotYzw09kWvouaAa9GXBrQ\"><em>Block vs. Slot Auction PBS</em></a>; Julian</li>\n<li><a href=\"https://frontier.tech/ethereums-blockspace-future\"><em>Opportunities and Considerations of Ethereum’s Blockspace Future</em></a>; Drew, Ankit</li>\n<li><a href=\"https://collective.flashbots.net/t/when-to-sell-your-blocks/2814\"><em>When to sell your blocks</em></a>; Quintus, Conor</li>\n</ul>\n</li>\n<li><em>execution tickets</em>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=MtvbGuBbNqI\"><em>Attester-proposer separation</em></a>; Justin</li>\n<li><a href=\"https://ethresear.ch/t/execution-tickets/17944\"><em>Execution tickets</em></a>; Justin, Mike</li>\n<li><a href=\"https://ethresear.ch/t/economic-analysis-of-execution-tickets/18894\"><em>Economic Analysis of Execution Tickets</em></a>; Jonah, Davide</li>\n<li><a href=\"https://ethresear.ch/t/block-auction-epbs-versus-execution-ticket/19232\"><em>Block-auction ePBS versus Execution Ticket</em></a>; Terence</li>\n</ul>\n</li>\n<li><em><a href=\"https://ethresear.ch/t/on-block-space-distribution-mechanisms/19764\">On block-space distribution mechanisms</a>; Mike, Pranav, &amp; Dr. Tim Roughgarden</em></li>\n</ol>\n<p><em>This post has a similar goal to</em> <a href=\"https://x.com/mikeneuder\">Mike</a>, <a href=\"https://x.com/PGarimidi\">Pranav</a>, &amp; <a href=\"https://x.com/Tim_Roughgarden\">Tim</a>’s recent work titled <a href=\"https://ethresear.ch/t/on-block-space-distribution-mechanisms/19764\">On block-space distribution mechanisms</a>: <em>comparing new mechanisms for execution rights allocation.</em> However, there are a few key differences in our analysis that we highlight here:</p>\n<ol>\n<li>They use a modified ET model (i.e., a model where all tickets are burned between slots). This model, while easier to implement, does not lead to an efficient allocation (as those with lower valuations for block space can still be allocated it).</li>\n<li>They focus on a Tullock Contest model, while our model resembles a fixed-income model.</li>\n<li>Their analysis focuses on the trade-off between the quality of the in-protocol MEV oracle and the fairness of the mechanism, while we focus on other trade-offs such as implementation ease, risk discounts, centralization control, and economic efficiency.</li>\n</ol>\n<h1><a name=\"appendix-11\" class=\"anchor\" href=\"https://ethresear.ch#appendix-11\"></a>Appendix</h1>\n<p><strong>Calculating the discount rate:</strong></p>\n<p>The staking rate at the time of this article is <code>~3.4%</code> (<a href=\"https://www.coindesk.com/indices/ether/cesr\">source</a>).</p>\n<p><span class=\"math\">1.34=(1+d)^{\\text{number of slots in a year}}=(1+d)^{365 * 24 * 60 * 60 / 12}</span> <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/arrow_right.png?v=12\" title=\":arrow_right:\" class=\"emoji\" alt=\":arrow_right:\" loading=\"lazy\" width=\"20\" height=\"20\">  <span class=\"math\">d=1.27e-08 \\approx 10^{-8}</span></p>\n<p><strong>The expected net present value of all future EL Rewards:</strong></p>\n<p>See this <a href=\"https://arxiv.org/abs/2404.04262\">paper</a> for the proof</p>\n<p><strong>Calculating:</strong> <span class=\"math\">E[V_{\\text{EA ticket}}]</span></p>\n<div class=\"math\">\nE[V_{\\text{EA ticket}}] =  \\frac{\\mu_{\\mathcal{R}}}{(1+d)^m}\n</div>\n<p>This is because the value is recognized <span class=\"math\">m</span> slots later so you need to discount the MEV received in <span class=\"math\">m</span> blocks by the discount rate <span class=\"math\">d</span>.</p>\n<p><strong>Calculating <span class=\"math\">E[V_{\\text{all EA tickets}}]</span></strong></p>\n<div class=\"math\">\n\\begin{align*}\n    E[V_{\\text{all EA tickets}}] &amp;=\n    \\sum_{t=1}^{\\infty} \\frac{ E[V_{\\text{EA ticket}}]}{(1+d)^t} \\\\\n    &amp;= \\sum_{t=1}^{\\infty} \\frac{\\mu_{\\mathcal{R}}}{(1+d)^{m+t}} \\\\\n    &amp;= \\frac{1}{(1+d)^{m}} \\sum_{t=1}^{\\infty} \\frac{\\mu_{\\mathcal{R}}}{(1+d)^{t}} \\\\\n    &amp;= \\frac{1}{(1+d)^{m}} NPV_{\\mathcal{R}} \n\\end{align*}\n</div>\n<p><strong>Calculating</strong> <span class=\"math\">\\text{Var}(V_{\\text{EA ticket}})</span></p>\n<div class=\"math\">\n\\text{Var}(V_{\\text{EA ticket}}) =  \\text{Var}\\left(\\mathcal{\\frac{R}{(1+d)^m}}\\right) =  \\frac{\\text{Var}(\\mathcal{R})}{(1+d)^{2m}}\n</div>\n<p><strong>Calculating</strong> <span class=\"math\">NPV_{\\mathcal{R}}</span>, <span class=\"math\">E[V_{\\text{sET}}]</span>, <span class=\"math\">E[V_{\\text{all sETs}}]</span> and  <span class=\"math\">\\text{Var}(V_{\\text{sET}})</span></p>\n<p>The proofs can be found in Jonah’s “<a href=\"https://arxiv.org/abs/2404.04262\">Future of MEV</a>” paper. Remember, the paper does not make the sET vs. ET distinction.</p>\n<p><strong>Calculating</strong> <span class=\"math\">E[V_{\\text{ET}}]</span>, <span class=\"math\">E[V_{\\text{all ETs}}]</span> and  <span class=\"math\">\\text{Var}(V_{\\text{ET}})</span>,</p>\n<p>These are simple modifications to the sET calculations using the <span class=\"math\">m</span> slot discount.</p>\n<p><strong>Calculating Graph 1:</strong></p>\n<p>The probability of winning <span class=\"math\">m</span> consecutive slots when holding <span class=\"math\">p</span> percent of the sETs/ETs initially (without rebuying a ticket each block) is determined by the product of the probabilities of winning each individual draw:</p>\n<div class=\"math\">\n\\begin{align*}W &amp;= \\left(\\frac{pn}{n}\\right) \\cdot \\left(\\frac{pn-1}{n}\\right) \\cdot \\left(\\frac{pn-2}{n}\\right) \\cdots \\left(\\frac{pn-(m-1)}{n}\\right) \\\\&amp;= \\frac{(pn)!}{(pn-m)! n^m}\\end{align*}\n</div>\n<p><strong>Calculating Graph 2:</strong></p>\n<p>See section 4.4 in the “<a href=\"https://arxiv.org/abs/2404.04262\">Future of MEV</a>” paper.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/execution-auctions-as-an-alternative-to-execution-tickets/19894\">Read full topic</a></p>","link":"https://ethresear.ch/t/execution-auctions-as-an-alternative-to-execution-tickets/19894","pubDate":"Mon, 24 Jun 2024 15:40:47 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19894"},"source":{"@url":"https://ethresear.ch/t/execution-auctions-as-an-alternative-to-execution-tickets/19894.rss","#text":"Execution Auctions as an Alternative to Execution Tickets"}},{"title":"Avoiding Accidental Liveness Faults for Based Preconfs","dc:creator":"mteam88","category":"Layer 2","description":"<h1><a name=\"avoiding-accidental-liveness-faults-for-based-preconfs-1\" class=\"anchor\" href=\"https://ethresear.ch#avoiding-accidental-liveness-faults-for-based-preconfs-1\"></a>Avoiding Accidental Liveness Faults for Based Preconfs</h1>\n<p><em>thanks to <a href=\"https://x.com/drakefjustin\" rel=\"noopener nofollow ugc\">Justin Drake</a>, <a href=\"https://x.com/jon_charb\" rel=\"noopener nofollow ugc\">Jon Charbonneau</a>, <a href=\"https://x.com/lvdaniels\" rel=\"noopener nofollow ugc\">Ladislaus</a>, <a href=\"https://x.com/aimxhaisse\" rel=\"noopener nofollow ugc\">Sébastien Rannou</a>, <a href=\"https://x.com/lazyleger\" rel=\"noopener nofollow ugc\">sacha</a>, <a href=\"https://x.com/DrewVdW\" rel=\"noopener nofollow ugc\">Drew van Der Werff</a>, and Max Wilde from <a href=\"https://x.com/aestusrelay\" rel=\"noopener nofollow ugc\">Aestus</a> for thinking and review</em><br>\n.<br>\n.<br>\n<em><strong>tl;dr:</strong> We solve one of the largest problems with based preconf opt-in from proposers: accidental liveness slashing. The mechanism we introduce requires no changes to existing based preconf protocol designs and has been under our noses the whole time. We use preconf chaining to protect individual proposers from being slashed for liveness failures.</em><br>\n.<br>\n.</p>\n<h2><a name=\"background-2\" class=\"anchor\" href=\"https://ethresear.ch#background-2\"></a>Background</h2>\n<p>On Ethereum today, liveness issues with block proposals are largely accepted, and penalties are minimal. When we introduce based preconfirmations, liveness issues can mean different consequences.</p>\n<p>When dealing with preconfs: from the user’s perspective, liveness faults (missing a block proposal) and safety faults (proposing a block that does not fulfill preconf commitments) are the same thing. In both scenarios, a user experiences a situation where their preconfirmation is not fulfilled.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/d/9d996b95a0c2f74f54edf8f3d3b89beda26956db.png\" data-download-href=\"https://ethresear.ch/uploads/default/9d996b95a0c2f74f54edf8f3d3b89beda26956db\" title=\"liveness faults are safety faults\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/d/9d996b95a0c2f74f54edf8f3d3b89beda26956db_2_406x500.png\" alt=\"liveness faults are safety faults\" data-base62-sha1=\"mubFbjC5uuitb4F8ELIsWKv3sZd\" width=\"406\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/d/9d996b95a0c2f74f54edf8f3d3b89beda26956db_2_406x500.png, https://ethresear.ch/uploads/default/original/3X/9/d/9d996b95a0c2f74f54edf8f3d3b89beda26956db.png 1.5x, https://ethresear.ch/uploads/default/original/3X/9/d/9d996b95a0c2f74f54edf8f3d3b89beda26956db.png 2x\" data-dominant-color=\"665A57\"></a></div><p></p>\n<p>Now, from the perspective of the proposer, liveness faults and safety faults are two very different things. Liveness faults may occur from a multitude of external, accidental circumstances (like power outages, wifi downtime, reorgs, spontaneous combustion) that many proposers just aren’t prepared for. On the other hand, safety faults can only occur when some party (the proposer or some delegate) acts maliciously.</p>\n<p>Additionally, attributing liveness faults is difficult. Many actors within the block supply chain may be responsible for a liveness fault occurring. The complexity involved with this attribution would be nice to avoid.</p>\n<p>To make proposers feel more comfortable with putting up potentially high amounts of collateral, being slashed for accidental liveness faults should be very rare if not impossible.</p>\n<h2><a name=\"preconf-chaining-3\" class=\"anchor\" href=\"https://ethresear.ch#preconf-chaining-3\"></a>Preconf Chaining</h2>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/5/2/524180b5ef3a6673ab62d02d5afdc1a4d0d94fe5.png\" alt=\"preconf chaining\" data-base62-sha1=\"bJFutOzlD3QxTBn5284JqTgxNgF\" width=\"500\" height=\"500\"></p>\n<h3><a name=\"brief-assumptions-4\" class=\"anchor\" href=\"https://ethresear.ch#brief-assumptions-4\"></a>Brief Assumptions:</h3>\n<ul>\n<li>(we are talking about based preconfs here, not L1 preconfs)</li>\n<li>slashing conditions are expressive</li>\n<li>preconf requests include L2 block number</li>\n<li>“active preconfer” refers to the current preconfer (an L1 proposer or delegate in the lookahead), “next active preconfer” refers to the entity who will be the next preconfer.</li>\n</ul>\n<h3><a name=\"slashing-conditions-construction-5\" class=\"anchor\" href=\"https://ethresear.ch#slashing-conditions-construction-5\"></a>Slashing Conditions Construction:</h3>\n<p>We assume a slashing conditions paradigm that is similar to the one presented in <a href=\"https://ethresear.ch/t/credibly-neutral-preconfirmation-collateral-the-preconfirmation-registry/19634\">The Preconf Registry.</a> Specifically, that slashing conditions are “smart” and expressive enough to represent the following constructions.</p>\n<p>The slashing conditions are designed so that a preconfer is slashed if:</p>\n<ul>\n<li>they sign a preconf request about a transaction <code>A</code> and block <code>B</code>, where <code>B</code> is a future L2 block. Also signed is a list of “dependents”, a list of other preconfers (by address or other ID).</li>\n<li><code>A</code> is not fulfilled in <code>B</code>, or was not fulfilled in a block prior to <code>B</code></li>\n<li>All dependents have signed the same preconf request (commitments/signatures from these are required) and have not been slashed (a challenge/cooldown period is useful here).</li>\n</ul>\n<p>This dependent design enables a preconfer to conditionally preconfirm a transaction, based on the choices of other preconfer.</p>\n<h3><a name=\"preconf-flow-6\" class=\"anchor\" href=\"https://ethresear.ch#preconf-flow-6\"></a>Preconf Flow</h3>\n<ul>\n<li>Alice (a based L2 user) wants an inclusion preconf for a transaction <code>A</code></li>\n<li>Alice <a href=\"https://ethresear.ch/t/the-preconfirmation-gateway-unlocking-preconfirmations-from-user-to-preconfer/18812\">delivers a preconf request to the active preconfer</a></li>\n<li>Some entity who obtains a preconf commitment from the active preconfer (Alice, a gateway, or even the active preconfer itself) forwards Alice’s preconf request to the next active preconfer (with a dependent on the active preconfer added) and also forwards the active preconfer’s commitment.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/4/84a8b7a1158dfc8f844abfc5447b193b3d35f12e.png\" data-download-href=\"https://ethresear.ch/uploads/default/84a8b7a1158dfc8f844abfc5447b193b3d35f12e\" title=\"diagram representing how any actor can send a chained preconf request to the next active preconfer\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/4/84a8b7a1158dfc8f844abfc5447b193b3d35f12e_2_690x387.png\" alt=\"diagram representing how any actor can send a chained preconf request to the next active preconfer\" data-base62-sha1=\"iVyv4Oa6jrAljN50JjJZTED9r5A\" width=\"690\" height=\"387\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/4/84a8b7a1158dfc8f844abfc5447b193b3d35f12e_2_690x387.png, https://ethresear.ch/uploads/default/optimized/3X/8/4/84a8b7a1158dfc8f844abfc5447b193b3d35f12e_2_1035x580.png 1.5x, https://ethresear.ch/uploads/default/original/3X/8/4/84a8b7a1158dfc8f844abfc5447b193b3d35f12e.png 2x\" data-dominant-color=\"F7F8F8\"></a></div><p></p>\n<p><strong>Any actor with access to a preconf commitment may construct a chained preconf and forward it to the next active preconfer.</strong></p>\n<p>Note that incentives for doing this vary:</p>\n<ul>\n<li><strong>preconf RPC:</strong> aka <a href=\"https://ethresear.ch/t/the-preconfirmation-gateway-unlocking-preconfirmations-from-user-to-preconfer/18812\">The Preconfirmation Gateway</a> might chain preconfs as a public good for proposers.</li>\n<li><strong>gateway:</strong> A gateway might also chain preconfs as a public good for proposers, but may also use this as a feature to attract proposers (maybe called “liveness fault protection”).</li>\n<li><strong>proposers:</strong> A proposer (or node operator) might also chain preconfs themselves. Their incentive is obviously to avoid being slashed for liveness faults.</li>\n</ul>\n<h3><a name=\"determining-penalties-7\" class=\"anchor\" href=\"https://ethresear.ch#determining-penalties-7\"></a>Determining Penalties</h3>\n<ul>\n<li>In the case where the active preconfer represents a proposer that has a liveness failure and proposes no L2 block, they wouldn’t be slashed because the preconf could still be fulfilled by the next preconfer (and the preconf request block number would match).</li>\n<li>If the active preconfer proposes a block and does not fulfill the preconf request, they would be slashed for a safety fault.</li>\n<li>If the active preconfer does not propose a block and the next preconfer does but does not fulfill the preconf request, the second preconfer is slashed for a safety fault.</li>\n<li>If both preconfers have liveness issues, both are slashed for a safety fault. (This can be avoided by chaining beyond 2.)</li>\n</ul>\n<h3><a name=\"incentivizing-chaining-8\" class=\"anchor\" href=\"https://ethresear.ch#incentivizing-chaining-8\"></a>Incentivizing Chaining</h3>\n<p>To incentivize a future active preconfer to chain preconfs, an active preconfer might share tips. Also, a reputational expectation to chain preconfs can encourage more chaining.</p>\n<p>One possible way to get chaining adoption is to simply require that chaining happens. To make this practical, the future active preconfers must be able to access the preconf commitments of previous preconfers. The DA problem must be solved to make this practical, and this could be done with an external DA layer. Notably, using an external DA layer introduces dependencies on another sequencer: the DA sequencer. TBD how designs of different DA layers can work around this issue and potential censorship that might occur.</p>\n<h2><a name=\"conclusion-9\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-9\"></a>Conclusion</h2>\n<p>In this post, we focus on the benefits of chaining for proposers. Widespread chaining also increases the guarantees that users get for preconfirmations, making preconfs even more valuable. It’s a win-win!</p>\n<p>Whether forced or opt-in, preconf chaining can protect proposers from being slashed for accidental liveness faults. This system can help proposers feel more comfortable opting into higher collateral requirements.</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/c/c/cc0abe035c50a142437976c953764a60e774427a.png\" alt=\"preconf chaining protects proposers from penalties for liveness faults\" data-base62-sha1=\"t72pZ48pgqwPufFxVVyvuObNrSi\" width=\"553\" height=\"451\"></p>\n<h4><a name=\"references-10\" class=\"anchor\" href=\"https://ethresear.ch#references-10\"></a>References</h4>\n<ul>\n<li><a href=\"https://ethresear.ch/t/the-preconfirmation-gateway-unlocking-preconfirmations-from-user-to-preconfer/18812#chained-preconfirmations-13\">The Preconfirmation Gateway</a> by <a href=\"https://x.com/mteamisloading\" rel=\"noopener nofollow ugc\">mteam (me)</a> mentions chained preconfirmations as better liveness guarantees for users.</li>\n<li><a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">Based preconfirmations</a> by <a href=\"https://x.com/drakefjustin\" rel=\"noopener nofollow ugc\">Justin Drake</a> introduces a simple design for based preconfs.</li>\n<li><a href=\"https://ethresear.ch/t/pre-confirmation-liveness-slashing-penalties-from-the-proposers-perspective/19884\">Pre-confirmation Liveness Slashing Penalties from the Proposer’s Perspective</a> by <a href=\"https://x.com/aimxhaisse\" rel=\"noopener nofollow ugc\">Sébastien Rannou</a> touches on the liveness slashing problem and explains how it decreases the economic viability of preconfs for proposers.</li>\n</ul>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/avoiding-accidental-liveness-faults-for-based-preconfs/19888\">Read full topic</a></p>","link":"https://ethresear.ch/t/avoiding-accidental-liveness-faults-for-based-preconfs/19888","pubDate":"Sat, 22 Jun 2024 18:46:11 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19888"},"source":{"@url":"https://ethresear.ch/t/avoiding-accidental-liveness-faults-for-based-preconfs/19888.rss","#text":"Avoiding Accidental Liveness Faults for Based Preconfs"}},{"title":"Pre-confirmation Liveness Slashing Penalties from the Proposer's Perspective","dc:creator":"aimxhaisse","category":"Economics","description":"<p>Current designs around pre-confirmations involve a slashing penalty on liveness, that is if a proposer who commited to pre-confirmations misses its proposal, part of its collateral is burned or redistributed to the user that sent the pre-confirmation as a payback.</p>\n<p>This post explores the liveness penalty from the point of view of proposers from an economical perspective.</p>\n<h2><a name=\"sources-of-liveness-issues-1\" class=\"anchor\" href=\"https://ethresear.ch#sources-of-liveness-issues-1\"></a>Sources of Liveness Issues</h2>\n<p>Liveness issues are complex and can come from different actors or sources, part of them are the result of the proposer’s actions or choices, part of them don’t depend on the proposer. For example:</p>\n<ul>\n<li>proposing a block in time but being reorg by the next proposer,</li>\n<li>failure from the relayer to send the header in time,</li>\n<li>failure from the relayer to propagate the signed header in time and reveal the block to the proposer.</li>\n</ul>\n<p>As a result, the decision on whether to opt-in or not from a proposer perspective has to take into account an <strong>inherent</strong> risk outside of its actions. Using a statistical approach on network history sounds like an easy starting point.</p>\n<h2><a name=\"economical-minimal-viability-2\" class=\"anchor\" href=\"https://ethresear.ch#economical-minimal-viability-2\"></a>Economical Minimal Viability</h2>\n<p>In the last 7 days on the network, about <code>0.54%</code> of slots were missed, to break-even economically (that is, for an operator to not lose or win anything in the long run), assuming the liveness fault is <code>1 ETH</code>, the minimal extra-tip of a pre-confirmation would be <code>0.0054 ETH</code>.</p>\n<p>To put it in perspective, the median execution reward in the last 7 days is <code>~0.048 ETH</code>, so with <code>1 ETH</code> of collateral, the pre-confirmations would need to be about <code>10%</code> of the block’s value with the current network conditions. Using <code>P(miss)</code> as the probability to miss a block, the break-even formula is:</p>\n<div class=\"math\">\n(1 - (P(miss))) * tip = P(miss) * penalty\n</div>\n<p>And so the minimal tip:</p>\n<div class=\"math\">\ntip = {(P(miss) * penalty) \\over (1 - P(miss))}\n</div>\n<p>With <code>1 ETH</code> as a collateral, here is the model for low probabilites of missed block with <code>P(miss) &lt; 0.025</code>:</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/e/a/ea574d8ff641f0e75064bfc788d672f031b6a3cb.png\" alt=\"download\" data-base62-sha1=\"xr4LYGKTfxtZQ28KgORoZpLMAzN\" width=\"626\" height=\"455\"></p>\n<p>Zooming out up with <code>P(miss) &lt; 0.5</code>:</p>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/0/6/0638f8a59181327ccce1392f2bd48663d52562aa.png\" alt=\"download\" data-base62-sha1=\"T2VmxGx6bY2e82jK6v1aUzbtqi\" width=\"608\" height=\"455\"></p>\n<h2><a name=\"opt-in-if-economically-viable-3\" class=\"anchor\" href=\"https://ethresear.ch#opt-in-if-economically-viable-3\"></a>Opt-in if Economically Viable</h2>\n<p>One idea to make it viable at scale with little effort from proposers would be for the pre-confirmation sidecar on the proposer side to opt-in to pre-confirmations only it if the tip is above what’s economically sound given the current rate of misses on the network. For example, if in the last 24 hours the average missed block proposal is <code>0.5%</code>, only commit to pre-confirmations which tip is above <code>0.005 ETH</code>.</p>\n<p>This approach requires the relayer to pass the pre-confirmation tip information to the proposer to decide whether or not to commit to pre-confirmations, or the proposer to send the minimal-tip to the builder so it can provide a block that match it.</p>\n<p>The advantage of this approach is if the network is struggling at scale, the risk for a proposer to miss a slot increases, and so it makes sense for proposers to opt-out of pre-confirmations until the situation resolves. Increasing the pre-confirmer bid under such conditions makes sense as more risk is taken.</p>\n<p>A disavantage is that the missed block proposal rate is an approximation: it doesn’t account for totally offline validators, or for the extra-cost involved in validating the pre-confirmation on the proposer side which can take time and increase the risks of missing the slot.</p>\n<h2><a name=\"alternatives-4\" class=\"anchor\" href=\"https://ethresear.ch#alternatives-4\"></a>Alternatives</h2>\n<h4><a name=\"adjusted-liveness-penalty-5\" class=\"anchor\" href=\"https://ethresear.ch#adjusted-liveness-penalty-5\"></a>Adjusted Liveness Penalty</h4>\n<p>Instead of using a minimal tip as a way to decide if it’s viable, the liveness penalty could be dynamically adjusted to what is the minimal viable condition. The tip could then be a fixed value.</p>\n<h4><a name=\"user-defined-liveness-penalty-6\" class=\"anchor\" href=\"https://ethresear.ch#user-defined-liveness-penalty-6\"></a>User-Defined Liveness Penalty</h4>\n<p>The user sending the pre-confirmation could also decide both the liveness penalty and the tip as suggested in <a href=\"https://ethresear.ch/t/user-defined-penalties-ensuring-honest-preconf-behavior/19545\">User-Defined Penalties: Ensuring Honest Preconf Behavior</a>, and adjust it to what the current state of the network is/what validators accept. The assumption here is maybe for some pre-confirmations the goal is to be as soon as possible on the L1, and so, reducing the liveness penalty would increase their probabilities of being pre-confirmed. On the other hand an arbitrage pre-confirmation could prefer to opt-in for a larger liveness penalty as its opportunity would be lost if the block is missed.</p>\n<h2><a name=\"caveats-7\" class=\"anchor\" href=\"https://ethresear.ch#caveats-7\"></a>Caveats</h2>\n<p>This simple break-even model on the proposer side has no incentive, it is unclear if it will motivate proposers to opt-in.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/pre-confirmation-liveness-slashing-penalties-from-the-proposers-perspective/19884\">Read full topic</a></p>","link":"https://ethresear.ch/t/pre-confirmation-liveness-slashing-penalties-from-the-proposers-perspective/19884","pubDate":"Fri, 21 Jun 2024 11:44:23 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19884"},"source":{"@url":"https://ethresear.ch/t/pre-confirmation-liveness-slashing-penalties-from-the-proposers-perspective/19884.rss","#text":"Pre-confirmation Liveness Slashing Penalties from the Proposer's Perspective"}},{"title":"Blob Usage Strategies by Rollups and Non-rollup Applications","dc:creator":"doublespending","category":"Data Science","description":"<p><a href=\"https://0xpantarhei.substack.com/p/blob-usage-strategies\" rel=\"noopener nofollow ugc\">Full Report</a></p>\n<h2><a name=\"tdlr-1\" class=\"anchor\" href=\"https://ethresear.ch#tdlr-1\"></a>TDLR</h2>\n<ol>\n<li>The main applications using blobs are rollups, accounting for approximately 87%. Non-rollup applications mainly include <a href=\"https://blobscan.com/tx/0x3ff787f16ad6d65dc8d6e45a3ea95440fca2da2c0e344e76a6e509857673da01\" rel=\"noopener nofollow ugc\">Blobscriptions</a> and <a href=\"https://blobscan.com/tx/0x1956039b71bbc1c5de31ceafb27782eb2e8a07c9299d1d534e470bcf35f9835a\" rel=\"noopener nofollow ugc\">customized type 3 transactions</a>.</li>\n<li>Rollup applications choose different blob usage strategies according to their own situations. The strategies will consider the number of blobs carried by type 3 transactions, blob utilization, and blob submission frequency to balance the costs of availability data fees and delay costs.</li>\n<li>Non-rollup applications can be characterized and distinguished from rollup applications by the number of blobs carried by type 3 transactions, blob utilization, and blob submission frequency. These features help identify scenarios of blob abuse, allowing for the design of corresponding anti-abuse mechanisms.</li>\n<li>In most cases, using blobs as a data availability solution is more cost-effective than calldata. However, there are a few scenarios where calldata is cheaper: blob gas price spikes and blob utilization is extremely low.</li>\n<li>Short-term fluctuations in blob gas price is mainly influenced by the demand from non-rollup applications. Rollup applications have a relatively inelastic demand for blobs, so they do not significantly impact short-term fluctuations in blob gas prices.</li>\n<li>Currently, rollup applications do not seem to consider blob gas price as a reference factor in their blob usage strategies.</li>\n<li>The probability of blocks containing type 3 transactions being reorganized is extremely low. Additionally, carrying more blobs does not increase the probability of block reorganization. However, there is a clustering phenomenon in block height for blocks containing type 3 transactions.</li>\n</ol>\n<h2><a name=\"introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#introduction-2\"></a>Introduction</h2>\n<p>This report provides an in-depth analysis of type 3 transactions used for carrying blobs from the time of the Ethereum Decun upgrade until May 22, 2024. It focuses on blob usage strategies of rollup and non-rollup applications. The dataset, data processing programs, and visualization code for this report are <a href=\"https://github.com/doublespending/EIP-4844-Data-Analysis\" rel=\"noopener nofollow ugc\">open source</a>, detailed in the following “Dataset” section.</p>\n<h2><a name=\"type-3-transactions-blobs-share-by-applications-3\" class=\"anchor\" href=\"https://ethresear.ch#type-3-transactions-blobs-share-by-applications-3\"></a>Type 3 Transactions &amp; Blobs Share by Applications</h2>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/1/9101b16c984217aa1e5a51a59e7c0024aa6e8e18.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/9101b16c984217aa1e5a51a59e7c0024aa6e8e18\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/1/9101b16c984217aa1e5a51a59e7c0024aa6e8e18_2_690x363.jpeg\" alt=\"image\" data-base62-sha1=\"kGMRm5QwKy3NTr1BOtC0uZHGui4\" width=\"690\" height=\"363\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/1/9101b16c984217aa1e5a51a59e7c0024aa6e8e18_2_690x363.jpeg, https://ethresear.ch/uploads/default/optimized/3X/9/1/9101b16c984217aa1e5a51a59e7c0024aa6e8e18_2_1035x544.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/9/1/9101b16c984217aa1e5a51a59e7c0024aa6e8e18_2_1380x726.jpeg 2x\" data-dominant-color=\"DCCCD8\"></a></div><p></p>\n<h3><a name=\"rollup-applications-4\" class=\"anchor\" href=\"https://ethresear.ch#rollup-applications-4\"></a>Rollup Applications</h3>\n<p>Observations from Figure 1 on the proportion of type 3 transactions:</p>\n<ul>\n<li>Base, Scroll, Linea, and Starknet are in the same tier, having the highest transaction proportions.</li>\n<li>Arbitrum, Optimism, and Zksync are in the next tier, having the second-highest transaction proportions.</li>\n</ul>\n<p>This phenomenon seems counterintuitive as Arbitrum and Optimism have higher TPS than Scroll, Linea, and Starknet and should have a higher proportion of type 3 transactions.</p>\n<p>Figure 2 shows that counterintuitive phenomenon is caused by different rollup strategies in the number of blobs carried by type 3 transactions.</p>\n<p>Observations from Figure 2 on the proportion of blobs:</p>\n<ul>\n<li>Base stands alone, having the highest proportion of blobs.</li>\n<li>Arbitrum and Optimism are in the same tier, having the second-highest proportion of blobs.</li>\n<li>Scroll, Linea, Starknet, and Zksync are in the same tier, having a medium proportion of blobs.</li>\n</ul>\n<p>This phenomenon aligns more with intuition: blob proportions are directly related to the scale of rollup’s availability data, thus showing a positive correlation with rollup TPS.</p>\n<p>The difference between the proportion of type 3 transactions (31%) and blobs (14%) for non-rollup applications indicates that non-rollup applications and rollup applications have different needs.</p>\n<h3><a name=\"non-rollup-applications-5\" class=\"anchor\" href=\"https://ethresear.ch#non-rollup-applications-5\"></a>Non-Rollup Applications</h3>\n<ul>\n<li>Rollup applications are B2B businesses aiming to fill fine-grained Layer 2 transaction availability data, so their type 3 transactions are not limited to carrying only 1 blob.</li>\n<li>Non-rollup applications are B2C businesses aiming to upload complete text, images, etc., so their type 3 transactions usually carry only 1 blob to meet their needs.</li>\n</ul>\n<h2><a name=\"rollup-blob-usage-strategies-6\" class=\"anchor\" href=\"https://ethresear.ch#rollup-blob-usage-strategies-6\"></a>Rollup Blob Usage Strategies</h2>\n<h3><a name=\"rollup-strategy-model-7\" class=\"anchor\" href=\"https://ethresear.ch#rollup-strategy-model-7\"></a>Rollup Strategy Model</h3>\n<p>This section models the rollup blob usage strategies with</p>\n<ol>\n<li><code>blobNumber</code>, i.e. the number of blobs carried by type 3 transactions</li>\n<li><code>blobUtilization</code>, i.e. blob space utilization</li>\n<li><code>blobInterval</code>, i.e. the blob submission interval</li>\n</ol>\n<h4><a name=\"fee-cost-8\" class=\"anchor\" href=\"https://ethresear.ch#fee-cost-8\"></a>Fee Cost</h4>\n<p>The fee cost per transaction for rollups is expressed as:</p>\n<div class=\"math\">\n\\begin{equation}\nfeeCost = \\frac{1}{k}(\\frac{blobCost}{blobUtilization}+\\frac{fixedCost}{blobNumber*blobUtilization})\n\\end{equation}\n</div>\n<ul>\n<li><code>fixedCost</code>: the fixed cost of a type 3 transaction</li>\n<li><code>blobCost</code>: the cost of a single blob</li>\n<li>The larger the <code>blobUtilization</code>, the lower the amortized cost of the blob fee <span class=\"math\">\\frac{blobCost}{blobUtilization}</span> and the fixed cost <span class=\"math\">\\frac{fixedCost}{blobNumber*blobUtilization}</span>, resulting in a lower fee cost <code>feeCost</code>.</li>\n<li>The larger the <code>blobNumber</code>, the lower the amortized cost of the fixed cost <span class=\"math\">\\frac{fixedCost}{blobNumber*blobUtilization}</span>, resulting in a lower fee cost <code>feeCost</code>.</li>\n</ul>\n<h4><a name=\"delay-cost-9\" class=\"anchor\" href=\"https://ethresear.ch#delay-cost-9\"></a>Delay Cost</h4>\n<p><strong>The delay cost per transaction for rollups is expressed as:</strong></p>\n<div class=\"math\">\n\\begin{equation}\ndelayCost = F(\\frac{blobNumber*blobUtilization*k}{tps})\n\\end{equation}\n</div>\n<ul>\n<li>The larger the <code>blobUtilization</code>, the larger the delay cost <code>delayCost</code>.</li>\n<li>The larger the <code>blobNumber</code>, the larger the delay cost <code>delayCost</code>.</li>\n<li>The larger the <code>tps</code>, the smaller the delay cost <code>delayCost</code>.</li>\n</ul>\n<blockquote>\n<p>The derivation of the formula can be found in the <a href=\"https://0xpantarhei.substack.com/p/blob-usage-strategies\" rel=\"noopener nofollow ugc\">full version</a>.</p>\n</blockquote>\n<h3><a name=\"rollup-strategy-analysis-10\" class=\"anchor\" href=\"https://ethresear.ch#rollup-strategy-analysis-10\"></a>Rollup Strategy Analysis</h3>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/c/cc978c93e42157bd63c06de9c0637fc887dccced.png\" data-download-href=\"https://ethresear.ch/uploads/default/cc978c93e42157bd63c06de9c0637fc887dccced\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/c/cc978c93e42157bd63c06de9c0637fc887dccced_2_690x260.png\" alt=\"image\" data-base62-sha1=\"tbU5YTX8BfjgApcDED6tjTuGjnv\" width=\"690\" height=\"260\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/c/cc978c93e42157bd63c06de9c0637fc887dccced_2_690x260.png, https://ethresear.ch/uploads/default/optimized/3X/c/c/cc978c93e42157bd63c06de9c0637fc887dccced_2_1035x390.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/c/cc978c93e42157bd63c06de9c0637fc887dccced_2_1380x520.png 2x\" data-dominant-color=\"D9CEDF\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/2/32521830fd7aab2cbd7f19d504720344afb2eff7.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/32521830fd7aab2cbd7f19d504720344afb2eff7\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/2/32521830fd7aab2cbd7f19d504720344afb2eff7_2_574x499.jpeg\" alt=\"image\" data-base62-sha1=\"7b9L86kiOFbU91Xr10gVuxYBnWn\" width=\"574\" height=\"499\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/2/32521830fd7aab2cbd7f19d504720344afb2eff7_2_574x499.jpeg, https://ethresear.ch/uploads/default/optimized/3X/3/2/32521830fd7aab2cbd7f19d504720344afb2eff7_2_861x748.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/3/2/32521830fd7aab2cbd7f19d504720344afb2eff7_2_1148x998.jpeg 2x\" data-dominant-color=\"F3F2F1\"></a></div><p></p>\n<h3><a name=\"non-rollup-blob-strategies-11\" class=\"anchor\" href=\"https://ethresear.ch#non-rollup-blob-strategies-11\"></a>Non-Rollup Blob Strategies</h3>\n<p>Rollup applications are B2B, while non-rollup applications are B2C. Therefore, non-rollup applications differ from the rollup strategy model. For non-rollup applications:</p>\n<ul>\n<li>The number of blobs carried by type 3 transactions depends on the size of the content (texts/images) stored in the blobs.</li>\n<li>Blob utilization depends on the size of the content (texts/images) stored in the blobs.</li>\n<li>Blob submission intervals depend on the immediate needs of C-end users, with no delay costs involved.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/c/cc978c93e42157bd63c06de9c0637fc887dccced.png\" data-download-href=\"https://ethresear.ch/uploads/default/cc978c93e42157bd63c06de9c0637fc887dccced\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/c/cc978c93e42157bd63c06de9c0637fc887dccced_2_690x260.png\" alt=\"image\" data-base62-sha1=\"tbU5YTX8BfjgApcDED6tjTuGjnv\" width=\"690\" height=\"260\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/c/cc978c93e42157bd63c06de9c0637fc887dccced_2_690x260.png, https://ethresear.ch/uploads/default/optimized/3X/c/c/cc978c93e42157bd63c06de9c0637fc887dccced_2_1035x390.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/c/cc978c93e42157bd63c06de9c0637fc887dccced_2_1380x520.png 2x\" data-dominant-color=\"D9CEDF\"></a></div><p></p>\n<ul>\n<li>\n<p>According to Figure 5 (<strong>Others</strong> ), 1 blob can meet the needs of most non-rollup applications.</p>\n</li>\n<li>\n<p>According to Figure 6 (<strong>Others</strong> ), the blob utilization is concentrated between 20% and 40%, indicating that non-rollup applications generally cannot fill the blob, with the data size mainly between 25.6 kB and 51.2 kB.</p>\n</li>\n<li>\n<p>According to Figure 7 (<strong>Others</strong> ), about 83% of blobs have a submission interval of less than 1 minute, indicating a relative high frequency of user demand for non-rollup applications.</p>\n</li>\n</ul>\n<p>In summary, the type 3 transactions for non-rollup applications can be characterized as: <strong>high-frequency transactions carrying 1 low-utilization blob</strong> .</p>\n<p>The essence of this characterization is that non-rollup applications are driven by immediate needs and are less concerned about the fee cost per data byte compared to rollup applications.</p>\n<p>This characterization allows for the identification of non-rollup applications, which in turn helps design mechanisms to limit blob abuse by non-rollup applications.</p>\n<h2><a name=\"is-using-blobs-always-more-cost-effective-than-calldata-12\" class=\"anchor\" href=\"https://ethresear.ch#is-using-blobs-always-more-cost-effective-than-calldata-12\"></a>Is Using Blobs Always More Cost-effective than Calldata?</h2>\n<p>Introducing <code>feeRatio</code> to measure the relative advantages of the two solutions:</p>\n<div class=\"math\">\n\\begin{equation}\nfeeRatio = \\frac{calldataFeeCost }{blobFeeCost}\n\\end{equation}\n</div>\n<ul>\n<li>When <code>feeRatio</code> ≥ 1, it indicates that using blobs as a data availability solution is not worse than calldata.</li>\n<li>When <code>feeRatio</code> &lt; 1, it indicates that using blobs as a data availability solution is worse than calldata.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/5/b5e1ca6b02490795bf2e742ecb92586d1b18e685.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/b5e1ca6b02490795bf2e742ecb92586d1b18e685\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/5/b5e1ca6b02490795bf2e742ecb92586d1b18e685_2_472x500.jpeg\" alt=\"image\" data-base62-sha1=\"pX0aWpj8EOZI26IZCrfr24XlVBz\" width=\"472\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/5/b5e1ca6b02490795bf2e742ecb92586d1b18e685_2_472x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/b/5/b5e1ca6b02490795bf2e742ecb92586d1b18e685_2_708x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/5/b5e1ca6b02490795bf2e742ecb92586d1b18e685_2_944x1000.jpeg 2x\" data-dominant-color=\"C5B1F3\"></a></div><p></p>\n<p>Figure 8 also shows a few cases where <code>feeRatio</code> &lt; 1 (red), indicating that calldata is more cost-effective than blobs:</p>\n<ul>\n<li>Mostly in non-Rollup applications (<strong>Others</strong>):\n<ul>\n<li>Non-rollup applications generally do not care about the cost differences between blobs and calldata; they care about using blobs itself, such as in Blobscriptions.</li>\n</ul>\n</li>\n<li>A few in Metal rollup:\n<ul>\n<li>Rollup application Metal seems not to have considered switching between blobs and calldata in its strategy, leading to suboptimal choices in some extreme cases.</li>\n<li>Extreme cases are mainly due to Metal’s low blob utilization (see Figure 6) coinciding with a spike in blob gas prices.</li>\n<li>However, given that extreme scenarios are rare and maintaining two data availability solutions is costly, Metal’s suboptimal strategy in extreme cases seems acceptable.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>The analysis of blob and calldata solutions in this section only considers fee costs and not delay costs. Considering delay costs, calldata has an actual advantage.</p>\n</blockquote>\n<h2><a name=\"blob-gas-price-and-blob-usage-strategies-13\" class=\"anchor\" href=\"https://ethresear.ch#blob-gas-price-and-blob-usage-strategies-13\"></a>Blob Gas Price and Blob Usage Strategies</h2>\n<h3><a name=\"analysis-of-blob-gas-price-fluctuations-14\" class=\"anchor\" href=\"https://ethresear.ch#analysis-of-blob-gas-price-fluctuations-14\"></a>Analysis of Blob Gas Price Fluctuations</h3>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/8/58dd45e0e206936eb5eb2b32fc343a70322254c1.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/58dd45e0e206936eb5eb2b32fc343a70322254c1\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/8/58dd45e0e206936eb5eb2b32fc343a70322254c1_2_690x363.jpeg\" alt=\"image\" data-base62-sha1=\"cG85JHQafrtsHJIusy3mtiCuSTD\" width=\"690\" height=\"363\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/8/58dd45e0e206936eb5eb2b32fc343a70322254c1_2_690x363.jpeg, https://ethresear.ch/uploads/default/optimized/3X/5/8/58dd45e0e206936eb5eb2b32fc343a70322254c1_2_1035x544.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/5/8/58dd45e0e206936eb5eb2b32fc343a70322254c1_2_1380x726.jpeg 2x\" data-dominant-color=\"DDCAE2\"></a></div><br>\nFigures 9 and 10 show that in scenarios of high blob gas prices (&gt; 10), the proportion of non-rollup applications (<strong>Others</strong>) is significantly higher than in scenarios of low blob gas prices (&lt; 10).<p></p>\n<p>Therefore, it can be concluded that the surge in blob gas prices is mainly driven by the demand from non-rollup applications, rather than rollup applications. Otherwise, the proportion of rollup and non-rollup applications should remain stable.</p>\n<h3><a name=\"how-rollups-respond-to-blob-gas-price-fluctuations-15\" class=\"anchor\" href=\"https://ethresear.ch#how-rollups-respond-to-blob-gas-price-fluctuations-15\"></a>How Rollups Respond to Blob Gas Price Fluctuations</h3>\n<p><em>Hypothesis 1: The higher the blob gas price, to reduce fee costs, applications should carry more blobs in type 3 transactions, i.e., the number of blobs should be positively correlated with blob gas prices.</em><br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/b/fb34ad1ab0fcf6250662d82b007a763309889ef7.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/fb34ad1ab0fcf6250662d82b007a763309889ef7\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/b/fb34ad1ab0fcf6250662d82b007a763309889ef7_2_505x500.jpeg\" alt=\"image\" data-base62-sha1=\"zQgHBta1p1FI6UWFZUTXqKLAJtJ\" width=\"505\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/b/fb34ad1ab0fcf6250662d82b007a763309889ef7_2_505x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/f/b/fb34ad1ab0fcf6250662d82b007a763309889ef7_2_757x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/f/b/fb34ad1ab0fcf6250662d82b007a763309889ef7_2_1010x1000.jpeg 2x\" data-dominant-color=\"F1EFF0\"></a></div><p></p>\n<p>Figure 14 shows that the hypothesis does not hold.</p>\n<p><em>Hypothesis 2: The higher the blob gas price, to reduce fee costs, applications should increase blob utilization, i.e., blob utilization should be positively correlated with blob gas prices.</em><br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/2/521bb465406b224d50b0117150169a5991c5029c.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/521bb465406b224d50b0117150169a5991c5029c\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/2/521bb465406b224d50b0117150169a5991c5029c_2_498x500.jpeg\" alt=\"image\" data-base62-sha1=\"bImvAK3zdpKWR6WIwqrwb6yGmyU\" width=\"498\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/2/521bb465406b224d50b0117150169a5991c5029c_2_498x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/5/2/521bb465406b224d50b0117150169a5991c5029c_2_747x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/5/2/521bb465406b224d50b0117150169a5991c5029c_2_996x1000.jpeg 2x\" data-dominant-color=\"F4F2F4\"></a></div><p></p>\n<p>Figure 15 shows that the hypothesis does not hold.</p>\n<p><em>Hypothesis 3: The higher the blob gas price, to reduce fee costs, applications should delay blob submissions, i.e., blob submission intervals should be positively correlated with blob gas prices.</em></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/e/9e1dd1bbb0bad1163b9eaf7f8d61f340279bb0fd.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/9e1dd1bbb0bad1163b9eaf7f8d61f340279bb0fd\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/e/9e1dd1bbb0bad1163b9eaf7f8d61f340279bb0fd_2_514x500.jpeg\" alt=\"image\" data-base62-sha1=\"myLkk9jLyI2XWYftAdoMB4g0HeJ\" width=\"514\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/e/9e1dd1bbb0bad1163b9eaf7f8d61f340279bb0fd_2_514x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/9/e/9e1dd1bbb0bad1163b9eaf7f8d61f340279bb0fd_2_771x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/9/e/9e1dd1bbb0bad1163b9eaf7f8d61f340279bb0fd_2_1028x1000.jpeg 2x\" data-dominant-color=\"EBE7E9\"></a></div><p></p>\n<p>Figure 16 shows that the hypothesis does not hold.</p>\n<blockquote>\n<p>In Figures 9 and 10, readers might notice that some rollup applications seem to respond to high blob gas prices. Scroll seems to suspend blob submissions under high blob gas prices. However, this conclusion is incorrect. The reason is that not all rollups immediately used blobs after the EIP-4844 upgrade.</p>\n</blockquote>\n<h2><a name=\"blobs-and-block-reorg-16\" class=\"anchor\" href=\"https://ethresear.ch#blobs-and-block-reorg-16\"></a>Blobs and Block Reorg</h2>\n<p>From the Decun upgrade to May 22, there were 171 type 3 transactions included in the forked blocks and 348,121 included in the canonical blocks. Therefore, the proportion of type 3 transactions being forked is approximately 0.049%. This section explores the relationship between block reorg and blob.</p>\n<h3><a name=\"blob-number-distribution-in-the-canonical-and-forked-blocks-with-blobs-17\" class=\"anchor\" href=\"https://ethresear.ch#blob-number-distribution-in-the-canonical-and-forked-blocks-with-blobs-17\"></a>Blob Number Distribution in the Canonical and Forked Blocks with Blobs</h3>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/e/bef1c025b4ae7c6990e2c7968acf12a6eccba1a2.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/bef1c025b4ae7c6990e2c7968acf12a6eccba1a2\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/e/bef1c025b4ae7c6990e2c7968acf12a6eccba1a2_2_690x403.jpeg\" alt=\"image\" data-base62-sha1=\"rfaFogMD5Zwx4owyH1Stjm6cM5I\" width=\"690\" height=\"403\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/e/bef1c025b4ae7c6990e2c7968acf12a6eccba1a2_2_690x403.jpeg, https://ethresear.ch/uploads/default/optimized/3X/b/e/bef1c025b4ae7c6990e2c7968acf12a6eccba1a2_2_1035x604.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/e/bef1c025b4ae7c6990e2c7968acf12a6eccba1a2_2_1380x806.jpeg 2x\" data-dominant-color=\"E3C4DD\"></a></div><p></p>\n<p><em>Hypothesis: More blobs increase the probability of block reorganizations.</em></p>\n<p>If the hypothesis holds, the following inequality should be satisfied:</p>\n<div class=\"math\">\n\\begin{equation}\nP(reorg|blob=n)  &gt; P(reorg|blob=n-1)\n\\end{equation}\n</div>\n<p>According to <a href=\"https://en.wikipedia.org/wiki/Bayes%27_theorem\" rel=\"noopener nofollow ugc\">Bayes’ theorem</a>, inequality above is equivalent to:</p>\n<div class=\"math\">\n\\begin{equation}\n\\frac{P(blob=n|reorg)}{P(blob=n)}  &gt; \\frac{P(blob=n-1|reorg)}{P(blob=n-1)}\n\\end{equation}\n</div>\n<p>We check whether the actual data satisfies inequality and obtain the following table:<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/c/ec253f7881bbf00cf3b5a37a8635dfb0181309ee.png\" data-download-href=\"https://ethresear.ch/uploads/default/ec253f7881bbf00cf3b5a37a8635dfb0181309ee\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/c/ec253f7881bbf00cf3b5a37a8635dfb0181309ee_2_690x201.png\" alt=\"image\" data-base62-sha1=\"xH2u9xD5zCwl7SjVWvOTuSPeRxs\" width=\"690\" height=\"201\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/c/ec253f7881bbf00cf3b5a37a8635dfb0181309ee_2_690x201.png, https://ethresear.ch/uploads/default/optimized/3X/e/c/ec253f7881bbf00cf3b5a37a8635dfb0181309ee_2_1035x301.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/c/ec253f7881bbf00cf3b5a37a8635dfb0181309ee.png 2x\" data-dominant-color=\"F8F8F7\"></a></div><p></p>\n<p>The table above shows that equation (10) does not hold for all <code>n</code>. Therefore, the hypothesis does not hold, indicating that more blobs are not significantly related to block reorganizations.</p>\n<h3><a name=\"distribution-of-type-3-transactions-and-blobs-by-applications-in-the-canonical-and-forked-blocks-with-blobs-18\" class=\"anchor\" href=\"https://ethresear.ch#distribution-of-type-3-transactions-and-blobs-by-applications-in-the-canonical-and-forked-blocks-with-blobs-18\"></a>Distribution of Type 3 Transactions and Blobs by Applications in the Canonical and Forked Blocks with Blobs</h3>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/d/ddfc7f0d5d5b2a90aaf6efff87b6d7a3733c2aff.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/ddfc7f0d5d5b2a90aaf6efff87b6d7a3733c2aff\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/d/ddfc7f0d5d5b2a90aaf6efff87b6d7a3733c2aff_2_425x500.jpeg\" alt=\"image\" data-base62-sha1=\"vFMuurP77hiUeXoHX4RnoyezcZ1\" width=\"425\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/d/ddfc7f0d5d5b2a90aaf6efff87b6d7a3733c2aff_2_425x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/d/d/ddfc7f0d5d5b2a90aaf6efff87b6d7a3733c2aff_2_637x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/d/d/ddfc7f0d5d5b2a90aaf6efff87b6d7a3733c2aff_2_850x1000.jpeg 2x\" data-dominant-color=\"E4D9E4\"></a></div><br>\nFigures 18 and 19 show that the proportion of type 3 transactions/blobs for Zksync and Scroll in forked blocks is significantly higher than in the canonical blocks.<p></p>\n<p>Applications seem to have some connection with block reorganizations, possibly related to differences in blob usage strategies by applications:</p>\n<ul>\n<li>Zksync and Scroll are less strategic in selecting the timing of submitting type 3 transactions, targeting block heights prone to reorganization.</li>\n<li>The unique characteristics of Zksync and Scroll’s type 3 transactions make the blocks containing them more likely to be reorganized.</li>\n</ul>\n<h3><a name=\"clustering-phenomenon-of-forked-blocks-with-blobs-19\" class=\"anchor\" href=\"https://ethresear.ch#clustering-phenomenon-of-forked-blocks-with-blobs-19\"></a>Clustering Phenomenon of Forked Blocks with Blobs</h3>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/8/281e3d3c49f900b77406ef467f2c32a1b08331eb.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/281e3d3c49f900b77406ef467f2c32a1b08331eb\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/8/281e3d3c49f900b77406ef467f2c32a1b08331eb_2_690x286.jpeg\" alt=\"image\" data-base62-sha1=\"5ITSVOrBqrxjzugy2QrjZFQ2U0X\" width=\"690\" height=\"286\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/8/281e3d3c49f900b77406ef467f2c32a1b08331eb_2_690x286.jpeg, https://ethresear.ch/uploads/default/optimized/3X/2/8/281e3d3c49f900b77406ef467f2c32a1b08331eb_2_1035x429.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/2/8/281e3d3c49f900b77406ef467f2c32a1b08331eb_2_1380x572.jpeg 2x\" data-dominant-color=\"F4F2F3\"></a></div><br>\nIf each block has the same probability of being reorganized, the forked blocks should be evenly distributed across the block height range. However, Figure 20 shows a clustering phenomenon in block heights for forked blocks, possibly related to network conditions.<p></p>\n<p>In addition, the clustering phenomenon that occurs in block reorganization seems to be somewhat related to the applications that submit blobs. For example, type 3 transactions for non rollup applications are only included in forked blocks between 19500000 and 19600000.</p>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://0xpantarhei.substack.com/p/blob-usage-strategies\">\n  <header class=\"source\">\n      <img src=\"https://ethresear.ch/uploads/default/original/3X/3/0/30aea33d55bd45ce96fab5bf70ecd7a3d0178f9d.png\" class=\"site-icon\" data-dominant-color=\"2F2925\" width=\"64\" height=\"64\">\n\n      <a href=\"https://0xpantarhei.substack.com/p/blob-usage-strategies\" target=\"_blank\" rel=\"noopener nofollow ugc\">0xpantarhei.substack.com</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <div class=\"aspect-image\" style=\"--aspect-ratio:690/345;\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/7/f7108d3b335a7303d071fa1c0b9afa898ea3fa24_2_690x345.jpeg\" class=\"thumbnail\" data-dominant-color=\"3F3F3F\" width=\"690\" height=\"345\"></div>\n\n<h3><a href=\"https://0xpantarhei.substack.com/p/blob-usage-strategies\" target=\"_blank\" rel=\"noopener nofollow ugc\">Blob Usage Strategies by Rollups and Non-rollup Applications</a></h3>\n\n  <p>This report provides an in-depth analysis of type 3 transactions used for carrying blobs.</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/blob-usage-strategies-by-rollups-and-non-rollup-applications/19874\">Read full topic</a></p>","link":"https://ethresear.ch/t/blob-usage-strategies-by-rollups-and-non-rollup-applications/19874","pubDate":"Thu, 20 Jun 2024 03:39:04 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19874"},"source":{"@url":"https://ethresear.ch/t/blob-usage-strategies-by-rollups-and-non-rollup-applications/19874.rss","#text":"Blob Usage Strategies by Rollups and Non-rollup Applications"}},{"title":"Block Building is not just knapsack!","dc:creator":"sarisht","category":"Block proposer","description":"<p>Authors: <a class=\"mention\" href=\"https://ethresear.ch/u/mikerah\">@Mikerah</a> Afonso <a class=\"mention\" href=\"https://ethresear.ch/u/sarisht\">@sarisht</a></p>\n<p>Shoutout to Gabearro Ventalitan Nerla Yun Qi and Surya for all the vibes and discussions!</p>\n<p>This project was done as a Hackathon Project at IC3 camp last week.</p>\n<h2><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>TL;DR</h2>\n<p>We present a formal model or block building in blockchains. We show that block building is at least a combination of the Knapsack problem and the Maximum Independent Set problem, thus showing that block building is an NP-hard problem. Next, we provide various greedy algorithms with different tradeoffs. Then, we show simulation results to justify the algorithms and benchmarks. Our results show that tweaking the greedy solution with the results of the known knapsack constraint outperforms the currently used greedy algorithm by ~15% in terms of fee earned. Finally, we discuss how this is relevant for block builders in Ethereum in practice and directions for future research.</p>\n<h2><a name=\"introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#introduction-2\"></a>Introduction</h2>\n<p>Block building in Ethereum has evolved into a multimillion-dollar industry, particularly with the introduction of MEV-Boost. This has significantly increased the revenue earned by the builders. However, the builders’ algorithm for selecting transactions and transaction bundles needs more study. In collaboration with Flashbots, Mikerah (group lead for the project) has recently worked on a project that <a href=\"https://collective.flashbots.net/t/frp-10-distributed-blockbuilding-networks-via-secure-knapsack-auctions/1955\" rel=\"noopener nofollow ugc\">formalizes the model for block building as a knapsack problem</a>. This model considers each transaction’s utility (the fee offered by the transaction) and cost (the gas used by the transaction), with a budget for the maximum price that can be paid (the gas limit for the block). The practical relevance of this research is evident, as it addresses a significant limitation of the current model, where not all transactions are independent of each other.</p>\n<h2><a name=\"the-problem-3\" class=\"anchor\" href=\"https://ethresear.ch#the-problem-3\"></a>The Problem</h2>\n<p>Let’s delve into the heart of the matter by examining why transactions are not independent, a key challenge in block building.</p>\n<h3><a name=\"bitcoin-blockchain-4\" class=\"anchor\" href=\"https://ethresear.ch#bitcoin-blockchain-4\"></a>Bitcoin Blockchain</h3>\n<p>The most critical problem described in the Satoshi Nakamoto blockchain paper was catching double-spending. If two transactions try to spend the same UTXO, only one of them should make it on-chain. Thus, we can see that some transactions are dependent on each other. However, that is not all; some transactions that interact with Bitcoin’s OP-Code design can also depend on each other. A classic example of this would be that in an HTLC, either a refund transaction (released by revealing a pre-image of a hash) or payment (released when the timelock on the transaction expires) can go through. If both transactions are simultaneously in the mempool, then the transactions conflict with each other.</p>\n<h3><a name=\"ethereum-blockchain-5\" class=\"anchor\" href=\"https://ethresear.ch#ethereum-blockchain-5\"></a>Ethereum Blockchain</h3>\n<p>Ethereum inherits the double-spending transaction problem, but owing to its smart contract and gas fee design, it only partially suffers from the other type of conflict since the fee is paid based on the gas used. This causes the model to shift slightly, where the fee paid and the gas used depends on other chain transactions. Further, in the presence of searchers, some transactions are bundled such that multiple bundles contain the same transaction and thus cannot be included in the block simultaneously.</p>\n<h2><a name=\"model-6\" class=\"anchor\" href=\"https://ethresear.ch#model-6\"></a>Model</h2>\n<p>We first introduce the assumptions we make before describing the mathematical formulations.</p>\n<h4><a name=\"assumptions-7\" class=\"anchor\" href=\"https://ethresear.ch#assumptions-7\"></a>Assumptions</h4>\n<ul>\n<li>Dependent fees and gas are hard to model since we cannot have a boolean representation. Thus, we only consider “Conflicts” and touch upon “Dependency.” Conflicts are situations in which the transactions cannot occur together, and dependency is when one transaction requires another transaction to be executed before it is valid.</li>\n<li>We further ignore the optimal ordering of transactions inside a block. Ordering transactions in a particular order can lead to higher profits due to MEV, which we ignore for the same reason as above.</li>\n<li>For Ethereum, under the conditions of EIP 1559, the fee considered is the part above the base fee. Any transaction with a negative fee is ignored.</li>\n</ul>\n<p>Given these assumptions, we now model the binary allocation problem with constraints and dependencies as follows:<br>\nLet <span class=\"math\">T</span> be the set of transactions. A transaction in <span class=\"math\">T</span> is denoted by <span class=\"math\">tx_i</span>.<br>\nLet <span class=\"math\">f_i</span> denote the fee associated with a transaction <span class=\"math\">tx_i</span>.<br>\nLet <span class=\"math\">g_i</span> denote the gas associated with a transaction <span class=\"math\">t_i</span><br>\nLet <span class=\"math\">B</span> be the maximum block gas limit.</p>\n<p>Then, we have the following optimization problem<br>\nMaximise</p>\n<div class=\"math\">\n\\sum_{i\\in n} f_ix_i \n</div>\n<p>Subject to</p>\n<div class=\"math\">\n\\begin{align*}\n &amp;\\sum_{i\\in n} x_ig_i \\leq B \\\\\n &amp; x_i+x_j \\leq C_{ij}, \\forall i\\neq j \\in n\\\\\n &amp; x_j - x_i \\leq M_{ij}, \\forall i\\neq j \\in n\\\\\n &amp; x_i \\in \\{0,1\\}\n \\end{align*}\n</div>\n<p>where,</p>\n<ul>\n<li><span class=\"math\">C_{ij} = 1</span> if <span class=\"math\">t_i</span> and <span class=\"math\">t_j</span> are conflicting transactions, 2 otherwise</li>\n<li><span class=\"math\">M_{ij} = 0</span> if <span class=\"math\">t_j</span> depends on <span class=\"math\">t_i</span> and can only be allocated after <span class=\"math\">t_i</span>, 1 otherwise</li>\n</ul>\n<p>Since, in practice, it is hard for a block builder to infer the 3rd condition (without executing all of the transactions) within a limit snapshot of the transactions within their order flow pools, we can omit the 3rd constraint to simplify the problem. If the builder comes across such a transaction, it would be considered invalid.</p>\n<p>As such, we can obtain the following simplified optimization problem<br>\nMaximise</p>\n<div class=\"math\">\n\\sum_{i\\in n} f_ix_i\n</div>\n<p>Subject to</p>\n<div class=\"math\">\n\\begin{align*}\n &amp;\\sum_{i\\in n} x_ig_i \\leq BL \\\\\n &amp; x_i+x_j \\leq C_{ij}, \\forall i\\neq j \\in n\\\\\n &amp; x_i \\in \\{0,1\\}\n \\end{align*}\n</div>\n<p>where,</p>\n<ul>\n<li><span class=\"math\">C_{ij} = 1</span> if <span class=\"math\">t_i</span> and <span class=\"math\">t_j</span> are conflicting transactions, 2 otherwise</li>\n</ul>\n<h3><a name=\"reductions-8\" class=\"anchor\" href=\"https://ethresear.ch#reductions-8\"></a>Reductions</h3>\n<p>Now, we present formal arguments as to why block building is an instance of the knapsack problem and the maximum independent set problem.</p>\n<h4><a name=\"reduction-to-knapsack-9\" class=\"anchor\" href=\"https://ethresear.ch#reduction-to-knapsack-9\"></a>Reduction to knapsack</h4>\n<p>The reduction of the above problem to knapsack is easy to see. We assume no conflicts arise amongst any transactions. In that case, the problem is the same as solving a knapsack problem, with the utility as the fee paid by the transaction, space occupied as the gas used by a transaction, and finally, the block’s gas limit determines the knapsack size. Thus, the block-building problem is at least as hard as the knapsack problem.</p>\n<h4><a name=\"reduction-to-maximum-independent-set-10\" class=\"anchor\" href=\"https://ethresear.ch#reduction-to-maximum-independent-set-10\"></a>Reduction to Maximum Independent Set</h4>\n<p>If we can solve the above instance of block building problem without any constraint that limits the size of the block in polynomials, then consider the following instance where the block gas limit is set to the sum of gas of all transactions in the mempool. This would imply enough space for all the transactions in the mempool to fit in the block. This problem is now equivalent to finding the maximum weighted independent set because we can consider all transactions as vertices, and an edge exists between two vertices if the corresponding transactions conflict. The above reduction creates the instantiation of the maximum weighted independent set problem, which is again known as NP-hard.</p>\n<h2><a name=\"algorithms-for-approximate-result-11\" class=\"anchor\" href=\"https://ethresear.ch#algorithms-for-approximate-result-11\"></a>Algorithms for approximate result</h2>\n<p>As we mentioned above, block building is an NP-hard problem with reductions to both the knapsack problem and the maximum weighted independent set problem. Since we know that the maximum weighted independent set problem doesn’t have a C-approximation, this implies that the block-building problem also doesn’t have a C-approximation.</p>\n<p>As such, we devise several greedy algorithms in order to solve the block-building problem in practice.</p>\n\n<h3><a name=\"greedy-classic-gc-12\" class=\"anchor\" href=\"https://ethresear.ch#greedy-classic-gc-12\"></a>Greedy Classic (GC)</h3>\n<p>We expect today’s builders to use the first algorithm we present. It follows the most widely used knapsack greedy solution, where all objects are sorted according to the ratio of their utility to cost, and then greedily allocate space to each object until you can no longer allocate more space. Due to the added conflict constraint, the builder must check for conflict with any transaction already added to the block. Thus, the algorithm works as follows:</p>\n<p>Algorithm input: <span class=\"math\">T = \\{t_i\\}, F = \\{f_i\\}, G = \\{g_i\\}</span><br>\nAlgorithm output: An ordered block with gas used less than BL<br>\nAlgorithm description:</p>\n<pre><code class=\"lang-auto\">Sort T by corresponding F/G\nLet B  := {}\nLet BS := 0\nFor each t in T, f in F, g in G do:\n    if t has any conflict with tx in B: continue;\n    if g + BS &lt; BL: B.append(t); BS += g\nreturn B\n</code></pre>\n<p>In practice, the conflict between transactions is only known if simulated sequentially. We propose two constraints on how this conflict can be modeled.</p>\n<ul>\n<li>Two transactions <span class=\"math\">t_1</span> and <span class=\"math\">t_2</span> conflict if the transactions cannot be executed together. This can happen if some address is trying to double-spend some money it has or if two searcher bundles try to extract MEV from the transaction. We call this conflict a “Real” conflict.</li>\n<li>Two transactions <span class=\"math\">t_1</span> and <span class=\"math\">t_2</span> conflict if they interact with the same address. We call this conflict an “All” condition. These transactions do not necessarily invalidate each other. Still, we keep this as a potential conflict condition since this conflict is more straightforward to determine (constant size operation) than the other constraint (gas size operation), and thus can be helpful for builders optimizing based on the time computing is used.</li>\n</ul>\n<p>Note: In the solution simulation, we assume that <span class=\"math\">p=0.95</span> of transactions in the “All” conflict are not in the “Real” conflict.</p>\n<p>Based on the definition of conflicts, we present the two baseline greedy solutions, which we label CG All and CG Real.</p>\n<h2><a name=\"knapsack-greedy-13\" class=\"anchor\" href=\"https://ethresear.ch#knapsack-greedy-13\"></a>Knapsack Greedy</h2>\n<p>The greedy solution described above is not a good approximation solution. Looking back at the knapsack problem, we get a 1/2 approximation over the optimal solution by comparing the above classic greedy with the utility of the first object that was not allocated.</p>\n<p>The algorithm begins by running an instance of the greedy classic. It then finds the highest paying (highest f/g) transaction and adds it to the block. Adding this transaction would require modification of the block since some transactions in block (B) conflicted with this transaction, or the transaction could not be inserted due to insufficient space. Thus, we remove transactions that conflict with this new addition and then make enough space to add this transaction. After inserting the transaction, we repeat the greedy insertion until the block is again full. We repeat the above algorithm until we have seen each transaction at least once over the greedy solution.</p>\n<p>The pseudocode for the solution is as follows:</p>\n<pre><code class=\"lang-auto\">Sort T by corresponding F/G\nLet B  := {}\nLet B_f:= {}\nLet S  := {}\nLet BS := 0\nwhile S != T: \n    let t := t in T, not in S, with maximum f/g:\n    remove any transaction from B that conflicts with t.\n    remove smallest f/g txs until there is space to insert t.\n    B.append(t)\n    S.append(t)\n    For each t in T, f in F, g in G do:\n        if t has any conflict with tx in B: continue;\n        if g + BS &lt; BL: B.append(t); BS += g; S.append(t)\n    if sum(B.f) &gt; sum(B_f.f): B_f = B\n\nreturn B_f\n\n# B.f is the fee corresponding to each transaction in B\n</code></pre>\n<p>In this greedy protocol, we attempt to enforce the inclusion of a transaction every time. It is still distinct from the greedy knapsack 1/2 approximation, but it tries to replicate what was accomplished by the knapsack greedy but for all items not picked by the greedy algorithm.</p>\n<p>This solution will outperform its classic greedy counterpart since it computes maximum over all solutions, one of which is the classic greedy solution. Like the classic greedy solution, we analyze this when conflicts are “Real” and “All”.</p>\n<h2><a name=\"classic-greedy-informed-solutions-14\" class=\"anchor\" href=\"https://ethresear.ch#classic-greedy-informed-solutions-14\"></a>Classic Greedy Informed Solutions</h2>\n<p>Solving the knapsack problem is very easy compared to all known NP-Hard problems, especially the maximum independent set condition we have been imposing. Thus, we allow the builder to solve the knapsack reasonably accurately and quickly via a BLP solver. The knapsack solution gives the builder some idea about how to build the block, and then when there are conflicting transactions in the chosen block, the “later” transactions are discarded. In this solution, we run a knapsack LP solution. On the output of the LP, we sort the output based on i) f/g ratio ii) f, and finally iii) g. The way greedy works here is that the transactions are picked in the order of the metric, and whenever there is a conflict, the LP solver is recalled, but removing constraints on the already added and the conflicting transaction (<span class=\"math\">x_i</span> is set to 1 for all that have already been chosen and <span class=\"math\">x_i</span> is set to 0 for the conflicting transaction). This is repeated until the block is full.</p>\n<pre><code class=\"lang-auto\">Let B  := {}\nLet B_c:= {nil}\nLet BS := 0\nLet C  := {}\nwhile B_c != B:\n    B_c = LP.solve(sum(x.f), x.g &lt;= BL, C)\n    Sort B_c by \"heuristic\"\n    for t in B_c:\n        if t has any conflict with tx in B: \n            C.add(x_t = 0)\n            break;\n        B.append(t)\n        C.add(x_t = 1)\n\nreturn B\n\n\n# Replace \"heurestic\" by f/g for standard, \n                       f for high-value \n# Sorting is in descending order \n</code></pre>\n<p>We label these transactions as CGI-f/g and CGI-f. We only analyze the “All” conflicts for this since the time to run the algorithm is potentially higher than for the other Greedy Algorithms.</p>\n<h2><a name=\"simulation-15\" class=\"anchor\" href=\"https://ethresear.ch#simulation-15\"></a>Simulation</h2>\n<p>Due to our limited time to work on the project, we tried to replicate the transaction data synthetically instead of working with real transactions. To properly simulate Ethereum mempool transactions, we choose the following dataset:</p>\n<h3><a name=\"dataset-16\" class=\"anchor\" href=\"https://ethresear.ch#dataset-16\"></a>Dataset</h3>\n<p>We choose 2000 transactions under this distribution.</p>\n<ul>\n<li>80%: SMALL: g ~ N(24k, 3k)  f/g ~ N(16,4) - These low gas-consuming transactions have minimal smart contract interactions and thus use less gas. In almost all cases, the gas fees for these transactions are small since they are usually never a priority transaction.</li>\n<li>18%  : LARGE1: g ~ N(200k, 20K)  f/g ~ N(16,4) - These represent transactions that have a significant contract execution; however, in this case, these are still not priority transactions, since the user is okay to wait for some time for the contract execution.</li>\n<li>2%  : LARGE2: g ~ N(200k, 20K)  f/g ~ N(40,10) - These are the priority transactions. Usually, these have high gas usage since they mostly interact with, for example, DeFi contracts and want to be executed as soon as possible.</li>\n</ul>\n<p>We simulate the conflicts among these transactions by randomly choosing transactions such that each transaction has a <span class=\"math\">\\sigma</span> number of conflicts. While our preliminary results constitute the same <span class=\"math\">\\sigma</span> across all types of transactions, in practice, the larger transactions, especially the high-paying ones, would have a more significant number of conflicts since usually MEV extracting bundles would be constructed around them.</p>\n<h3><a name=\"results-17\" class=\"anchor\" href=\"https://ethresear.ch#results-17\"></a>Results</h3>\n<p>We ran our simulation over 100 blocks with the mempool created as above.</p>\n<p>When we consider <span class=\"math\">\\sigma=2</span> number of conflicts per transaction, we see the following results:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/5/45d6ba5351f45cbc8f51bd30a3637d3f1554c6f5.png\" data-download-href=\"https://ethresear.ch/uploads/default/45d6ba5351f45cbc8f51bd30a3637d3f1554c6f5\" title=\"s2feeratio\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/5/45d6ba5351f45cbc8f51bd30a3637d3f1554c6f5_2_668x499.png\" alt=\"s2feeratio\" data-base62-sha1=\"9XOZRfoJ64IFBRfHXUZ6VTgstVP\" width=\"668\" height=\"499\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/5/45d6ba5351f45cbc8f51bd30a3637d3f1554c6f5_2_668x499.png, https://ethresear.ch/uploads/default/original/3X/4/5/45d6ba5351f45cbc8f51bd30a3637d3f1554c6f5.png 1.5x, https://ethresear.ch/uploads/default/original/3X/4/5/45d6ba5351f45cbc8f51bd30a3637d3f1554c6f5.png 2x\" data-dominant-color=\"FAFAFA\"></a></div><br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/4/1430b955e746ba6faf056ac169b049c0e3dded9a.png\" data-download-href=\"https://ethresear.ch/uploads/default/1430b955e746ba6faf056ac169b049c0e3dded9a\" title=\"s2wastedgas\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/4/1430b955e746ba6faf056ac169b049c0e3dded9a_2_668x499.png\" alt=\"s2wastedgas\" data-base62-sha1=\"2SBWhsJmZp1Fs4vebFye0sw0NGG\" width=\"668\" height=\"499\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/4/1430b955e746ba6faf056ac169b049c0e3dded9a_2_668x499.png, https://ethresear.ch/uploads/default/original/3X/1/4/1430b955e746ba6faf056ac169b049c0e3dded9a.png 1.5x, https://ethresear.ch/uploads/default/original/3X/1/4/1430b955e746ba6faf056ac169b049c0e3dded9a.png 2x\" data-dominant-color=\"FBFBFB\"></a></div><p></p>\n<p>Increasing the number of conflicts each transaction had increases the problem’s difficulty. Therefore, the various greedy algorithms have a larger separation in performance:</p>\n<p>For <span class=\"math\">\\sigma = 10</span>,<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/e/ae043667cfb292234612d06e14e402d2cc86b268.png\" data-download-href=\"https://ethresear.ch/uploads/default/ae043667cfb292234612d06e14e402d2cc86b268\" title=\"s10feeratio\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/e/ae043667cfb292234612d06e14e402d2cc86b268_2_668x499.png\" alt=\"s10feeratio\" data-base62-sha1=\"oPq6waJAGejo4lr3RKXQxg5dS5O\" width=\"668\" height=\"499\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/e/ae043667cfb292234612d06e14e402d2cc86b268_2_668x499.png, https://ethresear.ch/uploads/default/original/3X/a/e/ae043667cfb292234612d06e14e402d2cc86b268.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/e/ae043667cfb292234612d06e14e402d2cc86b268.png 2x\" data-dominant-color=\"FAFAFA\"></a></div><p></p>\n<p>For <span class=\"math\">\\sigma = 20</span>,<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/9/79e0d8ad31f56fcb617c858775285e5e6b5b28fb.png\" data-download-href=\"https://ethresear.ch/uploads/default/79e0d8ad31f56fcb617c858775285e5e6b5b28fb\" title=\"s20feeratio\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/9/79e0d8ad31f56fcb617c858775285e5e6b5b28fb_2_668x499.png\" alt=\"s20feeratio\" data-base62-sha1=\"hobvjBfGZZzHEtGsTnKrV4TsMTp\" width=\"668\" height=\"499\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/9/79e0d8ad31f56fcb617c858775285e5e6b5b28fb_2_668x499.png, https://ethresear.ch/uploads/default/original/3X/7/9/79e0d8ad31f56fcb617c858775285e5e6b5b28fb.png 1.5x, https://ethresear.ch/uploads/default/original/3X/7/9/79e0d8ad31f56fcb617c858775285e5e6b5b28fb.png 2x\" data-dominant-color=\"FAFAFA\"></a></div><p></p>\n<p>For <span class=\"math\">\\sigma = 40</span>,<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/3/e333c84dc6daa57f54481113545d081b8bb2af91.png\" data-download-href=\"https://ethresear.ch/uploads/default/e333c84dc6daa57f54481113545d081b8bb2af91\" title=\"s40feeratio\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/3/e333c84dc6daa57f54481113545d081b8bb2af91_2_668x499.png\" alt=\"s40feeratio\" data-base62-sha1=\"wpVkpfUNvc4jsqwY0C4zvIipvFf\" width=\"668\" height=\"499\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/3/e333c84dc6daa57f54481113545d081b8bb2af91_2_668x499.png, https://ethresear.ch/uploads/default/original/3X/e/3/e333c84dc6daa57f54481113545d081b8bb2af91.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/3/e333c84dc6daa57f54481113545d081b8bb2af91.png 2x\" data-dominant-color=\"FBFAFA\"></a></div><p></p>\n<h2><a name=\"future-research-direction-18\" class=\"anchor\" href=\"https://ethresear.ch#future-research-direction-18\"></a>Future Research Direction</h2>\n<p>Based on our results, solving the block-building problem is an NP-Hard problem, and as long as conflicts exist amongst the transactions, it remains a complex problem.</p>\n<p>However, this does not mean that all hope is lost. The block-building problem may have more potential than the Maximum Independent Set problem. Combining the space of Knapsack and Maximum Independent Set gives us a smaller search space to find a satisfactory approximate solution for the issue at hand.</p>\n<p>Further, for Ethereum bundles from searchers, if <span class=\"math\">tx_i</span> and <span class=\"math\">tx_j</span> conflict, as well as <span class=\"math\">tx_j</span> and <span class=\"math\">tx_k</span> conflict, then there is a high likelihood that <span class=\"math\">tx_i</span> and <span class=\"math\">tx_k</span> also conflict. This eases the constraints on the solution since, amongst an all-2-all graph of transactions, for MIS, you only need to pick the transaction with the highest utility (also satisfying knapsack).</p>\n<p>Another thing to note is that our algorithms can inform how block builders construct blocks in practice. Notably, the Classical Greedy Informed algorithm, in which we sort the transactions by highest fee, is closest to the optimal solution.</p>\n<p>That being said, the most exciting extension to this research would be modeling the block-building problem as a job sequencing problem instead and somehow estimating how utility (fee+MEV) from one transaction affects the utility of other transactions sequenced after the first transaction.</p>\n<p>On that note, we invite potential collaborators to explore new ideas for building blocks that maximize the builders’ utility.</p>\n            <p><small>7 posts - 5 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/block-building-is-not-just-knapsack/19871\">Read full topic</a></p>","link":"https://ethresear.ch/t/block-building-is-not-just-knapsack/19871","pubDate":"Wed, 19 Jun 2024 17:35:36 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19871"},"source":{"@url":"https://ethresear.ch/t/block-building-is-not-just-knapsack/19871.rss","#text":"Block Building is not just knapsack!"}},{"title":"Fork-Choice enforced Inclusion Lists (FOCIL): A simple committee-based inclusion list proposal","dc:creator":"soispoke","category":"Block proposer","description":"<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/3/639a5b7de796701a13a5759e8f5a1fe393f067f3.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/639a5b7de796701a13a5759e8f5a1fe393f067f3\" title=\"DALL·E 2024-06-05 14.58.08 - A highly realistic illustration of a rock with the Ethereum symbol fossilized into it, set in a cave. The rock should appear weathered and ancient, wi\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/3/639a5b7de796701a13a5759e8f5a1fe393f067f3_2_690x394.jpeg\" alt=\"DALL·E 2024-06-05 14.58.08 - A highly realistic illustration of a rock with the Ethereum symbol fossilized into it, set in a cave. The rock should appear weathered and ancient, wi\" data-base62-sha1=\"ed7YGldSP4XNCYdkHfdb2nHA1hx\" width=\"690\" height=\"394\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/3/639a5b7de796701a13a5759e8f5a1fe393f067f3_2_690x394.jpeg, https://ethresear.ch/uploads/default/optimized/3X/6/3/639a5b7de796701a13a5759e8f5a1fe393f067f3_2_1035x591.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/6/3/639a5b7de796701a13a5759e8f5a1fe393f067f3_2_1380x788.jpeg 2x\" data-dominant-color=\"685748\"></a></div><br>\n<em>^focil =&gt; fossil =&gt; protocol ossification</em><p></p>\n<p><em>by <a href=\"https://ethresear.ch/u/soispoke/summary\">Thomas</a>, <a href=\"https://ethresear.ch/u/fradamt/summary\">Barnabé</a>, <a href=\"https://ethresear.ch/u/fradamt/summary\">Francesco</a> and <a href=\"https://ethresear.ch/u/julian/summary\">Julian</a></em> - June 19th, 2024</p>\n<p><em>This design came together during a small, week long, in-person gathering in Berlin with RIG and friends to discuss censorship resistance, issuance, and Attester-Proposer-Builder-Consensus-Execution-[insert here] Separation.</em></p>\n<p><em>Thanks to Luca, Terence, Toni, Ansgar, Alex, Caspar and Anders for discussions, feedback and comments on this proposal.</em></p>\n<h1><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a><strong>tldr</strong></h1>\n<p>In this post, we introduce Fork-Choice enforced Inclusion Lists (FOCIL), a simple committee-based IL design.</p>\n<p>FOCIL is built in three simple steps:</p>\n<ol>\n<li>Each slot, a set of validators is selected to become <strong>IL committee members.</strong> Each member gossips one <em>local inclusion list</em> according to their subjective view of the mempool.</li>\n<li><strong>The block proposer</strong> collects and aggregates available local inclusion lists into a concise <em>aggregate</em>, which is included in its block.</li>\n<li><strong>The attesters</strong> evaluate the quality of the <em>aggregate</em> given their own view of the gossiped local lists to ensure the block proposer accurately reports the available local lists.</li>\n</ol>\n<p>This design ensures a robust and reliable mechanism to uphold Ethereum’s censorship resistance and <a href=\"https://ethresear.ch/t/uncrowdable-inclusion-lists-the-tension-between-chain-neutrality-preconfirmations-and-proposer-commitments/19372\">chain neutrality</a> properties, by guaranteeing timely transaction inclusion.</p>\n<h1><a name=\"introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#introduction-2\"></a>Introduction</h1>\n<p>In an effort to shield the Ethereum validator set from centralizing forces, the right to build blocks has been auctioned off to specialized entities known as builders. Over the past year, this has resulted in a few sophisticated builders dominating the network’s block production. Economies of scale have further entrenched their position, making it increasingly difficult for new entrants to gain significant market share. A direct consequence of oligopolistic block production is a deterioration of the network’s (weak) censorship resistance properties. Today, <a href=\"https://censorship.pics/\" rel=\"noopener nofollow ugc\">two of the top three builders</a> are actively filtering out transactions interacting with sanctioned addresses from their blocks. In contrast, 90% of the <a href=\"https://www.ethernodes.org/countries\" rel=\"noopener nofollow ugc\">more decentralized and heterogeneous validator set</a> is not engaging in censorship.</p>\n<p>This has driven <a href=\"https://github.com/michaelneuder/mev-bibliography?tab=readme-ov-file#censorship-resistance\" rel=\"noopener nofollow ugc\">research</a> toward ways that allow validators to impose constraints on builders by force-including transactions in their blocks. These efforts recently culminated in the first practical implementation of forward <span class=\"math\">\\text{ILs}</span> (<span class=\"math\">\\text{fILs}</span>) being considered for inclusion in the upcoming Pectra fork (see <a href=\"https://ethresear.ch/t/no-free-lunch-a-new-inclusion-list-design/16389\">design</a>, <a href=\"https://eips.ethereum.org/EIPS/eip-7547\" rel=\"noopener nofollow ugc\">EIP</a>, and <a href=\"https://notes.ethereum.org/@mikeneuder/il-spec-overview\" rel=\"noopener nofollow ugc\">specs</a> <a href=\"https://gist.github.com/michaelneuder/ba32e608c75d48719a7ecba29ec3d64b\" rel=\"noopener nofollow ugc\">here</a>). However, some concerns were raised about the specific mechanism proposed in <a href=\"https://eips.ethereum.org/EIPS/eip-7547\" rel=\"noopener nofollow ugc\">EIP-7547</a>, leading to its rejection.</p>\n<p>Here, we introduce FOCIL, a simple committee-based design improving upon previous IL mechanisms (<a href=\"https://ethresear.ch/t/no-free-lunch-a-new-inclusion-list-design/16389\">Forward ILs</a>, <a href=\"https://ethresear.ch/t/the-more-the-less-censored-introducing-committee-enforced-inclusion-sets-comis-on-ethereum/18835\">COMIS</a>) or co-created blocks (<a href=\"https://ethresear.ch/t/concurrent-block-proposers-in-ethereum/18777\">CBP</a>) and addressing issues related to <a href=\"https://ethresear.ch/t/fun-and-games-with-inclusion-lists/16557\">bribing/extortion attacks</a>, IL equivocation, <a href=\"https://ethereum.org/en/roadmap/account-abstraction/\" rel=\"noopener nofollow ugc\">account abstraction</a> (AA) and incentive incompatibilities. Note also Vitalik’s recent proposal “<a href=\"https://ethresear.ch/t/one-bit-per-attester-inclusion-lists/19797\">One-bit-per-attester inclusion lists</a>”, where the committee chosen to build the list is essentially the whole set of attesters.</p>\n<h1><a name=\"design-3\" class=\"anchor\" href=\"https://ethresear.ch#design-3\"></a><strong>Design</strong></h1>\n<p>In this section, we introduce the core properties of the FOCIL mechanism (see <strong>Figure 1.</strong>).</p>\n<h2><a name=\"high-level-overview-4\" class=\"anchor\" href=\"https://ethresear.ch#high-level-overview-4\"></a><strong>High-level overview</strong></h2>\n<p>Each slot, a set of validators is randomly selected to become part of an inclusion list (<span class=\"math\">\\text{IL}</span>) committee. <span class=\"math\">\\text{IL}</span> committee members are responsible for creating local inclusion lists (<span class=\"math\">\\text{IL}_\\text{local}</span>) of transactions pending in the public mempool. Local <span class=\"math\">\\text{ILs}</span> are then broadcast over the global topic, and the block producer must include a canonical aggregate (<span class=\"math\">\\text{IL}_\\text{agg}</span>) of transactions from the collected local <span class=\"math\">\\text{ILs}</span> in its block <span class=\"math\">B</span>. The quality of <span class=\"math\">\\text{IL}_\\text{agg}</span> is checked by attesters, and conditions the validity of block <span class=\"math\">B</span>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/e/bedfe43a4319b8ef24f99db6089793aeda7dc3fb.png\" data-download-href=\"https://ethresear.ch/uploads/default/bedfe43a4319b8ef24f99db6089793aeda7dc3fb\" title=\"Screenshot 2024-06-04 at 15.58.51\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/e/bedfe43a4319b8ef24f99db6089793aeda7dc3fb_2_690x375.png\" alt=\"Screenshot 2024-06-04 at 15.58.51\" data-base62-sha1=\"reyp5PiPfNB4HQXLPv1tvJmO8uD\" width=\"690\" height=\"375\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/e/bedfe43a4319b8ef24f99db6089793aeda7dc3fb_2_690x375.png, https://ethresear.ch/uploads/default/optimized/3X/b/e/bedfe43a4319b8ef24f99db6089793aeda7dc3fb_2_1035x562.png 1.5x, https://ethresear.ch/uploads/default/original/3X/b/e/bedfe43a4319b8ef24f99db6089793aeda7dc3fb.png 2x\" data-dominant-color=\"F0EFED\"></a></div><p></p>\n<blockquote>\n<p><strong>Figure 1.</strong> Diagram illustrating the FOCIL mechanism.</p>\n</blockquote>\n<h2><a name=\"mechanism-5\" class=\"anchor\" href=\"https://ethresear.ch#mechanism-5\"></a><strong>Mechanism</strong></h2>\n<ul>\n<li><strong>Validator Selection and Local Inclusion Lists</strong>\n<ul>\n<li>A set of validators is selected from the beacon committee to become <span class=\"math\">\\text{IL}</span> committee members for slot <span class=\"math\">n</span>. This set is denoted as <span class=\"math\">\\text{IL}_\\text{committee}(n) = \\{ 1, \\dots, m \\}</span>, where <span class=\"math\">m</span> is the number of <span class=\"math\">\\text{IL}</span> committee members.</li>\n<li>Each <span class=\"math\">\\text{IL}</span> committee member <span class=\"math\">i \\in \\text{IL}_\\text{committee}(n)</span> releases a local <span class=\"math\">\\text{IL}</span>, resulting in a set of local <span class=\"math\">\\text{ILs}</span> for slot <span class=\"math\">n</span>, defined as <span class=\"math\">\\text{IL}_\\text{local}(n) = \\{ \\text{IL}_1, \\dots, \\text{IL}_m \\}</span>.</li>\n<li>Each local <span class=\"math\">\\text{IL}_i</span> contains transactions: <span class=\"math\">\\text{IL}_i = \\{ \\text{tx}^1_i, \\dots, \\text{tx}^{j_i}_i \\}</span>, where each <span class=\"math\">\\text{tx}</span> is represented as  <span class=\"math\">\\text{tx} = (\\text{tx}[\\text{From}], \\text{tx}[\\text{Gas Limit}])</span>, and  <span class=\"math\">j_i</span> indicates the number of transactions in <span class=\"math\">\\text{IL}_i</span>. The <code>From</code> field represents the sender’s address, and the <code>Gas Limit</code> field represents the maximum gas consumed by a transaction. This is used to check whether a transaction can be included in a block given the <a href=\"https://ethresear.ch/t/unconditional-inclusion-lists/18500\">conditional</a> IL property.</li>\n</ul>\n</li>\n<li><strong>Block Producer’s Role</strong>\n<ul>\n<li>The block producer of slot <span class=\"math\">n</span>, denoted <span class=\"math\">\\text{BP}(n)</span>, must include an <span class=\"math\">\\text{IL}</span> aggregate denoted <span class=\"math\">\\text{IL}_\\text{agg}</span> and a payload in their block  <span class=\"math\">B = (B[\\text{IL}_\\text{agg}], B[\\text{payload}])</span>.</li>\n<li><span class=\"math\">\\text{IL}_\\text{agg}</span> consists of transactions: <span class=\"math\">\\text{IL}_\\text{agg} = \\{ \\text{tx}^1_\\text{agg}, \\dots, \\text{tx}^{t_\\text{agg}}_\\text{agg} \\}</span> where each transaction <span class=\"math\">\\text{tx}_\\text{agg}</span> is defined as <span class=\"math\">(\\text{tx}_\\text{agg}[\\text{tx}], \\text{tx}_\\text{agg}[\\text{bitlist}])</span>, and the <span class=\"math\">\\text{payload}</span> must include transactions present in the <span class=\"math\">\\text{IL}_\\text{agg}</span>.</li>\n<li>The bitlist <span class=\"math\">\\text{tx}_\\text{agg}[\\text{bitlist}] \\in \\{0, 1\\}^m</span> indicates which local $\\text{IL}$s included a given transaction.</li>\n<li>The function <span class=\"math\">\\text{Agg}</span> takes the set of available local ILs <span class=\"math\">\\text{IL}_\\text{local}(n)</span> and outputs a “canonical” aggregate. The proposer aggregate <span class=\"math\">\\text{IL}_\\text{agg}^\\text{proposer}</span> is included in block <span class=\"math\">B</span>, and each attester evaluates it quality by comparing it against its own <span class=\"math\">\\text{IL}_\\text{agg}^\\text{attester}</span>, using the function <span class=\"math\">\\text{Eval}(\\text{IL}_\\text{agg}^\\text{attester}, \\text{IL}_\\text{agg}^\\text{proposer}, Δ) \\in \\{ \\text{True}, \\text{False} \\}</span>.</li>\n</ul>\n</li>\n<li><strong>Attesters’ Role</strong>\n<ul>\n<li>Attesters for slot <span class=\"math\">n</span> receive the block <span class=\"math\">B</span> and apply a function <span class=\"math\">\\text{Valid}(B)</span> to determine the block validity.</li>\n<li><span class=\"math\">\\text{Valid}</span> encodes the block validity according to the result of <span class=\"math\">\\text{Eval}</span>, as well as core IL properties such as <a href=\"https://ethresear.ch/t/unconditional-inclusion-lists/18500\">conditional vs. unconditional</a>.</li>\n<li>Here are some scenarios to illustrate <span class=\"math\">\\text{IL}</span>-dependent validity conditions:\n<ul>\n<li>If local <span class=\"math\">\\text{ILs}</span> are made available before deadline <span class=\"math\">d</span>, but the proposer doesn’t include an <span class=\"math\">\\text{IL}_\\text{agg}^\\text{proposer}</span>, block <span class=\"math\">B</span> is considered invalid.</li>\n<li>If no local <span class=\"math\">\\text{ILs}</span> are made available before deadline <span class=\"math\">d</span>, and the proposer doesn’t include an <span class=\"math\">\\text{IL}_\\text{agg}^\\text{proposer}</span>, block <span class=\"math\">B</span> is considered valid.</li>\n<li>If block <span class=\"math\">B</span> is full, local $\\text{IL}$s were available before <span class=\"math\">d</span>, and the proposer doesn’t include an <span class=\"math\">\\text{IL}_\\text{agg}^\\text{proposer}</span>, block <span class=\"math\">B</span> is still considered valid.</li>\n<li>If <span class=\"math\">\\text{IL}_\\text{agg}^\\text{proposer}</span> doesn’t overlap with most of attesters’ <span class=\"math\">\\text{IL}_\\text{agg}^\\text{attester}</span> according to <span class=\"math\">\\text{Eval}</span>, block <span class=\"math\">B</span> is considered invalid.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>The core FOCIL mechanism could be defined as:</strong></p>\n<div class=\"math\">\n\\mathcal{M}_\\text{FOCIL}= (\\text{Agg}, \\text{Eval}, \\text{Valid})\n</div>\n<h2><a name=\"timeline-6\" class=\"anchor\" href=\"https://ethresear.ch#timeline-6\"></a>Timeline</h2>\n<p>The specific timing is given here as an example, but more research is required to figure out which numbers make sense.</p>\n<ul>\n<li><strong>Slot</strong> <span class=\"math\">n-1</span><strong>,</strong> <span class=\"math\">t = 6</span><strong>:</strong> The <span class=\"math\">\\text{IL}</span> committee releases their local <span class=\"math\">\\text{ILs}</span>, knowing the contents of block <span class=\"math\">n-1</span>.</li>\n<li><strong>Slot</strong> <span class=\"math\">n-1</span><strong>,</strong> <span class=\"math\">t=9</span><strong>:</strong> There is a local <span class=\"math\">\\text{IL}</span> freeze deadline <span class=\"math\">d</span> after which everyone locks their view of the observed local <span class=\"math\">\\text{ILs}</span>. The proposer broadcast the <span class=\"math\">\\text{IL}_\\text{agg}</span> over the global topic.</li>\n<li><strong>Slot</strong> <span class=\"math\">n</span><strong>,</strong> <span class=\"math\">t=0</span><strong>:</strong> The block producer of slot <span class=\"math\">n</span> releases their block <span class=\"math\">B</span> which contains both the payload and aggregated <span class=\"math\">\\text{IL}_\\text{agg}</span>.</li>\n<li><strong>Slot</strong> <span class=\"math\">n</span><strong>,</strong> <span class=\"math\">t=4</span><strong>:</strong> The attesters of slot <span class=\"math\">n</span> vote on block <span class=\"math\">B</span>, deciding whether <span class=\"math\">\\text{IL}_\\text{agg}</span> is “good enough” by comparing the result of computing the <span class=\"math\">\\text{Agg}</span> function over their local view of available local <span class=\"math\">\\text{ILs}</span> (applying <span class=\"math\">\\text{Eval}</span>) and checking if block <span class=\"math\">B</span> is <span class=\"math\">\\text{Valid}</span>.</li>\n</ul>\n<h2><a name=\"aggregation-evaluation-and-validation-functions-7\" class=\"anchor\" href=\"https://ethresear.ch#aggregation-evaluation-and-validation-functions-7\"></a><strong>Aggregation, Evaluation and Validation Functions</strong></h2>\n<p>As mentioned in the mechanism section, FOCIL relies on three core functions. Each of these needs to be specified to ensure the mechanism fulfils its purpose.</p>\n<ul>\n<li>\n<p><strong>The <span class=\"math\">\\text{Agg}</span> function</strong> is probably the most straightforward to define: Transactions from all collected local <span class=\"math\">\\text{ILs}</span> should be deterministically aggregated and deduplicated to construct <span class=\"math\">\\text{IL}_\\text{agg}</span>. We let:</p>\n<ul>\n<li><span class=\"math\">\\text{IL}_\\text{local} = \\{\\text{IL}_1, \\text{IL}_2, \\ldots, \\text{IL}_m\\}</span> be the set of local inclusion lists collected from committee members <span class=\"math\">m</span>.</li>\n<li>Each <span class=\"math\">\\text{IL}_i = \\{\\text{tx}_i^1, \\text{tx}_i^2, \\ldots, \\text{tx}_i^{t_i}\\}</span><br>\nbe the transactions in the local inclusion list of the <span class=\"math\">i</span>-th committee member.</li>\n<li>Each transaction <span class=\"math\">\\text{tx}</span> be defined by <span class=\"math\">(\\text{hash}, \\text{sender}, \\text{nonce})</span></li>\n</ul>\n<p><span class=\"math\">\\text{Agg}(\\text{IL}_\\text{local})</span>  can be thus defined as:</p>\n<div class=\"math\">\n\\text{Agg}(\\text{IL}_\\text{local}) = {\\text{tx} | \\text{tx} \\in \\bigcup_{i \\in m} \\text{tx}_{i} }\n</div>\n</li>\n<li>\n<p><strong>The <span class=\"math\">\\text{Eval}</span> function</strong> is used by each slot <span class=\"math\">n</span> attester to assess the quality of the <span class=\"math\">\\text{IL}_\\text{agg}</span> included in block <span class=\"math\">B</span>. Each attester calculates the <span class=\"math\">\\text{Agg}</span> function over all local <span class=\"math\">\\text{ILs}</span> they have observed in their view and then compares their generated <span class=\"math\">\\text{IL}_\\text{agg}^\\text{attester}</span> to the one included by the proposer <span class=\"math\">\\text{IL}_\\text{agg}^\\text{proposer}</span>. The <strong><span class=\"math\">\\text{Eval}</span></strong> function can then be defined so that the proposer’s <span class=\"math\">IL_{\\text{agg}}^{\\text{proposer}}</span> is valid if it includes a sufficient proportion of transactions observed by the attesters, as defined by the parameter <span class=\"math\">Δ</span>:</p>\n<div class=\"math\">\n\\text{Eval}(IL_{\\text{agg}}^{\\text{attester}}, IL_{\\text{agg}}^{\\text{proposer}}, \\Delta) = \n\\begin{cases} \n\\text{True} &amp; \\text{if } \\frac{|IL_{\\text{agg}}^{\\text{attester}} \\cap IL_{\\text{agg}}^{\\text{proposer}}|}{|IL_{\\text{agg}}^{\\text{attester}}|} \\geq \\Delta \\\\\n\\text{False} &amp; \\text{otherwise}\n\\end{cases}\n</div>\n<p><em>Note that the <span class=\"math\">\\text{Eval}</span> function, and especially its parameter <span class=\"math\">Δ</span>, will determine the trade-off between <strong>(1) the quality</strong> of the <span class=\"math\">\\text{IL}_\\text{agg}^\\text{proposer}</span> and the agency we are willing to give to proposers, and <strong>(2)</strong> <strong>liveness</strong>, as we might see an increase in missed slots if the criteria are set too strictly.</em></p>\n</li>\n<li>\n<p><strong>The <span class=\"math\">\\text{Valid}</span> function</strong> encodes whether the  <span class=\"math\">\\text{IL}_\\text{agg}</span> conforms to pre-defined core <span class=\"math\">\\text{IL}</span> properties, such as:</p>\n<ul>\n<li><strong>Conditional vs. Unconditional</strong>: Should the proposer include as many <span class=\"math\">\\text{IL}</span> transactions in the block as possible as long as there is space left, or is there dedicated block space reserved for <span class=\"math\">\\text{IL}</span> transactions?</li>\n<li><strong>Where-in-block</strong>: Where should <span class=\"math\">\\text{IL}</span> transactions be included in the block? Should they be placed anywhere, at the top of the block, or at the end of the block?</li>\n<li><strong>Expiry</strong>: How long do transactions remain in the <span class=\"math\">\\text{IL}</span> once they have been included? What happens if a slot is skipped?</li>\n</ul>\n</li>\n</ul>\n<h2><a name=\"more-rules-8\" class=\"anchor\" href=\"https://ethresear.ch#more-rules-8\"></a><strong>More rules</strong></h2>\n<p>In the following section, we introduce other rules that could be added to the core mechanism to specify:</p>\n<ul>\n<li>How users should pay for having their transactions included (<span class=\"math\">\\text{Payment}</span>)</li>\n<li>How rewards can be distributed across FOCIL participants (<span class=\"math\">\\text{Reward}</span>)</li>\n<li>How local <span class=\"math\">\\text{ILs}</span> are constructed (<strong><span class=\"math\">\\text{Inclusion}</span></strong>)</li>\n<li>Interactions between <span class=\"math\">\\text{IL}</span> and payload transactions (<span class=\"math\">\\text{Priority}</span>).</li>\n</ul>\n<h3><a name=\"user-bidding-textpayment-and-textreward-rules-9\" class=\"anchor\" href=\"https://ethresear.ch#user-bidding-textpayment-and-textreward-rules-9\"></a><strong>User Bidding,</strong> <span class=\"math\">\\text{Payment}</span> <strong>and</strong> <span class=\"math\">\\text{Reward}</span> <strong>rules</strong></h3>\n<ul>\n<li>Users place bids based on the value they assign to having their transactions included in block <span class=\"math\">B</span>. They need to take into consideration the FOCIL mechanism <span class=\"math\">\\mathcal{M}_\\text{FOCIL}</span>, but also how the <a href=\"https://eips.ethereum.org/EIPS/eip-1559\" rel=\"noopener nofollow ugc\">EIP-1559</a> mechanism works to set their base fees, denoted <span class=\"math\">\\mathcal{M}_\\text{1559}</span>. For instance, a user <span class=\"math\">t</span> makes a bid <span class=\"math\">b^t(v^t, \\mathcal{M}_\\text{FOCIL},\\mathcal{M}_\\text{1559}) = (\\delta^t, f^t)</span>, where <span class=\"math\">\\delta^t</span> is the maximum priority fee and <span class=\"math\">f^t</span> is the maximum total fee (i.e., base fee <span class=\"math\">r</span> + priority fee <span class=\"math\">\\delta^t</span>).</li>\n<li>The vector of bids from all users is denoted as <span class=\"math\">\\mathbf{b} = (b^1, b^2, \\dots, b^T)</span>, where each <span class=\"math\">b^t</span> represents the bid from user <span class=\"math\">t</span>.</li>\n<li>The <span class=\"math\">\\text{Payment}</span> rule <span class=\"math\">p(\\mathbf{b}) = (p_0(\\mathbf{b}), p_1(\\mathbf{b}), \\dots, p_t(\\mathbf{b}), \\dots, p_m(\\mathbf{b}))</span> ensures that users pay no more than their priority fee <span class=\"math\">\\hat{\\delta}^t = \\min(\\delta^t, f^t - r)</span>. Here, <span class=\"math\">p_0(\\mathbf{b}</span>) represents the payment to the block producer, and <span class=\"math\">p_t(\\mathbf{b}</span>) represents the payment made by user <span class=\"math\">t</span> to all other <span class=\"math\">\\text{IL}</span> committee members, where the set of users has size <span class=\"math\">m</span> and the block producer is indexed by 0.</li>\n</ul>\n<p>The <span class=\"math\">\\text{Payment}</span> rule defined above is meant to give a general view of how the value paid by users’ transactions can be redistributed across FOCIL participants (e.g., <span class=\"math\">\\text{IL}</span> committee members, block producer) to incentivize behavior that is considered good for the network, in this case preserving its censorship-resistant properties. Incentivizing <span class=\"math\">\\text{IL}</span> committee members for including transactions strengthens the robustness of the mechanism by increasing the <a href=\"https://arxiv.org/abs/2301.13321\" rel=\"noopener nofollow ugc\">cost of censorship</a>, or the amount a censoring party would have to pay for <span class=\"math\">\\text{IL}</span> committee members to exclude transactions from their local <span class=\"math\">\\text{ILs}</span>. Delving into the specifics of how the builder and <span class=\"math\">\\text{IL}</span> committee members should be rewarded is beyond the scope of this post as distributing rewards in an incentive-compatible way, especially during congestion, gets quite complex.</p>\n<p>However, here are three high-level options to consider:</p>\n<ul>\n<li><strong>Option 1</strong>: All transaction priority fees go to the builder, and <span class=\"math\">\\text{IL}</span> committee members are just not incentivized to include transactions in their local <span class=\"math\">\\text{ILs}</span>. This simple option doesn’t require any changes to the existing fee market, but entirely relies on altruism from <span class=\"math\">\\text{IL}</span> committee members. We could even consider an opt-in version of FOCIL, where validators can choose to be part of a list that may be elected to become <span class=\"math\">\\text{IL}</span> committee members and participate in building <span class=\"math\">\\text{ILs}</span> altruistically. However, it wouldn’t increase the cost of censorship nor would it make it very appealing for validators to participate in the mechanism. This could also lead to out-of-band payments from users wanted to have their transactions included in local <span class=\"math\">\\text{ILs}</span>.</li>\n<li><strong>Option 2</strong>: Priority fees from transactions included in the block are given to the <span class=\"math\">\\text{IL}</span> committee members. To distribute rewards among members, we could implement a weighted incentive system by defining a <span class=\"math\">\\text{Reward}</span> rule to calculate and distribute rewards for each member, considering the quantity (i.e., count) and uniqueness of transactions included in their local lists (see Appendix 1 of the <a href=\"https://ethresear.ch/t/the-more-the-less-censored-introducing-committee-enforced-inclusion-sets-comis-on-ethereum/18835\">COMIS post</a> for more details). If transactions are not part of the <span class=\"math\">\\text{IL}_\\text{agg}</span>, priority fees go to the builder. However, this approach could be problematic during congestion periods with the conditional <span class=\"math\">\\text{IL}</span> property, as builders might be incentivized to fill the block with transactions that are not in the <span class=\"math\">\\text{IL}_\\text{agg}</span>, even if <span class=\"math\">\\text{IL}</span> transactions have higher priority fees. To address this, we might need to design a mechanism that redirects priority fees to the builder during congestion. However, the practical implementation and potential secondary effects need further investigation.</li>\n<li><strong>Option 3</strong>: A third option is to introduce a new, separate inclusion fee that always go to IL committee members while priority fees always go to the builder. This would likely address the concerns of <strong>Option 2</strong> related to congestion but would introduce a whole other variable that users need to set. A useful distinction between Option 2 and Option 3 is whether the complexity is pushed upon the IL committee members or the end users.</li>\n</ul>\n<p>Another interesting question to explore is the impact of fee distribution across <span class=\"math\">\\text{IL}</span> committee members on mechanisms like <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590/4\">MEV-burn</a>. <strong>Options 2</strong> and <strong>3</strong> would effectively “reduce the burn” and produce a similar effect as <a href=\"https://ethresear.ch/t/committee-driven-mev-smoothing/10408\">MEV-smoothing</a>, but on a smaller scale limited to the size of the <span class=\"math\">\\text{IL}</span> committee (h/t Anders).</p>\n<h3><a name=\"textinclusion-rule-10\" class=\"anchor\" href=\"https://ethresear.ch#textinclusion-rule-10\"></a><span class=\"math\">\\text{Inclusion}</span> <strong>Rule</strong></h3>\n<p>The <span class=\"math\">\\text{Inclusion}</span> rule determines the criteria according to which <span class=\"math\">\\text{IL}</span> committee members should build their local <span class=\"math\">\\text{ILs}</span>. In FOCIL, we define it with the premise that IL committee members will try to maximize their rewards. Assuming <strong>Option 2</strong> for the <span class=\"math\">\\text{Payment}</span> rule, the <span class=\"math\">\\text{Inclusion}</span> rule could be to include all transactions seen in the public mempool, ordered by priority fees.</p>\n<h3><a name=\"textpriority-rule-11\" class=\"anchor\" href=\"https://ethresear.ch#textpriority-rule-11\"></a><span class=\"math\">\\text{Priority}</span> <strong>Rule</strong></h3>\n<p>We assume the block will be made of two components: a payload and an  <span class=\"math\">\\text{IL}_\\text{agg}</span> included by the proposer to impose constraints on transactions that need to be included in the builder’s payload. Imposing constraints to the block payload via the  <span class=\"math\">\\text{IL}_\\text{agg}</span> thus requires a priority rule to determine what happens during congestion. Generally, the priority rule in FOCIL states that transactions in the  <span class=\"math\">\\text{IL}_\\text{agg}</span> might be excluded if the block can be filled with the builder’s payload transactions. In other words, the block will still be valid even if some transactions in the <span class=\"math\">\\text{IL}_\\text{agg}</span> are not included, as long as the block is completely full (i.e., the <code>30 M</code> gas limit is reached).</p>\n<p><em>Note: Rules are not set in stone and should be interpreted as candidates for FOCIL. Rules also don’t necessarily have to be made explicit. For instance, we can define the <span class=\"math\">\\text{Reward}</span> such that the dominant strategy of the <span class=\"math\">\\text{IL}</span> committee is to adhere to the <span class=\"math\">\\text{Inclusion}</span> rule without any kind of enforcement by the protocol.</em></p>\n<h2><a name=\"improvements-and-mitigations-12\" class=\"anchor\" href=\"https://ethresear.ch#improvements-and-mitigations-12\"></a>Improvements and Mitigations</h2>\n<p>In this section, we discuss improvements over previous  <span class=\"math\">\\text{IL}</span> proposals, focusing on simplification and addressing specific implementation concerns.</p>\n<h3><a name=\"commitment-attacks-13\" class=\"anchor\" href=\"https://ethresear.ch#commitment-attacks-13\"></a><strong>Commitment attacks</strong></h3>\n<p>One of the main differences between FOCIL and the forward IL (<span class=\"math\">\\text{fIL}</span>) design proposed in <a href=\"https://eips.ethereum.org/EIPS/eip-7547\" rel=\"noopener nofollow ugc\">EIP-7547</a> is that FOCIL relies on a committee of multiple validators, rather than a single proposer, to construct and broadcast the <span class=\"math\">\\text{IL}</span>. This approach imposes stricter constraints on creating a “good” aggregate list and significantly reduces the surface for bribery attacks. Instead of targeting a single party to influence the exclusion of transactions from the <span class=\"math\">\\text{IL}</span>, attackers would now need to bribe an entire <span class=\"math\">\\text{IL}</span> committee (e.g., <code>256</code> members), substantially increasing the cost of such attacks. Previous designs (e.g., <a href=\"https://ethresear.ch/t/the-more-the-less-censored-introducing-committee-enforced-inclusion-sets-comis-on-ethereum/18835\">COMIS</a> and <a href=\"https://ethresear.ch/t/anonymous-inclusion-lists-anon-ils/19627\">anon-IL</a>), also involved multiple parties in building inclusion lists but still relied on an aggregator to collect, aggregate, and deduplicate local <span class=\"math\">\\text{ILs}</span>. In FOCIL, the entire set of attesters now participates in enforcing and ensuring the quality of the <span class=\"math\">\\text{IL}</span> included in the proposer’s block, thus removing single-party dependency other than the proposer. Additionally, it is worth noting that a censoring proposer would have to forego all consensus and execution layer rewards and cause a missed slot to avoid including transactions in the <span class=\"math\">\\text{IL}</span>.</p>\n<h3><a name=\"splitting-attacks-and-il-equivocation-14\" class=\"anchor\" href=\"https://ethresear.ch#splitting-attacks-and-il-equivocation-14\"></a><strong>Splitting attacks and IL equivocation</strong></h3>\n<p>Another concern with <span class=\"math\">\\text{fILs}</span> focused on possible “splitting” attacks using <span class=\"math\">\\text{ILs}</span>. <a href=\"https://eprint.iacr.org/2021/1413.pdf\" rel=\"noopener nofollow ugc\">Splitting attacks</a> like timed release or “equivocation” occur when malicious participants attempt to divide the honest view of the network to stall consensus. On Ethereum, a validator equivocating by contradicting something it previously advertised to the network is a <a href=\"https://eth2book.info/capella/part2/incentives/slashing/\" rel=\"noopener nofollow ugc\">slashable offense</a>. If there is evidence of the offence being included in a beacon chain block, the malicious validator gets ejected from the validator set. Quick reminder that in the <a href=\"https://eips.ethereum.org/EIPS/eip-7547\" rel=\"noopener nofollow ugc\">EIP-7547</a> design, the proposer for slot <span class=\"math\">n-1</span> is responsible for making the <span class=\"math\">\\text{IL}</span> to constrain proposer <span class=\"math\">n</span>, and can broadcast multiple <span class=\"math\">\\text{ILs}</span> (check out the <a href=\"https://ethresear.ch/t/no-free-lunch-a-new-inclusion-list-design/16389\">No-free lunch</a> post to see why, and how it relates to solving the free data availability problem). This means a malicious proposer could split the honest view of the network through <span class=\"math\">\\text{IL}</span> equivocation without being slashed. However, this is not a concern with FOCIL, since <span class=\"math\">\\text{IL}_\\text{agg}</span> has to be part of proposer $n$’s block. An <span class=\"math\">\\text{IL}</span> equivocation would thus be equivalent to a block equivocation, which is a known, slashable offense from the protocol’s perspective.</p>\n<h3><a name=\"incentives-incompatibilities-15\" class=\"anchor\" href=\"https://ethresear.ch#incentives-incompatibilities-15\"></a>Incentives incompatibilities</h3>\n<p>Previous <span class=\"math\">\\text{fILs}</span> proposals did not consider incentivizing the <span class=\"math\">\\text{IL}</span> proposer(s) for including “good” transactions. Relying on altruistic behavior might be fine, but there is always the risk that only very few validators will choose to participate in the mechanism if there is no incentive to gain. There is a strong argument to be made that the adoption of any <span class=\"math\">\\text{IL}</span> mechanism might be very low if validators risk being flagged as either non-censoring or censoring entities by revealing their preferences (see the <a href=\"https://ethresear.ch/t/anonymous-inclusion-lists-anon-ils/19627\">Anonymous Inclusion Lists post</a>), and if they are not rewarded for contributing to preserving the network’s censorship resistance properties. In FOCIL, we consider mechanisms to distribute rewards across <span class=\"math\">\\text{IL}</span> committee members and mention two options (<strong>Option 2</strong> and Option 3 in the <span class=\"math\">\\text{Payment}</span> rule section) for sharing transaction fees based on the quantity (i.e., count) and uniqueness of transactions included in their local lists. We hope to continue working in this direction and to find incentive-compatible ways to increase the costs of censorship.</p>\n<h3><a name=\"same-slot-censorship-resistance-16\" class=\"anchor\" href=\"https://ethresear.ch#same-slot-censorship-resistance-16\"></a>Same-slot censorship resistance</h3>\n<p>By having FOCIL run in parallel with block building during slot  <span class=\"math\">n-1</span>, we can impose constraints on the block by including transactions submitted during the same slot in local <span class=\"math\">\\text{ILs}</span>. This is a strict improvement over <span class=\"math\">\\text{fILs}</span> designs, where the forward property imposes a 1-slot delay on <span class=\"math\">\\text{IL}</span> transactions. This property is particularly useful for time-sensitive transactions that might be censored for MEV reasons (see <a href=\"https://cdn.prod.website-files.com/642f3d0236c604d1022330f2/6499f35e0bd0f43471a95adc_MEV_Auctions_ArXiV_6.pdf\" rel=\"noopener nofollow ugc\">Censorship resistance in onchain auctions</a> paper). Admittedly, the mechanism is not exactly real-time because we still need to impose the “local <span class=\"math\">\\text{IL}</span> freeze” deadline <span class=\"math\">d</span> so block producers have time to consider <span class=\"math\">\\text{IL}_\\text{agg}</span> transactions before proposing their block.</p>\n<h3><a name=\"textil-conditionality-17\" class=\"anchor\" href=\"https://ethresear.ch#textil-conditionality-17\"></a><span class=\"math\">\\text{IL}</span> conditionality</h3>\n<p>A core property of <span class=\"math\">\\text{ILs}</span> is their conditionality, which determines whether ILs should have dedicated block space for their transactions (<a href=\"https://ethresear.ch/t/unconditional-inclusion-lists/18500\">unconditional</a>) or share block space with the payload and only being included if the block isn’t full (conditional). For FOCIL, we’re leaning towards using conditional <span class=\"math\">\\text{ILs}</span> for a couple of reasons. Firstly, it might generally be best to give sophisticated entities like builders the maximum amount of freedom in organizing block space as long as they include <span class=\"math\">\\text{IL}</span> transactions. Allowing them to order transactions and fill blocks as they prefer, rather than imposing too many restrictions on their action space, reduces the risk of them using side channels to circumvent overly rigid mechanisms. Specifically, the unconditional property just couldn’t really be enforced effectively with FOCIL, since builders wanting to use <span class=\"math\">\\text{IL}</span> dedicated block space could simply “buy up <span class=\"math\">\\text{IL}</span> committee seats” from the elected validators to include their transactions via local <span class=\"math\">\\text{ILs}</span>. Another reason to opt for conditional <span class=\"math\">\\text{ILs}</span> is the flexibility in the size of the list. With unconditional ILs, an added block space must strictly set an arbitrary maximum <span class=\"math\">\\text{IL}</span> gas limit (e.g., <code>3M</code> gas). In contrast, conditional <span class=\"math\">\\text{ILs}</span> allow for a much more flexible <span class=\"math\">\\text{IL}</span> size, depending on the remaining space in the block. The known tradeoff with conditional <span class=\"math\">\\text{ILs}</span> is block stuffing: censoring builders might fill their blocks up to the gas limit to keep <span class=\"math\">\\text{IL}</span> transactions out. More research is needed to determine the sustainability of block stuffing, as <a href=\"https://timroughgarden.org/papers/eip1559.pdf\" rel=\"noopener nofollow ugc\">consecutive full blocks exponentially increase base fees</a> and the overall cost of this strategy.</p>\n<h3><a name=\"account-abstraction-accounting-18\" class=\"anchor\" href=\"https://ethresear.ch#account-abstraction-accounting-18\"></a><strong>Account Abstraction accounting</strong></h3>\n<p>In previous proposals, <span class=\"math\">\\text{IL}</span> summaries were constructed as structures to constrain blocks without committing to specific raw transactions. Each <span class=\"math\">\\text{IL}</span> summary —or <span class=\"math\">\\text{IL}_\\text{agg}</span> for FOCIL— entry represents a transaction by including the following fields: <code>From</code> and <code>Gas Limit</code>. Satisfying an entry in the <span class=\"math\">IL</span> summary requires that at least <em>some</em> transaction from the <code>From</code> address has been executed, <em>unless</em> the remaining gas in the block is less than <code>Gas Limit</code> . The idea is simple: if a transaction was previously valid and had a sufficiently high basefee, the only two things preventing its inclusion are the lack of sufficient gas in the block or its invalidation, which would require a transaction from the same sender to have been previously executed. Here we rely on a property of Ethereum EOAs: the <code>nonce</code> and <code>balance</code> of an EOA determine the validity of any transaction originating from that EOA, and can only be modified by such a transaction.</p>\n<p>However, even limited forms of Account Abstraction that have been considered for inclusion in Electra (e.g., <a href=\"https://github.com/ethereum/EIPs/blob/43fb1e0ca950c42a09efdf9a85d8acfe260efac1/EIPS/eip-3074.md\" rel=\"noopener nofollow ugc\">EIP-3074</a> or <a href=\"https://github.com/ethereum/EIPs/blob/43fb1e0ca950c42a09efdf9a85d8acfe260efac1/EIPS/eip-7702.md\" rel=\"noopener nofollow ugc\">EIP-7702</a>) allow a transaction to trigger a change in an EOA’s balance, <em>without originating from that EOA</em>. This <a href=\"https://hackmd.io/@potuz/BkWngLly0#Transactions-that-become-invalid\" rel=\"noopener nofollow ugc\">raised concerns</a> regarding previous <span class=\"math\">\\text{fIL}</span> proposals, as proposer <span class=\"math\">n</span> is not aware of what is included in builder $n$’s payload when proposing its <span class=\"math\">\\text{IL}</span>. This could lead to a scenario where proposer <span class=\"math\">n</span> includes a transaction <span class=\"math\">txn_A</span> from address <span class=\"math\">A</span> in the <span class=\"math\">\\text{IL}</span>, while builder <span class=\"math\">n</span> includes an EIP-7702 transaction <span class=\"math\">txn_B</span>, originating from address <span class=\"math\">B</span> but sweeping out all the <code>ETH</code> from address <span class=\"math\">A</span>, and thus invalidating  <span class=\"math\">txn_A</span>. Consequently, builder <span class=\"math\">n+1</span> would no longer be able to include <span class=\"math\">txn_A</span>, though no other transaction from address <span class=\"math\">A</span> has been previously executed. In other words, the <span class=\"math\">IL</span> summary would be unsatisfiable.</p>\n<p>In FOCIL, one simplification is that the constraints from the <span class=\"math\">\\text{IL}_\\text{agg}</span> apply to the block that is being built concurrently. This means a transaction in the <span class=\"math\">\\text{IL}_\\text{agg}</span> can’t be invalidated because of a transaction in the previous block, as it can in <span class=\"math\">\\text{fIL}</span> designs. In other words, we do not need to worry about what happened in the previous block in order to check for satisfaction of the <span class=\"math\">\\text{IL}_\\text{agg}</span>. However, a builder could still insert EIP-7702 transactions in its payload that invalidate <span class=\"math\">\\text{IL}_\\text{agg}</span> transactions. To handle this case, we can do the following when validating a block:</p>\n<ul>\n<li>Before executing the block’s transactions, we store <code>nonce</code> and <code>balance</code> of all <code>From</code> addresses that appear in the <span class=\"math\">\\text{IL}_\\text{agg}</span>.</li>\n<li>After execution, we check the <code>nonce</code> and <code>balance</code> of all <code>From</code> addresses from the <span class=\"math\">\\text{IL}_\\text{agg}</span> again, and for each (<code>From</code>, <code>Gas Limit</code>) pair in the <span class=\"math\">\\text{IL}_\\text{agg}</span> we require that either the <code>nonce</code> or the <code>balance</code> has changed, or the <code>Gas Limit</code> is more than the remaining gas.</li>\n</ul>\n<p>If the <code>nonce</code> has changed, some transaction from that address has been executed. If the <code>balance</code> has changed but the <code>nonce</code> has not, some AA transaction has touched that address. In either case, that address has transacted in the block, and the entry is satisfied.</p>\n<p><em>Note: With \"full” AA, transactions could have validity that depends on arbitrary state (e.g., the price changing in a Uniswap pool). In such cases, relying on a reduced form of transactions (i.e., entries with <code>From</code> and <code>Gas limit</code> fields) is insufficient, as the full validation logic of the transaction is needed. Due to the <a href=\"https://notes.ethereum.org/@vbuterin/pbs_censorship_resistance#What-are-the-design-goals-of-any-anti-censorship-scheme\" rel=\"noopener nofollow ugc\">free data-availability</a> problem, putting raw transactions on-chain is not an option. Instead, attesters could check this locally since they need to construct their own <span class=\"math\">\\text{IL}_\\text{agg}^\\text{attester}</span> and could, therefore, evaluate the full validation logic. This allows them to verify if the transaction has been invalidated and if its inclusion should be enforced. However, attesters might have <span class=\"math\">\\text{IL}_\\text{agg}^\\text{attester}\\text{s}</span> that contain different transactions from the same <code>From</code> address, leading to a situation where one transaction might be invalidated while another is not. This would result in split views and potential attacks</em></p>\n            <p><small>10 posts - 5 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/fork-choice-enforced-inclusion-lists-focil-a-simple-committee-based-inclusion-list-proposal/19870\">Read full topic</a></p>","link":"https://ethresear.ch/t/fork-choice-enforced-inclusion-lists-focil-a-simple-committee-based-inclusion-list-proposal/19870","pubDate":"Wed, 19 Jun 2024 15:42:04 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19870"},"source":{"@url":"https://ethresear.ch/t/fork-choice-enforced-inclusion-lists-focil-a-simple-committee-based-inclusion-list-proposal/19870.rss","#text":"Fork-Choice enforced Inclusion Lists (FOCIL): A simple committee-based inclusion list proposal"}},{"title":"Burn incentives in MEV pricing auctions","dc:creator":"aelowsson","category":"Economics","description":"<h1><a name=\"burn-incentives-in-mev-pricing-auctions-1\" class=\"anchor\" href=\"https://ethresear.ch#burn-incentives-in-mev-pricing-auctions-1\"></a>Burn incentives in MEV pricing auctions</h1>\n<p><em>Thanks to Barnabé Monnot, Thomas Thiery and Caspar Schwarz-Schilling for feedback and comments.</em></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/7/1703882e171fbc76c500a2799ebea0ad8dfe61d7.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/1703882e171fbc76c500a2799ebea0ad8dfe61d7\" title=\"The process of burning MEV\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/7/1703882e171fbc76c500a2799ebea0ad8dfe61d7_2_375x375.jpeg\" alt=\"The process of burning MEV\" data-base62-sha1=\"3hAy2kXyB1SoCUhhiqvsRDjkbrN\" width=\"375\" height=\"375\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/7/1703882e171fbc76c500a2799ebea0ad8dfe61d7_2_375x375.jpeg, https://ethresear.ch/uploads/default/optimized/3X/1/7/1703882e171fbc76c500a2799ebea0ad8dfe61d7_2_562x562.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/1/7/1703882e171fbc76c500a2799ebea0ad8dfe61d7_2_750x750.jpeg 2x\" data-dominant-color=\"856938\"></a></div><p></p>\n<h2><a name=\"introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#introduction-2\"></a>Introduction</h2>\n<h3><a name=\"overview-3\" class=\"anchor\" href=\"https://ethresear.ch#overview-3\"></a>Overview</h3>\n<p>This post presents a rudimentary review of incentives for burning MEV under the <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590\">“simple” MEV burn mechanism</a> presented by Justin, as well as its slot auction counterpart, <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\">“execution auctions”</a> presented by Barnabé. The analysis is also applicable to Francesco’s original <a href=\"https://ethresear.ch/t/committee-driven-mev-smoothing/10408\">MEV smoothing</a> design. These auctions—involving builders bidding, attesters enforcing a base fee floor, and proposers selecting a winning bid—will be defined as MEV pricing auctions (in the author’s view, the “execution auction” moniker could also be extended to cover all MEV pricing auctions).</p>\n<p>The post highlights how incentives to drive up the price floor (and thus burn more MEV) can emerge in these designs regardless of any direct profit motive among builders for doing so. Importantly, stakers and staking service providers wish to ensure that competitors do not attain more rewards for selling MEV capture rights than them. They may therefore integrate with builders to bid away competing stakers’ profits. Auctions that set a price floor on proposers’ MEV capture rights will thus be influenced by the overarching staking <a href=\"https://en.wikipedia.org/wiki/Metagame\">metagame</a>. It is only at this layer that griefing attacks against proposers to burn their MEV capture rights can be understood. Adverse competition during the consensus formation process might hypothetically lead attesters to bias their MEV base fee floor during split views, rejecting or admitting blocks depending on how it impacts their bottom line (in their roles as both builders and stakers). This is something to be attentive to. Naturally, burning MEV might also be considered a public good, and such incentives are reviewed in the text as well.</p>\n<h3><a name=\"mev-pricing-auctions-4\" class=\"anchor\" href=\"https://ethresear.ch#mev-pricing-auctions-4\"></a>MEV pricing auctions</h3>\n<p>In <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590\"><em>MEV burn–a simple design</em></a>, Justin formulated an add-on to <a href=\"https://ethresear.ch/t/why-enshrine-proposer-builder-separation-a-viable-path-to-epbs/15710\">enshrined proposer–builder separation</a> (ePBS), modifying the <a href=\"https://ethresear.ch/t/committee-driven-mev-smoothing/10408\">MEV smoothing</a> design.  Builders can specify a base fee and a tip in their block bids. At some specific time before the slot begins (e.g., 2 seconds), attesters observe the highest base fee among the bids (“observation deadline”) and impose it as a subjective base fee floor when attesting to the proposer’s block. Only bids with a base fee above the floor are accepted, and the base fee is burned.</p>\n<p>If builders bid before the observation deadline with the same timing as today, then the mechanism will <a href=\"https://ethresear.ch/t/in-a-post-mev-burn-world-some-simulations-and-stats/17092\">burn substantial MEV</a>. Concerns have however been raised over the risk of <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590/4\">collusion between proposers and builders</a> and lack of <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590/23\">proper incentivization</a>. A <a href=\"https://ethresear.ch/t/dr-changestuff-or-how-i-learned-to-stop-worrying-and-love-mev-burn/17384\">recent write-up</a> on the benefits of the design and MEV burn in general generated similar worries of a <a href=\"https://ethresear.ch/t/dr-changestuff-or-how-i-learned-to-stop-worrying-and-love-mev-burn/17384/3\">stable equilibrium of late bidding</a>.</p>\n<p>The design can be further modified to involve auctioning off the rights to the entire slot, 32 slots in advance (“<a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\">execution auction</a>”). A benefit of this design is the ability to offer long-lived preconfirmations and—hypothetically—the reduced value-in-flight during the auction. The same concerns raised for the block auction design can be applied to the slot auction design, because the beacon proposer might still benefit from colluding with builders to form late-bidding cartels when selecting the execution proposer.</p>\n<p>A modified MEV pricing auction, <a href=\"https://ethresear.ch/t/mev-burn-incentivizing-earlier-bidding-in-a-simple-design/17389\">MEV burn with builder kickbacks</a>, attempts to compensate builders for bidding early. That design is not the focus of this post, but incentives and side effects in uncompensated MEV pricing auctions will affect its relevance.</p>\n<h2><a name=\"five-burn-incentives-in-mev-pricing-auctions-5\" class=\"anchor\" href=\"https://ethresear.ch#five-burn-incentives-in-mev-pricing-auctions-5\"></a>Five burn incentives in MEV pricing auctions</h2>\n<p>The outlined concerns of late bidding are valid, but it turns out that it is not possible to analyze MEV burn without incorporating stakers as participating agents. In such an analysis, competition for attaining the most yield will—under equilibrium—drive participants to burn each other’s MEV. Other incentives for burning MEV also exist. The analysis starts from the most idealistic public good example in (A) and gradually builds toward a metagame of active collusion to discourage other stakers in (E) (see Figure 1).</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/a/7a0cc1b660d8b22ac81aff0bbc070505e6f30e7e.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/7a0cc1b660d8b22ac81aff0bbc070505e6f30e7e\" title=\"Figure 1\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/a/7a0cc1b660d8b22ac81aff0bbc070505e6f30e7e_2_500x500.jpeg\" alt=\"Figure 1\" data-base62-sha1=\"hpHA728XhIuk4yNHsFeTWz0qu0S\" width=\"500\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/a/7a0cc1b660d8b22ac81aff0bbc070505e6f30e7e_2_500x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/7/a/7a0cc1b660d8b22ac81aff0bbc070505e6f30e7e_2_750x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/7/a/7a0cc1b660d8b22ac81aff0bbc070505e6f30e7e_2_1000x1000.jpeg 2x\" data-dominant-color=\"866939\"></a></div><p></p>\n<p><strong>Figure 1.</strong> Five types of builders potentially burning MEV in MEV pricing auctions: (A) Public good builder, (B) For-profit public good builder, (C) Extortion racket, (D) Staker-initiated griefing, (E) Staker-initiated griefing cartel. The incentives behind (D) are important to understand (indicated by an arrow).</p>\n<h3><a name=\"a-public-good-builder-6\" class=\"anchor\" href=\"https://ethresear.ch#a-public-good-builder-6\"></a>(A) Public good builder</h3>\n<p>The first example is a builder that dedicates resources to burning MEV without a direct profit motive. If Ethereum’s users believe that burning MEV is a public good, and in particular if no other incentive is sufficient, they may come together to fund the development and operation of a public good builder. Initiatives to fund public goods are fairly <a href=\"https://medium.com/ethereum-optimism/retroactive-public-goods-funding-33c9b7d00f0c\">prevalent</a> within the Ethereum ecosystem. The public good builder can for example consistently bid according to guaranteed MEV at the observation deadline in the block auction design. This ensures that the MEV is burned while the builder will not suffer any direct losses from the bid. In the slot auction design, the builder would instead need to bid according to its expected MEV for the entire slot and might bid slightly below to stay safe.</p>\n<p>The public good builder will likely not be the best and will often be outbid in terms of tips from other builders in the proposer auction (taking place after the observation deadline), in which the proposer selects a winning bid. But the operation can still be very impactful. After all, priority fees are a significant portion of all value (in this post these fees are also treated as MEV), and some further “low-hanging MEV fruits” are potentially available without dedicating too large resources for extraction. While the builder may use any public goods funding received diligently and not strive for any profit, pursuing an idealistic path can still raise the originators’ public profile and provide significant economic benefits in the future (perhaps not even directly related to building blocks).</p>\n<h3><a name=\"b-for-profit-public-good-builder-7\" class=\"anchor\" href=\"https://ethresear.ch#b-for-profit-public-good-builder-7\"></a>(B) For-profit public good builder</h3>\n<p>A builder that positions itself as providing a public good may also enjoy direct economic benefits from its operation if some validators sympathize with the mission. There may for example be a market fit for builders that do not censor, nor extract various types of toxic MEV. In the block auction design, the builder could keep the MEV base fee in line with the available (non-censorship/non-toxic) MEV during the attester auction, and then pivot to tipping afterward, retaining some small profit margin. The MEV in some blocks is not particularly geared towards specialized searchers, and stakers may not lose that much in tips for some blocks by selecting the public good builder. Therefore, the public good builder could have higher profit margins in the blocks it does eventually get to build than builders that have not positioned themselves as providing a public good. A builder bidding before the observation deadline might of course also hope that its bids are the only ones to reach the proposer in times of degraded network conditions.</p>\n<h3><a name=\"c-extortion-racket-8\" class=\"anchor\" href=\"https://ethresear.ch#c-extortion-racket-8\"></a>(C) Extortion racket</h3>\n<p>Given the lower effort required for extracting some of the MEV, it seems like (A) and (B) could have a natural position and high impact within the Ethereum ecosystem. But it may very well be that no successful public good builder can be sustained over the long run. After all, many stakers will not be particularly enthusiastic over a builder that burns their MEV opportunities.</p>\n<p>Still, consider the importance of a dedicated MEV-burning builder within the staking ecosystem. If the builder is operational, proposers will lose out on a lot of value relative to if it does not operate. Is there a business opportunity here? Perhaps a builder could commit to burning the maximum possible MEV but abstain from doing so if it receives a bribe from the proposer? It seems natural that proposers would be willing to pay for this, since the proposer stands to capture most value from the available MEV if none is burned. But the prospect of competition makes the business model perilous. If a sole extortive builder is profitable, then a few more may try to enter the market as well. There is not much use in paying off two builders if it turns out that a third burned the MEV anyway through a bid. A mechanism for reconciling this ex-post would become rather complex. The validator may then be better off by simply not negotiating with any extortion racket.</p>\n<p>While the extortion racket seems unsustainable, it helps to underscore the power that builders have over proposers. The ultimate incentive for burning MEV then emerges when changing the responsible actor from one unaffected by the staking equilibrium (extorting builder) to one that is not (other stakers). The auction will eventually become part of the <a href=\"https://en.wikipedia.org/wiki/Metagame\">metagame</a> of the overarching staking equilibrium.</p>\n<h3><a name=\"d-metagame-staker-initiated-griefing-9\" class=\"anchor\" href=\"https://ethresear.ch#d-metagame-staker-initiated-griefing-9\"></a>(D) Metagame—staker-initiated griefing</h3>\n<p>Staking service providers (SSPs) compete for delegated stake and derive income by taking a cut of the staking yield when they pass it back to the delegators. An SSP must ensure that the yield it offers delegating stakers is competitive relative to offers from other SSPs. The MEV pricing auction may therefore lead SSPs to burn competing proposers’ MEV by tightly integrating with builders or running them in-house. If a competitor burns an SSP’s MEV, then the SSP must respond in kind or will lose out on delegators and thus income. When considering the metalevel of SSPs, this equilibrium seems more stable than an equilibrium of late bidding leading to little or no MEV burn. All it takes to break the late-bidding cartel is one defecting SSP builder, forcing others to respond.</p>\n<p>An SSP that through a builder griefs other stakers without taking any loss executes something comparable to a <a href=\"https://github.com/ethereum/research/blob/d1d465f658e0024a2010b0a6ad960a76d9c40cac/papers/discouragement/discouragement.pdf\">discouragement attack</a> with an infinite griefing factor. This is a very advantageous attack, primarily because delegators will flow to the best performing SSP. In addition, a reduction in overall yield for other stakers pushes down the quantity of supplied stake, bringing up the equilibrium yield. Thus, even if some delegators do not flow to the SSP that burns its competitor’s MEV, the expected staking yield (that the SSP will share in the profit from) will still go up, if the competitor’s customers simply stop delegating. Of course, the cost of running the builder must be accounted for. But large SSPs can amortize that cost across a vast amount of yield-bearing validators.</p>\n<p>Yet, directly profiting from the MEV is almost always better than burning it. When an SSP’s builder is able to extract more MEV in a competitor’s slot than any other builder, it will still be better off only bidding to a level that ensures it wins the auction. The SSP must thus make a probabilistic judgment as to the uniqueness of its MEV opportunity in the particular slot before deciding how to proceed (or more precisely, any edge in MEV value <span class=\"math\">V_e</span> relative to the second best builder). An SSP builder must in essence bid before the observation deadline up to the point where the expected payoff from burning the marginal MEV is equal to the expected payoff from waiting and hoping to extract it. There are some game-theoretic nuances to this that here will be set aside, with some aspects discussed in the next section. The point is to assert that there are stronger incentives for builders to bid before the observation deadline than what has been previously understood, because a builder might be run by an SSP that indirectly profits from burning other stakers’ potential MEV revenue.</p>\n<p>What happens in the metagame to smaller SSPs and solo stakers? They may not afford to run a builder of their own to ensure that their competitors’ MEV is burned. It is of course possible for solo stakers to try to come together to form a union around a builder, where each contributor is guaranteed to see their validators excluded from MEV base fee bids by the specific builder (and receive full tips during the proposer auction). There is then a question of if they will be able to organize such a union, but also if it really would be necessary. On the one hand, if there are several “griefing builders” running concurrently among the largest SSPs, parties holding less stake may not need to run their own griefing builder. Everyone will see their MEV burned anyway, since the big SSPs burn each other’s and everyone else’s MEV. On the other hand, a party not having a griefing builder readily available may be suboptimally positioned when considering the prospect of cartelization.</p>\n<h3><a name=\"e-metagame-staker-initiated-griefing-cartel-10\" class=\"anchor\" href=\"https://ethresear.ch#e-metagame-staker-initiated-griefing-cartel-10\"></a>(E) Metagame—staker-initiated griefing cartel</h3>\n<p>Can builders operating at the metalevel collude to selectively burn or selectively <em>not</em> burn MEV, depending on the identity of the slot’s validator? The cartel would strive to ensure that all participating SSPs (or any union of solo stakers) receive the MEV in their validators’ proposed blocks, while minimizing MEV in all other validators’ blocks.</p>\n<p>However, if attesters are honest, builders can only cartelize to selectively burn or not burn MEV that they uniquely are able to extract. As long as competing builders are operational, this substantially limits the power of any cartel. Therefore, the advantage of (E) over (D) is not substantial.</p>\n<h4><a name=\"proposer-is-part-of-the-cartel-11\" class=\"anchor\" href=\"https://ethresear.ch#proposer-is-part-of-the-cartel-11\"></a>Proposer is part of the cartel</h4>\n<p>When the beacon proposer is part of the cartel, members will abstain from bidding before the observation deadline to ensure that as much value as possible flows to the proposer. This type of cartelization has been highlighted as a concern (<a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590/4\">1</a>, <a href=\"https://ethresear.ch/t/dr-changestuff-or-how-i-learned-to-stop-worrying-and-love-mev-burn/17384/3\">2</a>) in the debate around MEV pricing auctions. The idea is that participants come to an explicit or implicit agreement to not bid before the observation deadline. Yet the incentive to burn MEV is stronger than previously understood, since stakers outside the cartel will wish to grief cartel members by bidding early (D), and so from this perspective, the risk of late-bidding-cartelization is lower than feared.</p>\n<p>It might also be difficult to efficiently uphold cartelization, because it is not possible for members to know which, if any, defected in pursuit of (D). One avenue would be to try to share the profits from every slot to give all participants incentives to hold back bids before the observation deadline. Yet overall, the existence of (A), (B), and (D) means that some value will still reasonably be burned by public good builders or any competitors not part of the cartel.</p>\n<h4><a name=\"proposer-is-not-part-of-the-cartel-12\" class=\"anchor\" href=\"https://ethresear.ch#proposer-is-not-part-of-the-cartel-12\"></a>Proposer is not part of the cartel</h4>\n<p>When the beacon proposer is outside the cartel, the goal is to deprive it of revenue while still capturing as much of the MEV as possible. It will still be more profitable for the cartel to extract any unique MEV opportunity rather than burn it. Define <span class=\"math\">V_s</span> as the value a builder can attain in the slot auction and <span class=\"math\">V_b</span> as its value for the block auction (from a block built at the observation deadline). When a builder can extract the most MEV, it has an edge <span class=\"math\">V_e</span> over the second-best builder (kept constant for simplicity). Just as in (D), the cartel can bid up to <span class=\"math\">V_b-V_e</span> or <span class=\"math\">V_s-V_e</span>, with the difference that <span class=\"math\">V_e</span> expands if the cartel collectively gains a larger edge against the best builder outside of the cartel. This expansion is what the cartel tries to capitalize on, both when the proposer is part of the cartel (expanding <span class=\"math\">V_e</span> to lower the burn) and when not (expanding <span class=\"math\">V_e</span> to increase builder profits). A challenge—just as in (D)—is that the cartel might not be able to properly estimate <span class=\"math\">V_e</span>. After the observation deadline, the cartel attempts to extract as much value as possible, leaving the MEV either burned or in their hands.</p>\n<h4><a name=\"collusion-at-other-levels-13\" class=\"anchor\" href=\"https://ethresear.ch#collusion-at-other-levels-13\"></a>Collusion at other levels</h4>\n<p>The presentation so far has been somewhat simplistic. It bears mentioning that collusion need not happen at the level of the builders, but can for example happen at the level of searchers or any out-of-protocol relay that the cartel still finds beneficial to maintain before posting to the P2P layer. In all scenarios of successful cartelization, if some stakers (for example solo stakers) are unable to act collectively, they may end up at the short end of the discouragement dynamic.</p>\n<h2><a name=\"risks-associated-with-attester-builder-integration-14\" class=\"anchor\" href=\"https://ethresear.ch#risks-associated-with-attester-builder-integration-14\"></a>Risks associated with attester–builder integration</h2>\n<p>The analysis so far indicates that (D) may have a significant effect on its own but that it does not necessarily lead to the riskier cartelization in (E). But what might happen when we give SSPs tools for depriving each other of revenue? While SSPs will always compete, competition in MEV pricing auctions is on the verge of seeping into the consensus formation process. At the consensus level, all participants are expected to behave honestly and are rewarded for good behaviour. Through staker–builder integration in (D)-(E), SSPs will come to actively influence each other’s rewards, cooperating or griefing each other. A risk is that SSPs might navigate down perilous paths in this landscape.</p>\n<p>It has been noted that MEV pricing auctions suffer from attesters potentially having <a href=\"https://ethresear.ch/t/mev-burn-incentivizing-earlier-bidding-in-a-simple-design/17389\">split views</a> of the MEV base fee floor. Biasing the outcome in a split view one way or the other might benefit one builder over another, result in a block being forked out to deprive the beacon proposer of all rewards, or allow the proposer to reap higher rewards when selling MEV capture rights. One concern is that SSPs might eventually try to profit by tuning their attestations of the MEV base fee floor to produce favorable outcomes. This can also be done as part of a cartel. The honest majority assumption need not be broken to derive profits, due to split views. It is only necessary to put a thumb on the scale, and a competitive consensus formation might make such behavior more likely.</p>\n<p>Of course, stakers who do not honestly attest to which bids they have observed at which specific time point subject themselves to risks of social slashing if malicious behavior can be uncovered. This is always a potential final resort under proof of stake. In essence, just as it is prudent to be cautious of MEV or excessive issuance as strata for cartelization, it also seems prudent to be cautious of MEV pricing auctions as a stratum for consensus adversity.</p>\n<h2><a name=\"block-vs-slot-auctions-in-terms-of-mev-pricing-15\" class=\"anchor\" href=\"https://ethresear.ch#block-vs-slot-auctions-in-terms-of-mev-pricing-15\"></a>Block vs. slot auctions in terms of MEV pricing</h2>\n<p>Will block auctions or slot auctions burn more MEV? Is one more centralizing than the other? These questions are not easy to answer, because it depends on which burn incentive that comes to dominate, the likelihood of cartelization under different designs, etc. This section will discuss some differences (previous writings on <a href=\"https://mirror.xyz/0x03c29504CEcCa30B93FF5774183a1358D41fbeB1/CPYI91s98cp9zKFkanKs_qotYzw09kWvouaAa9GXBrQ\">block vs. slot auctions</a> provide a broader perspective).</p>\n<h3><a name=\"block-vs-slot-auctions-concerning-d-16\" class=\"anchor\" href=\"https://ethresear.ch#block-vs-slot-auctions-concerning-d-16\"></a>Block vs. slot auctions concerning (D)</h3>\n<p>Assume that (D) becomes an important incentive for burning MEV. Further, assume a competitive market without cartelization and perfect information about how much MEV each participant can extract. In the block auction design, the builder can bid <span class=\"math\">V_b-V_e</span> for the block at the observation deadline to maximize burn while retaining opportunities to extract value. It then updates its block and bid through tips in the proposer auction up until the slot boundary. There is <span class=\"math\">V_s-V_b</span> worth of value that the proposer hopes to attain through tips, and <span class=\"math\">V_e</span> worth of value left for the builder (under these simplified conditions).</p>\n<p>In the slot auction design, the builder can instead bid <span class=\"math\">V_s-V_e</span> already at the observation deadline. It is just buying the rights to build the block, not committing to its content, and that value is an entire slot’s worth of MEV. Naturally, <span class=\"math\">V_s</span> will here just be an estimate, and the risk that builders take on by bidding on an expected value instead of a tangible value might be worth some fraction of the total bid value. But incomplete information around competitors’ eventual final bids will likely serve to pull down the bid value at the observation deadline more. The staker–builder can ideally burn <span class=\"math\">V_s-V_e</span> of a competing beacon proposer’s auctionable MEV, and again retain <span class=\"math\">V_e</span> for itself. The difference in MEV burn between the two designs is then <span class=\"math\">V_s-V_b</span>.</p>\n<p>If the staker–builder could estimate <span class=\"math\">V_s</span> also in the block auction design (which nominally is easier since it bids much closer to the deadline), it could bid <span class=\"math\">V_s-V_e-V_g</span> already at the observation deadline. Since the bid is attached to a block containing only <span class=\"math\">V_b</span> of MEV, <span class=\"math\">V_g</span> is reserved as a tip for the proposer auction. If there is no tip, the proposer might elect to pick the block from the observation deadline, depriving the builder of <span class=\"math\">V_s-V_b</span>. However, while the proposer might specifically wish to do so if the same builder bids with low tips also in the proposer auction, a staker can obfuscate its identity by running several builders (the kickback design disincentivizes obfuscation).</p>\n<p>In either design, it seems most likely that the burn ends up being lower than these theoretical maxima due to incomplete information in combination with the fact that capturing the MEV is more valuable than burning it. The staker–builder will therefore operate with quite some margin to maximize expected profits.</p>\n<h3><a name=\"block-vs-slot-auctions-concerning-a-b-17\" class=\"anchor\" href=\"https://ethresear.ch#block-vs-slot-auctions-concerning-a-b-17\"></a>Block vs. slot auctions concerning (A)-(B)</h3>\n<p>The analysis for (D) is to some extent also applicable for (A) and (B). The public good builder could theoretically bid higher in the slot auction than in the block auction. However, the risk associated with overbidding in the slot auction design might be more serious for these builders. In the block auction design, the available value will be much clearer, making it easier for an unsophisticated builder to make low-risk bids.</p>\n<h3><a name=\"value-of-preconfirmations-18\" class=\"anchor\" href=\"https://ethresear.ch#value-of-preconfirmations-18\"></a>Value of preconfirmations</h3>\n<p>As previously mentioned, the slot auction design facilitates execution layer preconfirmations, which can provide a welfare gain to Ethereum. In addition, their value can be burnt (just as in <a href=\"https://ethresear.ch/t/execution-tickets/17944#roadmap-compatibility-6\">execution tickets</a>), since builders are bidding to attain that value. This increases the burn of the slot auction design.</p>\n<h3><a name=\"builder-centralization-under-competition-over-expected-mev-19\" class=\"anchor\" href=\"https://ethresear.ch#builder-centralization-under-competition-over-expected-mev-19\"></a>Builder centralization under competition over expected MEV</h3>\n<p>If builders have different strengths and weaknesses, they will intermittently attain the highest <span class=\"math\">V_b</span> in the block auction design. While one builder might be able to extract the highest MEV in expectation, not all blocks will play to its strengths. However, in the slot auction, builders bid on expected MEV, and one specific builder might then always have the highest expected <span class=\"math\">V_s</span>. <a href=\"https://collective.flashbots.net/t/when-to-sell-your-blocks/2814\">This could potentially be a centralizing force</a>, depending on how secondary markets evolve.</p>\n<h2><a name=\"conclusion-20\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-20\"></a>Conclusion</h2>\n<p>There are strong incentives for burning MEV even in designs that do not directly compensate for it, for example to provide a public good service or to ensure that other participants in the staking metagame do not attain a higher yield. Uncompensated MEV pricing auctions accommodates these incentives. Of particular relevance is staker-initiated griefing (D). It seems clear that SSPs will seek to influence builders’ bidding strategies, and this can lead to staker–builder integration. Still, this form of integration does not necessarily lead to censorship or higher MEV profits; thus not negating sought benefits of proposer–builder separation. If it is desirable to give an outside party an independent incentive to burn MEV, then <a href=\"https://ethresear.ch/t/mev-burn-incentivizing-earlier-bidding-in-a-simple-design/17389\">builder kickbacks</a> are an option. They can also be applied to the slot auction design.</p>\n<p>When implementing a MEV burn mechanism, it is important to ensure that the burn mechanism does not accidentally set fire to Ethereum’s consensus mechanism. Giving SSPs tools for griefing each other could lead to adverse competition during the consensus formation process. A particular concern is then if emerging attester–builder integration leads attesters to bias their MEV base fee floor, rejecting or admitting blocks depending on how it impacts their bottom line (in their roles as both builders and stakers). Which of the different scenarios (A-E) that would predominate is seemingly a more important parameter when evaluating the merits of MEV pricing auctions than the mechanism’s ability to burn substantial MEV (which this post suggests it can).</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/burn-incentives-in-mev-pricing-auctions/19856\">Read full topic</a></p>","link":"https://ethresear.ch/t/burn-incentives-in-mev-pricing-auctions/19856","pubDate":"Tue, 18 Jun 2024 20:58:14 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19856"},"source":{"@url":"https://ethresear.ch/t/burn-incentives-in-mev-pricing-auctions/19856.rss","#text":"Burn incentives in MEV pricing auctions"}},{"title":"Preconfirmations: On splitting the block, mev-boost compatibility and relays","dc:creator":"dpl0a","category":"Layer 2","description":"<p>Thanks to <a class=\"mention\" href=\"https://ethresear.ch/u/fabrizioromanogenove\">@FabrizioRomanoGenove</a>, <a class=\"mention\" href=\"https://ethresear.ch/u/meridian\">@meridian</a> and Philipp Zahn for helpful comments and feedback on this post.</p>\n<h2><a name=\"what-is-a-preconfirmation-1\" class=\"anchor\" href=\"https://ethresear.ch#what-is-a-preconfirmation-1\"></a><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/question.png?v=12\" title=\":question:\" class=\"emoji\" alt=\":question:\" loading=\"lazy\" width=\"20\" height=\"20\"> What is a Preconfirmation?</h2>\n<p>There have been a lot of variations on the definition of preconfirmation going around recently in the Ethereum community. In this post we will keep the definition as simple and broad as possible in order to generate the least amount of confusion and avoid arguing on semantics as much as possible:</p>\n<blockquote>\n<p>We call a <strong><em>preconfirmation mechanism</em></strong> any mechanism that ensures (non-positional) inclusion of a (bundle of) transaction(s), if execution is successful, in a finite and bounded amount of time from the emission of the preconfirmation.</p>\n</blockquote>\n<h3><a name=\"xga-style-preconfirmations-2\" class=\"anchor\" href=\"https://ethresear.ch#xga-style-preconfirmations-2\"></a><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/mag.png?v=12\" title=\":mag:\" class=\"emoji\" alt=\":mag:\" loading=\"lazy\" width=\"20\" height=\"20\"> XGA-Style Preconfirmations</h3>\n<p>We will analyze a specific kind of preconfirmation mechanism – as hinted to in <a href=\"https://ethresear.ch/t/a-simple-small-mev-boost-compatible-preconfirmation-idea/19800/3\">this post on ethresearch</a> – that we came up with some time ago and have been building since then:</p>\n<blockquote>\n<p>An <strong><em>XGA-style preconfirmation mechanism</em></strong> is a preconfirmation mechanism that guarantees (non-positional) inclusion of a sized bundle of transactions <strong>in the bottom portion of a predetermined block to be minted 2 epochs after the preconfirmation was emitted</strong>. Maximum bundle size is determined at the time of emission of the preconfirmation.</p>\n</blockquote>\n<h2><a name=\"splitting-the-block-3\" class=\"anchor\" href=\"https://ethresear.ch#splitting-the-block-3\"></a><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/scissors.png?v=12\" title=\":scissors:\" class=\"emoji\" alt=\":scissors:\" loading=\"lazy\" width=\"20\" height=\"20\"> Splitting the Block</h2>\n<p>Looking at the previous definition, I assume the first couple of questions that would come to mind is “what do you mean exactly by the bottom portion of a block?” and “how is the block to include the bundle predetermined?”. Our idea is pretty simple: Partition the block in such a way to keep a top-of-the-block (ToB)<sup class=\"footnote-ref\"><a href=\"https://ethresear.ch#footnote-48655-1\" id=\"footnote-ref-48655-1\">[1]</a></sup>, high-priority section, in which traditional builders do their usual thing and is allocated through a traditional mev-boost auction or whatever the relay running it prefers; and a reserved bottom-of-the-block (BoB) section, which will serve as allocation space for preconfirmations. In this design, preconfirmation bundles will be allocated via a separate auction in the form of <strong><em>forward contracts</em></strong>.</p>\n<h3><a name=\"a-two-auction-format-4\" class=\"anchor\" href=\"https://ethresear.ch#a-two-auction-format-4\"></a><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/busts_in_silhouette.png?v=12\" title=\":busts_in_silhouette:\" class=\"emoji\" alt=\":busts_in_silhouette:\" loading=\"lazy\" width=\"20\" height=\"20\"> A Two-Auction Format</h3>\n<p>As briefly mentioned above, in the XGA-style split-block design, preconfirmations are allocated in a completely separate way from the traditional mev-boost auction, allowing them to coexist without excessively disrupting the ecosystem. Traditional builders will be able to do their own thing with minimal adjustments, while everyone else can still enjoy the benefits of preconfirmations.</p>\n<p>In simple terms: An XGA-style BoB auction is a multi-unit auction selling gas tokens for a specific block <span class=\"math\">B</span> in fixed-size units (e.g. <span class=\"math\">100</span> K gas). These tokens can then be used to submit a bundle<sup class=\"footnote-ref\"><a href=\"https://ethresear.ch#footnote-48655-2\" id=\"footnote-ref-48655-2\">[2]</a></sup> that is guaranteed inclusion in <span class=\"math\">B</span> if execution is successful.</p>\n<p>As an example, picture this scenario:</p>\n<ul>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/clock2.png?v=12\" title=\":clock2:\" class=\"emoji\" alt=\":clock2:\" loading=\"lazy\" width=\"20\" height=\"20\"> At the start of epoch <span class=\"math\">N-2</span> we know that the validator <span class=\"math\">V</span>, serving XGA-style preconfirmations, will be the proposer for the <span class=\"math\">K</span>-th slot of epoch <span class=\"math\">N</span>.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/oil_drum.png?v=12\" title=\":oil_drum:\" class=\"emoji\" alt=\":oil_drum:\" loading=\"lazy\" width=\"20\" height=\"20\"> $5$M gas out of the standard <span class=\"math\">30</span> M will be auctioned off into <span class=\"math\">50</span> gas tokens, each representing a capacity of <span class=\"math\">100</span> K gas.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/shopping_cart.png?v=12\" title=\":shopping_cart:\" class=\"emoji\" alt=\":shopping_cart:\" loading=\"lazy\" width=\"20\" height=\"20\"> At some fixed time <span class=\"math\">t</span> before the start of slot <span class=\"math\">K</span>, a multi-unit auction allocating the tokens is run. Aki manages to win 5 tokens for <span class=\"math\">K</span>, for a combined capacity of <span class=\"math\">500</span> K.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/alarm_clock.png?v=12\" title=\":alarm_clock:\" class=\"emoji\" alt=\":alarm_clock:\" loading=\"lazy\" width=\"20\" height=\"20\"> Within the deadline fixed at some time <span class=\"math\">d</span> before the end of <span class=\"math\">K</span>, Aki uses the <span class=\"math\">5</span> tokens to submit a bundle of size just over <span class=\"math\">400</span> K gas.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/outbox_tray.png?v=12\" title=\":outbox_tray:\" class=\"emoji\" alt=\":outbox_tray:\" loading=\"lazy\" width=\"20\" height=\"20\"> In the meantime, other BoB auction winners submit their own bundles.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/dollar.png?v=12\" title=\":dollar:\" class=\"emoji\" alt=\":dollar:\" loading=\"lazy\" width=\"20\" height=\"20\"> At the start of <span class=\"math\">K</span>, a traditional mev-boost auction for <span class=\"math\">25</span> M gas is run as usual by all relays, and is won by Bogdan via relay <span class=\"math\">R</span>.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/brick.png?v=12\" title=\":brick:\" class=\"emoji\" alt=\":brick:\" loading=\"lazy\" width=\"20\" height=\"20\"> After deadline <span class=\"math\">d</span> is reached and the mev-boost auction is over, the BoB part is assembled and attached at the bottom of the max-<span class=\"math\">25</span> M block submitted by Bogdan via relay <span class=\"math\">R</span>.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/tada.png?v=12\" title=\":tada:\" class=\"emoji\" alt=\":tada:\" loading=\"lazy\" width=\"20\" height=\"20\"> Since Aki’s bundle contained no reverting transactions, it is included without any problem – together with the non-reverting bundles submitted by the other BoB winners – somewhere after the portion built by Bogdan.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/satellite.png?v=12\" title=\":satellite:\" class=\"emoji\" alt=\":satellite:\" loading=\"lazy\" width=\"20\" height=\"20\"> The block for <span class=\"math\">K</span> gets broadcasted as usual.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/x.png?v=12\" title=\":x:\" class=\"emoji\" alt=\":x:\" loading=\"lazy\" width=\"20\" height=\"20\"> Excess tokens for <span class=\"math\">K</span> that didn’t get spent can no longer be used.</li>\n</ul>\n<h3><a name=\"who-builds-the-blocks-then-5\" class=\"anchor\" href=\"https://ethresear.ch#who-builds-the-blocks-then-5\"></a><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/brick.png?v=12\" title=\":brick:\" class=\"emoji\" alt=\":brick:\" loading=\"lazy\" width=\"20\" height=\"20\"> Who Builds the Blocks, then?</h3>\n<p>Block building, in the case of XGA-style preconfirmations, is handled by multiple parties:</p>\n<ul>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/package.png?v=12\" title=\":package:\" class=\"emoji\" alt=\":package:\" loading=\"lazy\" width=\"20\" height=\"20\"> The ToB part is built by traditional mev-boost builders as usual.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/gift.png?v=12\" title=\":gift:\" class=\"emoji\" alt=\":gift:\" loading=\"lazy\" width=\"20\" height=\"20\"> The BoB part is assembled by the party running the BoB auction.</li>\n<li><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/brick.png?v=12\" title=\":brick:\" class=\"emoji\" alt=\":brick:\" loading=\"lazy\" width=\"20\" height=\"20\"> Merging the two parts and sending the block over is handled by the relay.</li>\n</ul>\n<p>In this setup, the relay takes on more work and responsibilities than it currently does. We will explore a potentially beneficial approach to this change later.</p>\n<h3><a name=\"what-are-the-economic-advantages-of-preconfirmations-6\" class=\"anchor\" href=\"https://ethresear.ch#what-are-the-economic-advantages-of-preconfirmations-6\"></a><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/money_with_wings.png?v=12\" title=\":money_with_wings:\" class=\"emoji\" alt=\":money_with_wings:\" loading=\"lazy\" width=\"20\" height=\"20\"> What Are the Economic Advantages of Preconfirmations?</h3>\n<p>Well… In general, for the whole range of designs that are being discussed right now this is not clear yet! <strong>Conjecturally</strong>, some of the proposed preconfirmation mechanisms will allow more value to trickle down to validators, but since the preconfirmation design landscape is so broad and confused right now it’s hard to take into account all the possible market effects that could come out of such designs. For example, most of the preconf mechanisms currently being discussed are pretty unfriendly towards what has been one of the main APY-cows for validators since the dawn of mev-boost: competitive builder/searchers.</p>\n<h4><a name=\"why-are-we-betting-on-xga-style-preconfs-7\" class=\"anchor\" href=\"https://ethresear.ch#why-are-we-betting-on-xga-style-preconfs-7\"></a><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/game_die.png?v=12\" title=\":game_die:\" class=\"emoji\" alt=\":game_die:\" loading=\"lazy\" width=\"20\" height=\"20\"> Why Are We Betting on XGA-Style Preconfs?</h4>\n<p>It seems clear to us that reserving a spot for non-priority-sensitive transactions can offer several benefits:</p>\n<ul>\n<li>Users and platforms (e.g. rollups) that are not involved in competitive building/searching just doesn’t care about running HFT operations on L1 can greatly benefit from separating their concerns from those of competitive builder/searchers.</li>\n<li>On the other end, it eases some of the pressure on the competitive builder/searcher side by removing some of the burden of having to include <em>“filler transactions”</em> to keep their blocks competitive. E.g. freeing them from needing to include blob-bearing transactions that could negatively impact latency.</li>\n<li>It makes actually pricing inclusion preconfirmations simpler, since it is still regulated by the usual gas pricing model, and at the same time the preconf inclusion market is kept separate from the traditional priority market for position-sensitive transactions.</li>\n<li>Moreover, we believe in gradual change, allowing time for everyone to adapt to and observe the effects of new, potentially disruptive features in a controlled manner. A split-block design compatible with traditional mev-boost block building offers a less intrusive path to adoption.</li>\n</ul>\n<h2><a name=\"rethinking-relays-8\" class=\"anchor\" href=\"https://ethresear.ch#rethinking-relays-8\"></a><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/bulb.png?v=12\" title=\":bulb:\" class=\"emoji\" alt=\":bulb:\" loading=\"lazy\" width=\"20\" height=\"20\"> Rethinking Relays</h2>\n<p>At the moment running a relay naively is mostly a non remunerative gig. Under XGA-style preconfirmations, the relay does significantly more work and takes on more risk than before, e.g. if a block is missed and/or already sold preconfirmation tokens end up not getting included due to the relay malfunctioning, whoever bought them incurs an active loss of assets. While this sounds scary, it is also a good opportunity to rethink the role of relays in the Ethereum ecosystem.</p>\n<h3><a name=\"insurance-and-reward-mechanisms-for-relays-9\" class=\"anchor\" href=\"https://ethresear.ch#insurance-and-reward-mechanisms-for-relays-9\"></a><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/shield.png?v=12\" title=\":shield:\" class=\"emoji\" alt=\":shield:\" loading=\"lazy\" width=\"20\" height=\"20\"> Insurance and Reward Mechanisms for Relays</h3>\n<p>What we are proposing is that a relay can subscribe to an XGA-style preconf platform by staking a collateral that could be used to offer the damaged parties a refund in case of the relay malfunctioning, while sharing a percentage of the platform revenue each time it submits a successful block that includes XGA-enabled preconfirmations<sup class=\"footnote-ref\"><a href=\"https://ethresear.ch#footnote-48655-3\" id=\"footnote-ref-48655-3\">[3]</a></sup>.</p>\n<h2><a name=\"introducing-xga-10\" class=\"anchor\" href=\"https://ethresear.ch#introducing-xga-10\"></a><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/mega.png?v=12\" title=\":mega:\" class=\"emoji\" alt=\":mega:\" loading=\"lazy\" width=\"20\" height=\"20\"> Introducing XGA</h2>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/4/448bd42d21b7642cd38d003f7cec9cb82adfc3b6.png\" data-download-href=\"https://ethresear.ch/uploads/default/448bd42d21b7642cd38d003f7cec9cb82adfc3b6\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/4/448bd42d21b7642cd38d003f7cec9cb82adfc3b6_2_690x99.png\" alt=\"image\" data-base62-sha1=\"9Mo35AM8nSixIAAxYZf9Vtws6Tc\" width=\"690\" height=\"99\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/4/448bd42d21b7642cd38d003f7cec9cb82adfc3b6_2_690x99.png, https://ethresear.ch/uploads/default/optimized/3X/4/4/448bd42d21b7642cd38d003f7cec9cb82adfc3b6_2_1035x148.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/4/448bd42d21b7642cd38d003f7cec9cb82adfc3b6_2_1380x198.png 2x\" data-dominant-color=\"F9F8F7\"></a></div><br>\nXGA – eXtensible Gas Auctions – is the first L2 platform for XGA-style preconfirmations (lol), designed and built by the combined efforts of <a href=\"https://www.manifoldfinance.com/\" rel=\"noopener nofollow ugc\">Manifold Finance</a> and <a href=\"https://20squares.xyz/\" rel=\"noopener nofollow ugc\">20Squares</a>. We’re very willing to make this an open and collaborative effort, so if you have any feedback and/or are interested in building this together with us, please reach out!<p></p>\n<p>Right now we have released on mainnet our v1.0 (yes, this is not a beta, <strong>we’re ready to go</strong> and currently onboarding validators), with the caveat that in v1.0, the ToB mev-boost auction can only be run on a single relay. We’re currently working on shipping v2.0, which will allow a <strong>relay-agnostic</strong> auction to be run in the ToB part. You can find more about it at <a href=\"https://docs.xga.com/\" rel=\"noopener nofollow ugc\">docs.xga.com</a>.</p>\n<hr class=\"footnotes-sep\">\n\n<ol class=\"footnotes-list\">\n<li id=\"footnote-48655-1\" class=\"footnote-item\"><p>We have specific terms for ToB and BoB auctions, namely α and β-auctions respectively. <a href=\"https://ethresear.ch#footnote-ref-48655-1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"footnote-48655-2\" class=\"footnote-item\"><p>Note that this doesn’t exclude the possibility of overwriting an already submitted bundle, if re-submitted before the deadline. <a href=\"https://ethresear.ch#footnote-ref-48655-2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"footnote-48655-3\" class=\"footnote-item\"><p>We are already iterating on designs for captive insurance mechanisms for XGA-style platforms. We will upload a new post detailing some of the possible designs soon. <a href=\"https://ethresear.ch#footnote-ref-48655-3\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n            <p><small>4 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/preconfirmations-on-splitting-the-block-mev-boost-compatibility-and-relays/19837\">Read full topic</a></p>","link":"https://ethresear.ch/t/preconfirmations-on-splitting-the-block-mev-boost-compatibility-and-relays/19837","pubDate":"Mon, 17 Jun 2024 09:40:41 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19837"},"source":{"@url":"https://ethresear.ch/t/preconfirmations-on-splitting-the-block-mev-boost-compatibility-and-relays/19837.rss","#text":"Preconfirmations: On splitting the block, mev-boost compatibility and relays"}},{"title":"IPv6 vs Ethereum?","dc:creator":"peersky","category":"Networking","description":"<p>I started writing this after a few days of unsuccessful attempts to run solo node behind CGNAT, as just a brainbreeze on whether it could be somehow done differently to ease up solo node setup.<br>\nSo far It does not seem to be an answer, however I want to share some thoughts on analogies seen with ipv6 networking to see if anyone has ideas on how this can be useful . .</p>\n<h2><a name=\"ipv6-101-1\" class=\"anchor\" href=\"https://ethresear.ch#ipv6-101-1\"></a>ipv6 101</h2>\n<p>An IPv6 address consists of 128 bits, represented as eight groups of four hexadecimal digits separated by colons. Each group is called a hextet. For example:</p>\n<p><code>2001:0db8:85a3:0000:0000:8a2e:0370:7334</code></p>\n<p>where</p>\n<ul>\n<li>Global Routing Prefix: 2001:0db8 (Assigned by the Regional Internet Registry)</li>\n<li>Subnet ID: 85a3:0000 (Identifies a specific subnet within the network)</li>\n<li>Interface ID: 0000:8a2e:0370:7334 (identify the individual interface or device on the subnet)</li>\n</ul>\n<p>This hierarchical structure allows for efficient routing of IPv6 packets. Routers can quickly determine the destination network based on the global routing prefix, then further refine the path based on the subnet ID.</p>\n<p><em>Multiple gateways</em> from ipv6 subnet may exist to public ipv6 space. Addresses within ipv6 sub network may access global ipv6 address space. Routing protocols such as <a href=\"https://datatracker.ietf.org/doc/html/rfc5340\" rel=\"noopener nofollow ugc\">OSPFv3</a> or <a href=\"https://en.wikipedia.org/wiki/Border_Gateway_Protocol\" rel=\"noopener nofollow ugc\">BGP</a> may be used.</p>\n<h2><a name=\"subnet-gateway-analogy-2\" class=\"anchor\" href=\"https://ethresear.ch#subnet-gateway-analogy-2\"></a>Subnet Gateway analogy</h2>\n<p>Just as an IPv6 router directs traffic to devices within its subnet, an RPC node facilitates communication with nodes and smart contracts within its respective blockchain network.</p>\n<p>When we consider the concept of Chain IDs. In blockchain, Chain IDs are unique identifiers for different networks (e.g., Ethereum Mainnet has Chain ID 1, while various testnets have different IDs). Similarly, in IPv6, a subnet is identified by its unique prefix, which is a portion of the IPv6 address.</p>\n<h2><a name=\"address-analogy-3\" class=\"anchor\" href=\"https://ethresear.ch#address-analogy-3\"></a>Address analogy</h2>\n<p>Since Interface Ids in IPv6 are only 64 bits long, they are too small to fit in 160 bits address of Eth.</p>\n<p>However, what could be useful is using InterfaceIds to identify the nodes in the P2P network, forming VPC for Ethereum.</p>\n<p>In IPv6, organizations or individuals can assign themselves a unique subnet prefix, effectively creating their own independent addressing space.</p>\n<h3><a name=\"cryptography-for-ipv6-address-generation-4\" class=\"anchor\" href=\"https://ethresear.ch#cryptography-for-ipv6-address-generation-4\"></a>Cryptography for IPv6 address generation</h3>\n<p><a href=\"https://en.wikipedia.org/wiki/Secure_Neighbor_Discovery\" rel=\"noopener nofollow ugc\">Secure Neighbor Discovery (SEND)</a> is a security extension to the Neighbor Discovery Protocol (NDP) in IPv6, designed to address the vulnerabilities in the original NDP.</p>\n<p>There are several papers and RFCs (Requests for Comments) relevant to cryptography for IPv6 address generation, particularly focusing on enhancing privacy and security:</p>\n<p><strong><a href=\"https://datatracker.ietf.org/doc/html/rfc3972\" rel=\"noopener nofollow ugc\">RFC 3972</a> - Cryptographically Generated Addresses (CGA)</strong>: This RFC introduces the concept of CGA, where the interface identifier of an IPv6 address is generated using a cryptographic hash function from a public key and other parameters. This approach aims to bind a public key to an address securely, deterring address theft and enhancing authentication.</p>\n<p><strong><a href=\"https://datatracker.ietf.org/doc/html/rfc7721\" rel=\"noopener nofollow ugc\">RFC 7721</a> - Security and Privacy Considerations for IPv6 Address Generation Mechanisms</strong>: This RFC discusses the security and privacy implications of different IPv6 address generation mechanisms, including SLAAC, privacy extensions, and CGAs. It provides recommendations for mitigating potential risks and improving privacy protection.</p>\n<p><strong><a href=\"https://www.researchgate.net/publication/350518202_IPv6_Cryptographically_Generated_Address_Analysis_Optimization_and_Protection\" rel=\"noopener nofollow ugc\">IPv6 Cryptographically Generated Address: Analysis, Optimization and Protection</a></strong>:  This paper delves into the details of CGAs, analyzing their security and performance characteristics. It proposes optimizations to improve the efficiency of CGA generation and suggests additional security measures to strengthen the protection they offer.</p>\n<p><strong><a href=\"https://arxiv.org/pdf/2311.15842\" rel=\"noopener nofollow ugc\">IPv6 Bitcoin-Certified Addresses, Mathieu Ducroux</a></strong>: proposes mechanism for enhancing the security and privacy of IPv6 addresses by leveraging the Bitcoin blockchain.<br>\nIn essence, BCAs are IPv6 addresses where the interface identifier is derived from a Bitcoin address.</p>\n<h2><a name=\"how-could-this-be-beneficial-5\" class=\"anchor\" href=\"https://ethresear.ch#how-could-this-be-beneficial-5\"></a>How could this be beneficial?</h2>\n<p>If we can think of ethereum ecosystem as one big VPN where chains are subnet addressable that potentially solves fragmentation issues, allowing to use already established discovery protocols to route traffic between different nodes, use features like <a href=\"https://en.wikipedia.org/wiki/Multicast_address\" rel=\"noopener nofollow ugc\">multicast</a> etc.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/ipv6-vs-ethereum/19829\">Read full topic</a></p>","link":"https://ethresear.ch/t/ipv6-vs-ethereum/19829","pubDate":"Sat, 15 Jun 2024 21:28:45 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19829"},"source":{"@url":"https://ethresear.ch/t/ipv6-vs-ethereum/19829.rss","#text":"IPv6 vs Ethereum?"}},{"title":"Slot Inclusion Rates and Blob Market Combinatorics","dc:creator":"Evan-Kim2028","category":"Data Science","description":"<h2><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>TLDR</h2>\n<ul>\n<li><strong>Slot inclusion rate</strong>, the number of slots required for a blob to be included in the beacon chain, has a high variance and is higher for some rollups than others.</li>\n<li>The current combinatorics of the blob market has an <strong>integer packing problem</strong>. This is a type of combinatorial optimization that generally involves packing objects of different sizes into a finite number of containers or bins.</li>\n<li>Data suggests that the integer packing problem is contributing more to higher slot inclusion rates than builder censorship.</li>\n</ul>\n<h2><a name=\"introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#introduction-2\"></a>Introduction</h2>\n<p>This post offers a fresh perspective on the current design and constraints of the blob market, presenting additional data (<a href=\"https://blobs.primev.xyz/dashboard\" rel=\"noopener nofollow ugc\">from a blob tracking dashboard created at Primev</a>) on slot inclusion concerning reorg risks, and a combinatorial analysis of the blob market design, revealing an integer packing problem.</p>\n<p>The key metric in this post is the <strong>slot inclusion rate</strong>. The slot inclusion rate indicates the number of slots required for a blob to be included in the beacon chain,<br>\nwith a higher rate signifying a longer inclusion time.</p>\n<p>Recent research on the blob market <a href=\"https://ethresear.ch/t/big-blocks-blobs-and-reorgs/19674\">[1]</a>, <a href=\"https://ethresear.ch/t/blobs-reorgs-and-the-role-of-mev-boost/19783\">[2]</a>, <a href=\"https://mirror.xyz/preconf.eth/cxUO8pPBfqnqAlzFUzoEUa6sgnr68DRmsNhBWPb2u-c\" rel=\"noopener nofollow ugc\">[3]</a> has focused on how larger blobs increase reorg risk due to higher latency. This could incentivize builder censorship to reduce latency by excluding blobs from blocks.</p>\n<p>Despite the blob market being under capacity and the base fee remaining at 1 wei, research <a href=\"https://mirror.xyz/preconf.eth/6lZYL62DR9U14KC7wCC4RHReVdHcBeMy5PKeHVbPq5k\" rel=\"noopener nofollow ugc\">[4]</a> shows that rollups like Optimism and Base often have high slot inclusion rates, taking more than five slots to be included. Given the underutilized market, this seems counterintuitive, suggesting possible latency censorship. However, the current blob submission strategies and blob market combinatorics suggest that higher slot inclusion rates may indicate increased competition between blob producers rather than builder censorship.</p>\n<h2><a name=\"blob-submission-strategies-3\" class=\"anchor\" href=\"https://ethresear.ch#blob-submission-strategies-3\"></a>Blob Submission Strategies</h2>\n<p>The below table <a href=\"https://analytics.mev-commit.xyz/dashboard\" rel=\"noopener nofollow ugc\">from the dashboard</a> shows a 7 day snapshot of the largest blob market participants.</p>\n<p>There are now 3 major strategies across the number of blobs:</p>\n<ul>\n<li>submit the max 5-6 blobs at a time (blast, base, linea, optimism)</li>\n<li>submit 3-4 blobs at a time (arbitrum, zksync)</li>\n<li>submit 1-2 blobs at a time (taiko, metal, paradex, scroll)<br>\n<div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/e/7e768a0ed198c966965d14171b97d1c2600eea7d.png\" data-download-href=\"https://ethresear.ch/uploads/default/7e768a0ed198c966965d14171b97d1c2600eea7d\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/e/7e768a0ed198c966965d14171b97d1c2600eea7d_2_690x244.png\" alt=\"image\" data-base62-sha1=\"i2K85Le5aG0E01DYzWaN2sSlyfr\" width=\"690\" height=\"244\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/e/7e768a0ed198c966965d14171b97d1c2600eea7d_2_690x244.png, https://ethresear.ch/uploads/default/optimized/3X/7/e/7e768a0ed198c966965d14171b97d1c2600eea7d_2_1035x366.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/7/e/7e768a0ed198c966965d14171b97d1c2600eea7d_2_1380x488.png 2x\" data-dominant-color=\"F5F5F5\"></a></div></li>\n</ul>\n<p>Aggregating blobs into fewer transactions reduces transaction expenses (base fee, blob fee, priority fee) but increases slot inclusion times. In contrast, smaller blob transactions improve slot inclusion times at the cost of higher transaction expenses.</p>\n<h2><a name=\"slot-inclusion-rates-4\" class=\"anchor\" href=\"https://ethresear.ch#slot-inclusion-rates-4\"></a>Slot Inclusion Rates</h2>\n<p>The next chart displays a time series overlay of base block demand (total transaction fees and base fee in gwei) with the slot inclusion rate for each blob transaction. It shows high slot inclusion rates, up to 30 slots, even during periods of low blockspace demand.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/3/832319c888134f3fe0b465411923147c0c85c5fa.png\" data-download-href=\"https://ethresear.ch/uploads/default/832319c888134f3fe0b465411923147c0c85c5fa\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/3/832319c888134f3fe0b465411923147c0c85c5fa_2_690x258.png\" alt=\"image\" data-base62-sha1=\"iI5KB1hQoIHBSx4Zrn6XjHOxa3w\" width=\"690\" height=\"258\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/3/832319c888134f3fe0b465411923147c0c85c5fa_2_690x258.png, https://ethresear.ch/uploads/default/original/3X/8/3/832319c888134f3fe0b465411923147c0c85c5fa.png 1.5x, https://ethresear.ch/uploads/default/original/3X/8/3/832319c888134f3fe0b465411923147c0c85c5fa.png 2x\" data-dominant-color=\"F0E9F4\"></a></div><p></p>\n<p>The table mentioned earlier above contains the average slot inclusion rate for each rollup. Base, which submits the largest blobs in each transaction has the highest, averaging 13 slots. Taiko has the lowest average at 1.7 slots and submits only single blobs for each transaction right now.</p>\n<p><strong>Base slot inclusion rate:</strong><br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/5/a5f9d2f0d94388d88993444ae9da999347121e7e.png\" data-download-href=\"https://ethresear.ch/uploads/default/a5f9d2f0d94388d88993444ae9da999347121e7e\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/5/a5f9d2f0d94388d88993444ae9da999347121e7e_2_690x300.png\" alt=\"image\" data-base62-sha1=\"nGi1JOQb8r6Poj53zBgfoS98rZY\" width=\"690\" height=\"300\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/5/a5f9d2f0d94388d88993444ae9da999347121e7e_2_690x300.png, https://ethresear.ch/uploads/default/original/3X/a/5/a5f9d2f0d94388d88993444ae9da999347121e7e.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/5/a5f9d2f0d94388d88993444ae9da999347121e7e.png 2x\" data-dominant-color=\"ECF4F9\"></a></div><p></p>\n<p>taiko slot inclusion rate<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/e/ce84eb73e15b668adaa7dc811f23e8c3606000ee.png\" data-download-href=\"https://ethresear.ch/uploads/default/ce84eb73e15b668adaa7dc811f23e8c3606000ee\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/e/ce84eb73e15b668adaa7dc811f23e8c3606000ee_2_690x300.png\" alt=\"image\" data-base62-sha1=\"tsX8yZyP3DLUSwcucVlIRDmKc5U\" width=\"690\" height=\"300\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/e/ce84eb73e15b668adaa7dc811f23e8c3606000ee_2_690x300.png, https://ethresear.ch/uploads/default/original/3X/c/e/ce84eb73e15b668adaa7dc811f23e8c3606000ee.png 1.5x, https://ethresear.ch/uploads/default/original/3X/c/e/ce84eb73e15b668adaa7dc811f23e8c3606000ee.png 2x\" data-dominant-color=\"F8F9FB\"></a></div><p></p>\n<h2><a name=\"builder-slot-inclusion-rates-5\" class=\"anchor\" href=\"https://ethresear.ch#builder-slot-inclusion-rates-5\"></a>Builder Slot Inclusion Rates</h2>\n<p>This table examines slot inclusion rates from the builder’s perspective, including the number of blocks, blob transactions, average blob count, and priority fees collected.</p>\n<p>A higher slot inclusion rate means a blob has waited longer to be included in a block. An efficiency metric would be to have the lowest possible slot inclusion rate, indicating that builders are including blobs sooner rather than later.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/f/9fe6938327d570742a8b7f278788cacfa4df81ca.png\" data-download-href=\"https://ethresear.ch/uploads/default/9fe6938327d570742a8b7f278788cacfa4df81ca\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/original/3X/9/f/9fe6938327d570742a8b7f278788cacfa4df81ca.png\" alt=\"image\" data-base62-sha1=\"mOxVlZ99uJ62bjZiEcpsOjQArl8\" width=\"690\" height=\"211\" data-dominant-color=\"2C2C2C\"></a></div><p></p>\n<p>Builders like Titan and Beaverbuild have more efficient blob slot inclusion rates than vanilla builders. They also have the lowest average blobs per block. This could be due to their efficiency in accepting strategies like Taiko blobs over other block builders.</p>\n<h2><a name=\"combinatorics-6\" class=\"anchor\" href=\"https://ethresear.ch#combinatorics-6\"></a>Combinatorics</h2>\n<p><a href=\"https://colab.research.google.com/drive/1EeRpWjb0meIi53IyyyZu7QWmg8HqVAMr#scrollTo=PDAJADyB24Jv\" rel=\"noopener nofollow ugc\">This notebook</a> uses dynamic programming to count the number of combinations of blobs for the current blob market. Given the current 6 blob per block capacity and 6 blobs per block, there are 11 possible combinations.</p>\n<p><strong>Occurrences of each number:</strong><br>\n1: 19<br>\n2: 8<br>\n3: 4<br>\n4: 2<br>\n5: 1<br>\n6: 1</p>\n<p>A trivial observation is that there is only one combination in which a block can fit 5 or 6 blobs. Since 4 out of 10 rollups submit these 5 and 6 blob transactions, there will only be one winner. Additionally, a single 1-blob transaction can “censor” a 6-blob transaction for an entire slot by being accepted first.</p>\n<p>The combinatorics of the current blob market size suggest that the small size itself is causing higher slot inclusion problems, rather than blob censorship latency. This indicates that censorship is not from builders but from competition among blob users.</p>\n<p>This raises an important question: what is the optimal maximum number of blobs allowed in a block relative to the maximum number that can fit in a block? Would the combinatorics be more favorable if the maximum blob size were 3 instead of 6? Would it be better to allow 9 blobs per block instead of 8? There is an economic incentive to group blobs as large as possible to save on costs, which disproportionately favors larger rollups over smaller ones until blob sharing becomes feasible.</p>\n<h2><a name=\"bidding-strategies-7\" class=\"anchor\" href=\"https://ethresear.ch#bidding-strategies-7\"></a>Bidding Strategies</h2>\n<p>Currently, blobs use static bidding strategies, generally resubmitting their blobs if their bids sit in the mempool for too long. This shows a certain level of insensitivity to slot inclusion for each rollup. If a blob is delayed for 100 slots, there seem to be no consequences or incentives to increase slot inclusion rates at this time.</p>\n<p>The two charts below show sample bidding strategies used by Base and Taiko, just two examples of the rollup strategies available on the dashboard. Base averages a priority fee of 4.5 gwei, while Taiko averages 2.9 gwei. There is no correlation between priority bids and base fee fluctuations.</p>\n<p><strong>base:</strong><br>\n<img src=\"https://ethresear.ch/uploads/default/original/3X/8/7/8785ccb0b147a318d6426a694bf7697d3f1a5383.png\" alt=\"image\" data-base62-sha1=\"jkT7BVrCBp1A1a796bRfQpIBCcb\" width=\"501\" height=\"336\"></p>\n<p><strong>taiko:</strong><br>\n<img src=\"https://ethresear.ch/uploads/default/original/3X/9/1/91bab571ac6836399edf78b7c7ce757ad62cf2ed.png\" alt=\"image\" data-base62-sha1=\"kNbfNQ1fogFklcVZEFN0u6slojr\" width=\"501\" height=\"336\"></p>\n<p>Resubmitting blobs through the mempool is expensive and generally not recommended as a good practice. This creates the problem of how blob producers can become more competitive in their bidding strategies if they need to make their slot inclusion rates more efficient.</p>\n<p>One solution is to use preconfirmations. For example, using a protocol such as mev-commit to attach preconf bids to blob transactions would allow rollups to dynamically adjust their bids without having to resubmit blobs into the mempool. A stronger solution would be <a href=\"https://ethresear.ch/t/blob-preconfirmations-with-inclusion-lists-to-mitigate-blob-contention-and-censorship/19150\">to receive preconfirmations from proposers</a> to guarantee that builders wouldn’t be able to censor blobs.</p>\n<h3><a name=\"conclusion-8\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-8\"></a>Conclusion</h3>\n<p>Analysis of slot inclusion rates and blob market combinatorics reveals a complex interplay between efficient slot inclusion, competition, and potential censorship. While current data suggests that high slot inclusion rates are primarily driven by competition among blob users, there remain several unanswered questions:</p>\n<ul>\n<li>What is the optimal maximum number of blobs per block to balance efficiency and fairness?</li>\n<li>How can blob producers develop more competitive bidding strategies?</li>\n<li>Could the implementation of dynamic bidding strategies or preconfirmations significantly reduce slot inclusion times?</li>\n<li>What long-term effects might increased competition and potential latency censorship have on the blob market?</li>\n</ul>\n<p>The combinatorics of the blob market are a fundamental factor affecting slot inclusion efficiency and cost. By understanding and optimizing these combinatorial constraints, it is possible to enhance market dynamics, reduce costs, and improve transaction efficiency for all participants. Further research and experimentation are needed to address these questions and optimize the blob market for all participants.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/slot-inclusion-rates-and-blob-market-combinatorics/19817\">Read full topic</a></p>","link":"https://ethresear.ch/t/slot-inclusion-rates-and-blob-market-combinatorics/19817","pubDate":"Fri, 14 Jun 2024 16:47:05 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19817"},"source":{"@url":"https://ethresear.ch/t/slot-inclusion-rates-and-blob-market-combinatorics/19817.rss","#text":"Slot Inclusion Rates and Blob Market Combinatorics"}},{"title":"A simple, small, mev-boost compatible preconfirmation idea","dc:creator":"FabrizioRomanoGenove","category":"Layer 2","description":"<p><strong>Disclaimer</strong>: This post will not contain any nice images, because I am artistically inept.</p>\n<p>The reasons why I’m writing this are the following:</p>\n<ol>\n<li>Preconfs are a very hot topic right now and many people are working on them;</li>\n<li>As usual, some of the proposed solutions advocate for punching changes all the way into the main Ethereum protocol. I’m personally not a fan of this, since life is already full of <em>oh my God, what have I done?™</em> moments and <em>more drama™</em> is the least thing everyone probably needs.</li>\n<li>MEV-boost is probably the <em>only</em> thing this community has really almost universally agreed upon since MEV has been a thing. So I’d very much try to preserve backwards-compatibility with MEV-boost and generalize on this than coming up with more innovative ways to balkanize our ecosystem even further.</li>\n</ol>\n<h2><a name=\"a-primer-on-mev-boost-1\" class=\"anchor\" href=\"https://ethresear.ch#a-primer-on-mev-boost-1\"></a>A primer on MEV-boost</h2>\n<p>This section exists just so that everyone is on the same page. Feel free to skip it or to insult me if you think I summarised things stupidly.</p>\n<p>In layman terms, MEV-boost works like this:</p>\n<ol>\n<li>Proposer polls the relayer(s) for their best blocks;</li>\n<li>Relayer(s) send their best block headers to proposer;</li>\n<li>Proposer picks the best block by comparing the block headers received and the block built in-house.</li>\n<li>For an in-house block, proposer just signs and broadcasts. For a mev-boost block, proposer signs the header. Relay will broadcast the complete block revealing the payload.</li>\n</ol>\n<p>This mechanism is nice because the only party that builders have to trust is relayer: Proposer cannot unbundle blocks and scam builders.</p>\n<h2><a name=\"the-actual-idea-2\" class=\"anchor\" href=\"https://ethresear.ch#the-actual-idea-2\"></a>The actual idea</h2>\n<p>The idea I have in mind works towards extending mev-boost by allowing for preconfs (and most likely for a lot of other stuff if one wants to). Notably, it does not change points 2,3,4 in the previous section, but only point 1.</p>\n<p>Suppose proposer has a stash of preconfed txs on the side. The only thing the idea assumes is the following:</p>\n<blockquote>\n<p>By the time Proposer starts polling, it needs to have a finalized lists of preconfed txs to include.</p>\n</blockquote>\n<p>The reason for this will become clear shortly. Having this list at hand, proposer sends a signed JSON object to the relayer when it polls, containing the preconfed txs. This object could look, for instance, like this:</p>\n<pre data-code-wrap=\"JSON\"><code class=\"lang-JSON\">{\n    proposer: address,\n    slotNumber: int,\n    gasUsed: int,\n    blobsUsed: int.\n    mergingPolicy: int,\n    mustBeginWith: txBundle,\n    mustContain: txBundle,\n    mustOmit: txBundle,\n    mustEndWith: txBundle,\n    otherStuff: JSON,\n    signature : signature\n}\n</code></pre>\n<p><strong>This design is just an idea. It is by no means fixed yet and most likely can be improved upon both in conceptual and performance terms, so take it with a grain of salt.</strong><br>\nThe fields <code>proposer</code> and <code>slotNumber</code> are obvious. The fields <code>mergingPolicy</code>, <code>mustBeginWith</code>, <code>mustContain</code>, <code>mustOmit</code>, <code>mustEndWith</code> can all be empty: They contain bundles of transactions that must (or must not) be included in the block. These fields are, effectively, the ones that proposer can use to signal relayer that 'hey, I need the block to respect these requirements, because of previous agreement I made with other parties.\"</p>\n<p>How the proposer comes to define this json object is not our concern, and is outside of the scope of this idea. Just for the sake of clarity though, let’s consider some examples: For instance, <a href=\"https://docs.xga.com\" rel=\"noopener nofollow ugc\">XGA</a>, one of the projects <code>20[ ]</code> is contributing to, provides preconfs as tokenized bottom-of-block space. As such, XGA-style preconfs will produce objects where only <code>mustEndWith</code> is not empty.</p>\n<p>The fields <code>gasUsed</code> and <code>blobsUsed</code> tell the relay how much gas and blobs the ‘preconf space’ already claimed. <code>otherStuff</code> exists to be able to extend this standard in the future without <em>more drama™</em>.</p>\n<h3><a name=\"merging-policies-3\" class=\"anchor\" href=\"https://ethresear.ch#merging-policies-3\"></a>Merging policies</h3>\n<p>The <code>mergingPolicy</code> fields instructs the relay about how to deal with all this information. This is fundamental because, in the end, the relay will still run a traditional mev-boost auction for the remaining blockspace. As soon as a block is built by more than one party there’s a risk that different parties may step up on each other’s toes. As such, <code>mergingPolicy</code> serves as a well-defined conflict resolution policy. If you need a mental reference, think about git conflicts and automated ways to solve them if you so like.</p>\n<p>How to define merging policies is up for debate. The community could agree on a common repository where merging policies are defined, voted and agreed upon, and where merging algos are explicitly provided. So, for instance, one merging policy could be:</p>\n<blockquote>\n<p>If the payload coming from the builder contains a transaction that also appears in the preconf bundle, deal with it in the following way:</p>\n</blockquote>\n<p>As said above, XGA sells BOB as preconfs, and leaves TOB open for traditional mev-boost auctions. As such, it has already defined and implemented a merging policy for its bottom of the block case, which will hopefully be open sourced soon.</p>\n<h3><a name=\"what-does-the-relay-do-4\" class=\"anchor\" href=\"https://ethresear.ch#what-does-the-relay-do-4\"></a>What does the relay do?</h3>\n<p>This is probably already kinda clear at this point, but to make it explicit: The relay receives this signed JSON object when the proposer polls. What should it do with it? First of all, it should make some of these fields public to the builders, such as <code>mergingPolicy</code>, <code>gasUsed</code>, <code>blobsUsed</code> and <code>mustOmit</code>. This way builders will know what they can build.</p>\n<p>When a block from a builder is received, the relayer will <strong>unbundle</strong> the block and apply the merging policy to merge it with the preconfed txs. The <strong>relay</strong> will sign the block header, and send it to the proposer.</p>\n<p>From the POV of a builder, everything is kinda the same. They create their block using the info provided by the relay (in the simplest case this just means using slightly less gas than limit), and submit it as their bid.</p>\n<p>From this point on, everything works as in traditional MEV-boost.</p>\n<h2><a name=\"analysis-5\" class=\"anchor\" href=\"https://ethresear.ch#analysis-5\"></a>Analysis</h2>\n<p>Ok, so let’s run a rapid analysis of this thing.</p>\n<h3><a name=\"pros-6\" class=\"anchor\" href=\"https://ethresear.ch#pros-6\"></a>Pros</h3>\n<ol>\n<li>\n<p>Changes to MEV-boost proper are really minimal. We just need to define an API that MEV-boost must listen to to build the polling payload, and redefine the polling logic.</p>\n</li>\n<li>\n<p>Very little work from Proposer’s side. More work may be needed depending on the preconf system a given proposer wants to use, but then again this is out of the scope of this idea.</p>\n</li>\n<li>\n<p>Very little work from builder’s side unless people go overly crazy with merging policies. I do not think this is necessarily a problem tho as an overly deranged merging policy would result in builders not submitting anything, and most likely in relayers not taking bets in the first place. So I’d bet that this could pretty much evolve as a ‘let the markets decide’ thing.</p>\n</li>\n<li>\n<p>This idea is straightforwardly backwads-compatible with traditional MEV-boost: If the polling payload is empty, we collapse to a traditional MEV-boost auction with no other requisites.</p>\n</li>\n<li>\n<p>This idea allows for gradual phasing out of MEV-boost if the community so decides. For instance, proposers may agree to produce bundles where <code>usedGas</code> is a very low parameter in the beginning (it won’t exceed 5M for XGA, for instance), meaning that the majority of blockspace would come from traditional building, with only a tiny part being preconfs or more generally ‘other stuff’. This parameter may then be increasingly crancked up or varied with time if the community so decides, effectively phasing out traditional block building in favor of ‘something else’. In this respect yes, I know I’m being vague here but when it comes to how this thing could be adopted I can only speculate.</p>\n</li>\n<li>\n<p>This system can be extended in many ways, and it is flexible. Merging policies could be defined democratically, and the polling info could be extended effectively implementing something akin to PEPSI, for instance. Another possible extension/evolution can be using <code>otherStuff</code> to define Jito-style auctions. I mean, there’s really a plethora of ways to go from here.</p>\n</li>\n<li>\n<p>The polling payload is signed by the proposer, and the block header is signed by the relayer. This keeps both parties in check as we accumulate evidence for slashing both. For instance:</p>\n<ul>\n<li>Imagine I get some preconf guarantee from proposer and that I have evidence of this. Again how this happens is outside of the scope of this post, as this mechanism is agnostic wrt how preconfs are negotiated.</li>\n<li>Now suppose furthermore than my preconfed tx does <strong>not</strong> land in the block.</li>\n<li>I can use the chain of signed objects to challenge both relayer and proposer. If my tx wasn’t in the polling info signed by proposer, that’s proposer’s fault. On the other hand, if it was, but it wasn’t in the block, then it’s relayer’s fault. I think this is enough to build a slashing mechanism of sorts, which could for instance leverage some already available restaking solution.</li>\n</ul>\n<p><strong>Note:</strong> If there’s enough interest in this idea, we as 20[  ] can throw some open games at it and simulate the various scenarios. Let me know!</p>\n</li>\n<li>\n<p><strong>Ethereum protocol doesn’t see any of this.</strong> So if it fucks up, we just call it a day and retire in good order without having caused the apocalypse: Relays will only accept empty payloads, proposers will only send empty payloads, and we’ll essentially revert to mev-boost without anyone having to downgrade their infra. I think this is the main selling point of this idea: The amount of ways to make stuff explode in mev-related infraland are countless, so this whole idea was built with a ‘it has to be failsafe’ idea in mind.</p>\n</li>\n</ol>\n<h3><a name=\"cons-7\" class=\"anchor\" href=\"https://ethresear.ch#cons-7\"></a>Cons</h3>\n<ol>\n<li>\n<p>Relayer must unbundle builder blocks to do the merging. I do not think this creates a huge trust issue as relayer can already do this as of now: In general, a relayer that scams builders is a relayer that won’t be used again, and will go out of business quickly.</p>\n</li>\n<li>\n<p>Relayer must do computational work. This is probably the major pain point. This idea entails slightly more latency, as an incoming bid cannot be relayed instantly because <code>mergingPolicy</code> has to be applied. The computational penalty is furthermore heavily dependent on how deranged the merging policy is. As a silver lining, this computational work is <em>provable</em> as both the merging info and the resulting block are signed. The result is that we have <strong>provable evidence to remunerate a relay for its work if we want to</strong>, possibly solving a major pain point for relayers in traditional mev-boost.</p>\n</li>\n<li>\n<p>Relayer is slashable if it screws up. Again, how this should be implemented is outside of the scope of this idea as this mechanism only accounts for the needed trail of evidence to implement slashing, but does not deal with the slashing per sé. Anyway, it is still worth reasoning on the possible consequences of this: If slashing policies are implemented, Relayers will most likely need to provide some collateral or implement some form of captive insurance. Again, this may signify more complexity on one hand but also opportunity on the other, as relayers may for instance decide to tokenize said collateral and develop mechanisms to make money out of these newly created financial instruments. As relayers are private enterprises I’ll leave these considerations to the interested parties.</p>\n</li>\n<li>\n<p><strong>Polling info must stay fixed</strong>. This is related to point 3 above and point 6 of the <a href=\"https://ethresear.ch#pros\">Pros</a> subsection: If the polling info changes all the time, this means huge computational stress for the relayer, and it furthermore allows for malicious behavior from the proposer: For instance, a proposer could send two different polling payloads, and include a given preconfed tx only in one of them. How to resolve these inconsistencies is an open question. In my opinion, the wisest and simplest thing to do would be requiring the polling info to be fixed, meaning that if proposer signs conflicting payloads for the same slot this should be considered akin to equivocation, and thus a slashable offence.</p>\n<p>By the way, the consequence of this is that the idea proposed here necessarily excludes some preconf use cases. This is related to my comment <a href=\"https://ethresear.ch/t/strawmanning-based-preconfirmations/19695/2\">here</a> and I think it is unavoidable if we want to keep MEV-boost around. As the majority  of revenue from MEV comes precisely from the bids of very refined, high-time frame searchers, and as I am quite sure that validators don’t want to give this money up at least for now, ‘leaving these players be’ by ruling out such preconf use-cases is in my opinion the most practical option, and exactly the rationale motivating this idea.</p>\n</li>\n</ol>\n<h2><a name=\"closing-remarks-8\" class=\"anchor\" href=\"https://ethresear.ch#closing-remarks-8\"></a>Closing remarks</h2>\n<p>That’s it. If the idea is interesting enough let me know, I’ll be happy to start a discussion around it.  The <code>20[ ]</code> team will also be around at EthCC if you want to discuss this in person.</p>\n            <p><small>8 posts - 5 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/a-simple-small-mev-boost-compatible-preconfirmation-idea/19800\">Read full topic</a></p>","link":"https://ethresear.ch/t/a-simple-small-mev-boost-compatible-preconfirmation-idea/19800","pubDate":"Thu, 13 Jun 2024 13:33:55 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19800"},"source":{"@url":"https://ethresear.ch/t/a-simple-small-mev-boost-compatible-preconfirmation-idea/19800.rss","#text":"A simple, small, mev-boost compatible preconfirmation idea"}},{"title":"One-bit-per-attester inclusion lists","dc:creator":"vbuterin","category":"Block proposer","description":"<p>Inclusion lists are a technology for distributing the authority for choosing which transactions to include into the next block. Currently, the best idea for them is to have an actor that is from a set that is likely to be highly decentralized (eg. consensus block proposers) generate the list. This authority is decoupled from the right to <em>order</em> (or <em>prepend</em>) transactions, which is an inherently economies-of-scale-demanding and so likely to be highly concentrated in practice.</p>\n<p>But what if we could avoid putting the responsibility onto a <em>single</em> actor, and instead put it on a <em>large set of actors</em>? In fact, we can even do it in such a way that it’s semi-deniable: from each attester’s contribution, there is no clear evidence of which transaction they included, because one individual piece of provided data could come from multiple possible transactions.</p>\n<p>This post proposes a possible way to do this.</p>\n<h3><a name=\"mechanism-1\" class=\"anchor\" href=\"https://ethresear.ch#mechanism-1\"></a>Mechanism</h3>\n<p>When the block for slot N is published, let <code>seed</code> be the RANDAO_REVEAL of the block. Suppose for convenience that each transaction is under <code>T</code> bytes (eg. <code>T = 500</code>); we can say in this initial proposal that larger transactions are not supported. We put all attesters for that slot into groups of size <code>2 * T</code>, with <code>k = attesters_per_slot / (2 * T)</code> groups.</p>\n<p>Each attester is chosen to be the j’th attester of the i’th group. They identify the highest-priority-fee-paying valid transaction which was published before the slot N block, and where <code>hash(seed + tx)</code> is between <code>2**256 / k * i</code> and <code>2**256 / k * (i+1)</code>. They erasure-code that transaction to <code>2T</code> bits, and publish the j’th bit of the erasure encoding as part of their attestation.</p>\n<p>When those attestations are included in the next block, an algorithm such as <a href=\"https://en.wikipedia.org/wiki/Berlekamp%E2%80%93Welch_algorithm\">Berlekamp-Welch</a> is used to try to extract the transaction from the provided attester bits.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/e/deedccb04e5bb133ccacdbe2c2c17d1e5abdc3ce.png\" data-download-href=\"https://ethresear.ch/uploads/default/deedccb04e5bb133ccacdbe2c2c17d1e5abdc3ce\" title=\"attester_inclusion_list.drawio\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/e/deedccb04e5bb133ccacdbe2c2c17d1e5abdc3ce_2_690x271.png\" alt=\"attester_inclusion_list.drawio\" data-base62-sha1=\"vO7tRuHbTGDsKip5ajhg58TZP9c\" width=\"690\" height=\"271\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/e/deedccb04e5bb133ccacdbe2c2c17d1e5abdc3ce_2_690x271.png, https://ethresear.ch/uploads/default/original/3X/d/e/deedccb04e5bb133ccacdbe2c2c17d1e5abdc3ce.png 1.5x, https://ethresear.ch/uploads/default/original/3X/d/e/deedccb04e5bb133ccacdbe2c2c17d1e5abdc3ce.png 2x\" data-dominant-color=\"F2F4F4\"></a></div><p></p>\n<p>The Reed-Solomon decoding will fail in two cases:</p>\n<ol>\n<li>If too many attesters are dishonest</li>\n<li>If attesters have different views about whether a particular transaction was published before or after the block, and so they are split between providing bits for two or more different transactions.</li>\n</ol>\n<p>Note that in case (2), if the transactions are sufficiently small, advanced <a href=\"https://www.cs.cmu.edu/~venkatg/teaching/codingtheory/notes/notes10.pdf\">list decoding algorithms</a> may nevertheless be able to recover several or all of the transactions!</p>\n<p>The next block proposer will be able to see which transactions the attestations imply, and so they will be able to block transactions from the list by selectively failing to include attestations. This is an unavoidable limitation of the scheme, though it can be mitigated by having a fork choice rule discount blocks that fail to include enough attestations.</p>\n<p>Additionally, the mechanism can be modified so that if a transaction has not been included for 2+ slots, <em>all</em> attesters (or a large fraction thereof) attempt to include it, and so any block that fails to include the transaction would lose the fork choice. One simple way to do this is to score transactions not by <code>priority_fee</code>, but by <code>priority_fee * time_seen</code>, and at the same time have a rule that a transaction that has been seen for <code>k</code> slots is a candidate not just for attester group <code>i</code>, but also for attester group <code>i...i+k-1</code> (wrapping around if needed).</p>\n            <p><small>8 posts - 7 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/one-bit-per-attester-inclusion-lists/19797\">Read full topic</a></p>","link":"https://ethresear.ch/t/one-bit-per-attester-inclusion-lists/19797","pubDate":"Thu, 13 Jun 2024 09:33:36 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19797"},"source":{"@url":"https://ethresear.ch/t/one-bit-per-attester-inclusion-lists/19797.rss","#text":"One-bit-per-attester inclusion lists"}},{"title":"Torrents and EIP-4444","dc:creator":"parithosh","category":"Execution Layer Research","description":"<h1><a name=\"torrents-and-eip-4444-1\" class=\"anchor\" href=\"https://ethresear.ch#torrents-and-eip-4444-1\"></a>Torrents and EIP-4444</h1>\n<h3><a name=\"introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#introduction-2\"></a>Introduction</h3>\n<p>EIP-4444 aims to limit the historical data that Ethereum nodes need to store. This EIP has two main problems that require solutions: Format for history archival and Methods to reliably retrieve history. The client teams have agreed on a common <a href=\"https://ethresear.ch/t/era-archival-files-for-block-and-consensus-data/13526\">era files</a> format, solving one half of the problem. The second half of the problem, i.e Method to reliably retrieve history will likely not rely on a single solution. Some client teams may rely on the <a href=\"https://ethereum.org/en/developers/docs/networking-layer/portal-network/\" rel=\"noopener nofollow ugc\">Portal network</a>, some rely on torrents, others might rely on some form of snapshot storage.</p>\n<h3><a name=\"torrents-for-eip-4444-3\" class=\"anchor\" href=\"https://ethresear.ch#torrents-for-eip-4444-3\"></a>Torrents for EIP-4444</h3>\n<p>Torrents offer us a unique way to distribute this history, torrents as a technology have existed since 2001 and have withstood the test of time. Some client teams, such as <a href=\"https://github.com/ledgerwatch/erigon\" rel=\"noopener nofollow ugc\">Erigon</a> already include a method to sync via torrents that has run in production systems.</p>\n<p>In order to make some progress on the Torrent approach of history retrieval, the files would first be required. So an era file export was made on a <a href=\"https://github.com/ethereum/go-ethereum/\" rel=\"noopener nofollow ugc\">geth</a> running version <code>v1.14.3</code> . To explore the initial idea, the torrent approach chose pre-merge data as a target. The merge occurred at block height <a href=\"https://etherscan.io/block/15537393\" rel=\"noopener nofollow ugc\">15537393</a>, meaning all pre-merge data could be archived by choosing a range of 0 to block 15537393. The era files were then created using the command <code> geth --datadir=/data export-history /data/erafiles 0 15537393</code>.</p>\n<p>Once the era files were created, they were verified using the command <code>era verify roots.txt</code>, with the source of the <code>roots.txt</code> file being <a href=\"https://gist.githubusercontent.com/lightclient/528b95ffe434ac7dcbca57bff6dd5bd1/raw/fd660cfedb65cd8f133b510c442287dc8a71660f/roots.txt\" rel=\"noopener nofollow ugc\">this</a>. The entire process has been outlined in <a href=\"https://github.com/ethereum/go-ethereum/pull/26621#issuecomment-1434023464\" rel=\"noopener nofollow ugc\">this PR comment</a>. The verification output was found to be this log message: <code>Verifying Era1 files             verified=1896,  elapsed=5h21m49.184s</code></p>\n<p>The output era files were then uploaded onto a server and a torrent was created using the software <code>mktorrent</code>. An updated list of trackers was found using the github repo <a href=\"https://github.com/ngosang/trackerslist\" rel=\"noopener nofollow ugc\">trackerslist</a>. The trackers chosen were a mix of http/https/udp in order to allow for maximal compatibility. The chunk size of the torrent was chosen to be 64MB, which was the max allowed and recommended value for a torrent of this size.</p>\n<p>The result of this process is now a torrent of size 427GB. This torrent can be imported with <a href=\"https://ethresear.ch\">this magnet link</a>  and a torrent client would be able to pull the entire pre-merge history as era files.</p>\n<h4><a name=\"tradeoffs-4\" class=\"anchor\" href=\"https://ethresear.ch#tradeoffs-4\"></a>Tradeoffs</h4>\n<p>There are of course some tradeoffs with torrents, as with many of the other EIP-4444 approaches:</p>\n<ul>\n<li>Torrents rely on a robust set of peers to share the data, there is however no way to incentivise or ensure that this data is served by peers</li>\n<li>A torrent client would need to be included in the client releases and some client languages might not have a torrent library</li>\n<li>Torrents would de-facto expect the nodes to also seed the content they leech, this would increase node network requirements if they choose to store history</li>\n<li>The JSON-RPC response needs to take into account that it may not have the data to return a response in case the user decides to not download pre-merge data</li>\n</ul>\n<h3><a name=\"conclusion-5\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-5\"></a>Conclusion</h3>\n<p>A client could potentially include this torrent into their releases and avoid syncing pre-merge data by default, which could then be fetched via torrent if a user requests it (perhaps with a flag similar to <code>--preMergeData=True</code>). The client could also hardcode the hash of the expected data, ensuring that the data retrieved matches what they expect.</p>\n<h3><a name=\"instructions-for-re-creating-torrent-6\" class=\"anchor\" href=\"https://ethresear.ch#instructions-for-re-creating-torrent-6\"></a>Instructions for re-creating torrent:</h3>\n<ul>\n<li>Sync a geth node using the latest release</li>\n<li>Stop the geth node and run <code>geth --datadir=/data export-history /data/erafiles 0 15537393</code> to export the data in a folder called <code>data/erafiles</code>(Warning, this will use ~427GB of additional space)</li>\n<li>Use the <code>mktorrent</code> tool or the <code>rutorrent</code> GUI to create a torrent. Choose the <code>/data/erafiles/</code> folder as the source for the data. Next, obtain the latest open trackers from <a href=\"https://github.com/ngosang/trackerslist?tab=readme-ov-file\" rel=\"noopener nofollow ugc\">this github repository</a>. Choose a healthy mix of udp/http/https trackers and choose the chunk size of the torrent to be 64MB.</li>\n<li>The tool should output a <code>.torrent</code> file, the GUI will also allow you to copy a magnet link if that is required</li>\n</ul>\n<h3><a name=\"instructions-for-download-and-verification-of-torrent-data-7\" class=\"anchor\" href=\"https://ethresear.ch#instructions-for-download-and-verification-of-torrent-data-7\"></a>Instructions for download and verification of torrent data:</h3>\n<ul>\n<li>Download the torrent data with this magnet link and in a torrent client of your choice: <a href=\"https://ethresear.ch\">link</a></li>\n<li>Clone the latest release of <a href=\"https://github.com/ethereum/go-ethereum/\" rel=\"noopener nofollow ugc\">geth</a> and install the dependencies</li>\n<li>Run <code>make all</code> in the geth repository to build the <code>era</code> binary</li>\n<li>Fetch the <code>roots.txt</code> file with the command: <code>wget https://gist.githubusercontent.com/lightclient/528b95ffe434ac7dcbca57bff6dd5bd1/raw/fd660cfedb65cd8f133b510c442287dc8a71660f/roots.txt</code></li>\n<li>Run <code>era verify roots.txt</code> in the folder to verify the integrity of the data</li>\n</ul>\n            <p><small>15 posts - 5 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/torrents-and-eip-4444/19788\">Read full topic</a></p>","link":"https://ethresear.ch/t/torrents-and-eip-4444/19788","pubDate":"Wed, 12 Jun 2024 09:35:32 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19788"},"source":{"@url":"https://ethresear.ch/t/torrents-and-eip-4444/19788.rss","#text":"Torrents and EIP-4444"}},{"title":"Blobs, Reorgs, and the Role of MEV-Boost","dc:creator":"Nero_eth","category":"Sharding","description":"<h1><a name=\"blobs-reorgs-and-the-role-of-mev-boost-1\" class=\"anchor\" href=\"https://ethresear.ch#blobs-reorgs-and-the-role-of-mev-boost-1\"></a>Blobs, Reorgs, and the Role of MEV-Boost</h1>\n<p><strong>The TL;DR is:</strong></p>\n<ul>\n<li><strong>Builders</strong> might have an incentive to not include blobs because of the higher latency they cause.</li>\n<li><strong>Non-MEV-Boost users</strong> include, on average, more blobs in blocks than MEV-Boost builders.</li>\n<li><strong>MEV-Boost users</strong> show a significantly lower probability of being reorged than <em>Non-MEV-Boost</em> users (see section <em>MEV-Boost and Reorgs</em> for details).</li>\n<li><strong>Rsync-Builder</strong> and <strong>Flashbots</strong> have a lower average number of blobs per block than other builders.</li>\n</ul>\n<hr>\n<p>In a <a href=\"https://ethresear.ch/t/big-blocks-blobs-and-reorgs/19674\">recent analysis on big blocks, blobs and reorgs</a>, we could see the impact of blobs on the reorg probability.</p>\n<p><strong>In the following, I want to expand on this by taking the MEV-Boost ecosystem into account.</strong></p>\n<p><strong>The fundamental question is…</strong><br>\n-&gt; <strong>“<em>Does MEV-Boost impact reorgs, and if so, by how much?</em>”</strong></p>\n<p>Blobs are “<em>big</em>” and big objects cause higher latency. Thus, one might expect builders to not include blobs into their blocks in scenarios in which:</p>\n<ul>\n<li>The builder is submitting its block late in the slot to minimize latency (see timing games).</li>\n<li>The builder wants to capture a high MEV opportunity and doesn’t want to risk unavailable blobs invalidating its block.</li>\n<li>The proposer is less well connected (because the gossiping starts later in the slot).</li>\n</ul>\n<p><strong>Builders</strong> might demand to be <strong>compensated</strong> through priority fees for including transactions which might cause blocks to be propagated with higher latency. Until 4844, such transactions have been those with a lot of calldata. As of 4844, blobs are the main drivers of latency.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/d/8db1993891d52c3c8be9d7c6adde8633810ad15b.png\" data-download-href=\"https://ethresear.ch/uploads/default/8db1993891d52c3c8be9d7c6adde8633810ad15b\" title=\"tx_type_prio_fee_all (2)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/d/8db1993891d52c3c8be9d7c6adde8633810ad15b_2_690x345.png\" alt=\"tx_type_prio_fee_all (2)\" data-base62-sha1=\"kdtPeHLNRSivbSQVwUSqmYvNxuH\" width=\"690\" height=\"345\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/d/8db1993891d52c3c8be9d7c6adde8633810ad15b_2_690x345.png, https://ethresear.ch/uploads/default/optimized/3X/8/d/8db1993891d52c3c8be9d7c6adde8633810ad15b_2_1035x517.png 1.5x, https://ethresear.ch/uploads/default/original/3X/8/d/8db1993891d52c3c8be9d7c6adde8633810ad15b.png 2x\" data-dominant-color=\"FBFAFA\"></a></div><p></p>\n<p><strong>As visible in the above chart, blob transactions don’t tip as much as regular Type-2 transactions.</strong><br>\nBased on that, blobs don’t give builders a significant edge over other builders competing for the same slot.<br>\nAnother explanation could be private deals between builders and rollups to secure timely inclusion of blob transactions for a fee paid through side channels.</p>\n<h2><a name=\"mev-boost-and-reorgs-2\" class=\"anchor\" href=\"https://ethresear.ch#mev-boost-and-reorgs-2\"></a>MEV-Boost and Reorgs</h2>\n<p>The MEV-Boost ecosystem consists of sophisticated parties, <strong>builders</strong> and <strong>relays</strong>, that are well connected and specialized in having low-latency connections to peers.<br>\nThus, it is expected that proposers using MEV-Boost should be reorged less often than ‘Vanilla Builders’ (i.e., users not using MEV-Boost).</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/5/859fee3890096d24a955abd65642fee08ebd141c.png\" data-download-href=\"https://ethresear.ch/uploads/default/859fee3890096d24a955abd65642fee08ebd141c\" title=\"reorgs_mevb_over_blobs (3)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/5/859fee3890096d24a955abd65642fee08ebd141c_2_690x258.png\" alt=\"reorgs_mevb_over_blobs (3)\" data-base62-sha1=\"j469uSqNIMxYIC5duBol1Wo3d8g\" width=\"690\" height=\"258\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/5/859fee3890096d24a955abd65642fee08ebd141c_2_690x258.png, https://ethresear.ch/uploads/default/optimized/3X/8/5/859fee3890096d24a955abd65642fee08ebd141c_2_1035x387.png 1.5x, https://ethresear.ch/uploads/default/original/3X/8/5/859fee3890096d24a955abd65642fee08ebd141c.png 2x\" data-dominant-color=\"DFE6ED\"></a></div><p></p>\n<p>This expectation holds true when looking at the above chart.<br>\n<strong>We can see that the reorg probability increases with the number of blobs. However, the reorg probability for MEV-Boost users is much lower than the one for Non-MEV-Boost users (Vanilla Builders).</strong></p>\n<p><strong>In this context it’s important to not confuse correlation and causation:<br>\n-&gt; <em>Non-MEV-Boost users are on average less sophisticated entities which also contributes to the effect we observe in the above chart.</em></strong></p>\n<p>In this context it is interesting to compare the <strong>average number of blobs per block</strong> of MEV-Boost users vs. Non-MEV-Boost users.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/c/3cbac65d110bbf6d535ba55d7dfb62f69206a271.png\" data-download-href=\"https://ethresear.ch/uploads/default/3cbac65d110bbf6d535ba55d7dfb62f69206a271\" title=\"blobs_over_time (3)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/c/3cbac65d110bbf6d535ba55d7dfb62f69206a271_2_690x373.png\" alt=\"blobs_over_time (3)\" data-base62-sha1=\"8FeOjssjBOCSZKLo4DF2o0gpG2l\" width=\"690\" height=\"373\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/c/3cbac65d110bbf6d535ba55d7dfb62f69206a271_2_690x373.png, https://ethresear.ch/uploads/default/optimized/3X/3/c/3cbac65d110bbf6d535ba55d7dfb62f69206a271_2_1035x559.png 1.5x, https://ethresear.ch/uploads/default/original/3X/3/c/3cbac65d110bbf6d535ba55d7dfb62f69206a271.png 2x\" data-dominant-color=\"F1F5F8\"></a></div><p></p>\n<p><strong>As visible in the above chart, proposers not using MEV-Boost included on average more blobs into their blocks than MEV-Boost users.</strong><br>\nThis might point towards MEV-Boost ecosystem participants (relays and builders) applying strategies that go beyond the “<em>include it if there’s space</em>” strategy.</p>\n<p><strong>First, let’s look at the builders more closely.</strong></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/b/4bf0a4fe8bc95e88d122c479fe88cf4f32883fbf.png\" data-download-href=\"https://ethresear.ch/uploads/default/4bf0a4fe8bc95e88d122c479fe88cf4f32883fbf\" title=\"blobs_over_time_builder (4)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/b/4bf0a4fe8bc95e88d122c479fe88cf4f32883fbf_2_690x258.png\" alt=\"blobs_over_time_builder (4)\" data-base62-sha1=\"aPNo6pWPgO3aEhPisexlPpWRlKL\" width=\"690\" height=\"258\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/b/4bf0a4fe8bc95e88d122c479fe88cf4f32883fbf_2_690x258.png, https://ethresear.ch/uploads/default/optimized/3X/4/b/4bf0a4fe8bc95e88d122c479fe88cf4f32883fbf_2_1035x387.png 1.5x, https://ethresear.ch/uploads/default/original/3X/4/b/4bf0a4fe8bc95e88d122c479fe88cf4f32883fbf.png 2x\" data-dominant-color=\"F9F7F7\"></a></div><p></p>\n<p>Vanilla Builders (Non-MEV-Boost proposers) are the ones that have the highest blob inclusion rate, followed by Beaverbuild and Titan Builder.</p>\n<p>Rsync-Builder seems to include way less blobs in their blocks.<br>\nThe same applies to the Flashbots builder that seems to have changed its behavior in early May, with the average number of blobs per block approaching zero.</p>\n<p><strong>“Is it fair to say 'Builder XY censors blobs!?”</strong><br>\n&gt; <strong>No</strong></p>\n<blockquote>\n<p><em>Different builders follow different strategies. For example a builder such as Rsync-Builder that is generally competitive in slots where low latency and speed matters might end up with winning those blocks where there are no blobs around (c.f. <em>selection bias</em>)</em></p>\n</blockquote>\n<br>\n<p><strong>Next, let’s shift the focus to the relays:</strong><br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/7/374ff432477462e6a307a3d83c7da899f3a5b541.png\" data-download-href=\"https://ethresear.ch/uploads/default/374ff432477462e6a307a3d83c7da899f3a5b541\" title=\"blobs_over_time_relays (4)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/7/374ff432477462e6a307a3d83c7da899f3a5b541_2_690x258.png\" alt=\"blobs_over_time_relays (4)\" data-base62-sha1=\"7TjyNDcfmwkPOGoIcxfYp9QJ6G5\" width=\"690\" height=\"258\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/7/374ff432477462e6a307a3d83c7da899f3a5b541_2_690x258.png, https://ethresear.ch/uploads/default/optimized/3X/3/7/374ff432477462e6a307a3d83c7da899f3a5b541_2_1035x387.png 1.5x, https://ethresear.ch/uploads/default/original/3X/3/7/374ff432477462e6a307a3d83c7da899f3a5b541.png 2x\" data-dominant-color=\"F7F7F8\"></a></div><p></p>\n<p>As visible above, Vanilla Builders have on average the highest blob inclusion rate.<br>\nThe Ultrasound and Agnostic Gnosis relays are second and third, followed by the relays of BloXroute.<br>\nThe Flashbots relay seems to include the lowest number of blobs.</p>\n<p><strong>Importantly, relays are dependent on builders and ultimately it’s the builders that impact the above graph.</strong></p>\n<h2><a name=\"next-steps-3\" class=\"anchor\" href=\"https://ethresear.ch#next-steps-3\"></a>Next Steps</h2>\n<p>In the context of <a href=\"https://ethresear.ch/t/peerdas-a-simpler-das-approach-using-battle-tested-p2p-components/16541\">PeerDAS</a>, the network will have to rely on nodes that are <em>stronger</em> than others and able to handle way more than 6 blobs per block. Therefore, it’d be super valuable to see more research on that topic happening.</p>\n<ul>\n<li><strong>Call for reproduction</strong>: It’d be great if someone could verify my results by reproducing this analysis.</li>\n<li><strong>Investigate the reasons</strong> why certain builders have a significantly lower blob inclusion rate than others.</li>\n<li><strong>Reduce reorg rate for Non-MEV-Boost users</strong>: Relays could offer Non-MEV-Boost users their block propagation services to ensure that fewer of their blocks get reorged.</li>\n</ul>\n<p>The blob market is still under development and a stable blob price is yet to be discovered. With increasing demand for blob space, tips from blob transaction will likely catch up to regular transactions.</p>\n            <p><small>4 posts - 4 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/blobs-reorgs-and-the-role-of-mev-boost/19783\">Read full topic</a></p>","link":"https://ethresear.ch/t/blobs-reorgs-and-the-role-of-mev-boost/19783","pubDate":"Tue, 11 Jun 2024 15:46:12 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19783"},"source":{"@url":"https://ethresear.ch/t/blobs-reorgs-and-the-role-of-mev-boost/19783.rss","#text":"Blobs, Reorgs, and the Role of MEV-Boost"}},{"title":"Block Proposing & Validating Timelines for 1.) MEV-Boost, 2.) ePBS, and 3.) ePBS with MEV-Boost","dc:creator":"terence","category":"Block proposer","description":"<p>This writeup summarizes the timeline differences between ePBS and MEV-Boost using inequalities. We analyze three models: 1) MEV-Boost, 2) ePBS, and 3) MEV-Boost with relayers on ePBS. We show that MEV-Boost with relayers on ePBS is slower than ePBS alone, which could lead to reorgs.</p>\n<h2><a name=\"definitions-1\" class=\"anchor\" href=\"https://ethresear.ch#definitions-1\"></a>Definitions</h2>\n<p><span class=\"math\">VT^{CL}</span>: Consensus layer validation time. The time taken by a node to verify the consensus portion of a block.<br>\n<span class=\"math\">VT^{EL}</span>: Execution layer validation time. The time taken by a node to verify the execution portion of a block.<br>\n<span class=\"math\">RT^{mevboost}</span>: Mev-boost block release time. The time when a block is released from a node or relayer, assuming the MEV-boost setting.<br>\n<span class=\"math\">RT^{epbs,cl}</span>: ePBS consensus block release time. The time when a consensus block is released from a node or relayer, assuming the ePBS setting.<br>\n<span class=\"math\">RT^{epbs,el}</span>: ePBS execution block release time. The time when an execution block is released from a node or relayer, assuming the ePBS setting.<br>\n<span class=\"math\">PT^{mevboost}</span>: Mev-boost block propagation time. The time taken for a block to propagate across the network, assuming the mev-boost setting.<br>\n<span class=\"math\">PT^{epbs,cl}</span>: ePBS consensus block propagation time. The time taken for a consensus block to propagate across the network, assuming ePBS setting.<br>\n<span class=\"math\">PT^{epbs,el}</span>: ePBS execution block propagation time. The time taken for an execution block to propagate across the network, assuming ePBS setting.<br>\n<span class=\"math\">Attestation\\_RT^{beacon}</span>: Beacon attestation release time. The time when a beacon attestation is released from a node.<br>\n<span class=\"math\">Attestation\\_RT^{ptc}</span>: PTC attestation release time. The time when a payload attestation is released from a node, assuming the ePBS setting.<br>\n<span class=\"math\">BBT</span>: Proposer build block time. The time taken for a proposer to build consensus portion of a block.<br>\n<span class=\"math\">GHT</span>: Proposer get header time. The time taken for a proposer to obtain a header from a relayer (MEV-boost) or builder (ePBS).<br>\n<span class=\"math\">GPT</span>: Proposer get payload time. The time a proposer takes to obtain a payload from a relayer (MEV-boost).<br>\n<span class=\"math\">SPT</span>: Builder submit payload time. The time taken for a relayer to receive a payload from the builder (MEV-boost).<br>\n<span class=\"math\">SBBT</span>: Proposer submit blind block time. The time a proposer takes to submit blind block to the relayer (MEV-boost).</p>\n<h2><a name=\"proposing-a-mev-boost-block-2\" class=\"anchor\" href=\"https://ethresear.ch#proposing-a-mev-boost-block-2\"></a>Proposing a mev-boost block</h2>\n<p>In Mev-Boost, proposing a block involves two parts. First, the builder sends the block to the relayer. Second, the proposer requests the header and returns the signed block to the relayer. We break down the time it takes in the following subsections, starting with the non-optimistic relayer and then the optimistic relayer. We also assume that everything starts at the 0-second mark of the slot, including the builder sending the execution block to the relayer.</p>\n<h3><a name=\"non-optimistic-relayer-3\" class=\"anchor\" href=\"https://ethresear.ch#non-optimistic-relayer-3\"></a>Non optimistic relayer</h3>\n<p><span class=\"math\">BRT</span> defines builder to relayer time. This is how much time takes for a builder to submit a block (ie bid) to the relayer and the relayer verifies the block is valid.<br>\n<span class=\"math\">BRT = SPT + VT^{EL}</span></p>\n<p><span class=\"math\">PRT</span> defines proposer to relayer time. This is how much time takes for a proposer to build block, request header, request payload, and submit blind block.<br>\n<span class=\"math\">PRT = BBT + GHT + GPT + SBBT</span></p>\n<p><span class=\"math\">RT^{mevboost} = BRT + PRT</span></p>\n<p>This assumes everything happens after the slot start because bids become more valuable. Another model is to assume <span class=\"math\">BRT</span> happens before the slot. Then <span class=\"math\">RT^{mevboost} = PRT</span>.</p>\n<h3><a name=\"optimistic-relayer-4\" class=\"anchor\" href=\"https://ethresear.ch#optimistic-relayer-4\"></a>Optimistic relayer</h3>\n<h4><a name=\"relayer-receives-builder-block-time-5\" class=\"anchor\" href=\"https://ethresear.ch#relayer-receives-builder-block-time-5\"></a>Relayer receives builder block time</h4>\n<p><span class=\"math\">BRT = SPT</span></p>\n<p><span class=\"math\">PRT</span> is the same as before</p>\n<p><span class=\"math\">RT^{mevboost} = BRT + PRT</span></p>\n<blockquote>\n<p>Using optimistic relayer is faster than non-optimistic relayer by: <span class=\"math\">VT^{EL}</span></p>\n</blockquote>\n<h2><a name=\"validating-a-mev-boost-block-6\" class=\"anchor\" href=\"https://ethresear.ch#validating-a-mev-boost-block-6\"></a>Validating a mev-boost block</h2>\n<p>In MEV-Boost, the block must be processed before <span class=\"math\">Attestation\\_RT^{beacon}</span> to be considered canonical. The following equation shows the conditions that need to be met for the block to be considered canonical from the perspective of all nodes.</p>\n<p>For a beacon block to be canonical, it should satisfy:<br>\n<span class=\"math\">RT^{mevboost} + PT^{mevboost} + VT^{CL} + VT^{EL} &lt; Attestation\\_RT^{beacon}</span></p>\n<h2><a name=\"proposing-an-epbs-block-7\" class=\"anchor\" href=\"https://ethresear.ch#proposing-an-epbs-block-7\"></a>Proposing an ePBS block</h2>\n<p>In ePBS, proposing the consensus block and the execution block are pipelined, where the consensus block commits to the execution block’s header. Block release time becomes two parts 1.) CL block release time and 2.) EL block release time.</p>\n<h3><a name=\"proposing-the-consensus-block-8\" class=\"anchor\" href=\"https://ethresear.ch#proposing-the-consensus-block-8\"></a>Proposing the consensus block</h3>\n<p>We assume the proposer uses the builder’s RPC to get the header. The proposer could also self-build or use P2P to obtain the header, which is arguably faster. Therefore, there is no need for proposer get header time anymore.</p>\n<p><span class=\"math\">RT^{epbs,cl} = GHT + BBT</span></p>\n<blockquote>\n<p>Using ePBS is faster than mev-boost by: <span class=\"math\">SPT+VT^{EL}+GPT + SBBT</span></p>\n</blockquote>\n<h3><a name=\"proposing-the-execution-block-9\" class=\"anchor\" href=\"https://ethresear.ch#proposing-the-execution-block-9\"></a>Proposing the execution block</h3>\n<p><span class=\"math\">RT^{epbs,el}</span> is when fork choice accumulates sufficient weight (~40%) or 6 seconds into the slot. The builder could propose a “withhold” block to try to reorg consensus layer block so builder does not have to pay the proposer.</p>\n<h2><a name=\"validating-an-epbs-block-10\" class=\"anchor\" href=\"https://ethresear.ch#validating-an-epbs-block-10\"></a>Validating an ePBS block</h2>\n<p>In ePBS, validating the consensus block and the execution block are pipelined in different stages. The beacon attestation cutoff time has been moved from 4 seconds into the slot to 3 seconds into the slot. However, we can assume that the CL block propagation time is shorter than the block propagation time. EL block validation can be delayed until the subsequent slot, as shown in the equations.</p>\n<h3><a name=\"validating-the-consensus-block-11\" class=\"anchor\" href=\"https://ethresear.ch#validating-the-consensus-block-11\"></a>Validating the consensus block</h3>\n<p><span class=\"math\">PT^{epbs,cl} &lt; PT^{mevboost}</span><br>\n<span class=\"math\">Attestation\\_RT^{beacon,epbs} &lt; Attestation\\_RT^{beacon,mevboost}</span></p>\n<p>For a consensus block to be canonical, it should satisfy:<br>\n<span class=\"math\">RT^{epbs,cl} + PT^{epbs,cl} + VT^{CL} &lt; Attestation\\_RT^{beacon}</span></p>\n<blockquote>\n<p>Using ePBS is faster than mev-boost by: <span class=\"math\">PT^{mevboost}-PT^{epbs,cl}+VT^{EL}</span></p>\n</blockquote>\n<h3><a name=\"validating-the-execution-block-12\" class=\"anchor\" href=\"https://ethresear.ch#validating-the-execution-block-12\"></a>Validating the execution block</h3>\n<h4><a name=\"as-a-ptc-voting-for-execution-blocks-presence-13\" class=\"anchor\" href=\"https://ethresear.ch#as-a-ptc-voting-for-execution-blocks-presence-13\"></a>As a PTC voting for execution block’s presence</h4>\n<p><span class=\"math\">RT^{epbs,el} + PT^{epbs,el} &lt; Attestation\\_RT^{ptc}</span></p>\n<h4><a name=\"as-a-proposer-proposing-the-next-slots-consensus-block-14\" class=\"anchor\" href=\"https://ethresear.ch#as-a-proposer-proposing-the-next-slots-consensus-block-14\"></a>As a proposer proposing the next slot’s consensus block</h4>\n<p><span class=\"math\">RT^{epbs,el} + PT^{epbs,el} + VT^{EL} &lt; Next\\_Slot\\_Start\\_Time</span></p>\n<h4><a name=\"everyone-else-15\" class=\"anchor\" href=\"https://ethresear.ch#everyone-else-15\"></a>Everyone else</h4>\n<p><span class=\"math\">RT^{epbs,el} + PT^{epbs,el} + VT^{EL} &lt; Next\\_Slot\\_Attestation\\_RT^{beacon}</span></p>\n<h2><a name=\"proposing-an-epbs-block-using-mev-boost-16\" class=\"anchor\" href=\"https://ethresear.ch#proposing-an-epbs-block-using-mev-boost-16\"></a>Proposing an ePBS block using mev-boost</h2>\n<p><span class=\"math\">BRT = SPT + VT^{EL}</span><br>\n<span class=\"math\">PRT = BBT + GHT</span><br>\n<span class=\"math\">RT^{epbs,cl} = BRT + PRT</span></p>\n<blockquote>\n<p>Using MEV-Boost for ePBS is slower than ePBS by: <span class=\"math\">SPT + VT^{EL}</span><br>\nThe additional latency occurs because the trusted party must receive and verify the execution block before releasing it to the proposer.</p>\n</blockquote>\n<h2><a name=\"validating-the-consensus-block-17\" class=\"anchor\" href=\"https://ethresear.ch#validating-the-consensus-block-17\"></a>Validating the consensus block</h2>\n<p><span class=\"math\">RT^{epbs,cl} + PT^{epbs,cl} + VT^{CL} &lt; Attestation\\_RT^{beacon}</span></p>\n<blockquote>\n<p>Given <span class=\"math\">Attestation\\_RT^{beacon}</span> is shorter than ePBS, an extra <span class=\"math\">SPT + VT^{EL}</span> could lead to additional reorgs.</p>\n</blockquote>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/block-proposing-validating-timelines-for-1-mev-boost-2-epbs-and-3-epbs-with-mev-boost/19782\">Read full topic</a></p>","link":"https://ethresear.ch/t/block-proposing-validating-timelines-for-1-mev-boost-2-epbs-and-3-epbs-with-mev-boost/19782","pubDate":"Tue, 11 Jun 2024 13:52:44 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19782"},"source":{"@url":"https://ethresear.ch/t/block-proposing-validating-timelines-for-1-mev-boost-2-epbs-and-3-epbs-with-mev-boost/19782.rss","#text":"Block Proposing & Validating Timelines for 1.) MEV-Boost, 2.) ePBS, and 3.) ePBS with MEV-Boost"}},{"title":"SGX as 2FA for FHE/MPC","dc:creator":"tolak","category":"Multiparty Computation","description":"<p><em>About me: I am <a href=\"https://x.com/tolak_eth\" rel=\"noopener nofollow ugc\">Wenfeng Wang</a>, a builder and researcher at Phala Network, put this topic here and hope to have a comprehensive discussion with the community.</em></p>\n<p><strong>TLDR</strong>: Involving SGX introduces a safeguard against the collusion risk inherent in current MPC and FHE systems.</p>\n<p>Continuing from Justin Drake’s well-articulated <a href=\"https://ethresear.ch/t/2fa-zk-rollups-using-sgx/14462\">post</a> about SGX as a 2FA for zk-rollups, I aim to expand on the potential of SGX as 2FA in FHE projects, specifically in their MPC encryption management. Despite their distinct applications, both leverage some fundamental features of SGX.</p>\n<h2><a name=\"mpc-is-the-bottleneck-of-fhe-1\" class=\"anchor\" href=\"https://ethresear.ch#mpc-is-the-bottleneck-of-fhe-1\"></a>MPC is the bottleneck of FHE</h2>\n<p>Lately, the interest in FHE (Fully Homomorphic Encryption) technologies has rejuvenated, especially in the context of Ethereum Virtual Machines (EVMs). What was once merely a concept is now a tangible tool developers can use to write privacy-preserving smart contracts. Interested readers can refer to Vitalik’s early 2020 <a href=\"https://vitalik.eth.limo/general/2020/07/20/homomorphic.html\" rel=\"noopener nofollow ugc\">post</a> about FHE. Now, let’s look at the general architecture of most current FHE projects.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/f/8f17a45e5c32060cd1578a8f2112437f58880327.png\" data-download-href=\"https://ethresear.ch/uploads/default/8f17a45e5c32060cd1578a8f2112437f58880327\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/f/8f17a45e5c32060cd1578a8f2112437f58880327_2_663x500.png\" alt=\"image\" data-base62-sha1=\"kpQVJozjvHvCm2ivZsAFGJ7Hqyb\" width=\"663\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/f/8f17a45e5c32060cd1578a8f2112437f58880327_2_663x500.png, https://ethresear.ch/uploads/default/optimized/3X/8/f/8f17a45e5c32060cd1578a8f2112437f58880327_2_994x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/f/8f17a45e5c32060cd1578a8f2112437f58880327_2_1326x1000.png 2x\" data-dominant-color=\"FAFAFA\"></a></div><p></p>\n<p>I will not dive too deep into FHE itself here, but you can find a notable challenge most FHE designs encounter today lies in the MPC node’s key management. Due to the practice of writing an FHE application, the key is globally used by all users to encrypt the data they send to the FHE server, which will execute under an encryption state. Thus, the whole security of the system relies on the security of the MPC network, and as we all know the truths of the MPC network are:</p>\n<ul>\n<li>The more nodes you have, the more latency you get</li>\n<li>The fewer nodes you have, the more trust assumptions you need</li>\n</ul>\n<h2><a name=\"tee-as-a-2fa-to-mpc-2\" class=\"anchor\" href=\"https://ethresear.ch#tee-as-a-2fa-to-mpc-2\"></a>TEE as a 2FA to MPC</h2>\n<p>We don’t want to give full trust to MPC nodes because of the possibility of collusion if it is run by humans. Instead, we can add SGX as 2FA to hedge the risk by moving the key management to <a href=\"https://en.wikipedia.org/wiki/Trusted_execution_environment\" rel=\"noopener nofollow ugc\">TEE</a> (Trusted Execution Environments, a technology to run the program in an isolated zone inside CPU, prove program immutable and limited-accessible).</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/d/1dc05649e162e2e9de3318a6da112754d5a6cd7e.png\" data-download-href=\"https://ethresear.ch/uploads/default/1dc05649e162e2e9de3318a6da112754d5a6cd7e\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/d/1dc05649e162e2e9de3318a6da112754d5a6cd7e_2_608x500.png\" alt=\"image\" data-base62-sha1=\"4fbVt19JaJWd8hlNQ8S0I17LrtQ\" width=\"608\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/d/1dc05649e162e2e9de3318a6da112754d5a6cd7e_2_608x500.png, https://ethresear.ch/uploads/default/optimized/3X/1/d/1dc05649e162e2e9de3318a6da112754d5a6cd7e_2_912x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/1/d/1dc05649e162e2e9de3318a6da112754d5a6cd7e_2_1216x1000.png 2x\" data-dominant-color=\"F9F9F9\"></a></div><p></p>\n<p>As illustrated above, MPC nodes of the FHE system are now running inside TEE, instead of producing TEE proof when acting as 2FA for zk-rollups, here SGX is used to protect the key generation progress in the MPC network, and the whole lifecycle of the key is kept inside TEE and never gonna reveal to the outside world, more importantly, the key can not be touched by human even a single piece. TEE itself can guarantee the program it runs is verifiable, it’s impossible for someone can manipulate the state. Also, the data passing between TEE and the client is secured by TLS communication.<br>\nWith TEE as a 2FA, it can help reduce the risk in an economic way that:</p>\n<ul>\n<li>If SGX is not compromised, there is no chance that collusion can happen;</li>\n<li>If SGX gets compromised, only when collusion happens between nodes that the system is broken.</li>\n</ul>\n<h2><a name=\"advantagesdisadvantages-of-sgx-as-2fa-for-fhe-3\" class=\"anchor\" href=\"https://ethresear.ch#advantagesdisadvantages-of-sgx-as-2fa-for-fhe-3\"></a>Advantages/Disadvantages of SGX as 2FA for FHE</h2>\n<ul>\n<li>\n<p>Advantages</p>\n<ul>\n<li>Security: Remove the possibility of collusion, trust is built on top of machinehood + cryptography instead of humanity.</li>\n<li>Safety: By running MPC inside SGX, even a small MPC network can be reasonably secure. Even if TEE is broken, e.g. have bugs in SGX or Intel being malicious, we still fall back to ordinary MPC.</li>\n<li>Latency: Using SGX, we can get higher security without introducing more workers. This gives more confident to users to run latency sensitive operations on MPC.</li>\n<li>Liveness: SGX didn’t provide extra liveness naturally, but projects like Phala have built a decentralized <a href=\"https://docs.phala.network/tech-specs/blockchain\" rel=\"noopener nofollow ugc\">TEE network</a> that can help make it easy to build an unstoppable network.</li>\n<li>Scalability: Scaling the MPC network is hard, but there are a bunch of existing TEE networks that are ready to deploy MPC nodes. So it lowers the cost to build a larger MPC network.</li>\n<li>Throughout: There also is no throughput lost, but considering the optimization of latency, throughput can be improved theoretically.</li>\n<li>More advantages that can be brought by SGX were well addressed by <a href=\"https://ethresear.ch/t/2fa-zk-rollups-using-sgx/14462\">Justin’s post</a>.</li>\n</ul>\n</li>\n<li>\n<p>Disadvantage</p>\n<ul>\n<li>It’s worth mentioning that SGX also has its own problems, a quote from Justin’s post:</li>\n</ul>\n<blockquote>\n<ul>\n<li>SGX has a bad reputation, especially within the blockchain space. Association with the technology may be memetically suboptimal.</li>\n<li>false sense of security: Easily-broken SGX 2FA (e.g. if the privkey is easily extractable) may provide a false sense of security.</li>\n<li>novelty: No Ethereum application that verifies SGX remote attestations on-chain could be found.</li>\n</ul>\n</blockquote>\n<ul>\n<li>As for the last one that SGX remote attestation on-chain doesn’t exist, the latest state is we have a couple of projects working on it, including Puffer, Automata, and also Phala’s <a href=\"https://github.com/tolak/zk-dcap-verifier\" rel=\"noopener nofollow ugc\">zk-dcap-verifier</a>. But considering it hasn’t been deployed on the mainnet, I kept it on the list.</li>\n</ul>\n</li>\n</ul>\n<p><em>Special thanks Justin Drake for his research of <a href=\"https://ethresear.ch/t/2fa-zk-rollups-using-sgx/14462\">2FA zk-rollups using SGX</a> and Andrew Miller for this research of TEE in Multi-Proof system, check his <a href=\"https://docs.google.com/presentation/d/1K96G50S8ICdllQDbEW1su1Ik_eOc5bK9Ih3uvoG-P9Y/edit?usp=sharing\" rel=\"noopener nofollow ugc\">presentation</a>.</em></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/sgx-as-2fa-for-fhe-mpc/19780\">Read full topic</a></p>","link":"https://ethresear.ch/t/sgx-as-2fa-for-fhe-mpc/19780","pubDate":"Tue, 11 Jun 2024 03:25:10 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19780"},"source":{"@url":"https://ethresear.ch/t/sgx-as-2fa-for-fhe-mpc/19780.rss","#text":"SGX as 2FA for FHE/MPC"}},{"title":"Solutions to the Preconf Fair Exchange Problem","dc:creator":"yaonam","category":"Layer 2","description":"<h3><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>tldr</h3>\n<p>Solutions for dealing with the fair exchange problem in leader-based preconfirmation setups.</p>\n<p>Reputation can incentivize preconfers to act honestly.</p>\n<p>Alternatively, use order to dictate who gets the PER tip. One can invalidate a PER by sending it to a preconfer with higher priority.</p>\n<h1><a name=\"fair-exchange-2\" class=\"anchor\" href=\"https://ethresear.ch#fair-exchange-2\"></a>Fair Exchange?</h1>\n<p>The fair exchange problem can be summarized as two untrusted players blindly giving up something in hopes that the other party will do the same. The goal is to try to find a method to ensure that both will cooperate. In the context of preconfirmations, the requesting party (gateway) has no guarantee that their preconfirmation enforcement request (PER) will receive a signed commitment. The preconfer has every right to not return a commitment, hold onto the PER until the last second, and include it if profitable (pocketing the tip for free).</p>\n<h1><a name=\"solution-1-reputation-3\" class=\"anchor\" href=\"https://ethresear.ch#solution-1-reputation-3\"></a>Solution 1: Reputation</h1>\n<p>One solution to this is by tracking reputation. More specifically, leveraging the promise of future PERs to incentivize preconfers to respond promptly via either commitments or non-commitments (slash-able promises to NOT include). The gateway can throttle or simply ignore preconfers if they misbehave.</p>\n<p>Reputation is a tried method and exists today in mev-boost relays (see <a href=\"https://ethresear.ch/t/the-preconfirmation-sauna/19762\">Switchboard’s Sauna Appendix</a>). While this might work, it still requires certain economic conditions for security. If for whatever reason it becomes really profitable to behave dishonestly, the guarantees fall apart.</p>\n<h1><a name=\"can-we-do-better-4\" class=\"anchor\" href=\"https://ethresear.ch#can-we-do-better-4\"></a>Can we do better?</h1>\n<p>In an ideal scenario, without any limitations of technology, one would simply invalidate the PER if the preconfer takes too long to respond. With blockchains, this is complicated, and time-based approaches require some sort of additional consensus, breaking the based paradigm. However, we can indirectly access “time” by using order. Blocks are ordered, so preconfers can be as well. If we take advantage of this, we arrive at a new solution that avoids the Fair Exchange problem altogether.</p>\n<h1><a name=\"solution-2-last-right-5\" class=\"anchor\" href=\"https://ethresear.ch#solution-2-last-right-5\"></a>Solution 2: Last Right</h1>\n<p>Determine an order for preconfers. This can be done per block (or even intra-block). Send the PER optimistically to the first preconfer. If they commit, then great. If they return a non-commitment, or do not respond, then send the PER to the next preconfer.</p>\n<p>But wait, they can still include my PER and pocket my tip! Yes, they can but they won’t be able to keep the tip. This is due to the central idea of this solution: <strong>the last preconfer to include the PER has the right to the tips</strong>. If two preconfers attempt to include the PER, the second preconfer has the right to the preconf tip. For example, the last preconfer submits a proof and transfers the PER tip to their balance. Other mechanisms are also possible and should be explored.</p>\n<p>One consideration here is the cost. If claiming the tip is more expensive than the tip itself, then the model falls apart. The good news is this cost is directly tied to the technology and should decrease exponentially (e.g. zk proof). Preconfirmation tips on the other hand are tied to the value of the transaction itself, which is not as dependent on the tech. So perhaps this mechanism will become more and more economically favorable.</p>\n<p>One great side effect of this method is that it preserves the possibility of execution promises. If the first preconfer acts honestly, then it can guarantee the execution state for the PER. Execution guarantees fall apart if there’s any dishonesty (same as Solution 1).</p>\n<h1><a name=\"solution-3-first-right-6\" class=\"anchor\" href=\"https://ethresear.ch#solution-3-first-right-6\"></a>Solution 3: First Right</h1>\n<p>If we are willing to forgo execution promises, then the gateway can instead request commitments from preconfers in reverse order. Forward the PER to a preconfer down the list, and then move up until one commits. <strong>The first preconfer to include the PER gets the tip.</strong> In the case where L1 proposers are preconfers, this is enforced by the L1 replay protection. This is a much simpler version of Solution 2.</p>\n<p>One downside is the “real” latency before the transaction is actually included since the default preconfer is not the current one. But one could argue that for important transactions where L1 settlement is important (e.g. buying a house), preconfirmations in general are probably not a priority.</p>\n<p>Note that execution promises are technically still possible if all the state transitions up to the point of inclusion has already been determined. (e.g. All block space has already been filled by PERs or similar.)</p>\n<h1><a name=\"final-thoughts-7\" class=\"anchor\" href=\"https://ethresear.ch#final-thoughts-7\"></a>Final Thoughts</h1>\n<p>We can even perhaps use these Solutions in tandem. For smaller preconf tips, we can rely on Solution 1, let the first preconfer pocket it and “slash” their reputation. For larger preconf tips, we can fallback to Solution 2 and let the next preconfer steal it back. Or just use them at the same time.</p>\n<p>Thanks to <span class=\"mention\">@mteam</span> for getting me up to speed and providing feedback. We at Spire Labs are actively researching preconfirmations and related topics, and building towards a better, unified Ethereum.</p>\n            <p><small>4 posts - 3 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/solutions-to-the-preconf-fair-exchange-problem/19779\">Read full topic</a></p>","link":"https://ethresear.ch/t/solutions-to-the-preconf-fair-exchange-problem/19779","pubDate":"Tue, 11 Jun 2024 02:55:02 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19779"},"source":{"@url":"https://ethresear.ch/t/solutions-to-the-preconf-fair-exchange-problem/19779.rss","#text":"Solutions to the Preconf Fair Exchange Problem"}},{"title":"Inactivity Leak unveiled","dc:creator":"ulrych8","category":"Proof-of-Stake","description":"<p>We summarize here the <a href=\"https://arxiv.org/abs/2404.16363\" rel=\"noopener nofollow ugc\">article</a> that presents the first theoretical analysis of the inactivity leak, designed to restore finalization during catastrophic network failures. This work is accepted at DSN2024.</p>\n<h1><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>TL;DR</h1>\n<ul>\n<li>The inactivity leak is intrinsically problematic for the safety of the protocol. It favors the constant finalization of blocks (<em>liveness</em>) at the expense of having conflicting finalized blocks (<em>safety</em>).</li>\n<li>The presence of Byzantine validators -validators that deviate from the protocol- can accelerate the loss of safety.</li>\n</ul>\n<hr>\n<p>The Ethereum PoS blockchain strives for the continuous growth of the finalized chain. In consequence, the protocol incentivizes validators to finalize blocks actively. The inactivity leak is the mechanism used to regain finality. Specifically, the inactivity leak is initiated if a chain has not undergone finalization for four consecutive epochs. The inactivity leak happened for the first time on the mainnet in May 2023.</p>\n<p>A good introduction to the inactivity leak is available thanks to the excellent work of Ben Eddington <a href=\"https://eth2book.info/capella/part2/incentives/inactivity/\" rel=\"noopener nofollow ugc\">here</a> (which motivated this work). We formalize the inactivity leak starting by the inactivity score.</p>\n<h2><a name=\"inactivity-score-2\" class=\"anchor\" href=\"https://ethresear.ch#inactivity-score-2\"></a>Inactivity Score</h2>\n<p>During an inactivity leak, at epoch <span class=\"math\">t</span>, the inactivity score, <span class=\"math\">I_i(t)</span>, of validator <span class=\"math\">i</span> is:</p>\n<div class=\"math\">\n\\begin{cases}\n        I_i(t) = I_i(t-1)+4, \\text{if $i$ is inactive at epoch $t$} \\\\\n        I_i(t) = \\max(I_i(t-1)-1, 0), \\text{ otherwise.}\n    \\end{cases}\n</div>\n<p>Thus, a validator’s inactivity score increases by <span class=\"math\">4</span> if it is inactive and decreases by <span class=\"math\">1</span> if it is active. The inactivity score is always positive and will be used to penalize validators during the inactivity leak.</p>\n<h2><a name=\"inactivity-penalties-3\" class=\"anchor\" href=\"https://ethresear.ch#inactivity-penalties-3\"></a>Inactivity Penalties</h2>\n<p>Let <span class=\"math\">s_i(t)</span> represent the stake of validator <span class=\"math\">i</span> at epoch <span class=\"math\">t</span>, and let <span class=\"math\">I_i(t)</span> denote its inactivity score. The penalty at each epoch <span class=\"math\">t</span> is <span class=\"math\">I_i(t-1)\\cdot s_i(t-1)/2^{26}</span>. Therefore, the evolution of the stake is expressed by:</p>\n<div class=\"math\">\ns_i(t)=s_i(t-1)-\\frac{I_i(t-1)\\cdot s_i(t-1)}{2^{26}}. \n</div>\n<h2><a name=\"stake-during-the-inactivity-leak-4\" class=\"anchor\" href=\"https://ethresear.ch#stake-during-the-inactivity-leak-4\"></a>Stake during the Inactivity Leak</h2>\n<p>In this work, we model the stake function <span class=\"math\">s</span> as a continuous and differentiable function, yielding the following differential equation:</p>\n<div class=\"math\">\ns'(t)=-I(t)\\cdot s(t)/2^{26}.\n</div>\n<p>With this equation, we can determine a validator’s stake according to the time by fixing the evolution of its inactivity score. And that is exactly what we do. We define two types of behavior: Active and Inactive.</p>\n<ul>\n<li>Active validators: they are always active.</li>\n<li>Inactive validators: they are always inactive.</li>\n</ul>\n<p>Validators with these behaviors experience different evolutions in their inactivity scores: (a) Active validators have a constant inactivity score <span class=\"math\">I(t)=0</span>; (b) Inactive validators’ inactivity score increases by 4 every epoch, <span class=\"math\">I(t)=4t</span>. The stake of each type of validator during an inactivity leak:</p>\n<ul>\n<li>Active validator’s stake: <span class=\"math\"> s(t) = s_0 = 32. </span></li>\n<li>Inactive validator’s stake: <span class=\"math\"> s(t) = s_0e^{-t^2/2^{25}}. </span></li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/9/496a7e5de461559b800a4d612eacb356a5f3cc84.png\" data-download-href=\"https://ethresear.ch/uploads/default/496a7e5de461559b800a4d612eacb356a5f3cc84\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/9/496a7e5de461559b800a4d612eacb356a5f3cc84_2_685x500.png\" alt=\"image\" data-base62-sha1=\"att12R0B103OUE04m41aU0G5dVa\" width=\"685\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/9/496a7e5de461559b800a4d612eacb356a5f3cc84_2_685x500.png, https://ethresear.ch/uploads/default/optimized/3X/4/9/496a7e5de461559b800a4d612eacb356a5f3cc84_2_1027x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/9/496a7e5de461559b800a4d612eacb356a5f3cc84_2_1370x1000.png 2x\" data-dominant-color=\"FBFAF9\"></a></div><p></p>\n<p>The graph shows the evolution of the stake of validators depending on their activity during the inactivity leak. The expulsion limit is set by the protocol to eject validators that have accumulated too many penalties.</p>\n\nWhat is an active validator? <a href=\"https://ethresear.ch/t/inactivity-leak-unveiled/19774/1\">(click for more details)</a>\n<hr>\n<p>This was the formalization of the protocol. Now we make the analysis of the protocol’s property of safety. To do so, we use the following model.</p>\n<h2><a name=\"model-5\" class=\"anchor\" href=\"https://ethresear.ch#model-5\"></a>Model</h2>\n<ul>\n<li><strong>Network</strong>: We assume a partially synchronous system, which transitions from an asynchronous state to a synchronous state after an apriori unknown Global Stabilization Time (GST).</li>\n<li><strong>Fault</strong>: Validators are either <em>honest</em> or <em>Byzantine</em> (deviating from the protocol). A Byzantine validator can deviate arbitrarily from the protocol.</li>\n<li><strong>Stake</strong>: Each validator starts with 32 ETH.</li>\n</ul>\n<p>There is no bound on message transfer delay during the asynchronous state.</p>\n<h1><a name=\"bound-for-safety-6\" class=\"anchor\" href=\"https://ethresear.ch#bound-for-safety-6\"></a>Bound for safety</h1>\n<h2><a name=\"with-only-honest-validators-7\" class=\"anchor\" href=\"https://ethresear.ch#with-only-honest-validators-7\"></a>With only honest validators</h2>\n<p>By construction, the inactivity leak will breach safety if a partition occurs for long enough. The question is, how quickly?</p>\n<blockquote>\n<p><em>Any network partition lasting longer than 4686 epochs (about 3 weeks) will result in a loss of Safety because of conflicting finalization. This is an upper bound for Safety on the duration of the inactivity leak with only honest validators.</em></p>\n</blockquote>\n<h3><a name=\"detailed-analysis-8\" class=\"anchor\" href=\"https://ethresear.ch#detailed-analysis-8\"></a>Detailed Analysis</h3>\n<p>Let us analyze the scenario in which the validators (which are all honest) are partitioned in two. (We are in the asynchronous state according to our model).<br>\nThe partition will necessarily create a fork, each partition building on the only chain they see. The chains will finalize once the proportion of active validators returns to 2/3rd.</p>\n<p>In this case, by understanding the distribution of the validators across the partitions, we can compute the time it takes for the proportion of active validators’ stake to return to 2/3 of the stake on each branch, thus finalizing and breaking safety.</p>\n<p>For the analysis, we make the following notations. At the beginning of the inactivity leak:</p>\n<ul>\n<li><span class=\"math\">n</span> is the total number of validators</li>\n<li><span class=\"math\">n_B</span> is the total number of Byzantine validators</li>\n<li><span class=\"math\">n_H</span> is the total number of honest validators</li>\n<li><span class=\"math\">n_{H_1}</span> is the number of honest validators on branch 1</li>\n<li><span class=\"math\">n_{H_2}</span> is the number of honest validators on branch 2</li>\n</ul>\n<p>There are no Byzantine validators for the first part of our analysis, which implies that <span class=\"math\">n=n_H</span>. Honest validators are only partitioned in two, thus <span class=\"math\">n_H=n_{H_1}+n_{H_2}</span>.</p>\n<p><strong>Our goal is to determine when the proportion of honest validators on branch 1 will be superior to 2/3rd of the total stake.</strong>  Which is to say that we look at when the ratio:</p>\n<div class=\"math\">\n\\frac{\\text{stake of validator in branch 1}}{\\text{stake of validator in branch 1 + stake of validator in branch 2}},\n</div>\n<p>is superior to 2/3. With our notation, the ratio can be rewritten as:</p>\n<div class=\"math\">\n\\frac{n_{\\text H_1}s_{\\text H_1}(t)}{n_{\\text H_1}s_{\\text H_1}(t)+n_{\\text H_2}s_{\\text H_2}(t)} ,\n</div>\n<p><span class=\"math\">s_{\\text H_1}</span> and <span class=\"math\">s_{\\text H_2}</span> are the stakes of honest active and inactive validators, respectively. Since the <span class=\"math\">n_{\\text H_1}</span> validators on branch 1 are always active on branch 1, and the <span class=\"math\">n_{\\text H_2}</span> validators are always inactive on branch 1 (they are active on branch 2); we know that <span class=\"math\">s_{\\text H_1}(t)=s_0</span> and <span class=\"math\">s_{\\text H_2}(t)=s_0e^{-t^2/2^{25}}</span>.<br>\nUsing the notation <span class=\"math\">p_0=n_{\\text H_1}/n_H</span>, the ratio of active validators over time is:</p>\n<div class=\"math\">\n\\frac{p_0}{p_0+(1-p_0)e^{-t^2/2^{25}}}. \n</div>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/e/7ec6a1a64318159dada408e4cc0365a1663b28d1.png\" data-download-href=\"https://ethresear.ch/uploads/default/7ec6a1a64318159dada408e4cc0365a1663b28d1\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/e/7ec6a1a64318159dada408e4cc0365a1663b28d1_2_668x500.png\" alt=\"image\" data-base62-sha1=\"i5vJ5hAgXMEkHs51U8Fxy6Hf7y1\" width=\"668\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/e/7ec6a1a64318159dada408e4cc0365a1663b28d1_2_668x500.png, https://ethresear.ch/uploads/default/optimized/3X/7/e/7ec6a1a64318159dada408e4cc0365a1663b28d1_2_1002x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/7/e/7ec6a1a64318159dada408e4cc0365a1663b28d1_2_1336x1000.png 2x\" data-dominant-color=\"F8F5F7\"></a></div><p></p>\n<p>This graph shows the ratio of active validators on branch 1 over time. If finalization hasn’t occurred by epoch <span class=\"math\">t=4685</span>, inactive validators are ejected, causing a jump to 100% active validators.</p>\n<h2><a name=\"byzantine-validators-9\" class=\"anchor\" href=\"https://ethresear.ch#byzantine-validators-9\"></a>Byzantine validators</h2>\n<p>We now add Byzantine validators.</p>\n\nThese Byzantine validators can send messages to each partition without restriction. <a href=\"https://ethresear.ch/t/inactivity-leak-unveiled/19774/1\">(click for more details)</a>\n<p>The situation we analyze is now as such:</p>\n<ul>\n<li>Less than one-third of the stake is held by Byzantine validators (<span class=\"math\">\\beta_0=n_{\\rm B}/n&lt;1/3</span>).</li>\n<li>Honest validators are divided into branches <span class=\"math\">1</span> and <span class=\"math\">2</span>; a proportion <span class=\"math\">p_0=n_{\\rm H_1}/n_{\\rm H}</span> on branch <span class=\"math\">1</span> and <span class=\"math\">1-p_0=n_{\\rm H_2}/n_{\\rm H}</span> on branch <span class=\"math\">2</span>.</li>\n<li>Byzantine validators can communicate with both branches.</li>\n</ul>\n<p>Byzantine validators can be active on both branches simultaneously, breaching safety faster. The ratio of active validators on branch 1 is:</p>\n<div class=\"math\">\n\\frac{p_0(1-\\beta_0)+\\beta_0}{p_0(1-\\beta_0)+\\beta_0+(1-p_0)(1-\\beta_0)e^{-t^2/2^{25}}}.\n</div>\n<p>This table shows the time it takes to break safety depending on the initial proportion of Byzantine validators (<span class=\"math\">\\beta_0</span>):<br>\n<img src=\"https://ethresear.ch/uploads/default/original/3X/3/0/30cda7537ed8ab1493f4beadd138924b6b6408f3.png\" alt=\"image\" data-base62-sha1=\"6XJwP6WtcjSXPLXvmtFXtBoSrDB\" width=\"157\" height=\"195\"></p>\n<p><em>Byzantine validators can expedite the loss of Safety. If their initial proportion is 0.33, they can make conflicting finalization occur approximately ten times faster than scenarios involving only honest participants.</em></p>\n<hr>\n<p>The original paper provides more details on the assumptions, scenarios, protocol, and other aspects such as:</p>\n<ul>\n<li>Ways for Byzantine validators to breach safety without committing slashable behavior.</li>\n<li>Methods for Byzantine validators to exceed the 1/3 threshold on both branches of the fork.</li>\n<li>An analysis of the probabilistic bouncing attack while considering the inactivity leak. Spoiler alert: this aggravates the attack slightly, but the conditions for the attack to start and persist in time make it highly improbable to be a real threat.</li>\n</ul>\n<p>For an additional quick peek at the paper’s findings, here is a graphic that presents how quickly Byzantine validators can break safety depending on their initial proportion and whether their behavior is slashable or not.  As you can see, they can have a strong impact even without slashable behavior.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/a/8a447d3888021e7cf6ba7c2b99fd1907ad3a5738.png\" data-download-href=\"https://ethresear.ch/uploads/default/8a447d3888021e7cf6ba7c2b99fd1907ad3a5738\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/a/8a447d3888021e7cf6ba7c2b99fd1907ad3a5738_2_500x375.png\" alt=\"image\" data-base62-sha1=\"jJaCWWd2SOvw9salBXJXFnVezMc\" width=\"500\" height=\"375\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/a/8a447d3888021e7cf6ba7c2b99fd1907ad3a5738_2_500x375.png, https://ethresear.ch/uploads/default/optimized/3X/8/a/8a447d3888021e7cf6ba7c2b99fd1907ad3a5738_2_750x562.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/a/8a447d3888021e7cf6ba7c2b99fd1907ad3a5738_2_1000x750.png 2x\" data-dominant-color=\"F9F8F9\"></a></div><p></p>\n<h1><a name=\"conclusion-10\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-10\"></a>Conclusion</h1>\n<p>Our findings highlight the importance of penalty mechanisms in Byzantine Fault Tolerance (BFT) analysis. By identifying potential issues in protocol design, we aim to provide insights for future improvements and tools for further investigation.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/inactivity-leak-unveiled/19774\">Read full topic</a></p>","link":"https://ethresear.ch/t/inactivity-leak-unveiled/19774","pubDate":"Mon, 10 Jun 2024 13:46:18 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19774"},"source":{"@url":"https://ethresear.ch/t/inactivity-leak-unveiled/19774.rss","#text":"Inactivity Leak unveiled"}},{"title":"The contention between preconfs and ePBS","dc:creator":"potuz","category":"Architecture","description":"<p>This quick note is motivated by a question of <a class=\"mention\" href=\"https://ethresear.ch/u/hasu.research\">@Hasu.research</a> regarding the compatibility of ePBS with the different mechanisms for preconfirmations that are being proposed by independent groups <a href=\"https://ethresear.ch/t/the-preconfirmation-sauna/19762\">1</a> <a href=\"https://ethresear.ch/t/blob-preconfirmations-with-inclusion-lists-to-mitigate-blob-contention-and-censorship/19150\">2</a> <a href=\"https://chainbound.github.io/bolt-docs/\" rel=\"noopener nofollow ugc\">3</a> <a href=\"https://docs.google.com/presentation/d/1a-0rP2knM11g59UmnKn7I7NH8BlFM5wNhczH35sbkSo/edit#slide=id.g2731bc99d1b_0_0\" rel=\"noopener nofollow ugc\">4</a> <a href=\"https://docs.primev.xyz/get-started/introduction\" rel=\"noopener nofollow ugc\">5</a>. The only purpose of this note is to leave a quick written record of the fundamental contention between the enshrinements of preconfirmations and the <a href=\"https://github.com/potuz/consensus-specs/pull/2\" rel=\"noopener nofollow ugc\">current proposal for ePBX</a>.</p>\n<h2><a name=\"overloading-inclusion-lists-1\" class=\"anchor\" href=\"https://ethresear.ch#overloading-inclusion-lists-1\"></a>Overloading inclusion lists.</h2>\n<p>Even in the very first post on <a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">based preconfirmations</a>, the idea of using <a href=\"https://eips.ethereum.org/EIPS/eip-7547\" rel=\"noopener nofollow ugc\">forced inclusion lists</a> was put forward as a way for proposers to signal their intent of honoring preconfirmations, forcing builders to include these transactions. An extrapolation of this idea led, in one of the original designs for ILs, to propose that inclusion lists may essentially include a complete list of transactions the proposer has in its current mempool. One of the problems with these ideas is that the full list of transactions would need to be broadcast over the P2P network twice: once when the inclusion list is broadcast, and the second time within the payload itself. In all known designs for inclusion lists, validators attest for the existence of the full executable transaction list. This implies in particular that</p>\n<ol>\n<li>The list must be available at the beacon block validation time.</li>\n<li>The list must be executed at the beacon block validation time.</li>\n</ol>\n<p>This section is not meant to be read as <em>inclusion lists aren’t compatible with ePBS</em> but rather any preconfirmation system (and next block forced inclusion lists by definition are such a system) that relies on the execution and distribution of the transactions at the consensus block validation time, necessarily clashes with the main optimization from ePBS.</p>\n<h2><a name=\"epbs-validation-optimization-2\" class=\"anchor\" href=\"https://ethresear.ch#epbs-validation-optimization-2\"></a>ePBS validation optimization</h2>\n<p>The above two points are in direct opposition with the main optimization that ePBS brings to block processing, that is that the only hot path to validation is that of the consensus block that has to be fully verified before the attestation deadline. All other validations, like transaction execution, data availability, etc. are deferred to the remainder of the slot and into the next slot.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/f/8f3daa474ae131dfbee7c96cfd9f2a7e4035c06a.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/8f3daa474ae131dfbee7c96cfd9f2a7e4035c06a\" title=\"ePBS slot\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/f/8f3daa474ae131dfbee7c96cfd9f2a7e4035c06a_2_690x364.jpeg\" alt=\"ePBS slot\" data-base62-sha1=\"kraovl1lfJNBvSrOxQ6y37JNNuW\" width=\"690\" height=\"364\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/f/8f3daa474ae131dfbee7c96cfd9f2a7e4035c06a_2_690x364.jpeg, https://ethresear.ch/uploads/default/optimized/3X/8/f/8f3daa474ae131dfbee7c96cfd9f2a7e4035c06a_2_1035x546.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/f/8f3daa474ae131dfbee7c96cfd9f2a7e4035c06a_2_1380x728.jpeg 2x\" data-dominant-color=\"EEF5F4\"></a></div><p></p>\n<p>While ePBS is compatible with inclusion lists, their addition inherently stresses this optimization. Broadcasting a small list of 16 transactions that can be immediately executed in microseconds is not the same as broadcasting a full block, and presumably, even blob transactions as some based rollups would require.</p>\n<h2><a name=\"the-centralized-nature-of-preconfs-3\" class=\"anchor\" href=\"https://ethresear.ch#the-centralized-nature-of-preconfs-3\"></a>The centralized nature of preconfs</h2>\n<p>There is no current design (that I am aware of) of preconfirmations, that does not rely on a centralized entity. This is natural to expect in the absence of an encrypted public mempool, users can’t send their transactions in the open to the next proposer (although they could <em>encrypt the transactions to the public BLS address of the next proposer</em>), and we can’t enshrine an RPC provider, all systems thus make use on existing centralized entities (for example relays) to act as a preconfer. Decentralization comes in that it is ultimately the proposer who enforces these preconfirmations, by forcing the builder to fullfil them.</p>\n<p>Thus, in all proposed systems for preconfirmations, either of L1 transactions or for based rollups, there exist a centralized entity that at the very least is responsible for gathering the transactions and giving out the preconfirmations. Systems differ on how is that these preconfirmations are enforced, they range from new L1 slashing proposals, to restaking proposals (moving the slashing to a separate layer), etc. The point is that preconfirmations can be enforced by the protocol itself, or by a somewhat decentralized party like the subset of validators participating in the preconfirmation scheme. In summary, there is a plethora of options for enforcing the (or penalizing the lack of) inclusion of preconfirmations, in decreasing level of trustlessness:</p>\n<ul>\n<li>The L1 protocol itself enforces inclusion. For example, forced ILs, with proposer level slashings on missed slots, preconf equivocations, etc.</li>\n<li>Some separate committee enforces them. For example a subset of the L1 validators also participate in a sidechain by restaking, and the enforcement/punishment is carried in that sidechain.</li>\n<li>A centralized entity enforces them. For example the relay itself only sends bids from builders that have satisfied the required preconfs.</li>\n</ul>\n<h2><a name=\"a-viable-way-compatible-with-epbs-staked-builders-as-preconfirmers-4\" class=\"anchor\" href=\"https://ethresear.ch#a-viable-way-compatible-with-epbs-staked-builders-as-preconfirmers-4\"></a>A viable way compatible with ePBS: staked builders as preconfirmers.</h2>\n<p>Any approach with a full payload being broadcast with the consensus block for preconfirmation enforcement clashes directly with the main scaling optimization of ePBS with regard to block validation. As thus, it seems difficult to expect a working design in which the proposers are in charge of sending and enforcing preconfirmations. The second and third approaches above are fully compatible with ePBS.</p>\n<p>One of the features that preconfirmation systems can leverage when ePBS is in place, is that builders themselves are staked validators, thus they can be subject to the same rules that these systems currently require from proposers. For example, those systems that rely on slashings on a restaking scheme could simply add conditions on participating builders. That is, the proposer set participating in the scheme only take bids from builders that are participants of the scheme. The builders and proposers are required to be restaked. There are new penalty conditions for</p>\n<ul>\n<li>A proposer that does not include a block.</li>\n<li>A proposer that includes a block with a commitment to a non-participating builder.</li>\n<li>A builder that does not include the payload</li>\n<li>A builder that includes a payload does not satisfies the preconf list.</li>\n</ul>\n<h2><a name=\"a-separate-note-on-restaking-5\" class=\"anchor\" href=\"https://ethresear.ch#a-separate-note-on-restaking-5\"></a>A separate note on restaking</h2>\n<p>ePBS also presents a challenge on any restaking scheme: builders can transfer funds in the same payload that they commit a slashable offense. L1 protocol can deal with this by immediately deducting the bid from the builder’s balance at the time of CL block processing, but delaying the credit to the proposer. In case the builder commits a slashable offense, the buffer allows the L1 protocol to implement penalization procedures that can impact those delayed funds accordingly. If the builder is restaked however, the restaking chain does not have access to these funds.</p>\n            <p><small>7 posts - 4 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/the-contention-between-preconfs-and-epbs/19770\">Read full topic</a></p>","link":"https://ethresear.ch/t/the-contention-between-preconfs-and-epbs/19770","pubDate":"Sun, 09 Jun 2024 07:59:33 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19770"},"source":{"@url":"https://ethresear.ch/t/the-contention-between-preconfs-and-epbs/19770.rss","#text":"The contention between preconfs and ePBS"}}]}}}