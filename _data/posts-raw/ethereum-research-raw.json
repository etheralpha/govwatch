{"rss":{"@version":"2.0","@xmlns:discourse":"http://www.discourse.org/","@xmlns:atom":"http://www.w3.org/2005/Atom","@xmlns:dc":"http://purl.org/dc/elements/1.1/","channel":{"title":"Ethereum Research - Latest topics","link":"https://ethresear.ch/latest","description":"Latest topics","lastBuildDate":"Fri, 31 May 2024 11:43:01 +0000","atom:link":{"@href":"https://ethresear.ch/latest.rss","@rel":"self","@type":"application/rss+xml"},"item":[{"title":"Strawmanning Based Preconfirmations","dc:creator":"linoscope","category":"Layer 2","description":"<p>By <a href=\"https://twitter.com/linoscope\" rel=\"noopener nofollow ugc\">Lin Oshitani</a> (Nethermind Research). Thanks to <a href=\"https://twitter.com/ConorMcMenamin9\" rel=\"noopener nofollow ugc\">Conor</a> and <a href=\"https://www.linkedin.com/in/aikaterini-panagiota-stouka/\" rel=\"noopener nofollow ugc\">Aikaterini</a> for the detailed discussions and review. Thanks also to <a href=\"https://twitter.com/smartprogrammer\" rel=\"noopener nofollow ugc\">Ahmad</a> and  <a href=\"https://twitter.com/Brechtpd\" rel=\"noopener nofollow ugc\">Brecht</a> for their review and comments. This work was partly funded by Taiko. The views expressed are my own and do not necessarily reflect those of the reviewers or Taiko.</p>\n<h1><a name=\"introduction-1\" class=\"anchor\" href=\"https://ethresear.ch#introduction-1\"></a>Introduction</h1>\n<p><a href=\"https://ethresear.ch/t/based-rollups-superpowers-from-l1-sequencing/15016/\">Based sequencing</a> provides a credibly neutral shared sequencer layer that enables composability among rollups and between rollups and L1. Additionally, <a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">based preconfirmations</a> provide fast preconfirmation services on top of based sequencing, significantly enhancing the user experience as a result. However, compared to non-preconfirming based sequencing, naive implementations of based preconfirmations introduce negative externalities that require thoughtful consideration. Although issues have been highlighted in works such as <a href=\"https://www.youtube.com/watch?v=b3o2YP6sxpg\" rel=\"noopener nofollow ugc\">this Bell Curve episode</a> (mainly in the context of non-based sequencers) and <a href=\"https://research.chainbound.io/examining-the-based-sequencing-spectrum\" rel=\"noopener nofollow ugc\">this write-up</a> from Chainbound, we believe the topic remains largely underexplored.</p>\n<p>In this post, we will analyze a simple “strawman” preconfirmation setup, identify its shortcomings, and shed light on the challenges that future solutions must address.</p>\n<h1><a name=\"the-strawman-2\" class=\"anchor\" href=\"https://ethresear.ch#the-strawman-2\"></a>The Strawman</h1>\n<p>The strawman based preconfirmation setup is as follows:</p>\n<ul>\n<li>The L1 proposer may or may not delegate the preconf right to some external entity.\n<ul>\n<li>We use the term <em>preconfer</em> to describe the entity providing preconfirmations, which can either be the L1 proposer itself or an entity delegated from the L1 proposer.</li>\n</ul>\n</li>\n<li>The preconfer handles preconfirmations by providing two endpoints:\n<ul>\n<li>Request endpoint: For users and searchers to request preconfirmations.</li>\n<li>Promise endpoint: For streaming the preconf results to the public. It enables the preconfirmation requester to promptly receive the result while allowing other users to stay updated on the latest preconfirmed state before initiating their own preconfirmations.</li>\n</ul>\n</li>\n<li>Users will include a “preconf tip” to the requests to incentivize preconfers to provide preconfirmations.</li>\n<li>The preconfer preconfirms transactions primarily on a first-come-first-serve basis.</li>\n</ul>\n<p><img src=\"https://ethresear.ch/uploads/default/original/3X/6/2/62f461e44a685f6ecf9401c8c6ad62689a826ec1.jpeg\" alt=\"Based Preconf (2) (1)\" data-base62-sha1=\"e7onuIzRDpwD9KD1j3CE3w7YPDP\" width=\"649\" height=\"282\"></p>\n<p>Furthermore, because they are significantly more complex to design and implement, we focus solely on execution promises. Execution promises guarantee the exact sequence and state of a transaction. In contrast, inclusion promises only ensure that a transaction will be included without specifying the conditions of its inclusion.</p>\n<h1><a name=\"the-problems-3\" class=\"anchor\" href=\"https://ethresear.ch#the-problems-3\"></a>The Problems</h1>\n<p>We will cover six problems with the strawman based preconfirmation design:</p>\n<ul>\n<li>Problem 1: Latency races</li>\n<li>Problem 2: Congestion</li>\n<li>Problem 3: Tip pricing</li>\n<li>Problem 4: Fair exchange</li>\n<li>Problem 5: Liveness</li>\n<li>Problem 6: Early auctions</li>\n</ul>\n<h2><a name=\"problem-1-latency-races-4\" class=\"anchor\" href=\"https://ethresear.ch#problem-1-latency-races-4\"></a><strong>Problem 1: Latency races</strong></h2>\n<p>Whoever has the lowest latency to the preconfer gains all the MEV <a href=\"https://docs.cow.fi/mevblocker/concepts/mev-concepts/what-is-backrunning\" rel=\"noopener nofollow ugc\">back-running profit</a>. This is because they can:</p>\n<ol>\n<li>Be the first to obtain the latest state of the chain through the promise endpoint and</li>\n<li>be the first to insert their back-run transaction via the request endpoint.</li>\n</ol>\n<p>This structure has historically <a href=\"https://academic.oup.com/qje/article/130/4/1547/1916146\" rel=\"noopener nofollow ugc\">incentivized <em>latency races</em></a>, where network participants strive to minimize latency to the limit. Eventually, this would lead to searchers choosing to colocate or vertically integrate with preconfers, which significantly risks the network’s <a href=\"https://collective.flashbots.net/t/decentralized-crypto-needs-you-to-be-a-geographical-decentralization-maxi/1385\" rel=\"noopener nofollow ugc\">geographical decentralization</a>.</p>\n<p>Such latency races have been a long-lasting concern for existing centralized sequencers. For example, the Arbitrum team has explored the idea of <a href=\"https://github.com/OffchainLabs/nitro/pull/1504\" rel=\"noopener nofollow ugc\">implementing Proof of Work</a> (PoW) where they grant fast connections to participants who succeed in PoW while imposing artificial delays on participants who do not. However, this proposal encountered <a href=\"https://research.arbitrum.io/t/thoughts-on-arbitrums-proposal-to-score-connections-by-pow/8121\" rel=\"noopener nofollow ugc\">backlash from the community</a> due to the substantial economic waste introduced.</p>\n<h2><a name=\"problem-2-congestion-5\" class=\"anchor\" href=\"https://ethresear.ch#problem-2-congestion-5\"></a>Problem 2: Congestion</h2>\n<p>Given that L2 transaction fees are typically low, searchers may choose to avoid latency races altogether and instead flood the rollup with probabilistic arbitrage attempts. This can be done by spamming an arbitrage contract that attempts an arbitrage and rollbacks if it fails. In Solana, where the fee is extremely low, it has been <a href=\"https://www.jito.network/blog/solving-the-mev-problem-on-solana-a-guide-for-stakers/#:~:text=Solana%20validators%20are%20wasting%20more%20than%2058%25%20of%20their%20time%20processing%20failed%20arbitrages\" rel=\"noopener nofollow ugc\">reported</a> that validators waste ~58% of their time processing such failed arbitrage transactions.</p>\n<p>This would result in a situation resembling pre-Flashbots <a href=\"https://arxiv.org/abs/1904.05234\" rel=\"noopener nofollow ugc\">priority gas auctions</a>, where the competition among searchers congests the block space with failed arbitrage transactions, ultimately driving up gas fees for regular users.</p>\n<h2><a name=\"problem-3-tip-pricing-6\" class=\"anchor\" href=\"https://ethresear.ch#problem-3-tip-pricing-6\"></a>Problem 3: Tip pricing</h2>\n<p>The preconfer must solve an <a href=\"https://hackmd.io/@EspressoSystems/bft-and-proposer-promised-preconfirmations#:~:text=online%20MEV%20maximization%20problem\" rel=\"noopener nofollow ugc\">online MEV problem</a>, where they decide whether to preconf a transaction with no/limited visibility to other transactions that compete for the same position. For example, suppose the preconfer receives a preconf request with 1 ETH tip. How would the preconfer know that the tip is appropriately priced? Should they accept the tip and preconf immediately or wait for a while in case there is another request with a higher tip?</p>\n<h2><a name=\"problem-4-fair-exchange-7\" class=\"anchor\" href=\"https://ethresear.ch#problem-4-fair-exchange-7\"></a>Problem 4: Fair exchange</h2>\n<p>The preconfer can withhold preconf promises and not return them to the user in a timely manner. Note that preconfers are incentivized to withhold preconf promises as much as possible to maximize their opportunity to reorder and insert transactions, thereby increasing their MEV.</p>\n<p>As an extreme example, the preconfer could withhold all promises during its window (12 sec or more), reorder and inject txs as it wishes, and only publish the promises when the final tx batch is submitted to L1.</p>\n<h2><a name=\"problem-5-liveness-8\" class=\"anchor\" href=\"https://ethresear.ch#problem-5-liveness-8\"></a>Problem 5: Liveness</h2>\n<p>For the case when the proposer delegates the preconfirming rights to an external preconfer, the liveness and censorship resistance of the preconfirmations will rely solely on this single external entity for the duration of the preconfer’s slot(s).</p>\n<h2><a name=\"problem-6-early-auctions-9\" class=\"anchor\" href=\"https://ethresear.ch#problem-6-early-auctions-9\"></a>Problem 6: Early auctions</h2>\n<p>Any system with L1 composable preconfirmations (i.e., preconfirmation of L1 transactions) will likely result in <em>preconfer-builder integration,</em> where preconfer and builder become the same entity. This is for two reasons:</p>\n<ul>\n<li>With L1 preconfirmations, most cross-domain MEV, including CEX-DEX arbitrage, will be captured through preconfirmed transactions.\n<ul>\n<li>Considering the bulk of MEV revenue comes from CEX-DEX arbitrage, this means that most MEV revenue will be secured through preconfirmations. Consequently, the revenue from building the non-preconfirmed portion of the block will be greatly reduced.</li>\n</ul>\n</li>\n<li>Preconfed L1 transactions must be included at the top of the current block.\n<ul>\n<li>Inserting any transactions before a preconfirmed transaction could alter the state anticipated by the preconfirmation, potentially invalidating the preconfirmation guarantee. This means builders must constantly incorporate the latest preconfed transactions into their blocks, which would be extremely difficult, if not unfeasible.</li>\n</ul>\n</li>\n</ul>\n<p>Combined with preconf delegation happening ahead of the proposer’s slot, preconfer-builder integration leads us to a world where L1 proposers delegate their preconfirmation rights <em>and block-building rights</em> to the same external entity <em>ahead of time</em> for their slot.</p>\n<p>Selecting the block builder in advance, known as <em>early auctions</em>, contrasts sharply with the current MEV-Boost PBS pipeline, where block builders are dynamically chosen <em>just-in-time</em> (<em>JIT</em>) within the slot through block auctions. More details comparing JIT auctions and early auctions can be found <a href=\"https://collective.flashbots.net/t/when-to-sell-your-blocks/2814\" rel=\"noopener nofollow ugc\">here</a>.</p>\n<p>The goal of based sequencing is to inherit the security of L1. However, with based preconfirmations, we risk altering the security landscape of the underlying L1 itself. Although early auctions might not be entirely detrimental (further research and experimentation are needed), they represent a fundamental shift from the current MEV-Boost builder market. Therefore, they should be introduced with great care, especially when introduced off-protocol, where control over centralization tendencies is limited.</p>\n<h1><a name=\"conclusion-10\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-10\"></a>Conclusion</h1>\n<p>We observed that naive implementations of preconfirmations can lead to various negative externalities. As with all things in blockchains, trade-offs are inevitable. However, such negative effects should be mitigated as much as possible and, when needed, introduced as a deliberate choice, not an accident.</p>\n<p>At Nethermind, along with our collaborators, we are actively researching solutions that address the issues outlined in this document. Stay tuned for more updates!</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/strawmanning-based-preconfirmations/19695\">Read full topic</a></p>","link":"https://ethresear.ch/t/strawmanning-based-preconfirmations/19695","pubDate":"Fri, 31 May 2024 11:43:01 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19695"},"source":{"@url":"https://ethresear.ch/t/strawmanning-based-preconfirmations/19695.rss","#text":"Strawmanning Based Preconfirmations"}},{"title":"Gossip IWANT/IHAVE Effectiveness in Ethereum's Gossipsusb network","dc:creator":"yiannisbot","category":"Networking","description":"<h1><a name=\"summary-tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#summary-tldr-1\"></a>Summary &amp; TL;DR</h1>\n<p>The ProbeLab team (<a href=\"https://probelab.io\" rel=\"noopener nofollow ugc\">https://probelab.io</a>) is carrying out a study on the performance of Gossipsub in Ethereum’s P2P network. This post is reporting the first of a list of metrics that the team will be diving into, namely, how efficient is Gossipsub’s gossip mechanism. For the purposes of this study, we have built a tool called Hermes (<a href=\"https://github.com/probe-lab/hermes/\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">GitHub - probe-lab/hermes: A Gossipsub listener and tracer.</a>), which acts as a GossipSub listener and tracer. Hermes subscribes to all relevant pubsub topics and traces all protocol interactions. The results reported here are from a 3.5hr trace.</p>\n<p><strong>Study Description:</strong> The purpose of this study is to identify the ratio between the number of <code>IHAVE</code> messages sent and the number of <code>IWANT</code> messages received from our node. This should be done both in terms of overall messages, but also in terms of <code>msgIDs</code>. This metric will give us an overview of the effectiveness of Gossipsub’s gossip mechanism, i.e., how useful the bandwidth consumed by gossip messages really is.</p>\n<p><strong>TL;DR:</strong> <strong>The effectiveness of Gossipsub’s gossip mechanism, i.e., the <code>IHAVE</code> and <code>IWANT</code> message exchange is not efficient in the Ethereum network.</strong> Message ratios between Sent <code>IHAVEs</code> and Received <code>IWANTs</code> can reach to more than 1:50 for some topics. Suggested optimisations and things to investigate to improve effectiveness are given at the end of this report.</p>\n<h2><a name=\"overall-results-sent-ihaves-vs-received-iwant-2\" class=\"anchor\" href=\"https://ethresear.ch#overall-results-sent-ihaves-vs-received-iwant-2\"></a>Overall Results - Sent IHAVEs vs Received IWANT</h2>\n<p>The plots below do not differentiate between different topics. They present aggregates over all topics. The ratio of sent <code>IHAVEs</code> vs received <code>IWANTs</code> does not seem extreme (top plot) with a ratio of less than 1:2, but digging deeper into the number of <code>msgIDs</code> carried by those <code>IHAVE</code> and <code>IWANT</code> messages shows a different picture (middle plot). The ratio itself for all three topics are given in the third (bottom plot), where we see that especially for the beacon_block topic the ratio is close to 1:100 and going a lot higher at times.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/7/27e3878da92a987de30755da843003d2390d2852.png\" data-download-href=\"https://ethresear.ch/uploads/default/27e3878da92a987de30755da843003d2390d2852\" title=\"gossip_control_msgs_sent_ihave_vs_recv_iwant_messages\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/7/27e3878da92a987de30755da843003d2390d2852_2_517x309.png\" alt=\"gossip_control_msgs_sent_ihave_vs_recv_iwant_messages\" data-base62-sha1=\"5GS6guu22d7JvCUaDaT4M9KpCjE\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/7/27e3878da92a987de30755da843003d2390d2852_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/2/7/27e3878da92a987de30755da843003d2390d2852_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/2/7/27e3878da92a987de30755da843003d2390d2852.png 2x\" data-dominant-color=\"F9F8F8\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/6/169e349eb5bf6f5eae425791f895e9ae32a5a41d.png\" data-download-href=\"https://ethresear.ch/uploads/default/169e349eb5bf6f5eae425791f895e9ae32a5a41d\" title=\"gossip_control_msgs_sent_ihave_vs_recv_iwant_message_ids\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/6/169e349eb5bf6f5eae425791f895e9ae32a5a41d_2_517x309.png\" alt=\"gossip_control_msgs_sent_ihave_vs_recv_iwant_message_ids\" data-base62-sha1=\"3e5spcR8uui86liVE47bS1wp1oN\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/6/169e349eb5bf6f5eae425791f895e9ae32a5a41d_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/1/6/169e349eb5bf6f5eae425791f895e9ae32a5a41d_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/1/6/169e349eb5bf6f5eae425791f895e9ae32a5a41d.png 2x\" data-dominant-color=\"F6F6F6\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/3/a37bfd19efcd740d899634ae0d27a92413c2cb2e.png\" data-download-href=\"https://ethresear.ch/uploads/default/a37bfd19efcd740d899634ae0d27a92413c2cb2e\" title=\"gossip_control_msgs_ration_of_sent_ihave_vs_recv_iwant_message_ids_all_topics\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/3/a37bfd19efcd740d899634ae0d27a92413c2cb2e_2_517x309.png\" alt=\"gossip_control_msgs_ration_of_sent_ihave_vs_recv_iwant_message_ids_all_topics\" data-base62-sha1=\"nkfth88x4NjdAsKzgTt6Hkoeym2\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/3/a37bfd19efcd740d899634ae0d27a92413c2cb2e_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/a/3/a37bfd19efcd740d899634ae0d27a92413c2cb2e_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/3/a37bfd19efcd740d899634ae0d27a92413c2cb2e.png 2x\" data-dominant-color=\"F9F6F4\"></a></div><p></p>\n<h2><a name=\"per-topic-results-sent-ihaves-vs-received-iwant-3\" class=\"anchor\" href=\"https://ethresear.ch#per-topic-results-sent-ihaves-vs-received-iwant-3\"></a>Per Topic Results - Sent IHAVEs vs Received IWANT</h2>\n<p>Next, we’re diving into the ratio <em>per topic</em> to get a better understanding of the gossip effectiveness for each topic. We’re presenting the overall number as well as the ratio per topic. The ratio of sent <code>IHAVEs</code> vs received <code>IWANTs</code> is more extreme and reaches an average of close to 1:100 for the <code>beacon_block</code> topic, 1:10 for the <code>beacon_aggregate_and_proof</code> topic and 1:6 for the <code>sync_committee_contribution_and_proof</code> topic.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/0/b/0b1d31747dac95b38c72afe9858fb9211ded447c.png\" data-download-href=\"https://ethresear.ch/uploads/default/0b1d31747dac95b38c72afe9858fb9211ded447c\" title=\"gossip_control_msgs_sent_ihave_vs_recv_iwant_message_ids_69ae0e99_beacon_block\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/0/b/0b1d31747dac95b38c72afe9858fb9211ded447c_2_517x309.png\" alt=\"gossip_control_msgs_sent_ihave_vs_recv_iwant_message_ids_69ae0e99_beacon_block\" data-base62-sha1=\"1AjNuB7chyphAJT4OYkyGtGgHZa\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/0/b/0b1d31747dac95b38c72afe9858fb9211ded447c_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/0/b/0b1d31747dac95b38c72afe9858fb9211ded447c_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/0/b/0b1d31747dac95b38c72afe9858fb9211ded447c.png 2x\" data-dominant-color=\"F9F7F6\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/5/d5ac836932182c36c9ef2f0097bc2c27a8b39beb.png\" data-download-href=\"https://ethresear.ch/uploads/default/d5ac836932182c36c9ef2f0097bc2c27a8b39beb\" title=\"gossip_control_msgs_sent_ihave_vs_recv_iwant_message_ids_69ae0e99_beacon_aggregate_and_proof\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/5/d5ac836932182c36c9ef2f0097bc2c27a8b39beb_2_517x309.png\" alt=\"gossip_control_msgs_sent_ihave_vs_recv_iwant_message_ids_69ae0e99_beacon_aggregate_and_proof\" data-base62-sha1=\"uufjaWfUlpHVPGvVHcFjTbzJLqX\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/5/d5ac836932182c36c9ef2f0097bc2c27a8b39beb_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/d/5/d5ac836932182c36c9ef2f0097bc2c27a8b39beb_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/d/5/d5ac836932182c36c9ef2f0097bc2c27a8b39beb.png 2x\" data-dominant-color=\"FAF9F9\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/a/aa5d777e133a0cf20446b3e978d7060fbc4a8086.png\" data-download-href=\"https://ethresear.ch/uploads/default/aa5d777e133a0cf20446b3e978d7060fbc4a8086\" title=\"gossip_control_msgs_sent_ihave_vs_recv_iwant_message_ids_69ae0e99_sync_committee_contribution_and_proof\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/a/aa5d777e133a0cf20446b3e978d7060fbc4a8086_2_517x309.png\" alt=\"gossip_control_msgs_sent_ihave_vs_recv_iwant_message_ids_69ae0e99_sync_committee_contribution_and_proof\" data-base62-sha1=\"oj7q8DBeVJwr1Jguwh6YR9Tcm46\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/a/aa5d777e133a0cf20446b3e978d7060fbc4a8086_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/a/a/aa5d777e133a0cf20446b3e978d7060fbc4a8086_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/a/aa5d777e133a0cf20446b3e978d7060fbc4a8086.png 2x\" data-dominant-color=\"F9F8F7\"></a></div><p></p>\n<p>It is clear that there is an excess of <code>IHAVE</code> messages sent compared to the usefulness that these provide in terms of received <code>IWANT</code> messages. There’s at least a 10x bandwidth consumption that we could optimise for if we reduced the ratios especially for the <code>beacon_block</code> and <code>beacon_aggregate_and_proof</code> topics.</p>\n<p>The <code>beacon_aggregate_and_proofs</code> topic sends hundreds of thousands of <code>message_ids</code> over the wire in a minute, with very few <code>IWANT</code> messages in return. The ratio of sent <code>IHAVE</code> <code>msgIDs</code> to the received <code>IWANT msgIDs</code> stays around 10 times bigger.</p>\n<h2><a name=\"overall-results-received-ihave-vs-sent-iwant-4\" class=\"anchor\" href=\"https://ethresear.ch#overall-results-received-ihave-vs-sent-iwant-4\"></a>Overall Results - Received IHAVE vs Sent IWANT</h2>\n<p>The situation is even more extreme for the case of Received <code>IHAVE</code> vs Sent <code>IWANT</code> messages in terms of overhead. We include below the overall results only, as well as the ratios per topic. We consider that the ratios are even higher here because our node is rather well-connected (keeps connections to 250 peers) and therefore is more likely to be included in the <code>GossipFactor</code> fraction of peers that are chosen to send gossip to (i.e., <code>IHAVEs</code>). This in turn means that we must be receiving lots of duplicate <code>msgIDs</code> in those <code>IHAVE</code> messages. Digging into the number of duplicate messages are subject to a different metric further down in this report.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/8/e8bfe2c7e1e5061cc1e6189027c61cb561e5ebff.png\" data-download-href=\"https://ethresear.ch/uploads/default/e8bfe2c7e1e5061cc1e6189027c61cb561e5ebff\" title=\"gossip_control_msgs_recv_ihave_vs_sent_iwant_messages\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/8/e8bfe2c7e1e5061cc1e6189027c61cb561e5ebff_2_517x309.png\" alt=\"gossip_control_msgs_recv_ihave_vs_sent_iwant_messages\" data-base62-sha1=\"xcZSYvske1XnexqrEXJ6DiGeMeH\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/8/e8bfe2c7e1e5061cc1e6189027c61cb561e5ebff_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/e/8/e8bfe2c7e1e5061cc1e6189027c61cb561e5ebff_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/e/8/e8bfe2c7e1e5061cc1e6189027c61cb561e5ebff.png 2x\" data-dominant-color=\"F9F9FA\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/7/d7221f99eab26664812e8a7b8a5af32da2457f1a.png\" data-download-href=\"https://ethresear.ch/uploads/default/d7221f99eab26664812e8a7b8a5af32da2457f1a\" title=\"gossip_control_msgs_recv_ihave_vs_sent_iwant_message_ids\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/7/d7221f99eab26664812e8a7b8a5af32da2457f1a_2_517x309.png\" alt=\"gossip_control_msgs_recv_ihave_vs_sent_iwant_message_ids\" data-base62-sha1=\"uH9LrKJX2vCMAuQjSkOn6KnoS5s\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/7/d7221f99eab26664812e8a7b8a5af32da2457f1a_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/d/7/d7221f99eab26664812e8a7b8a5af32da2457f1a_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/d/7/d7221f99eab26664812e8a7b8a5af32da2457f1a.png 2x\" data-dominant-color=\"F5F6F7\"></a></div><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/3/93bb45e0850316dea9fa50186848459a21d1d3bd.png\" data-download-href=\"https://ethresear.ch/uploads/default/93bb45e0850316dea9fa50186848459a21d1d3bd\" title=\"gossip_control_msgs_ration_of_recv_ihave_vs_sent_iwant_message_ids_all_topics\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/3/93bb45e0850316dea9fa50186848459a21d1d3bd_2_517x309.png\" alt=\"gossip_control_msgs_ration_of_recv_ihave_vs_sent_iwant_message_ids_all_topics\" data-base62-sha1=\"l4TpX9YgaXH7AEezMiRQc931Qst\" width=\"517\" height=\"309\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/3/93bb45e0850316dea9fa50186848459a21d1d3bd_2_517x309.png, https://ethresear.ch/uploads/default/optimized/3X/9/3/93bb45e0850316dea9fa50186848459a21d1d3bd_2_775x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/9/3/93bb45e0850316dea9fa50186848459a21d1d3bd.png 2x\" data-dominant-color=\"F6F3F1\"></a></div><p></p>\n<h2><a name=\"anomalies-5\" class=\"anchor\" href=\"https://ethresear.ch#anomalies-5\"></a>Anomalies</h2>\n<p>Gossipsub messages should always be assigned to a particular topic, as not all peers are subscribed to all topics. Having a topic helps with correctly identifying invalid messages and avoiding overloading of peers with messages they’re not interested in.</p>\n<p>We have consistently seen throughout the duration of the experiment both <code>IHAVE</code> and <code>IWANT</code> messages sent to our node with an empty topic. Both of these are considered anomalies, especially given that the <code>IWANT</code> messages we received were for <code>msgIDs</code> that we didn’t advertise through an <code>IHAVE</code> message earlier.</p>\n<p>Digging deeper into the results, we have seen that 49 out of the 55 peers that we received messages with an empty topic were Teku nodes. We have started the following Github issue to surface the anomaly: <a href=\"https://github.com/libp2p/jvm-libp2p/issues/361\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Possible Bug on GossipSub implementation that makes sharing `IHAVE` control messages with empty topics · Issue #361 · libp2p/jvm-libp2p · GitHub</a>, which has been fixed: <a href=\"https://github.com/libp2p/jvm-libp2p/pull/365\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Set topicID on outbound IHAVE and ignore inbound IHAVE for unknown topic by StefanBratanov · Pull Request #365 · libp2p/jvm-libp2p · GitHub</a>.</p>\n<h2><a name=\"takeaways-6\" class=\"anchor\" href=\"https://ethresear.ch#takeaways-6\"></a>Takeaways</h2>\n<ul>\n<li>The average effectiveness ratio of the gossip functionality is higher than 1:10 across topics, which is not ideal.</li>\n<li>Messages that are generated less frequently (such as <code>beacon_block</code> topic messages) are primarily propagated through the mesh and less through gossip (<code>IHAVE/IWANT</code> messages), hence the higher ratios, which reach up to 1:100 for this particular topic.</li>\n<li>GossipSub control messages are relevant, but we identify two different use-cases for GossipSub that don’t benefit in the same way from all these control messages:\n<ul>\n<li>Big but less frequent messages → more prone to <code>DUPLICATED</code> messages, but with less overhead on the <code>IHAVE</code> control side. The gossiping effectiveness is rather small here.</li>\n<li>Small but very frequent messages → add significant overhead on the bandwidth usage as many more <code>msg_ids</code> are added in each <code>IHAVE</code> message.</li>\n</ul>\n</li>\n</ul>\n<h2><a name=\"optimisation-potential-7\" class=\"anchor\" href=\"https://ethresear.ch#optimisation-potential-7\"></a>Optimisation Potential</h2>\n<p>Clearly, having an effectiveness ratio of 1:10 or even less, i.e., consuming &gt;10x more bandwidth for <code>IHAVE/IWANT</code> messages than actually needed, is not ideal. Three directions for improvement have been identified, although none of them has been implemented, tested, or simulated.</p>\n<ol>\n<li>Bloom filters: instead of sending <code>msgIDs</code> in <code>IHAVE/IWANT</code> messages, peers can send a bloom filter of the messages that they have received within the “message window history”.</li>\n<li>Adjust <code>GossipsubHistoryGossip</code> factor from 3 to 2: This requires some more testing, but it’s a straightforward item to consider. This parameter, set to 3 by default [<a href=\"https://github.com/libp2p/go-libp2p-pubsub/blob/048a4d30d0c3c00829181fd81aa697eb60497448/gossipsub.go#L39\" rel=\"noopener nofollow ugc\">link</a>], defines for how many heartbeats do we send <code>IHAVE</code> messages for. Sending messages for 3 heartbeats ago obviously increases the number of messages with questionable return (i.e., how many <code>IWANT</code> messages do we receive in return).</li>\n<li>Adaptive <code>GossipFactor</code> per topic: As per the original go implementation of Gossipsub [<a href=\"https://github.com/libp2p/go-libp2p-pubsub/blob/048a4d30d0c3c00829181fd81aa697eb60497448/gossipsub.go#L115\" rel=\"noopener nofollow ugc\">link</a>], the <code>GossipFactor</code> affects how many peers we will emit gossip to at each heartbeat. The protocol sends gossip to <code>GossipFactor * (total number of non-mesh peers)</code>. Making this a parameter that is adaptive to the ratio of Sent <code>IHAVE</code> vs Received <code>IWANT</code> messages per topic can greatly reduce the overhead seen.\n<ol>\n<li>Nodes sharing lots of <code>IHAVE</code> messages with very few <code>IWANT</code> messages in return could reduce the factor (saving bandwidth).</li>\n<li>Nodes receiving a significant amount of <code>IWANT</code> messages through gossip could actually increase the <code>GossipFactor</code> accordingly to help out the rest of the network.</li>\n<li>There is further adjustments that can be made if a node detects that a big part of its messages come from <code>IWANT</code> messages that it sends. These could revolve around increasing the mesh size <code>D</code>, or rotating the peers it has in its mesh.</li>\n</ol>\n</li>\n</ol>\n<p>For more details and results on Ethereum’s network head over to <a href=\"https://probelab.io\" rel=\"noopener nofollow ugc\">https://probelab.io</a>.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/gossip-iwant-ihave-effectiveness-in-ethereums-gossipsusb-network/19686\">Read full topic</a></p>","link":"https://ethresear.ch/t/gossip-iwant-ihave-effectiveness-in-ethereums-gossipsusb-network/19686","pubDate":"Thu, 30 May 2024 06:21:28 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19686"},"source":{"@url":"https://ethresear.ch/t/gossip-iwant-ihave-effectiveness-in-ethereums-gossipsusb-network/19686.rss","#text":"Gossip IWANT/IHAVE Effectiveness in Ethereum's Gossipsusb network"}},{"title":"DamFi: Introducing On-Chain Autonomous Funds (OAFs), Blockchain's Answer to ETFs","dc:creator":"Depooty","category":"Applications","description":"<p>Abstract:<br>\nDamFi introduces a decentralized protocol facilitating On-Chain Autonomous Funds (OAFs), akin to ETFs but tailored for the DeFi ecosystem. By leveraging Zero-Knowledge Proofs (ZKPs) for enhanced computational capabilities, DamFi ensures efficient and trustless fund operations. Moreover, DamFi can integrate with external DeFi protocols like EigenLayer, and theoretically any other DeFi protocol, to maximize investment flexibility and diversification.</p>\n<p>Motivation:<br>\nThe motivation behind creating DamFi stemmed from a desire to simplify the investment process for the average person. In traditional finance, ETFs provide a straightforward way to invest in a diversified portfolio with minimal effort. However, the DeFi space lacked a comparable analogue due to the limitations of smart contract technology. With the advent of Zero-Knowledge Proofs (ZKPs), we recognized an opportunity to overcome these limitations. ZKPs enable efficient off-chain computations with proofs uploaded on-chain, allowing us to create On-Chain Autonomous Funds (OAFs) that function similarly to ETFs, making decentralized investing accessible and straightforward for everyone.</p>\n<p>Introduction:<br>\nCurrent crypto investment management often requires significant user involvement and active management. DamFi addresses this by offering automated, on-chain investment funds that adapt to market conditions without requiring constant oversight, making them ideal for both novice and experienced investors.</p>\n<p>Core Features:</p>\n<ol>\n<li>\n<p>On-Chain Autonomous Funds (OAFs):</p>\n<ul>\n<li>Automated rebalancing and management of crypto assets.</li>\n<li>Designed to function similarly to traditional ETFs in a decentralized context.</li>\n<li>Diversified investing solution for both retail and institutional investors.</li>\n</ul>\n</li>\n<li>\n<p>Zero-Knowledge Proofs (ZKPs):</p>\n<ul>\n<li>ZKPs enhance computational capabilities by performing calculations off-chain.</li>\n<li>Proofs are uploaded on-chain to ensure efficient and trustless operations.</li>\n</ul>\n</li>\n<li>\n<p>Integration with External DeFi Protocols:</p>\n<ul>\n<li>Supports integration with protocols like EigenLayer, where tokens will be staked.</li>\n<li>Potential to leverage major DeFi protocols such as Aave, offering extensive investment<br>\nopportunities.</li>\n</ul>\n</li>\n<li>\n<p>Chainlink Oracles:</p>\n<ul>\n<li>Utilizing Chainlink’s decentralized oracle network to ensure accurate and reliable off-chain data<br>\nfeeds.</li>\n<li>Enables secure and verifiable price feeds and other external data, enhancing the robustness of<br>\nfund operations.</li>\n</ul>\n</li>\n</ol>\n<p>Fund Offerings:</p>\n<ul>\n<li>Heritage Dam: Focuses on Bitcoin (BTC) and Ethereum (ETH) investments.</li>\n<li>Castor Credit Dam: Invests in a range of DeFi protocols.</li>\n<li>Grateful Dam: Specializes in Liquid Staked Derivatives.</li>\n</ul>\n<p>Fund Management:</p>\n<ul>\n<li>Funds are set to rebalance every x days or when weights deviate by x%, depending on the specific fund’s rules.</li>\n</ul>\n<p>Future Developments:</p>\n<ul>\n<li>Customizable investment strategies tailored to user preferences.</li>\n<li>“Funds of Funds” structure, where users can invest in multiple funds, increasing their exposure and diversification.</li>\n<li>Users will have the ability to choose whether to utilize integrated external protocols, how often their funds rebalance, what coins are included, and the associated fees.</li>\n<li>Theoretical possibility to create a “fund of funds” to mimic a crypto S&amp;P 500.</li>\n</ul>\n<p>Community and Governance:</p>\n<ul>\n<li>Currently, no community governance, but plans to establish a DAO and introduce a governance token in the future.</li>\n</ul>\n<p>Technical Overview:<br>\nDamFi’s architecture employs smart contracts for autonomous fund management. The integration of ZKPs ensures efficient off-chain computations, while the proofs are uploaded on-chain for verification. This modular approach enhances security, scalability, and adaptability in the evolving DeFi landscape.</p>\n<p>Partnerships and Collaborations:</p>\n<ul>\n<li>We are partnered with Ora and utilizing their ZKPs to ensure the computational efficiency and security of our protocol.<br>\n- Currently in talks with a few others but not ready to announce them yet.</li>\n</ul>\n<p>Testnet Launch and Airdrop:<br>\nWe are excited to announce the launch of the DamFi testnet. To celebrate this milestone, we will conduct an airdrop to reward early adopters and contributors in the future. Please take a look at <a href=\"https://damfi.io\" rel=\"noopener nofollow ugc\">https://damfi.io</a> and launch the app!</p>\n<p>Currently working are our rebalancing dams and staking in the “earn” tab</p>\n<p>Call to Action:<br>\nWe invite the community to provide feedback, engage in discussions, and explore the potential of DamFi. Your insights will be crucial as we refine our protocol and expand its capabilities. Also, please take a look at our Galxe campaign here <a href=\"https://app.galxe.com/quest/bWoZSfxBrF3XJdWufqSvRj?hideFooter&amp;id=54487&amp;step=1\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Join DamFi on Galxe</a></p>\n<p>Contact Information:<br>\nFor more details, visit our website at <a href=\"http://Damfi.io\" rel=\"noopener nofollow ugc\">Damfi.io</a> or join our community here: <a href=\"https://linktr.ee/damfi\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">damfi | Twitter | Linktree</a><br>\nLet’s collaborate to shape the future of decentralized finance.</p>\n<p>Conclusion:<br>\nDamFi represents a significant advancement in the DeFi space, offering secure, automated, and flexible investment options. By integrating with external DeFi protocols, we provide users with unparalleled opportunities to diversify and optimize their portfolios.</p>\n<p>Thank you for your interest in DamFi. We look forward to your feedback and support.</p>\n<p>Thanks,<br>\nDamFi Team</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/damfi-introducing-on-chain-autonomous-funds-oafs-blockchains-answer-to-etfs/19681\">Read full topic</a></p>","link":"https://ethresear.ch/t/damfi-introducing-on-chain-autonomous-funds-oafs-blockchains-answer-to-etfs/19681","pubDate":"Wed, 29 May 2024 19:45:00 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19681"},"source":{"@url":"https://ethresear.ch/t/damfi-introducing-on-chain-autonomous-funds-oafs-blockchains-answer-to-etfs/19681.rss","#text":"DamFi: Introducing On-Chain Autonomous Funds (OAFs), Blockchain's Answer to ETFs"}},{"title":"MagicSpend++ Spend Now, Debit Later","dc:creator":"vaibhavchellani","category":"Applications","description":"<h2><a name=\"introduction-1\" class=\"anchor\" href=\"https://ethresear.ch#introduction-1\"></a>Introduction</h2>\n<p>The current smart wallet experience for users is not suited for transacting in a world with hundreds or thousands of rollups. It forces an average Ethereum user to deal with fragmented assets, forcing them to manage fragments of their assets across 100+ rollups along with complexities like GAS, bridging &amp; RPCs for every transaction.</p>\n<blockquote>\n<p>For example, today it takes over <strong>30+ clicks in the wallet &amp; over 40+ minutes</strong> for a user to use an app on another chain with the swapping, bridging of tokens &amp; GAS, switching RPCs, and other actions involved.</p>\n</blockquote>\n<p>There are several standards today for smart contract wallets. Users send signed UserOps that are bundled together and sent on-chain. It also enables users to pay gas fees using ERC-20 tokens (e.g. USDC) instead of ETH by allowing a third party to sponsor their gas fees.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/6/d696cf1819e42dfa3424b84e0c8360da38183915.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/d696cf1819e42dfa3424b84e0c8360da38183915\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/6/d696cf1819e42dfa3424b84e0c8360da38183915_2_690x275.jpeg\" alt=\"image\" data-base62-sha1=\"uClhH1sWX81FibeR9e8FT5UQFZH\" width=\"690\" height=\"275\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/6/d696cf1819e42dfa3424b84e0c8360da38183915_2_690x275.jpeg, https://ethresear.ch/uploads/default/optimized/3X/d/6/d696cf1819e42dfa3424b84e0c8360da38183915_2_1035x412.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/d/6/d696cf1819e42dfa3424b84e0c8360da38183915_2_1380x550.jpeg 2x\" data-dominant-color=\"F8F8F8\"></a></div><p></p>\n<p>The current smart wallet experience for users is not suited for transacting in a world with hundreds or thousands of rollups. It restricts the extent of abstraction to just one single rollup instead of thousands of rollups. It forces an average Ethereum user to deal with fragmented assets, forcing them to manage fragments of their assets across 100+ rollups along with complexities like bridging &amp; RPCs for every transaction.</p>\n<h3><a name=\"magicspend-2\" class=\"anchor\" href=\"https://ethresear.ch#magicspend-2\"></a>MagicSpend++</h3>\n<p>We propose MagicSpend++, a framework to allow users to magically spend on any chain instantly, without worrying about which chains their tokens are on.</p>\n<p>MagicSpend++ leverages the existing Account Abstraction standard and builds on Coinbase’s work on MagicSpend - an innovative approach to allow users to leverage their assets held on Coinbase Exchange &amp; utilize them on-chain.</p>\n<p>MagicSpend++ fundamentally enables users to have a <em>Chain Abstracted Balance (CAB)</em> instead of isolated token balances across chains. Users can use their CAB to transact instantly on any chain with a signature. No fragmentation, no bridging, no GAS, no latency.  It’s magic. <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/dizzy.png?v=12\" title=\":dizzy:\" class=\"emoji\" alt=\":dizzy:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>Smart wallet users with MagicSpend++ get:</p>\n<ul>\n<li>A unified single balance across chains that users can spend anywhere</li>\n<li>Completely gas-less experience</li>\n<li>Instant single chain experience - NO CROSS CHAIN, NO BRIDGING, ZERO LATENCY</li>\n</ul>\n<h3><a name=\"fundamental-primitive-time-locked-vaults-3\" class=\"anchor\" href=\"https://ethresear.ch#fundamental-primitive-time-locked-vaults-3\"></a>Fundamental Primitive — Time-locked Vaults</h3>\n<p>In order for tokens to enter the Chain Abstracted Balance, they need to be locked in their smart wallets. Users can withdraw funds back to their <strong>Externally Owned Accounts (EOAs)</strong> after a configurable delay. While locked, the assets remain usable via the smart-account on any chain at any time. <strong>This one-time step required-to onboard as a part of deposit to SCW workflow, it is not required every-time before the assets are used.</strong><br>\nAll assets deposited represent the user’s Chain Abstracted Balance (CAB). This chain abstracted balance can now be spent on any-chain via userOps, without bridging, just like how you would spend these assets as if they were on the chain you are acting on.</p>\n<blockquote>\n<p>Your 100USDC@Optimism, 100USDC@Polygon, 100USDC@Arbitrum, 100USDC@Base, 100 USDC@ethereum all merge together into 400USDC, ready to be spent anywhere.</p>\n</blockquote>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/7/77765f9c7d128996817736249125fd859f3710f6.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/77765f9c7d128996817736249125fd859f3710f6\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/7/77765f9c7d128996817736249125fd859f3710f6_2_690x295.jpeg\" alt=\"image\" data-base62-sha1=\"h2OqQryNE0ThucXV1gIr806Q72u\" width=\"690\" height=\"295\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/7/77765f9c7d128996817736249125fd859f3710f6_2_690x295.jpeg, https://ethresear.ch/uploads/default/optimized/3X/7/7/77765f9c7d128996817736249125fd859f3710f6_2_1035x442.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/7/7/77765f9c7d128996817736249125fd859f3710f6_2_1380x590.jpeg 2x\" data-dominant-color=\"EDF4EE\"></a></div><p></p>\n<h3><a name=\"key-concept-spend-now-debit-later-4\" class=\"anchor\" href=\"https://ethresear.ch#key-concept-spend-now-debit-later-4\"></a><strong>Key concept – Spend Now, Debit Later</strong></h3>\n<p>Conceptually it’s pretty similar to how AA works today with a small difference. User sends UserOp to perform an target chain, just like they would if they had funds on the same chain. Paymasters can now fund the userOp with not just gas but with additional funds to facilitate the on-chain execution of the UserOp. Paymaster then goes and claims it from the chain abstracted balance.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/5/85d1025c1eb22df5366dedd8449865387901327e.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/85d1025c1eb22df5366dedd8449865387901327e\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/5/85d1025c1eb22df5366dedd8449865387901327e_2_690x427.jpeg\" alt=\"image\" data-base62-sha1=\"j5NiPDanx1UZ2EZxBTNYgAjMwEu\" width=\"690\" height=\"427\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/5/85d1025c1eb22df5366dedd8449865387901327e_2_690x427.jpeg, https://ethresear.ch/uploads/default/optimized/3X/8/5/85d1025c1eb22df5366dedd8449865387901327e_2_1035x640.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/5/85d1025c1eb22df5366dedd8449865387901327e_2_1380x854.jpeg 2x\" data-dominant-color=\"F0F2E8\"></a></div><p></p>\n<h3><a name=\"how-it-works-high-level-overview-5\" class=\"anchor\" href=\"https://ethresear.ch#how-it-works-high-level-overview-5\"></a><strong>How it works - high level overview</strong></h3>\n<p>Say Alice wants to purchase a NFT on BASE using her 1000USDC Chain-Abstracted-Balance:</p>\n<ul>\n<li>Alice sends a signed UserOp to purchase the NFT on BASE</li>\n<li>Paymaster checks(offchain) if there are sufficient funds with Alice in her chain abstracted balance and authorizes usage of paymaster funds via a special_signature</li>\n<li>UserOp is sent to bundler with paymasterAndData containing the special_signature that allows the SCW to pull funds from the paymaster’s pool of liquidity on BASE</li>\n<li>UserOp is normally executed onchain leveraging the paymaster funds, SCW leverages withdrawGasExcess(special_signature) to pull funds from paymaster</li>\n<li>Paymaster can now debit the respective funds from Alice’s chain abstracted balance in custody of smart-wallets (whichever chain or multiple-chains that they are on)</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/d/cdfdad93b81b35b2a546ea19f28e38c2990dd52d.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/cdfdad93b81b35b2a546ea19f28e38c2990dd52d\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/d/cdfdad93b81b35b2a546ea19f28e38c2990dd52d_2_690x317.jpeg\" alt=\"image\" data-base62-sha1=\"tohnOzYUGrbP9s4JdrhcukbtAfP\" width=\"690\" height=\"317\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/d/cdfdad93b81b35b2a546ea19f28e38c2990dd52d_2_690x317.jpeg, https://ethresear.ch/uploads/default/optimized/3X/c/d/cdfdad93b81b35b2a546ea19f28e38c2990dd52d_2_1035x475.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/d/cdfdad93b81b35b2a546ea19f28e38c2990dd52d_2_1380x634.jpeg 2x\" data-dominant-color=\"F1F3F3\"></a></div><p></p>\n<h3><a name=\"not-cross-chain-but-chain-abstraction-6\" class=\"anchor\" href=\"https://ethresear.ch#not-cross-chain-but-chain-abstraction-6\"></a>Not Cross-chain but Chain Abstraction</h3>\n<p>This removes a lot of the pain a user faces today: figure out swap, bridge, buy new gas paying asset and only then will you get to use this new thing. This is dumb and holding back new innovation from taking off. A DEX can be 10x more capital efficient but without liquidity/volume it doesn’t matter.</p>\n<p>Chain abstracted wallets provide various 10x improvements for users:</p>\n<ul>\n<li>User asset-balances across chains are combined into one <strong>Chain Abstracted Balance</strong></li>\n<li>Balance is instantly usable anywhere, zero bridging latency</li>\n</ul>\n<p>This is completely different than any cross-chain implementations where wallets integrate bridges likes Across, Stargate, etc.</p>\n<p>Cross-chain implementations are push-based where users start with a fragmented balance on one chain and “push” their tokens to another. On the other hand, MagicSpend++ is pull based where the user simply uses an app and their funds are pulled by the paymaster later. It’s like Spend first, debit later.</p>\n<p>This has various implications for the end users.</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Cross-Chain Accounts (push)</th>\n<th>Chain Abstracted Balance (pull)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Asset fragmentation still persists across chains. Users still have to think about fragmented assets on different chains</td>\n<td>Single Chain Abstracted Balance</td>\n</tr>\n<tr>\n<td>Bridging latency-  Users sign a UserOp on the source chain, wait for source chain finality before tx is processed on target chain</td>\n<td>Instant finality- User sign a UserOp on the target chain which is fulfilled immediately. No need to wait for finality on source chain.</td>\n</tr>\n<tr>\n<td>Failure on dest chains - UserOp can fail mid-bridging. Users get stuck with arbitrary funds on target chain in this case</td>\n<td>Guaranteed execution - user funds are deducted from the balance only if their transaction is successful</td>\n</tr>\n<tr>\n<td>Users get tied into trust properties of the bridge for settlement</td>\n<td>Users have tighter control over security where they can configure how paymasters can settle</td>\n</tr>\n</tbody>\n</table>\n</div><h2><a name=\"diving-deeper-7\" class=\"anchor\" href=\"https://ethresear.ch#diving-deeper-7\"></a>Diving Deeper</h2>\n<p>All we really need to enable this is a new module that creates a vault with configurable withdraw delay such that users can deposit into this vault but only withdraw after a time period, the funds deposited are still usable by the user but in a chain-abstracted fashion. These vaults can be on multiple chains and all the balances will add up and be usable as one.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/9/299b49a7fa6fbf3619fbdc0c3b6cc846342ec7b9.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/299b49a7fa6fbf3619fbdc0c3b6cc846342ec7b9\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/9/299b49a7fa6fbf3619fbdc0c3b6cc846342ec7b9_2_690x376.jpeg\" alt=\"image\" data-base62-sha1=\"5W4hhiizinXxtWS3EXaaQIL150Z\" width=\"690\" height=\"376\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/9/299b49a7fa6fbf3619fbdc0c3b6cc846342ec7b9_2_690x376.jpeg, https://ethresear.ch/uploads/default/optimized/3X/2/9/299b49a7fa6fbf3619fbdc0c3b6cc846342ec7b9_2_1035x564.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/2/9/299b49a7fa6fbf3619fbdc0c3b6cc846342ec7b9_2_1380x752.jpeg 2x\" data-dominant-color=\"F4F4F3\"></a></div><p></p>\n<p>A good example to start with is Alice wants to mint an NFT on Ethereum worth 100 USDC, lets assume the deposit into the SCW was already done on Base 1000 blocks ago</p>\n<ul>\n<li>Alice goes to the NFT mint site, and wants to insta buy</li>\n<li>Alice clicks mint button the paymaster service checks locked userBalance on all vaults across chains and sends back a special_signature</li>\n<li><code>paymasterAndData</code> ****will be set to whatever paymaster service application/user opts into just like today, the data however includes the special_signature provided by the paymaster</li>\n<li>This userOp is sent to bundler → entrypoint</li>\n<li>Entrypoint calls validateUserOp() on the SCW and does the usual operations</li>\n<li>When Entrypoint calls validatePaymasterUserOp(……special_signature)</li>\n<li>Post the usual validations, the paymaster validates the signature and sets a map(address⇒amount) to allow userOp.sender withdraw the amount (which will be the SCW)</li>\n<li>The SCW will then leveraging the <code>withdrawGasExcess</code> method pull funds from the paymaster and execute the userOp that buys the NFT</li>\n<li>In the postOp operation\n<ul>\n<li>mapping(address⇒amount) set earlier will be deleted to ensure no double spends</li>\n<li>an execution proof will be sent by the sender contract on L1 to an L2 or multiple L2s via the native-rollup-connections\n<ul>\n<li>execution proof is simply a proof to convince chainA of some execution that happened on chainB, think light-client proofs, ZKPs etc</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Funds will be then deducted from the userVault and given to paymaster</li>\n</ul>\n<aside>\n💡 Interesting thing to note here, while the paymasters are forwarding funds to the user, they are not taking ANY reorg risk since there is no source chain tx for a userOp that is trying to spend, its credit now, debit later\n</aside>\n<h2><a name=\"limitations-and-solutions-8\" class=\"anchor\" href=\"https://ethresear.ch#limitations-and-solutions-8\"></a>Limitations and Solutions</h2>\n<p>While the above mechanism works great and accomplishes the desired goals, the approach has limitations with paymaster availability &amp; settlement flexibility. Smart-Wallets can by-pass these limitations using Socket’s MOFA.</p>\n<ul>\n<li><strong>Single Paymaster Weak</strong>: User gets locked into a single paymaster and if paymaster doesn’t have liquidity userOps will not be executed. SCWs can instead delegate paymaster election to Socket’s MOFA to tap into a global network of competing paymasters and sidestep liquidity and efficiency issues. With MOFA, multiple paymasters compete to fulfill incoming UserOps, which means more paymasters, more liquidity &amp; more execution. Single paymaster weak, paymasters together strong.</li>\n<li><strong>Restrictive Settlement Options</strong>: Its quite important in the chain-abstracted world for users signing userOps or developers building SCWs to have the ability to expand to new chains quickly, to be able to make their own tradeoffs(security, cost, latency). Standardisation around settlement allows for users and developers to handle both expansion and tradeoff selection in a transparent fashion.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/5/35964d42692a8fd042edb63452bab73015cbf3c1.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/35964d42692a8fd042edb63452bab73015cbf3c1\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/5/35964d42692a8fd042edb63452bab73015cbf3c1_2_690x416.jpeg\" alt=\"image\" data-base62-sha1=\"7E3kdjjA0mf65c2bKTF4ahMF72h\" width=\"690\" height=\"416\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/5/35964d42692a8fd042edb63452bab73015cbf3c1_2_690x416.jpeg, https://ethresear.ch/uploads/default/optimized/3X/3/5/35964d42692a8fd042edb63452bab73015cbf3c1_2_1035x624.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/3/5/35964d42692a8fd042edb63452bab73015cbf3c1_2_1380x832.jpeg 2x\" data-dominant-color=\"F5F5F4\"></a></div><p></p>\n<h2><a name=\"acknowledgements-9\" class=\"anchor\" href=\"https://ethresear.ch#acknowledgements-9\"></a>Acknowledgements</h2>\n<p>We think magic-spend++ enables complete chain-abstraction, where users dont have to care where their assets are.</p>\n<p>Thank you to the following people for the many discussions, reviews and idea-sharing which lead to the creation of this proposal(in no particular order):</p>\n<p>Wilson Cusack, Pierce Harger, Uma(<span class=\"mention\">@pumatheuma</span>), Alex Watts, Partha, Ahmed Al-Balaghi, Sachin Tomar, Ivo Georgiev, Theo Gonella, Derek Chiang, Kristof Gazso, Ankit and Stephane, Kakusan, Bapireddy, Aniket Jindal</p>\n<p>We are keen to work with existing AA players building bundlers, paymasters and existing solvers/paymasters, wallets, dapps and together be at a place where no one needs to bridge anymore. If anyone is interested in magic-spend++ or chain-abstraction in general we have a public group here to talk about it: <a href=\"https://t.me/+QygeBurngS4wODNl\" rel=\"noopener nofollow ugc\">https://t.me/+QygeBurngS4wODNl</a></p>\n<p>Account Abstraction → Chain Abstraction journey begins now</p>\n<h2><a name=\"faqs-10\" class=\"anchor\" href=\"https://ethresear.ch#faqs-10\"></a>FAQs</h2>\n<ul>\n<li>Are paymasters becoming solvers/fillers here?\n<ul>\n<li>Solvers/Fillers in cross-chain setting for eg as used in Across, DLN and other intent based protocols are entities that front liquidity and take on reorg risk in return of fees, paymasters in the AA world are not needed to take on reorg risk and here paymasters arent exposed to reorg risk either, so no they arent the same</li>\n</ul>\n</li>\n<li>What risks/trust-assumptions are here for users?\n<ul>\n<li>Users only need to trust the proof-system for security here and there is no additional off-chain security, magic-spend++ can leverage ZKPs, rollup-messengers to have an extremely trust-minimised setup</li>\n</ul>\n</li>\n</ul>\n            <p><small>13 posts - 7 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/magicspend-spend-now-debit-later/19678\">Read full topic</a></p>","link":"https://ethresear.ch/t/magicspend-spend-now-debit-later/19678","pubDate":"Wed, 29 May 2024 19:00:10 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19678"},"source":{"@url":"https://ethresear.ch/t/magicspend-spend-now-debit-later/19678.rss","#text":"MagicSpend++ Spend Now, Debit Later"}},{"title":"Practical, Trustless, Bitcoin Bridge","dc:creator":"cryptskii","category":"Cryptography","description":"<h2><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>TL;DR</h2>\n<p>This proposal presents a practical trustless Bitcoin bridge using Nillion’s NMC (Nil Message Compute) protocol. The bridge leverages secure encryption, secret sharing, and cross-chain witness validation to enable the secure and decentralized transfer of Bitcoin to other blockchains.</p>\n<h2><a name=\"background-2\" class=\"anchor\" href=\"https://ethresear.ch#background-2\"></a>Background</h2>\n<p>Interoperability between different blockchains is crucial for the growing decentralized ecosystem. Trustless bridges allow secure transfers of assets and information across blockchain networks without relying on a central trusted authority. Nillion’s NMC protocol provides a framework for creating such trustless bridges.</p>\n<h2><a name=\"proposal-3\" class=\"anchor\" href=\"https://ethresear.ch#proposal-3\"></a>Proposal</h2>\n<p>The proposed trustless Bitcoin bridge consists of the following steps:</p>\n<ol>\n<li>\n<p><strong>Initial Encryption</strong>:</p>\n<ul>\n<li>\n<p>The Bitcoin secret key <span class=\"math\">( K )</span> is encrypted using a symmetric encryption scheme <span class=\"math\">( E = (\\text{Enc}, \\text{Dec}) )</span> with a condition-based ciphertext <span class=\"math\">( C )</span> dependent on a predefined condition <span class=\"math\">( \\Phi )</span> on a separate blockchain, such as Ethereum:</p>\n<p><span class=\"math\">C = \\text{Enc}(K, \\Phi)</span></p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Generating Particles</strong>:</p>\n<ul>\n<li>\n<p>A One-Time Mask (OTM) is applied to the ciphertext <span class=\"math\">( C )</span> to generate masked particles <span class=\"math\">\\{p_i\\}_{i=1}^n</span>:</p>\n<p><span class=\"math\">p_i = C \\oplus b_i \\quad \\forall i \\in [1, n]</span></p>\n<p>where <span class=\"math\">\\{b_i\\}_{i=1}^n</span> are random blinding factors.</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Blinding Factor Sharing</strong>:</p>\n<ul>\n<li>\n<p>Linear Secret Sharing (LSS) is used to distribute the blinding factors <span class=\"math\">\\{b_i\\}_{i=1}^n</span> among a decentralized network of nodes <span class=\"math\">\\{N_i\\}_{i=1}^n</span>.</p>\n</li>\n<li>\n<p>Polynomials <span class=\"math\">f_i(x)</span> of degree <span class=\"math\">t</span> are constructed for each blinding factor <span class=\"math\">b_i</span>:</p>\n<p><span class=\"math\">f_i(x) = b_i + a_1 x + a_2 x^2 + \\cdots + a_t x^t</span></p>\n</li>\n<li>\n<p><span class=\"math\">n</span> shares <span class=\"math\">\\{s_{i,j}\\}_{j=1}^n</span> are generated for each blinding factor <span class=\"math\">b_i</span> by evaluating <span class=\"math\">f_i(x)</span> at distinct points <span class=\"math\">x_j \\in \\mathbb{F}_p</span>:</p>\n<p><span class=\"math\">s_{i,j} = f_i(x_j) \\quad \\forall j \\in [1, n]</span></p>\n</li>\n<li>\n<p>The shares are distributed to the corresponding nodes <span class=\"math\">N_j</span>.</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Particle Distribution</strong>:</p>\n<ul>\n<li>The masked particles <span class=\"math\">\\{p_i\\}_{i=1}^n</span> are distributed across the decentralized network of nodes <span class=\"math\">\\{N_i\\}_{i=1}^n</span>.</li>\n<li>Each node <span class=\"math\">N_i</span> holds a single particle <span class=\"math\">p_i</span>.</li>\n</ul>\n</li>\n<li>\n<p><strong>Witness Condition Validation</strong>:</p>\n<ul>\n<li>Upon fulfillment of the predefined condition <span class=\"math\">\\Phi</span> on the Ethereum blockchain, a witness proof <span class=\"math\">\\pi</span> is generated.</li>\n<li>Nodes validate the witness proof <span class=\"math\">\\pi</span> to initiate the reconstruction process.</li>\n</ul>\n</li>\n<li>\n<p><strong>Reconstruction and Decryption</strong>:</p>\n<ul>\n<li>\n<p>Nodes collaborate to reconstruct the blinding factors <span class=\"math\">\\{b_i\\}_{i=1}^n</span> using the LSS shares:</p>\n<p><span class=\"math\">b_i = \\sum_{j \\in I} s_{i,j} \\prod_{k \\in I \\setminus \\{j\\}} \\frac{x_k}{x_k - x_j}</span></p>\n<p>where <span class=\"math\">I \\subseteq [1, n]</span> and <span class=\"math\">|I| = t + 1</span>.</p>\n</li>\n<li>\n<p>With the reconstructed blinding factors <span class=\"math\">\\{b_i\\}_{i=1}^n</span>, nodes unmask their particles <span class=\"math\">p_i</span> to recover the original ciphertext <span class=\"math\">C</span>:</p>\n<p><span class=\"math\">C = p_i \\oplus b_i \\quad \\forall i \\in [1, n]</span></p>\n</li>\n<li>\n<p>The recovered ciphertext <span class=\"math\">C</span> is decrypted using <span class=\"math\">\\text{Dec}</span> and the condition <span class=\"math\">\\Phi</span> to obtain the Bitcoin secret key <span class=\"math\">K</span>:</p>\n<p><span class=\"math\">K = \\text{Dec}(C, \\Phi)</span></p>\n</li>\n</ul>\n</li>\n</ol>\n<h2><a name=\"advantages-4\" class=\"anchor\" href=\"https://ethresear.ch#advantages-4\"></a>Advantages</h2>\n<p>The proposed trustless Bitcoin bridge has several advantages:</p>\n<ul>\n<li><strong>Decentralization</strong>: The use of a decentralized network of nodes eliminates the need for a central trusted authority.</li>\n<li><strong>Security</strong>: The encryption and secret sharing techniques ensure the confidentiality and integrity of the Bitcoin secret key.</li>\n<li><strong>Cross-chain interoperability</strong>: The bridge enables the secure transfer of Bitcoin to other blockchains, such as Ethereum, based on predefined conditions.</li>\n<li><strong>Fault tolerance</strong>: The use of Linear Secret Sharing provides fault tolerance, as the secret can be reconstructed even if some nodes are unavailable or malicious.</li>\n</ul>\n<h2><a name=\"applications-5\" class=\"anchor\" href=\"https://ethresear.ch#applications-5\"></a>Applications</h2>\n<p>The trustless Bitcoin bridge has various applications, including:</p>\n<ul>\n<li><strong>Cross-chain asset transfers</strong>: Enabling the seamless transfer of Bitcoin to other blockchains for use in decentralized applications (DApps) and decentralized finance (DeFi) protocols.</li>\n<li><strong>Atomic swaps</strong>: Facilitating atomic swaps between Bitcoin and other cryptocurrencies without the need for a trusted intermediary.</li>\n<li><strong>Conditional payments</strong>: Allowing for conditional Bitcoin payments based on events or conditions on other blockchains.</li>\n</ul>\n<h2><a name=\"conclusion-6\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-6\"></a>Conclusion</h2>\n<p>The proposed trustless Bitcoin bridge using Nillion’s NMC protocol provides a secure, decentralized, and interoperable solution for transferring Bitcoin across different blockchain networks. By leveraging cryptographic techniques such as encryption, secret sharing, and cross-chain witness validation, the bridge ensures the integrity and confidentiality of the transferred assets. This proposal opens up new possibilities for cross-chain asset transfers, atomic swaps, and conditional payments, further enhancing the interoperability and composability of the decentralized ecosystem.</p>\n<p><a href=\"https://cognizium.io/uploads/resources/Nillion%20-%20A%20Secure%20Processing%20Layer%20for%20Web3%20-%202022%20Feb.pdf\" rel=\"noopener nofollow ugc\">Nillion Whitepaper</a></p>\n            <p><small>2 posts - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/practical-trustless-bitcoin-bridge/19676\">Read full topic</a></p>","link":"https://ethresear.ch/t/practical-trustless-bitcoin-bridge/19676","pubDate":"Wed, 29 May 2024 17:16:41 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19676"},"source":{"@url":"https://ethresear.ch/t/practical-trustless-bitcoin-bridge/19676.rss","#text":"Practical, Trustless, Bitcoin Bridge"}},{"title":"FAQ: Ethereum issuance reduction","dc:creator":"aelowsson","category":"Economics","description":"<h1><a name=\"faq-ethereum-issuance-reduction-1\" class=\"anchor\" href=\"https://ethresear.ch#faq-ethereum-issuance-reduction-1\"></a>FAQ: Ethereum issuance reduction</h1>\n<h2><a name=\"overview-2\" class=\"anchor\" href=\"https://ethresear.ch#overview-2\"></a>Overview</h2>\n<p>When it comes to the premise of reducing issuance, there are many important questions to consider. Having studied these questions extensively, I thought it would be fruitful to address them one by one, providing detailed answers as needed. I post on Ethresearch to facilitate debate, and will try to respond to any questions you may have (including new questions suitable for an extended FAQ).</p>\n<p>Some concepts of staking economics that have just been discussed in passing previously are given a more extensive review. These include: <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#h-5-time-quantity-policy-35\">time–quantity policies</a> where the reward curve slowly drifts (and other potential endgame policies), <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#illustrating-hypothetical-distributions-of-reservation-yields-26\">distributions of reservation yields</a> among solo stakers and delegating stakers, and the <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#why-not-dynamically-adjust-the-yield-with-a-mechanism-like-eip-1559-to-guarantee-some-fixed-target-participation-level-16\">downsides of using a vanilla EIP-1559</a> mechanism to target some specific stake participation. Quick link to all questions:</p>\n<ul>\n<li><a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#why-should-ethereum-reduce-its-issuance-4\">Why should Ethereum reduce its issuance?</a></li>\n<li><a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#what-about-economic-security-more-stake-makes-ethereum-more-secure-right-8\">What about economic security? More stake makes Ethereum more secure right?</a></li>\n<li><a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#what-is-a-desirable-issuance-reduction-for-the-near-future-9\">What is a desirable issuance reduction for the near future?</a></li>\n<li><a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#why-not-dynamically-adjust-the-yield-with-a-mechanism-like-eip-1559-to-guarantee-some-fixed-target-participation-level-16\">Why not dynamically adjust the yield with a mechanism like EIP-1559 to guarantee some fixed target participation level?</a></li>\n<li><a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#how-will-a-reduction-in-issuance-affect-the-composition-of-the-staking-set-21\">How will a reduction in issuance affect the composition of the staking set?</a></li>\n<li><a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#what-is-the-endgame-issuance-policy-28\">What is the endgame issuance policy?</a></li>\n<li><a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#why-not-just-prevent-new-stakers-from-joining-36\">Why not just prevent new stakers from joining?</a></li>\n<li><a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#can-stakers-profit-from-a-reduced-issuance-and-what-is-the-relevance-and-impact-of-the-realproportional-yield-37\">Can stakers profit from a reduced issuance and what is the relevance and impact of the real/proportional yield?</a></li>\n<li><a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#some-users-think-that-more-yield-is-more-fun-and-like-to-collect-yield-on-their-eth-why-not-lean-into-this-43\">Some users think that more yield is more fun and like to collect yield on their ETH. Why not lean into this?</a></li>\n</ul>\n<p>It is beneficial to read the answers in the order that they are presented, but they still stand on their own.</p>\n<h2><a name=\"faq-3\" class=\"anchor\" href=\"https://ethresear.ch#faq-3\"></a>FAQ</h2>\n<h3><a name=\"why-should-ethereum-reduce-its-issuance-4\" class=\"anchor\" href=\"https://ethresear.ch#why-should-ethereum-reduce-its-issuance-4\"></a>Why should Ethereum reduce its issuance?</h3>\n<h4><a name=\"overview-5\" class=\"anchor\" href=\"https://ethresear.ch#overview-5\"></a>Overview</h4>\n<p>At the most basic level, stake participation is growing beyond requirements for <a href=\"https://ethresear.ch/t/reward-curve-with-tempered-issuance-eip-research-post/19171#h-51-economic-security-30\">economic security</a>, and paying people to do something that is not necessary always comes with downsides. To be more specific, there are two fundamental reasons for reducing issuance:</p>\n<ol>\n<li>To reduce costs for users, including costs for hardware, risks and opportunity costs, taxes, etc. By maintaining the current reward curve, Ethereum compels users to incur higher costs than necessary for securing the network. Reducing issuance will improve welfare by eliminating implied costs that may very well amount to more than a billion dollars per year.</li>\n<li>To improve Ethereum at the macro level. If everyone stakes, one entity or a cartel might come to exercise control over a large proportion of all ETH. This can reduce security since it becomes harder for the social layer to hold such entities accountable. The potential proliferation of liquid staking tokens (LSTs) may also impede ETH as trustless money, fostering monopolization and making Ethereum a less desirable blockchain to build on.</li>\n</ol>\n<p>The answer will now take a closer look at these two aspects.</p>\n<h4><a name=\"h-1-reduced-costs-raise-welfare-6\" class=\"anchor\" href=\"https://ethresear.ch#h-1-reduced-costs-raise-welfare-6\"></a>1. Reduced costs raise welfare</h4>\n<p>Review Figure 1 (example with more details <a href=\"https://ethresear.ch/t/reward-curve-with-tempered-issuance-eip-research-post/19171#h-21-user-utility-9\">here</a>), featuring a <a href=\"https://ethresear.ch/t/properties-of-issuance-level-consensus-incentives-and-variability-across-potential-reward-curves/18448\">hypothetical future supply curve</a> in blue. The supply curve indicates the amount of stake deposited <span class=\"math\">D</span> at various staking yields <span class=\"math\">y</span>. It captures the implied marginal cost of staking. What that means is that every ETH holder is positioned along the supply curve according to how high cost they assign to staking, with their required yield reflecting that cost. Relevant costs include hardware and other resources, upkeep, the acquisition of technical knowledge, illiquidity, trust in third parties and other factors increasing the risk premium, various opportunity costs, taxes, etc. The area above the supply curve indicates the stakers’ surplus (what they actually gain). The area below the supply curve—the supply curve’s integral—indicates the costs assigned to staking (the marginal staker would not stake at a yield below the supply curve).</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/5/e587ae3810f916ac663314fe3227c696b945acc4.png\" data-download-href=\"https://ethresear.ch/uploads/default/e587ae3810f916ac663314fe3227c696b945acc4\" title=\"Figure 1\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e587ae3810f916ac663314fe3227c696b945acc4_2_690x410.png\" alt=\"Figure 1\" data-base62-sha1=\"wKw2amSYoguXC8n487AjJVkXRNa\" width=\"690\" height=\"410\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/5/e587ae3810f916ac663314fe3227c696b945acc4_2_690x410.png, https://ethresear.ch/uploads/default/optimized/3X/e/5/e587ae3810f916ac663314fe3227c696b945acc4_2_1035x615.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/e/5/e587ae3810f916ac663314fe3227c696b945acc4_2_1380x820.png 2x\" data-dominant-color=\"E7E8F5\"></a></div><p></p>\n<p><strong>Figure 1.</strong> Implied cost (blue) and surplus (grey) of staking under a hypothetical future supply curve. A change in issuance policy shifts the equilibrium from the black square to the green circle. The cost reduction (dark blue) leads to aggregate welfare improvement as long as the protocol remains secure and decentralized, and the reduction in surplus (dark grey) simply shifts some utility from stakers to everyone.</p>\n<p>Two reward curves are shown, with maximum extractable value (MEV) added to the staking yield. In this FAQ, MEV will be 300k ETH/year (close to the average over the last few years) and include priority fees. By maintaining the current reward curve in black, Ethereum compels users to incur higher costs than necessary for securing the network. Adopting the <a href=\"https://ethresear.ch/t/reward-curve-with-tempered-issuance-eip-research-post/19171\">green reward curve</a> eliminates the costs represented by the dark blue area (around 450 000 ETH), thus improving welfare. The issued ETH covered for hardware expenses, taxes, reduced liquidity and risks that users would choose to sidestep under a lower yield. With the green curve, they can, and the benefits are shared by everyone, including remaining stakers. This creates value for all token holders through a reduction in newly minted ETH. It may seem strange that it matters how many new ETH that are created. But imagine if every ETH was converted to 10 ETH tomorrow so that there were 1.2 billion instead of 120 million ETH in total. Then every ETH would be around 10 times less valuable. What matters is the proportion of all ETH that you hold; a concept that we will get back to in a subsequent <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#proportional-yield-40\">answer</a>. There is also a surplus shift from stakers to everyone from a change in issuance policy, indicated by the darker grey area. That ETH indeed previously benefited stakers, since it was taken from everyone (in the form of newly minted ETH), and then given specifically to them.</p>\n<p>It is common to treat the issuance reduction achieved by removing the dark blue area the same as when removing the dark grey area. When not explicitly highlighting the reduction in costs among those that stop staking as the issuance falls, value may appear to merely shift from one class of users to another in the form of a gain or loss in <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675/1#proportional-yield-40\">real/proportional yield</a>. Issued tokens are redistributed among a different quantity of stakers, not creating any new value at the aggregate level. Without a division into cost and surplus, the <a href=\"https://notes.ethereum.org/@anderselowsson/Foundations-of-MVI\">welfare gain</a> can get lost in translation, especially if it is not otherwise implied by remarking on the outcome among all users at the different equilibria. In a subsequent <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#can-stakers-profit-from-a-reduced-issuance-and-what-is-the-relevance-and-impact-of-the-realproportional-yield-37\">answer</a>, the different effects will be studied more closely.</p>\n<p>Slashing risks or any bugs that would effectively burn the stake are from an “accounting perspective” less attributable as a pure cost at the aggregate protocol level, and taxes will by their nature increase costs for a user when its surplus rises. But the general principle of capturing costs below the supply curve as the issuance that does not generate any surplus to stakers is very useful for understanding staking economics and welfare.</p>\n<p>What <a href=\"https://notes.ethereum.org/@anderselowsson/Foundations-of-MVI#Let-the-best-money-win\">happens when we impose unnecessary costs</a>  on our users? If they are forced to select between incurring these costs as stakers, or to subject themselves to an increased dilution under equilibrium, they might simply decide to use another blockchain, where the imposed costs are lower. This would of course affect both token holders and anyone building on Ethereum negatively. Ethereum operates in a free market and must always strive to perfect the user experience.</p>\n<h4><a name=\"h-2-macro-perspective-7\" class=\"anchor\" href=\"https://ethresear.ch#h-2-macro-perspective-7\"></a>2. Macro perspective</h4>\n<p>A <a href=\"https://en.wikipedia.org/wiki/True_cost_accounting\">true cost accounting</a> must also incorporate the <a href=\"https://notes.ethereum.org/@anderselowsson/MinimumViableIssuance#Benefits-of-MVI-from-a-macro-perspective\">macro perspective</a>. An LST exceeding critical thresholds regarding the <em>proportion</em> of stake under its control may compromise the consensus mechanism. Outsized profits from blockspace are here a <a href=\"https://notes.ethereum.org/@djrtwo/risks-of-lsd#Stratum-for-cartelization\">stratum for cartelization</a>. But if everyone is compelled to stake, an entity or cartel of entities may also gain control over a significant proportion of the <em>total</em> ETH—propelled by network externalities such as the money function of an LST. These externalities are a stratum for cartelization extending outside of the consensus mechanism. The compromised institution also sits one layer above, namely the social layer.</p>\n<p>It became apparent with <a href=\"https://en.wikipedia.org/wiki/The_DAO\">The DAO</a> that if the proportion of the total circulating supply affected by an outcome grows sufficiently large, then the social layer may waver on its commitment to the underlying intended consensus process. An LST might grow “<a href=\"https://x.com/weboftrees/status/1710713959362252884\">too big to fail</a>” in the eyes of the Ethereum social layer. If the community can no longer effectively intervene in the event of a 51% attack, then Vitalik’s <a href=\"https://www.youtube.com/watch?v=8DHGOlIlMvc&amp;t=1938s\">warning system</a> and Danny’s <a href=\"https://notes.ethereum.org/@djrtwo/risks-of-lsd#Risks-on-Capital-vs-Risks-to-Protocol\">recourses</a> may not be effective. Staking becomes so ubiquitous that the social consensus mechanism is overloaded. It is a special and in a way inverted case of issues Vitalik <a href=\"https://vitalik.eth.limo/general/2023/05/21/dont_overload.html\">previously warned about</a>.</p>\n<p>The macro perspective also extends beyond consensus. If one or a few LSTs overtake as money in the Ethereum ecosystem, they will embed themselves across every layer and application. An economy that is not powered by a <a href=\"https://x.com/fradamt/status/1760808900792594593\">trustless asset</a> is arguably not as <a href=\"https://ethresear.ch/t/circulating-supply-equilibrium-for-ethereum-and-minimum-viable-issuance-during-the-proof-of-stake-era/10954#631-money-lego-25\">resilient</a>, regardless of if the consensus process itself is never threatened. The applications powering the money will gain an outsized influence over the applications using the money, and Ethereum will become a less desirable blockchain to build and develop on.</p>\n<h3><a name=\"what-about-economic-security-more-stake-makes-ethereum-more-secure-right-8\" class=\"anchor\" href=\"https://ethresear.ch#what-about-economic-security-more-stake-makes-ethereum-more-secure-right-8\"></a>What about economic security? More stake makes Ethereum more secure right?</h3>\n<p>It is true that up to a certain point, more stake makes Ethereum more secure. But even before reaching this point, the marginal increase in security from adding another validator brings less utility to users than the utility loss stemming from the numerous downsides of excessive issuance (see the <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#why-should-ethereum-reduce-its-issuance-4\">previous answer</a>) that negatively affect users, builders, and holders of the ETH token. Ethereum’s economic security will in the long term inherently be linked to the ability of ETH to retain its value. A holistic perspective is therefore important also when considering economic security. This is underscored by reflecting on the early days of Ethereum, when the ETH token was much less valuable. Eight years ago, In May 2016, <a href=\"https://blog.ethereum.org/2016/05/09/on-settlement-finality\">Vitalik deliberated on</a> the value that Ethereum can and cannot secure at a stake participation of 30%. At the time, the market cap of the ETH token was roughly 500 times lower than today, and the economic security that Ethereum could offer was therefore limited. Increasing stake participation from 30% to 60% would only increase the value of 1/3 of the stake (the threshold for the ability to delay finality) from $70M to $140M. This highlights that once the proportion staked has risen above insignificant levels, it will ultimately be Ethereum’s role in the world economy, and the ether’s role in the Ethereum economy, that determines the economic security.</p>\n<p>In a recent AMA, Justin Drake <a href=\"https://www.reddit.com/r/ethereum/comments/191kke6/comment/kh79gh1\">suggested</a> that a stake participation of 1/4 (30M ETH) is appropriate. Vitalik Buterin <a href=\"https://www.reddit.com/r/ethereum/comments/191kke6/comment/kh7do9k/\">concurred</a>, but also added a personal note of finding 1/8 (15M ETH) fine. As the quantity of stake grows, the prospects for high economic security in the long term gradually begin to diminish. It seems reasonable to argue that Ethereum would have higher economic security twenty years from now with a reward curve that sees the deposit size settle on 30M ETH staked than at 90M ETH—as long as the composition of the staking set remains viable. Beyond certain limits, even short-term security begins to degrade, in line with the reasoning around the <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#h-2-macro-perspective-7\">macro perspective</a>. The social layer may lose its neutrality and credibility as the ultimate arbitrator against attacks from dominant SSPs. At the other end, even long-term security will be negatively affected if users are not incentivized to add another validator while that brings positive utility: a blockchain with poor short-term security from too little stake becomes undesirable to build on as well.</p>\n<p>The outlined considerations hint at a <a href=\"https://twitter.com/weboftrees/status/1585641193982918656\">range</a> within which it is desirable to keep stake participation. There is no single ideal quantity because Ethereum can adapt its security expenditures based on the prevailing price of security, something which is facilitated through a reward curve. The staking yield should be very high at 15M ETH to ensure sufficient participation. When the quantity of stake is 60M ETH, the staking yield should be very low, to dissuade additional staking. At 30M ETH staked, the staking yield can be set in between these extremes, at a level that makes an equilibrium likely. Note that the total security expenditure (issuance, <span class=\"math\">Y_i</span>) potentially can remain rather fixed as the issuance yield <span class=\"math\">y_i</span> varies, since the issued tokens will be distributed to more stakers when more stake is deposited, thus bringing down the yield. This relationship is expressed by the equation <span class=\"math\">Y_i=y_iD</span>. Economic security is also discussed <a href=\"https://ethresear.ch/t/reward-curve-with-tempered-issuance-eip-research-post/19171#h-51-economic-security-30\">here</a>.</p>\n<h3><a name=\"what-is-a-desirable-issuance-reduction-for-the-near-future-9\" class=\"anchor\" href=\"https://ethresear.ch#what-is-a-desirable-issuance-reduction-for-the-near-future-9\"></a>What is a desirable issuance reduction for the near future?</h3>\n<h4><a name=\"overview-10\" class=\"anchor\" href=\"https://ethresear.ch#overview-10\"></a>Overview</h4>\n<p>It is desirable to adopt a reward curve situated within the yellow area in Figures 2-4 below. It can be done using a reward curve with tempered issuance (slowly falling as the amount of stake increases) as exemplified in green or a reward curve with capped issuance with examples shown in pink. A reward curve below the yellow area would make the influence of MEV rather troublesome because block proposal rights would bring in relatively more value than attestations, and might also not be warranted at this point. A reward curve above the yellow area might not be sufficiently impactful relative to the potentially fractious governance process that comes with changing issuance policy.</p>\n<h4><a name=\"influence-of-mev-11\" class=\"anchor\" href=\"https://ethresear.ch#influence-of-mev-11\"></a>Influence of MEV</h4>\n<p>Any change to the reward curve should account for MEV. Forcing a low quantity of stake is undesirable if the MEV is not at the same time burned, as explored in a <a href=\"https://ethresear.ch/t/properties-of-issuance-level-consensus-incentives-and-variability-across-potential-reward-curves/18448\">recent write-up</a>, and the following <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#variability-for-solo-stakers-23\">answer</a>. If issuance yield is reduced to strictly enforce an equilibrium in the presence of high MEV, block proposal rights may be the only remaining source of revenue. This would significantly increase the <a href=\"https://ethresear.ch/t/properties-of-issuance-level-consensus-incentives-and-variability-across-potential-reward-curves/18448#h-43-variability-with-fixed-supply-and-varied-demand-15\">relative standard deviation</a> in staking yield for non-pooled stakers, disadvantaging solo stakers. At some point, stakers may simply <a href=\"https://ethresear.ch/t/properties-of-issuance-level-consensus-incentives-and-variability-across-potential-reward-curves/18448/2\">stop attesting</a>. Additional changes to the consensus mechanism would be required to preserve micro incentives when the issuance yield becomes too low. A staking fee taken out each epoch in my view then seems like the best option and would promote “<a href=\"https://ethresear.ch/t/properties-of-issuance-level-consensus-incentives-and-variability-across-potential-reward-curves/18448/11#introduction-1\">incentive invariance</a>”. Non-pooled stakers would then need to lose ETH each epoch even under a low positive issuance yield, in the hope that they may be assigned to propose a block. A simple solution, useful for example under reward curves at the lower edge or a bit below the yellow area, is to <a href=\"https://ethresear.ch/t/properties-of-issuance-level-consensus-incentives-and-variability-across-potential-reward-curves/18448/2\">increase penalties</a> for missed attestations.</p>\n<h4><a name=\"a-reasonable-range-12\" class=\"anchor\" href=\"https://ethresear.ch#a-reasonable-range-12\"></a>A reasonable range</h4>\n<p>What then are the more moderate options that can be contemplated at the present? Figure 2 shows a range in yellow that is reasonable to target currently. Below this range, block proposals will generate more than half of the rewards under the present level of MEV, which could be an uncomfortably high level. Above this range, the change is rather small, and the potentially fractious governance process of changing the reward curve might not be worthwhile. There are also some options that push down the staking yield slightly further at high quantities of stake, which cannot be fully ruled out, discussed <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#h-3-cut-issuance-33\">here</a>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/5/b56eb9daa51f177a7470ecb60ec01edf619417f0.png\" data-download-href=\"https://ethresear.ch/uploads/default/b56eb9daa51f177a7470ecb60ec01edf619417f0\" title=\"Figure 2\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/5/b56eb9daa51f177a7470ecb60ec01edf619417f0_2_690x404.png\" alt=\"Figure 2\" data-base62-sha1=\"pT1EolLP20g4d9eu44AvkEQu8sU\" width=\"690\" height=\"404\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/5/b56eb9daa51f177a7470ecb60ec01edf619417f0_2_690x404.png, https://ethresear.ch/uploads/default/optimized/3X/b/5/b56eb9daa51f177a7470ecb60ec01edf619417f0_2_1035x606.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/5/b56eb9daa51f177a7470ecb60ec01edf619417f0_2_1380x808.png 2x\" data-dominant-color=\"F9F8F7\"></a></div><p></p>\n<p><strong>Figure 2.</strong> A reasonable issuance range in yellow achieved through a reward curve with tempered issuance (green) or capped issuance (pink).</p>\n<h4><a name=\"reward-curve-with-tempered-issuance-green-13\" class=\"anchor\" href=\"https://ethresear.ch#reward-curve-with-tempered-issuance-green-13\"></a>Reward curve with tempered issuance (green)</h4>\n<p>The current reward curve in black follows the equation for issuance yield <span class=\"math\">y_i = cF/\\sqrt{D}</span>, with the constant <span class=\"math\">c\\approx2.6</span> and the base reward factor set to <span class=\"math\">F=64</span>. Yearly issuance is always <span class=\"math\">Y_i=y_iD</span>. The <a href=\"https://ethresear.ch/t/reward-curve-with-tempered-issuance-eip-research-post/19171\">reward curve with tempered issuance</a> in green is created by division with <span class=\"math\">1+D/k</span>, thus:</p>\n<div class=\"math\">\ny_i = \\frac{cF}{\\sqrt{D}(1+D/k)},\n</div>\n<p>with <span class=\"math\">k</span> set to <span class=\"math\">2^{25}</span>. The variable <span class=\"math\">k</span> defines participation at peak issuance, which also becomes the point where issuance is halved, indicated by the lower cross at around 33.6M ETH. The dashed green reward curve makes a small change to the computation, subtracting a fixed constant <span class=\"math\">k_2</span> from <span class=\"math\">D</span> (minimum 0) when computing the new term. This constant was here set to <span class=\"math\">k_2=2^{23}</span>. The idea is to provide stronger guarantees of a sufficient quantity of stake and thus security. While this is very unlikely to be required, it might still make the governance process of finding an agreement on the change easier. A similar effect can also be achieved by using a reward curve of a <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#h-3-cut-issuance-33\">higher order</a>.</p>\n<h4><a name=\"reward-curve-with-capped-issuance-pink-14\" class=\"anchor\" href=\"https://ethresear.ch#reward-curve-with-capped-issuance-pink-14\"></a>Reward curve with capped issuance (pink)</h4>\n<p>In pink are reward curves with capped issuance (shorter write-up <a href=\"https://notes.ethereum.org/@anderselowsson/Reward-curve-with-capped-issuance\">here</a>). The cap <span class=\"math\">D_c</span> defines stake participation when issuance diverges from the current reward curve and flatlines. The lowest setting within the sought range is <span class=\"math\">D_c=2^{23}</span> (8.4M ETH) indicated by a dotted curve and the highest is <span class=\"math\">D_c=2^{24}</span> (16.8M ETH) indicated by a full curve. One interesting detail is that Vitalik Buterin’s <a href=\"https://ethresear.ch/t/simplified-active-validator-cap-and-rotation-proposal/9022\">active validator cap and rotation proposal</a> from March 2021 has the same effect on issuance as when applying <span class=\"math\">D_c=2^{24}</span>. One benefit of this reward curve is thus its long history, potentially being the first serious proposal for tempering the growth in the actively participating stake. The reader might find the comment section on that post interesting, with early thinking on Ethereum’s circulating supply equilibrium, targeting a participation ratio, and variable validator balances. The dashed pink curve corresponds to the viable option of $D_c=15$M ETH. The midpoint, <span class=\"math\">2^{23}\\sqrt{2}</span> might also be interesting (not plotted).</p>\n<h4><a name=\"staking-yield-and-outlook-15\" class=\"anchor\" href=\"https://ethresear.ch#staking-yield-and-outlook-15\"></a>Staking yield and outlook</h4>\n<p>Figure 3 shows the staking yield <span class=\"math\">y=y_i+y_v</span>, including MEV yield <span class=\"math\">y_v</span> at the current level of 300k ETH of MEV per year, for some of the previously outlined reward curves (retained color and line style). In blue is the same <a href=\"https://ethresear.ch/t/properties-of-issuance-level-consensus-incentives-and-variability-across-potential-reward-curves/18448\">hypothetical future supply curve</a> as in Figure 1. It is intended to illustrate what the supply curve might look like a few years from now, as a way to understand how an equilibrium might form. The faint blue line may then be the supply curve after another few years have passed and the <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#h-1-reduced-costs-raise-welfare-6\">costs associated with staking</a> have fallen even further. The difference in equilibrium yield between the two reward curves will depend on the slope of the supply curve and, as illustrated, may not be that significant, here amounting to 0.5%.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/5/d52b39d2492b418b75da0e6f8e56248845a6f497.png\" data-download-href=\"https://ethresear.ch/uploads/default/d52b39d2492b418b75da0e6f8e56248845a6f497\" title=\"Figure 3\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/5/d52b39d2492b418b75da0e6f8e56248845a6f497_2_690x413.png\" alt=\"Figure 3\" data-base62-sha1=\"upMjm4CpDkAFJwcTmwE3vWGsnqL\" width=\"690\" height=\"413\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/5/d52b39d2492b418b75da0e6f8e56248845a6f497_2_690x413.png, https://ethresear.ch/uploads/default/optimized/3X/d/5/d52b39d2492b418b75da0e6f8e56248845a6f497_2_1035x619.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/d/5/d52b39d2492b418b75da0e6f8e56248845a6f497_2_1380x826.png 2x\" data-dominant-color=\"F9F9F9\"></a></div><p></p>\n<p><strong>Figure 3.</strong> Staking yield from the outlined reward curves, inclusive of MEV of 300k ETH per year. Two hypothetical supply curves are indicated in blue.</p>\n<p>Figure 4 instead shows only issuance yield, with no rewards from MEV. If MEV burn (e.g., <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590\">1</a>, <a href=\"https://ethresear.ch/t/execution-tickets/17944\">2</a>, <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\">3</a>) is successfully implemented, the staking yield could approach these levels. However, MEV burn is at a rather early research stage with no guarantee of success, and some parts of the MEV such as consensus-layer preconfirmations may never be burned. The figure illustrates that the equilibrium staking yield could also decrease due to a continued fall in the supply curve, after another few years have passed. The combined effect brings down the staking yield to 1.76% in this hypothetical scenario, but it is still within 0.5% of the equilibrium yield with the current reward curve.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/7/a78f450914605d6e7e6462b23cefdf71a737e7c2.png\" data-download-href=\"https://ethresear.ch/uploads/default/a78f450914605d6e7e6462b23cefdf71a737e7c2\" title=\"Figure 4\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/7/a78f450914605d6e7e6462b23cefdf71a737e7c2_2_690x413.png\" alt=\"Figure 4\" data-base62-sha1=\"nUiGRNZY1tYR5OmeduXyX2vh7Ee\" width=\"690\" height=\"413\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/7/a78f450914605d6e7e6462b23cefdf71a737e7c2_2_690x413.png, https://ethresear.ch/uploads/default/optimized/3X/a/7/a78f450914605d6e7e6462b23cefdf71a737e7c2_2_1035x619.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/a/7/a78f450914605d6e7e6462b23cefdf71a737e7c2_2_1380x826.png 2x\" data-dominant-color=\"F9F9F9\"></a></div><p></p>\n<p><strong>Figure 4.</strong> Issuance yield <span class=\"math\">y_i</span> under the outlined reward curves. This is also the staking yield if all MEV has been successfully burned, a scenario that may not materialize. Two hypothetical supply curves are indicated in blue.</p>\n<p>It can be noted that the reduced staking yield from MEV burn makes an equilibrium at a desirable quantity of stake rather likely, even if the supply curve continues to fall. Therefore, adopting something close to the dashed green reward curve, followed up by MEV burn a little later, could bring Ethereum to a stage where the quantity of stake is tempered and remains firmly below 60M ETH, likely closer to 30M ETH. This does not mean that this reward curve necessarily must remain in place. But the reward curve should give us plenty of time to continue the debate on the “endgame” issuance policy (see <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#what-is-the-endgame-issuance-policy-28\">this answer</a> without having to worry about the quantity of stake growing debilitatingly high.</p>\n<h3><a name=\"why-not-dynamically-adjust-the-yield-with-a-mechanism-like-eip-1559-to-guarantee-some-fixed-target-participation-level-16\" class=\"anchor\" href=\"https://ethresear.ch#why-not-dynamically-adjust-the-yield-with-a-mechanism-like-eip-1559-to-guarantee-some-fixed-target-participation-level-16\"></a>Why not dynamically adjust the yield with a mechanism like EIP-1559 to guarantee some fixed target participation level?</h3>\n<h4><a name=\"overview-17\" class=\"anchor\" href=\"https://ethresear.ch#overview-17\"></a>Overview</h4>\n<p>One common suggestion is that Ethereum should use a mechanism like EIP-1559 to automatically adjust the yield, ensuring that the stake participation is kept at some specific targeted level. Allowing the market to set the issuance yield may seem more neutral, taking away control from developers. Of course, this merely shifts the problem to defining one specific appropriate quantity of stake instead. And what is worse, it constrains Ethereum to purchase an equal amount of security, regardless of its cost. Arguably, there is not one specific appropriate quantity of stake, because the price of the security (the equilibrium issuance level) also matters.</p>\n<p>As <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#what-about-economic-security-more-stake-makes-ethereum-more-secure-right-8\">previously discussed</a>, the marginal increase in security from adding another validator provides diminishing utility as the quantity of stake increases. At some point, the utility loss of excessive issuance becomes greater than the utility gain from more security. Clearly, that point will depend also on the cost of the security. Another concern with a target participation level is that it gives stakers incentives to discouragement attack Ethereum to drive up the issuance, in one version operating as a union. Trying to rectify these flaws will ultimately recreate some form of reward curve, because it is in many ways a more sophisticated solution.</p>\n<h4><a name=\"a-fixed-target-participation-level-is-a-vertical-reward-curve-with-subpar-budgeting-18\" class=\"anchor\" href=\"https://ethresear.ch#a-fixed-target-participation-level-is-a-vertical-reward-curve-with-subpar-budgeting-18\"></a>A fixed target participation level is a vertical reward curve with subpar budgeting</h4>\n<p>When the yield adjusts dynamically to enforce some specific target participation level, the mechanism behaves similar to a vertical reward curve in the long run. Any such mechanism will of course adapt gradually to avoid too big changes in yield from small shifts in the supply curve, but the equilibrium ultimately returns to a point where the supply curve intersects the vertical “dynamic” reward curve. Two such reward curves are illustrated in magenta in Figure 5, one where the target has been set to 30M ETH staked and one at 60M ETH staked. The figure presumes 300k ETH in MEV per year. A regular reward curve “Endgame (3)” presented in <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#h-3-cut-issuance-33\">another answer</a> is instead shown in purple.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/d/eda4f937fd7c3ad86d90391f07bebe06e845ba7d.png\" data-download-href=\"https://ethresear.ch/uploads/default/eda4f937fd7c3ad86d90391f07bebe06e845ba7d\" title=\"Figure 5\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/d/eda4f937fd7c3ad86d90391f07bebe06e845ba7d_2_690x427.png\" alt=\"Figure 5\" data-base62-sha1=\"xUiC6zqBjQZzBs6FYpsih9yMo5D\" width=\"690\" height=\"427\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/d/eda4f937fd7c3ad86d90391f07bebe06e845ba7d_2_690x427.png, https://ethresear.ch/uploads/default/optimized/3X/e/d/eda4f937fd7c3ad86d90391f07bebe06e845ba7d_2_1035x640.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/e/d/eda4f937fd7c3ad86d90391f07bebe06e845ba7d_2_1380x854.png 2x\" data-dominant-color=\"F8F6F9\"></a></div><p></p>\n<p><strong>Figure 5.</strong> Equilibria under various supply curves in blue when using a fixed target participation level (magenta), a reward curve with cut issuance (purple), or the current reward curve (black). Green circles represent desirable outcomes, red crosses undesirable outcomes, and yellow triangles are outcomes somwehere in between. As captured by the red crosses, a fixed target does not facilitate proper budgeting.</p>\n<p>Three hypothetical supply curves are shown in blue, intended to illustrate what the outcome would be under vastly different scenarios. With a 30M target under a high supply curve, an equilibrium forms at a 2.87% staking yield; a desirable outcome under the presence of MEV as marked by a green circle. Under the outlined medium supply curve, an equilibrium forms at 1.87% instead. This might be perceived as slightly problematic because MEV will constitute 53.5% of the total staking rewards. As a result, block proposals bring home around 59.3% of all rewards under the current consensus specification, and so the equilibrium is marked by a yellow triangle to indicate a medium outcome. Yet, it is rather close to being classified as a green circle in my view.  The equilibrium under the low supply curve at a 0.5% staking yield is marked by a red cross to indicate undesirability. This equilibrium happens under a negative issuance yield since the MEV yield is 1%. Non-pooled stakers (e.g., most solo stakers) must then lose money each epoch in the hope of eventually being assigned to propose a block.</p>\n<p>With a 60M target under the high supply curve, an equilibrium forms at a 4.6% staking yield. This is very undesirable. Ethereum would in this scenario issue 2.45M ETH per year when the equilibrium issuance of 0.56M ETH at 30M ETH would be sufficient. The downside of course is the unnecessary <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#h-1-reduced-costs-raise-welfare-6\">costs</a> that Ethereum is subjecting its users to. For the users, this manifests as being coerced into taking on some of those costs as a staker, or otherwis see their savings eroded by dilution. The equilibrium for the medium supply curve is also undesirable for the same reason. The equilibrium at the low supply curve however seems acceptable, at a staking yield of 1.11%. The MEV is a bit high at 45% of the rewards, and indeed the proposer gets 51.8% of the expected staking yield. Yet this seems acceptable in order to keep the quantity of stake from growing too high under a low supply curve, where 60M ETH is already undesirably high.</p>\n<p>The problem with a dynamic reward curve and a specific target is that the associated vertical shape may lead to undesirable staking equilibria. The reader will note that by using the purple reward curve denoted as “Endgame (3)”, an acceptable equilibrium is reached under all three supply curves, as marked by green circles. If the supply curve is higher, an equilibrium with a low quantity of stake is attained, ensuring that the costs to Ethereum’s users do not grow too large. If the supply curve is lower, the quantity of stake is allowed to grow to ensure that a reasonable issuance yield is provided to stakers. This also enables Ethereum to ensure a viable <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#how-will-a-reduction-in-issuance-affect-the-composition-of-the-staking-set-21\">composition of the staking set</a>.</p>\n<p>The future level of the supply curve will always be unknown, and the reward curve (the demand curve) must therefore be designed to produce acceptable outcomes in any reasonable scenario. A desirable reward curve can in a way be understood as the <a href=\"https://en.wikipedia.org/wiki/Expansion_path\">expansion path</a> that optimizes between yield and stake participation across potential supply curves, as <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#philosophical-underpinnings-of-the-optimization-problem-30\">outlined</a> in a subsequent answer. The current reward curve is shown in black and will as indicated produce excessive issuance (costs to users), while also leading to an undesirably high quantity of stake under lower supply curves.</p>\n<p>Ethereum is currently researching MEV burn. This would alleviate some of the concerns with particular equilibria leading to excessive proportions of MEV. The outcome under full MEV burn is shown in Figure 6.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/d/ad0efa8c8105ee179411f4738864f1b0eb46223a.png\" data-download-href=\"https://ethresear.ch/uploads/default/ad0efa8c8105ee179411f4738864f1b0eb46223a\" title=\"Figure 6\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/d/ad0efa8c8105ee179411f4738864f1b0eb46223a_2_690x427.png\" alt=\"Figure 6\" data-base62-sha1=\"oGWH2bNyI44d8PtENkBGBa9Fkvw\" width=\"690\" height=\"427\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/d/ad0efa8c8105ee179411f4738864f1b0eb46223a_2_690x427.png, https://ethresear.ch/uploads/default/optimized/3X/a/d/ad0efa8c8105ee179411f4738864f1b0eb46223a_2_1035x640.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/a/d/ad0efa8c8105ee179411f4738864f1b0eb46223a_2_1380x854.png 2x\" data-dominant-color=\"F8F6F9\"></a></div><p></p>\n<p><strong>Figure 6.</strong> Equilibria under MEV burn for various supply curves in blue when using a fixed target participation level (magenta), a reward curve with cut issuance (purple), or the current reward curve (black). Green circles represent desirable outcomes, red crosses undesirable outcomes, and yellow triangles are outcomes somwehere in between.</p>\n<p>Equilibria at lower staking yields when 30M ETH is staked are less problematic if there is no MEV. For example, non-pooled stakers would receive positive rewards each epoch. The equilibrium under the low supply curve is still marked by a yellow triangle. It could be fair to mark it by a green circle, but in my opinion, we might wish to let the quantity of stake expand somewhat under these supply curves. This gives a higher equilibrium yield and will give better guarantees of a viable composition of the staking set. One way to understand it is that the reward curve helps absorbs all delegating stakers with a low reservation yield to ensure that the yield remains viable for solo staking.</p>\n<p>Figure 7 below plots the total yearly rewards (corresponding here also to total issuance, since MEV burn is in place in this example). The excessively high issuance under high supply curves and a fixed target of 60M ETH is very problematic. Likewise concerning the high issuance under low supply curves with the current reward curve. Note that the really problematic outcomes for the current reward curve instead happens under low supply curves, because it is designed to increase issuance as the quantity of stake increases.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/f/efce4de2bd9c71175c7d7feab5aaed4b212ab564.png\" data-download-href=\"https://ethresear.ch/uploads/default/efce4de2bd9c71175c7d7feab5aaed4b212ab564\" title=\"Figure 7\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/f/efce4de2bd9c71175c7d7feab5aaed4b212ab564_2_690x423.png\" alt=\"Figure 7\" data-base62-sha1=\"ydq7sbqm0umxC2bSM7Z9T1pgaFu\" width=\"690\" height=\"423\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/f/efce4de2bd9c71175c7d7feab5aaed4b212ab564_2_690x423.png, https://ethresear.ch/uploads/default/optimized/3X/e/f/efce4de2bd9c71175c7d7feab5aaed4b212ab564_2_1035x634.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/e/f/efce4de2bd9c71175c7d7feab5aaed4b212ab564_2_1380x846.png 2x\" data-dominant-color=\"F8F6F9\"></a></div><p></p>\n<p><strong>Figure 7.</strong> Yearly issuance under MEV burn for various supply curves in blue when using a fixed target participation level (magenta), a reward curve with cut issuance (purple), or the current reward curve (black). Green circles represent desirable outcomes, red crosses undesirable outcomes, and yellow triangles are outcomes somwehere in between. A fixed target of 60M ETH (magenta) will lead to excessive issuance if the supply curve is higher.</p>\n<h4><a name=\"a-fixed-target-participation-level-may-incite-stakers-to-attack-ethereum-19\" class=\"anchor\" href=\"https://ethresear.ch#a-fixed-target-participation-level-may-incite-stakers-to-attack-ethereum-19\"></a>A fixed target participation level may incite stakers to attack Ethereum</h4>\n<p>The previous section established the downside of not attaching a proper budgeting mechanism to Ethereum’s security expenditures. It may lead to Ethereum overpaying for security, or paying so little that solo stakers needlessly are driven out. Some may consider concerns around solo staking overblown, and feel that the benefit of a specific target outweighs, because Ethereum will at least have some specific participation level that has been deemed appropriate by the community. The issue with a fixed target is however a little deeper. Stakers need to come to consensus under <a href=\"https://vitalik.eth.limo/general/2017/07/16/triangle_of_harm.html\">listener–speaker fault equivalence</a>, something that opens up avenues for <a href=\"https://github.com/ethereum/research/blob/4a3bc39e11acede672770475ab254a1a882a5bbe/papers/discouragement/discouragement.pdf\">discouragement attacks</a>. The protocol cannot ascertain who is at fault for a failed consensus message delivery. An attacker can therefore act maliciously against honest consensus participants to deprive them of rewards, subsequently profiting as they leave and the staking yield increases. There exists various avenues even for <a href=\"https://ethresear.ch/t/properties-of-issuance-level-consensus-incentives-and-variability-across-potential-reward-curves/18448/11\">minority discouragement attacks</a> at the present.</p>\n<p>With a fixed target participation level that adapts relatively quickly, the “<a href=\"https://ethresear.ch/t/reward-curve-with-tempered-issuance-eip-research-post/19171#h-53-discouragement-attacks-32\"><span class=\"math\">p_i</span>-elasticity</a>” becomes infinite. The incentives for discouragement attacks are then <a href=\"https://x.com/VitalikButerin/status/1542162089304784897\">maximized</a>; less stake must leave to drive up the yield. A related concept is <a href=\"https://ethresear.ch/t/reward-curve-with-tempered-issuance-eip-research-post/19171#h-54-cartelization-attacks-33\">cartelization attacks</a>, consisting of SSPs working together to try to reduce quantity staked, potentially also among themselves. When issuance increases with a reduction in quantity staked (<span class=\"math\">p_i&gt;1</span>), all stakers could try to agree to reduce their stake, and everyone would be better off (as long as new entrants are kept out or discouraged). This framing can provide a suitable backdrop for convincing the social layer to not interfere when a staking cartel tries to inhibit Ethereum’s permissionlessness, utilizing discouragement attacks.</p>\n<p>The importance of discouragement attacks should not be overblown, but it is unnecessary to open up for them when safer designs so easily can be achieved. It is particularly striking that under the strict target, attacking the consensus through censorship can generate what is essentially an infinite-money glitch without breaking validity.</p>\n<h4><a name=\"rectifying-the-outlined-flaws-recreates-a-subpar-reward-curve-20\" class=\"anchor\" href=\"https://ethresear.ch#rectifying-the-outlined-flaws-recreates-a-subpar-reward-curve-20\"></a>Rectifying the outlined flaws recreates a subpar reward curve</h4>\n<p>To protect against stakers turning the consensus mechanism into a money-printing machine, the protocol might of course impose some maximum yield beyond which no further increases are deemed necessary (besides relying on the social layer and the threat of intervention). For good measure, the issuance policy may also define a floor, so that stakers always receive some yield, ensuring a viable composition of the staking set. Figure 8 plots this new hypothetical updated fixed target reward curve (once again ignoring the time component). The ceiling was set to 5% and the floor to 0.25%.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/e/8e184ff8b0b2682e4e76bbc975a16e402aa847a8.png\" data-download-href=\"https://ethresear.ch/uploads/default/8e184ff8b0b2682e4e76bbc975a16e402aa847a8\" title=\"Figure 8\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/e/8e184ff8b0b2682e4e76bbc975a16e402aa847a8_2_690x427.png\" alt=\"Figure 8\" data-base62-sha1=\"kh1TaBytwOwCzvwxCshanX58ND2\" width=\"690\" height=\"427\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/e/8e184ff8b0b2682e4e76bbc975a16e402aa847a8_2_690x427.png, https://ethresear.ch/uploads/default/optimized/3X/8/e/8e184ff8b0b2682e4e76bbc975a16e402aa847a8_2_1035x640.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/e/8e184ff8b0b2682e4e76bbc975a16e402aa847a8_2_1380x854.png 2x\" data-dominant-color=\"F7F6F9\"></a></div><p></p>\n<p><strong>Figure 8.</strong> A fixed target participation level with upper and lower limits, attempting to rectify some issues of the design shown in Figures 5-7. However, a reward curve remains the better solution.</p>\n<p>The mechanism now prevents the infinite-money glitch, and gives stakers at least some guaranteed yield. However, it arguably remains flawed, with improper budgeting. The incentives for discouragement attacks and cartelization attacks are still unnecessarily pronounced in the vertical part of the curve. The fixed floor and ceiling should instead have the smooth characteristics of a reward curve, gradually increasing or decreasing as the utility function changes.</p>\n<p>The outlined flaws do not mean that there is no value in a dynamic approach; it is possible to combine it with a reward curve. The idea would be to allow the reward curve to drift/bend at longer time scales, ultimately being influenced by a separate target reward curve. Such a “<a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#h-5-time-quantity-policy-35\">time–quantity policy</a>” is explored in the answer on the <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#what-is-the-endgame-issuance-policy-28\">staking economics endgame</a>.</p>\n<h3><a name=\"how-will-a-reduction-in-issuance-affect-the-composition-of-the-staking-set-21\" class=\"anchor\" href=\"https://ethresear.ch#how-will-a-reduction-in-issuance-affect-the-composition-of-the-staking-set-21\"></a>How will a reduction in issuance affect the composition of the staking set?</h3>\n<h4><a name=\"overview-22\" class=\"anchor\" href=\"https://ethresear.ch#overview-22\"></a>Overview</h4>\n<p>This depends on how sensitive relevant groups such as solo stakers and delegating stakers are to low staking yields and high variability. One concern is unfavorable economies of scale for solo stakers at low yields. At the same time, the delegating staker subjects itself to unique risks when trusting a third party with its ETH, and may for this reason also be hesitant to stake if the yield goes too low. There is furthermore a dynamic at play wherein delegated staking becomes relatively more favorable as the quantity of stake grows. There is thus a multitude of conflicting economic forces to consider. One way to approach this complex subject is by comparing distributions that attempt to capture the willingness to stake at different yields among solo stakers and delegating stakers, as shown, for example, in Figure 11 below.</p>\n<p>It is important to understand the probabilistic nature of issuance policy, and that the design ultimately tries to optimize outcomes under any scenario (e.g., a lower or higher supply curve). As outlined in <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#philosophical-underpinnings-of-the-optimization-problem-30\">another answer</a>, a suitable reward curve can in this context be understood as the expansion path across potential supply curves that optimally balances trade-offs. One of these trade-offs is the equilibrium composition of the staking set. With this viewpoint and in light of potential concerns, an equilibrium at 30M ETH can be desirable, but still not enforced by economic capping. Under a particularly low supply curve, the quantity of stake can be allowed to expand. The composition of the staking set must thus ultimately be analyzed and optimized for across two dimensions, both issuance level and quantity of stake.</p>\n<h4><a name=\"variability-for-solo-stakers-23\" class=\"anchor\" href=\"https://ethresear.ch#variability-for-solo-stakers-23\"></a>Variability for solo stakers</h4>\n<p>If issuance is moderated, a larger part of rewards will stem from REV, and the relative variability in staking rewards will therefore increase. This affects solo stakers negatively since they cannot effortlessly rely on pooling for smoothing out variability. A review of how variability affects the solo staker is offered in a previous write-up on <a href=\"https://ethresear.ch/t/properties-of-issuance-level-consensus-incentives-and-variability-across-potential-reward-curves/18448#h-4-variability-in-rewards-for-solo-stakers-12\">properties of issuance level</a>. It seems reasonable to assume that stakers may be more <a href=\"https://ethresear.ch/t/properties-of-issuance-level-consensus-incentives-and-variability-across-potential-reward-curves/18448#h-43-variability-with-fixed-supply-and-varied-demand-15\">more sensitive to variance at lower staking yields</a>—the <em>relative</em> variability matters. This of course certainly holds true under an equilibrium where the issuance yield is negative but the staking yield (which includes REV) is positive—for example when instituting economic capping (<a href=\"https://notes.ethereum.org/@vbuterin/single_slot_finality#Economic-capping-of-total-deposits\">1</a>, <a href=\"https://ethresear.ch/t/endgame-staking-economics-a-case-for-targeting/18751\">2</a>). Solo stakers that do not pool their execution layer rewards will then need to lose ETH each epoch in the hope of being assigned to propose a block. Since MEV yield is shared among stakers, it rises with a lower quantity of stake, and such an equilibrium therefore becomes increasingly more likely the lower the economic cap is set, because the MEV yield can then still be a sufficient incentive on its own. Relative variability is one of the reasons for pursuing the more moderate reward curves discussed in a <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#what-is-a-desirable-issuance-reduction-for-the-near-future-9\">previous answer</a> before MEV burn is in place. This does not mean that a low economic cap will be enforced afterward, merely that it is much more feasible once MEV burn is in place.</p>\n<h4><a name=\"equilibrium-yield-and-the-proportion-of-solo-stakers-24\" class=\"anchor\" href=\"https://ethresear.ch#equilibrium-yield-and-the-proportion-of-solo-stakers-24\"></a>Equilibrium yield and the proportion of solo stakers</h4>\n<p>Ethereum wants to retain solo stakers, at least when measured as a proportion of all stakers. The anticipated outcome of a reduction in issuance level is that less ETH will be staked by both delegating and solo stakers, relative to the outcome when issuance is not reduced (<a href=\"https://ethresear.ch/t/properties-of-issuance-level-consensus-incentives-and-variability-across-potential-reward-curves/18448/12#the-complex-conundrum-of-retaining-solo-stakers-1\">1</a>, <a href=\"https://ethereum-magicians.org/t/electra-issuance-curve-adjustment-proposal/18825/11\">2</a>). A concern is if there might be a staking yield below which solo stakers in particular would drop off due to, e.g., the relatively higher fixed costs associated with solo staking.</p>\n<p>Take for example <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#staking-yield-and-outlook-15\">Figure 3</a> as a starting point. It is not clear whether the proportion of solo stakers is lower at a hypothetical equilibrium of around 36M ETH staked and a staking yield of 2.44% (green dashed reward curve with tempered issuance) than at around 50M ETH staked and a staking yield of 2.94% (black current reward curve). If solo stakers leave en masse below a yield of 2.6%, then a staking yield of 2.44% at 36M ETH staked will give a lower proportion than when the yield is 2.94% at 50M ETH staked. This is of course something to take seriously. Economies of scale are hard to design away in a decentralized blockchain.</p>\n<p>There are however also some arguments as to why a more restrictive reward curve could give a higher or at least similar proportion of solo stakers:</p>\n<ul>\n<li>Dominant SSPs have <a href=\"https://twitter.com/weboftrees/status/1710719496971862072\">better economies of scale at higher quantities staked</a>, increasing their cost advantage over solo stakers.</li>\n<li>Likewise, the <a href=\"https://x.com/weboftrees/status/1710712326117097785\">positive network externality of the money function</a> grows with quantity staked, and with it the competitive advantage of dominant LST-issuing SSPs.</li>\n<li>Furthermore, the principal–agent problem associated with an LST may seem less risky if everyone else also uses the LST, with the expectation that the social layer will waver on its commitment to the intended consensus process in the event of a failure.</li>\n<li>Risks could very well price out delegating stakers earlier than solo stakers as the yield falls. For example, if a large enough subset of potential delegators believe that there is a 1% risk of failure over a year for the LST they wish to hold, then favorable economies of scale or liquidity can be insufficient as a competitive edge. Self-custody is undeniably <a href=\"https://x.com/nero_eth/status/1766354381543292985\">important</a> to a relevant proportion of ETH token holders; this factor should not be overlooked when evaluating the staking supply side.</li>\n<li>On a similar theme, if the yield becomes negative, there is still an altruistic motive for solo staking.  The delegating staker will either need to take on a loss or face adverse selection. An SSP that subsidizes delegators will do so under the expectation of future profits, which may be attained by monopolizing some critical function, or worse, by attacking the consensus. An SSP profiting from restaking could just as well profit using non-staked ETH.</li>\n<li>Token holders with enough ETH and the technical ability to solo stake are not necessarily abundant, implying a <a href=\"https://twitter.com/weboftrees/status/1710723555476803643\">soft upper bound</a> on the solo staked quantity. It can be argued that if this pool is more or less depleted, then relatively <a href=\"https://ethresear.ch/t/endgame-staking-economics-a-case-for-targeting/18751#supply-side-give-me-eth-and-have-my-stake-4\">few of the new stakers</a> will be solo stakers as the supply curve falls and <span class=\"math\">D</span> increases under the current policy. Still, concerning this particular argument, it should be remembered that if the yield is reduced substantially to halt the increase in <span class=\"math\">D</span>, there is no guarantee of retaining a larger proportion of solo stakers in the long run. This ultimately depends on the finer-grained distribution of reservation yields among them, as explored in the next subsection.</li>\n</ul>\n<p>Issuance policy should be focused on long-term objectives and not rely on short-term remedies. This also relates to the presently rather valuable solo staking airdrops, if they can be expected to cease. Yet, Ethereum’s evolving consensus mechanism may look different in ten years, with different requirements for staking anyway—there may even be different classes of validators (<a href=\"https://ethresear.ch/t/unbundling-staking-towards-rainbow-staking/18683\">1</a>, <a href=\"https://notes.ethereum.org/bW2PeHdwRWmeYjCgCJJdVA\">2</a>)—so circumstances of the present and in the near-term future cannot be completely ignored. For example, it must be acknowledged that if the yield falls, the impact of any solo-staking airdrops will multiply. As an example, if their expected value is 1% per year, and the staking yield falls from 4% to 1%, then airdrops will go from giving solo stakers a 25 % higher revenue than the delegating staker to giving a 100% higher revenue.</p>\n<p>An additional nuance can also be added to the fourth bullet point: some solo stakers stake quite a bit more than 32 ETH, and these may be more resilient to low yields. Finally note that solo stakers who do not own their hardware may still enjoy some external economies of scale; home stakers on the contrary are directly affected by hardware costs.</p>\n<p>At a fundamental level, the <a href=\"https://x.com/weboftrees/status/1710723376233304391\">conjecture</a> is that the relative distribution of reservation yields may differ between different classes of stakers. This then leads to different proportions of solo stakers under different issuance policies. But whether one policy is better than the other in this respect cannot be ascertained and may also vary over the forthcoming decade.</p>\n<h4><a name=\"relative-distribution-of-reservation-yields-25\" class=\"anchor\" href=\"https://ethresear.ch#relative-distribution-of-reservation-yields-25\"></a>Relative distribution of reservation yields</h4>\n<p>This subsection will explain the conjecture from the previous paragraph by visualizing some hypothetical distributions of reservation yields among different classes of stakers. Naturally, such distributions emerge from some fundamental functions capturing the willingness to supply stake, which ultimately depends on the composition of those seeking exposure to the ETH asset and how they value various costs associated with staking. I will present such models at a later date. These visualizations will simply illustrate what the distributions might look like based on the ideas presented in the previous subsection, without quantifying the actual underlying economic forces.</p>\n<p>The notion of a “reservation yield” is lent from labor economics, in which <a href=\"https://en.wikipedia.org/wiki/Reservation_wage\">reservation wages</a> influence the quantity of supplied labor across wage (the labor supply curve). Staking economics and labor economics have some similarities; after all, staking is work done to maintain the consensus process, and stakers—just as workers—can under certain circumstances cartelize (i.e., a labor union/cartelization attack) as discussed in a <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#a-fixed-target-participation-level-may-incite-stakers-to-attack-ethereum-19\">previous answer</a>. The laborer’s valuation of their leisure time to some extent then corresponds to the premium that the token holder attaches to non-staked ETH. It should however be mentioned that the “reservation yield” here applies to a “prospective” token holder. The purpose is to capture the specific yield at which some token would be staked, but it must be recognized that the actual token holder might change due to changing circumstances.</p>\n<p>A specified reservation yield is assumed to apply under the equilibrium formed also when accounting for other stakers’ reservation yields, and stake will not switch staking modality across staking yield. Also note that the reservation yield represents what the staking yield must be, and is not a staker’s profit, because there are also costs/fees. The example is intended to capture what the distributions might hypothetically look like a few years from now, assuming that a functioning MEV burn is in place and that airdrops to solo stakers unfortunately have become less ubiquitous.</p>\n<h4><a name=\"illustrating-hypothetical-distributions-of-reservation-yields-26\" class=\"anchor\" href=\"https://ethresear.ch#illustrating-hypothetical-distributions-of-reservation-yields-26\"></a>Illustrating hypothetical distributions of reservation yields</h4>\n<p>The dotted line in Figure 9 shows a hypothetical distribution of reservation yields for solo stakers, with staking yield on the x-axis. Presumably, not many stakers have a zero or negative reservation yield. A tiny few might be inclined to stake even if there are no direct monetary incentives provided by the consensus mechanism (a staking yield of 0), perhaps to defend or attack the network. But these incentives are not something that Ethereum would like to rely on. As the staking yield rises, each marginal increase brings in a larger subset of ETH token holders as solo stakers. The pool of prospective solo stakers then gradually depletes as the overall staking participation rate increases, the curve peaks (here at around 2%), and an increase in yield will ultimately not bring in many new stakers.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/5/2539759699b9ada34cf8bacbbc7ab9c5d5d5cee1.png\" data-download-href=\"https://ethresear.ch/uploads/default/2539759699b9ada34cf8bacbbc7ab9c5d5d5cee1\" title=\"Figure 9\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/5/2539759699b9ada34cf8bacbbc7ab9c5d5d5cee1_2_690x440.png\" alt=\"Figure 9\" data-base62-sha1=\"5jiLTiSmhYA1H4Xaydjg8tm5bWh\" width=\"690\" height=\"440\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/5/2539759699b9ada34cf8bacbbc7ab9c5d5d5cee1_2_690x440.png, https://ethresear.ch/uploads/default/optimized/3X/2/5/2539759699b9ada34cf8bacbbc7ab9c5d5d5cee1_2_1035x660.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/2/5/2539759699b9ada34cf8bacbbc7ab9c5d5d5cee1_2_1380x880.png 2x\" data-dominant-color=\"FBFBFB\"></a></div><p></p>\n<p><strong>Figure 9.</strong> Hypothetical distribution of reservation yields among solo stakers.</p>\n<p>Figure 10 instead shows with a dashed line what the distribution of reservation yields among prospective delegating stakers may look like. The distribution might generally have a more positive skew. The idea is (a little simplified) that the last quartile of stakers favor liquidity and might not have the technical ability to solo stake, whereas favorable economies of scale bring a sharper increase at lower yields. The previously illustrated hypothetical distribution of solo stakers is also included in the plot, but they are relatively fewer, so it is hard to compare the shapes.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/9/f9870c9aacc3ea85b539eee5aef947bdcaa7f135.png\" data-download-href=\"https://ethresear.ch/uploads/default/f9870c9aacc3ea85b539eee5aef947bdcaa7f135\" title=\"Figure 10\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/9/f9870c9aacc3ea85b539eee5aef947bdcaa7f135_2_690x440.png\" alt=\"Figure 10\" data-base62-sha1=\"zBqen0VxeevewpLMRKfVSOW7Dmt\" width=\"690\" height=\"440\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/9/f9870c9aacc3ea85b539eee5aef947bdcaa7f135_2_690x440.png, https://ethresear.ch/uploads/default/optimized/3X/f/9/f9870c9aacc3ea85b539eee5aef947bdcaa7f135_2_1035x660.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/f/9/f9870c9aacc3ea85b539eee5aef947bdcaa7f135_2_1380x880.png 2x\" data-dominant-color=\"FAFBFB\"></a></div><p></p>\n<p><strong>Figure 10.</strong> Hypothetical distribution of reservation yields among delegating stakers (dashed line). The distribution for solo stakers from the previous Figure 9 is also included (dotted line).</p>\n<p>To make comparisons easier, Figure 11 instead shows both distributions normalized to represent an equal share of all ETH. Still, remember that these curves are just an attempt to illustrate the ideas presented in the previous subsection, and as such are hypothetical. But this caveat might on the other hand always be applicable, even under more deliberate models. The relative comparison of distributions captures the notion that a smaller proportion of delegating stakers would be willing to stake at a negative yield, given the potential for adverse selection and less clear altruistic motive. But then the distribution might shoot up quicker than for solo stakers as the yield becomes positive, due to the favorable economies of scale of delegated staking. As the yield increases further, solo staking comes into play,  but then dwindles, because the last quantile of stakers are unwilling to give up liquidity or technically unable to solo stake. The proportion of solo stakers might thus vary intermittently.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/9/d925ec1e2e8ebaa5bbd273a65864dd38e3c7f31c.png\" data-download-href=\"https://ethresear.ch/uploads/default/d925ec1e2e8ebaa5bbd273a65864dd38e3c7f31c\" title=\"Figure 11\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/9/d925ec1e2e8ebaa5bbd273a65864dd38e3c7f31c_2_690x440.png\" alt=\"Figure 11\" data-base62-sha1=\"uYYRhdd9K8ka2TZYkc4EXT5D50g\" width=\"690\" height=\"440\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/9/d925ec1e2e8ebaa5bbd273a65864dd38e3c7f31c_2_690x440.png, https://ethresear.ch/uploads/default/optimized/3X/d/9/d925ec1e2e8ebaa5bbd273a65864dd38e3c7f31c_2_1035x660.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/d/9/d925ec1e2e8ebaa5bbd273a65864dd38e3c7f31c_2_1380x880.png 2x\" data-dominant-color=\"F9FBFA\"></a></div><p></p>\n<p><strong>Figure 11.</strong> Hypothetical distribution of reservation yields for solo stakers and delegating stakers, normalized to represent an equal share of all ETH.</p>\n<p>Having reviewed two hypothetical distributions, it is now time to review how the proportion of solo stakers evolves across staking yield under them. The cumulative distributions are then computed, seeing that a staker will stake at any yield above their reservation yield. These are shown in Figure 12. A way to understand these plots is that the initial distribution is treated as a probability density function (PDF), and its corresponding cumulative distribution function (CDF) then is computed.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/3/93e096f548a3831aaaf37ad43a856a15459f9c20.png\" data-download-href=\"https://ethresear.ch/uploads/default/93e096f548a3831aaaf37ad43a856a15459f9c20\" title=\"Figure 12\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/3/93e096f548a3831aaaf37ad43a856a15459f9c20_2_690x432.png\" alt=\"Figure 12\" data-base62-sha1=\"l6bmTGTNudfrRjqu47tXLZHmehG\" width=\"690\" height=\"432\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/3/93e096f548a3831aaaf37ad43a856a15459f9c20_2_690x432.png, https://ethresear.ch/uploads/default/optimized/3X/9/3/93e096f548a3831aaaf37ad43a856a15459f9c20_2_1035x648.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/9/3/93e096f548a3831aaaf37ad43a856a15459f9c20_2_1380x864.png 2x\" data-dominant-color=\"F8F9FA\"></a></div><p></p>\n<p><strong>Figure 12.</strong> Hypothetical cumulative distribution of reservation yields for solo stakers (dotted), delegating stakers (dashed), and in aggregate (full).</p>\n<p>The proportion of solo stakers is simply the solo staking CDF divided by the aggregate CDF, as shown in Figure 13. It is not asserted here that this particular outcome would materialize, but it is illustrative of the kind of concepts present in the debate. There is a higher proportion of solo stakers at negative yields, but then some valley at low staking yields due to economies of scale. It can emerge, e.g., if the delegating stakers’ assigned risk premium is more dispersed than the fixed cost structure of solo stakers. Proponents of a higher issuance level would suggest that this valley exists and is pronounced (when removing solo-staking airdrops), but there are many nuances beyond economies of scale to consider, as previously outlined. In any case, it is not clear that the effect would necessarily be that significant.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/8/f8a84787ba689a3a8ef081323ae4486cd24af15f.png\" data-download-href=\"https://ethresear.ch/uploads/default/f8a84787ba689a3a8ef081323ae4486cd24af15f\" title=\"Figure 13\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/8/f8a84787ba689a3a8ef081323ae4486cd24af15f_2_690x414.png\" alt=\"Figure 13\" data-base62-sha1=\"ztIWStkfTXiU2uFSU8U7apEix8r\" width=\"690\" height=\"414\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/8/f8a84787ba689a3a8ef081323ae4486cd24af15f_2_690x414.png, https://ethresear.ch/uploads/default/optimized/3X/f/8/f8a84787ba689a3a8ef081323ae4486cd24af15f_2_1035x621.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/f/8/f8a84787ba689a3a8ef081323ae4486cd24af15f_2_1380x828.png 2x\" data-dominant-color=\"FBFBFB\"></a></div><p></p>\n<p><strong>Figure 13.</strong> Hypothetical proportion of solo stakers across staking yield.</p>\n<p>Since each point of the supply curve represents the reservation yield of the marginal staker, the cumulative distribution of reservation yields actually corresponds to the supply curve. To make this clear, simply flip the axes of Figure 12 to have yield on the y-axis and stake on the x-axis. The supply curve then emerges in its more common presentation, as shown in blue in Figure 14. Two reward curves are included with no MEV—the current reward curve in black and the moderate reward curve with capped issuance at <span class=\"math\">D_c=</span> 15M ETH from a <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#reward-curve-with-capped-issuance-pink-14\">previous answer</a>. Two hypothetical equilibria are indicated by squares, at the intersection of the aggregate supply curve and these reward curves. The participation ratio of solo stakers and delegating stakers are simply found along the horizontal line extending from the equilibrium, at the point where this line intersects the associated set supply curve (circles).</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/8/b8003d3d076f41753ef0acffd1f5b492318fba10.png\" data-download-href=\"https://ethresear.ch/uploads/default/b8003d3d076f41753ef0acffd1f5b492318fba10\" title=\"Figure 14\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/8/b8003d3d076f41753ef0acffd1f5b492318fba10_2_690x412.png\" alt=\"Figure 14\" data-base62-sha1=\"qfKmL1LY1lDXqC4nyd5hcEmLtC0\" width=\"690\" height=\"412\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/8/b8003d3d076f41753ef0acffd1f5b492318fba10_2_690x412.png, https://ethresear.ch/uploads/default/optimized/3X/b/8/b8003d3d076f41753ef0acffd1f5b492318fba10_2_1035x618.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/8/b8003d3d076f41753ef0acffd1f5b492318fba10_2_1380x824.png 2x\" data-dominant-color=\"F9F8FB\"></a></div><p></p>\n<p><strong>Figure 14.</strong> Cumulative distribution of reservation yields, here illustrated as a supply curve in blue, with flipped axes from Figure 12. Set supply curves for delegating stakers and solo stakers are also indicated. Stake participation of each class (circles) are found at the horizontal line extending from the equilibrium (squares).</p>\n<p>Note that the hypothetical distributions here presented only give one specific supply curve. Under another lower supply curve, the distributions would presumably be compressed such that many features, e.g., the transition to favoring delegated staking, emerge at a lower yield. I have been working for quite some time on a complex probabilistic model trying to unify these considerations, and hope to present it in a while. This topic is certain to receive further attention also from other researchers (e.g., <a href=\"https://cyber.fund/content/mvi-grants\">1</a>, <a href=\"https://ethereum-magicians.org/t/electra-issuance-curve-adjustment-proposal/18825/17\">2</a>, <a href=\"https://ethresear.ch/t/initial-analysis-of-stake-distribution/19014\">3</a>).</p>\n<h4><a name=\"equilibrium-yield-and-the-broader-composition-of-the-staking-set-27\" class=\"anchor\" href=\"https://ethresear.ch#equilibrium-yield-and-the-broader-composition-of-the-staking-set-27\"></a>Equilibrium yield and the broader composition of the staking set</h4>\n<p>The relationship between issuance level and diversity in SSPs also entails a <a href=\"https://twitter.com/weboftrees/status/1710723555476803643\">trade-off</a> between economies of scale and factors such as the positive network externality of the money function. Offering a positive yield beyond 30M ETH is helpful for alleviating concerns that a major SSP with a structural advantage such as a centralized exchange (CEX)—perhaps leveraging some hypothetical staked ETF—can push up their proportion of the stake to critical levels. At the same time, the risks of centralization around such entities should not be disproportionately emphasized over other risk scenarios. There are already today SSPs attaining critical proportions of the stake by leveraging network externalities onchain, ostensibly foregoing profits in the pursuit of monopolization. This type of structural advantage could also grow with higher issuance, and stifling that before native ETH possibly is in the minority relative to one LST must be considered as a net positive to the community. When weighing these trade-offs, an issuance level that invariably forces any outcome—whether a very low or very high quantity staked—does not seem desirable.</p>\n<p>Each SSP, reaching for a specific market segment, incurs unique costs besides the cost of running staking nodes, with a wide variety ranging from compliance to software. Indeed, CEXes have somewhat of a local monopoly on their customers-as-delegators, and the opportunity cost of keeping fees competitive with any onchain option is presumably so high that it does not represent the profit-maximizing strategy. What is clear is that competition for delegated stake will unfold across diverse market segments, and perfect competition is not a reasonable assumption. If the cost of operating a node is not prohibitively high relative to the income that the SSP can make from running it, then variety in preferences and circumstances between delegators will take a central role in shaping the composition of the staking set. The concern is therefore only valid with a yield that goes close to 0 or negative at a low quantity of stake. No SSP can reasonably outcompete all others at an equilibrium staking yield of, e.g., 2% at 30M ETH staked.</p>\n<h3><a name=\"what-is-the-endgame-issuance-policy-28\" class=\"anchor\" href=\"https://ethresear.ch#what-is-the-endgame-issuance-policy-28\"></a>What is the endgame issuance policy?</h3>\n<h4><a name=\"overview-29\" class=\"anchor\" href=\"https://ethresear.ch#overview-29\"></a>Overview</h4>\n<p>Certain parts of the endgame have a rather broad agreement. Firstly, Ethereum should transition to using <span class=\"math\">d</span> (referred to in this text as the deposit ratio or stake participation ratio) in the equation for the reward curve instead of <span class=\"math\">D</span> (deposit size or quantity staked). This can simply be done (<a href=\"https://x.com/weboftrees/status/1710728179260731715\">1</a>, <a href=\"https://warpcast.com/anderselowsson/0xad4454fd\">2</a>) by swapping out <span class=\"math\">D</span> for <span class=\"math\">d</span> in the equation for the reward curve, and normalizing by including the circulating supply at the time of the swap, once the circulating supply <a href=\"https://ethresear.ch/t/endgame-staking-economics-a-case-for-targeting/18751#how-to-set-the-target-in-relative-staking-ratio-instead-of-absolute-fixed-eth-amount-terms-20\">begins to be tracked</a> at the consensus layer. The main reason for this transition is that the long-run staking equilibrium under reward curves that adapt to <span class=\"math\">D</span> instead of <span class=\"math\">d</span> is ultimately also influenced by the <a href=\"https://ethresear.ch/t/circulating-supply-equilibrium-for-ethereum-and-minimum-viable-issuance-during-the-proof-of-stake-era/10954\">circulating supply equilibrium</a>, since the circulating supply will <a href=\"https://www.youtube.com/watch?v=LtEMabS0Oas&amp;t=1187s\">drift</a> to <a href=\"https://twitter.com/weboftrees/status/1710725744651825281\">balance</a> supply, demand, and protocol income.</p>\n<p>Secondly, Ethereum should pursue MEV burn. As explained in the previous answers (<a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#influence-of-mev-11\">1</a>, <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#variability-for-solo-stakers-23\">2</a>), this will reduce relative variability and is a prerequisite for being able to reduce the staking yield substantially without causing too much concern for non-pooled stakers. As the answer soon turns to reduced issuance, it must be remembered that there is no direct financial motive for staking if the <a href=\"https://x.com/weboftrees/status/1710720809797407063\">endogenous staking yield</a> (MEV + issuance + airdrops) is negative. An equilibrium at negative issuance attracting a sufficiently large quantity of stake should thus still involve a positive expected endogenous yield. One concern is that the variability in MEV then involves non-pooled stakers taking on small losses each epoch while they wait for being assigned to special duties (note that variability in airdrops are not resolved by pooling). But there are many other reasons for MEV burn as well, as explored by <a href=\"https://notes.ethereum.org/cA3EzpNvRBStk1JFLzW8qg\">Francesco</a>, <a href=\"https://ethresear.ch/t/mev-burn-a-simple-design/15590\">Justin</a>, as well as <a href=\"https://ethresear.ch/t/dr-changestuff-or-how-i-learned-to-stop-worrying-and-love-mev-burn/17384\">Mike, Toni, and Justin</a>.</p>\n<p>The endgame when it comes to issuance level is currently a subject of debate but does indeed by all accounts involve an issuance reduction. The options can roughly be divided into five different categories:</p>\n<ol>\n<li><strong>Do nothing</strong>; an alternative that must always be part of the conversation, but which is becoming increasingly less attractive assuming that staking costs continue to fall and the quantity of stake increases further.</li>\n<li><strong>Temper issuance</strong>; but to a level that is perfectly sufficient also under the presence of MEV.</li>\n<li><strong>Cut issuance</strong>; an option situated in between (2) and (4). Does not institute an economic capping, but makes a high quantity of stake incredibly unlikely by lowering the yield substantially.</li>\n<li><strong>Economic capping</strong>, by letting the staking yield go to negative infinity at some desirable quantity of stake.</li>\n<li><strong>A time–quantity policy</strong>; where the reward curve is allowed to slowly alter/bend in response to changes in the supply curve.</li>\n</ol>\n<p>Among these options, (2) is becoming increasingly desirable at this point in my view. There is then a sliding scale from (3) to (4), where stricter reward curves are advantageous due to their ability to offer guarantees on the quantity of stake, while some restrictive settings at the same time also require more deliberations. There can be merits to an economic cap (4), ideally then after MEV burn, but in my view not at a too low quantity of stake. Some examples will be illustrated.  Category (5) has not yet received much study and will be presented a little deeper. The answer will now briefly review the philosophical underpinnings of the optimization problem, and then take a closer look at each of the five categories.</p>\n<h4><a name=\"philosophical-underpinnings-of-the-optimization-problem-30\" class=\"anchor\" href=\"https://ethresear.ch#philosophical-underpinnings-of-the-optimization-problem-30\"></a>Philosophical underpinnings of the optimization problem</h4>\n<p>The reward curve is in essence an attempt to optimize between all known trade-offs (long-run and short-run economic security, low costs, a viable composition of the staking set, reward variability, etc.), ensuring a utility-maximizing equilibrium under any supply curve. One way to understand the issue is thus that each hypothetical supply curve (low as well as high) has one optimal equilibrium, and the reward curve should intersect each supply curve at this point.</p>\n<p>In economics, an <a href=\"https://en.wikipedia.org/wiki/Expansion_path\">expansion path</a> connects optimal input combinations across output level, and an <a href=\"https://en.wikipedia.org/wiki/Income%E2%80%93consumption_curve\">income expansion path</a> selects the optimal consumption bundles across income. A suitable reward curve is the expansion path that optimizes all known trade-offs associated with high/low yield and stake participation across potential supply curves. <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#a-fixed-target-participation-level-is-a-vertical-reward-curve-with-subpar-budgeting-18\">Figures 5-8</a> in a previous answer illustrated the concept under three supply curves at different levels, where an optimal equilibrium could be found under all three using a reward curve from endgame (3).</p>\n<p>As <a href=\"https://ethresear.ch/t/properties-of-issuance-level-consensus-incentives-and-variability-across-potential-reward-curves/18448/2\">framed by Vitalik</a> in a similar context: if a reward curve is designed such that some specific equilibrium is made possible, then that equilibrium should first have been deemed acceptable. In particular, it should ideally be the optimal equilibrium for the prevailing supply curve. But it must then also be noted that not only the <em>level</em>, but also the <em>shape</em> of the supply curve will matter. The reason is that the shape will influence which alternatives a specific equilibrium point can be substituted for when optimizing. There is a difference between the almost horizontal supply curve between 30M and 120M ETH in figures by <a href=\"https://ethresear.ch/t/endgame-staking-economics-a-case-for-targeting/18751#implications-of-targeting-14\">Caspar and Ansgar</a>, and the supply curves in this post that slope almost vertically upwards towards 120M ETH. In the former case, setting a negative yield at 30M ETH will seem like a more natural solution, because an economic cap at a low quantity of stake might not matter to solo stakers anyway, regardless of if the supply curve is lower or higher.</p>\n<h4><a name=\"h-1-do-nothing-31\" class=\"anchor\" href=\"https://ethresear.ch#h-1-do-nothing-31\"></a>1. Do nothing</h4>\n<p>This option remains valid while the quantity of stake remains reasonably close to 30M ETH (1/4 of the stake), previously discussed as a potential limit. There is a switching barrier associated with changing the issuance policy of a decentralized blockchain. The potential for discontent is higher if the switch takes place too close to previously discussed limits. But as mentioned in another answer, it seems reasonable to assume that the current quantity of stake of 32M ETH will not hold in the long run, as staking costs (broadly defined) fall. A threshold that would fit neatly with the notion of operating on powers of two is <span class=\"math\">2^{25}</span> ETH, corresponding to 33.6M ETH. Once this threshold is exceeded (or on the path of being exceeded) when doing nothing, then doing something seems like a better option to me.</p>\n<p>Excessive incentives for staking, beyond what is necessary for security, can unfortunately over time turn into <a href=\"https://en.wikipedia.org/wiki/Subsidy#Perverse_subsidies\">perverse subsidies</a>. In a scenario where the application layer is built around excessive staking yield, the Ethereum economy will arguably not have proper trustless foundations, as <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#h-2-macro-perspective-7\">previously discussed</a>.</p>\n<p>One thing to keep track of before deciding to “not do nothing”, and to “do something”, is the progress of MEV burn. A reduction in issuance should not take place at the same hard fork as when incorporating MEV burn. If MEV burn is very close to being ready, then this can be accounted for under certain circumstances. But MEV burn is still at an early research stage. One path is therefore to shortly institute a moderate reduction in issuance, a year or two before MEV burn, and then let MEV burn make another dent in the staking yield.</p>\n<h4><a name=\"h-2-temper-issuance-32\" class=\"anchor\" href=\"https://ethresear.ch#h-2-temper-issuance-32\"></a>2. Temper issuance</h4>\n<p>This option is presented in a <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#what-is-a-desirable-issuance-reduction-for-the-near-future-9\">previous answer</a>. In summary, it represents a “safe” issuance reduction that will not increase relative variability too much for non-pooled stakers, providing a relevant staking yield for stakers across the full range. The option provides a sufficiently big reduction in issuance to make the associated governance process worth it—and small enough to make that process potentially easier. The option will still substantially temper the growth in the quantity of stake. Together with MEV burn, it can reasonably constitute an endgame issuance policy, in the sense that the quantity of stake remains close to 30M ETH and firmly below 60M ETH. However, this does not mean that (2) necessarily must be an endgame. Reducing the issuance even further at higher quantities of stake as in (3) and (4) will after MEV burn seem like a reasonable option. However, proceeding further than (2), for example to (4), would then need to be a separate discussion. There is a simple “on-switch” that could be used for such a transition, as discussed in the associated <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#h-4-economic-capping-34\">subsection</a>.</p>\n<h4><a name=\"h-3-cut-issuance-33\" class=\"anchor\" href=\"https://ethresear.ch#h-3-cut-issuance-33\"></a>3. Cut issuance</h4>\n<p>I refer here to the option situated in between economic capping and tempered issuance as “cut issuance”. The limits of this category are a bit diffuse, but it attempts to capture reward curves that are intended potentially for an Ethereum with MEV burn, that still does not pursue economic capping. Figure 15 shows three examples, with the pink curve close to category (2) and the violet reward curve bordering on category (4). The current reward curve is shown in black and the limits of the <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#reward-curve-with-capped-issuance-pink-14\">capped issuance curves</a> that are part of (2) are indicated in grey for reference.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/a/1a87d89d8db34f6a5950f3d7f9e7432b152249b4.png\" data-download-href=\"https://ethresear.ch/uploads/default/1a87d89d8db34f6a5950f3d7f9e7432b152249b4\" title=\"Figure 15\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/a/1a87d89d8db34f6a5950f3d7f9e7432b152249b4_2_690x392.png\" alt=\"Figure 15\" data-base62-sha1=\"3MHsIPhmByxsaob4sdllU1D1vyQ\" width=\"690\" height=\"392\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/a/1a87d89d8db34f6a5950f3d7f9e7432b152249b4_2_690x392.png, https://ethresear.ch/uploads/default/optimized/3X/1/a/1a87d89d8db34f6a5950f3d7f9e7432b152249b4_2_1035x588.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/1/a/1a87d89d8db34f6a5950f3d7f9e7432b152249b4_2_1380x784.png 2x\" data-dominant-color=\"FAF9FA\"></a></div><p></p>\n<p><strong>Figure 15.</strong> Three reward curves that cut issuance substantially, without definitely capping stake participation.</p>\n<p>The pink and purple curves rely on the same strategy of making as small adjustments as possible to the current protocol, as <a href=\"https://ethresear.ch/t/properties-of-issuance-level-consensus-incentives-and-variability-across-potential-reward-curves/18448#h-52-exploration-of-alternative-reward-curves-20\">previously introduced</a>. The pink curve has the equation</p>\n<div class=\"math\">\ny_i = \\frac{cF}{\\sqrt{D}+(D/k)^2}\n</div>\n<p>with <span class=\"math\">k=2^{19}</span>. The purple curve has the equation</p>\n<div class=\"math\">\ny_i = \\frac{cF}{\\sqrt{D}(1+(D/k)^2)}\n</div>\n<p>with <span class=\"math\">k=38\\times10^6</span>. All reward curves in the figure have <span class=\"math\">F=64</span>. One idea behind these sorts of reward curves that would have a positive issuance yield across the full range also after MEV burn has been instituted is to provide guarantees to solo stakers that the issuance yield will always stay positive. Of course, the staking yield (issuance + MEV) should intuitively always stay positive, since there is no point in staking unless the <a href=\"https://x.com/weboftrees/status/1710720809797407063\">endogenous yield</a> is positive. But the guarantees here pertain to issuance yield, meaning that solo stakers might always be able to enjoy a positive yield on a more regular basis (even without being assigned as proposer from time to time) under circumstances where some MEV still remains (due to, e.g., a partial MEV burn or consensus layer preconfirmations).</p>\n<p>The violet curve subtracts <span class=\"math\">(D/k_2)^2</span> from the purple curve, with <span class=\"math\">k_2=9\\times10^8</span>. The effect is that the staking yield gradually turns negative, without ever going to negative infinity. This is a more restrained way to use negative yields. In reality the effects would be very similar. Some hypothetical benefits are that the equilibrium cannot happen at a point where the yield falls very sharply at the limit (influenced by a high MEV scenario) and that stakers will have better guarantees of not encountering a double-digit negative yield (which of course should not happen anyway). A downside is that there are no hard guarantees of capping the quantity of stake. Figure 16 shows the staking yield (inclusive of 300k ETH in execution layer rewards per year) and Figure 17 shows the issuance yield (no MEV).</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/f/2f98e52e5dca73a297848e9d17a7a7a3fa00522b.png\" data-download-href=\"https://ethresear.ch/uploads/default/2f98e52e5dca73a297848e9d17a7a7a3fa00522b\" title=\"Figure 16\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/f/2f98e52e5dca73a297848e9d17a7a7a3fa00522b_2_690x421.png\" alt=\"Figure 16\" data-base62-sha1=\"6N415QkIdBJSHrpElpWjdPsEaxB\" width=\"690\" height=\"421\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/f/2f98e52e5dca73a297848e9d17a7a7a3fa00522b_2_690x421.png, https://ethresear.ch/uploads/default/optimized/3X/2/f/2f98e52e5dca73a297848e9d17a7a7a3fa00522b_2_1035x631.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/2/f/2f98e52e5dca73a297848e9d17a7a7a3fa00522b_2_1380x842.png 2x\" data-dominant-color=\"FBF9FB\"></a></div><p></p>\n<p><strong>Figure 16.</strong> Staking yield under three reward curves that cut issuance.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/6/d6b587dda3da7de95e2bba2194c886e3414cef73.png\" data-download-href=\"https://ethresear.ch/uploads/default/d6b587dda3da7de95e2bba2194c886e3414cef73\" title=\"Figure 17\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/6/d6b587dda3da7de95e2bba2194c886e3414cef73_2_690x421.png\" alt=\"Figure 17\" data-base62-sha1=\"uDp6BeVqstzibbLE3RJuYW0saqv\" width=\"690\" height=\"421\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/6/d6b587dda3da7de95e2bba2194c886e3414cef73_2_690x421.png, https://ethresear.ch/uploads/default/optimized/3X/d/6/d6b587dda3da7de95e2bba2194c886e3414cef73_2_1035x631.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/d/6/d6b587dda3da7de95e2bba2194c886e3414cef73_2_1380x842.png 2x\" data-dominant-color=\"FAF9FA\"></a></div><p></p>\n<p><strong>Figure 17.</strong> Issuance yield under three reward curves that cut issuance.</p>\n<h4><a name=\"h-4-economic-capping-34\" class=\"anchor\" href=\"https://ethresear.ch#h-4-economic-capping-34\"></a>4. Economic capping</h4>\n<p>Economic capping was <a href=\"https://notes.ethereum.org/@vbuterin/single_slot_finality#Economic-capping-of-total-deposits\">introduced by Vitalik</a> as a way to guarantee that the quantity of stake does not grow beyond some set limit. A more extensive write-up on economic capping was recently provided by <a href=\"https://ethresear.ch/t/endgame-staking-economics-a-case-for-targeting/18751\">Caspar and Ansgar</a>, including the <a href=\"https://ethereum-magicians.org/t/electra-issuance-curve-adjustment-proposal/18825\">notion</a> of applying (4) after (2). Vitalik’s reward curve can be generalized to</p>\n<div class=\"math\">\ny_i = \\frac{cF}{\\sqrt{D}} - \\frac{cF_c}{\\sqrt{l-D}},\n</div>\n<p>here adapting the equation to a format that easily can be incorporated directly into the protocol spec. The first term is the current reward curve, and the second term is subtracted from it. Since the second term will go to infinity when the limit <span class=\"math\">l=D</span>, the staking yield will go to negative infinity at that point, capping the quantity of stake. Vitalik used <span class=\"math\">l=2^{25}</span>. The variable <span class=\"math\">F_c</span> shapes the magnitude of the reduction leading up to the cap, and was set to 32 in Vitalik’s curve (implied by <span class=\"math\">0.5\\times64</span> in his equation). Figures 18-21 show this reward curve in red.</p>\n<p>The first term of Vitalik’s equation can be swapped out for some other reward curve, as desired, to allow Ethereum to produce a desirable issuance in the critical region around 20M-40M ETH where an equilibrium is the most desirable. Using the purple curve from the previous subsection gives the equation</p>\n<div class=\"math\">\ny_i = \\frac{cF}{\\sqrt{D}(1+(D/k)^2)} - \\frac{cF_c}{\\sqrt{l-D}}.\n</div>\n<p>Figure 18 shows reward curves produced from this equation with a cap set at <span class=\"math\">l=</span> 60M ETH (1/2 of the stake; orange), <span class=\"math\">l=</span> 80M ETH (2/3 of the stake; yellow) and <span class=\"math\">l=</span> 90M ETH (3/4 of the stake; lime). All curves have <span class=\"math\">k=2^{26}</span> and <span class=\"math\">F_c=2^4</span>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/c/acd10c958eb64613b93af29254285a5ae3e453a4.png\" data-download-href=\"https://ethresear.ch/uploads/default/acd10c958eb64613b93af29254285a5ae3e453a4\" title=\"Figure 18\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/c/acd10c958eb64613b93af29254285a5ae3e453a4_2_690x392.png\" alt=\"Figure 18\" data-base62-sha1=\"oEO0F16IN2LNZBqF901GosyHW1S\" width=\"690\" height=\"392\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/c/acd10c958eb64613b93af29254285a5ae3e453a4_2_690x392.png, https://ethresear.ch/uploads/default/optimized/3X/a/c/acd10c958eb64613b93af29254285a5ae3e453a4_2_1035x588.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/a/c/acd10c958eb64613b93af29254285a5ae3e453a4_2_1380x784.png 2x\" data-dominant-color=\"FAFAF9\"></a></div><p></p>\n<p><strong>Figure 18.</strong> Issuance under reward curves that institute economic capping. The red reward curve is Vitalik’s previous proposal, and the other three reward curves cap the deposit size at 60M ETH, 80M ETH and 90M ETH respectively.</p>\n<p>Figure 19 shows the staking yield (inclusive of 300k ETH in MEV per year) and Figure 20 shows the issuance yield (no MEV).</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/4/34bba12643b42be838c836a562b7d7b2ef8d21eb.png\" data-download-href=\"https://ethresear.ch/uploads/default/34bba12643b42be838c836a562b7d7b2ef8d21eb\" title=\"Figure 19\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/4/34bba12643b42be838c836a562b7d7b2ef8d21eb_2_690x421.png\" alt=\"Figure 19\" data-base62-sha1=\"7wuP0OmmHuRIGJ8IIah8zgZ9Fgv\" width=\"690\" height=\"421\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/4/34bba12643b42be838c836a562b7d7b2ef8d21eb_2_690x421.png, https://ethresear.ch/uploads/default/optimized/3X/3/4/34bba12643b42be838c836a562b7d7b2ef8d21eb_2_1035x631.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/3/4/34bba12643b42be838c836a562b7d7b2ef8d21eb_2_1380x842.png 2x\" data-dominant-color=\"FAFAF9\"></a></div><p></p>\n<p><strong>Figure 19.</strong> Staking yield including 300k ETH in MEV under reward curves that institute economic capping. The red reward curve is Vitalik’s previous proposal, and the other three reward curves cap the deposit size at 60M ETH, 80M ETH and 90M ETH respectively.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/3/13d0da8e236c04ff6086dcd429b85f6f56a2cf9a.png\" data-download-href=\"https://ethresear.ch/uploads/default/13d0da8e236c04ff6086dcd429b85f6f56a2cf9a\" title=\"Figure 20\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/3/13d0da8e236c04ff6086dcd429b85f6f56a2cf9a_2_690x421.png\" alt=\"Figure 20\" data-base62-sha1=\"2PixpTquehkzBOMqOE29Jplb5AS\" width=\"690\" height=\"421\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/3/13d0da8e236c04ff6086dcd429b85f6f56a2cf9a_2_690x421.png, https://ethresear.ch/uploads/default/optimized/3X/1/3/13d0da8e236c04ff6086dcd429b85f6f56a2cf9a_2_1035x631.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/1/3/13d0da8e236c04ff6086dcd429b85f6f56a2cf9a_2_1380x842.png 2x\" data-dominant-color=\"FAFAF9\"></a></div><p></p>\n<p><strong>Figure 20.</strong> Issuance yield under reward curves that institute economic capping. The red reward curve is Vitalik’s previous proposal, and the other three reward curves cap the deposit size at 60M ETH, 80M ETH and 90M ETH respectively.</p>\n<p>A cap at a low quantity of stake under MEV is not desirable, due to among other things the high relative variability, as discussed in previous answers (<a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#influence-of-mev-11\">1</a>, <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#variability-for-solo-stakers-23\">2</a>). In my view, if Ethereum is to pursue economic capping, then reward curves that institute the cap at or above 60M ETH seem more promising, even after MEV burn. This will allow the quantity of stake to expand somewhat under particularly low supply curves. Yet, having a cap offers an ultimate guarantee and this can be very useful from a <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#h-2-macro-perspective-7\">macro perspective</a>. At some higher stake participation, the <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#philosophical-underpinnings-of-the-optimization-problem-30\">expansion path</a> should therefore arguably venture into negative issuance yields (which will still lead to a <a href=\"https://x.com/weboftrees/status/1710720809797407063\">positive endogenous staking yield</a> under equilibrium), and this expansion path could then ultimately reach such a low negative territory that it can only be reached with an economic cap. In simpler terms, the negative aspects of stake participation growing very large are worse than the negative aspects of having a very low issuance yield.</p>\n<p>A beneficial feature of the presented equation system is that the cap would not involve some completely new equation, and can instead be conceived of as an “on-switch” when moving from (2) to (4). An example is shown in Figure 21, where the <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#reward-curve-with-tempered-issuance-green-13\">previously presented</a> dashed green tempered issuance curve is updated by simply adding Vitalik’s cap term with <span class=\"math\">l</span> equal to 60M ETH, 80M ETH and 90M ETH respectively, setting <span class=\"math\">F_c=10</span>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/a/fa300b09b139ef69a04bb500e66bf232faca0f9e.png\" data-download-href=\"https://ethresear.ch/uploads/default/fa300b09b139ef69a04bb500e66bf232faca0f9e\" title=\"Figure 21\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/a/fa300b09b139ef69a04bb500e66bf232faca0f9e_2_690x421.png\" alt=\"Figure 21\" data-base62-sha1=\"zHgizkNAh756uTllitMcAxG4xA2\" width=\"690\" height=\"421\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/a/fa300b09b139ef69a04bb500e66bf232faca0f9e_2_690x421.png, https://ethresear.ch/uploads/default/optimized/3X/f/a/fa300b09b139ef69a04bb500e66bf232faca0f9e_2_1035x631.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/f/a/fa300b09b139ef69a04bb500e66bf232faca0f9e_2_1380x842.png 2x\" data-dominant-color=\"F9FAF9\"></a></div><p></p>\n<p><strong>Figure 21.</strong> Switching on an economic cap. The reward curve with tempered issuance illustrated by a dashed green line is updated by adding a cap term limiting the quantity of stake to 60M ETH, 80M ETH and 90M ETH respectively (full green lines). Vitalik’s original reward curve for economic capping is shown in red.</p>\n<h4><a name=\"h-5-time-quantity-policy-35\" class=\"anchor\" href=\"https://ethresear.ch#h-5-time-quantity-policy-35\"></a>5. Time–quantity policy</h4>\n<p>Adding the dimension of <em>time</em> to the dimension of <em>quantity</em> is also worthy of consideration as an endgame, as described in the last paragraph of <a href=\"https://ethresear.ch/t/reward-curve-with-tempered-issuance-eip-research-post/19171#h-63-the-unknown-endgame-39\">Section 6.3</a> of a previous write-up. Under a time–quantity policy, the reward curve facing the user on shorter time scales can have a moderate predefined shape, but the whole curve is allowed to <a href=\"https://x.com/weboftrees/status/1710728448543523219\">gradually adapt</a> to changes in the supply curve, implied by the equilibrium. The mechanism is enforced by letting one or two of the variables defining the curve drift as a response to the deposit ratio deviating from some target. This drift can trivially be instituted as a small tick change each epoch, with a size that may or may not depend on the scale of the deviation.</p>\n<p>One key realization is that the reward curve variables should change slowly, with larger effects taking place at a time scale of years or even decades. There are a few reasons for this, related to issues discussed in a <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#why-not-dynamically-adjust-the-yield-with-a-mechanism-like-eip-1559-to-guarantee-some-fixed-target-participation-level-16\">previous answer</a> when targeting a fixed quantity of stake. Discouragement attacks and cartelization attacks may become less attractive if there is no immediate response in terms of an issuance increase. Furthermore, the protocol will produce a more stable yield if the short-run reward curve is flatter. From a communication perspective, the mechanism always provides a clear trajectory, whereas trying to rely <em>only on time</em> makes issuance trajectories harder to interpret. Finally, the mechanism provides a natural way to transition from one issuance policy to another without causing disruptions. One clear downside is added complexity in the design. As will be shown by the end of this subsection, it is also possible to more strictly retain the notion of budgeting by not relying on a fixed target, instead relying on an underlying target reward curve.</p>\n<p>Figure 22 shows yearly issuance under a time–quantity policy. For this example, the reward curve with tempered issuance <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#reward-curve-with-tempered-issuance-green-13\">previously presented</a> was used as a potential starting point in dashed green. A target of 30M ETH is marked by a dark grey vertical line, situated in between the blue crosses. If the quantity of stake is higher than the target, a cap similar to those described in the previous subsection slowly comes into play, gradually shifting the reward curve as indicated in light green, pushing down the yield. Over infinite time, with some fixed supply curve, the equilibrium will be situated either on the grey vertical line or the black curves at the edge that describes the maximum and minimum allowed settings for the reward curve. In this example, that corresponds to the current reward curve as a maximum and a cap at 80M ETH as the minimum (2/3 of the stake). It should be noted that a time–quantity policy does not require that the minimum reward curve institutes economic capping. In a way, this strategy is even more suitable in scenarios where there is no definite guarantee of some cap anyway.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/9/2967cb780e20fb051e64a7bbf7198bcc7baf67b5.png\" data-download-href=\"https://ethresear.ch/uploads/default/2967cb780e20fb051e64a7bbf7198bcc7baf67b5\" title=\"Figure 22\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/9/2967cb780e20fb051e64a7bbf7198bcc7baf67b5_2_690x411.png\" alt=\"Figure 22\" data-base62-sha1=\"5UhXfpLpw9Z5SKV3OxD8z4wW9BH\" width=\"690\" height=\"411\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/9/2967cb780e20fb051e64a7bbf7198bcc7baf67b5_2_690x411.png, https://ethresear.ch/uploads/default/optimized/3X/2/9/2967cb780e20fb051e64a7bbf7198bcc7baf67b5_2_1035x616.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/2/9/2967cb780e20fb051e64a7bbf7198bcc7baf67b5_2_1380x822.png 2x\" data-dominant-color=\"F8FAF9\"></a></div><p></p>\n<p><strong>Figure 22.</strong> Issuance under a time–quantity policy with a cap. The issuance level will react to changes in the deposited stake along the trajectory of the green reward curves. However, over infinite time scales, if the supply curve is held fixed, the reward curve adjusts such that it enforces an equilibrium along the black path.</p>\n<p>The same policy is shown in Figure 23 for issuance yield. On an infinite time scale, the user would be facing a reward curve constituting the upper black curve, followed by the grey vertical line, and concluding with the lower black curve. However, at a time scale of months or perhaps a year or two, the user faces a reward curve along one of the green faint lines, which instantly reacts to direct changes in the quantity of stake. Over time scales of several years, the user faces something in between—a smoothed-out version of the current trajectory, drifting towards the black and grey parts of the reward curve.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/8/3873c05b46373aa8710e704853aaf6fa7b99455f.png\" data-download-href=\"https://ethresear.ch/uploads/default/3873c05b46373aa8710e704853aaf6fa7b99455f\" title=\"Figure 23\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/8/3873c05b46373aa8710e704853aaf6fa7b99455f_2_690x422.png\" alt=\"Figure 23\" data-base62-sha1=\"83oJxEiklAX55BNkAk0vG3G8IvJ\" width=\"690\" height=\"422\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/8/3873c05b46373aa8710e704853aaf6fa7b99455f_2_690x422.png, https://ethresear.ch/uploads/default/optimized/3X/3/8/3873c05b46373aa8710e704853aaf6fa7b99455f_2_1035x633.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/3/8/3873c05b46373aa8710e704853aaf6fa7b99455f_2_1380x844.png 2x\" data-dominant-color=\"F8FAF8\"></a></div><p></p>\n<p><strong>Figure 23.</strong> Issuance yield under a time quantity policy with a cap. A further description is provided in the figure text of Figure 22.</p>\n<p>One idea behind the time–quantity policy is that the supply curve might slowly fall as the relative costs associated with staking decrease, and that we cannot then enforce some specific quantity of stake over time without having the reward curve close to vertical. As previously discussed, one reason why a vertical reward curve seems undesirable is the high “<span class=\"math\">p_i</span>-elasticity” that it brings.</p>\n<p>Even if some specific quantity of stake is optimal, there might also be budgeting considerations in the long run. After all, the notion of not overpaying for security was stipulated as a benefit of using a reward curve in the first place. Figure 24 shows issuance under a smooth time–quantity policy with a cap. It attempts to achieve the best of both worlds: a stricter range in the long run that still has some notion of budgeting incorporated; a flatter reward curve for the short run, moderating fluctuations in yield/issuance, and budgeting based on recent steady states of the supply curve. The black curve is the target reward curve at infinite time scales. In the short run, the protocol will still operate according to a green reward curve, adapting the yield to a change in the quantity of stake.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/2/d21549907a63ac113784b2290f2acb935f37b0ba.png\" data-download-href=\"https://ethresear.ch/uploads/default/d21549907a63ac113784b2290f2acb935f37b0ba\" title=\"Figure 24\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/2/d21549907a63ac113784b2290f2acb935f37b0ba_2_690x411.png\" alt=\"Figure 24\" data-base62-sha1=\"tYtSmf91wNu0ZVy7ipgIecps3RE\" width=\"690\" height=\"411\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/2/d21549907a63ac113784b2290f2acb935f37b0ba_2_690x411.png, https://ethresear.ch/uploads/default/optimized/3X/d/2/d21549907a63ac113784b2290f2acb935f37b0ba_2_1035x616.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/d/2/d21549907a63ac113784b2290f2acb935f37b0ba_2_1380x822.png 2x\" data-dominant-color=\"F9FAF9\"></a></div><p></p>\n<p><strong>Figure 24.</strong> Issuance under a smooth time–quantity policy with a cap. The issuance level will react to changes in the deposited stake along the trajectory of the green reward curves. However, over infinite time scales, if the supply curve is held fixed, the reward curve adjusts such that it enforces an equilibrium along the black path.</p>\n<p>The same policy is shown in Figure 25 for issuance yield.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/0/6/06393998baef620274207416cf58d2397685a60d.png\" data-download-href=\"https://ethresear.ch/uploads/default/06393998baef620274207416cf58d2397685a60d\" title=\"Figure 25\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/0/6/06393998baef620274207416cf58d2397685a60d_2_690x422.png\" alt=\"Figure 25\" data-base62-sha1=\"T3t425ZRKzGCpElAPBO9KLZMbr\" width=\"690\" height=\"422\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/0/6/06393998baef620274207416cf58d2397685a60d_2_690x422.png, https://ethresear.ch/uploads/default/optimized/3X/0/6/06393998baef620274207416cf58d2397685a60d_2_1035x633.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/0/6/06393998baef620274207416cf58d2397685a60d_2_1380x844.png 2x\" data-dominant-color=\"F8F9F8\"></a></div><p></p>\n<p><strong>Figure 25.</strong> Issuance under a smooth time–quantity policy with a cap. A further description is provided in the figure text of Figure 24.</p>\n<p>Time–quantity policies have not yet been researched and debated, and whether or not the added complexity is worth it will be resolved during future discussions.</p>\n<h3><a name=\"why-not-just-prevent-new-stakers-from-joining-36\" class=\"anchor\" href=\"https://ethresear.ch#why-not-just-prevent-new-stakers-from-joining-36\"></a>Why not just prevent new stakers from joining?</h3>\n<p>Someone in control of a validator then holds a “staking license”, akin to a taxi license or a rental apartment under rent control. This will create side markets, and solo stakers are not necessarily well-suited for navigating those conditions. Such a quasi-permissioned system will generally enable stakers “on the inside” to exercise undue control over the chain and can lead to rent-seeking behavior.</p>\n<h3><a name=\"can-stakers-profit-from-a-reduced-issuance-and-what-is-the-relevance-and-impact-of-the-realproportional-yield-37\" class=\"anchor\" href=\"https://ethresear.ch#can-stakers-profit-from-a-reduced-issuance-and-what-is-the-relevance-and-impact-of-the-realproportional-yield-37\"></a>Can stakers profit from a reduced issuance and what is the relevance and impact of the real/proportional yield?</h3>\n<h4><a name=\"overview-38\" class=\"anchor\" href=\"https://ethresear.ch#overview-38\"></a>Overview</h4>\n<p>Stakers hold the underlying ETH, and can <a href=\"https://ethresear.ch/t/reward-curve-with-tempered-issuance-eip-research-post/19171#h-64-the-proportion-that-matters-to-eth-holders-40\">profit</a> if an issuance reduction improves Ethereum such that the native asset becomes more valuable. Furthermore, stakers are diluted from newly issued tokens just like everyone else. Therefore, if a high issuance compels many to stake, those that would have staked also at a lower issuance—with fewer stakers competing for the yield—might benefit at a lower issuance. It is by no means certain that the proportion of the ETH that a remaining staker attains will increase from a reduction in issuance (positive <span class=\"math\">y_p</span> as defined below), but any potential loss will be much more modest than what is implied by the change in issuance yield. The condition is illustrated with an isoproportion map in Figure 28.</p>\n<h4><a name=\"welfare-gain-stakers-as-eth-owners-39\" class=\"anchor\" href=\"https://ethresear.ch#welfare-gain-stakers-as-eth-owners-39\"></a>Welfare gain – stakers as ETH owners</h4>\n<p>When discussing the effect of issuance policy on stakers, it is first important to recognize that they own the underlying ETH. The native asset of a well-designed decentralized blockchain is more valuable than that of a poorly designed one. In the following subsections, the proportional yield/real yield will be analyzed, accounting for issuance and burn. But it is ultimately Ethereum’s ability to power the world economy that will affect the ETH token holder the most, including the staker. The real “real yield” incorporates the change in value of the underlying ETH—including any staking yield—relative to a relevant consumer price index. It is indeed very useful to have sound native money in an economic system. And the best sound money will not encumber its users to research the reliability of various SSPs, track staking income and see it taxed, or risk being wiped out in a slashing event or other failure.</p>\n<h4><a name=\"proportional-yield-40\" class=\"anchor\" href=\"https://ethresear.ch#proportional-yield-40\"></a>Proportional yield</h4>\n<p>Review Figure 26, an updated version of <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#h-1-reduced-costs-raise-welfare-6\">Figure 1</a>. Once again, the effect of a change in issuance under equilibrium is reviewed, with the welfare improvement represented by the dark blue area. The height of the dark grey area represents the loss in yield <span class=\"math\">y</span> for stakers, captured by the red arrow. But when issuance is reduced, everyone is also rewarded with a proportional share of the combined dark blue and dark grey area, in the form of a reduction to the issuance rate <span class=\"math\">i</span>.</p>\n<p>The figure illustrates the impact of a change in issuance on ETH holders by taking the dark blue area and the dark grey area and creating a rectangle extending across the full circulating supply (120M ETH). All token holders gain according to the height of this area, shown by an orange arrow. If that height surpasses the height of the dark grey area, the staker will gain a higher proportion of the circulating supply from a reduction in issuance, otherwise it will not.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/0/c07e23557a6d6ede60faa43a1ac3b99052814a83.png\" data-download-href=\"https://ethresear.ch/uploads/default/c07e23557a6d6ede60faa43a1ac3b99052814a83\" title=\"Figure 26\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/0/c07e23557a6d6ede60faa43a1ac3b99052814a83_2_673x500.png\" alt=\"Figure 26\" data-base62-sha1=\"rsRVh41GVKGUQEih9bC3Uc4eRVh\" width=\"673\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/0/c07e23557a6d6ede60faa43a1ac3b99052814a83_2_673x500.png, https://ethresear.ch/uploads/default/optimized/3X/c/0/c07e23557a6d6ede60faa43a1ac3b99052814a83_2_1009x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/0/c07e23557a6d6ede60faa43a1ac3b99052814a83_2_1346x1000.png 2x\" data-dominant-color=\"E7E7F4\"></a></div><p></p>\n<p><strong>Figure 26.</strong> Implied cost (blue) and surplus (grey) of staking under a hypothetical future supply curve. A change in issuance policy shifts the equilibrium from the black square to the green circle. The cost reduction (dark blue) leads to aggregate welfare improvement as long as the protocol remains secure and decentralized, and the reduction in surplus (dark grey) simply shifts some utility from stakers to everyone. The remaining stakers lose out on yield (red arrow). They however gain from a reduction in the inflation rate (orange arrow), represented by the combined dark blue and grey area extended across the full 120M ETH supply.</p>\n<p>The issuance rate is formed as <span class=\"math\">i=y_id</span>, where <span class=\"math\">y_i</span> is the issuance yield and <span class=\"math\">d</span> is the proportion of the circulating supply that is staked. It was indeed the change in both <span class=\"math\">d</span> and <span class=\"math\">y_i</span> that determined the height of the orange arrow in Figure 26 (the change in <span class=\"math\">i</span>). The issuance rate affects the circulating supply inflation rate according to <span class=\"math\">s=i-b</span>. In essence, <span class=\"math\">s</span> captures the percentage change over a year to how many ETH that exist. This means that <span class=\"math\">s</span> rises if the issuance rate is high. Conversely, <span class=\"math\">s</span> falls if a lot of ETH is burned through EIP-1559; this post will use the approximate burn rate <span class=\"math\">b=0.008</span> since The Merge in the examples. The effect on token holders can be calculated using the equation presented in my <a href=\"https://notes.ethereum.org/@anderselowsson/MinimumViableIssuance#Benefits-of-MVI-to-user-utility\">thread</a> on minimum viable issuance:</p>\n<div class=\"math\">\ny_p = \\frac{1+y}{1+s}-1.\n</div>\n<p>The proportional yield <span class=\"math\">y_p</span>, also referred to as the <a href=\"https://ethresear.ch/t/endgame-staking-economics-a-case-for-targeting/18751#real-yield-the-real-deal-10\">real yield</a> can be computed for both stakers and non-stakers, in the latter case with <span class=\"math\">y=0</span>. It can be interpreted as the <a href=\"https://en.wikipedia.org/wiki/Fisher_equation\">Fisher equation</a> adapted to Ethereum. A simple approximation, applicable at lower yields, is <span class=\"math\">y_p=y-s</span>.</p>\n<h4><a name=\"illustrating-the-change-in-welfare-and-proportional-yield-41\" class=\"anchor\" href=\"https://ethresear.ch#illustrating-the-change-in-welfare-and-proportional-yield-41\"></a>Illustrating the change in welfare and proportional yield</h4>\n<p>Figure 27 again illustrates what happens under a reduction in issuance to ETH holders, using the same supply and demand curves as in Figure 26. There are three categories: the remaining <em>stakers</em>, the <em>de-stakers</em> between the green circle and black square on the supply curve, and those who were <em>non-stakers</em> already from the beginning. The idea is to compare <span class=\"math\">y_p</span> at the two different equilibria for all token holders, as it changes from <span class=\"math\">y^b_p</span> (black square) to <span class=\"math\">y^a_p</span> (green circle). If <span class=\"math\">y^a_p</span> is higher, the token holder benefits, otherwise it incurs losses. The comparison gives a change in cardinal utility as</p>\n<div class=\"math\">\nu’=\\frac{1+y^a_p}{1+y^b_p}-1.\n</div>\n<p>However, one addition is required: use the <a href=\"https://notes.ethereum.org/@anderselowsson/MinimumViableIssuance#Benefits-of-MVI-to-user-utility\">reservation yield</a> as <span class=\"math\">y</span> for those who stop staking when computing <span class=\"math\">y^a_p</span>. Below that yield, they do not stake anyway, so they suffer no additional loss in utility as the yield decreases further. As shown in the bottom pane, de-stakers will under this definition derive a higher utility at the new equilibrium, with non-stakers clearly better off.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/2/a2330abe0b83f23e396a5e32c03e02f69a7aee2b.png\" data-download-href=\"https://ethresear.ch/uploads/default/a2330abe0b83f23e396a5e32c03e02f69a7aee2b\" title=\"Figure 27\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/2/a2330abe0b83f23e396a5e32c03e02f69a7aee2b_2_690x465.png\" alt=\"Figure 27\" data-base62-sha1=\"n8SHQ8LwP2pE0XzKcGD7cC2eoqf\" width=\"690\" height=\"465\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/2/a2330abe0b83f23e396a5e32c03e02f69a7aee2b_2_690x465.png, https://ethresear.ch/uploads/default/optimized/3X/a/2/a2330abe0b83f23e396a5e32c03e02f69a7aee2b_2_1035x697.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/a/2/a2330abe0b83f23e396a5e32c03e02f69a7aee2b_2_1380x930.png 2x\" data-dominant-color=\"F7F6F6\"></a></div><p></p>\n<p><strong>Figure 27.</strong> The change in <span class=\"math\">y</span> and <span class=\"math\">s</span> between two hypothetical equilibria is utilized to isolate a change in cardinal utility <span class=\"math\">u'</span> for all token holders. Stakers are subjected to a reduction in yield <span class=\"math\">y</span>, but the reduction in the inflation rate <span class=\"math\">s</span> is similar, so they are left unaffected (<span class=\"math\">y_p</span> stays the same). De-stakers incur no further loss in utility once <span class=\"math\">y</span> falls below their reservation yield. They benefit together with non-stakers from the reduction in <span class=\"math\">s</span>.</p>\n<p>The orange arrows in the bottom pane once again illustrate how a reduction in <span class=\"math\">s</span> increases utility for everyone—that’s from removing the dark grey and dark blue areas in the previous figure. The red arrows illustrate how a decrease in yield reduces utility for stakers, corresponding to the height of that dark grey area in Figure 26. For the de-stakers, the red arrows become very short as that dark grey area narrows, even though they forfeited all yield. That’s because their costs went to 0 as well.</p>\n<p>The height of <span class=\"math\">u’</span> thus captures the change in <span class=\"math\">y_p</span> for stakers and non-stakers, and the size of the orange area captures the welfare gain, ultimately deriving from a cost reduction to Ethereum’s users (note that the orange area extends further up to 120M ETH). While stakers may be left unaffected by a reduction in issuance in terms of the proportion of the circulating supply they retain, they can <a href=\"https://notes.ethereum.org/@anderselowsson/Foundations-of-MVI#Let-the-best-money-win\">still gain</a>, because the utility of the ETH asset has increased, in accordance with the size of the orange region. The purpose of <a href=\"https://notes.ethereum.org/@anderselowsson/MinimumViableIssuance#Benefits-of-MVI-to-user-utility\">introducing</a> this figure in my original thread on minimum viable issuance was to encapsulate these insights (welfare gain + proportional yield) in one plot.</p>\n<h4><a name=\"the-isoproportion-map-42\" class=\"anchor\" href=\"https://ethresear.ch#the-isoproportion-map-42\"></a>The isoproportion map</h4>\n<p>Clearly the shape of the supply curve will be influential when determining if stakers gain from a reduction in issuance. Stakers benefit from an issuance increase under steep supply curves where no new stakers enter if the yield <span class=\"math\">y</span> goes up. Stakers do not benefit under flat supply curves where a slight bump to the yield makes a ton of new stakers enter, creating circulating supply inflation <span class=\"math\">s</span> in the process. In economics, it is common to use diagrams to illustrate trade-offs by drawing lines along which conditions remain constant, similar to contour lines on a topographical map indicating equal elevation. Figure 28 shows such a map, with “isoproportion lines” indicating where <span class=\"math\">y_p</span> stays the same. Each line is drawn according to the following equation:</p>\n<div class=\"math\">\ny = \\frac{y_p-(1+y_p)(v+b)}{1-d-y_pd},\\quad \\quad  y_p&lt;\\frac{1-d}{d}.\n</div>\n<p>It is <a href=\"https://ethresear.ch/t/reward-curve-with-tempered-issuance-eip-research-post/19171#h-44-the-isoproportion-map-28\">formed</a> by reworking the equation for <span class=\"math\">y_p</span>. The variable <span class=\"math\">v</span> here represents the “MEV rate” constituting MEV as a proportion of the circulating supply. The equation implies the basic condition for profitability that can be imposed on the supply curve under any equilibrium (e.g., via derivation and analysis of elasticities).</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/f/af7fe425f7474fe388e4544ac9a9bcc0d5f5f701.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/af7fe425f7474fe388e4544ac9a9bcc0d5f5f701\" title=\"Figure 28\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/f/af7fe425f7474fe388e4544ac9a9bcc0d5f5f701_2_690x414.jpeg\" alt=\"Figure 28\" data-base62-sha1=\"p2xyU3xKDVLoIWTmNLsRHggH0pb\" width=\"690\" height=\"414\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/f/af7fe425f7474fe388e4544ac9a9bcc0d5f5f701_2_690x414.jpeg, https://ethresear.ch/uploads/default/optimized/3X/a/f/af7fe425f7474fe388e4544ac9a9bcc0d5f5f701_2_1035x621.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/a/f/af7fe425f7474fe388e4544ac9a9bcc0d5f5f701_2_1380x828.jpeg 2x\" data-dominant-color=\"F7F6F6\"></a></div><p></p>\n<p><strong>Figure 28.</strong> An isoproportion map illustrating the conditions under which stakers can attain a higher proportion of the circulating supply from a change in issuance policy. If the slope of the corresponding grey isoproportion line is steeper than the slope of the supply curve under equilibrium, stakers benefit from a reduction in issuance. The red area is at a lower elevation on the map than the orange area even though the staking yield is higher, and thus a worse equilibrium for stakers.</p>\n<p>Review the purple dashed isoporoportion line. Stakers get a real staking yield of 1.7% anywhere on this line, although the staking yield and stake participation vary. The red region lies below the line, so ending up there is worse for stakers than ending up in the orange region above the line, even though the staking yield is higher in the entire red region than in the orange region. When nearly everyone stakes, the supply curve must be almost vertical for stakers to benefit from an increase in issuance yield, since the supply inflation rate will increase nearly as much. The orange arrow points towards higher elevation on the isoproportion map, and the ideal equilibrium for stakers lies in the top left corner. But unfortunately for stakers, an equilibrium must lie on the supply curve. Now look at the purple full isoproportion line.</p>\n<p>The hypothetical supply curve in blue from the earlier Figures 26-27 intersects both the current reward curves (black) and reward curve with tempered issuance (green) along this line—the equilibria (black square and green circle) are thus at the same “elevation”. This explains why stakers were unaffected in the previous discussion. The highest elevation of the supply curve is marked by a blue star, situated between the two equilibria.  At this point, the supply curve is tangent to the corresponding isoproportion line. Plots by <a href=\"https://ethereum-magicians.org/t/electra-issuance-curve-adjustment-proposal/18825#proposal-for-electra-issuance-curve-adjustment-3\">Caspar and Ansgar</a> as well as <a href=\"https://notes.ethereum.org/@mikeneuder/subsol#3-Scaled-Root-Curve-alternative-issuance\">Mike</a> of the green reward curve are useful for showing how its elevation (<span class=\"math\">y_p</span>) varies across stake participation (without incorporating MEV or burn). This is akin to sampling its value from the map across stake participation.</p>\n<p>How might the supply curve evolve going forward? Use your intuition to outline its shape and check where your imaginary supply curve reaches the highest elevation on the map (as marked by the star). That’s where the reward curve should intersect the supply curve for stakers to gain the highest proportion of the circulating supply. However, also remember the lessons from the earlier discussion: stakers also gain by holding the native token of a well-designed cryptocurrency that remains secure and imposes low aggregate costs on its users.</p>\n<h3><a name=\"some-users-think-that-more-yield-is-more-fun-and-like-to-collect-yield-on-their-eth-why-not-lean-into-this-43\" class=\"anchor\" href=\"https://ethresear.ch#some-users-think-that-more-yield-is-more-fun-and-like-to-collect-yield-on-their-eth-why-not-lean-into-this-43\"></a>Some users think that more yield is more fun and like to collect yield on their ETH. Why not lean into this?</h3>\n<p>This answer will extend the previous answers (<a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#can-stakers-profit-from-a-reduced-issuance-and-what-is-the-relevance-and-impact-of-the-realproportional-yield-37\">1</a>, <a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675#h-1-reduced-costs-raise-welfare-6\">2</a>), and the reader is encouraged to first review them to understand how excessive issuance as well as dilution affects token holders.</p>\n<p>The notion of <a href=\"https://en.wikipedia.org/wiki/Behavioral_economics#Bounded_rationality\">bounded rationality</a> helps to explain why some users may prefer a scenario with lower <span class=\"math\">y_p</span>, where the yield is raised but the supply inflation rate (which users have a harder time to track) rises even more. Behavioral economics can be helpful in this way for explaining why some economic agents act irrationally, perhaps for lack of education or time to deliberate on a topic. But Ethereum should not harness people’s bounded understanding of yield, and keep it high to trick users into thinking that they gain something, when they do in fact not. It is instead important to educate people on these matters so that user utility is not degraded for some hypothetical short-term gain, which is unlikely to materialize. More yield is not more fun. An optimally designed Ethereum is more fun.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675\">Read full topic</a></p>","link":"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675","pubDate":"Wed, 29 May 2024 15:20:10 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19675"},"source":{"@url":"https://ethresear.ch/t/faq-ethereum-issuance-reduction/19675.rss","#text":"FAQ: Ethereum issuance reduction"}},{"title":"Big blocks, blobs, and reorgs","dc:creator":"Nero_eth","category":"Sharding","description":"<h1><a name=\"big-blocks-blobs-and-reorgs-1\" class=\"anchor\" href=\"https://ethresear.ch#big-blocks-blobs-and-reorgs-1\"></a>Big blocks, blobs, and reorgs</h1>\n<p>With <a href=\"https://www.eip4844.com/\">EIP-4844</a> going live, Ethereum effectively increased its transaction throughput by providing dedicated space for rollups to post their data down to L1.</p>\n<p>Blobs are now the main contributor to the block size, while the average beacon block size (excluding blobs) went down from ~<span class=\"math\">125</span> KB to ~<span class=\"math\">90</span> KB.</p>\n<p><strong>In the chart below, one can see the impact of blobs on the data throughput of Ethereum:</strong></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/9/992968f3269c56752a8fc1ce4805ff35f91c1f03.png\" data-download-href=\"https://ethresear.ch/uploads/default/992968f3269c56752a8fc1ce4805ff35f91c1f03\" title=\"block_content_over_time\"><img src=\"https://ethresear.ch/uploads/default/original/3X/9/9/992968f3269c56752a8fc1ce4805ff35f91c1f03.png\" alt=\"block_content_over_time\" data-base62-sha1=\"lQVLWZ4FMxYJeVwnWoejm9qmj7R\" width=\"690\" height=\"394\" data-dominant-color=\"CFDBD9\"></a></div><p></p>\n<p>Such an increase in throughput is expected to push certain “weaker” validators to their limits. Thus, we want to answer the question “<em>Do blobs contribute to reorgs and if so, by how much?</em>”</p>\n<p>For the following analysis, I’m relying on a node to parse data in real-time (head of chain) and check the contents of blocks that were eventually reorged.</p>\n<p><strong>The earliest data point considered for the following analysis is slot <span class=\"math\">8,992,385</span> (May 3, 2024), which gives us around 4 weeks of data.</strong><br>\n<strong>In total, we observe <span class=\"math\">487</span> reorgs and a total of ~<span class=\"math\">184,000</span> slots in this time span.</strong></p>\n<h3><a name=\"snappy-compressed-blocks-2\" class=\"anchor\" href=\"https://ethresear.ch#snappy-compressed-blocks-2\"></a>Snappy compressed blocks</h3>\n<p>First, let’s compare the <strong>snappy compressed block size of blocks</strong> that were reorged vs those that made it into the canonical chain.<br>\nIn particular, we’re interested in whether reorged blocks were on average larger than those that weren’t reorged.</p>\n<p><em>In this context, we’re referring to reorgs as valid blocks that the respective proposer proposed but that were eventually orphaned by consecutive proposers.</em></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/5/65e2f3539a7b27774ccc3e9027f94040b7a393ac.png\" data-download-href=\"https://ethresear.ch/uploads/default/65e2f3539a7b27774ccc3e9027f94040b7a393ac\" title=\"boxplot2\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/5/65e2f3539a7b27774ccc3e9027f94040b7a393ac_2_690x229.png\" alt=\"boxplot2\" data-base62-sha1=\"exksKup1zgj9hoFIz2M9ZPqz7zK\" width=\"690\" height=\"229\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/5/65e2f3539a7b27774ccc3e9027f94040b7a393ac_2_690x229.png, https://ethresear.ch/uploads/default/optimized/3X/6/5/65e2f3539a7b27774ccc3e9027f94040b7a393ac_2_1035x343.png 1.5x, https://ethresear.ch/uploads/default/original/3X/6/5/65e2f3539a7b27774ccc3e9027f94040b7a393ac.png 2x\" data-dominant-color=\"F8F8F9\"></a></div><p></p>\n<p>Based on the above graph, we <strong>cannot</strong> see a significant difference in the median block size of reorged and not-reorged blocks. Focusing on the <span class=\"math\">75\\%</span> quantile and the upper whiskers which are defined as <span class=\"math\">Q_{75} \\times 1.5\\ IQR</span>, we do see reorged blocks being larger than not reorged ones. This was expected (bigger blocks lead to bigger struggles), however, as visible in this <a href=\"https://ethresear.ch/t/on-increasing-the-block-gas-limit/18567\">earlier analysis</a> on block sizes, the effects were reduced with 4844 going live.</p>\n<h3><a name=\"blobs-3\" class=\"anchor\" href=\"https://ethresear.ch#blobs-3\"></a>Blobs</h3>\n<p>Next, let’s look into blobs. With the go-live of EIP-4844, most rollups switched from using calldata to blobs, shifting the majority of posted data from the EL payload to blobs.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/c/dcb946af5f97726ad19040528abaff69748f11e8.png\" data-download-href=\"https://ethresear.ch/uploads/default/dcb946af5f97726ad19040528abaff69748f11e8\" title=\"boxplot3\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/c/dcb946af5f97726ad19040528abaff69748f11e8_2_690x229.png\" alt=\"boxplot3\" data-base62-sha1=\"vuBZJD0HqcvCHWbcuJWyC6wZaRi\" width=\"690\" height=\"229\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/c/dcb946af5f97726ad19040528abaff69748f11e8_2_690x229.png, https://ethresear.ch/uploads/default/optimized/3X/d/c/dcb946af5f97726ad19040528abaff69748f11e8_2_1035x343.png 1.5x, https://ethresear.ch/uploads/default/original/3X/d/c/dcb946af5f97726ad19040528abaff69748f11e8.png 2x\" data-dominant-color=\"F9F9F9\"></a></div><p></p>\n<p>Based on the above boxplots, we can see that most <strong>reorged</strong> blocks contained <span class=\"math\">6</span> blobs. Seeing more reorgs for blocks with <span class=\"math\">6</span> blobs is kind of expected as those blocks were approximately <strong>7 times larger than the average block pre-4844</strong>.</p>\n<p><strong>The same pattern is evident when visualizing the percentage of reorged blocks over the number of blobs per block.</strong></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/2/32857ee973ca2a11247e2f25384b6b45b2b6be2e.png\" data-download-href=\"https://ethresear.ch/uploads/default/32857ee973ca2a11247e2f25384b6b45b2b6be2e\" title=\"reorgrate_over_blobs\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/2/32857ee973ca2a11247e2f25384b6b45b2b6be2e_2_690x301.png\" alt=\"reorgrate_over_blobs\" data-base62-sha1=\"7cVSZ2uNkB2Ls1359Lvbr65s58W\" width=\"690\" height=\"301\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/2/32857ee973ca2a11247e2f25384b6b45b2b6be2e_2_690x301.png, https://ethresear.ch/uploads/default/original/3X/3/2/32857ee973ca2a11247e2f25384b6b45b2b6be2e.png 1.5x, https://ethresear.ch/uploads/default/original/3X/3/2/32857ee973ca2a11247e2f25384b6b45b2b6be2e.png 2x\" data-dominant-color=\"CCD9D3\"></a></div><p></p>\n<p>Comparing the percentage of reorged blocks with <span class=\"math\">0</span> and <span class=\"math\">6</span> blobs, we can see that the probability of a reorg is more than <strong><span class=\"math\">3</span> times larger.</strong></p>\n<p>In this context, it’s important to check what the distribution of blobs per block looks like. The “extreme” cases of <span class=\"math\">0</span> or <span class=\"math\">6</span> blobs per block might heavily impact the perceived impact of blobs on reorgs.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/7/8/78cfeeac384e4d699dd3776ba954dd95dffbda24.png\" data-download-href=\"https://ethresear.ch/uploads/default/78cfeeac384e4d699dd3776ba954dd95dffbda24\" title=\"blobs_per_block_ist\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/7/8/78cfeeac384e4d699dd3776ba954dd95dffbda24_2_690x265.png\" alt=\"blobs_per_block_ist\" data-base62-sha1=\"heKMWoxyAqItD0mVvJZCRMMT820\" width=\"690\" height=\"265\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/7/8/78cfeeac384e4d699dd3776ba954dd95dffbda24_2_690x265.png, https://ethresear.ch/uploads/default/optimized/3X/7/8/78cfeeac384e4d699dd3776ba954dd95dffbda24_2_1035x397.png 1.5x, https://ethresear.ch/uploads/default/original/3X/7/8/78cfeeac384e4d699dd3776ba954dd95dffbda24.png 2x\" data-dominant-color=\"E1E8E5\"></a></div><p></p>\n<p>As visible in the above histogram, which shows the distribution of blobs per block in May 2024, most blocks contained either <span class=\"math\">0</span> or <span class=\"math\">6</span> blobs.</p>\n<h3><a name=\"regression-analysis-4\" class=\"anchor\" href=\"https://ethresear.ch#regression-analysis-4\"></a>Regression Analysis</h3>\n<p>To quantify the impact of blobs on reorgs, we can apply a simple logistic regression.</p>\n<p>In addition to the (1) uncompressed block size, (2) snappy compressed block size, (3) gas used per block and (4) number of transactions and (5) blobs per block, we also put different CL clients as dummy variables into the regression model.<br>\nAll dependent variables are z-score scaled and the Lighthouse client is part of the intercept.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/2/5270b626e19b685b050d293245984a8e0700ba11.png\" data-download-href=\"https://ethresear.ch/uploads/default/5270b626e19b685b050d293245984a8e0700ba11\" title=\"logit\"><img src=\"https://ethresear.ch/uploads/default/original/3X/5/2/5270b626e19b685b050d293245984a8e0700ba11.png\" alt=\"logit\" data-base62-sha1=\"bLiDqt1fU6P2TGMdG48tbmQW6t3\" width=\"690\" height=\"368\" data-dominant-color=\"EDEDED\"></a></div><p></p>\n<p>Looking at the intercept (const), the baseline log-odds of a reorg when all other predictors are at their mean indicates a very low baseline probability of a reorg happening.<br>\nTo put that in numbers, empirically around <span class=\"math\">0.27\\%</span> of all blocks in May 2024 were reorged.</p>\n<p>Next, let’s focus on the dependent variables, considering <span class=\"math\">p \\le 0.01</span> as a significant result.</p>\n<p><strong>Blobs</strong>, <strong>size_compressed</strong>, and <strong>nr_txs</strong> have significant impacts on the probability of a reorg.</p>\n<ul>\n<li>Each additional blob and each additional byte in size_compressed increases the probability of a reorg.</li>\n<li><code>size</code>, <code>gas_used</code> and other client variables (Nimbus, Prysm) do not have significant impacts (compared to the Lighthouse client).</li>\n</ul>\n<p>For each increase in blobs by the standard deviation of blobs (<span class=\"math\">=2.33</span>), the log-odds of a block being reorged increase by <span class=\"math\">1.2582</span>.<br>\nThe baseline probability of a reorg, with all dependent variables at their mean, is approximately <span class=\"math\">0.27\\%</span>. This would mean that an increase in blobs by one standard deviation (<span class=\"math\">=2.33</span>) results in the probability of a reorg increasing from approximately <span class=\"math\">0.27\\%</span> to <span class=\"math\">0.59\\%</span>, representing an increase of about <span class=\"math\">0.32</span> percentage points.</p>\n<h3><a name=\"clients-5\" class=\"anchor\" href=\"https://ethresear.ch#clients-5\"></a>Clients</h3>\n<p><strong>Notably, the number of reorgs is in general very low and even lower for “minority” clients such as Lodestar and Teku. Thus a few Lodestar or Teku users that are playing timing games could already impact this result.</strong></p>\n<p><strong>Thus, the following result must be taken with a grain of salt.</strong></p>\n<p><strong>For the Lodestar client:</strong></p>\n<ul>\n<li>The log-odds of a reorg increase by <span class=\"math\">0.9814</span> when using the Lodestar client.</li>\n<li>This corresponds to an odds ratio of approximately <span class=\"math\">2.667</span>, indicating that the odds of a reorg are about <span class=\"math\">166.7\\%</span> higher when using the Lodestar client.</li>\n<li>The baseline probability of a reorg is approximately <span class=\"math\">0.27\\%</span>. When using the Lodestar client, this probability increases to approximately <span class=\"math\">0.45\\%</span>, an increase of about <span class=\"math\">0.178</span> percentage points.</li>\n</ul>\n<p><strong>For the Teku client:</strong></p>\n<ul>\n<li>The log-odds of a reorg increase by <span class=\"math\">0.5629</span> when using the Teku client.</li>\n<li>This corresponds to an odds ratio of approximately <span class=\"math\">1.756</span>, indicating that the odds of a reorg are about <span class=\"math\">75.6\\%</span> higher when using the Teku client.</li>\n<li>The baseline probability of a reorg is approximately <span class=\"math\">0.27\\%</span>. When using the Teku client, this probability increases to approximately <span class=\"math\">0.3\\%</span>, an increase of about <span class=\"math\">0.027</span> percentage points.</li>\n</ul>\n<p>For the <strong>Nimbus</strong> and <strong>Prysm</strong> clients, we do not see a significant impact on reorgs compared to <strong>Lighthouse</strong>.</p>\n<h2><a name=\"next-steps-6\" class=\"anchor\" href=\"https://ethresear.ch#next-steps-6\"></a>Next Steps</h2>\n<ul>\n<li><strong>Call for reproduction</strong>: Please reproduce my analysis. Working with a lot of data can be dirty. Working with data that disappears from the chain after a block was reorged is even dirtier. Thus, view this as an initial attempt to dive into the “blobs vs reorgs” topic.</li>\n<li><strong>More data</strong>: 4844 is still very young and I plan to reproduce this analysis in a few months to verify the results using more data.</li>\n<li><strong>Filter for client bugs</strong>: A small bug in a client can significantly impact the result. Same applies to validators playing <strong>timing games, honest reorg strategies, and EL clients</strong>.</li>\n<li><strong>What about relays and builders</strong>: Check why we see either 0 or 6 blobs, the extreme cases, so often, and what the <strong>builder</strong> and <strong>relay</strong> behavior is in those scenarios.</li>\n<li>Check how <strong>efficiently blobs are used</strong> and if <strong>sharing blob space</strong> among multiple entities could increase efficiency.</li>\n</ul>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/big-blocks-blobs-and-reorgs/19674\">Read full topic</a></p>","link":"https://ethresear.ch/t/big-blocks-blobs-and-reorgs/19674","pubDate":"Wed, 29 May 2024 13:05:59 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19674"},"source":{"@url":"https://ethresear.ch/t/big-blocks-blobs-and-reorgs/19674.rss","#text":"Big blocks, blobs, and reorgs"}},{"title":"Advantage of Pipelining Consensus and Execution: Delayed Execution","dc:creator":"terence","category":"Block proposer","description":"<p><em><strong>Related work</strong></em></p>\n<ol>\n<li><a href=\"https://ethresear.ch/t/payload-timeliness-committee-ptc-an-epbs-design/16054\">Payload Timeliness Committee (PTC): An EPBS Design</a>, by Mike and Francesco – July 2023</li>\n<li><a href=\"https://ethresear.ch/t/payload-boosts-in-epbs/18769\">Payload Boosts in EPBS</a>, by Potuz – Feb 2024</li>\n<li><a href=\"https://www.paradigm.xyz/2024/04/reth-perf\" rel=\"noopener nofollow ugc\">reth: High-Performance Ethereum Implementation</a>, by Georgios – April 2024</li>\n<li><a href=\"https://hackmd.io/@potuz/rJ9GCnT1C\" rel=\"noopener nofollow ugc\">EPBS Annotated Spec Guide</a>, by Potuz – April 2023</li>\n<li><a href=\"https://ethresear.ch/t/builder-reveal-timing-game-in-epbs/19424\">Builder Reveal Timing Game in EPBS</a>, by Terence – April 2024</li>\n<li><a href=\"https://hackmd.io/@ttsao/epbs-annotated-validator\" rel=\"noopener nofollow ugc\">Annotated Validator Guide for EPBS</a>, by Terence – April 2024</li>\n</ol>\n<h2><a name=\"background-1\" class=\"anchor\" href=\"https://ethresear.ch#background-1\"></a>Background</h2>\n<p>Pipelining consensus and execution validations into different stages is a lesser known concept in Ethereum today, but it may become crucial in the future, especially in any Proposer-Builder Separation (PBS) roadmap, whether it’s block auction, slot auction, or ticket auction. As this separation seems inevitable in the long term, what does it mean to separate and pipeline consensus and execution validations into different stages? This post will explore the details, going into the benefits and downsides.</p>\n<p>Since Ethereum moved to <a href=\"https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/\" rel=\"noopener nofollow ugc\">proof of stake</a>, a node runs two pieces of software: <a href=\"https://ethereum.org/en/roadmap/merge/#merging-with-mainnet\" rel=\"noopener nofollow ugc\">a consensus client and an execution client</a>. The consensus client verifies the consensus part of the block, while the execution client verifies the execution part. Although the validations are separated in two different software, the validation result is coupled. If either the consensus validation or the execution validation fails, the whole block fails. Timeline-wise, both validations must be completed before the <span class=\"math\">AttestationDeadline</span> (4 seconds into the beacon slot) for the block to be considered as <a href=\"https://eth2book.info/capella/part3/forkchoice/#whats-a-fork-choice\" rel=\"noopener nofollow ugc\">head</a> for the attestation vote. This separation of concern for the two layers allows a node to verify consensus and execution in parallel. But despite parallel validation, both the consensus and execution parts of the block <strong>MUST</strong> be validated before the <span class=\"math\">AttestationDeadline</span>. Currently, the average block arrives at the 1 to 2-second mark into the slot, giving the running node less than 2 seconds to complete the verifications. This is called the <strong>validation</strong> <strong>hot path</strong>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/9/59b830c5f23687d39a664ce8187c4d5672bbee06.png\" data-download-href=\"https://ethresear.ch/uploads/default/59b830c5f23687d39a664ce8187c4d5672bbee06\" title=\"Screenshot 2024-05-23 at 6.47.57 AM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/9/59b830c5f23687d39a664ce8187c4d5672bbee06_2_690x307.png\" alt=\"Screenshot 2024-05-23 at 6.47.57 AM\" data-base62-sha1=\"cNH7w2Sst6mgVuNQzWLEToDO19Q\" width=\"690\" height=\"307\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/9/59b830c5f23687d39a664ce8187c4d5672bbee06_2_690x307.png, https://ethresear.ch/uploads/default/optimized/3X/5/9/59b830c5f23687d39a664ce8187c4d5672bbee06_2_1035x460.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/5/9/59b830c5f23687d39a664ce8187c4d5672bbee06_2_1380x614.png 2x\" data-dominant-color=\"1B2121\"></a></div><br>\n<em>How long it took the beacon block + execution payload to arrive on my local NUC node</em><p></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/7/c7581900ce6df801b5261dc709b5344e35480859.png\" data-download-href=\"https://ethresear.ch/uploads/default/c7581900ce6df801b5261dc709b5344e35480859\" title=\"Screenshot 2024-05-23 at 6.50.00 AM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/7/c7581900ce6df801b5261dc709b5344e35480859_2_690x308.png\" alt=\"Screenshot 2024-05-23 at 6.50.00 AM\" data-base62-sha1=\"srtLqFOjmQm64wkn9IEjZT1QLSV\" width=\"690\" height=\"308\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/7/c7581900ce6df801b5261dc709b5344e35480859_2_690x308.png, https://ethresear.ch/uploads/default/optimized/3X/c/7/c7581900ce6df801b5261dc709b5344e35480859_2_1035x462.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/7/c7581900ce6df801b5261dc709b5344e35480859_2_1380x616.png 2x\" data-dominant-color=\"1B2020\"></a></div><br>\n<em>How long it took the execution layer client to finish processing the execution payload on my local NUC node</em><p></p>\n<h2><a name=\"consensus-and-execution-pipelining-in-pbs-2\" class=\"anchor\" href=\"https://ethresear.ch#consensus-and-execution-pipelining-in-pbs-2\"></a>Consensus and execution pipelining in PBS</h2>\n<p>In this section, we’ll focus on block-auction-based EPBS. The anatomy of a 12 second beacon chain slot changes to the following:</p>\n<ul>\n<li>Second 0: proposer broadcasts a consensus block that commits to the builder’s block</li>\n<li>Second 3: <span class=\"math\">AttestationDeadline</span> for the consensus block to be processed; beacon attester casts vote. If the consensus block is not processed on time, the beacon attester votes for an older slot block as head</li>\n<li>Second 6: builder reveals the winning execution block</li>\n<li>Second 9: <span class=\"math\">PtcDeadline</span> for the execution block to be seen; <a href=\"https://ethresear.ch/t/payload-timeliness-committee-ptc-an-epbs-design/16054\">PTC</a> attester casts vote that the builder revealed the execution block on time without verifying the block, only the verify block hash. If the builder fails to reveal, the PTC attester votes the current slot contains an empty execution block</li>\n</ul>\n<p>Now let’s examine how <strong>different consensus actors</strong> perceive their time under the new anatomy:</p>\n<p>As a <strong>proposer</strong> for the current slot, assuming block propagation takes 1 second, I have 2 seconds left for everyone to verify the consensus block. Note that only the consensus block needs to be propagated here, not the execution block, so the network load is lighter. The processing time is also reduced as it is bound by consensus validation, not the worst case of either consensus or execution validation.</p>\n<p>As a <strong>beacon attester</strong> for the current slot, I cast my vote on the consensus block that is head at the 3-second mark Instead of 4-second mark before. Nothing else changes here.</p>\n<p>As a winning <strong>builder</strong> for the current slot, I reveal my execution block at the 6-second mark. I may choose to withhold my execution block to gain a <a href=\"https://ethresear.ch/t/payload-boosts-in-epbs/18769\">withhold boost</a> if the beacon block is very weak, but I will reveal it as long as there is 40% of the current slot beacon committee voted for my execution header as canonical.</p>\n<p>As a <strong>PTC attester</strong> for the current slot, I cast my vote on the execution block revealed on time and verify that the execution block hash is valid. I don’t need to perform complete execution verification tasks like heavy state root validation before casting my vote. More on how PTC attester votes <a href=\"https://hackmd.io/@ttsao/epbs-annotated-validator#PTC-attestation-duty\" rel=\"noopener nofollow ugc\">here</a>.</p>\n<p>As a <strong>builder</strong> trying to win the next slot, as soon as the current slot builder reveals its winning execution block, I can begin building. This happens in less than 6 seconds. Before I build my block, I need to verify that the execution block I’m building on is valid.</p>\n<p>As a <strong>proposer</strong> for the next slot, I package the current slot PTC attestations into my block and pick the best bid that reflects my local chain view, which includes the beacon head root and execution reveal status. I should also verify the execution block to ensure I do not choose a header that builds on top of an invalid execution block as a parent.</p>\n<h2><a name=\"execution-validation-hot-path-3\" class=\"anchor\" href=\"https://ethresear.ch#execution-validation-hot-path-3\"></a>Execution validation hot path</h2>\n<p>Now you ask… <strong>When is the deadline to verify the execution block for slot</strong> <span class=\"math\">n</span>? As it turns out, you don’t need to complete verifying the execution until slot <span class=\"math\">n+1</span>'s beacon attestation deadline. (Cheaper validations like block hash can still be done) If the <span class=\"math\">n+1</span> proposer reveals the consensus block that builds on top of the execution payload and the attester casts its vote on the beacon block, the attesters will apply the builder’s boost to the execution block if the previous PTC has voted reveal on time and the execution block is valid. This represents a significant paradigm shift from today’s mental model.</p>\n<p>To summarize:</p>\n<ul>\n<li>Proposer proposes consensus block <span class=\"math\">B_c</span> that commits header <span class=\"math\">h</span></li>\n<li>Beacon attesters verify <span class=\"math\">B_c</span> and cast votes</li>\n<li>Builder reveals execution block <span class=\"math\">B_e</span></li>\n<li>PTC attesters cast votes for <span class=\"math\">B_e</span> being on time and having a valid block hash</li>\n<li>Proposer proposes <span class=\"math\">B_{c+1}</span> that builds on top of { <span class=\"math\">B_c</span>, <span class=\"math\">B_e</span>}</li>\n<li>Beacon attesters verify <span class=\"math\">B_{c+1}</span> is valid, and if there are sufficient votes to signal <span class=\"math\">B_e</span> revealed on time, then <span class=\"math\">B_e</span> is valid. If that is true, then <span class=\"math\">RevealBoost</span> is applied to <span class=\"math\">B_e</span>, and <span class=\"math\">ProposeBoost</span> is applied to <span class=\"math\">B_{c+1}</span></li>\n</ul>\n<p>Here is a table to compare the timings with those of today.</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Today</th>\n<th>ePBS</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Time to verify consensus block validity for slot <span class=\"math\">n</span></td>\n<td>3s</td>\n<td>2s</td>\n</tr>\n<tr>\n<td>Time to verify execution block reveal on time for slot <span class=\"math\">n</span></td>\n<td>3s</td>\n<td>3s</td>\n</tr>\n<tr>\n<td>Time to verify execution block validity for slot <span class=\"math\">n</span></td>\n<td>3s</td>\n<td>9s</td>\n</tr>\n<tr>\n<td>Time to build next block for slot <span class=\"math\">n+1</span></td>\n<td>8s</td>\n<td>5s</td>\n</tr>\n</tbody>\n</table>\n</div><h2><a name=\"benefits-of-pipelining-consensus-and-execution-4\" class=\"anchor\" href=\"https://ethresear.ch#benefits-of-pipelining-consensus-and-execution-4\"></a>Benefits of pipelining consensus and execution</h2>\n<ul>\n<li>Less network load at peak: Consensus and execution blocks are sent at different times. Blobs can even be sent earlier than reveal time.</li>\n<li>Less processing load at peak: Consensus and execution blocks are processed and verified at different times.</li>\n<li>More importantly, the execution layer has more time for state root computation without <a href=\"https://www.paradigm.xyz/2024/04/reth-perf#improving-the-state-commitment\" rel=\"noopener nofollow ugc\">diverging from Ethereum L1 state root behavior</a>. This provides an easy execution state root performance increase without needing complex constructions like parallelized state root, less frequent state root, or trailing state root. You get this state root performance increase for free under ePBS without major execution layer overhaul and without second-order effects on light clients, L2 bridges, and other protocols that rely on frequent account and storage proofs.</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/d/9d58d9498b0d901cd675aaef0191266650ae476d.png\" data-download-href=\"https://ethresear.ch/uploads/default/9d58d9498b0d901cd675aaef0191266650ae476d\" title=\"Screenshot 2024-05-23 at 6.41.27 AM\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/d/9d58d9498b0d901cd675aaef0191266650ae476d_2_690x186.png\" alt=\"Screenshot 2024-05-23 at 6.41.27 AM\" data-base62-sha1=\"mrXjRXPlIJX0rezu0fvc0fQ0GyF\" width=\"690\" height=\"186\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/d/9d58d9498b0d901cd675aaef0191266650ae476d_2_690x186.png, https://ethresear.ch/uploads/default/optimized/3X/9/d/9d58d9498b0d901cd675aaef0191266650ae476d_2_1035x279.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/9/d/9d58d9498b0d901cd675aaef0191266650ae476d_2_1380x372.png 2x\" data-dominant-color=\"E8E9E9\"></a></div><br>\n<em>Top: block production today. Bottom: block production under block-auction based ePBS.</em><p></p>\n<p>One downside that is worth mentioning is that builders competing for the next slot now have less time to prepare for the block. Assuming honest builder behavior and no <a href=\"https://ethresear.ch/t/builder-reveal-timing-game-in-epbs/19424\">builder timing games</a>, this time decreases from today’s 8 seconds to 6 seconds.</p>\n<p>I hope this post was able to illustrate the key point that by separating consensus and execution into different stages, the network reaps additional benefits like those mentioned above. This is one positive side effect of PBS, although it may not have been what PBS was initially intended to solve. Given that there’s more time to process the execution block, it’s up to the execution layer to innovate and determine what benefits it could bring, such as increasing the gas limit once state growth has a clear solution or other improvements.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/advantage-of-pipelining-consensus-and-execution-delayed-execution/19668\">Read full topic</a></p>","link":"https://ethresear.ch/t/advantage-of-pipelining-consensus-and-execution-delayed-execution/19668","pubDate":"Tue, 28 May 2024 13:35:02 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19668"},"source":{"@url":"https://ethresear.ch/t/advantage-of-pipelining-consensus-and-execution-delayed-execution/19668.rss","#text":"Advantage of Pipelining Consensus and Execution: Delayed Execution"}},{"title":"Proof of Value, governance for dApps and tokenomics","dc:creator":"zhous","category":"Decentralized exchanges","description":"<p>We’ve been developing since 2019, and Proof of Value, a brand new consensus mechanism,  is at the core of our project, DAism, and it stands out as a crucial innovation in the realm of decentralized governance for dApps and tokenomics.</p>\n<p>Tokenomics primarily refers to investment trading activities and financial behaviors associated with dApps.</p>\n<p><a href=\"https://gamma.app/docs/What-is-Proof-of-Value-y5jaiy0hj5bdqzb\" class=\"onebox\" target=\"_blank\" rel=\"noopener nofollow ugc\">https://gamma.app/docs/What-is-Proof-of-Value-y5jaiy0hj5bdqzb</a></p>\n<p>Feel free to share your thoughts and questions below, or to have a try on the <a href=\"https://test.daism.io/\" rel=\"noopener nofollow ugc\">test version of DAism</a>, or to join our <a href=\"https://discord.com/invite/YF7c7m4C4Y\" rel=\"noopener nofollow ugc\">Discord server</a> (you can also find the links on the deck).</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/proof-of-value-governance-for-dapps-and-tokenomics/19666\">Read full topic</a></p>","link":"https://ethresear.ch/t/proof-of-value-governance-for-dapps-and-tokenomics/19666","pubDate":"Tue, 28 May 2024 09:03:07 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19666"},"source":{"@url":"https://ethresear.ch/t/proof-of-value-governance-for-dapps-and-tokenomics/19666.rss","#text":"Proof of Value, governance for dApps and tokenomics"}},{"title":"Plasma Next Next (Beetlejuice Beetlejuice)","dc:creator":"cryptskii","category":"Plasma","description":"<p>Building off <a href=\"https://ethresear.ch/t/plasma-next-plasma-without-online-requirements/18786\">Plasma Next</a></p>\n<h2><a name=\"abstract-1\" class=\"anchor\" href=\"https://ethresear.ch#abstract-1\"></a>Abstract</h2>\n<p>Presenting a novel blockchain scaling solution by integrating the concepts of instant finality, similar to the Lightning Network, with the EigenLayer approach for efficient use of locked funds. This combination addresses various drawbacks associated with current blockchain scaling solutions, enhancing capital efficiency, reducing operational complexity, minimizing operator risk, and extending the scope of statelessness while providing instant, secure transaction finality. We provide rigorous mathematical formalisms, proofs, algorithms, and detailed analysis to demonstrate the viability and advantages of this approach.</p>\n<h3><a name=\"instant-finality-2\" class=\"anchor\" href=\"https://ethresear.ch#instant-finality-2\"></a>Instant Finality</h3>\n<p>The system ensures that transactions are confirmed instantly, akin to the Lightning Network, providing immediate transaction finality and security. This is achieved through the use of off-chain payment channels and conditional payments verified by zero-knowledge proofs (ZKPs).</p>\n<p><strong>Definition 1 (Payment Channel):</strong> A payment channel is a bilateral off-chain mechanism that allows two parties to conduct multiple transactions without committing each transaction to the blockchain. The initial and final states of the channel are recorded on-chain.</p>\n<p><strong>Definition 2 (Conditional Payment):</strong> A conditional payment is a transaction where the transfer of funds is contingent upon the satisfaction of a predefined condition, which can be verified using a ZKP.</p>\n<h3><a name=\"unified-staking-pool-3\" class=\"anchor\" href=\"https://ethresear.ch#unified-staking-pool-3\"></a>Unified Staking Pool</h3>\n<p>A unified liquidity pool is utilized, where funds are staked by operators and users and dynamically allocated across multiple channels and transactions, optimizing the use of locked funds. This approach improves capital efficiency and reduces the risk of liquidity shortages.</p>\n<p><strong>Definition 3 (Unified Staking Pool):</strong> A unified staking pool is a smart contract that aggregates staked funds from multiple participants and dynamically allocates these funds across various payment channels based on demand.</p>\n<h3><a name=\"recursive-proofs-and-smart-contracts-4\" class=\"anchor\" href=\"https://ethresear.ch#recursive-proofs-and-smart-contracts-4\"></a>Recursive Proofs and Smart Contracts</h3>\n<p>Recursive zero-knowledge proofs (ZKPs) and smart contracts are employed to securely manage and verify cross-channel transactions, ensuring efficient and scalable verification.</p>\n<p><strong>Definition 4 (Recursive ZKP):</strong> A recursive ZKP is a proof system that allows for the aggregation of multiple proofs into a single proof, enabling efficient verification of cross-channel transactions.</p>\n<h2><a name=\"prerequisites-5\" class=\"anchor\" href=\"https://ethresear.ch#prerequisites-5\"></a>Prerequisites</h2>\n<p>To fully understand the proposed solution, readers should be familiar with the following concepts:</p>\n<ul>\n<li>Blockchain technology and its scalability issues</li>\n<li>The Lightning Network and off-chain payment channels</li>\n<li>Zero-knowledge proofs (ZKPs) and their applications in blockchain</li>\n<li>Smart contract functionality and deployment</li>\n</ul>\n<h3><a name=\"implementation-details-6\" class=\"anchor\" href=\"https://ethresear.ch#implementation-details-6\"></a>Implementation Details</h3>\n<h4><a name=\"instant-finality-mechanism-7\" class=\"anchor\" href=\"https://ethresear.ch#instant-finality-mechanism-7\"></a>Instant Finality Mechanism</h4>\n<p><strong>Payment Channels:</strong> We implement payment channels similar to the Lightning Network, where transactions between parties are confirmed off-chain instantly. The channel balance can be formally expressed as:</p>\n<p><span class=\"math\">\\text{Balance}_{\\text{final}} = \\text{Balance}_{\\text{initial}} + \\sum_{i=1}^{n} \\text{Transaction}_i</span></p>\n<p><strong>Theorem 1 (Payment Channel Security):</strong> Given a secure signature scheme and a reliable blockchain, payment channels guarantee that the final balance reflects the sum of all valid transactions, preventing unauthorized transfers.</p>\n<p><strong>Proof 1:</strong> The proof follows from the security of the underlying signature scheme and the immutability of the blockchain. Each transaction is signed by both parties, ensuring authenticity and non-repudiation. The initial and final states of the channel are recorded on the blockchain, providing a tamper-proof ledger. Therefore, the final balance is secure and reflects the sum of all valid transactions.</p>\n<p><strong>Conditional Payments with ZKPs:</strong> We utilize ZKPs to create conditions for payment finality that are verified instantly. A ZKP for a conditional payment can be represented as:</p>\n<p><span class=\"math\">\\text{ZKP}(\\text{Transaction}_i, \\text{Condition}) \\Rightarrow \\text{Transaction}_i \\text{ is final}</span></p>\n<p><strong>Theorem 2 (Conditional Payment Security):</strong> Given a secure ZKP system, conditional payments ensure that transactions are finalized if and only if the predefined conditions are met, preventing unauthorized transfers.</p>\n<p><strong>Proof 2:</strong> The proof relies on the soundness and completeness of the ZKP system. Soundness ensures that a proof can only be generated if the condition is indeed satisfied, preventing false positives. Completeness guarantees that a valid proof can always be generated when the condition is met, preventing false negatives. Therefore, conditional payments are secure and finalize transactions only when the predefined conditions are fulfilled.</p>\n<h4><a name=\"unified-staking-pool-and-dynamic-allocation-8\" class=\"anchor\" href=\"https://ethresear.ch#unified-staking-pool-and-dynamic-allocation-8\"></a>Unified Staking Pool and Dynamic Allocation</h4>\n<p><strong>Stake Management:</strong> Operators and users stake their funds into a unified pool managed by a smart contract. The dynamic allocation of staked funds can be formalized as:</p>\n<p><strong>Algorithm 1 Dynamic allocation of staked funds</strong></p>\n<pre><code class=\"lang-auto\">Require: StakedFunds, Channels, Demand\n1: for each Channel ∈ Channels do\n2: Allocate(Channel, Demand(Channel))\n3: end for\n</code></pre>\n<p><strong>Lemma 1 (Allocation Efficiency):</strong> The dynamic allocation algorithm ensures that staked funds are allocated to channels based on their demand, minimizing idle capital and optimizing liquidity utilization.</p>\n<p><strong>Proof 3:</strong> The allocation algorithm iterates over all channels and allocates funds based on the demand for each channel. By dynamically adjusting the allocation according to demand, the algorithm minimizes the amount of idle capital and optimizes the utilization of staked funds. This improves overall liquidity efficiency.</p>\n<h4><a name=\"liquidity-sharing-9\" class=\"anchor\" href=\"https://ethresear.ch#liquidity-sharing-9\"></a>Liquidity Sharing</h4>\n<p>The unified pool allows for dynamic allocation of liquidity to various channels and bulk-token-transfers based on demand, optimizing the use of staked funds.</p>\n<p><strong>Theorem 3 (Liquidity Sharing Security):</strong> The unified staking pool and dynamic allocation mechanism ensure secure and efficient sharing of liquidity across channels, preventing unauthorized access to staked funds.</p>\n<p><strong>Proof 4:</strong> The security of liquidity sharing relies on the integrity of the smart contract managing the unified staking pool. The smart contract enforces access control mechanisms, ensuring that only authorized entities can allocate or transfer funds. Dynamic allocation is performed based on predefined rules and demand metrics, preventing arbitrary or malicious allocations. Therefore, liquidity sharing through the unified staking pool is secure and efficient.</p>\n<h3><a name=\"cross-channel-guarantees-and-security-10\" class=\"anchor\" href=\"https://ethresear.ch#cross-channel-guarantees-and-security-10\"></a>Cross-Channel Guarantees and Security</h3>\n<p><strong>Recursive ZKPs for Aggregation:</strong> We aggregate proofs from multiple transactions and channels into a single proof using recursive ZKPs. This ensures efficient and scalable verification, expressed as:</p>\n<p><span class=\"math\">\\text{RecursiveZKP} = \\bigoplus_{i=1}^{n} \\text{ZKP}(\\text{Transaction}_i)</span></p>\n<p>where <span class=\"math\">(\\bigoplus)</span> denotes the recursive aggregation operation.</p>\n<p><strong>Theorem 4 (Recursive ZKP Security):</strong> Recursive ZKPs provide secure and efficient aggregation of proofs from multiple transactions and channels, ensuring the integrity of cross-channel verifications.</p>\n<p><strong>Proof 5:</strong> The security of recursive ZKPs stems from the properties of the underlying ZKP system. Recursive composition preserves the soundness and completeness of individual proofs, ensuring that the aggregated proof is valid if and only if all constituent proofs are valid. Moreover, recursive aggregation reduces the verification complexity, as the verifier only needs to check a single aggregated proof instead of verifying each proof independently. Therefore, recursive ZKPs enable secure and efficient cross-channel verification.</p>\n<h3><a name=\"smart-contract-hierarchies-11\" class=\"anchor\" href=\"https://ethresear.ch#smart-contract-hierarchies-11\"></a>Smart Contract Hierarchies</h3>\n<p>We implement a hierarchy of smart contracts to manage the allocation and reallocation of funds, ensuring secure and efficient cross-channel transactions.</p>\n<p><strong>Definition 5 (Smart Contract Hierarchy):</strong> A smart contract hierarchy is a layered structure of interconnected smart contracts that manage the allocation and reallocation of funds across channels. Higher-level contracts control the overall liquidity distribution, while lower-level contracts handle channel-specific operations.</p>\n<p><strong>Theorem 5 (Smart Contract Hierarchy Security):</strong> The smart contract hierarchy ensures secure and efficient management of cross-channel transactions, preventing unauthorized access and enforcing consistent state transitions.</p>\n<p><strong>Proof 6:</strong> The security of the smart contract hierarchy relies on the correctness and integrity of the individual smart contracts. Each contract is carefully designed and audited to ensure that it performs its intended functions and maintains a consistent state. The hierarchical structure allows for modular control and error containment, as issues in one contract can be isolated and resolved without affecting the entire system. Access control mechanisms and state transition rules are enforced at each level, preventing unauthorized modifications. Therefore, the smart contract hierarchy provides a secure and efficient framework for managing cross-channel transactions.</p>\n<h4><a name=\"o1-state-growth-mechanism-12\" class=\"anchor\" href=\"https://ethresear.ch#o1-state-growth-mechanism-12\"></a>O(1) State Growth Mechanism</h4>\n<p>To achieve O(1) state growth, we leverage Merkle proofs to manage state updates efficiently. Instead of recording each transaction directly on-chain, we record the Merkle root of bulk-token-transfers. This approach ensures that the state growth per block is constant, regardless of the number of transactions.</p>\n<p><strong>Process:</strong> When a set of transactions occurs, they are organized into a Merkle tree. The Merkle root of this tree is then recorded on-chain. Subsequent state updates only need to include the new Merkle root, significantly reducing the data stored on-chain.</p>\n<p><strong>Mathematical Formalism:</strong> Let <span class=\"math\">( T_1, T_2, \\ldots, T_n )</span> be a set of transactions. These transactions are used to construct a Merkle tree <span class=\"math\">( M )</span>, with the Merkle root <span class=\"math\">( R )</span>. The state update process can be described as:</p>\n<p><span class=\"math\">\\text{State}_{\\text{new}} = \\text{State}_{\\text{old}} \\cup \\{R\\}</span></p>\n<p>where <span class=\"math\">( R )</span> is the Merkle root of the current set of transactions. This ensures that the state growth is limited to the size of the Merkle root, typically 32 bytes, achieving O(1) state growth.</p>\n<p><strong>Example Scenario:</strong> Consider a block containing 1000 transactions. Instead of recording each transaction on-chain, we construct a Merkle tree with these transactions and record only the Merkle root. This reduces the on-chain data from 1000 transactions to a single Merkle root, illustrating the efficiency of this approach.</p>\n<h4><a name=\"implementation-details-13\" class=\"anchor\" href=\"https://ethresear.ch#implementation-details-13\"></a>Implementation Details</h4>\n<p>Implementing Merkle proofs in a blockchain system involves integrating them into the transaction processing pipeline and state management infrastructure.</p>\n<p><strong>Integration:</strong> The Merkle tree construction and root calculation are performed off-chain. Once the Merkle root is computed, it is included in the block header, ensuring minimal on-chain data.</p>\n<p><strong>Algorithms and Data Structures:</strong></p>\n<p><strong>Algorithm 2 Merkle Root Calculation</strong></p>\n<pre><code class=\"lang-auto\">Require: Transactions T1, T2, . . . , Tn\nEnsure: Merkle root R\n1: Initialize leaf nodes with hashes of transactions\n2: while more than one node in the tree do\n3: for each pair of nodes do\n4: Compute parent node as hash of the two child nodes\n5: end for\n6: end while\n7: return Root node\n</code></pre>\n<h3><a name=\"elimination-of-continuous-online-presence-14\" class=\"anchor\" href=\"https://ethresear.ch#elimination-of-continuous-online-presence-14\"></a>Elimination of Continuous Online Presence</h3>\n<p>In traditional blockchain systems, participants often need to remain continuously online to ensure their transactions are confirmed and to participate in consensus mechanisms. This requirement can be burdensome and impractical for many users, leading to inefficiencies and increased operational costs.</p>\n<h4><a name=\"off-chain-payment-channels-15\" class=\"anchor\" href=\"https://ethresear.ch#off-chain-payment-channels-15\"></a>Off-Chain Payment Channels</h4>\n<p>Off-chain payment channels enable participants to conduct transactions without needing to record each one on the blockchain. These channels allow for instant transaction finality and reduce the need for continuous online presence.</p>\n<p><strong>Mechanisms:</strong> Participants open a payment channel by locking funds on-chain. They can then transact off-chain by exchanging signed messages that update the channel balance. The final state is recorded on-chain when the channel is closed.</p>\n<h4><a name=\"instant-finality-with-zero-knowledge-proofs-16\" class=\"anchor\" href=\"https://ethresear.ch#instant-finality-with-zero-knowledge-proofs-16\"></a>Instant Finality with Zero-Knowledge Proofs</h4>\n<p>Instant finality ensures that transactions are immediately confirmed and final once the conditions are met. Zero-knowledge proofs (ZKPs) play a crucial role in achieving this by providing a way to verify transactions without revealing sensitive information.</p>\n<p><strong>Example Use Cases:</strong></p>\n<ul>\n<li>Conditional payments where funds are transferred only if certain conditions are met.</li>\n<li>Micropayments and streaming payments where instant confirmation is essential.</li>\n</ul>\n<h4><a name=\"design-and-implementation-17\" class=\"anchor\" href=\"https://ethresear.ch#design-and-implementation-17\"></a>Design and Implementation</h4>\n<p>Our system architecture supports offline participation through the use of off-chain payment channels and ZKPs.</p>\n<p><strong>Architectural Design:</strong></p>\n<ul>\n<li>Off-chain transactions are facilitated by payment channels.</li>\n<li>ZKPs are used to verify the conditions for transaction finality.</li>\n</ul>\n<p><strong>Technical Implementation:</strong></p>\n<p><strong>Algorithm 3 Off-Chain Transaction with ZKP</strong></p>\n<pre><code class=\"lang-auto\">Require: Initial channel state S0, transactions T1, T2, . . . , Tn\nEnsure: Final channel state Sn\n1: for each transaction Ti do\n2: Verify ZKP for Ti\n3: if ZKP is valid then\n4: Update channel state Si\n5: end if\n6: end for\n7: Record final state on-chain\n</code></pre>\n<h4><a name=\"security-and-reliability-18\" class=\"anchor\" href=\"https://ethresear.ch#security-and-reliability-18\"></a>Security and Reliability</h4>\n<p>Ensuring the security and reliability of offline participants is crucial. Our approach includes several mechanisms to protect users and ensure transaction integrity.</p>\n<p><strong>Security Measures:</strong></p>\n<ul>\n<li>Secure channel opening and closing procedures.</li>\n<li>ZKPs to verify transaction conditions.</li>\n</ul>\n<p><strong>Dispute Resolution:</strong></p>\n<ul>\n<li>Disputes are resolved by submitting ZKPs to the blockchain, which verifies the validity of the disputed transaction.</li>\n</ul>\n<h4><a name=\"benefits-and-user-experience-19\" class=\"anchor\" href=\"https://ethresear.ch#benefits-and-user-experience-19\"></a>Benefits and User Experience</h4>\n<p>Our approach offers several benefits to users, including reduced operational burdens and increased flexibility.</p>\n<p><strong>Advantages:</strong></p>\n<ul>\n<li><strong>Operational Efficiency:</strong> Users do not need to remain online continuously.</li>\n<li><strong>Flexibility:</strong> Participants can transact at their convenience.</li>\n</ul>\n<h3><a name=\"capital-efficiency-20\" class=\"anchor\" href=\"https://ethresear.ch#capital-efficiency-20\"></a>Capital Efficiency</h3>\n<p>The unified liquidity pool ensures efficient use of locked funds, as they can be dynamically allocated where needed most. This reduces the amount of idle capital and optimizes liquidity management.</p>\n<p><strong>Lemma 2 (Capital Efficiency Improvement):</strong> The unified staking pool and dynamic allocation mechanism improve capital efficiency compared to traditional channel-specific staking approaches.</p>\n<p><strong>Proof 7:</strong> In traditional channel-specific staking, funds are locked in individual channels and cannot be reused or reallocated, leading to idle capital and suboptimal liquidity utilization. The unified staking pool, on the other hand, aggregates funds from multiple participants and dynamically allocates them across channels based on demand. This approach minimizes idle capital and optimizes liquidity utilization, as funds can be efficiently moved to channels with higher demand. Therefore, the unified staking pool and dynamic allocation mechanism improve capital efficiency compared to traditional approaches.</p>\n<h3><a name=\"instant-finality-21\" class=\"anchor\" href=\"https://ethresear.ch#instant-finality-21\"></a>Instant Finality</h3>\n<p>Transactions are confirmed instantly off-chain, similar to the Lightning Network, making the system suitable for real-time payments. Zero-knowledge proofs ensure that transactions are final and secure without the need for trust.</p>\n<p><strong>Lemma 3 (Instant Finality Advantage):</strong> Instant finality provided by off-chain payment channels and ZKP-based conditional payments enables real-time transactions and reduces confirmation latency compared to on-chain settlements.</p>\n<p><strong>Proof 8:</strong> On-chain transactions require multiple block confirmations to be considered final, introducing significant latency. In contrast, off-chain payment channels enable instant confirmation of transactions between channel participants. Conditional payments verified by ZKPs further enhance the security and finality of these transactions. As a result, the instant finality mechanism reduces confirmation latency and enables real-time payments, providing a significant advantage over on-chain settlements.</p>\n<h3><a name=\"complexity-for-operators-22\" class=\"anchor\" href=\"https://ethresear.ch#complexity-for-operators-22\"></a>Complexity for Operators</h3>\n<p>Smart contracts handle dynamic allocation and verification, reducing the operational burden on operators. The use of recursive ZKPs simplifies the verification process, making it easier to manage multiple channels.</p>\n<p><strong>Lemma 4 (Operator Complexity Reduction):</strong> Smart contracts and recursive ZKPs reduce the operational complexity for channel operators compared to manual liquidity management and individual proof verification.</p>\n<p><strong>Proof 9:</strong> In a manual liquidity management setup, operators need to continuously monitor channel balances and manually allocate funds, which is time-consuming and error-prone. Similarly, verifying individual proofs for each transaction across multiple channels is computationally intensive. By employing smart contracts for dynamic allocation and recursive ZKPs for aggregated verification, the operational burden on operators is significantly reduced. Smart contracts automate liquidity management based on predefined rules, while recursive ZKPs simplify the verification process by aggregating proofs from multiple transactions and channels. This reduction in complexity allows operators to manage more channels efficiently and focus on other aspects of the system.</p>\n<h3><a name=\"operator-risk-23\" class=\"anchor\" href=\"https://ethresear.ch#operator-risk-23\"></a>Operator Risk</h3>\n<p>By sharing liquidity across multiple channels and dynamically allocating funds, the risk of liquidity shortages and insolvency is minimized. Automated safeguards provided by smart contracts protect operators.</p>\n<p><strong>Lemma 5 (Operator Risk Mitigation):</strong> The unified staking pool and dynamic allocation mechanism mitigate the risk of liquidity shortages and insolvency for channel operators compared to channel-specific staking.</p>\n<p><strong>Proof 10:</strong> In a channel-specific staking setup, operators face the risk of liquidity shortages if the locked funds in a particular channel are insufficient to handle incoming transactions. This can lead to delays, failed transactions, and potential insolvency. The unified staking pool mitigates this risk by aggregating funds from multiple participants and dynamically allocating them across channels based on demand. If one channel experiences a shortage, funds can be quickly reallocated from other channels to meet the demand. Moreover, smart contracts implementing the unified staking pool can enforce automated safeguards, such as minimum balance thresholds and emergency liquidity provisions, further protecting operators from liquidity risks.</p>\n<h3><a name=\"challenge-periods-and-dispute-resolution-24\" class=\"anchor\" href=\"https://ethresear.ch#challenge-periods-and-dispute-resolution-24\"></a>Challenge Periods and Dispute Resolution</h3>\n<p>Aggregated proofs and instant verification reduce the need for lengthy challenge periods and simplify dispute resolution. Recursive ZKPs ensure that the state across interconnected channels is consistently maintained and verifiable.</p>\n<p><strong>Lemma 6 (Simplified Dispute Resolution):</strong> Aggregated proofs and instant verification using recursive ZKPs simplify dispute resolution and reduce the reliance on lengthy challenge periods compared to traditional cross-channel dispute mechanisms.</p>\n<p><strong>Proof 11:</strong> In traditional cross-channel dispute resolution, each</p>\n<p>channel maintains its own state, and disputes are resolved through a lengthy challenge-response process. This involves providing evidence for individual transactions and waiting for a challenge period to expire before the dispute is settled. With aggregated proofs and instant verification using recursive ZKPs, the state across interconnected channels is consistently maintained and can be efficiently verified. If a dispute arises, the aggregated proof can be quickly checked to determine the validity of the disputed transaction, without the need for a lengthy challenge period. This simplified dispute resolution process reduces the time and complexity associated with resolving cross-channel disputes.</p>\n<h3><a name=\"dependence-on-zkps-25\" class=\"anchor\" href=\"https://ethresear.ch#dependence-on-zkps-25\"></a>Dependence on ZKPs</h3>\n<p>While reliance on ZKPs remains, their use in aggregation and instant verification can optimize computational efficiency. Developing scalable infrastructure for ZKP generation and verification can mitigate the overhead.</p>\n<p><strong>Lemma 7 (ZKP Efficiency Optimization):</strong> The use of recursive ZKPs for aggregation and instant verification optimizes the computational efficiency of ZKP-based systems compared to individual proof generation and verification.</p>\n<p><strong>Proof 12:</strong> Generating and verifying ZKPs for each individual transaction can be computationally expensive, especially as the number of transactions and channels grows. By employing recursive ZKPs, multiple proofs can be aggregated into a single proof, reducing the overall proof size and verification complexity. Instead of verifying each proof separately, the verifier only needs to check the aggregated proof, which is more efficient. Moreover, instant verification using ZKPs eliminates the need for lengthy waiting periods, further optimizing the computational overhead. While the reliance on ZKPs remains, the use of recursive ZKPs and instant verification helps mitigate the computational burden associated with ZKP-based systems.</p>\n<h3><a name=\"limited-scope-of-statelessness-26\" class=\"anchor\" href=\"https://ethresear.ch#limited-scope-of-statelessness-26\"></a>Limited Scope of Statelessness</h3>\n<p>The unified liquidity pool and dynamic allocation extend the benefits of statelessness to more complex transactions and applications. The approach supports a wider range of stateless applications beyond simple payments.</p>\n<p><strong>Lemma 8 (Extended Statelessness Scope):</strong> The unified liquidity pool and dynamic allocation mechanism extend the scope of statelessness to support more complex transactions and applications compared to traditional stateless payment channels.</p>\n<p><strong>Proof 13:</strong> Traditional stateless payment channels are limited to simple payment transactions between two parties, where the channel state is not maintained. The unified liquidity pool and dynamic allocation mechanism introduced in this paper extend the scope of statelessness to support more complex transactions and applications. By aggregating funds from multiple participants and dynamically allocating them across channels, the system enables stateless execution of cross-channel transactions and multi-party interactions. The use of recursive ZKPs and smart contract hierarchies further enhances the capabilities of stateless operations, allowing for efficient verification and management of complex state transitions. As a result, the proposed approach expands the range of stateless applications beyond simple payments, enabling the development of more sophisticated stateless protocols and services.</p>\n<h3><a name=\"forced-inclusion-mechanism-27\" class=\"anchor\" href=\"https://ethresear.ch#forced-inclusion-mechanism-27\"></a>Forced Inclusion Mechanism</h3>\n<p>With instant finality, the need for forced inclusion mechanisms is reduced, as transactions are confirmed off-chain instantly. Zero-knowledge proofs ensure that once conditions are met, transactions are final and included without the risk of censorship.</p>\n<p><strong>Lemma 9 (Reduced Reliance on Forced Inclusion):</strong> Instant finality provided by off-chain payment channels and ZKP-based conditional payments reduces the reliance on forced inclusion mechanisms compared to on-chain transaction inclusion.</p>\n<p><strong>Proof 14:</strong> In on-chain transaction inclusion, there is a risk of censorship or delayed inclusion, as miners or validators may prioritize certain transactions over others. Forced inclusion mechanisms, such as transaction pinning or priority fees, are often employed to ensure that transactions are included in a timely manner. However, with instant finality achieved through off-chain payment channels and ZKP-based conditional payments, transactions are confirmed instantly without relying on the underlying blockchain. Once the conditions specified in the ZKP are met, the transaction is considered final and irreversible, eliminating the need for forced inclusion. This reduces the reliance on additional inclusion mechanisms and provides a more censorship-resistant and predictable transaction confirmation process.</p>\n<h1><a name=\"la-fin-28\" class=\"anchor\" href=\"https://ethresear.ch#la-fin-28\"></a>LA FIN</h1>\n            <p><small>7 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/plasma-next-next-beetlejuice-beetlejuice/19655\">Read full topic</a></p>","link":"https://ethresear.ch/t/plasma-next-next-beetlejuice-beetlejuice/19655","pubDate":"Mon, 27 May 2024 08:26:18 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19655"},"source":{"@url":"https://ethresear.ch/t/plasma-next-next-beetlejuice-beetlejuice/19655.rss","#text":"Plasma Next Next (Beetlejuice Beetlejuice)"}},{"title":"Credibly Neutral Preconfirmation Collateral: The Preconfirmation Registry","dc:creator":"mteam88","category":"Layer 2","description":"<h1><a name=\"credibly-neutral-preconfirmation-collateral-1\" class=\"anchor\" href=\"https://ethresear.ch#credibly-neutral-preconfirmation-collateral-1\"></a>Credibly Neutral Preconfirmation Collateral</h1>\n<p>by <a href=\"https://x.com/mteamisloading\" rel=\"noopener nofollow ugc\">mteam</a> from <a href=\"https://x.com/Spire_Labs\" rel=\"noopener nofollow ugc\">Spire Labs</a><br>\ninspired+reviewed by <a href=\"https://x.com/drakefjustin\" rel=\"noopener nofollow ugc\">Justin Drake</a>.<br>\nreviewed by <a href=\"https://x.com/lvdaniels\" rel=\"noopener nofollow ugc\">Ladislaus</a>, <a href=\"https://x.com/MuratLite\" rel=\"noopener nofollow ugc\">Murat</a>, and others.<br>\n.<br>\n.<br>\n<em><strong>tl;dr</strong><br>\nWe introduce a design for a credibly neutral preconfirmations registry that solves the collateral problem for solo-stakers who want to earn additional yield from preconfs, while simultaneously improving capital efficiency for large operators who would like to opt-in to preconfirmations.</em><br>\n.<br>\n.</p>\n<h2><a name=\"introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#introduction-2\"></a>Introduction</h2>\n<p>There is a fundamental requirement of any proposer-commitment design that the L1 proposer must post some collateral. This is true for Based Preconfirmations (even with delegation) and other systems. This collateral is necessary because, according to the Ethereum protocol, a L1 proposer always has the option to self-build a block. The block that they build may violate commitments that they have made (or that other delegated entities have made).</p>\n<p>In the next few paragraphs, we introduce a simple system for proposer to post this collateral in ETH (the most credibly neutral collateral). This system also enables large operators and solo-stakers alike to post collateral in efficient ways.</p>\n<p><em>See <a href=\"https://docs.google.com/presentation/d/1M5nEpjSuEnuew_P8bdLIk-zZ-v55mWgbeiZ5czto8bI/edit?usp=sharing\" rel=\"noopener nofollow ugc\">my presentation introducing this topic</a> for another intro.</em></p>\n<h2><a name=\"onchain-construction-3\" class=\"anchor\" href=\"https://ethresear.ch#onchain-construction-3\"></a>Onchain Construction</h2>\n<p>The onchain construction is very simple:</p>\n<p>We introduce the <code>PreconfirmationRegistry</code> L1 smart contract that serves as a source of collateral for backing preconfirmations.</p>\n<p>The contract provides 4 functionalities:</p>\n<h3><a name=\"penalties-4\" class=\"anchor\" href=\"https://ethresear.ch#penalties-4\"></a>Penalties</h3>\n<p>The <code>PreconfirmationRegistry</code> facilitates penalty application (i.e. slashing, freezing).</p>\n<p>Delegates can choose what slashing conditions to opt-in to. These slashing conditions can be described using an EVM bytecode function.</p>\n<h3><a name=\"registration-5\" class=\"anchor\" href=\"https://ethresear.ch#registration-5\"></a>Registration</h3>\n<p>The <code>PreconfirmationRegistry</code> provides a way for a registrant to post ETH as collateral. A registrant can be any entity, it is represented in the registry as an Ethereum address.</p>\n<p>Let a <strong>registrant’s collateral balance</strong> = ETH deposited - ETH currently penalized - ETH withdrawn.</p>\n<h3><a name=\"delegation-6\" class=\"anchor\" href=\"https://ethresear.ch#delegation-6\"></a>Delegation</h3>\n<p>Allows registrants to delegate their collateral to proposers.</p>\n<p>Can be used to delegate to any proposer.</p>\n<p>Let a <strong>proposer’s collateral balance</strong> be the sum of the registrant collateral balance of all registrants that have delegated to them.</p>\n<p>If a proposer’s collateral balance is above a parameter, <code>MINIMUM_COLLATERAL</code>, they are a preconfer. If a proposer’s collateral balance falls below <code>MINIMUM_COLLATERAL</code>, they are no longer considered a preconfer.</p>\n<p>When a penalty is applied to a preconfer, the penalty is applied to the registrant collateral of any registrants who delegate to the offending preconfer. The penalty is split proportionally amongst the collateral that is delegated to a proposer.</p>\n<p><em>Note: Delegation can be done offchain and validated onchain in the case of a slashing event. Offchain signatures need to be shared publicly so that others (gateways) can verify that a given proposer is a preconfer.</em></p>\n<h3><a name=\"leader-election-7\" class=\"anchor\" href=\"https://ethresear.ch#leader-election-7\"></a>Leader Election</h3>\n<p>The <code>PrceonfirmationRegistry</code> also elects a leader for the current L1 slot. It does this by checking the lookahead to determine the next proposer in line who is a preconfer (meets the <code>MINIMUM_COLLATERAL</code> threshold.) Based Rollups can select this elected leader as the sequencer for their chains to achieve composability through shared sequencing.</p>\n<p>We call this leader the <strong>registry sponsored leader</strong>. Any rollup interested in composability can use this leader. Rollups that have other requirements for their leader (regulatory, financial) can use their own leader election system, but may ise the registry sponsored leader as a starting point.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/3/d3d476034f8a84825dfc2b477c02d88c53eef94f.png\" data-download-href=\"https://ethresear.ch/uploads/default/d3d476034f8a84825dfc2b477c02d88c53eef94f\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/3/d3d476034f8a84825dfc2b477c02d88c53eef94f_2_690x394.png\" alt=\"image\" data-base62-sha1=\"udVWooZBrw6qHCBCeH4xBNck9CT\" width=\"690\" height=\"394\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/3/d3d476034f8a84825dfc2b477c02d88c53eef94f_2_690x394.png, https://ethresear.ch/uploads/default/optimized/3X/d/3/d3d476034f8a84825dfc2b477c02d88c53eef94f_2_1035x591.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/d/3/d3d476034f8a84825dfc2b477c02d88c53eef94f_2_1380x788.png 2x\" data-dominant-color=\"E9F0EA\"></a></div><p></p>\n<h2><a name=\"offchain-construction-8\" class=\"anchor\" href=\"https://ethresear.ch#offchain-construction-8\"></a>Offchain Construction</h2>\n<h3><a name=\"underwriters-9\" class=\"anchor\" href=\"https://ethresear.ch#underwriters-9\"></a>Underwriters</h3>\n<p>The most important offchain construction that we introduce is the Underwriter. The Underwriter acts as a registrant and posts at least <code>MINIMUM_COLLATERAL</code> ETH as collateral to the <code>PreconfirmationRegistry</code> contract on behalf of a group of proposers. The Underwriter accepts collateral from proposers in any form (a liquid staking token, equity, reputation).</p>\n<p>Underwriters could be trustless DeFi applications, offchain market makers, etc.</p>\n<h3><a name=\"proposer-pools-10\" class=\"anchor\" href=\"https://ethresear.ch#proposer-pools-10\"></a>Proposer Pools</h3>\n<p>While large staking operators form large trust networks between many proposers and can provide collateral on their own, solo-stakers do not have the same access to resources.</p>\n<p>Solo-stakers may form “Proposer Pools” of a collection of proposers, all restaking their ETH to a single registrant (through an underwriter) to reach a registrant balance of <code>MINIMUM_COLLATERAL</code> or more.</p>\n<p><em>Note: Proposer pools have a 1/n trust model: a single proposer could renege on preconfirmation promises for a significant profit but the entire pool would be penalized. To disincentivize this situation, proposer pools could be designed so that EL rewards are distributed between all proposers in the pool (similar to smoothing pools). With a MaxEB increase above <code>MINIMUM_COLLATERAL</code> and DVT, the trust model becomes n/3.</em></p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/9/a9982df96fdbf69566a89c5cc1e4306b9bca08d4.png\" data-download-href=\"https://ethresear.ch/uploads/default/a9982df96fdbf69566a89c5cc1e4306b9bca08d4\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/9/a9982df96fdbf69566a89c5cc1e4306b9bca08d4_2_454x500.png\" alt=\"image\" data-base62-sha1=\"ociJCi8J8RpsBFe52mwVXGXk3Mo\" width=\"454\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/9/a9982df96fdbf69566a89c5cc1e4306b9bca08d4_2_454x500.png, https://ethresear.ch/uploads/default/optimized/3X/a/9/a9982df96fdbf69566a89c5cc1e4306b9bca08d4_2_681x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/a/9/a9982df96fdbf69566a89c5cc1e4306b9bca08d4_2_908x1000.png 2x\" data-dominant-color=\"E9F0EA\"></a></div><p></p>\n<h2><a name=\"considerations-11\" class=\"anchor\" href=\"https://ethresear.ch#considerations-11\"></a>Considerations</h2>\n<ul>\n<li><strong><a href=\"https://nakamoto.com/credible-neutrality/\" rel=\"noopener nofollow ugc\">credible neutrality:</a></strong> The <code>PreconfirmationRegistry</code> only accepts the purest form of collateral: ETH. This avoids any dependence on any LST/LRT and minimizes smart contract risk.</li>\n<li><strong>centralization:</strong> The <code>PreconfirmationRegistry</code> does not introduce any permissioned actors. Underwriter centralization is not dangerous to the protocol.</li>\n<li><strong>collateral depeg risk:</strong> An <a href=\"https://x.com/daedalus_angels/status/1787797086219419687\" rel=\"noopener nofollow ugc\">external collateral depeg</a> will not affect the collateral that backs preconfers. Underwriters are only vulnerable to permanent depegs as they are not forced to sell during a temporary depeg event.</li>\n<li><strong>smart contract risk:</strong> The <code>PreconfirmationRegistry</code> is a very simple contract but should be audited extensively. Underwriters are especially incentivized to audit the <code>PreconfirmationRegistry</code> contract.</li>\n<li><strong>roadmap compatibility:</strong> Proposer Pools have even better trust models with a <a href=\"https://ethresear.ch/t/increase-the-max-effective-balance-a-modest-proposal/15801\">MaxEB increase</a> like <a href=\"https://eips.ethereum.org/EIPS/eip-7251\" rel=\"noopener nofollow ugc\">EIP-7251</a> and <a href=\"https://ethereum.org/en/staking/dvt/\" rel=\"noopener nofollow ugc\">DVT.</a> With <a href=\"https://ethresear.ch/t/why-enshrine-proposer-builder-separation-a-viable-path-to-epbs/15710\">ePBS</a>, <a href=\"https://ethresear.ch/t/execution-tickets/17944/1\">Execution Tickets</a>, <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\" rel=\"noopener nofollow ugc\">Execution Auctions / APS-Burn</a> or any other upgrade where proposers do not serve as monopoly sequencers, the <code>PreconfirmationRegistry</code> is no longer useful.</li>\n<li><strong>mass exits:</strong> To avoid a situation where a registrant withdraws collateral that is actively backing a preconfirmation, exits must be delayed. This mandates that there are three states that a proposer can exist in: <code>[INCLUDER, EXITING, PRECONFER]</code>. New preconfirmations should not be backed by collateral from <code>EXITING</code> proposers.</li>\n<li><strong>forced ejection:</strong> In a penalty event, some preconfers may no longer have enough unpenalized collateral to back their preconfirmations. If these preconfers are in the lookahead and actively providing preconfirmations, they must be immediately exited and treated as <code>INCLUDER</code> proposers. Registrants who wish to avoid forced ejection of their delegated proposers should top up their registrant balance to a level significantly higher than <code>MINIMUM_COLLATERAL</code>.</li>\n<li><strong>Preconf Chaining:</strong> Most preconfirmations are only backed by a single proposer (and therefore a single collateral balance), this enables registrants to delegate to many proposers simultaneously. There may be situations where preconfirmations are backed by multiple proposers (think conditional preconfirmations or multi-block preconfirmations). In these situations, the collateral that backs a preconfirmation is the combined <em>unique</em> proposer collateral balance of proposers involved. The odds of preconf chains applying to proposers using the same collateral are higher for registrants with more delegates, and therefore registrants who can afford to post extra collateral.</li>\n</ul>\n<h2><a name=\"bonus-dynamic-collateral-requirements-12\" class=\"anchor\" href=\"https://ethresear.ch#bonus-dynamic-collateral-requirements-12\"></a>Bonus: Dynamic Collateral Requirements</h2>\n<p>The <code>MINIMUM_COLLATERAL</code> parameter is a key parameter for preconfirmation security and bootstrapping a robust Preconfer set. Setting <code>MINIMUM_COLLATERAL</code> ex-ante for all preconfirmations may lead to inefficiencies. For example, many retail users don’t need thousands of ETH backing their preconfirmations. Indeed, many types of transactions (ETH/ERC20 transfers) are time-insensitive; preconfirmations for these transactions do not require huge amounts of collateral.</p>\n<p>The solution to this inefficiency is setting a low <code>MINIMUM_COLLATERAL</code> parameter and allowing users to set their own collateral requirements (along the lines of <a href=\"https://ethresear.ch/t/user-defined-penalties-ensuring-honest-preconf-behavior/19545\">User-Defined Penalties: Ensuring Honest Preconf Behavior</a> by <a href=\"https://x.com/_JonahB_\" rel=\"noopener nofollow ugc\">Jonah from Blockchain Capital</a>).</p>\n<p>Note that it is still necessary to set a <code>MINIMUM_COLLATERAL</code> value that is significant (likely more than 32 ETH) to avoid an adverse selection problem: A user might not be able to get a preconfirmation with a high collateral backing if a low-collateral Preconfer is first in the lookahead, even if a high-collateral Preconfer is next. More research is required to determine this parameter.</p>\n<h2><a name=\"bonus-slashing-conditions-13\" class=\"anchor\" href=\"https://ethresear.ch#bonus-slashing-conditions-13\"></a>Bonus: Slashing Conditions</h2>\n<p>Slashing conditions represent generic agreements between proposers and users. Delegates (proposers) can choose what slashing conditions to use. To declare their preferences, delegates can sign off on EVM bytecode that represents a function. When executed, this bytecode returns the penalties that should be applied:</p>\n<pre data-code-wrap=\"solidity\"><code class=\"lang-plaintext\">struct Penalty {\n    uint weiSlashed,\n    uint weiFrozen,\n    uint blocksFrozen,\n    // other penalties //\n}\n</code></pre>\n<p>Rollups that want to incentivize proposers to adopt their slashing conditions can set up incentives (tokens, fees, etc.) out of the registry.</p>\n<p><em><strong>Note:</strong> Registrants might also choose slashing conditions for their delegates. For example, an Underwriter might accept collateral from an operator and register with the slashing conditions that the operator desires. This simply a way for operators to manage the slashing conditions that they need to think about.</em></p>\n<hr>\n<p><strong>References + Resources</strong><br>\nAll documents used can be found <a href=\"https://mteam.space/eth-sequencing-preconfs-resources/\" rel=\"noopener nofollow ugc\">here</a>.</p>\n<p>Especially useful:</p>\n<ul>\n<li><a href=\"https://x.com/drakefjustin\" rel=\"noopener nofollow ugc\">Justin’s</a> <a href=\"https://ethresear.ch/t/based-rollups-superpowers-from-l1-sequencing/15016\">Based Rollup</a> post</li>\n<li><a href=\"https://x.com/drakefjustin\" rel=\"noopener nofollow ugc\">Justin’s</a> <a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">Based Preconfirmations</a> post</li>\n<li><a href=\"https://x.com/_JonahB_\" rel=\"noopener nofollow ugc\">Jonah’s</a> <a href=\"https://ethresear.ch/t/user-defined-penalties-ensuring-honest-preconf-behavior/19545\">User-Defined Penalties…</a> post</li>\n<li><a href=\"https://limechain.tech/\" rel=\"noopener nofollow ugc\">Limechain’s</a> <a href=\"https://github.com/LimeChain/based-preconfirmations-research\" rel=\"noopener nofollow ugc\">Based Preconfirmations Research</a> repo</li>\n</ul>\n<p>Similar (unrelated) work:</p>\n<ul>\n<li><a href=\"https://primev.xyz\" rel=\"noopener nofollow ugc\">Primev’s</a> <a href=\"https://docs.primev.xyz/developers/contracts\" rel=\"noopener nofollow ugc\">Registry</a></li>\n<li><a href=\"https://puffer.fi\" rel=\"noopener nofollow ugc\">Puffer’s</a> <a href=\"https://docs.puffer.fi/nodes/registration\" rel=\"noopener nofollow ugc\">Registration System</a></li>\n<li><a href=\"https://x.com/cairoeth\" rel=\"noopener nofollow ugc\">Cairo’s</a> <a href=\"https://ethresear.ch/t/towards-an-implementation-of-based-preconfirmations-leveraging-restaking/19211\">preconf-operator code</a></li>\n<li>various <a href=\"https://ethstaker.cc/smoothing-pools\" rel=\"noopener nofollow ugc\">Smoothing Pool</a> designs</li>\n</ul>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/credibly-neutral-preconfirmation-collateral-the-preconfirmation-registry/19634\">Read full topic</a></p>","link":"https://ethresear.ch/t/credibly-neutral-preconfirmation-collateral-the-preconfirmation-registry/19634","pubDate":"Fri, 24 May 2024 21:34:51 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19634"},"source":{"@url":"https://ethresear.ch/t/credibly-neutral-preconfirmation-collateral-the-preconfirmation-registry/19634.rss","#text":"Credibly Neutral Preconfirmation Collateral: The Preconfirmation Registry"}},{"title":"Anonymous Inclusion Lists (anon-ILs)","dc:creator":"soispoke","category":"Cryptography","description":"<p>by <a href=\"https://ethresear.ch/u/soispoke/summary\">Thomas Thiery</a> and <a href=\"https://x.com/luca_zanolini\" rel=\"noopener nofollow ugc\">Luca Zanolini</a>, in collaboration with <a href=\"https://ethresear.ch/u/mmaller/summary\">Mary Maller</a>, <a href=\"https://x.com/Simk1n\" rel=\"noopener nofollow ugc\">Mark Simkin</a>, and <a href=\"https://ethresear.ch/u/asanso/summary\">Antonio Sanso</a></p>\n<p>– May 23rd, 2024</p>\n<p><em>Special thanks to <a href=\"https://ethresear.ch/u/julian/summary\">Julian Ma</a>, <a href=\"https://ethresear.ch/u/barnabe/summary\">Barnabé Monnot</a> and <a href=\"https://ethresear.ch/u/fradamt/summary\">Francesco D’Amato</a> for helpful comments and feedback.</em></p>\n<h2><a name=\"introduction-1\" class=\"anchor\" href=\"https://ethresear.ch#introduction-1\"></a>Introduction</h2>\n<p>Relying on a few sophisticated entities for building blocks on Ethereum weakens the network’s censorship resistance properties. Currently, more than <a href=\"https://censorship.pics/\" rel=\"noopener nofollow ugc\">60% of blocks</a> are made by builders who actively censor transactions interacting with sanctioned addresses. As a result, there has been renewed interest in finding ways to enable the <a href=\"https://www.ethernodes.org/countries\" rel=\"noopener nofollow ugc\">more decentralized set</a> of proposers to force-include transactions in Ethereum blocks. This interest has materialized in <a href=\"https://github.com/michaelneuder/mev-bibliography?tab=readme-ov-file#censorship-resistance\" rel=\"noopener nofollow ugc\">research and development</a> efforts focused on Inclusion Lists (ILs). Significant progress has been made towards the first practical implementation of ILs, which is currently considered for inclusion in the upcoming Pectra fork (see <a href=\"https://ethresear.ch/t/no-free-lunch-a-new-inclusion-list-design/16389\">design</a>, <a href=\"https://eips.ethereum.org/EIPS/eip-7547\" rel=\"noopener nofollow ugc\">EIP</a>, and <a href=\"https://notes.ethereum.org/@mikeneuder/il-spec-overview\" rel=\"noopener nofollow ugc\">specs</a> <a href=\"https://gist.github.com/michaelneuder/ba32e608c75d48719a7ecba29ec3d64b\" rel=\"noopener nofollow ugc\">here</a>).</p>\n<p>Concurrent efforts have focused on improving the robustness of IL designs by limiting dependence on single entities for creating and proposing ILs, such as through <a href=\"https://ethresear.ch/t/the-more-the-less-censored-introducing-committee-enforced-inclusion-sets-comis-on-ethereum/18835\">Committee-enforced Inclusion Sets (COMIS)</a> and <a href=\"https://ethresear.ch/t/concurrent-block-proposers-in-ethereum/18777/6\">Multiple Concurrent Proposers</a>. However, to our knowledge, no efforts have been made to develop a mechanism that protects the identity of participants involved in the construction of an IL, while also reducing the surface for <a href=\"https://ethresear.ch/t/fun-and-games-with-inclusion-lists/16557\">commitment attack vectors</a> like bribing and extortion games.</p>\n<p>Protecting the identity of IL proposers is crucial to ensure privacy, safeguard against any form of accountability or identity reveal, and boost the adoption of ILs on Ethereum. This principle is akin to the confidentiality provided in voting systems, where participants can express their preferences without the risk of exposure or retaliation (e.g., legal repercussions). Here, we address this gap by introducing anonymous Inclusion Lists (anon-IL), a design that leverages linkable ring signatures and an anonymous broadcast protocol (ABP) to anonymize IL proposers on Ethereum.</p>\n<h4><a name=\"disclaimer-2\" class=\"anchor\" href=\"https://ethresear.ch#disclaimer-2\"></a>Disclaimer</h4>\n<p>This post is intended as an initial exploration of a distributed mechanism for anonymizing IL proposers, setting the stage for future research and discussions. We build the mechanism in a modular fashion, detailing each module’s role and the properties we believe are necessary to achieve anonymity. These modules can be swapped with others or studied as independent building blocks.</p>\n<h2><a name=\"high-level-idea-3\" class=\"anchor\" href=\"https://ethresear.ch#high-level-idea-3\"></a>High-level idea</h2>\n<p>Every slot <code>n</code>, a subset <span class=\"math\">C</span> of the beacon committee, referred to as the IL committee, is randomly selected from validators to participate in the construction of a global inclusion list (<span class=\"math\">IL^G</span>), composed of transactions <span class=\"math\">t</span> pending in the mempool. During the construction of <span class=\"math\">IL^G</span>, a subset <span class=\"math\">P</span> of IL committee members are secretly elected to become IL proposers and create, sign, and disseminate local inclusion lists <span class=\"math\">IL^L</span> without revealing their identities (<strong>Round 1</strong>). A randomly selected IL proposer, the IL aggregator <span class=\"math\">A</span>, collects all observed <span class=\"math\">IL^L</span> to create and distribute the raw <span class=\"math\">IL^G</span> transactions and their associated <span class=\"math\">IL^G_\\text{summary}</span> to the rest of <span class=\"math\">IL</span>  committee members, who then vote on the <span class=\"math\">IL^G_\\text{summary}</span> validity (<strong>Round 2</strong>). Figure 1. illustrates how <span class=\"math\">P</span>, <span class=\"math\">C</span> and <span class=\"math\">A</span> are selected from validators in the beacon committee. If deemed valid, block <code>n+1</code> must include the <span class=\"math\">IL^G_\\text{summary}</span>, a quorum certificate proving its validity and the transactions that satisfy summary entries. Crucially, we use a linkable ring signature scheme and an anonymous broadcast protocol (ABP) to ensure IL committee members can sign and broadcast messages (ILs, votes) without revealing their identity.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/e/8eb6e389256d6deab365d99d43f65547bdfd3ac4.png\" data-download-href=\"https://ethresear.ch/uploads/default/8eb6e389256d6deab365d99d43f65547bdfd3ac4\" title=\"Screenshot 2024-05-13 at 10.38.02\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/e/8eb6e389256d6deab365d99d43f65547bdfd3ac4_2_507x500.png\" alt=\"Screenshot 2024-05-13 at 10.38.02\" data-base62-sha1=\"kmvDzwPMjP4cIuiUKsP5g3pBBvC\" width=\"507\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/e/8eb6e389256d6deab365d99d43f65547bdfd3ac4_2_507x500.png, https://ethresear.ch/uploads/default/optimized/3X/8/e/8eb6e389256d6deab365d99d43f65547bdfd3ac4_2_760x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/e/8eb6e389256d6deab365d99d43f65547bdfd3ac4_2_1014x1000.png 2x\" data-dominant-color=\"F0F0F0\"></a></div><p></p>\n<blockquote>\n<p><strong>Figure 1.</strong> <strong>Anon-IL participant selection.</strong> In each slot, 256 validators are randomly selected from the beacon committee to form the publicly known IL committee <span class=\"math\">C</span>. Half of the IL committee members (i.e., <code>≈128</code>), the IL proposers <span class=\"math\">P</span>, are secretly elected to participate in the IL construction. One of these proposers is randomly selected to serve as the IL aggregator <span class=\"math\">A</span>, who is in charge of gossiping the final global IL so it can be validated by other IL proposers.</p>\n</blockquote>\n<h2><a name=\"design-4\" class=\"anchor\" href=\"https://ethresear.ch#design-4\"></a><strong>Design</strong></h2>\n<p>In this section, we illustrate (Figure 2.) and provide a step-by-step description of the anon-IL mechanism.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/e/c/ecbce502f9d9d77875579518d3612c95e78e5653.png\" data-download-href=\"https://ethresear.ch/uploads/default/ecbce502f9d9d77875579518d3612c95e78e5653\" title=\"Screenshot 2024-04-24 at 16.51.22\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/e/c/ecbce502f9d9d77875579518d3612c95e78e5653_2_690x375.png\" alt=\"Screenshot 2024-04-24 at 16.51.22\" data-base62-sha1=\"xMho2FddtvumC4sBDT19lgWCS5l\" width=\"690\" height=\"375\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/e/c/ecbce502f9d9d77875579518d3612c95e78e5653_2_690x375.png, https://ethresear.ch/uploads/default/optimized/3X/e/c/ecbce502f9d9d77875579518d3612c95e78e5653_2_1035x562.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/e/c/ecbce502f9d9d77875579518d3612c95e78e5653_2_1380x750.png 2x\" data-dominant-color=\"EEEEE9\"></a></div><p></p>\n<blockquote>\n<p><strong>Figure 2.</strong> <strong>Diagram illustrating the anon-IL design.</strong></p>\n</blockquote>\n<h3><a name=\"round-1-5\" class=\"anchor\" href=\"https://ethresear.ch#round-1-5\"></a><strong>Round 1</strong></h3>\n<ol>\n<li>In each slot, 256 validators are selected from the beacon committee to build inclusion lists. These <code>256</code> IL committee members are publicly known.</li>\n<li>Out of the <code>256</code> IL committee members, only half of them, on average (i.e., <code>≈128</code>) are secretly elected as IL proposers <span class=\"math\">P</span> to prepare local inclusion lists (<span class=\"math\">IL^L</span>) of transactions observed in the mempool and participate in a ring signature scheme. Each IL proposer signs their list using their private key, along with the public keys of all <code>256</code> IL committee members. Each IL proposer then gossips their <span class=\"math\">IL^L</span>, along with its ring signature, to a dedicated <code>inclusion_set</code> subnet through an ABP, before the slot <code>n</code> deadline <span class=\"math\">d</span>.</li>\n</ol>\n<h3><a name=\"round-2-6\" class=\"anchor\" href=\"https://ethresear.ch#round-2-6\"></a>Round 2</h3>\n<ol>\n<li>An IL aggregator is randomly selected amongst IL proposers that successfully sent commitments during the first round of the linkable ring signature scheme (see <em>Building Blocks</em> section below). Its role is to collect all observed <span class=\"math\">IL^L</span> before the deadline <span class=\"math\">d</span>, constructs a final, deduplicated global inclusion list (<span class=\"math\">IL^G</span>) if transactions are seen in more than the inclusion threshold (e.g., <code>10%</code>) of the available <span class=\"math\">IL^L\\text{s}</span>, and derives an <span class=\"math\">IL^G</span> summary from them. <span class=\"math\">IL^G_\\text{summary}</span>  consists of a list of (<code>address</code>, <code>gasLimit</code>) pairs, which specify the <code>from</code> and <code>gasLimit</code> for each transaction across all  <span class=\"math\">IL^L</span>. Each pair is referred to as an <code>Entry</code>. The aggregator’s <span class=\"math\">IL^G_\\text{summary}</span> with signatures from all IL proposers and the list of raw transactions corresponding to summary entries are then broadcast in the <code>inclusion_set</code> subnet using the ABP used in <strong>Round 1</strong>.</li>\n<li>IL proposers also collect all observed <span class=\"math\">IL^L</span>, and construct their own <span class=\"math\">IL^Gs</span> to evaluate the <span class=\"math\">IL^G_\\text{summary}</span> produced by the aggregator. If transactions in their own <span class=\"math\">IL^G</span> overlap with a given percentage of entries in the aggregator’s <span class=\"math\">IL^G_\\text{summary}</span>, they vote <code>TRUE</code>.  This step ensures a quality check on the global IL proposed by the aggregator, and prevents the generation of arbitrary ILs by a single party. To preserve the anonymity of voters, votes are also gossiped using the same ring signature scheme and ABP.  If enough <code>TRUE</code> votes are received, the IL aggregator (anonymously) broadcasts a valid  <span class=\"math\">IL^G_\\text{summary}</span>, <span class=\"math\">IL^G</span> raw transactions, and a quorum certificate that verifies the accumulation of sufficient <code>TRUE</code> votes (<img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\">) over the global topic, via the ABP.</li>\n</ol>\n<h3><a name=\"block-validity-7\" class=\"anchor\" href=\"https://ethresear.ch#block-validity-7\"></a><strong>Block validity</strong></h3>\n<ol>\n<li>\n<p>To be considered valid, the block <code>n+1</code> must include:</p>\n<ul>\n<li>The <span class=\"math\">IL^G_\\text{summary}</span> and its associated quorum certificate <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></li>\n<li>Raw transactions satisfying the <span class=\"math\">IL^G_\\text{summary}</span> entries</li>\n</ul>\n<p>Attesters must verify whether the block proposed by proposer <code>n+1</code> included all transactions satisfying the valid <span class=\"math\">IL^G_\\text{summary}</span> entries gossiped by the aggregator, in addition to all other standard validity checks before casting an attestation for the block <code>n+1</code>.</p>\n<p>Upon confirming the block’s validity, attesters cast an attestation for block <code>n+1</code>.</p>\n<p>If an <span class=\"math\">IL^G</span> is not made available on time or if a quorum of <code>TRUE</code> votes is not reached, block <code>n+1</code> is valid without including transactions satisfying an IL.</p>\n</li>\n</ol>\n<h2><a name=\"building-blocks-8\" class=\"anchor\" href=\"https://ethresear.ch#building-blocks-8\"></a><strong>Building blocks</strong></h2>\n<p>In this section, we introduce the process for selecting validators to become IL committee members and present the two main components of anon-IL: a linkable ring signature scheme, which allows selected validators to sign their local inclusion lists and votes, thereby proving their membership in the IL committee without revealing their identity; and a synchronous anonymous broadcast protocol, which enables IL committee members to disseminate messages across the peer-to-peer subnet without their identities being revealed by network traffic patterns.</p>\n<h3><a name=\"linkable-ring-signatures-scheme-9\" class=\"anchor\" href=\"https://ethresear.ch#linkable-ring-signatures-scheme-9\"></a>Linkable ring signatures scheme</h3>\n<p>A linkable ring signature is a cryptographic construct that allows a member of a group (ring) to anonymously sign a message on behalf of the group. This type of signature ensures the following properties:</p>\n<ol>\n<li><strong>Anonymity</strong>: The identity of the signer is hidden within the group. Any member of the ring could have potentially signed the message, making it impossible to determine the actual signer.</li>\n<li><strong>Linkability</strong>: Even though the identity of the signer is hidden, it is possible to determine if two different messages were signed by the same member of the group. This is done without revealing which member it was. This property prevents double-signing by the same individual without revealing their identity.</li>\n</ol>\n<p>Each participant in the ring maintains a pair of public and private keys. The public keys are known to everyone and are collectively used to form the ring. The signer selects several public keys from the group, typically including their own, to create a ring. This selection is done such that it is impossible to identify who among the participants is the actual signer, preserving anonymity within the group. Importantly, verification of the signature is straightforward and does not require any special access or permissions; anyone with access to the public keys of the ring members can verify that the signature is valid and was created by one of the ring’s members. This ensures that any participant could potentially be the signer of a specific transaction, maintaining robust anonymity and security.</p>\n<p>For the anon-IL design, we use the <a href=\"https://eprint.iacr.org/2014/764.pdf\" rel=\"noopener nofollow ugc\">“one-out-of-many”</a> ring signature scheme by <a href=\"https://eprint.iacr.org/2014/764\" rel=\"noopener nofollow ugc\">Groth and Kohlweiss</a>. In this scheme, participants “<em>have public keys that are commitments and demonstrate knowledge of an opening for one of the commitments to unlinkably identify themselves as belonging to the group”</em>. The only cryptography this scheme relies on is group operations and hash functions. The zero-knowledge prover and verifier also work out of the box and do not need edits, making it particularly suited for the anon-IL use case. Finally, we expect it to scale well for the number of participants selected in the IL committee.</p>\n<h3><a name=\"il-committee-selection-10\" class=\"anchor\" href=\"https://ethresear.ch#il-committee-selection-10\"></a>IL committee selection</h3>\n<ul>\n<li>Each slot, <code>256</code> validators in the beacon committee are randomly chosen to form the IL committee <span class=\"math\">C</span> (i.e., the ring). These IL committee members have to send a commitment to prove they are part of the ring.</li>\n<li>Half of the IL committee members (<code>128</code>) are then secretly elected to be IL proposers <span class=\"math\">P</span>  and actively participate in the construction of the IL.</li>\n<li>One IL aggregator <span class=\"math\">A</span> is chosen from the set of IL proposers that successfully sent a commitment during the first round of the ring signature scheme.</li>\n</ul>\n<h3><a name=\"anonymous-broadcast-protocol-11\" class=\"anchor\" href=\"https://ethresear.ch#anonymous-broadcast-protocol-11\"></a>Anonymous Broadcast Protocol</h3>\n<p>While we employ a linkable ring signature scheme to conceal the identity of the signer of an IL, it is also crucial to anonymize the sender. This necessity arises because, despite the signer’s identity being obscured by the ring signature scheme, there remains a risk that observers might link the signer’s identity to the entity that transmitted the ring-signed IL. This linkage could occur through the analysis of metadata or network patterns associated with the transmission. To prevent this and fully protect the anonymity of the proposer, an anonymous broadcast protocol seems essential. This protocol would ensure that the transmission of the signed IL cannot be traced back to its origin, thereby safeguarding the identities involved.</p>\n<p><strong>Overview</strong></p>\n<p>We introduce an Anonymous Broadcast Protocol (ABP) inspired by <a href=\"https://arxiv.org/pdf/1701.04439.pdf\" rel=\"noopener nofollow ugc\">Dandelion</a> and <a href=\"https://arxiv.org/pdf/1805.11060.pdf\" rel=\"noopener nofollow ugc\">Dandelion ++</a> and tailored to fit Ethereum’s requirements. The ABP is designed to safeguard committee members from de-anonymization attacks when gossiping messages (i.e., ILs and votes). This is achieved by routing their communications through a randomized, multi-phase process that conceals the origins of messages, thereby significantly complicating the efforts to trace these back to their original source based on network traffic. The protocol consists of two phases: the <em>STEM</em> phase and the <em>FLUFF</em> phase. During the <em>STEM</em> phase, each committee member, acting either as a relay or a diffuser, forwards their locally generated inclusion list to one or two peers. A committee member can either be a relay or a diffuser. If a committee member acts as a relay, upon receiving a local inclusion list, it will forward this list to another peer or two peers. If a committee member is a diffuser, it initiates the <em>FLUFF</em> phase by broadcasting the received list to all members. It is important to note that a diffuser’s role, which involves functioning as such for every message, is determined through a randomized mechanism that takes into account the slot number and the member’s identity.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/7/575ee622a8461194f628cc123b3b8665b360deca.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/575ee622a8461194f628cc123b3b8665b360deca\" title=\"Screenshot 2024-05-23 at 09.56.42\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/7/575ee622a8461194f628cc123b3b8665b360deca_2_690x198.jpeg\" alt=\"Screenshot 2024-05-23 at 09.56.42\" data-base62-sha1=\"csURjWrQRd5xgh2DwMtLv0Hx8jE\" width=\"690\" height=\"198\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/7/575ee622a8461194f628cc123b3b8665b360deca_2_690x198.jpeg, https://ethresear.ch/uploads/default/optimized/3X/5/7/575ee622a8461194f628cc123b3b8665b360deca_2_1035x297.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/5/7/575ee622a8461194f628cc123b3b8665b360deca_2_1380x396.jpeg 2x\" data-dominant-color=\"F6F6F6\"></a></div><p></p>\n<blockquote>\n<p><strong>Figure 3. Life cycle of a message during the execution of the ABP</strong> in slot <code>n</code> during (A) the STEM and (B) the FLUFF phase. Sender nodes are coloured in white, relay nodes are coloured in black, and diffuser nodes in red.</p>\n</blockquote>\n<p>For further clarity:</p>\n<ul>\n<li>The protocol starts with the <em>STEM</em> phase: each committee member sends their local inclusion list via two different routes within a 4-regular graph (i.e., a type of network where every node is connected to exactly 4 nodes). This 4-regular graph is part of a larger network <span class=\"math\">G</span>, which overlays all IL committee members selected for the specific slot.</li>\n<li>The structure of this graph requires each committee member to randomly select the next two relay nodes, which also introduces a random delay for each message hop throughout the graph.</li>\n<li>Upon receiving a local inclusion list from another member, the recipient determines its role for that slot — either a relay or a diffuser. As a relay, the member follows the forwarding procedure described in the previous point. As a diffuser, the member starts the <em>FLUFF</em> phase.</li>\n<li>In the <em>FLUFF</em> phase, committee members disseminate their local inclusion lists simultaneously to all members.</li>\n<li>While functioning as a relay during the <em>STEM</em> phase, a committee member also starts a timing deadline <span class=\"math\">f</span> for every message it receives. In this way we implement a fail-safe mechanism that requires relays to monitor whether their forwarded message is successfully diffused. This is designed to prevent black-hole attacks, where a malicious node in the path decides not to forward the message. Specifically, the protocol sets a random expiration timer at each <em>STEM</em> relay immediately upon receiving transaction messages. The relay then monitors the network to see if the transaction reappears. If the timer expires without the transaction reappearing, the node autonomously diffuses the transaction. In Dandelion++, this mechanism offers two key advantages: (1) it ensures that messages are guaranteed to eventually propagate through the network, and (2) the random timers help to anonymize peers initiating the spreading phase, mitigating the risk of black-hole attacks.</li>\n</ul>\n<p><strong>ABP Parameters</strong></p>\n<p>We conducted preliminary analyses to determine the ABP parameters necessary for it to function effectively under Ethereum’s time and bandwidth constraints. These analyses are an initial step toward understanding the trade-offs and consequences of selecting these parameters. A detailed, comprehensive analysis should also be conducted to evaluate the effects of delays, the number of participants, and role distribution (relays vs. diffusers) on the security and anonymization guarantees that anon-IL provides. As previously mentioned, our design requires two rounds of message exchange (one for local ILs, one for voting on the global IL), meaning the ABP must run twice per 12-second slot. We assume a maximum IL size of <code>3M</code> gas, which corresponds to approximately <code>0.33 Mb</code> (see Appendix 1.1 for more details). We expect the ring signature scheme to take around 1 second per round, leaving <code>5 seconds</code> per round for the ABP to complete both the <em>STEM</em> and <em>FLUFF</em> phases. We evaluated the impact of transmission delays and network size on propagation time (Appendix 1.2), and the impact of Byzantine nodes on message propagation success (Appendix 1.3). This evaluation helped us choose initial parameters for the ABP and allocate <code>2.5 seconds</code> for each phase (<em>STEM</em> and <em>FLUFF</em>), a network size of <code>128 nodes</code>, and an added transmission delay randomly chosen between <code>100 ms</code> and <code>900 ms</code>.</p>\n<h2><a name=\"evaluation-and-tradeoffs-12\" class=\"anchor\" href=\"https://ethresear.ch#evaluation-and-tradeoffs-12\"></a>Evaluation and tradeoffs</h2>\n<p>In this section, we discuss how to evaluate anon-IL and the tradeoffs that were made in its design.</p>\n<h3><a name=\"anonymity-guarantees-13\" class=\"anchor\" href=\"https://ethresear.ch#anonymity-guarantees-13\"></a>Anonymity guarantees</h3>\n<p>The core idea behind anon-IL is to allow validators to participate in building ILs without revealing their identity. This is achieved using a linkable ring signature scheme. Importantly, having twice as many IL committee members (<code>256</code>) as secret IL proposers (<code>128</code>) allows each participant to plausibly deny having signed or sent any specific message. Moreover, IL proposers use an anonymous broadcast protocol to gossip messages, further protecting their anonymity from external observers analyzing network traffic. The effectiveness of these anonymity guarantees depends on:</p>\n<ul>\n<li>The cryptographic integrity of the chosen ring signature scheme: Here, we utilize Groth-Kohlweiss signatures that enable all IL proposers to sign in under a second while maintaining robust security. The signatures can theoretically provide long-term anonymity that is secure against advances in cryptanalysis because the protocol achieves statistical zero-knowledge. A caveat: this assumes the validators are using good sources of randomness and that there are no implementation bugs.</li>\n<li>The ABP design and its associated parameters were inspired by <a href=\"https://arxiv.org/pdf/1805.11060\" rel=\"noopener nofollow ugc\">Dandelion++</a>. The parameters were adapted to meet the time constraints imposed by Ethereum’s 12-second slot duration. Further analyses are necessary to assess the anonymity guarantees provided by the roles assigned to nodes (relays or diffusers), the network size (i.e., the number of IL proposers), and the maximum random delay introduced when messages are broadcast to other nodes. Preliminary analyses in Appendix 1 helped establish credible parameters for this post. To comprehensively evaluate the protocol’s robustness, it is crucial to conduct in-depth simulations and set up devnets to assess the anonymity guarantees under real and varied network conditions.</li>\n</ul>\n<p>Assuming anon-IL provides strong anonymity guarantees, we believe it represents a substantial improvement over other IL designs. Allowing validators to participate in preserving <a href=\"https://ethresear.ch/t/uncrowdable-inclusion-lists-the-tension-between-chain-neutrality-preconfirmations-and-proposer-commitments/19372\">chain neutrality</a> while being protected from targeted legal or regulatory measures significantly improves the chances of IL adoption. Currently, according to censorship.pics, about 7.5% of proposers censor transactions. This percentage might increase with the introduction of ILs because proposer agency would be explicitly required. By protecting their identity, we allow the entire validator set, including proposers censoring transactions today, to participate in improving the censorship resistance properties of the network without being targeted by regulatory measures. Furthermore, relying on a secretly chosen set of IL proposers to participate in the construction of ILs decreases the viability of <a href=\"https://ethresear.ch/t/fun-and-games-with-inclusion-lists/16557\">commitment attacks</a>. It seems reasonable to conjecture that our design would require an attacker to bribe a significant fraction of the <code>256</code> IL committee members to have a transaction included or excluded from the global IL. Unlike <a href=\"https://ethresear.ch/t/the-more-the-less-censored-introducing-committee-enforced-inclusion-sets-comis-on-ethereum/18835\">COMIS</a>, in anon-IL the IL aggregator also uses the ABP to broadcast its global IL to other committee members, which essentially removes commitment attacks targeted to a single party, unless the aggregator willingly self-reveals. An attacker can always target the proposer <code>n+1</code>, but it would force it to miss its slot (otherwise the block isn’t valid), missing out on all execution and consensus layer rewards, and potentially incurring <a href=\"https://ethresear.ch/t/missed-slot-penalties-temperature-check/18713\">missed slot penalties</a> in the future.</p>\n<h3><a name=\"inclusion-guarantees-14\" class=\"anchor\" href=\"https://ethresear.ch#inclusion-guarantees-14\"></a>Inclusion guarantees</h3>\n<p>In anon-IL, inclusion guarantees are explicitly determined during <strong>Round 2</strong> with the inclusion threshold, with which IL aggregators include transactions if they are seen in more than <code>X%</code> of the <span class=\"math\">IL^L\\text{s}</span> they collected. We propose to set this inclusion threshold to <code>10%</code>, which means every transaction that ends up being included in more than <code>12 out 128</code> IL proposers’ local ILs should be included in the <span class=\"math\">IL^G</span> and its associated summary.  Choosing a relatively low, non-zero inclusion threshold provides good inclusion guarantees while preventing spam transactions coming a single party from filling the global IL. This approach avoids the scenario where a single IL proposer could flood the system with its transactions, ensuring that only those transactions that overlap with other proposers’ local ILs are included. By requiring that transactions must be seen in multiple local lists, the protocol mitigates the risk of a malicious IL proposer dominating the global list with spam transactions. This selective inclusion helps maintain the integrity and efficiency of the IL. Another parameter in <strong>Round 2</strong> also affects inclusion guarantees, since <code>TRUE</code> votes are cast only if transactions IL proposers <span class=\"math\">IL^G\\text{s}</span> satisfy at least some proportion of entries in the aggregator’s <span class=\"math\">IL^G_\\text{summary}</span>. This gives some leeway for IL proposers who may have missed some of the <span class=\"math\">IL^L\\text{s}</span> gossiped during Round 1 due to p2p network latency. However, we recommend a high overlap percentage (e.g., 90%) to constrain the aggregator’s  <span class=\"math\">IL^G</span> construction and improve inclusion guarantees.</p>\n<p>We also need to consider scenarios where ILs are full. How should IL proposers and the aggregator construct ILs when transactions eligible for inclusion exceed the IL gas limit (i.e., <code>3M</code> gas)? If stuffing ILs becomes a profitable strategy, coordinated IL proposers exceeding the inclusion threshold could potentially add the exact same transactions in their <span class=\"math\">IL^L\\text{s}</span>, thereby crowding out other candidate transactions. To mitigate this concern, we could:</p>\n<ul>\n<li>Establish a priority rule for ordering IL transactions: Transactions that appear most frequently across all collected <span class=\"math\">IL^L\\text{s}</span> should be given priority for inclusion.</li>\n<li>Increase the inclusion threshold.</li>\n<li>Increase IL size to fit more transactions. We could also consider conditional ILs that could be larger, or ILs with <a href=\"https://ethresear.ch/t/cumulative-non-expiring-inclusion-lists/16520\">cumulative, non-expiring</a> properties.</li>\n</ul>\n<h3><a name=\"incentives-scheme-15\" class=\"anchor\" href=\"https://ethresear.ch#incentives-scheme-15\"></a>Incentives scheme</h3>\n<p>The most obvious drawback of protecting IL proposers’ identities is that it makes it very difficult to devise incentive schemes to reward parties that provide useful inputs to the mechanism or penalize those who do not. In this post, anon-IL does not reward IL committee members in any way, and assumes that contributing to improving the censorship-resistance properties of the network is a task that validators can take on without expecting additional rewards. That said, we could design incentives that rely on metrics to evaluate the quality of the global IL constructed by IL proposers without having to identify specific contributors to reward individual inputs. For example, the IL committee members could be uniformly rewarded based on the overlap between all local ILs, encouraging IL proposers to include all public transactions they see pending in the mempool.</p>\n<p>Here’s a simple model to implement this, if we assume rewards come from fees associated with transactions (see conditional tipping). We let <span class=\"math\">C</span> represent the total number of committee members (in the current anon-IL design, <code>256</code>), and <span class=\"math\">T</span> denote the set of all transactions pending in the mempool. Each transaction <span class=\"math\">t</span> in <span class=\"math\">T</span> is associated with a fee <span class=\"math\">f_t</span>, and <span class=\"math\">I_i</span> is the set of transactions included by proposer <span class=\"math\">i</span> in their local ILs.</p>\n<ul>\n<li><strong>Reward Calculation</strong>:\n<ul>\n<li>The intersection <span class=\"math\">U</span> of transactions included by all IL committee members is computed as <span class=\"math\">U = I_1 \\cap I_2 \\cap \\ldots \\cap I_N</span>.</li>\n<li>The reward for each committee member <span class=\"math\">i</span>, <span class=\"math\">R_i</span>, is calculated as follows:</li>\n</ul>\n</li>\n</ul>\n<div class=\"math\">\nR_i = \\frac {1} {N} ∑_{t ∈ U} f_t\n</div>\n<ul>\n<li><strong>Example Scenarios</strong>:\n<ul>\n<li><strong>Scenario 1</strong>: All members (A, B, and C) include all 5 transactions in their ILs, with the transactions being <span class=\"math\">T = {t_1, t_2, t_3, t_4, t_5}</span> and fees <span class=\"math\">f_{t_1} = 0.1, f_{t_2} = 0.3, f_{t_3} = 0.4, f_{t_4} = 1, f_{t_5} = 0.6</span>. Given all members include all transactions, the reward calculation simplifies as each proposer includes the same set of transactions <span class=\"math\">U = T</span>, and<br>\n<span class=\"math\">R_i = \\frac {1} {3}(0.1+0.3+0.4+1+0.6) = 0.8</span> for each member.</li>\n<li><strong>Scenario 2</strong>: Suppose proposers A and B include 4 transactions each (say <span class=\"math\">t_1</span> to <span class=\"math\">t_4</span>), while C includes only 2 transactions (<span class=\"math\">t_1</span> and <span class=\"math\">t_2</span>). The transactions common to all members are <span class=\"math\">U = {t_1, t_2}</span>, and the rewards are computed as: <span class=\"math\">R_i = \\frac {1} {3}(0.1+0.3) = \\frac {0.4} {3} ≈ 0.133</span> each.</li>\n</ul>\n</li>\n</ul>\n<p>Note that if rewards came from issuance, we could also consider the number of IL proposers (out of all possible ones) who contributed to incentivize participation. Another interesting avenue would be to all committee members participate in a lottery. All <code>256</code> participants have a chance of winning the lottery and getting a share of the rewards, but the winning probability can be biased by having IL proposers and the aggregator secretly prove things about their role and their contributions. This would provide a way to reward individual roles or contributions, while still providing plausible deniability (e.g., “I got rewards because I got lucky but I didn’t actually participate in creating a list at all”). We think that exploring solutions to reward IL proposers for their contributions without compromising their anonymity—such as using shielded reward pools, stealth addresses, or fully homomorphic encryption in the future—merits further investigation.</p>\n<h3><a name=\"il-properties-16\" class=\"anchor\" href=\"https://ethresear.ch#il-properties-16\"></a>IL properties</h3>\n<ul>\n<li><strong>Spot:</strong> Since parties other than proposers are responsible for building $IL$s (<span class=\"math\">IL</span> proposers and aggregators), the anon-IL mechanism can run in parallel of the block construction process, which effectively gives real-time censorship resistance at the block level.</li>\n<li><strong><a href=\"https://ethresear.ch/t/unconditional-inclusion-lists/18500\">Unconditional</a></strong>: This property ensures that once an IL includes a transaction, that transaction is guaranteed to go onchain at the latest in slot <code>n+1</code>.\n<ul>\n<li><strong>End-of-block</strong>: The spot, unconditional anon-ILs should be appended at the end of block <code>n+1</code>. Importantly, if transactions satisfying IL summary requirements are already included in the payload, they will take precedence over IL transactions. Should this occur, IL transactions would be reverted.</li>\n</ul>\n</li>\n<li><strong><a href=\"https://ethresear.ch/t/uncrowdable-inclusion-lists-the-tension-between-chain-neutrality-preconfirmations-and-proposer-commitments/19372\">Uncrowdability</a>:</strong> We believe the aforementioned anon-IL properties make them “inconvenient enough” for uses other than chain neutrality. Frontrunnable, end-of-block transactions that need to be seen by a set of secretly elected participants (i.e., made public) offer few opportunities to introduce secondary markets for MEV or preconfirmations.</li>\n</ul>\n<h3><a name=\"byzantine-and-fault-tolerance-17\" class=\"anchor\" href=\"https://ethresear.ch#byzantine-and-fault-tolerance-17\"></a>Byzantine and fault tolerance</h3>\n<p>In anon-IL, Byzantine nodes are capable of launching various attacks at different stages of the mechanism. These attacks can be broadly categorized into two types:</p>\n<ul>\n<li><strong>De-anonymization Attacks:</strong> These are attempts by either external or internal parties to compromise the anonymity of IL committee members, proposers, and aggregators, thereby increasing the likelihood of revealing their identities. A critical factor to consider is that a single entity owning a significant stake could control a large portion of the IL committee. Therefore, the mechanism must be designed to resist de-anonymization efforts, even when many of the committee’s validators are affiliated with the same entity.</li>\n<li><strong>Liveness Attacks:</strong> IL proposers may choose not to engage in the creation, signing, or broadcasting of ILs. This non-participation can lead to liveness faults, characterized by the failure to propagate messages throughout the network. An example of this can be found in Appendix 1.2, where we examine the impact of so-called “black-hole” attacks — scenarios in which Byzantine nodes choose not to forward any messages — on the success of message propagation during the <em>STEM</em> phase. To counteract this attack, we introduce a fail-safe mechanism that requires nodes to monitor whether their messages have been successfully propagated by the end of the <em>STEM</em> phase and to initiate message diffusion themselves if propagation has not occurred.</li>\n</ul>\n<p>Thorough security analyses must be conducted to mitigate de-anonymization and liveness attacks to the best of our ability. However, it is also important to keep in mind that the worst case scenario leads to an IL not being built for one slot: Censorable transactions would likely still be pending in the mempool, and can be picked up by the next IL committee.</p>\n<h2><a name=\"limitations-18\" class=\"anchor\" href=\"https://ethresear.ch#limitations-18\"></a>Limitations</h2>\n<p>Our approach to anonymizing IL proposers on Ethereum, while robust in its design, encounters specific limitations that merit attention:</p>\n<ul>\n<li><strong>Adaptation of the Anonymous Broadcast Protocol (ABP)</strong>: A central element in our mechanism is the ABP, a modified version of the Dandelion++ protocol originally designed for asynchronous communication. For our purposes, we have adapted it to a synchronous setting, maintaining the original structure but with adjusted expectations for message propagation. A critical observation guiding this adaptation is that the complete propagation of all proposed ILs to every committee member is not necessary. This assumption allows for specific deadlines and acknowledges that some transactions, despite passing through multiple relays, may not reach all committee members. This could potentially exclude some transactions from consideration. Although this does not pose a significant concern, as our objective is to include a substantial portion of the proposed IL in the global inclusion list, a thorough security analysis is necessary to assess the trade-offs between anonymity and security stemming from these changes. While it is advantageous to begin with a protocol that has already been implemented elsewhere, it might be more practical in the future to design a protocol from scratch—one with fewer parameters. Conducting the necessary analyses to evaluate its robustness and security will ensure that it is optimally tailored to meet our specific needs.</li>\n<li><strong>Single Aggregator Model</strong>: The current protocol considers a single aggregator randomly selected among the IL proposers. While this simplifies the design and is not a constraint per se—multiple aggregators can be integrated without altering the core mechanism—this setup can introduce specific challenges. Discussions are needed to explore potential issues that may arise from having only one aggregator, such as bottlenecks in processing or points of failure that could be exploited by malicious actors.</li>\n<li>It is also crucial to examine how the RANDAO affects our protocol as validators are able to bias is to a small extent. An analysis should be conducted to understand how such biases could influence the parts of our mechanism where RANDAO is utilized.</li>\n</ul>\n<h2><a name=\"supplementary-material-19\" class=\"anchor\" href=\"https://ethresear.ch#supplementary-material-19\"></a>Supplementary Material</h2>\n<h3><a name=\"appendix-1-abp-parameters-20\" class=\"anchor\" href=\"https://ethresear.ch#appendix-1-abp-parameters-20\"></a>Appendix 1. ABP Parameters</h3>\n<p><strong>1.1. IL gas and size (h/t Toni)</strong></p>\n<p>Previous IL specs have often mentioned using an IL size of <code>3M gas</code>. We chose the same amount of gas for the anon-IL design, and demonstrate that the maximum size in bytes a block can have after snappy compression is one with <code>28%</code> of zero bytes (Figure S1). Given that zero bytes are cheaper (<code>4 gas</code>) than non-zero bytes (<code>16 gas</code>), we calculate the maximum size an IL of <code>3M gas</code> can have as follows: <span class=\"math\">3M \\times 0.28/4 + 3M \\times 0.72/16 = 0.33Mb</span>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/1/813c54436b078bf41f92112b3901b9258649b974.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/813c54436b078bf41f92112b3901b9258649b974\" title=\"Screenshot 2024-04-25 at 10.42.20\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/1/813c54436b078bf41f92112b3901b9258649b974_2_690x281.jpeg\" alt=\"Screenshot 2024-04-25 at 10.42.20\" data-base62-sha1=\"irgQASvOpHyflXH048upTjXn2aE\" width=\"690\" height=\"281\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/1/813c54436b078bf41f92112b3901b9258649b974_2_690x281.jpeg, https://ethresear.ch/uploads/default/optimized/3X/8/1/813c54436b078bf41f92112b3901b9258649b974_2_1035x421.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/1/813c54436b078bf41f92112b3901b9258649b974_2_1380x562.jpeg 2x\" data-dominant-color=\"E7E4EB\"></a></div><p></p>\n<blockquote>\n<p><strong>Figure S1.</strong> A. Maximum block size in Mb after Snappy compression relative to the percentage of zero bytes for a 30M gas block. B. Heatmap showing the relationship between the percentage of zero bytes in a block and the compressed size (in MB) of the block after applying Snappy compression, with respect to varying gas limits (h/t Toni for both figures).</p>\n</blockquote>\n<p><strong>1.2. Impact of Transmission Delay and Network Size on Propagation Time</strong></p>\n<p>We then evaluated how changing the maximum transmission delay and the size of the network (i.e., the number of IL proposers) affected to the propagation time of a given message during the <em>STEM</em> and <em>FLUFF</em> phases.</p>\n<ul>\n<li><em>FLUFF</em> phase: According to the <a href=\"https://github.com/ethereum/consensus-specs/blob/836bc43a0667990dd1243cf3aaad7e35a32eab99/specs/phase0/p2p-interface.md#the-gossip-domain-gossipsub\" rel=\"noopener nofollow ugc\">consensus specifications</a> and given a mesh size <span class=\"math\">MS</span> of <code>8</code>, and secret IL proposers sending messages using the ABP for each round, we assume a minimum of <code>100 ms</code> transmission delay <span class=\"math\">T_{delay}</span>, and a maximum determined by a maximum random delay we add to each message transmission to help de-anonymizing participants. We thus use a simple analytical model to compute the propagation time <span class=\"math\">PT_{FLUFF}</span> needed to reach all nodes during the <em>FLUFF</em> phase:</li>\n</ul>\n<p><span class=\"math\">PT_{FLUFF} = T_{delay} \\times \\log_{(MS - 1)}(R)</span></p>\n<p>Where <span class=\"math\">\\log_{(MS - 1)}(R)</span> is used to calculating the number of hops required for a given message to reach all nodes. Using these parameters, the computed propagation time <span class=\"math\">*PT_{FLUFF}</span>* to reach all nodes during the <em>FLUFF</em> phase depending on <span class=\"math\">T_{delay}</span> is shown in Figure S2. A.</p>\n<ul>\n<li><em>STEM</em> phase: As a reminder, each slot, half of nodes are randomly chosen to be relays (forward to 1 or 2 neighbours), the other half are diffusers (forward to all other nodes). Given the more complex network dynamics involved in this phase, we use simulations to estimate <span class=\"math\">PT_{STEM}</span> relative to the network size and  <span class=\"math\">T_{delay}</span> (Figure S2.B.)</li>\n</ul>\n<p>We then simply add <span class=\"math\">PT_{FLUFF}</span> and <span class=\"math\">PT_{STEM}</span> to find viable parameters allowing to propagate messages to everyone under <code>5 seconds</code> per round (Figure S2.C.). As a result, we chose to allocate <code>2.5 seconds</code> for each phase, setting parameters to a network size of <code>128 nodes</code>, with a maximum added random delay of <code>900ms</code>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/4/f4afd5311a8b999e4b07d666626b8768c89ad157.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/f4afd5311a8b999e4b07d666626b8768c89ad157\" title=\"Screenshot 2024-05-23 at 15.20.17\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/4/f4afd5311a8b999e4b07d666626b8768c89ad157_2_690x330.jpeg\" alt=\"Screenshot 2024-05-23 at 15.20.17\" data-base62-sha1=\"yUBdOnLcLHlBZUUUg4kUAiQGe1N\" width=\"690\" height=\"330\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/4/f4afd5311a8b999e4b07d666626b8768c89ad157_2_690x330.jpeg, https://ethresear.ch/uploads/default/optimized/3X/f/4/f4afd5311a8b999e4b07d666626b8768c89ad157_2_1035x495.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/f/4/f4afd5311a8b999e4b07d666626b8768c89ad157_2_1380x660.jpeg 2x\" data-dominant-color=\"99BAAA\"></a></div><p></p>\n<blockquote>\n<p><strong>Figure S2.</strong> <strong>Propagation Time relative to transmission delay and network size</strong> for (<strong>A</strong>) the FLUFF phase, (<strong>B</strong>) the STEM phase across 100 simulation runs, and (<strong>C</strong>) the total propagation time for a given round (FLUFF + STEM). The x-axis indicates the transmission delay <span class=\"math\">T_{delay}</span>, and the y-axis shows network sizes (64, 128, 256 nodes).  Color intensity varies from fast to slow propagation time.</p>\n</blockquote>\n<p><strong>1.3 Impact of Byzantine Nodes on Message Propagation Success</strong></p>\n<p>We considered the impact that Byzantine nodes could have on the propagation of messages (ILs and votes) across the network of IL committee members. In Figure S3, we show the proportion of messages successfully reaching all nodes, given different percentages of Byzantine participants during the STEM phase, for various network sizes.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/0/e/0ef468f4b6446bffe73e294ce7ec6dc22225b106.png\" data-download-href=\"https://ethresear.ch/uploads/default/0ef468f4b6446bffe73e294ce7ec6dc22225b106\" title=\"Byzantine_Nodes\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/0/e/0ef468f4b6446bffe73e294ce7ec6dc22225b106_2_690x345.png\" alt=\"Byzantine_Nodes\" data-base62-sha1=\"28ikuGb7dJ2xAG0o9tvLHfOM4Rw\" width=\"690\" height=\"345\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/0/e/0ef468f4b6446bffe73e294ce7ec6dc22225b106_2_690x345.png, https://ethresear.ch/uploads/default/optimized/3X/0/e/0ef468f4b6446bffe73e294ce7ec6dc22225b106_2_1035x517.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/0/e/0ef468f4b6446bffe73e294ce7ec6dc22225b106_2_1380x690.png 2x\"></a></div><p></p>\n<blockquote>\n<p><strong>Figure S3. Impact of Byzantine Nodes on Message Propagation Success.</strong> This heatmap displays the success rate of full message propagation across networks with varying sizes and proportions of Byzantine nodes, for the <em>STEM</em> phase and averaged across 100 simulation runs. The x-axis indicates the percentage of Byzantine nodes (0% to 50%), and the y-axis shows network sizes (64, 128, 256 nodes). Color intensity varies from blue (higher success rates) to red (lower success rates), illustrating how increased Byzantine presence affects network reliability.</p>\n</blockquote>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/anonymous-inclusion-lists-anon-ils/19627\">Read full topic</a></p>","link":"https://ethresear.ch/t/anonymous-inclusion-lists-anon-ils/19627","pubDate":"Thu, 23 May 2024 15:17:26 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19627"},"source":{"@url":"https://ethresear.ch/t/anonymous-inclusion-lists-anon-ils/19627.rss","#text":"Anonymous Inclusion Lists (anon-ILs)"}},{"title":"Lumoz Launches zkProver and zkVerifier based on EigenLayer","dc:creator":"nanfengpo","category":"ZK Rollup","description":"<p>Despite recent controversies surrounding its airdrop, there is no doubt that EigenLayer has emerged as one of the most prominent projects of 2024, thanks to its Re-staking mechanism. This mechanism has not only driven a surge in TVL but also prompted users to move their funds and confidence back to the Ethereum ecosystem, away from the frenzy of meme coins.</p>\n<p>According to public <a href=\"https://app.eigenlayer.xyz/\" rel=\"noopener nofollow ugc\">data</a>, as of the time of writing, EigenLayer’s ETH TVL has surpassed 5 million ETH, and the staking amount of its token, Eigen, has exceeded 54 million tokens. The number of active AVS (<a href=\"https://ethresear.ch\">Actively Validated Services</a>) and Operators stands at 11 and 251, respectively. The EigenLayer ecosystem is also booming, with over 20 leading projects across various sectors, including Lumoz, Espresso, Near, and Dodo, actively participating.</p>\n<p>This marks the beginning of a revolution aimed at reshaping blockchain security and profitability around ETH, leveraging EigenLayer. This article will use Lumoz as a case study to delve into the series of technical explorations conducted on EigenLayer, thereby further advancing the technology of Ethereum and the broader blockchain industry.</p>\n<h2><a name=\"h-1-lumoz-launches-avs-computation-layer-based-on-eigenlayer-1\" class=\"anchor\" href=\"https://ethresear.ch#h-1-lumoz-launches-avs-computation-layer-based-on-eigenlayer-1\"></a>1. Lumoz Launches AVS Computation Layer Based on EigenLayer</h2>\n<p>As a leader in modular computing layers and ZKRaas Platform, Lumoz has not only performed exceptionally well in the capital markets but has also continuously innovated in the technical field. In April 2024, Lumoz first announced the completion of its Pre-A financing round (with a current valuation of up to $300 million), and shortly thereafter, it announced support for Op Stack + ZK Fraud Proof Layer 2 architecture, pioneering a new model for L2 architecture.</p>\n<p>This week, Lumoz officially announced the launch of an AVS computation layer based on EigenLayer, composed of zkProver and zkVerifier, which significantly enhances computational power and security.</p>\n<p>Lumoz’s zkProver focuses on generating Zero-Knowledge Proofs (ZKP), verifying the authenticity of data without revealing the specific data itself. With powerful computational resources, zkProver can quickly generate efficient Zero-Knowledge Proofs, significantly improving the privacy and security of blockchain networks. zkVerifier, on the other hand, is responsible for verifying these Zero-Knowledge Proofs, ensuring their correctness and reliability. Combined with EigenLayer’s Re-staking mechanism, zkVerifier not only leverages Ethereum’s security but also provides additional economic incentives for validators. This dual verification mechanism greatly enhances the overall security of the network and reduces trust risks.</p>\n<p><em>Note: EigenLayer’s Re-staking mechanism enhances the security of the Ethereum ecosystem by providing AVS, addressing trust issues and the burden of capital costs.</em></p>\n<p>By integrating powerful computational resources with EigenLayer’s Re-staking mechanism, Lumoz has created an efficient and secure computational service ecosystem. This innovation not only improves the computational power and security of blockchain networks but also provides developers and users with more application scenarios and value. Through zkProver and zkVerifier, Lumoz brings unprecedented innovation and value to the blockchain field, driving technological advancement across the entire industry.</p>\n<h2><a name=\"h-2-lumoz-computation-layer-2\" class=\"anchor\" href=\"https://ethresear.ch#h-2-lumoz-computation-layer-2\"></a>2. Lumoz Computation Layer</h2>\n<p>The Lumoz Computation Layer architecture is a highly integrated and collaborative system, with its main components and functionalities as follows:</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/f/4fa2829a63a584f7eb2b536f543482ae1f2286ee.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/4fa2829a63a584f7eb2b536f543482ae1f2286ee\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/f/4fa2829a63a584f7eb2b536f543482ae1f2286ee_2_493x500.jpeg\" alt=\"\" data-base62-sha1=\"bmtTAvKY7uCRF721iyC2Oxp1Fme\" width=\"493\" height=\"500\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/f/4fa2829a63a584f7eb2b536f543482ae1f2286ee_2_493x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/4/f/4fa2829a63a584f7eb2b536f543482ae1f2286ee_2_739x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/f/4fa2829a63a584f7eb2b536f543482ae1f2286ee_2_986x1000.jpeg 2x\" data-dominant-color=\"151716\"></a></div><p></p>\n<p>The main components include:</p>\n<ul>\n<li><strong>Ethereum</strong>: Utilizes the EigenLayer standard to build Active Verification Services (AVS). The staking mechanism of EigenLayer enhances the security of AVS.</li>\n<li><strong>EVM Chain</strong>: Supports a diverse blockchain environment compatible with the Ethereum Virtual Machine (EVM), including but not limited to Polygon zkEVM, Polygon CDK, ZKStack, and Scroll, ensuring broad compatibility and scalability.</li>\n<li><strong>Lumoz AVS Oracle</strong>: Responsible for acquiring and storing data from EVM-compatible chains, ensuring high availability and integrity of the data, thus providing a solid data foundation for the computation layer.</li>\n<li><strong>Lumoz Chain</strong>: Acts as the core management layer of the entire computation layer, responsible for task scheduling, reward distribution, and the management of zkProver and zkVerifier, including but not limited to the processes of node joining and exiting.</li>\n<li><strong>zkProver</strong>: Nodes that execute specific computational tasks.</li>\n<li><strong>zkVerifier</strong>: Verification nodes that validate the execution results.</li>\n</ul>\n<p>Through the close collaboration of these modules, the Lumoz Computation Layer not only provides a secure and efficient computational environment but also, through its modular design, lays a solid foundation for future expansion and upgrades.</p>\n<h2><a name=\"h-3-what-problems-can-it-solve-3\" class=\"anchor\" href=\"https://ethresear.ch#h-3-what-problems-can-it-solve-3\"></a>3. What Problems Can It Solve?</h2>\n<h3><a name=\"h-31-large-scale-computational-power-demand-4\" class=\"anchor\" href=\"https://ethresear.ch#h-31-large-scale-computational-power-demand-4\"></a>3.1 Large-Scale Computational Power Demand</h3>\n<p>Lumoz provides robust cloud infrastructure support for zero-knowledge proof (ZKP) computations. This support is crucial for ZK-Rollups, a blockchain scaling solution that executes transactions off-chain and uses ZKPs to verify the validity of these transactions. The proofs are then submitted on-chain, reducing the load on the main chain and increasing transaction throughput.</p>\n<p>Lumoz Cloud Infrastructure Capabilities:</p>\n<ul>\n<li><strong>Compatibility</strong>: Lumoz’s cloud infrastructure is compatible with various ZK-Rollup solutions such as Polygon CDK, zkSync, StarkNet, and Scroll. This means it can serve these different platforms without each platform needing to establish its own infrastructure.</li>\n<li><strong>ZK-PoW Algorithm</strong>: Lumoz combines miners’ computational resources with cloud infrastructure through the Zero-Knowledge Proof of Work (ZK-PoW) algorithm, enabling miners to contribute their computational power to support ZKP computations.</li>\n<li><strong>Performance and Efficiency</strong>: By supporting parallel computation for ZKPs, computational efficiency is significantly improved as multiple tasks can be executed simultaneously. Additionally, sequential submission ensures orderly processing of transactions.</li>\n<li><strong>Recursive Aggregation Algorithm</strong>: Optimizing the recursive aggregation algorithm reduces the number of required ZKPs, thereby lowering computational complexity and costs.</li>\n<li><strong>Network Communication Improvements</strong>: Enhancements in network communication reduce data transmission time, improving the overall system response speed.</li>\n<li><strong>Cost-Effectiveness</strong>: Through the aforementioned optimizations, Lumoz can reduce the costs associated with ZKP computations, making ZK-Rollup solutions more economically efficient.</li>\n</ul>\n<p>Lumoz’s cloud infrastructure provides a powerful, flexible, and cost-effective solution for ZKP computations, contributing to the advancement and application of blockchain technology.</p>\n<h3><a name=\"h-32-reducing-zk-proof-gas-5\" class=\"anchor\" href=\"https://ethresear.ch#h-32-reducing-zk-proof-gas-5\"></a>3.2 Reducing zk Proof Gas</h3>\n<p>The design strategy of zkVerifier aims to enhance efficiency, scalability, and effectively reduce transaction costs, as reflected in the following aspects:</p>\n<ul>\n<li><strong>Integration of Multiple Proof Sources</strong>: zkVerifier can integrate proofs from different sources, supporting a wide range of zero-knowledge proof applications. This flexibility is a key advantage in the blockchain ecosystem, as it allows various projects and applications to utilize zkVerifier services.</li>\n<li><strong>Gas Cost Savings</strong>: Through meticulously designed proof processing and verification mechanisms, zkVerifier significantly reduces the gas cost of submitting proofs, providing users with a more cost-effective blockchain service experience.</li>\n<li><strong>Adaptability to Proof Characteristics</strong>: zkVerifier demonstrates adaptability to the characteristics of proofs generated by different proof systems, including proof size, verification time, and verification logic. This adaptability is central to ensuring the efficient operation of the system.</li>\n<li><strong>Customized Release Strategies</strong>: Based on the characteristics of different proofs, zkVerifier has designed customized release strategies that optimize the use of on-chain resources and ensure efficient proof transmission, helping to reduce network congestion and improve transaction speed.</li>\n<li><strong>Deployment of Dedicated Verifiers</strong>: zkVerifier deploys dedicated verifiers, which are key mechanisms to ensure proof validity. These verifiers ensure that only verified proofs can be published to Ethereum, maintaining the security and reliability of the system.</li>\n<li><strong>Optimization of Data Availability Layer</strong>: zkVerifier’s data availability layer ensures the durability and accessibility of proofs while providing a cost-effective storage strategy, which is crucial for reducing the operational costs of the system.</li>\n<li><strong>Deep Integration with Ethereum</strong>: zkVerifier publishes verification results to Ethereum, where Ethereum generates verification proofs. This step is crucial for ensuring cross-chain interoperability and trust, facilitating seamless collaboration between zkVerifier and major blockchain networks like Ethereum.</li>\n<li><strong>Authority of Verification Proofs</strong>: The verification proofs generated by Ethereum provide the final authoritative confirmation of the data validity provided by zkVerifier. This is essential for establishing trust in zkVerifier data within the Ethereum network.</li>\n</ul>\n<p>These innovative designs of zkVerifier not only address the challenges faced by existing blockchain technology but also achieve significant advancements in enhancing efficiency, reducing costs, and improving interoperability. This design helps to promote the broader application of blockchain technology and provides users with a more secure and efficient service environment.</p>\n<h2><a name=\"h-4-detailed-workflow-6\" class=\"anchor\" href=\"https://ethresear.ch#h-4-detailed-workflow-6\"></a>4. Detailed Workflow</h2>\n<h3><a name=\"h-41-zkprover-7\" class=\"anchor\" href=\"https://ethresear.ch#h-41-zkprover-7\"></a>4.1 zkProver</h3>\n<p>zkProver is the core component responsible for generating zero-knowledge proofs (ZKPs). ZKPs allow the prover to demonstrate the correctness of a certain assertion to the verifier without revealing any additional information. zkProver includes various types of provers such as zkRollup Prover, zkFraud Prover, and zkML Prover, each optimized for specific computational tasks to ensure optimal performance and system efficiency within their respective domains.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/e/3eff1a5965e046e6f0ad163d4be95e74257d330c.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/3eff1a5965e046e6f0ad163d4be95e74257d330c\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/e/3eff1a5965e046e6f0ad163d4be95e74257d330c_2_690x489.jpeg\" alt=\"\" data-base62-sha1=\"8Zi9PUSSFaXfxehoylc5lt8YL6s\" width=\"690\" height=\"489\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/e/3eff1a5965e046e6f0ad163d4be95e74257d330c_2_690x489.jpeg, https://ethresear.ch/uploads/default/optimized/3X/3/e/3eff1a5965e046e6f0ad163d4be95e74257d330c_2_1035x733.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/3/e/3eff1a5965e046e6f0ad163d4be95e74257d330c_2_1380x978.jpeg 2x\" data-dominant-color=\"151814\"></a></div><p></p>\n<p><strong>Workflow:</strong></p>\n<ol>\n<li><strong>Task Acquisition:</strong> The Lumoz AVS Oracle and Dispatch module retrieve tasks from the blockchain and synchronize them to the Lumoz Chain. These tasks consist of assertions or computations that require proof.</li>\n<li><strong>Task Distribution:</strong> Tasks are distributed to different Provers via the Dispatch module. Acting as the task scheduling center, Dispatch determines which type of Prover is best suited to handle each task based on its nature and requirements. The Dispatch module dynamically allocates computational resources through intelligent algorithms, optimizing resource distribution in real-time based on task load and the performance of each Prover, ensuring stable system operation during high-demand periods.</li>\n<li>**Proof Generation:**<strong>a, zkRollup Prover:</strong> Focuses on generating proofs related to transaction batch compression, enhancing blockchain processing speed and scalability.<strong>b, zkFraud Prover:</strong> Generates fraud proofs that help detect and prevent improper behavior.<strong>c, zkML Prover:</strong> Specializes in generating complex proofs related to machine learning model verification, ensuring the validity of model outputs without revealing the model itself or its input data.<strong>d, Other Provers:</strong> Handle specific types of proofs as needed.</li>\n<li><strong>Proof Submission:</strong> The generated proofs are sent to the Lumoz Chain for verification and archiving.</li>\n</ol>\n<h3><a name=\"h-42-zkverifier-8\" class=\"anchor\" href=\"https://ethresear.ch#h-42-zkverifier-8\"></a>4.2 zkVerifier</h3>\n<p>zkVerifier is another key component in the architecture, responsible for verifying the ZKPs generated by zkProver. It ensures the correctness and validity of the proofs submitted to the chain, thereby safeguarding the trust and security of the system. Through an optimized verification process, zkVerifier efficiently handles proofs, reducing operational costs and gas consumption.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/4/64136a1901b29ae5be439c939975916683752c1d.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/64136a1901b29ae5be439c939975916683752c1d\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/4/64136a1901b29ae5be439c939975916683752c1d_2_563x500.jpeg\" alt=\"\" data-base62-sha1=\"ehjldNyiY42LYAjWQB5IUj3x6Kp\" width=\"563\" height=\"500\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/4/64136a1901b29ae5be439c939975916683752c1d_2_563x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/6/4/64136a1901b29ae5be439c939975916683752c1d_2_844x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/6/4/64136a1901b29ae5be439c939975916683752c1d_2_1126x1000.jpeg 2x\" data-dominant-color=\"151615\"></a></div><p></p>\n<p><strong>Workflow:</strong></p>\n<ol>\n<li>Proof Submission: Proofs generated by zkProver are submitted to the Lumoz Chain, initiating the verification task.</li>\n<li>Proof Verification: The Lumoz Chain sends the verification task to multiple zkVerifiers, which independently perform distributed verification.</li>\n<li>Collective Decision: At least two-thirds of the verification nodes confirm the proof’s validity, ensuring the authority and consistency of the verification results.</li>\n<li>Verification Result Processing: Valid proofs and their results are transmitted back to the Lumoz Proof Contract on the blockchain by the Lumoz AVS Oracle. The Task Manager Contract records and responds to the task results on the Lumoz Chain.</li>\n</ol>\n<h2><a name=\"summary-9\" class=\"anchor\" href=\"https://ethresear.ch#summary-9\"></a>Summary</h2>\n<p>Lumoz announces the launch of zkProver and zkVerifier based on EigenLayer, significantly enhancing the efficiency of computation and verification. The re-staking mechanism of EigenLayer effectively ensures the security and profitability of the entire service process. With specialized node design, Lumoz can provide solutions for different computational tasks, achieving optimal performance and efficiency. Additionally, through the re-staking mechanism, Lumoz offers substantial returns to stakers, further enhancing the economic security of the system.</p>\n<p>In the future, we hope to see more projects like EigenLayer and Lumoz emerge, addressing current blockchain challenges, genuinely solving user pain points, and actively exploring and attempting more efficient and secure solutions. This will ultimately drive the progress and prosperity of the entire industry.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/lumoz-launches-zkprover-and-zkverifier-based-on-eigenlayer/19622\">Read full topic</a></p>","link":"https://ethresear.ch/t/lumoz-launches-zkprover-and-zkverifier-based-on-eigenlayer/19622","pubDate":"Thu, 23 May 2024 09:18:53 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19622"},"source":{"@url":"https://ethresear.ch/t/lumoz-launches-zkprover-and-zkverifier-based-on-eigenlayer/19622.rss","#text":"Lumoz Launches zkProver and zkVerifier based on EigenLayer"}},{"title":"Queue End Of Block Transaction OPCODE","dc:creator":"MicahZoltu","category":"Execution Layer Research","description":"<h2><a name=\"abstract-1\" class=\"anchor\" href=\"https://ethresear.ch#abstract-1\"></a>Abstract</h2>\n<p>A new OPCODE that allows queuing some piece of code with a well defined gas used that will execute at the end of a block.  If two transactions queue the same end-of-block code, it will only execute once.  Gas costs are covered with ETH in the calling contract.</p>\n<h2><a name=\"motivation-2\" class=\"anchor\" href=\"https://ethresear.ch#motivation-2\"></a>Motivation</h2>\n<p>This would enable things like block auctions, by allowing a bunch of people to submit transactions to swap some asset, and then they would all execute together via a block-auction at the end of the block in a way defined by the contract, rather than in a sequential order that they appear.  Each transaction would queue the end-of-block code execution.  If a single transaction does a swap on some pool, then the end-of-block execution would not change anything from today.  If multiple people submit swaps on some pool within a single block, then the contract can execute a block-auction rather than executing the swaps in the order they are received.  This allows the contract to get the best price for everyone and combat things like in-block front-running.  This does <em>not</em> address cross-block front-running/back-running, but that is far harder to execute than within-block front-running and sandwiching.</p>\n<h2><a name=\"specification-3\" class=\"anchor\" href=\"https://ethresear.ch#specification-3\"></a>Specification</h2>\n<p>Mostly TBD, but gas paid by the contract allows for cost sharing strategies between transactors (e.g., split costs and refund at end) and requiring a fixed gas usage for the end-of-block execution helps with solving the bin-filling problem introduced by delayed execution.</p>\n<h2><a name=\"considerations-4\" class=\"anchor\" href=\"https://ethresear.ch#considerations-4\"></a>Considerations</h2>\n<p>It could be useful to allow for specifying dependencies, so one contract could say “I want my end-of-block execution to run after this other contract’s end-of-block execution”.  Care would need to be taken to avoid circular dependencies, but this could be achieved by just asserting that if a circular dependency is detected then all contracts in the circle do not get their end-of-block execution.  This strongly encourages people to <em>only</em> depend on immutable end-of-block executors with fixed dependency trees.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/queue-end-of-block-transaction-opcode/19621\">Read full topic</a></p>","link":"https://ethresear.ch/t/queue-end-of-block-transaction-opcode/19621","pubDate":"Thu, 23 May 2024 07:49:03 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19621"},"source":{"@url":"https://ethresear.ch/t/queue-end-of-block-transaction-opcode/19621.rss","#text":"Queue End Of Block Transaction OPCODE"}},{"title":"ZKThreads: A canonical ZK sharding framework for dApps","dc:creator":"guthlStarkware","category":"ZK Rollup","description":"<p><strong>TL;DR:</strong> We propose zkThread, an application-level component allowing users to locally prove a batch of transactions and update the canonical state.</p>\n<p>This protocol allows turning any smart contract or set of smart contracts into their own execution environment at will while leaving the system in a synchronized environment.</p>\n<p>Notice this protocol can also be implemented at the OS level without requiring any change on the user journey.</p>\n<p>This design pattern showcases Horizontal Scaling done right. zkThreads extends the base layer throughput and network capacity at Zero Overhead from the core protocol perspective.</p>\n<p>We believe this model to be a new paradigm in the Fractal Scaling family alongside L3s and other designs known as zkSharding. You can find more details and contribute to its creation on <a href=\"https://github.com/keep-starknet-strange/zkthread\" rel=\"noopener nofollow ugc\">here</a> and a first implementation can be found under this <a href=\"https://github.com/dojoengine/dojo/tree/main/crates/saya\" rel=\"noopener nofollow ugc\">repository</a> under the Saya settlement service developed by <a href=\"https://cartridge.gg\" rel=\"noopener nofollow ugc\">Cartridge</a>.</p>\n<p>As a metaphor, imagine a chain where you can temporarily fork the chain locally to batch txs on your own. Others have hinted at such a design under the name Stateful Coprocessor or Execution Coprocessor.</p>\n<p>Thanks a lot to <a href=\"https://twitter.com/0xfishylosopher/\" rel=\"noopener nofollow ugc\">Jay Yu</a> from <a href=\"https://twitter.com/stanfordcrypto\" rel=\"noopener nofollow ugc\">Stanford Blockchain</a> and <a href=\"https://twitter.com/tarrenceva\" rel=\"noopener nofollow ugc\">Tarrence</a> from <a href=\"https://cartridge.gg/\" rel=\"noopener nofollow ugc\">Cartridge</a> for all the help in formalising and writing this post.</p>\n<p><strong>Background</strong></p>\n<p>In the context of a Validity-Rollup, the OS underpinning the Rollup is usually optimized for being provable, making proof a first-class primitive of the whole system. One important aspect is the ease of proving as one needs to run in a decentralized world with constrained machines.</p>\n<p>Under the current system, Starknet and other chains only allow a smart contract to modify its storage slots.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/a/d/ad676517d8e89bbc4d937ee07128835d0c72d402.png\" data-download-href=\"https://ethresear.ch/uploads/default/ad676517d8e89bbc4d937ee07128835d0c72d402\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/a/d/ad676517d8e89bbc4d937ee07128835d0c72d402_2_690x345.png\" alt=\"image\" data-base62-sha1=\"oK07Ke2I0FNy2wexYsCqL9z6RiO\" width=\"690\" height=\"345\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/a/d/ad676517d8e89bbc4d937ee07128835d0c72d402_2_690x345.png, https://ethresear.ch/uploads/default/optimized/3X/a/d/ad676517d8e89bbc4d937ee07128835d0c72d402_2_1035x517.png 1.5x, https://ethresear.ch/uploads/default/original/3X/a/d/ad676517d8e89bbc4d937ee07128835d0c72d402.png 2x\" data-dominant-color=\"EAE8EE\"></a></div><p></p>\n<p><strong>Proposal</strong></p>\n<p>Under zkThread, a new contract would be introduced to allow for proof verification of generic transactions against a specific OS version, a set of contracts, an input, and an output &lt;key, value&gt; state list. Assuming the input state list matches the current canonical state values and assuming the proof verifies, the OS can self-apply the output &lt;key, value&gt; to the canonical state.</p>\n<p>We will call a <strong>zkThread</strong>, the operation governing the runtime of the zkThread contracts updates.</p>\n<p><strong>Stated Goals</strong></p>\n<p>This protocol enables a whole new primitive into the network</p>\n<ul>\n<li>All compatible dApps become L3-ready</li>\n<li>Self Sharded Synchronous state</li>\n<li>Infinitely Adjustable TPS through permissionless self-update</li>\n<li>Future-proof backward compatibility</li>\n</ul>\n<p><strong>Setup</strong><br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/d/4d2ea6cbd7ef6a2fd9520727e728980356cbce58.png\" data-download-href=\"https://ethresear.ch/uploads/default/4d2ea6cbd7ef6a2fd9520727e728980356cbce58\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/d/4d2ea6cbd7ef6a2fd9520727e728980356cbce58_2_690x386.png\" alt=\"image\" data-base62-sha1=\"b0MInaxvuXs79F89b38Tq8ZsvVu\" width=\"690\" height=\"386\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/d/4d2ea6cbd7ef6a2fd9520727e728980356cbce58_2_690x386.png, https://ethresear.ch/uploads/default/optimized/3X/4/d/4d2ea6cbd7ef6a2fd9520727e728980356cbce58_2_1035x579.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/d/4d2ea6cbd7ef6a2fd9520727e728980356cbce58_2_1380x772.png 2x\" data-dominant-color=\"ECE9ED\"></a></div><p></p>\n<p>For a set of L2 Smart Contracts, one can define a zkThread by</p>\n<ul>\n<li>Batcher: an entity or set of entities that sequences the zkThread</li>\n<li>Prover: an entity or set of entities that proves the zkThread and forwards it to the L2</li>\n<li>A set of L2 contracts falling targeted by the zkThread</li>\n</ul>\n<p>We call a Sub-block the output of the Batcher.</p>\n<p>For a zkThread, the Batcher creates a sub-block and provides it to the Prover.</p>\n<p>Once proven,sub-blocks are forwarded as a transaction to the L2.</p>\n<p>Assuming all transactions in the sub-block are valid, a transaction is emitted from the zkThread to the L2 as follows</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/b/5bfafec8753e568daf47182021da94dd16225cde.png\" data-download-href=\"https://ethresear.ch/uploads/default/5bfafec8753e568daf47182021da94dd16225cde\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/b/5bfafec8753e568daf47182021da94dd16225cde_2_690x384.png\" alt=\"image\" data-base62-sha1=\"d7HcGEPNFLW34Wb4X5niG0ubliC\" width=\"690\" height=\"384\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/b/5bfafec8753e568daf47182021da94dd16225cde_2_690x384.png, https://ethresear.ch/uploads/default/optimized/3X/5/b/5bfafec8753e568daf47182021da94dd16225cde_2_1035x576.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/5/b/5bfafec8753e568daf47182021da94dd16225cde_2_1380x768.png 2x\" data-dominant-color=\"EDE9ED\"></a></div><p></p>\n<p>The zkThread transaction is then sequenced by the L2 and run against the canonical state<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/3/c3b9902412fe93266b9309cb5b5f4a10f327c263.png\" data-download-href=\"https://ethresear.ch/uploads/default/c3b9902412fe93266b9309cb5b5f4a10f327c263\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/3/c3b9902412fe93266b9309cb5b5f4a10f327c263_2_690x392.png\" alt=\"image\" data-base62-sha1=\"rVsFLR0AsQwbTx22QxHfQpM6ps7\" width=\"690\" height=\"392\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/3/c3b9902412fe93266b9309cb5b5f4a10f327c263_2_690x392.png, https://ethresear.ch/uploads/default/optimized/3X/c/3/c3b9902412fe93266b9309cb5b5f4a10f327c263_2_1035x588.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/3/c3b9902412fe93266b9309cb5b5f4a10f327c263_2_1380x784.png 2x\" data-dominant-color=\"ECE9ED\"></a></div><p></p>\n<p>If the proof validates against the canonical state, the state updates are accepted and incorporated into the canonical state.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/a/8a396a5cf7e88f798ab726157d5a3da6ca323c7f.png\" data-download-href=\"https://ethresear.ch/uploads/default/8a396a5cf7e88f798ab726157d5a3da6ca323c7f\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/a/8a396a5cf7e88f798ab726157d5a3da6ca323c7f_2_690x388.png\" alt=\"image\" data-base62-sha1=\"jIMTZdDjLs5TDrDw47l4ukH1Z3F\" width=\"690\" height=\"388\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/a/8a396a5cf7e88f798ab726157d5a3da6ca323c7f_2_690x388.png, https://ethresear.ch/uploads/default/optimized/3X/8/a/8a396a5cf7e88f798ab726157d5a3da6ca323c7f_2_1035x582.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/a/8a396a5cf7e88f798ab726157d5a3da6ca323c7f_2_1380x776.png 2x\" data-dominant-color=\"ECE9ED\"></a></div><p></p>\n<p>In the negative flow, the transaction just reverts and the Prover pays the transaction fees.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/5/850d64651564478bfc37889a3bff85a7ac2a28e1.png\" data-download-href=\"https://ethresear.ch/uploads/default/850d64651564478bfc37889a3bff85a7ac2a28e1\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/5/850d64651564478bfc37889a3bff85a7ac2a28e1_2_690x386.png\" alt=\"image\" data-base62-sha1=\"iZ2ca1u6n5TkYFaY0UmyVuaDMOt\" width=\"690\" height=\"386\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/5/850d64651564478bfc37889a3bff85a7ac2a28e1_2_690x386.png, https://ethresear.ch/uploads/default/optimized/3X/8/5/850d64651564478bfc37889a3bff85a7ac2a28e1_2_1035x579.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/5/850d64651564478bfc37889a3bff85a7ac2a28e1_2_1380x772.png 2x\" data-dominant-color=\"ECE8EC\"></a></div><p></p>\n<p><strong>Conclusion</strong><br>\nThis new scaling model is perfectly suited for critical DeFi applications, Gaming and all dApps which wish to use the base layer infrastructure but have strong constraints on Responsiveness, Fees and even Privacy such as Order Book. You can find more details and contribute to its creation <a href=\"https://github.com/keep-starknet-strange/zkthread\" rel=\"noopener nofollow ugc\">here</a> and a first implementation can be found under this <a href=\"https://github.com/dojoengine/dojo/tree/main/crates/saya\" rel=\"noopener nofollow ugc\">repository</a> under the Saya settlement service developed by <a href=\"https://cartridge.gg\" rel=\"noopener nofollow ugc\">Cartridge</a>.</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/zkthreads-a-canonical-zk-sharding-framework-for-dapps/19619\">Read full topic</a></p>","link":"https://ethresear.ch/t/zkthreads-a-canonical-zk-sharding-framework-for-dapps/19619","pubDate":"Thu, 23 May 2024 07:27:02 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19619"},"source":{"@url":"https://ethresear.ch/t/zkthreads-a-canonical-zk-sharding-framework-for-dapps/19619.rss","#text":"ZKThreads: A canonical ZK sharding framework for dApps"}},{"title":"EVM Native Sequencing Rules","dc:creator":"Lilyjjo","category":"Execution Layer Research","description":"<p>The goal of this post is to introduce the concept of Sequencing Rules and provide a possible sketch of what a Sequencing Rule-enabled EVM would look like. Sequencing Rules offer a rational solution to both Ethereum’s MEV and protocol innovation mindshare loss problems.</p>\n<h2><a name=\"sequencing-rules-the-why-1\" class=\"anchor\" href=\"https://ethresear.ch#sequencing-rules-the-why-1\"></a><strong>Sequencing Rules: The Why</strong></h2>\n<p>Ethereum is facing a MEV crisis. FUD is <a href=\"https://x.com/dankrad/status/1791379755922498027\" rel=\"noopener nofollow ugc\">building on Twitter</a> as block builders grow in their influence over the chain’s functioning. Block builders are collecting an <a href=\"https://www.relayscan.io/builder-profit?t=7d\" rel=\"noopener nofollow ugc\">uncomfortable amount of capital</a> with each block, yet they provide little to negative value in return. This behavior makes sense: value has been left on the table, so why shouldn’t they collect it? A rational way to stop the growing block builder oligopoly is to enable Ethereum’s on-chain applications to fully capture the value that they create.</p>\n<p>So far, discussions on fixing block builders’ power have focused only on lower-level structural L1 changes<sup><a href=\"https://ethresear.ch/t/execution-tickets/17944\">1</a>,<a href=\"https://ethresear.ch/t/state-lock-auctions-towards-collaborative-block-building/18558\">2</a>,<a href=\"https://ethresear.ch/t/exploring-paths-to-a-decentralized-censorship-resistant-and-non-predatory-mev-ecosystem/17312\">3</a></sup>, leaving out the actual source of value creation and leakage: the on-chain applications themselves. The best entity to decide how to fairly distribute the value created from ordering is the entity that is producing the value. For the sake of Ethereum’s long-term success, on-chain applications need to be able to express and control how their transactions are sequenced with supporting L1/L2 infrastructure.</p>\n<p>The rest of this post will:</p>\n<ul>\n<li>Introduce the concept of Sequencing Rules</li>\n<li>Provide a sketch of what native EVM sequencing support could look like</li>\n<li>Provide a <a href=\"https://github.com/Lilyjjo/tldr-research\" rel=\"noopener nofollow ugc\">proof-of-concept example</a> of an AMM that auctions off the right of the first swap on Ethereum</li>\n</ul>\n<h2><a name=\"sequencing-rules-the-what-2\" class=\"anchor\" href=\"https://ethresear.ch#sequencing-rules-the-what-2\"></a>Sequencing Rules: The What</h2>\n<p>Sequencing rules are not a new concept but have recently seen increased usage by blockchain developers.</p>\n<p>Sequencing rules can be conceptualized as follows:</p>\n<ol>\n<li>On-chain applications decide how they want their transactions to be sequenced.</li>\n<li>Blocks are built that respect that sequencing.</li>\n</ol>\n<p>Blockchain applications can benefit from this programming pattern due to blockchains’ inherent discrete view of time. During the 12 seconds between Ethereum’s blocks, the outside world’s valuation of different pieces of state is in flux, creating arbitrage value in the ability to act first on those pieces of state. Block builders make money by exploiting this in the form of acts like CEX-DEX arbitrage. This phenomenon is also observed in traditional finance (TradFi) with the <a href=\"https://academic.oup.com/qje/article/130/4/1547/1916146\" rel=\"noopener nofollow ugc\">high-speed arms race</a> between high-frequency trading (HFT) firms, which operate in a similar scenario but on a millisecond timeframe instead of seconds.</p>\n<p>As the field of protocol development matures, protocols are starting to manage these value-pressurized pieces of state with varying degrees of success. Examples vary but all showcase the benefits of managing one’s own sequencing:</p>\n<ul>\n<li><a href=\"https://x.com/penumbrazone\" rel=\"noopener nofollow ugc\">Penumbra</a>, a new L1 DEX, enforces ordered batch execution of all business logic, enabling all users to benefit equally from the accrued time arbitrage value.</li>\n<li>HyperLiquid’s <a href=\"https://x.com/chameleon_jeff/status/1743650555879190808\" rel=\"noopener nofollow ugc\">new L1</a> prioritizes retail and makers over toxic takers by running cancels and post-only orders first.</li>\n<li>Skip’s <a href=\"https://docs.skip.money/slinky/overview/\" rel=\"noopener nofollow ugc\">Slinky</a> project surfaces oracle data at the block level to ensure all applications can utilize fresh oracle data.</li>\n<li><a href=\"https://uma.xyz/oval\" rel=\"noopener nofollow ugc\">Oval</a> auctions off the right to be the first person to act on updated oracles information.</li>\n<li>Years of research<sup><a href=\"https://ethresear.ch/t/mev-capturing-amm-mcamm/13336\">1</a>,<a href=\"https://arxiv.org/abs/2210.10601\" rel=\"noopener nofollow ugc\">2</a>,<a href=\"https://arxiv.org/html/2403.03367v1\" rel=\"noopener nofollow ugc\">3</a></sup> have been conducted on how to implement first-swap auctions for AMMs on Ethereum, though no production-grade result is running yet.</li>\n</ul>\n<p>Sequencing rules for blockchain applications are natural, yet Ethereum does not offer native solutions to enable developers to program their applications accordingly.</p>\n<h2><a name=\"sequencing-rules-the-how-3\" class=\"anchor\" href=\"https://ethresear.ch#sequencing-rules-the-how-3\"></a>Sequencing Rules: The How</h2>\n<p>As seen in the list above, protocols are starting to migrate to other ecosystems with novel L1 implementations because their sequencing needs are not being met on Ethereum. Instead of Ethereum’s on-chain protocols capturing the time-accrued value, block builders are. Ethereum’s EVM needs sequencing rules.</p>\n<p>Ethereum’s EVM programming environment is different from an L1 that is specialized for a specific application because it is a shared general execution environment. Applications and transactions share both block space and state with each other. As a result, anyone implementing sequencing rules for an EVM should consider:</p>\n<ul>\n<li>On-chain applications cannot assume a piece of state’s value will not change unless it is explicitly controlled.</li>\n<li>Not all on-chain applications need sequencing.</li>\n<li>Not all actions within an application need sequencing.</li>\n</ul>\n<p>I will now lay out a rough draft version of how one could implement sequencing rules for Ethereum. In order to meet the above considerations, I propose adding two new transaction types:</p>\n<ol>\n<li>A new ‘bundle’ transaction type. This transaction would be signed by an EOA and would contain a payload of ordered transactions. We’ll call this EOA a bundler. This ‘transaction’ itself does not trigger on-chain execution, it simply just orders other transactions.</li>\n<li>A new transaction type that specifies the bundler (just an EOA) that is able to include the transaction in a bundle.</li>\n</ol>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/3/b376ab484f0a2eaa09bcb254d7f12439f442621d.png\" data-download-href=\"https://ethresear.ch/uploads/default/b376ab484f0a2eaa09bcb254d7f12439f442621d\" title=\"IMG_0025\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/3/b376ab484f0a2eaa09bcb254d7f12439f442621d_2_689x500.png\" alt=\"IMG_0025\" data-base62-sha1=\"pBBIiDg19vfKNLGcdpmPWsWroPr\" width=\"689\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/3/b376ab484f0a2eaa09bcb254d7f12439f442621d_2_689x500.png, https://ethresear.ch/uploads/default/optimized/3X/b/3/b376ab484f0a2eaa09bcb254d7f12439f442621d_2_1033x750.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/3/b376ab484f0a2eaa09bcb254d7f12439f442621d_2_1378x1000.png 2x\" data-dominant-color=\"F4F3EA\"></a></div><p></p>\n<p>EVM block construction would be modified to enforce the following rules:</p>\n<ul>\n<li>A bundler can only have a single bundle transaction included in a block, and optionally, a bundle is only valid in a certain block. Some business applications would benefit from being able to run bundles in only certain blocks.</li>\n<li>A bundle can specify a bundler that is able to include it in a bundle, for meta-bundle programming.</li>\n<li>A transaction can only be included in a bundle if it specifies bundler, and if a transaction specifies a bundler, the transaction can only be included in a block if it is in a bundle. This is to prevent bundles from clashing with each other, which would cause builders to have extra incentive to include one bundler over another.</li>\n<li>Unlike Ethereum’s current block builder’s bundle interface, transactions in a bundle do not have any non-revert guarantees. On-chain application logic must handle possible reverts. This is again to prevent bundles from clashing with each other.</li>\n</ul>\n<p>The EVM itself would be modified to include the new following global variables:</p>\n<ul>\n<li><code>bundle.signer</code>: the EOA who signed the bundle. Useful for on-chain applications to designate sequencing rights to a specific off-chain entity. The zero address if not in a bundle.</li>\n<li><code>bundle.number</code>: the global number of the bundle’s ordering. Useful for meta-bundle programming. Zero if not in a bundle.</li>\n<li><code>bundle.tx_number</code>: which number this transaction is in the bundle. Useful for on-chain applications to enable special logic depending on transaction sequence. Zero if not in a bundle.</li>\n</ul>\n<p>These new EVM rules and global variables could be a strong starting point for on-chain applications to express how they’d like to be sequenced.</p>\n<p>There are numerous security and caveats to consider in this implementation. EVM bundle creators would need to take care to only sequence on state that they directly control from the start of the block. This is because all other state is potentially manipulatable by outside entities. Bundle creators would have to assume that all transactions could revert due to insufficient gas funds, that any piece of unprotected state could be changed, and that any starting point besides its own external functions are non-deterministic. Sequencing rule assumptions about mutable state could be a new class of audit vulnerabilities.</p>\n<p>Additionally, these rules or language expansions do not preclude block builders existing or making money. Bundlers could construct multiple bundles and rely on block building services to take advantage of the highest result. Inter-bundle arbitrage could be a new solver target. Analogous to the EVM global variables proposed above, <code>tx.number</code> could be included to allow block builders to explicitly sell the right to be the first transaction included.</p>\n<p>Notably, this implementation lacks specification on how on-chain applications would construct bundles. This would be up to the applications to chose between different trust and privacy tradeoffs. Some options would include using:</p>\n<ul>\n<li>Flashbot’s <a href=\"https://suave-alpha.flashbots.net/\" rel=\"noopener nofollow ugc\">Suave</a> TEE enabled decentralized platform for business applications needing confidential compute.</li>\n<li>A sequencing layer, like <a href=\"https://x.com/AstriaOrg\" rel=\"noopener nofollow ugc\">Astria</a>, to construct generic bundles.</li>\n</ul>\n<h2><a name=\"sequencing-rules-an-example-4\" class=\"anchor\" href=\"https://ethresear.ch#sequencing-rules-an-example-4\"></a>Sequencing Rules: An Example</h2>\n<p>I came up with the above Ethereum compatible sequencing rule proposal while trying to program a <a href=\"https://github.com/Lilyjjo/tldr-research\" rel=\"noopener nofollow ugc\">first swap auction for a AMM on Ethereum</a>. This proof of concept aims to implement the sequencing rule ‘the first swap should be auctioned’ for the sake of rerouting some of the CEX-DEX arbitrage back to the pool’s LPs. It utilizes block builder’s current <a href=\"https://docs.flashbots.net/flashbots-auction/advanced/rpc-endpoint#eth_sendbundle\" rel=\"noopener nofollow ugc\">bundle infrastructure</a> to craft bundles and inserts logic on-chain via a signed transaction to enforce that the bundle’s sequence is respected. This proof of concept uses Flashbot’s SUAVE TEE enabled programming environment to craft bundles for the AMM in a trust-reduced manner. This implementation could be easily rewritten with the above EVM native bundle proposal with much better execution costs and guarantees.</p>\n<p>I wrote this post because I’m a frustrated protocol developer who wants to capture the maximal value for my actual users. These are just my thoughts on how we can potentially make “Ethereum Great Again” <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/green_heart.png?v=12\" title=\":green_heart:\" class=\"emoji\" alt=\":green_heart:\" loading=\"lazy\" width=\"20\" height=\"20\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/blue_heart.png?v=12\" title=\":blue_heart:\" class=\"emoji\" alt=\":blue_heart:\" loading=\"lazy\" width=\"20\" height=\"20\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/sparkles.png?v=12\" title=\":sparkles:\" class=\"emoji\" alt=\":sparkles:\" loading=\"lazy\" width=\"20\" height=\"20\">.</p>\n<p>Please leave comments if you have them!</p>\n<p>Thank you to my teammates <a href=\"https://x.com/itamarreif\" rel=\"noopener nofollow ugc\">Itamar</a> and <a href=\"https://x.com/visavishesh\" rel=\"noopener nofollow ugc\">Vishesh</a> at <a href=\"https://x.com/AstriaOrg\" rel=\"noopener nofollow ugc\">Astria</a> for agreeing to talk about auctions for way too long, <a href=\"https://x.com/thelatestindefi\" rel=\"noopener nofollow ugc\">The Latest in Defi Research</a> for providing the community to iterate on these thoughts, and to the Suave team for letting me learn how to build bundles on their platform.</p>\n<p>*Note: these @'s have no endorsement or involvement in this post, these words and opinions are my own :).</p>\n            <p><small>9 posts - 5 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/evm-native-sequencing-rules/19606\">Read full topic</a></p>","link":"https://ethresear.ch/t/evm-native-sequencing-rules/19606","pubDate":"Wed, 22 May 2024 17:06:44 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19606"},"source":{"@url":"https://ethresear.ch/t/evm-native-sequencing-rules/19606.rss","#text":"EVM Native Sequencing Rules"}},{"title":"Unveiling the Power of Self-Sovereign Identity and Account Abstraction for Privacy-Preserving User Operations","dc:creator":"EugeRe","category":"Execution Layer Research","description":"<p>This is a part of a longer research on the topic which ultimately intends to establish a common framework to originate on-chain data and process it to the networks supporting data minimization to balance user privacy and compliance needs.</p>\n<p>I wanted to thank <a href=\"https://www.linkedin.com/in/erwin-voloder-mes-317735125/?original_referer=https%3A%2F%2Fwww%2Egoogle%2Ecom%2F&amp;originalSubdomain=hr\">Erwin Voloder</a>, <a href=\"https://twitter.com/PeteCooling\">Pete Cooling</a>, <a href=\"https://twitter.com/kimdhamilton?lang=en\">Kim Hamilton</a> and <a href=\"https://www.linkedin.com/in/martinschaeffner/\">Martin Schaffner</a>, who personally supported this research in different ways and the people from ERC-4337 Team, specifically <a class=\"mention\" href=\"https://ethresear.ch/u/yoavw\">@yoavw</a> , <a class=\"mention\" href=\"https://ethresear.ch/u/zincoshine\">@zincoshine</a> AA Mafia Telegram Group, <a href=\"https://x.com/alexanderchopan\">Alex</a> and <a href=\"https://twitter.com/randomishwalk?lang=en\">Eric</a>  for further support. This is an ongoing project, I hope you appreciate the forward thinking and we are continuing to work on it. Any feedback or support is appreciated, in light blue hyperlinked public content for reference.</p>\n<p><strong>ABSTRACT</strong><br>\nThis research explores the innovative integration of Self-Sovereign Identity (SSI) systems with Account Abstraction (AA) to enhance privacy, compliance, and user experience on the Ethereum blockchain. By leveraging verifiable credentials (VCs) and Ethereum attestations (EAs), the proposed framework empowers bundlers to pre-validate transactions, reducing on-chain reverts and penalties. The implementation of Merkle proofs and Zero-Knowledge Proofs (ZKPs) ensures efficient data processing and minimal disclosure, addressing both scalability and security concerns.</p>\n<p>A significant highlight is the introduction of keystore rollups, which manage encryption keys off-chain to facilitate atomic cross-chain transactions. These rollups promote interoperability between sequencing networks, ensuring seamless data exchange and robust security. The research underscores the potential of modular blockchain networks and advocates for the adoption of ERC-4337 and future cryptographic advancements to standardize and optimize Ethereum’s execution layer.<br>\n<strong></strong></p><div class=\"lightbox-wrapper\"><strong><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/e/2e77cc94de2442ed8b9e865737b216b820de2396.png\" data-download-href=\"https://ethresear.ch/uploads/default/2e77cc94de2442ed8b9e865737b216b820de2396\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/e/2e77cc94de2442ed8b9e865737b216b820de2396_2_597x354.png\" alt=\"\" data-base62-sha1=\"6D4DbTTkaljJMbgMGtKlmte2pVQ\" width=\"597\" height=\"354\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/e/2e77cc94de2442ed8b9e865737b216b820de2396_2_597x354.png, https://ethresear.ch/uploads/default/optimized/3X/2/e/2e77cc94de2442ed8b9e865737b216b820de2396_2_895x531.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/2/e/2e77cc94de2442ed8b9e865737b216b820de2396_2_1194x708.png 2x\" data-dominant-color=\"666666\"></a></strong></div><p></p>\n<p><strong>THE WORK</strong><br>\nUsing verifiable credentials (VCs) or Ethereum attestations (EAs) to empower bundlers in a shared mempool can potentially reduce the risk of on-chain reverts by sequencers and penalties for block builders. By including data assertions in user operations, bundlers are supported in the pre-validate certain aspects of the transactions. This pre-validation can help identify and filter out operations with a high risk of reverting during execution. This reduces the chances of sequencers including such operations in blocks, lowering the overall revert risk. VCs and EAs provide cryptographic proofs that can be verified by sequencers. These proofs can increase trust in the validity of the operations, making sequencers more confident about including them in blocks.</p>\n<p>This has potential positive consequences in terms of reducing risk of penalties for block builders. . Data assertions containing proofs about transaction ordering can help sequencers resist such manipulation attempts, potentially reducing penalties for block builders who are susceptible to MEV.</p>\n<p>The effectiveness of data assertions in reducing reverts and penalties depends on factors like network assertation standardization and native account abstraction adoption but using VCs and EAs in a shared mempool with ERC-4337 could be considered as first step to it and has the potential to significantly reduce the risk of on-chain reverts and penalties for sequencers and block builders.</p>\n<p>Overall, the complexity of implementing and maintaining new verification logic for bundlers may be compensated by an overall better synergy with the other actors in the network. Specifically on the logic side, general standards like did:pkh or did:dis could find common ground of assessment. In fact, the same verification logic is standards practice for user authentication where user store different assertation on the identity within the wallet application. Extending the same logic approach into the context of smart contract accounts we would suggest for bundlers to store data processing assertation into the mempool of future transactions until consolidated finality is reached.<br>\nAt the same time, a standardized method for signature validation will be required. ERC-1271 enhances the security and interoperability of the system. So to ensure that all signatures whether aggregated or individual, are verified uniformly, reducing the risk of fraud and enhancing trust in the system.<br>\nIn that context ERC-1271 facilitates efficient cross-chain operations by ensuring that signatures required for these transactions are validated consistently across different networks. This reduces the complexity and potential errors in verifying multiple signatures, making cross-chain transactions more efficient and reliable.</p>\n<p><a href=\"https://notes.ethereum.org/@yoav/unified-erc-4337-mempool\">The same verification and validation logic could be extended into a future unified mempool once potentially account abstraction would be natively implemented following 7560/7562 rules.</a></p>\n<p>Including proofs of VCs or EAs adds data to user operations, potentially leading to larger bundles and higher gas costs. This can put pressure on mempool capacity. Utilizing Merkle proofs within VCs can allow bundlers to verify the inclusion of specific data elements without needing the entire credential, reducing the amount of data processed. Merkle trees are a cryptographic data structure that allows for efficient verification of the membership of a specific data element within a larger set.</p>\n<p>After user authentication, for each user operation, the bundler includes a Merkle proof. This proof is a concise piece of data that demonstrates the specific assertion’s inclusion within the Merkle tree of the entire bundle. This can significantly reducing the overall size of the bundle compared to including the full VCs or EAs.</p>\n<p>VCs and EAs still remain crucial for containing the actual data and claims associated with user operations. Merkle proof act as a verification tool. They provide a concise way to prove that a specific VC or EA exists within a larger bundle of assertions without revealing the entire content of the VC/EA itself. This may help mitigate pressure on the mempool and potentially lowers gas costs.</p>\n<p>This would imply for bundlers to access a privacy preserving shared mempool ID and establish a dedicated membership set for associated bundle of transactions, so that Sequencers can verify the inclusion of user operations in the bundle. Sequencers or other network participants can efficiently verify the validity of data assertions using the Merkle proofs. They only need to verify the proof itself, not the entire data within the assertion, reducing the computational burden.</p>\n<p>VCs and EAs rely on the underlying logic verification process for authentication and authorization that should be implemented by bundlers. Verifying VCs or EAs requires processing cryptographic proofs. This can be computationally expensive for bundlers, especially for complex assertions.</p>\n<p><a href=\"https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4563364\">Merkle proofs can be combined with ZKPs for a powerful solution.</a> ZKPs can be used within the data assertions themselves to prove the validity of claims without revealing the underlying data. Merkle proofs ensure the integrity of the bundle and verify the inclusion of specific assertions with ZKPs within the bundle. Also, using ZKPs in VCs or EAs could reduce the amount of data included in the bundle, minimizing disclosure, and lowering computational costs.</p>\n<p>Combining SSI verification with AA provides Ethereum a customizable authorization logic that can leverage national data repositories and business and regulatory standards before easily executing global on-chain operations. In this context, embedding a trust less verification logic can support standardizing user operations and streamlining sequencing activities, and so harmonizing operations across L2 transactions for unlocking cross chain atomic transaction and still ensuring efficient data processing compliant with data minimization.</p>\n<p>The transaction generation, submission and execution flow can be represented with an interchained process of triangles of trust representing each moment as described here.</p>\n<p><strong></strong></p><div class=\"lightbox-wrapper\"><strong><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/5/957433820f871fd453df50f9074cc21fd4bd9e1e.png\" data-download-href=\"https://ethresear.ch/uploads/default/957433820f871fd453df50f9074cc21fd4bd9e1e\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/5/957433820f871fd453df50f9074cc21fd4bd9e1e_2_643x361.png\" alt=\"\" data-base62-sha1=\"lk86o2b0PTKtbNka0sbQn3ZyNdk\" width=\"643\" height=\"361\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/5/957433820f871fd453df50f9074cc21fd4bd9e1e_2_643x361.png, https://ethresear.ch/uploads/default/optimized/3X/9/5/957433820f871fd453df50f9074cc21fd4bd9e1e_2_964x541.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/9/5/957433820f871fd453df50f9074cc21fd4bd9e1e_2_1286x722.png 2x\" data-dominant-color=\"F4F4F4\"></a></strong></div><p></p>\n<p>The market pushing for an evolution of networks towards to modular blockchains is proposing concepts of shared mempools and shared sequencing that can embed trustless verification logic typical of SSI systems to establish a root of trust from user authentication until block validation still relying on Ethereum main network as indisputable security layer.</p>\n<p>This combination minimizes data disclosure while maintaining efficient verification, making the system more scalable and privacy-preserving.</p>\n<p><strong><a href=\"https://hackmd.io/@haichen/keystore\">Key store contract</a> <a href=\"https://hackmd.io/@haichen/keystore\">for flexible and efficient key management system</a></strong></p>\n<p>To further enhance standardization and interoperability considering key management an important function to manage user authentication and transaction authorization. A keystore contract paired with zero-knowledge proofs (ZKPs) has the potential to significantly improve the verification logic and overall functionality of data assertions within the ERC-4337 framework.</p>\n<p>The keystore contract can securely store and manage encryption keys used by bundlers to encrypt user operations within bundles after authentication. This can ensure that only authorized parties (with the appropriate decryption key) can access the sensitive data within the bundle.<br>\n</p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/2/42da34932f49f48f96077877f991029db0d43fb4.png\" data-download-href=\"https://ethresear.ch/uploads/default/42da34932f49f48f96077877f991029db0d43fb4\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/2/42da34932f49f48f96077877f991029db0d43fb4_2_517x182.png\" alt=\"image\" data-base62-sha1=\"9xp0Z7yHybgHoue33xAye0bRoAk\" width=\"517\" height=\"182\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/2/42da34932f49f48f96077877f991029db0d43fb4_2_517x182.png, https://ethresear.ch/uploads/default/optimized/3X/4/2/42da34932f49f48f96077877f991029db0d43fb4_2_775x273.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/2/42da34932f49f48f96077877f991029db0d43fb4_2_1034x364.png 2x\" data-dominant-color=\"C6C7C1\"></a></div><p></p>\n<p>The keystore contract can facilitate the pairing of the correct key with specific data assertions within a bundle. This allows different network participants (builders and sequencers) to efficiently verify the authenticity of the data using the corresponding ZKPs without needing the actual data itself. A minimal keystore rollup deployed on Layer 2 can handle a large volume of key management and verification processes off-chain, reducing the load on the main Ethereum network.</p>\n<p>Many layers 2 networks are working on the rollup can be designed to be interoperable with different Layer 2 networks also leveraging shared sequencing. This allows for seamless data exchange and verification between different ecosystems, fostering a more interconnected environment supported of atomic cross chain transaction data process minimization and standardization.</p>\n<p><strong>Here is a potential process workflow and designed architecture:</strong></p>\n<p>The architecture is composed by three main layers:</p>\n<ol>\n<li>An application layer comprises wallets, PKIs apps, and SSI wallet such as Polygon ID, ZkSync ID, and other apps. These wallets and applications generate Verifiable Credentials (VCs) to prove ownership, such as being a DAO member. Users create operations as user intents via bundlers, enabling transactions and interactions on the blockchain. This layer facilitates the generation and management of credentials and user operations as “user intents” through apps, serving as the interface between users and the underlying blockchain infrastructure.</li>\n<li>A network layer based on different L2s, which include a Keystore contract and Smart Contract Accounts. This layer is responsible for generating Zero-Knowledge Proofs (ZKPs) for bundlers and Merkle proofs for Sequencers. The Keystore contract manages encryption keys and user authentication, ensuring secure handling of credentials and operations. Smart Contract Accounts validate user operations, generating cryptographic proofs to ensure the integrity and validity of transactions before they are submitted to the blockchain for execution.</li>\n<li>A sequencing layer which interconnect L2s with Ethereum main-net and manages the execution of batches of transactions anchoring Roll-up IDs to sequencing networks ( projects like SUAVE, Polygon Agg Layer, Espresso Capuccino). Main functions here are batching, validation of  transactions via the Keystore roll-up, and  the Roll-up contract within Ethereum’s slots. This layer ensures efficient transaction processing by batching multiple operations into single transactions, reducing on-chain congestion and costs. Additionally, it enable cross-chain atomic transactions, enabling seamless interoperability across different blockchain networks, ensuring that transactions are securely validated and finalized.</li>\n</ol>\n<p><strong></strong></p><div class=\"lightbox-wrapper\"><strong><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/7/676efe42126406535aece6ca6d086ff7e6396736.png\" data-download-href=\"https://ethresear.ch/uploads/default/676efe42126406535aece6ca6d086ff7e6396736\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/7/676efe42126406535aece6ca6d086ff7e6396736_2_687x392.png\" alt=\"\" data-base62-sha1=\"eL0YQ2NAoChvwfY0ub9iXBZr64e\" width=\"687\" height=\"392\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/7/676efe42126406535aece6ca6d086ff7e6396736_2_687x392.png, https://ethresear.ch/uploads/default/optimized/3X/6/7/676efe42126406535aece6ca6d086ff7e6396736_2_1030x588.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/6/7/676efe42126406535aece6ca6d086ff7e6396736_2_1374x784.png 2x\" data-dominant-color=\"303030\"></a></strong></div><p></p>\n<ol>\n<li>User Authentication: Users authenticate using Verifiable Credentials (VCs) . They share Zero-Knowledge Proofs (ZKPs) of their credentials through a smart contract registry and sign user operations on a dedicated bundler.</li>\n<li>Bundler Operations: Bundlers access a shared mempool ID, create bundles of verified user operations, establish a dedicated Merkle tree for each bundle post-authentication, and share the Merkle proofs and ZKPs with the Sequencer. They submit the transaction bundles to the Smart Contract Account (entry point).</li>\n<li>Sequencer Verification: Sequencers verify Merkle proofs and ZKPs related to VCs. They validate bundles of transactions through the Smart Contract Account and submit them to the Block-builder for inclusion in a new block.</li>\n<li>Keystore Rollup: The keystore contract and rollup manage key functions, including user authentication, transaction submission, validation, and key recovery.</li>\n<li>Batching Transactions: Sequencer batch transactions into new block of Roll up IDs and submit them in batches via the Rollup contracts for validation on L1, verified by ZK validity proofs.</li>\n<li>Rollup Validation: The Rollup contract validates ZK proofs of batches, and the block is  finalized or reverted if validation fails.</li>\n</ol>\n<p>Specifically in this scenario, proposals as ERC 5792 acts as a crucial bridge between user-facing applications and the infrastructure of the ERC-4337 framework. The proposal defines a common language for wallets, apps, and bundlers to communicate each other and it has the potential to significantly enhance the adoption of Smart Contract Accounts and position as the go-to standard for data assertions on the Ethereum blockchain.</p>\n<p>Wallets and apps could signal user preferences (e.g., gas fees, preferred chain ID, or shared sequencer), required data assertions (VCs/EAs) for specific transactions.</p>\n<p>Bundlers could leverage the received signals to automatically construct appropriate bundles for user transactions including user operations data, Merkle proofs for associated VCs/EAs and ZKP of user data claim. With this having an overall improvement for user flexibility, network decentralization and scalability.</p>\n<p>The proposed design also goes into the direction of modular networks that can be built over Ethereum network by the Ethereum community. In this modular scenario ERC 4337 and future developments benefits from possible future implementations as Verkle trees or consensus related proposals as ePBS.</p>\n<p>Bundlers create bundles containing user operations, Merkle proofs, VCs/EAs (potentially with ZKPs), and additional data.</p>\n<p>Sequencers verify Merkle proofs and potentially VCs/EAs within bundles, order bundles, perform additional verification if needed, submit pre-built blocks to validators.</p>\n<p>Before accepting the request, the sequencer should:</p>\n<ul>\n<li>If block range was given, check that the block number is within the range.</li>\n<li>If timestamps range was given, check that the block’s timestamp is within the range.</li>\n<li>For an address with a storage root hash, validate the current root is unmodified.</li>\n<li>For an address with a list of slots, it should verify that all these slots hold the exact value specified.</li>\n</ul>\n<p><a href=\"https://notes.ethereum.org/@yoav/SkaX2lS9j#\">The sequencer should REJECT the request if any address is doesn’t pass the above rules.</a></p>\n<p>Builders construct valid blocks based on pre-verified and potentially pre-ordered bundles received from sequencers, considering block gas limits and network conditions. Ultimately, validators verify the validity of submitted blocks (including the validity of the included bundles), reach consensus on block inclusion in the blockchain.</p>\n<p><strong>CONCLUSION</strong><br>\nDriving towards the adoption of blockchain services implies relying on modular networks that can balance security, scalability and decentralization to populate an ecosystem of applications as plug and play solutions for dedicated use cases, in this regard combining SSI verification logic into the network operations to users and machines to support accountability and compliant data processing process is key. Smart Contract Accounts can facilitate adoption by flexible UX and shared sequencing networks support cross chain atomic transaction reconciliation. The narrative of this research wants to emphasize the need to abstract complexities from accounts, and networks where decentralized identifiers and keystore roll up can facilitate the verification and execution of sequencing networks.</p>\n<p><strong>Takeaways</strong>:</p>\n<ul>\n<li>\n<p><strong>SSI</strong>: Integrates trustless identification, enhancing privacy and data minimization.</p>\n</li>\n<li>\n<p><strong>AA</strong>: Simplifies user experience and facilitates regulatory compliance and governance needs.</p>\n</li>\n<li>\n<p><strong>Verifiable Credentials (VCs) and Ethereum Attestations (EAs)</strong>: Used to empower bundlers, reducing the risk of on-chain reverts and penalties for block builders by providing cryptographic proofs.</p>\n</li>\n<li>\n<p><strong>Merkle Proofs</strong>: Efficiently verify specific data elements within larger sets, mitigating mempool pressure and lowering gas costs.</p>\n</li>\n<li>\n<p><strong>Zero-Knowledge Proofs (ZKPs)</strong>: Enhance privacy by proving the validity of claims without revealing underlying data.</p>\n</li>\n<li>\n<p><strong>Shared Mempools</strong>: Facilitate bundler operations and reduce computational burdens.</p>\n</li>\n<li>\n<p><strong>Keystore rollups</strong> Enhance atomic cross-chain transactions across sequencing networks by providing a scalable and interoperable key management solution that ensures seamless data exchange and verification across different L2.*</p>\n</li>\n</ul>\n<p><strong>References</strong>:<br>\n<a href=\"https://notes.ethereum.org/@yoav/AA-roadmap-May-2024\">Notes on the Account Abstraction roadmap</a><br>\n<a href=\"https://github.com/ethereum/RIPs/blob/e3bead34f1bcf1aa37fd51923ad99a77b801775c/RIPS/rip-7560.md#unused-gas-penalty-charge\">RIP 7560</a><br>\n<a href=\"https://eips.ethereum.org/EIPS/eip-7562\">EIP 7562</a><br>\n<a href=\"https://hackmd.io/@alexforshtat/native-account-abstraction-roadmap\">Roadmap for Native Account Abstraction Introduction</a>)<br>\n<a href=\"https://notes.ethereum.org/@yoav/unified-erc-4337-mempool\">Unified ERC-4337 mempool</a><br>\n<a href=\"https://papers.ssrn.com/sol3/cf_dev/AbsByAuth.cfm?per_id=6131244\">Blockchain Privacy and Regulatory Compliance: Towards a Practical Equilibrium</a><br>\n<a href=\"https://hackmd.io/@haichen/keystore\">Keystore Design</a><br>\n<a href=\"https://notes.ethereum.org/@vbuterin/minimal_keystore_rollup\">Dedicated minimal rollup for keystores</a><br>\n<a href=\"https://notes.ethereum.org/@yoav/SkaX2lS9j#\">Integration API for EIP-4337 bundler with an L2 validator/sequencer</a><br>\n<a href=\"https://etherspot.io/blog/decentralized-future-erc-4337-shared-mempool-launches-on-ethereum/\">Decentralized Future: ERC-4337 Shared Mempool Launches on Ethereum</a><br>\n<a href=\"https://www.w3.org/TR/vc-data-model-2.0/#:~:text=A%20verifiable%20credential%20is%20a,certificates%2C%20and%20digital%20educational%20certificates.\">Verifiable Credentials Data Model v2.0</a><br>\n<a href=\"https://attest.org/\">Ethereum Attestation Service</a><br>\n<a href=\"https://mirror.xyz/0xeee68aECeB4A9e9f328a46c39F50d83fA0239cDF/afmS07VvelERZHzG6SSzhOKJlNwhU3jsE-4atkbNZto\">Supercharging Account Abstraction with Attestations</a><br>\n<a href=\"https://hackmd.io/@mdehoog/mksr\">Minimal KeyStore Rollup spec</a><br>\n<a href=\"https://eips.ethereum.org/EIPS/eip-1271\">ERC-1271: Standard Signature Validation Method for Contracts</a></p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/unveiling-the-power-of-self-sovereign-identity-and-account-abstraction-for-privacy-preserving-user-operations/19599\">Read full topic</a></p>","link":"https://ethresear.ch/t/unveiling-the-power-of-self-sovereign-identity-and-account-abstraction-for-privacy-preserving-user-operations/19599","pubDate":"Mon, 20 May 2024 15:05:28 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19599"},"source":{"@url":"https://ethresear.ch/t/unveiling-the-power-of-self-sovereign-identity-and-account-abstraction-for-privacy-preserving-user-operations/19599.rss","#text":"Unveiling the Power of Self-Sovereign Identity and Account Abstraction for Privacy-Preserving User Operations"}},{"title":"Derivatives Market for Implementing Based Sequencing","dc:creator":"0xTariz","category":"Economics","description":"<p>Authors: <a href=\"https://x.com/Hyunxukee\" rel=\"noopener nofollow ugc\">Tariz</a> (<a href=\"https://x.com/radius_xyz\" rel=\"noopener nofollow ugc\">Radius</a>)</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/0/1082a792a892a3e09ad171507d684219426b59dc.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/1082a792a892a3e09ad171507d684219426b59dc\" title=\"8qmb0g\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/0/1082a792a892a3e09ad171507d684219426b59dc_2_690x388.jpeg\" alt=\"8qmb0g\" data-base62-sha1=\"2m3z4sIChJ9yHQOLZQ26ZnXfs7y\" width=\"690\" height=\"388\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/0/1082a792a892a3e09ad171507d684219426b59dc_2_690x388.jpeg, https://ethresear.ch/uploads/default/original/3X/1/0/1082a792a892a3e09ad171507d684219426b59dc.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/1/0/1082a792a892a3e09ad171507d684219426b59dc.jpeg 2x\" data-dominant-color=\"77605A\"></a></div><p></p>\n<p><em>Special thanks to <a href=\"https://x.com/NathanYJLee\" rel=\"noopener nofollow ugc\">Nathan</a> from <a href=\"https://x.com/factomind\" rel=\"noopener nofollow ugc\">Factomind</a> for his valuable advice on the design of the derivatives market.</em></p>\n<h1><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a><strong>TL;DR</strong></h1>\n<p>This article introduces a derivatives market designed to implement based sequencing for fast finality in rollups. The proposed market aims to align incentives between Ethereum and rollups, mitigate operational risks associated with rollups, and promote voluntary participation and fair competition among rollups, proposers, and builders.</p>\n<p>The unique design allows rollups to act as preconf providers, offering users fast preconfirmation while minimizing censorship, sandwich attacks, and frontrunning risks.</p>\n<blockquote>\n<p><em>For the full proposal, please refer to the complete <a href=\"https://mirror.xyz/tariz.eth/-TZxI3AplP-O11i-yTnyfPjwiaPOUvaWOZ32xqbpnQE\" rel=\"noopener nofollow ugc\">blog post</a>. This summary covers only the key design aspects.</em></p>\n</blockquote>\n<h1><a name=\"motivation-2\" class=\"anchor\" href=\"https://ethresear.ch#motivation-2\"></a>Motivation</h1>\n<p>If rollups, acting as preconf providers, pay proposers to pre-purchase the block building rights for specific slots, they can deterministically promise settlement to users by owning the Ethereum block. This mechanism allows rollups to achieve fast preconfirmation through self-sequencing. However, the difficulty in predicting future block prices introduces operational risks for rollups. To offset these operational risks and create a fair market that encourages active participation from traders, I propose a series of derivatives.</p>\n<blockquote>\n<p><em>This idea is connected to the implementation of delegated preconf mentioned in <a class=\"mention\" href=\"https://ethresear.ch/u/justindrake\">@JustinDrake</a> <a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">based preconfirmation</a>.</em></p>\n</blockquote>\n<h1><a name=\"forward-contract-3\" class=\"anchor\" href=\"https://ethresear.ch#forward-contract-3\"></a><strong>Forward Contract</strong></h1>\n<p>The process of a rollup purchasing the block building rights for a specific slot from a proposer can be likened to a forward contract in financial markets. To understand the operational risks a rollup might face in this transaction, let’s consider a basic scenario involving a 32-slot lookahead for the proposer and a slot auction.</p>\n<ol>\n<li>At t = 1, the rollup participates in a slot auction to purchase a forward contract with the proposer for a specific slot.</li>\n<li>From t = 2 onwards, after securing the slot, the rollup sequences its users’ transactions, providing preconfirmation to users and generating revenue from the block.</li>\n<li>At t = 3, the rollup requests the execution of the forward contract, compressing its transactions into an Ethereum block and submitting them to the proposer.</li>\n<li>At t = 4, the proposer fulfills the contract by signing the received block and proposing it on Ethereum.</li>\n</ol>\n<p><strong>Operational Risks for Rollups</strong></p>\n<ol>\n<li><strong>Excessive Payment Risk</strong>: Rollups may find it challenging to accurately predict block value, leading to overpayment for block space. This occurs because they have to participate in slot auctions and purchase the entire space even if they only need a portion for settlement.</li>\n<li><strong>Revenue Uncertainty</strong>: Rollups cannot reliably predict their future revenue. If transaction costs exceed revenue, they may face potential financial risks.</li>\n<li><strong>Increased Labor Costs</strong>: To ensure stable operations, rollups must now engage in activities such as predicting Ethereum block values, competing with builders, and accurately forecasting revenues, which were previously unnecessary.</li>\n</ol>\n<h1><a name=\"derivative-market-4\" class=\"anchor\" href=\"https://ethresear.ch#derivative-market-4\"></a>Derivative Market</h1>\n<p>To mitigate the operational risks faced by rollups, we propose a derivatives market involving specialized participants, builders. This market includes two key derivatives: a forward contract between the builder and the proposer, and a swap contract between the rollup and the builder.</p>\n<ol>\n<li>At t = 1, the builder participates in a slot auction and enters into a forward contract with the proposer for the block building right.</li>\n<li>At t = 2, the rollup and the builder enter into a swap contract. This contract obligates the builder to include the rollup’s transactions in the block.</li>\n<li>At t = 3, utilizing the block building right secured through the swap contract, the builder constructs the rollup block up until t = 4, thereby generating revenue.</li>\n<li>At t = 4, the rollup demands contract fulfillment according to the obligations stipulated in the swap contract:\n<ul>\n<li>The rollup requires the builder to include its transactions in the Ethereum block secured through the forward contract.</li>\n<li>To maximize revenue, the builder places the rollup’s transactions at the bottom of the Ethereum block and its own transactions at the top, forming a complete block.</li>\n</ul>\n</li>\n<li>At t = 5, the builder delivers the Ethereum block to the proposer, who then proposes it on Ethereum, fulfilling the forward contract.</li>\n</ol>\n<p><strong>Motivation for Participation</strong></p>\n<ul>\n<li><strong>Rollup</strong>: Rollups participate to provide deterministic preconfirmation to users regarding their inclusion in Ethereum, while mitigating the operational risks associated with purchasing block space. Preconfirmed transactions are guaranteed inclusion in the Ethereum block, avoiding the risk of spending more than their revenue on block space. This eliminates the need for unnecessary labor in price prediction and auction participation.</li>\n<li><strong>Builder</strong>: Builders participate to reduce the risk of overpayment from slot auctions. The secured Ethereum block space, along with the rollup block, offers dual revenue streams, diversifying and reducing the risk of loss.</li>\n<li><strong>Proposer</strong>: Proposers participate to receive compensation for rollup preconfirmation. Builders consider the revenue generated from rollup blocks when bidding in slot auctions, aligning proposer incentives with rollup settlement.</li>\n</ul>\n<h1><a name=\"additional-design-5\" class=\"anchor\" href=\"https://ethresear.ch#additional-design-5\"></a><strong>Additional Design</strong></h1>\n<p>To effectively implement these financial products, it is crucial to create an environment where all participants can compete fairly and engage actively. This involves three key additional design elements.</p>\n<p><strong>Conditional Swap Contract</strong></p>\n<p>Rollups may be hesitant to participate if they are required to allocate all potential revenue opportunities to builders through a swap contract. To encourage rollup participation, a conditional swap contract is proposed.</p>\n<p>In this arrangement, if the builder generates profits from the rollup’s block building that exceed the fixed costs paid in the forward contract with the proposer, the rollup is allowed to stop providing the remaining block space to the builder. The rollup can then use the remaining block space to either build independently or auction it to builders for additional revenue.</p>\n<p>This approach preserves the builder’s incentive to participate while protecting the rollup’s opportunity to generate revenue.</p>\n<p><strong>Competitive Proposer Market</strong></p>\n<p>Settlement is essential for rollups to inherit Ethereum’s security. When rollups are compelled to purchase blocks, proposers/builders gain significant pricing power, potentially leading to an uneven playing field that undermines market fairness and efficiency.</p>\n<p>To reduce the pricing power of any single builder, multiple builders should be encouraged to participate in swap transactions, fostering competition among them. This requires expanding the forward contract market to include multiple proposers with block building rights for different slots.</p>\n<p>Such a structure ensures that the variable value of the rollup’s block aligns more closely with the fixed cost of acquiring Ethereum block space. This is analogous to achieving a ‘par value’ of zero for swap contracts in a competitive market, maintaining reasonable costs for rollups. The lookahead necessary to achieve this par value requires further discussion.</p>\n<p><strong>Syndicated Rollup Strategy: Derivatives for All Rollups</strong></p>\n<p>Builders may be unwilling to engage with rollups that have relatively low block value, potentially marginalizing app-specific rollups in the market.</p>\n<p>The Syndicated Rollup Strategy groups multiple rollups into a syndicate, enhancing their market participation. Cross-rollup arbitrage has the potential to increase the value of each block. Builders receive the block building rights for the rollups in the group, and the rollups require the builder to include all group transactions in the Ethereum block.</p>\n<h1><a name=\"building-blocks-in-rollups-6\" class=\"anchor\" href=\"https://ethresear.ch#building-blocks-in-rollups-6\"></a><strong>Building Blocks in Rollups</strong></h1>\n<p>This section describes how builders secure rollup block building rights through swap contracts, focusing on censorship resistance and fast preconfirmation for user-centric rollups.</p>\n<p><strong>Censorship Resistance</strong></p>\n<p>In a structure similar to Proposer-Builder Separation (PBS), rollups that enter into swap contracts receive blocks from builders and execute them. However, this setup may expose users to censorship, sandwich attacks, and frontrunning by builders. Rollups can address these issues by integrating Radius’s <a href=\"https://docs.theradius.xyz/testnet/curie-testnet/encrypted-mempool\" rel=\"noopener nofollow ugc\">sequencing engine</a>.</p>\n<ul>\n<li><strong>Encrypted Mempool (using <a href=\"https://ethresear.ch/t/radius-skde-enhancing-rollup-composability-with-trustless-sequencing/19185\">delay encryption</a>)</strong>: Users’ transactions are encrypted until the promise of inclusion in the rollup block is issued.</li>\n<li><strong>Decryption and Execution</strong>: Once inclusion is confirmed, transactions are decrypted and executed by the rollup, providing preconfirmation similar to standard transactions.</li>\n<li><strong>Economic Order Guarantees</strong>: By assigning an order to the inclusion promises, the economic guarantees ensure that transactions cannot be reordered after decryption, minimizing the risk of frontrunning and sandwich attacks.</li>\n</ul>\n<p><strong>Fast Preconfirmation</strong></p>\n<p>Rollups can achieve fast preconfirmation by designating the preconf provider as their sequencer and implementing self-sequencing. Block space is divided into two segments: Top-of-Block (ToB) and Bottom-of-Block (BoB).</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/d/2/d23430465b0f7160e93904427eba688aef1fff2f.png\" data-download-href=\"https://ethresear.ch/uploads/default/d23430465b0f7160e93904427eba688aef1fff2f\" title=\"스크린샷 2024-05-07 오후 12.44.26\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/d/2/d23430465b0f7160e93904427eba688aef1fff2f_2_690x366.png\" alt=\"스크린샷 2024-05-07 오후 12.44.26\" data-base62-sha1=\"tZy56lMBexmrb7iz0LDznXskJiv\" width=\"690\" height=\"366\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/d/2/d23430465b0f7160e93904427eba688aef1fff2f_2_690x366.png, https://ethresear.ch/uploads/default/optimized/3X/d/2/d23430465b0f7160e93904427eba688aef1fff2f_2_1035x549.png 1.5x, https://ethresear.ch/uploads/default/original/3X/d/2/d23430465b0f7160e93904427eba688aef1fff2f.png 2x\" data-dominant-color=\"E8E7E6\"></a></div><p></p>\n<ul>\n<li>\n<p><strong>Top-of-Block (ToB)</strong>: This space is allocated to the builder under the swap contract. The builder creates a backrunning bundle based on the rollup’s previous block state and submits it to the rollup’s sequencer.</p>\n</li>\n<li>\n<p><strong>Bottom-of-Block (BoB)</strong>: This space is reserved for end-user transactions. The rollup sequences these transactions and provides preconfirmation.</p>\n<p>Using Radius’s sequencing engine in BoB protects users’ transactions from censorship by the sequencer and harmful MEV by the builder, as the builder cannot see the user’s transactions when creating the ToB.</p>\n</li>\n</ul>\n<p><strong>Syndicated Rollup Strategy</strong></p>\n<p>In a syndicated rollup strategy, a group of rollups entering into swap contracts with a builder allocates ToB space to the builder. The builder submits a cross-rollup bundle to be included in the ToB.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/4/c4dcc9cf943b6b8894cbabc1360b8aa91e92b141.png\" data-download-href=\"https://ethresear.ch/uploads/default/c4dcc9cf943b6b8894cbabc1360b8aa91e92b141\" title=\"스크린샷 2024-05-10 오전 11.09.13 (1)\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/4/c4dcc9cf943b6b8894cbabc1360b8aa91e92b141_2_690x432.png\" alt=\"스크린샷 2024-05-10 오전 11.09.13 (1)\" data-base62-sha1=\"s5wCva1N40Czigkkoa0abMvvOA9\" width=\"690\" height=\"432\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/4/c4dcc9cf943b6b8894cbabc1360b8aa91e92b141_2_690x432.png, https://ethresear.ch/uploads/default/original/3X/c/4/c4dcc9cf943b6b8894cbabc1360b8aa91e92b141.png 1.5x, https://ethresear.ch/uploads/default/original/3X/c/4/c4dcc9cf943b6b8894cbabc1360b8aa91e92b141.png 2x\" data-dominant-color=\"F0EFEE\"></a></div><p></p>\n<p>A <a href=\"https://docs.theradius.xyz/testnet/portico-testnet/multi-rollup-sequencing\" rel=\"noopener nofollow ugc\">Shared Sequencing Engine</a> aims to ensures smooth contract execution between rollups and builders. It will verifies that the builder submitting the bundle is a party to the swap contract and is designed to ensure that all rollups in the group fulfill the contract by including the builder’s submitted bundles in ToB.</p>\n<p>Rollups can choose the shared sequencing engine for BoB sequencing. This allows the selected sequencer to act as a shared preconf provider, supporting atomic inclusion for end-users across multiple rollups.</p>\n<h1><a name=\"conclusion-7\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-7\"></a><strong>Conclusion</strong></h1>\n<p>I am enthusiastic about the future of a rollup-centric Ethereum and am dedicated to exploring designs that benefit rollup users. A derivatives market that incentivizes voluntary participation of Ethereum for rollup settlements can significantly contribute to the effective implementation of based sequencing. My future research related to the derivatives market includes the following areas:</p>\n<ul>\n<li>Exploring the technical requirements necessary for market implementation.</li>\n<li>Updating the design to accommodate rollups utilizing blobspace.</li>\n<li>Proposing additional designs that can contribute to Ethereum’s decentralization, potentially considering the separation of beacon proposers and execution proposers as suggested in <a class=\"mention\" href=\"https://ethresear.ch/u/mikeneuder\">@mikeneuder</a> <a href=\"https://ethresear.ch/t/execution-tickets/17944\">Execution Ticket</a> and <a class=\"mention\" href=\"https://ethresear.ch/u/barnabe\">@barnabe</a> <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\" rel=\"noopener nofollow ugc\">APS-Burn</a>.</li>\n</ul>\n<p>Beyond the derivatives market, I am exploring various methods for implementing based sequencing. I look forward to contributing to this field through diverse feedback and collaboration within the community.</p>\n            <p><small>6 posts - 4 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/derivatives-market-for-implementing-based-sequencing/19593\">Read full topic</a></p>","link":"https://ethresear.ch/t/derivatives-market-for-implementing-based-sequencing/19593","pubDate":"Mon, 20 May 2024 03:49:17 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19593"},"source":{"@url":"https://ethresear.ch/t/derivatives-market-for-implementing-based-sequencing/19593.rss","#text":"Derivatives Market for Implementing Based Sequencing"}},{"title":"DAS fork-choice","dc:creator":"fradamt","category":"Consensus","description":"<p><em>Written by <a href=\"https://twitter.com/fradamt\" rel=\"noopener nofollow ugc\">Francesco</a>, <a href=\"https://twitter.com/luca_zanolini\" rel=\"noopener nofollow ugc\">Luca</a> and <a href=\"https://twitter.com/robsaltini\" rel=\"noopener nofollow ugc\">Roberto</a></em></p>\n<p>The goal of this document is to deepen our understanding of the interactions between the fork-choice and the data availability layer after introduction of data availability sampling (DAS), with the aim of mitigating potential attacks that arise. To achieve this, we first identify potential attacks under the current fork-choice specification and suggest strategies to counter them. This analysis assumes familiarity with <a href=\"https://github.com/ethereum/consensus-specs/blob/d29581315579d37064abf21b174750f9d5c099c0/specs/phase0/fork-choice.md\" rel=\"noopener nofollow ugc\">the current fork-choice</a> and <a href=\"https://notes.ethereum.org/@luca-zanolini/Skf98kZ_i\" rel=\"noopener nofollow ugc\">known attacks</a>, and with <a href=\"https://github.com/ethereum/consensus-specs/blob/d29581315579d37064abf21b174750f9d5c099c0/specs/_features/eip7594/das-core.md\" rel=\"noopener nofollow ugc\">PeerDAS</a>.</p>\n<h2><a name=\"distribution-phase-and-sampling-phase-1\" class=\"anchor\" href=\"https://ethresear.ch#distribution-phase-and-sampling-phase-1\"></a>Distribution phase and sampling phase</h2>\n<p>Recall that in <a href=\"https://ethresear.ch/t/peerdas-a-simpler-das-approach-using-battle-tested-p2p-components/16541\">PeerDas</a>, each blob is individually extended horizontally, stacked vertically and subdivided in <code>NUM_COLUMNS</code> columns, which are used as the sampling unit. PeerDas comprises two phases: a distribution phase and a sampling phase. In the distribution phase, columns are allocated among subsets of validators, with each subset tasked with the custody of one or more columns (<code>CUSTODY_REQUIREMENT</code>). Subsequently, in the sampling phase, validators request samples to verify data availability. These samples, or columns, are acquired from peers through a request/response mechanism. The distribution phase can also serve as a kind of preliminary sampling phase, enabling a validator to consider data available if all the columns it’s required to custody are available, even before completing the actual sampling phase. This proves especially valuable when employing a <em>trailing fork-choice</em> function, a concept explaned further below.</p>\n<h2><a name=\"tight-fork-choice-2\" class=\"anchor\" href=\"https://ethresear.ch#tight-fork-choice-2\"></a>Tight fork-choice</h2>\n<p>Ideally, <em>almost</em> all honest validators would ever only vote for blocks that are fully available, without needing to download all of the data. To achieve this, we can require a sufficiently high amount of sampling to be completed before ever voting for a block. We refer to this as the <em>tight fork-choice</em>. In PeerDAS, this would mean that validators are required to perform peer sampling immediately upon receiving a block, and cannot vote for it without completing it. This gives us a useful property, which we call <em><span class=\"math\">\\delta</span>-safety of sampling</em>, for some <span class=\"math\">\\delta \\in [0,1/2]</span> dependent on the amount of sampling (<span class=\"math\">\\delta \\to 0</span> as number of samples increases)</p>\n<blockquote>\n<p><span class=\"math\">\\delta</span>-safety of sampling: If some data is less than half-available, at most a fraction <span class=\"math\">\\delta</span> of the honest validators will perceive it as available. As a consequence, no more than a fraction <span class=\"math\">\\delta</span> of the honest validators would vote for an unavailable block.</p>\n</blockquote>\n<h2><a name=\"trailing-fork-choice-3\" class=\"anchor\" href=\"https://ethresear.ch#trailing-fork-choice-3\"></a>Trailing fork-choice</h2>\n<p>However, to avoid additional steps between the distribution of blocks and columns and voting, one might consider relaxing this requirement, with the goal of taking peer sampling out of the critical path. Specifically, <a href=\"https://ethresear.ch/t/peerdas-a-simpler-das-approach-using-battle-tested-p2p-components/16541#a-note-on-fork-choice-14\">it has been proposed</a>, and <a href=\"https://github.com/ethereum/consensus-specs/issues/3652\" rel=\"noopener nofollow ugc\">is still being discussed</a>, that validators could forego completing the peer sampling process before casting a vote for the currently proposed block, and postpone it until the next slot (or even further in the future). Instead, they would base their vote on the outcome of the column distribution; if all the data within its assigned subnets is available, a validator deems the entire block available and votes accordingly. Peer sampling for this block would then only be required to be completed before the next slot. We refer to this as <em>the trailing fork-choice</em>.</p>\n<p>Using the trailing fork-choice does not necessarily mean entirely giving up on <span class=\"math\">\\delta</span>-safety of sampling, even during the “trailing period”. In fact, incorporating a sufficient amount of <a href=\"https://ethresear.ch/t/subnetdas-an-intermediate-das-approach/17169\"><em>subnet sampling</em></a> in the column distribution phase allows us to preserve some level of <span class=\"math\">\\delta</span>-safety. In practice, we will do less subnet sampling than we would peer sampling, because subnet sampling is more bandwidth intensive due to the gossip amplification factor it incurs. Therefore, the <span class=\"math\">\\delta</span>-safety from subnet sampling will be for a higher <span class=\"math\">\\delta</span> than for peer sampling, meaning that a higher percentage of honest validators can be tricked into voting incorrectly.</p>\n<p>When discussing the trailing fork-choice in the rest of the document, we are going to use <span class=\"math\">\\delta_p</span> to refer to the <span class=\"math\">\\delta</span>-safety of peer sampling, and <span class=\"math\">\\delta_s</span> to refer to that of subnet sampling. We also going to assume that <span class=\"math\">\\delta_s \\gg \\delta_p</span>, i.e., that the safety loss from peer sampling is negligible compared to the safety loss from subnet sampling.</p>\n\n<h2><a name=\"attacks-4\" class=\"anchor\" href=\"https://ethresear.ch#attacks-4\"></a>Attacks</h2>\n<h3><a name=\"refresher-ex-ante-reorgs-5\" class=\"anchor\" href=\"https://ethresear.ch#refresher-ex-ante-reorgs-5\"></a>Refresher: Ex-ante reorgs</h3>\n<p>Ex-ante reorg attacks are a <a href=\"https://arxiv.org/pdf/2302.11326\" rel=\"noopener nofollow ugc\">well-known</a> threat to the current Ethereum consensus protocol. An adversary controlling a significant fraction of validators can influence the blockchain’s canonical chain through strategic block withholding. In this attack, the adversary privately constructs blocks and orchestrates votes among its validators across multiple slots, ultimately outvoting honest blocks upon their release. This can happen either by overcoming proposer boost with a well-timed release of the withheld blocks and attestations, or by directly overcoming the votes of honest validators.</p>\n<p>We now show an instance of the former strategy, where adversarial blocks <span class=\"math\">B</span> and <span class=\"math\">C</span> are withheld together with adversarial attestations comprising 21% of each committee. An honest proposer extends block <span class=\"math\">A</span> with block <span class=\"math\">D</span>, and the adversary then reveals the withheld objects before the attestation deadline. Since the adversarial votes outweigh proposer boost, the honest block does not get voted and is orphaned.</p>\n\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/4/84b2e4a3709361e8d59950234884b8efc69ca94d.png\" data-download-href=\"https://ethresear.ch/uploads/default/84b2e4a3709361e8d59950234884b8efc69ca94d\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/4/84b2e4a3709361e8d59950234884b8efc69ca94d_2_690x230.png\" alt=\"\" data-base62-sha1=\"iVUiM6YAuJbuLjxCcmMKSZN6SId\" role=\"presentation\" width=\"690\" height=\"230\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/4/84b2e4a3709361e8d59950234884b8efc69ca94d_2_690x230.png, https://ethresear.ch/uploads/default/optimized/3X/8/4/84b2e4a3709361e8d59950234884b8efc69ca94d_2_1035x345.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/4/84b2e4a3709361e8d59950234884b8efc69ca94d_2_1380x460.png 2x\" data-dominant-color=\"F4F6F1\"></a></div><p></p>\n<p>These attacks remain viable even with the addition of DAS, and in fact can become more effective because of it, as we discuss in the upcoming sections.</p>\n<h3><a name=\"proposer-sees-unavailable-attesters-see-available-enhanced-ex-ante-reorgs-6\" class=\"anchor\" href=\"https://ethresear.ch#proposer-sees-unavailable-attesters-see-available-enhanced-ex-ante-reorgs-6\"></a>Proposer sees <em>unavailable</em>, attesters see <em>available</em>: enhanced ex-ante reorgs</h3>\n<h4><a name=\"with-the-tight-fork-choice-7\" class=\"anchor\" href=\"https://ethresear.ch#with-the-tight-fork-choice-7\"></a>With the tight fork-choice</h4>\n<p>The adversary is able to somewhat strengthen the ex-ante reorg attack from the previous section, by leveraging the fraction <span class=\"math\">\\delta</span> of honest validators which it can trick into thinking that an unavailable block is available. It proceeds as following:</p>\n<ol>\n<li>Instead of completely withholding block <span class=\"math\">B</span>, the adversary publishes it but does not fully publish the associated data. It does so in such a way that it maximizes the amount of honest validators whose subnet sampling is successful, and thus who think that B is available.</li>\n<li>Therefore, <span class=\"math\">\\delta</span> such validators vote for <span class=\"math\">B</span>, joining the <span class=\"math\">\\beta</span> adversarial validators.</li>\n<li>The adversary then extends <span class=\"math\">B</span> with another block <span class=\"math\">C</span>, itself fully available. Again, <span class=\"math\">\\delta</span> honest validators and <span class=\"math\">\\beta</span> adversarial validators vote for <span class=\"math\">C</span></li>\n<li>This continues until an honest slot, whose proposer attempts to fork <span class=\"math\">B</span> out (unless they happen to be in the <span class=\"math\">\\delta</span> which see it as available). At this point, the adversary makes <span class=\"math\">B</span> available, and the honest proposal does not get voted if the votes on the adversarial chain overcome the proposer boost.</li>\n</ol>\n<p>Compared to the previous attack, the adversary gains an extra <span class=\"math\">\\delta</span> per slot. It is therefore important to do enough sampling to keep <span class=\"math\">\\delta</span> low.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/d/cddc68f29f049beb3c25464648d8c51340f11d41.png\" data-download-href=\"https://ethresear.ch/uploads/default/cddc68f29f049beb3c25464648d8c51340f11d41\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/d/cddc68f29f049beb3c25464648d8c51340f11d41_2_690x227.png\" alt=\"\" data-base62-sha1=\"tn86FyT7EhtWKxyE7j1dccmNTY5\" role=\"presentation\" width=\"690\" height=\"227\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/d/cddc68f29f049beb3c25464648d8c51340f11d41_2_690x227.png, https://ethresear.ch/uploads/default/optimized/3X/c/d/cddc68f29f049beb3c25464648d8c51340f11d41_2_1035x340.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/d/cddc68f29f049beb3c25464648d8c51340f11d41_2_1380x454.png 2x\" data-dominant-color=\"F1F6EE\"></a></div><p></p>\n<h4><a name=\"with-the-trailing-fork-choice-8\" class=\"anchor\" href=\"https://ethresear.ch#with-the-trailing-fork-choice-8\"></a>With the trailing fork-choice</h4>\n<p>As already mentioned, here we are going to assume that <span class=\"math\">\\delta_p \\ll \\delta_s</span> and only worry about the effect of <span class=\"math\">\\delta_s</span>. The adversary is only able to exploit <span class=\"math\">\\delta_s</span> <em>during the trailing period</em>. With a trailing period of one slot, it can at most add a single <span class=\"math\">\\delta_s</span> to its attack budget.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/9/c9feb4d9369e37cf736b329f4fc213e5e197c18c.png\" data-download-href=\"https://ethresear.ch/uploads/default/c9feb4d9369e37cf736b329f4fc213e5e197c18c\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/9/c9feb4d9369e37cf736b329f4fc213e5e197c18c_2_690x247.png\" alt=\"\" data-base62-sha1=\"sOVG0EEvuuLQFHjw5esyTZu4SMQ\" role=\"presentation\" width=\"690\" height=\"247\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/9/c9feb4d9369e37cf736b329f4fc213e5e197c18c_2_690x247.png, https://ethresear.ch/uploads/default/optimized/3X/c/9/c9feb4d9369e37cf736b329f4fc213e5e197c18c_2_1035x370.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/9/c9feb4d9369e37cf736b329f4fc213e5e197c18c_2_1380x494.png 2x\" data-dominant-color=\"F4F7F1\"></a></div><p></p>\n<p>This attack informs the need to do enough subnet sampling that ex ante reorgs attack do not become significantly easier. For example, if <span class=\"math\">\\delta_s</span> is 20%, a 10% attacker could do such a reorg about 100 times a day, instead of only about once a day. Even worse, <a href=\"https://github.com/ethereum/consensus-specs/blob/d29581315579d37064abf21b174750f9d5c099c0/specs/_features/eip7594/das-core.md#custody-setting\" rel=\"noopener nofollow ugc\">with the current parameters of the PeerDAS spec</a>, an attacker controlling a single proposer can perform a reorg! This is because <code>CUSTODY_REQUIREMENT</code>, the minimum number of subnets that a validator participates in, is set to 1, which makes <span class=\"math\">\\delta_s</span> nearly 50%. For example, the attacker can make the data available in 15 out of the 32 subnets, and convince all validators in those subnets to vote for their unavailable block, overcoming proposer boost.</p>\n<h5><a name=\"mitigation-9\" class=\"anchor\" href=\"https://ethresear.ch#mitigation-9\"></a>Mitigation</h5>\n<p>As already discussed <a href=\"https://ethresear.ch/t/from-4844-to-danksharding-a-path-to-scaling-ethereum-da/18046#possible-fork-choice-attack-vectors-9\">here</a>, this attack vector can be mitigated by attesters of slot <span class=\"math\">n+1</span> complete peer sampling 10s into slot <span class=\"math\">n</span>, while the proposer can keep trying to sample until they propose. If the proposer extends a block which an attester sees as unavailable, they try to sample again. This is in spirit much like <a href=\"https://ethresear.ch/t/view-merge-as-a-replacement-for-proposer-boost/13739\">view-merge</a>, but does not require any extra message in the proposal. In the previously described attacks, this mitigation would make it so that the attesters of slot 4 do not see <span class=\"math\">B</span> as available <em>unless the proposer of <span class=\"math\">D</span> does as well</em>: either the proposer sees <span class=\"math\">B</span> as available and <span class=\"math\">D</span> extends <span class=\"math\">C</span>, or the proposer sees <span class=\"math\">B</span> as unavailable <em>and so do attesters</em>. In either case, they vote for <span class=\"math\">D</span>.</p>\n<p>This mitigation has the downside of worsening the timing assumptions around peer sampling, reducing the benefits of the trailing fork-choice. Still, if this was the only fork-choice problem caused by DAS, we might be ok with solving it this way and otherwise keeping things as is. The next attack does not seem to have such a simple mitigation, and motivates our desire to move to the <em>(block, slot)</em> fork-choice to more effectively address the attack vectors related to (un)availability.</p>\n<h3><a name=\"proposer-sees-available-attesters-see-unavailable-10\" class=\"anchor\" href=\"https://ethresear.ch#proposer-sees-available-attesters-see-unavailable-10\"></a>Proposer sees <em>available</em>, attesters see <em>unavailable</em></h3>\n<h4><a name=\"targeted-data-release-11\" class=\"anchor\" href=\"https://ethresear.ch#targeted-data-release-11\"></a>Targeted data release</h4>\n<p>The attack is going to rely on being able to convince an honest proposer that an unavailable block is available, <em>even after it performs peer sampling for it</em>. How realistic this assumption is depends on how exactly peer sampling is performed. For example, suppose that nodes whose sampling queries fail just try again with other peers. Then, if the adversary wants to target a specific proposer, it has to:</p>\n<ol>\n<li>Link the proposer’s validator identity to a node</li>\n<li>Ensure that it controls at least one peer of the node, and advertise that it custodies all of the columns</li>\n<li>Make all of the data unavailable</li>\n<li>Wait for the node to send sampling query to the peer it controls, after having failed with other peers, and respond to all of them.</li>\n</ol>\n<h4><a name=\"tricking-an-honest-proposer-into-extending-an-unavailable-chain-12\" class=\"anchor\" href=\"https://ethresear.ch#tricking-an-honest-proposer-into-extending-an-unavailable-chain-12\"></a>Tricking an honest proposer into extending an unavailable chain</h4>\n<p>Given this capability, the adversary can manipulate an honest proposer into extending an unavailable chain, leading to their block being reorged. <em>In this scenario, we only assume that the adversary controls two successive proposers</em>, in this case for slots 2 and 3, respectively. The sequence of events unfolds as follows:</p>\n<ol>\n<li>The adversary only publishes a single unavailable block <span class=\"math\">B</span> during slot 2 and does not publish any block in slot 3.</li>\n<li>Importantly, the adversary convinces the proposer for slot 4 that <span class=\"math\">B</span> is available. As a result, the proposer for slot 4 does not attempt to reorg <span class=\"math\">B</span> through a <a href=\"https://github.com/ethereum/consensus-specs/pull/3034\" rel=\"noopener nofollow ugc\">proposer boost reorging</a> for the following reasons:\n<ul>\n<li>The proposer perceives <span class=\"math\">B</span> as available.</li>\n<li>Even if <span class=\"math\">B</span> does not receive any votes, the proposer boost reorging mechanism does not currently attempt reorgs that span more than one slot (as a liveness protection).</li>\n</ul>\n</li>\n<li>As a result:\n<ul>\n<li>Since all other validators see <span class=\"math\">B</span> as unavailable, they continue to vote for <span class=\"math\">A</span>.</li>\n<li>The proposer for slot 5 extends <span class=\"math\">A</span> with <span class=\"math\">D</span>, effectively reorging the honest and available block <span class=\"math\">C</span>.</li>\n</ul>\n</li>\n</ol>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/6/9/69d01104b892c87145507660d3e466307f2767f2.png\" data-download-href=\"https://ethresear.ch/uploads/default/69d01104b892c87145507660d3e466307f2767f2\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/6/9/69d01104b892c87145507660d3e466307f2767f2_2_690x357.png\" alt=\"\" data-base62-sha1=\"f63UInx6xKPuF8xoF6egt0yJYoW\" role=\"presentation\" width=\"690\" height=\"357\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/6/9/69d01104b892c87145507660d3e466307f2767f2_2_690x357.png, https://ethresear.ch/uploads/default/optimized/3X/6/9/69d01104b892c87145507660d3e466307f2767f2_2_1035x535.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/6/9/69d01104b892c87145507660d3e466307f2767f2_2_1380x714.png 2x\" data-dominant-color=\"F5FBF5\"></a></div><p></p>\n<p>The attack could even target multiple honest proposers in a row, leading to all of their blocks being orphaned! This is particularly serious given that the attacker does not need to control a significant amount of stake to pull this off.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/5/8/58bd729c0b54244e6513f1924747003c590d64db.png\" data-download-href=\"https://ethresear.ch/uploads/default/58bd729c0b54244e6513f1924747003c590d64db\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/5/8/58bd729c0b54244e6513f1924747003c590d64db_2_690x351.png\" alt=\"\" data-base62-sha1=\"cF1UfjMuWBXu7Ng5j5ji5f4Bvon\" role=\"presentation\" width=\"690\" height=\"351\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/5/8/58bd729c0b54244e6513f1924747003c590d64db_2_690x351.png, https://ethresear.ch/uploads/default/optimized/3X/5/8/58bd729c0b54244e6513f1924747003c590d64db_2_1035x526.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/5/8/58bd729c0b54244e6513f1924747003c590d64db_2_1380x702.png 2x\" data-dominant-color=\"F4FBF4\"></a></div><p></p>\n<h2><a name=\"block-slot-fork-choice-13\" class=\"anchor\" href=\"https://ethresear.ch#block-slot-fork-choice-13\"></a>(block-slot) fork-choice</h2>\n<p>The attacks discussed above can be effectively addressed by employing a variation of the fork-choice rule known as the (block, slot) fork-choice function. This modification, proposed <a href=\"https://github.com/ethereum/consensus-specs/pull/2197\" rel=\"noopener nofollow ugc\">a few years ago</a>, is specifically designed to account for attestations associated with <em>empty slots</em>. At any given slot <span class=\"math\">t</span>, considering a proposal <span class=\"math\">B</span> extending the head of the canonical chain <span class=\"math\">A</span>, we also take into account the empty slot identified by <span class=\"math\">A</span>. To clarify, with this modification, we consider votes for a block <span class=\"math\">A</span> as votes for pairs (block, slot) (rather than just votes for block <span class=\"math\">A</span>).</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/a/ca8ed21df874838328758b89a3fbd77b2e0897d0.png\" data-download-href=\"https://ethresear.ch/uploads/default/ca8ed21df874838328758b89a3fbd77b2e0897d0\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/a/ca8ed21df874838328758b89a3fbd77b2e0897d0_2_690x381.png\" alt=\"\" data-base62-sha1=\"sTUrlEXOZ2W3qmI9wceLzoNkwj6\" role=\"presentation\" width=\"690\" height=\"381\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/a/ca8ed21df874838328758b89a3fbd77b2e0897d0_2_690x381.png, https://ethresear.ch/uploads/default/optimized/3X/c/a/ca8ed21df874838328758b89a3fbd77b2e0897d0_2_1035x571.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/a/ca8ed21df874838328758b89a3fbd77b2e0897d0_2_1380x762.png 2x\" data-dominant-color=\"FBFBFB\"></a></div><p></p>\n<p>In the figure above, we show the difference between the current fork-choice (left) and the (block, slot) fork-choice (right), in the case when a block <span class=\"math\">B</span> is proposed a bit late. Essentially, this approach enables us to concurrently consider both <span class=\"math\">(B,t+1)</span> and <span class=\"math\">(A,t+1)</span> at slot <span class=\"math\">t+1</span>. This effectively mitigates the attacks discussed earlier, as we show below.</p>\n<h3><a name=\"revisiting-the-last-attack-14\" class=\"anchor\" href=\"https://ethresear.ch#revisiting-the-last-attack-14\"></a>Revisiting the last attack</h3>\n<p>Consider the following scenario (which is the starting point of the attack <strong>Proposer sees available, attesters see unavailable</strong>):</p>\n<ol>\n<li>Block <span class=\"math\">A</span> is a fully available block assigned to slot <span class=\"math\">t</span>.</li>\n<li>Block <span class=\"math\">B</span>, on the other hand, is unavailable but appears available to a few validators due to adversary manipulation.</li>\n</ol>\n<p>Following the current fork-choice function, during slot <span class=\"math\">t+1</span>:</p>\n<ol>\n<li>The majority of validators recognize <span class=\"math\">B</span> as unavailable and consequently vote for <span class=\"math\">A</span>.</li>\n<li>A minority of validators cast their votes for <span class=\"math\">B</span>.</li>\n</ol>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/d/8d16ac21fce958d43583605625e57fb83dcb2721.png\" data-download-href=\"https://ethresear.ch/uploads/default/8d16ac21fce958d43583605625e57fb83dcb2721\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/d/8d16ac21fce958d43583605625e57fb83dcb2721_2_476x500.png\" data-base62-sha1=\"k87TIEntrupil7mtePDykP5D6q5\" alt=\"\" width=\"476\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/d/8d16ac21fce958d43583605625e57fb83dcb2721_2_476x500.png, https://ethresear.ch/uploads/default/optimized/3X/8/d/8d16ac21fce958d43583605625e57fb83dcb2721_2_714x750.png 1.5x, https://ethresear.ch/uploads/default/original/3X/8/d/8d16ac21fce958d43583605625e57fb83dcb2721.png 2x\" data-dominant-color=\"FCFCFC\"></a></div><p></p>\n<p>By introducing the (block,slot) fork-choice function, the majority of validators would then effectively vote for the pair <span class=\"math\">(A,t+1)</span>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/7/c72faacf4a867710311217a025f904385fbf8daf.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/c72faacf4a867710311217a025f904385fbf8daf\" title=\"Block Availability Diagram\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/7/c72faacf4a867710311217a025f904385fbf8daf_2_521x500.jpeg\" data-base62-sha1=\"sq58SnzglRUOxjtO88jt2ITQtkj\" alt=\"Block Availability Diagram\" width=\"521\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/7/c72faacf4a867710311217a025f904385fbf8daf_2_521x500.jpeg, https://ethresear.ch/uploads/default/optimized/3X/c/7/c72faacf4a867710311217a025f904385fbf8daf_2_781x750.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/7/c72faacf4a867710311217a025f904385fbf8daf_2_1042x1000.jpeg 2x\" data-dominant-color=\"FCFCFC\"></a></div><p></p>\n<p>Continuing the sequence of events in the attack, at slot <span class=\"math\">t+2</span>, the adversary abstains from proposing any block. Consequently, the majority of validators will opt to vote for <span class=\"math\">A</span> which effectively means voting for the pair <span class=\"math\">(A, t+2)</span>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/9/f9ebb54f7e36792f39c1947864807bfb983729b0.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/f9ebb54f7e36792f39c1947864807bfb983729b0\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/9/f9ebb54f7e36792f39c1947864807bfb983729b0_2_690x481.jpeg\" alt=\"\" data-base62-sha1=\"zETTlDBmXzAXk9wN1VHferfJIR2\" role=\"presentation\" width=\"690\" height=\"481\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/9/f9ebb54f7e36792f39c1947864807bfb983729b0_2_690x481.jpeg, https://ethresear.ch/uploads/default/optimized/3X/f/9/f9ebb54f7e36792f39c1947864807bfb983729b0_2_1035x721.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/f/9/f9ebb54f7e36792f39c1947864807bfb983729b0_2_1380x962.jpeg 2x\" data-dominant-color=\"FCFCFC\"></a></div><p></p>\n<p>At this point, although the adversary makes the honest proposer for slot <span class=\"math\">t+3</span> believes that <span class=\"math\">B</span> is available, such proposer would still extend <span class=\"math\">A</span> since the chain <span class=\"math\">(A,t+2)</span> is heavier compared to the chain with head <span class=\"math\">(B,t+1)</span>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/9/494fcc892e75772d9ff62e59f9ce7a258450d343.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/494fcc892e75772d9ff62e59f9ce7a258450d343\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/9/494fcc892e75772d9ff62e59f9ce7a258450d343_2_690x369.jpeg\" alt=\"\" data-base62-sha1=\"asxP4R1kRKvqxrHQvZPoTj9yfh9\" role=\"presentation\" width=\"690\" height=\"369\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/9/494fcc892e75772d9ff62e59f9ce7a258450d343_2_690x369.jpeg, https://ethresear.ch/uploads/default/optimized/3X/4/9/494fcc892e75772d9ff62e59f9ce7a258450d343_2_1035x553.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/9/494fcc892e75772d9ff62e59f9ce7a258450d343_2_1380x738.jpeg 2x\" data-dominant-color=\"FBFBFB\"></a></div><p></p>\n<h3><a name=\"block-slot-spec-15\" class=\"anchor\" href=\"https://ethresear.ch#block-slot-spec-15\"></a>(block, slot) spec</h3>\n<p>Take a block <span class=\"math\">A</span> proposed by the block proposer for slot <span class=\"math\">t</span> and a vote <span class=\"math\">v</span> for block <span class=\"math\">A</span> cast in slot <span class=\"math\">t+d</span>. Then, <span class=\"math\">v</span> is considered as a vote for any of the tuples <span class=\"math\">\\{(A,t),(A,t+1),\\cdots,(A,t+d)\\}</span>, because <span class=\"math\">v</span> states that the head of the canonical chain is <span class=\"math\">A</span> in all of those slots.</p>\n<p>Consequently, the fork-choice function also proceeds by (block, slot) rather than just by blocks.<br>\nSpecifically, the children of <span class=\"math\">(A,t)</span> are all those (block, slot) pairs <span class=\"math\">(B,t+1)</span> where <span class=\"math\">B</span> is either <span class=\"math\">A</span> or a child of <span class=\"math\">A</span>. This means that in this context, <span class=\"math\">(A,t+1)</span> is considered a child of <span class=\"math\">(A,t)</span>. Therefore, votes cast in support of any child of <span class=\"math\">A</span> are now weighed against votes cast in support of the <em>empty slot</em> <span class=\"math\">(A, t+1)</span>. The fork-choice proceeds in this way until it reaches the current slot, at which point, it outputs the block of the head (block, slot) pair. Note that by the way we have defined things, the support of the pair <span class=\"math\">(A,t+d)</span> includes all votes cast for any block <span class=\"math\">C</span> that is both descendant of <span class=\"math\">A</span> and proposed in a slot higher than <span class=\"math\">t+d</span>, but such that its chain does not include any block proposed in slot <span class=\"math\">t+d</span>.</p>\n<p>We illustrate this in the following figure. On the left it’s the actual block tree with attestations. On the right it’s the block tree as it is interpreted when running the fork-choice. At slot <span class=\"math\">t+1</span>, the choice is between <span class=\"math\">(B,t+1)</span> and <span class=\"math\">(A,t+1)</span>, and the weight of the latter is made up of attestations to <span class=\"math\">A</span> in slots <span class=\"math\">\\ge t+1</span> (the green and orange ones) and attestations to <span class=\"math\">C</span> at slot <span class=\"math\">t+2</span> (the yellow ones), since these also indicate that <span class=\"math\">A</span> is the head at slot <span class=\"math\">t+1</span>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/f/ffbba585b63cf2fee3497800f6be629976103156.png\" data-download-href=\"https://ethresear.ch/uploads/default/ffbba585b63cf2fee3497800f6be629976103156\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/f/ffbba585b63cf2fee3497800f6be629976103156_2_690x442.png\" alt=\"\" data-base62-sha1=\"AujMIXyJM4rTJRuIsNLYuXrpnAW\" role=\"presentation\" width=\"690\" height=\"442\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/f/ffbba585b63cf2fee3497800f6be629976103156_2_690x442.png, https://ethresear.ch/uploads/default/optimized/3X/f/f/ffbba585b63cf2fee3497800f6be629976103156_2_1035x663.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/f/f/ffbba585b63cf2fee3497800f6be629976103156_2_1380x884.png 2x\" data-dominant-color=\"FAFAFA\"></a></div><p></p>\n<p><a href=\"https://github.com/ethereum/consensus-specs/compare/dev...fradamt:consensus-specs:block-slot\" rel=\"noopener nofollow ugc\">Here</a> is an early attempt at a simple specification of the (block, slot) fork-choice. The loop in <code>get_head</code> is modified to proceed slot by slot. At each slot the heaviest child of the current <code>head</code>, <code>best_child</code>, is compared against <code>empty_slot_weight</code>, the weight of “the subtree rooted at the empty slot”, which is computed by <code>get_empty_slot_weight</code> by interpreting votes as explained above. We include here the modified <code>get_head</code> and the important part of <code>get_empty_slot_weight</code> (in both cases, other than for removing the parts related to the backoff logic, which we discuss later).</p>\n<pre><code class=\"lang-python\">def get_head(store: Store) -&gt; Root:\n    # Get filtered block tree that only includes viable branches\n    blocks = get_filtered_block_tree(store)\n    # Execute the LMD-GHOST fork choice\n    head = store.justified_checkpoint.root\n    slot = Slot(blocks[head].slot + 1)\n    while slot &lt;= get_current_slot(store):\n        children = [\n            root for root in blocks.keys()\n            if (blocks[root].parent_root == head\n                and blocks[root].slot == slot)\n        ]\n        if len(children) &gt; 0:\n            best_child = max(children, key=lambda root: (get_weight(store, root), root))\n            best_child_weight = get_weight(store, best_child)\n            empty_slot_weight = get_empty_slot_weight(store, head, slot)\n            if best_child_weight &gt;= empty_slot_weight:\n                head = best_child\n        slot = Slot(slot + 1)\n    return head\n\ndef get_empty_slot_weight(store: Store, \n                          root: Root, \n                          slot: Slot) -&gt; Gwei:\n    ...\n    attestation_score = Gwei(sum(\n        state.validators[i].effective_balance for i in unslashed_and_active_indices\n        if (i in store.latest_messages\n            and i not in store.equivocating_indices\n            and (\n                (store.latest_messages[i].root == root\n                 and store.latest_messages[i].slot &gt;= slot\n                or (store.latest_messages[i].slot &gt; slot\n                    and not store.latest_messages[i].root == root\n                    and get_ancestor(store, store.latest_messages[i].root, slot) == root\n                    )\n            ))))\n    ...\n    return attestation_score + proposer_score\n</code></pre>\n<h3><a name=\"backoff-scheme-16\" class=\"anchor\" href=\"https://ethresear.ch#backoff-scheme-16\"></a>Backoff scheme</h3>\n<p>One of the disadvantages of the current proposal is that the performance under bad network conditions becomes worse. Chain growth stops completely if block latency is &gt; <code>SECONDS_PER_SLOT / 3</code> (= 4 seconds in the current config).</p>\n<p>Therefore, a <em>backoff</em> scheme is necessary to facilitate chain progression during periods of extended latency. Without such a mechanism, the chain would continuously build on the same (empty) block, resulting in a sequence of empty blocks and an inability to extend the chain with non-empty ones.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/2/b2ec5b729fd1162a23940f6ed1592be4519ce4f7.png\" data-download-href=\"https://ethresear.ch/uploads/default/b2ec5b729fd1162a23940f6ed1592be4519ce4f7\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/2/b2ec5b729fd1162a23940f6ed1592be4519ce4f7_2_690x381.png\" alt=\"\" data-base62-sha1=\"pwPnJgvsiO1CwJXJPOD0FJVkvRl\" role=\"presentation\" width=\"690\" height=\"381\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/2/b2ec5b729fd1162a23940f6ed1592be4519ce4f7_2_690x381.png, https://ethresear.ch/uploads/default/optimized/3X/b/2/b2ec5b729fd1162a23940f6ed1592be4519ce4f7_2_1035x571.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/2/b2ec5b729fd1162a23940f6ed1592be4519ce4f7_2_1380x762.png 2x\" data-dominant-color=\"FAF9FB\"></a></div><p></p>\n<p>The backoff scheme is devised to alleviate prolonged periods of empty blocks within the chain. When such instances occur, the scheme intervenes by aiding potential non-empty blocks in accumulating the necessary attestations. As these supported blocks successfully advance the chain, the backoff mechanism is gradually deactivated. This gradual deactivation process continues until the system reaches a state where the backoff mechanism is no longer necessary.</p>\n<p>The activation and deactivation of the backoff mechanism are represented by the <code>backoff_status</code>, which is created and updated within <code>get_head</code>. Crucially, if two honest validators are on the same path while executing <code>get_head</code>, they will share identical backoff statuses. This means that, under synchrony, for honest validators selecting the same branch of the block tree, the backoff mechanism is synchronized, activating and deactivating simultaneously. In the spec linked above, <em>an active backoff has the effect of delaying by one slot the counting of votes for the empty slot</em>: votes for <span class=\"math\">A</span> only count for the empty slot <span class=\"math\">(A,s)</span> if they are <em>at least from slot <span class=\"math\">s+1</span></em>. In other words, we take all votes <em>directly</em> for empty slots and move them back by one slot: votes to <span class=\"math\">(A,t+1)</span> count for <span class=\"math\">(A,t)</span>, votes for <span class=\"math\">(A,t+2)</span> count for <span class=\"math\">(A,t+1)</span> etc… For example, look at the green attestations, which vote for <span class=\"math\">A</span> at slot <span class=\"math\">t+1</span>. When the backoff is not active, these contribute weight to <span class=\"math\">(A,t+1)</span> (more precisely, are counted by <code>get_empty_slot_weight</code> when run at slot <span class=\"math\">t+1</span> with <span class=\"math\">A</span> being <code>head</code>), but when the backoff is active they go back to only contributing to <span class=\"math\">(A,t)</span>. Same goes for the orange attestations to <span class=\"math\">(A,t+2)</span>, which only contribute to <span class=\"math\">(A,t+1)</span> when the backoff is active.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/d/1d83659c84d77e80dfbd0579a3b7a776c1f25faa.png\" data-download-href=\"https://ethresear.ch/uploads/default/1d83659c84d77e80dfbd0579a3b7a776c1f25faa\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/d/1d83659c84d77e80dfbd0579a3b7a776c1f25faa_2_690x304.png\" alt=\"\" data-base62-sha1=\"4d5mwjp8bogYY1MVjwaUqzrKxUS\" role=\"presentation\" width=\"690\" height=\"304\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/d/1d83659c84d77e80dfbd0579a3b7a776c1f25faa_2_690x304.png, https://ethresear.ch/uploads/default/optimized/3X/1/d/1d83659c84d77e80dfbd0579a3b7a776c1f25faa_2_1035x456.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/1/d/1d83659c84d77e80dfbd0579a3b7a776c1f25faa_2_1380x608.png 2x\" data-dominant-color=\"F9F9F9\"></a></div><p></p>\n<p>In the next figure, network latency is high, and all block proposals are late by a few seconds, so they never get any votes. At first, this leads to <span class=\"math\">B</span> being orphaned, because all votes go to <span class=\"math\">(A,t+1)</span>. For simplicity, we assume that the backoff immediately activates on that branch. In slot <span class=\"math\">t+2</span>, <span class=\"math\">C</span> is also late, and all votes again go to <span class=\"math\">A</span>. Due to the backoff being active, these votes do not count for <span class=\"math\">(A,t+2)</span> but only for <span class=\"math\">(A,t+1)</span>, so <span class=\"math\">C</span> is still the head of the chain, and is voted in the next slot. Again, because the backoff is active, those votes only count for <span class=\"math\">(C,t+2)</span> and not for <span class=\"math\">(C,t+3)</span>, i.e., they do not count “against” <span class=\"math\">D</span>, the block proposed at slot <span class=\"math\">t+3</span>. In order for a block to get orphaned, it now needs to be <em>one whole slot late</em>: votes for <span class=\"math\">A</span> at slot <span class=\"math\">t+3</span> would count for <span class=\"math\">(A,t+2)</span> and thus against <span class=\"math\">C</span>, but there will be no such votes as long as <span class=\"math\">C</span> arrives before slot <span class=\"math\">t+3</span>.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/5/95acaec4f5b3d5a1b4e2e92602279fba6cab09fa.png\" data-download-href=\"https://ethresear.ch/uploads/default/95acaec4f5b3d5a1b4e2e92602279fba6cab09fa\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/5/95acaec4f5b3d5a1b4e2e92602279fba6cab09fa_2_690x345.png\" alt=\"\" data-base62-sha1=\"lm574rIdlaC6sXNfasnMA8s5blw\" role=\"presentation\" width=\"690\" height=\"345\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/5/95acaec4f5b3d5a1b4e2e92602279fba6cab09fa_2_690x345.png, https://ethresear.ch/uploads/default/optimized/3X/9/5/95acaec4f5b3d5a1b4e2e92602279fba6cab09fa_2_1035x517.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/9/5/95acaec4f5b3d5a1b4e2e92602279fba6cab09fa_2_1380x690.png 2x\" data-dominant-color=\"FAFAFB\"></a></div><p></p>\n<p>The specific mechanism to activate the backoff scheme are still a work in progress, and the spec modification has been written so that all of the relevant logic is confined to <code>update_backoff_status</code>, called at the end of each iteration of the loop in <code>get_head</code>.</p>\n<h3><a name=\"attacks-to-the-das-fork-choice-with-block-slot-17\" class=\"anchor\" href=\"https://ethresear.ch#attacks-to-the-das-fork-choice-with-block-slot-17\"></a>Attacks to the DAS fork-choice with (block, slot)</h3>\n<p>By adopting the (block,slot) fork-choice function, if a block is unavailable by its attestation deadline, most honest validators will not vote for it. Instead, they will vote for the empty block. With this, we would hope to achieve a stronger property than <span class=\"math\">\\delta</span>-safety of sampling:</p>\n<blockquote>\n<p>If the validator set is <span class=\"math\">&gt; \\frac{1}{2(1-\\delta)}</span> honest and the network is synchronous, no unavailable block is ever in the canonical chain of any honest validator</p>\n</blockquote>\n<p>The reasoning seems simple: if a block <span class=\"math\">B</span> is unavailable at a given time when the fork-choice is being run, than <span class=\"math\">\\delta</span>-safety of sampling ensures that at most a fraction <span class=\"math\">\\delta</span> of the honest validators in the committee of any previous slot could have voted for it. In particular, at least <span class=\"math\">1-\\delta</span> of the honest validators of <span class=\"math\">B</span>'s proposal slot would have voted for the empty slot. If <span class=\"math\">&gt; \\frac{1}{2(1-\\delta)}</span> of the validators are honest, then this is <span class=\"math\">&gt; \\frac{1}{2}</span> of the validators, and the empty slot would have a majority and win.</p>\n<p><em>Things are unfortunately not actually so simple.</em> In the above, we have made the assumption that validators that do not vote for <span class=\"math\">B</span> will instead vote “for the empty slot”. In fact, there could be multiple “empty slots” to vote for, if there is already a chain split, for example caused by a balancing attack, as in the left figure below. The honest votes then get split among multiple branches, and an unavailable block can still “look” canonical to validators that have been tricked into seeing it as available. Another way to achieve the same thing is by equivocating with available blocks and an unavailable block, to split most of the honest votes between the available ones, instead of having them go to the empty block, as in the right figure below.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/3/339a3e61a64ac47087c23992f0123a283cededdf.png\" data-download-href=\"https://ethresear.ch/uploads/default/339a3e61a64ac47087c23992f0123a283cededdf\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/3/339a3e61a64ac47087c23992f0123a283cededdf_2_690x416.png\" alt=\"\" data-base62-sha1=\"7muOCOdUET2eOsOekd9nrd63PFZ\" role=\"presentation\" width=\"690\" height=\"416\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/3/339a3e61a64ac47087c23992f0123a283cededdf_2_690x416.png, https://ethresear.ch/uploads/default/optimized/3X/3/3/339a3e61a64ac47087c23992f0123a283cededdf_2_1035x624.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/3/3/339a3e61a64ac47087c23992f0123a283cededdf_2_1380x832.png 2x\" data-dominant-color=\"F9F9F7\"></a></div><p></p>\n<h3><a name=\"a-direction-for-further-improvement-the-majority-fork-choice-18\" class=\"anchor\" href=\"https://ethresear.ch#a-direction-for-further-improvement-the-majority-fork-choice-18\"></a>A direction for further improvement: the majority fork-choice</h3>\n<p>It is not at the moment clear whether it is possible to completely eliminate this attack vector with “known tools” (we consider the (block, slot) fork-choice such, since it has been discussed for years, though not implemented). One potentially promising direction is to do something akin to (block, slot) but even a bit more extreme: at slot <span class=\"math\">t</span> in the <code>get_head</code> loop, we could find the <code>best_child</code> and then pit it against <em>all of the voting weight from slots <span class=\"math\">\\ge t</span> which did not vote on the <code>best_child</code>’s subtree</em>. In other words, we require a block from slot <span class=\"math\">t</span> to have a majority of all attesting weight from slots <span class=\"math\">\\ge t</span>. This way, it wouldn’t matter if the adversary finds ways to split honest votes: <em>a vote is against a block whenever it could have been for it but isn’t</em>.</p>\n<p>This would very clearly gives us the stronger property we previously wished for, because an unavailable block would need to get a majority of each committee’s weight in order to win out against the empty slot. The challenge is making sure that such a change does not break anything else in subtle ways, worsen known attacks, or make it much easier to stall liveness.</p>\n<p>You can find the preliminary spec changes from the previous (block, slot) spec to the majority fork-choice <a href=\"https://github.com/ethereum/consensus-specs/commit/baece58837fcfc745443a7144f2558463d6ff5b9\" rel=\"noopener nofollow ugc\">here</a>. The important bit is that now <code>get_empty_slot_weight</code> counts weight from all attestations which could be on the subtree of <code>best_child_root</code> but are not.</p>\n<pre><code class=\"lang-python\">attestation_score = Gwei(sum(\n    state.validators[i].effective_balance for i in unslashed_and_active_indices\n    if (i in store.latest_messages\n        and i not in store.equivocating_indices\n        and store.latest_messages[i].slot &gt;= slot + 1 if is_backoff_active else 0\n        and not get_ancestor(store, store.latest_messages[i].root, slot) != best_child_root)\n))\n</code></pre>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/das-fork-choice/19578\">Read full topic</a></p>","link":"https://ethresear.ch/t/das-fork-choice/19578","pubDate":"Fri, 17 May 2024 06:34:58 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19578"},"source":{"@url":"https://ethresear.ch/t/das-fork-choice/19578.rss","#text":"DAS fork-choice"}},{"title":"Distributed storage and cryptographically secured retrieval of SSZ objects for Portal Network","dc:creator":"pipermerriam","category":"Execution Layer Research","description":"<p>In our research into how to efficiently store Ethereum’s state data in an archival format similar to Erigon’s reverse diff based approach we found a novel way to store large SSZ objects in a DHT such that:</p>\n<ul>\n<li>The data is evenly distributed across the keyspace of the DHT</li>\n<li>The data is cryptographically anchored to the SSZ merkle root for both gossip and retrieval.</li>\n</ul>\n<p>This approach appears to be extensible to any SSZ object.</p>\n<h3><a name=\"portal-network-context-1\" class=\"anchor\" href=\"https://ethresear.ch#portal-network-context-1\"></a>Portal Network context</h3>\n<blockquote>\n<p>While it is possible this approach could extend to other DHT networks, our research focuses solely on the Portal Network.</p>\n</blockquote>\n<p>In order for our networks to be secure, Portal requires that all data be cryptographically anchored during both the gossip and retrieval.  In this context, cryptographic anchoring is the process through which a node in the network is able to verify that the data they are looking at is both well formed <strong>and</strong> that it represents data that belongs in the network.  An example of this would be an ommer header, which would be well formed and would pass validation as a viable header, but it should not be stored in our networks since it is not canonical.</p>\n<h2><a name=\"ssz-objects-mapped-to-a-dht-2\" class=\"anchor\" href=\"https://ethresear.ch#ssz-objects-mapped-to-a-dht-2\"></a>SSZ objects mapped to a DHT</h2>\n<p>For the SSZ object in question, we first compute the SSZ root hash which we’ll refer to as the <code>PrimaryRoot</code>.</p>\n<p>Next, we serialize the object into it’s encoded representation, a stream of bytes.  We then compute a second SSZ root hash using the ssz schema of a simple <code>List[uint8, max_length=...]</code>.  This second root hash will be referred to as the <code>FlattenedRoot</code>.</p>\n<p>The bytes of the encoded SSZ object can then be mapped 1:1 onto the DHT keyspace based on the position of the bytes with respect to the total encoded length, with the 0th byte being mapped to the <code>0x00..00</code> location in the network, and the <code>nth</code> byte being mapped to the node-id that corresponds to <code>(2**256 -1) / n</code>.</p>\n<blockquote>\n<p>In our setup, our individual nodes are able to trust that <code>FlattenedRoot</code> and <code>PrimaryRoot</code> both represent the same data.  However, it seems this scheme would allow for nodes in the network to perform verification against both roots if desired.</p>\n</blockquote>\n<h3><a name=\"gossip-3\" class=\"anchor\" href=\"https://ethresear.ch#gossip-3\"></a>Gossip</h3>\n<p>In order for nodes to accept a sequence of bytes for storage during the gossip process they must be able to verify:</p>\n<ul>\n<li>The location in the network that the bytes belong.</li>\n<li>That the bytes are cryptographically anchored to the respective ssz roots <code>PrimaryRoot</code> and <code>FlattenedRoot</code></li>\n</ul>\n<p>During gossip a contiguous section the encoded SSZ object bytes would be selected, and a SSZ merkle proof against the <code>FlattenedRoot</code> is constructed.  We’ll refer to this proof as the <code>flat_proof</code>.  In the event that the system also requires proofs against the <code>PrimaryRoot</code> then this secondary proof would also need to be constructed against the subset of the data that the selected bytes represents which we’ll call the <code>primary_proof</code>.  Care would need to be taken in the selection of bytes to ensure that its bounds are picked to match up with the encoded object boundaries.</p>\n<p>The gossip payload would include these elements.</p>\n<ul>\n<li>The section of bytes to be stored.</li>\n<li>The <code>flat_proof</code></li>\n<li>The <code>primary_proof</code> if desired.</li>\n</ul>\n<p>Since the <code>flat_proof</code> is against a flat <code>List[uint8, ...]</code> data structure, the accompanying merkle proof will have sufficient information to determine exactly where in the overall sequence of bytes the receive payload would belong.  This allow the receiving node to cryptographically validate that the payload belongs in their storage based on on their node-id as well as verifying that the payload is correctly anchored to the <code>FlattenedRoot</code> and optionally the <code>PrimaryRoot</code> if both proving methods are desired.</p>\n<h3><a name=\"retrieval-4\" class=\"anchor\" href=\"https://ethresear.ch#retrieval-4\"></a>Retrieval</h3>\n<blockquote>\n<p>For retrieval we assume the object has been fully seeded into the network and all portions of its encoded bytes are retrievable.</p>\n</blockquote>\n<p>All SSZ objects have a “schema” and this schema provides a deterministic way to find where a specific part of that object is located in the encoded binary format without requiring the full data structure to be decoded.  Only a small subset of the data must be decoded to retrieve individual parts of the object.</p>\n<p>Since the raw bytes of the encoded SSZ object are available from the network, this facilitates what is effectively the ability to read bytes from anywhere in the stream by fetching them from the network.  Each payload can be cryptographically verified with the accompanying <code>flat_proof</code> and <code>primary_proof</code>.</p>\n<p>Each SSZ object will require some amount of custom logic in order to retrieve the data from the network, though a sufficiently advanced SSZ library should be able to implement this logic in a generic format as it would be the same logic necessary to do selective decoding of only part of an SSZ object.</p>\n<h2><a name=\"applications-of-this-approach-5\" class=\"anchor\" href=\"https://ethresear.ch#applications-of-this-approach-5\"></a>Applications of this approach</h2>\n<p>We are exploring the idea of gaining more efficient storage by densely packing data from deep in Ethereum’s history into large SSZ objects which are then stored using this schema in the network.  This format allows for both random access into the data structure as well as bulk retrieval of the full data structure by retrieving all of the byte sequences stored within the network.</p>\n<p>This approach allows for efficient algorithms such as performing a binary search over a sorted SSZ list stored using this mechanism.  This allows for us to implement a version of Erigon’s diff based storage approach to storing Ethereum’s state data, effectively trading more client side compute for less required storage in the overall network.  For Ethereum’s archive data this results in roughly a 10x reduction in total needed storage for the merkle patricia tree and likely significantly higher savings for the verkle trie due to it’s very wide branching factor.</p>\n<p>It is also likely that applying this approach to ethereum’s history data would allow for more efficient bulk retrieval of historical headers and block bodies.</p>\n<p>There are also likely applications for storing the Consensus state in this manner as it would allow for random access retrieval of any part of the state.</p>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/distributed-storage-and-cryptographically-secured-retrieval-of-ssz-objects-for-portal-network/19575\">Read full topic</a></p>","link":"https://ethresear.ch/t/distributed-storage-and-cryptographically-secured-retrieval-of-ssz-objects-for-portal-network/19575","pubDate":"Thu, 16 May 2024 20:24:12 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19575"},"source":{"@url":"https://ethresear.ch/t/distributed-storage-and-cryptographically-secured-retrieval-of-ssz-objects-for-portal-network/19575.rss","#text":"Distributed storage and cryptographically secured retrieval of SSZ objects for Portal Network"}},{"title":"Sierpinski Triangle Topology","dc:creator":"cryptskii","category":"Sharding","description":"<h1><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>TL;DR</h1>\n<p>We propose integrating the Sierpinski triangle topology into blockchain sharding to enhance scalability, load balancing, and fault tolerance. This novel sharding mechanism exploits the fractal structure and self-similarity properties of the Sierpinski triangle, optimizing inter-shard and intra-shard communication, data replication, and node assignment. Our approach significantly improves transaction throughput, consensus efficiency, and resilience against Byzantine failures.</p>\n<h2><a name=\"background-2\" class=\"anchor\" href=\"https://ethresear.ch#background-2\"></a>Background</h2>\n<h3><a name=\"blockchain-sharding-3\" class=\"anchor\" href=\"https://ethresear.ch#blockchain-sharding-3\"></a>Blockchain Sharding</h3>\n<p>Existing blockchain systems face significant challenges in terms of scalability and security. Sharding partitions a blockchain network into multiple shards, each capable of processing transactions independently, thus improving scalability. However, sharding introduces challenges such as cross-shard communication, data consistency, and security against adversarial attacks.</p>\n<h3><a name=\"sierpinski-triangle-topology-4\" class=\"anchor\" href=\"https://ethresear.ch#sierpinski-triangle-topology-4\"></a>Sierpinski Triangle Topology</h3>\n<p>The Sierpinski triangle, a fractal structure with self-similarity, can be leveraged to optimize blockchain sharding. Its hierarchical organization facilitates efficient communication and load balancing in distributed systems.</p>\n<h2><a name=\"proposal-5\" class=\"anchor\" href=\"https://ethresear.ch#proposal-5\"></a>Proposal</h2>\n<p>We introduce a novel sharding mechanism based on the Sierpinski triangle topology. Nodes are mapped to the vertices of the Sierpinski triangle, and the shard formation algorithm assigns nodes to shards based on their positions in the fractal structure.</p>\n<h3><a name=\"shard-formation-6\" class=\"anchor\" href=\"https://ethresear.ch#shard-formation-6\"></a>Shard Formation</h3>\n<p>Nodes are mapped to the vertices of a Sierpinski triangle, ensuring balanced distribution across shards.</p>\n<h4><a name=\"algorithm-1-shard-formation-7\" class=\"anchor\" href=\"https://ethresear.ch#algorithm-1-shard-formation-7\"></a>Algorithm 1: Shard Formation</h4>\n<pre data-code-wrap=\"latex\"><code class=\"lang-plaintext\">\\begin{algorithm}\n\\caption{Shard Formation}\n\\begin{algorithmic}\n\\Require $N$ nodes, $K$ shards, Sierpinski depth $D$\n\\Ensure Node-to-shard assignment $A$\n\\State $A \\gets \\emptyset$\n\\State $S \\gets SierpinskiTriangle(D)$\n\\State $V \\gets Vertices(S)$\n\\State $\\pi \\gets RandomPermutation(V)$\n\\For{$i \\gets 1$ to $N$}\n    \\State $v \\gets \\pi[i]$\n    \\State $s \\gets \\left\\lfloor \\frac{K \\cdot TriangleIndex(v)}{3^D} \\right\\rfloor$\n    \\State $A \\gets A \\cup \\{(i, s)\\}$\n\\EndFor\n\\State \\Return $A$\n\\end{algorithmic}\n\\end{algorithm}\n</code></pre>\n<h3><a name=\"intra-shard-consensus-8\" class=\"anchor\" href=\"https://ethresear.ch#intra-shard-consensus-8\"></a>Intra-Shard Consensus</h3>\n<p>Nodes in each shard reach consensus using <a href=\"https://ethresear.ch/t/triadic-consensus-a-fast-and-resilient-consensus-mechanism-for-sharded-blockchains/19504\">Triadic Consensus</a>, leveraging the self-similarity of the Sierpinski triangle.</p>\n<h4><a name=\"algorithm-2-intra-shard-consensus-9\" class=\"anchor\" href=\"https://ethresear.ch#algorithm-2-intra-shard-consensus-9\"></a>Algorithm 2: Intra-Shard Consensus</h4>\n<pre data-code-wrap=\"latex\"><code class=\"lang-plaintext\">\\begin{algorithm}\n\\caption{Intra-Shard Consensus}\n\\begin{algorithmic}\n\\Require Shard $s$, transaction set $T_s$\n\\Ensure Ordered list of valid transactions $L_s$\n\\State $L_s \\gets \\emptyset$\n\\For{$t \\in T_s$}\n    \\State Broadcast $t$ to all nodes in shard $s$\n    \\State Run [Triadic Consensus] to reach consensus on $t$\n    \\If{$t$ is valid and committed}\n        \\State $L_s \\gets L_s \\cup \\{t\\}$\n    \\EndIf\n\\EndFor\n\\State \\Return $L_s$\n\\end{algorithmic}\n\\end{algorithm}\n</code></pre>\n<h3><a name=\"cross-shard-communication-10\" class=\"anchor\" href=\"https://ethresear.ch#cross-shard-communication-10\"></a>Cross-Shard Communication</h3>\n<p>A hierarchical scheme based on the Sierpinski triangle topology minimizes communication overhead and latency.</p>\n<h4><a name=\"algorithm-3-cross-shard-communication-11\" class=\"anchor\" href=\"https://ethresear.ch#algorithm-3-cross-shard-communication-11\"></a>Algorithm 3: Cross-Shard Communication</h4>\n<pre data-code-wrap=\"latex\"><code class=\"lang-plaintext\">\\begin{algorithm}\n\\caption{Cross-Shard Communication}\n\\begin{algorithmic}\n\\Require Source shard $s$, destination shard $d$, message $m$\n\\Ensure Message $m$ delivered to shard $d$\n\\State $v_s \\gets RepresentativeVertex(s)$\n\\State $v_d \\gets RepresentativeVertex(d)$\n\\State $P \\gets ShortestPath(v_s, v_d)$\n\\For{$v \\in P$}\n    \\State $s' \\gets Shard(v)$\n    \\If{$s' \\neq s$}\n        \\State Forward $m$ to a node in shard $s'$\n    \\EndIf\n\\EndFor\n\\end{algorithmic}\n\\end{algorithm}\n</code></pre>\n<h2><a name=\"security-analysis-12\" class=\"anchor\" href=\"https://ethresear.ch#security-analysis-12\"></a>Security Analysis</h2>\n<h3><a name=\"byzantine-fault-tolerance-13\" class=\"anchor\" href=\"https://ethresear.ch#byzantine-fault-tolerance-13\"></a>Byzantine Fault Tolerance</h3>\n<p>Our mechanism tolerates up to <span class=\"math\">f &lt; \\frac{N_s}{3}</span> Byzantine nodes in each shard, ensuring robust intra-shard consensus.</p>\n<h3><a name=\"adaptive-adversary-resistance-14\" class=\"anchor\" href=\"https://ethresear.ch#adaptive-adversary-resistance-14\"></a>Adaptive Adversary Resistance</h3>\n<p>Random node-to-shard assignment and the self-similarity property of the Sierpinski triangle ensure resistance to adaptive adversaries.</p>\n<h2><a name=\"performance-evaluation-15\" class=\"anchor\" href=\"https://ethresear.ch#performance-evaluation-15\"></a>Performance Evaluation</h2>\n<p>Simulations demonstrate that our Sierpinski triangle-based sharding mechanism achieves superior transaction throughput, lower latency, and better scalability compared to random and hash-based sharding approaches.</p>\n<h3><a name=\"transaction-throughput-16\" class=\"anchor\" href=\"https://ethresear.ch#transaction-throughput-16\"></a>Transaction Throughput</h3>\n<p>The throughput of the system scales with the number of shards. If there are <span class=\"math\">\\ell</span> shards, each processing <span class=\"math\">N</span> transactions per epoch, the total throughput is <span class=\"math\">O(\\ell \\cdot N)</span> transactions per epoch.</p>\n<h3><a name=\"communication-cost-17\" class=\"anchor\" href=\"https://ethresear.ch#communication-cost-17\"></a>Communication Cost</h3>\n<p>The communication cost per epoch for the coordinator to collect the proofs is <span class=\"math\">O(\\ell)</span>. The size of the proof added to the blockchain is <span class=\"math\">O(1)</span>.</p>\n<h3><a name=\"verification-time-18\" class=\"anchor\" href=\"https://ethresear.ch#verification-time-18\"></a>Verification Time</h3>\n<p>The verification time for the aggregated proof is <span class=\"math\">O(\\log \\ell)</span>, providing an exponential speedup compared to verifying each shard individually.</p>\n<h4><a name=\"example-configuration-19\" class=\"anchor\" href=\"https://ethresear.ch#example-configuration-19\"></a>Example Configuration</h4>\n<p>For a network with <span class=\"math\">\\ell = 2^{10}</span> shards, each processing <span class=\"math\">N = 2^{20}</span> transactions in 2-minute epochs:</p>\n<ul>\n<li>Peak throughput: <span class=\"math\">\\approx 1</span> billion transactions per epoch, or 500,000 transactions per second.</li>\n<li>Verification time: <span class=\"math\">\\approx 100</span> ms on ordinary hardware.</li>\n<li>Proof size: <span class=\"math\">\\approx 1</span> KB per epoch.</li>\n</ul>\n<h2><a name=\"conclusion-20\" class=\"anchor\" href=\"https://ethresear.ch#conclusion-20\"></a>Conclusion</h2>\n<p>We proposed a novel Sierpinski triangle-based sharding mechanism, demonstrating significant improvements in scalability and security. Future work includes real-world implementation and exploring further applications in state sharding and data availability.</p>\n<pre><code class=\"lang-auto\"></code></pre>\n            <p><small>2 posts - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/sierpinski-triangle-topology/19566\">Read full topic</a></p>","link":"https://ethresear.ch/t/sierpinski-triangle-topology/19566","pubDate":"Thu, 16 May 2024 01:16:48 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19566"},"source":{"@url":"https://ethresear.ch/t/sierpinski-triangle-topology/19566.rss","#text":"Sierpinski Triangle Topology"}},{"title":"Introducing OneBalance","dc:creator":"thegostep","category":"Applications","description":"<p>By <a href=\"https://twitter.com/thegostep\" rel=\"noopener nofollow ugc\">Stephane Gosselin</a> and <a href=\"https://twitter.com/ankitchiplunkar\" rel=\"noopener nofollow ugc\">Ankit Chiplunkar</a> on behalf of Frontier Research</p>\n<p><em>For most recent information about OneBalance, please visit <a href=\"https://frontier.tech/onebalance\" rel=\"noopener nofollow ugc\">frontier.tech</a>.</em><br>\n<em>See Research Day 2024 <a href=\"https://docs.google.com/presentation/d/1sOuDB-HUiOyxiX3qrmGRfOm7NyxsIxLzBIDqRi0xJdU/edit?usp=sharing\" rel=\"noopener nofollow ugc\">slides</a> and <a href=\"https://www.youtube.com/watch?v=okDSIm7PE6I\" rel=\"noopener nofollow ugc\">recording</a>.</em></p>\n<h1><a name=\"motivation-1\" class=\"anchor\" href=\"https://ethresear.ch#motivation-1\"></a>Motivation</h1>\n<p>Web3 and the crypto ecosystem more broadly has historically had a chain centric worldview. We believe this is an outdated framework originating from a perceived scarcity in blockspace due to the bundling of credible commitment machines with global consensus.</p>\n<p>We believe an ecosystem wide transition towards an account centric worldview which bundles accounts with credible commitment machines is both necessary and inevitable in order to consolidated a fragmented user experience.</p>\n<p>We propose a new account model called “<em>Credible Accounts</em>” and introduce a framework called “<em>OneBalance”</em> for creating and managing these accounts. With this proposal, we hope to provide a missing component of the web3 stack that will help onboard the first billion humans onto crypto.</p>\n<h1><a name=\"tldr-2\" class=\"anchor\" href=\"https://ethresear.ch#tldr-2\"></a>TLDR</h1>\n<p>OneBalance is a framework for creating and managing accounts on credible commitment machines. We call these Credible Accounts.</p>\n<p>Each account can thought of as an rollup which allows users to conveniently manage their state and reliably request state transitions on any chain.</p>\n<p>This is achieved through the introduction of two key concepts:</p>\n<ol>\n<li>Accounts on credible commitment machines, and</li>\n<li>Resource locks</li>\n</ol>\n<p>A credible commitment machine is responsible for securing the account, issuing resource locks over the state it holds, and validating the fulfillment of such locks.</p>\n<p>By introducing Credible Accounts, we hope to accelerate the transition of the ecosystem from EOAs, the JSON-RPC API, and the transaction supply chain, towards an architecture built around message passing of resource locks and fulfillment proofs.</p>\n<p><strong>A Credible Account on OneBalance can:</strong></p>\n<ul>\n<li>Combine token balances from every chain</li>\n<li>Abstract gas on any chain</li>\n<li>Swap and send tokens to and from any chain</li>\n<li>Issue complex permissions over any subset of user state</li>\n<li>Incentivize and enforce atomic asynchronous composability across multiple chains</li>\n<li>Authenticate user using modern methods such as passkey, session keys, FIDO</li>\n<li>Fast confirmations through separation of fulfillment from settlement</li>\n</ul>\n<p>Many use cases are unlocked with these new capabilities. Users can spend any token to pay for state transitions. They can aggregate liquidity that lives both on-chain and off-chain. They even have the building blocks to build a decentralized Fireblocks, or a non-custodial Binance.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/9/b9c28cc78642455ccebc698c9de49bf17f43d00a.png\" data-download-href=\"https://ethresear.ch/uploads/default/b9c28cc78642455ccebc698c9de49bf17f43d00a\" title=\"OneBalance Account Framework\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/9/b9c28cc78642455ccebc698c9de49bf17f43d00a_2_690x388.png\" alt=\"OneBalance Account Framework\" data-base62-sha1=\"qvj9vkQ3GwzxC80TI5jH9HJb14S\" width=\"690\" height=\"388\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/9/b9c28cc78642455ccebc698c9de49bf17f43d00a_2_690x388.png, https://ethresear.ch/uploads/default/optimized/3X/b/9/b9c28cc78642455ccebc698c9de49bf17f43d00a_2_1035x582.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/9/b9c28cc78642455ccebc698c9de49bf17f43d00a_2_1380x776.png 2x\" data-dominant-color=\"EED7BA\"></a></div><p></p>\n<h1><a name=\"wallet-10-externally-owned-accounts-3\" class=\"anchor\" href=\"https://ethresear.ch#wallet-10-externally-owned-accounts-3\"></a>Wallet 1.0 - Externally Owned Accounts</h1>\n<p>The web3 market structure equilibrium, as defined by Ethereum, is the use of public-private key-pair, aka, Externally Owned Account (EOA) to manage all aspects of a user’s state.</p>\n<p>Since EOAs sit outside the blockchain, the chain has no view over what message have been signed. The chain relies on the use of nonces to sequence user state transaction requests, often called transactions.</p>\n<p>Here, we simplify down a smart contract blockchain such as Ethereum to a Credible Commitment Machine bundled with Global Consensus.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/6/9699fa9c1bf230afc00d597a1fc098f5ba09a076.png\" data-download-href=\"https://ethresear.ch/uploads/default/9699fa9c1bf230afc00d597a1fc098f5ba09a076\" title=\"Externally Owned Accounts\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/6/9699fa9c1bf230afc00d597a1fc098f5ba09a076_2_448x159.png\" alt=\"Externally Owned Accounts\" data-base62-sha1=\"luhwaMDjKK5G8oVex56BS2ofKRw\" width=\"448\" height=\"159\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/6/9699fa9c1bf230afc00d597a1fc098f5ba09a076_2_448x159.png, https://ethresear.ch/uploads/default/optimized/3X/9/6/9699fa9c1bf230afc00d597a1fc098f5ba09a076_2_672x238.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/9/6/9699fa9c1bf230afc00d597a1fc098f5ba09a076_2_896x318.png 2x\" data-dominant-color=\"EDD3B3\"></a></div><p></p>\n<h3><a name=\"credible-commitment-machines-4\" class=\"anchor\" href=\"https://ethresear.ch#credible-commitment-machines-4\"></a><strong>Credible Commitment Machines</strong></h3>\n<p><a href=\"https://en.wikipedia.org/wiki/Thomas_Schelling\" rel=\"noopener nofollow ugc\">Thomas Schelling’s</a> 1960 <em><strong>The Strategy of Conflict</strong></em> famously introduced the game theory concept of “focal point” better known as his name sake “Schelling point” .</p>\n<p>A lesser know contribution of this work was the introduction of “credible commitments” which he describes as “a promise or threat believable to others by creating a situation where the costs of reneging on the commitment are higher than the benefits”.</p>\n<p>According to Schelling, a credible commitment must provide:</p>\n<ol>\n<li><strong>Irrevocability</strong>: Making the commitment in such a way that it cannot be easily reversed. This might involve physical actions or formal agreements that lock the party into their commitment.</li>\n<li><strong>Increased Costs</strong>: Ensuring that backing out of the commitment imposes significant costs, either financially, reputationally, or strategically.</li>\n<li><strong>Observable Commitment</strong>: The commitment must be visible and understandable to other parties, ensuring they believe in the credibility of the commitment.</li>\n</ol>\n<p>The concept was further refined by <a href=\"https://www.fon.hum.uva.nl/rob/Courses/InformationInSpeech/CDROM/Literature/LOTwinterschool2006/szabo.best.vwh.net/idea.html\" rel=\"noopener nofollow ugc\">Nick Szabo in 1997</a> with the introduction of the concept of smart contracts as software enforced contracts, which was further explored by <a href=\"https://papers.agoric.com/assets/pdf/papers/digital-path.pdf\" rel=\"noopener nofollow ugc\">Mark S. Miller and Marc Stiegler in 2003</a>.</p>\n<p>These investigations lead to the <a href=\"https://ethereum.org/content/whitepaper/whitepaper-pdf/Ethereum_Whitepaper_-_Buterin_2014.pdf\" rel=\"noopener nofollow ugc\">Ethereum Whitepaper</a> published by Vitalik Buterin in 2014 proposing Ethereum as the first smart contract blockchain capable of creating and enforcing arbitrary credible commitments.</p>\n<p>Many important contributions to the topic followed with a noteworthy contribution by <a href=\"https://web.stanford.edu/~mohamwad/CredibleMechanisms.pdf\" rel=\"noopener nofollow ugc\">Mohammad Akbarpour and Shengwu Li in 2019</a> providing a formal definition to Credible Mechanisms and introducing the auction trilemma.</p>\n<p>Loosely defined, we refer to a Credible Commitment Machine as a secure computer able to programmatically issue and enforce commitments such that they are believable or “credible” to a third party observer.</p>\n<h3><a name=\"eoas-and-request-equivocation-5\" class=\"anchor\" href=\"https://ethresear.ch#eoas-and-request-equivocation-5\"></a><strong>EOAs and Request Equivocation</strong></h3>\n<p>EOAs are not credible commitment machines. Since the chain has no view over what the user has signed, it must consider any transaction signed with the same nonce as valid. This means that at any time, a user can equivocate their state transition request by signing and submit a new transaction which overwrites their nonce.</p>\n<p>This makes EOAs, and the transaction supply chain more broadly, incapable of providing credible commitments as they violate the principle of irrevocability. ****Downstream parties in the transaction supply chain such as solvers are unable to rely on the commitments made by EOAs as they may be equivocated at any time.</p>\n<p>To date, every system looking to protect against request equivocation have relied on locking funds in a deposit smart contract. This is the approach used by all types of bridges (L2, intent, POA, IBC, ZK). All implementations of secure cross chain interactions rely on the transfer of assets to a smart contract as a request which cannot be equivocated.</p>\n<p>The class of networks based on HTLCs such as the Interledger Protocol all use timelocked requests as a form of credible commitment for security passing economic messages between ledgers.</p>\n<h1><a name=\"wallet-20-smart-contract-accounts-6\" class=\"anchor\" href=\"https://ethresear.ch#wallet-20-smart-contract-accounts-6\"></a>Wallet 2.0 - Smart Contract Accounts</h1>\n<p>Smart Contract Accounts (SCAs) solve the request equivocation problem by bringing the signer on chain. This allows the account to leverage the chain’s credible commitment machine and global consensus to timestamp and sequence each state transition requests issued by the user thereby preventing equivocation.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/6/860b98a163a541999228b08fc63ef52bccda7155.png\" data-download-href=\"https://ethresear.ch/uploads/default/860b98a163a541999228b08fc63ef52bccda7155\" title=\"Smart Contract Accounts\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/6/860b98a163a541999228b08fc63ef52bccda7155_2_448x159.png\" alt=\"Smart Contract Accounts\" data-base62-sha1=\"j7OPcpUdfNx08W6KDqWSeBEyFyB\" width=\"448\" height=\"159\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/6/860b98a163a541999228b08fc63ef52bccda7155_2_448x159.png, https://ethresear.ch/uploads/default/optimized/3X/8/6/860b98a163a541999228b08fc63ef52bccda7155_2_672x238.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/6/860b98a163a541999228b08fc63ef52bccda7155_2_896x318.png 2x\" data-dominant-color=\"EDD3B3\"></a></div><p></p>\n<p>Vitalik has long been a proponent of smart contract wallets as these offer great UX features broadly referred to as account abstraction which includes gas abstraction, social recovery, permissions policies, and modern authentication methods.</p>\n<p>Despite addressing the equivocation problem, smart contract accounts deployed to chains with global consensus like Ethereum are prohibitively expensive and slow. This is because virtual machines such as the EVM require the sequential execution of global locks over all user accounts for every state transition request. This is equivalent to forming a single global queue of all users waiting to do something on chain.</p>\n<h3><a name=\"the-account-dilemma-7\" class=\"anchor\" href=\"https://ethresear.ch#the-account-dilemma-7\"></a>The Account Dilemma</h3>\n<p>We observe a tradeoff between EOAs and SCAs. On one side we have EOAs which are fast and cheap, but cannot make credible commitments due to request equivocation. On the other side we have SCAs which can make credible commitments, but are slow and expensive due to global consensus. We call this tradeoff the Account Dilemma.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/3/8/388e6f420274cdb504f0e98be46be09230a816dc.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/388e6f420274cdb504f0e98be46be09230a816dc\" title=\"The Account Dilemma\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/3/8/388e6f420274cdb504f0e98be46be09230a816dc_2_448x292.jpeg\" alt=\"The Account Dilemma\" data-base62-sha1=\"84jTZoWH0ARNM9R5kUfVg87meTi\" width=\"448\" height=\"292\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/3/8/388e6f420274cdb504f0e98be46be09230a816dc_2_448x292.jpeg, https://ethresear.ch/uploads/default/optimized/3X/3/8/388e6f420274cdb504f0e98be46be09230a816dc_2_672x438.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/3/8/388e6f420274cdb504f0e98be46be09230a816dc_2_896x584.jpeg 2x\" data-dominant-color=\"EFEEED\"></a></div><p></p>\n<h1><a name=\"wallet-30-credible-accounts-8\" class=\"anchor\" href=\"https://ethresear.ch#wallet-30-credible-accounts-8\"></a>Wallet 3.0 - Credible Accounts</h1>\n<p>We propose a new account model called Credible Accounts which aims to solve the Account Dilemma. Credible Accounts live in a secure computer of the users choice that can make credible commitments about what messages it will and won’t sign.</p>\n<p>By unbundling global consensus from the Smart Contract Account model, we are able to keep the speed and cost advantage of EOAs while retaining the UX improvements and non-equivocation guarantees of SCAs.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/3/837f659d705ce4c043148cb3ae81b8324adc5686.png\" data-download-href=\"https://ethresear.ch/uploads/default/837f659d705ce4c043148cb3ae81b8324adc5686\" title=\"Credible Accounts\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/3/837f659d705ce4c043148cb3ae81b8324adc5686_2_448x159.png\" alt=\"Credible Accounts\" data-base62-sha1=\"iLhuHVU9DvXwQ0Yw1bJ7F1vQIwC\" width=\"448\" height=\"159\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/3/837f659d705ce4c043148cb3ae81b8324adc5686_2_448x159.png, https://ethresear.ch/uploads/default/optimized/3X/8/3/837f659d705ce4c043148cb3ae81b8324adc5686_2_672x238.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/3/837f659d705ce4c043148cb3ae81b8324adc5686_2_896x318.png 2x\" data-dominant-color=\"EED5B4\"></a></div><p></p>\n<h3><a name=\"onebalance-a-framework-for-credible-accounts-9\" class=\"anchor\" href=\"https://ethresear.ch#onebalance-a-framework-for-credible-accounts-9\"></a>OneBalance: a framework for Credible Accounts</h3>\n<p>Each OneBalance account can be thought of as its own rollup. The account wraps individual user state from all chains and replicates it in a virtual environment. This virtual environment issues state transition requests as “resource locks” and fulfills those state transitions through cross-chain execution proofs. This virtual environment is secured by a credible commitment machine.</p>\n<p>Since a OneBalance account provides the same guarantees as a SCA, it comes with all the same UX benefits of account abstraction, such as gas abstraction, social recovery, permission policies, and modern authentication methods.</p>\n<p>A OneBalance account can create an arbitrary number of sub accounts across any number of chains and manage any state present on those chains. It is backwards compatible with all chains, smart contracts, and assets including Ethereum, Solana, Bitcoin, ERC20s, NFTs, DAOs, multisigs, defi protocols, and deposits or points programs. This multi-ecosystem compatibility is not possible with other current account model.</p>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th>Capability</th>\n<th style=\"text-align:center\">EOAs</th>\n<th style=\"text-align:center\">SCAs</th>\n<th style=\"text-align:center\">OneBs</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Fast &amp; Cheap</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/x.png?v=12\" title=\":x:\" class=\"emoji only-emoji\" alt=\":x:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td>UX features</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/x.png?v=12\" title=\":x:\" class=\"emoji only-emoji\" alt=\":x:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td>Equivocation protection</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/x.png?v=12\" title=\":x:\" class=\"emoji only-emoji\" alt=\":x:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td>Multi-ecosystem compatibility</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/x.png?v=12\" title=\":x:\" class=\"emoji only-emoji\" alt=\":x:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/x.png?v=12\" title=\":x:\" class=\"emoji only-emoji\" alt=\":x:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n</tbody>\n</table>\n</div><p>The OneBalance framework for Credible Accounts is implemented in a modular way using standards developed by the <a href=\"https://frontier.tech/cake-working-group\" rel=\"noopener nofollow ugc\">CAKE Working Group</a> to allow users / apps / wallets to pick an choose any component of the <a href=\"https://frontier.tech/the-cake-framework\" rel=\"noopener nofollow ugc\">CAKE Framework</a> needed for their use case.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/b/9/b9c28cc78642455ccebc698c9de49bf17f43d00a.png\" data-download-href=\"https://ethresear.ch/uploads/default/b9c28cc78642455ccebc698c9de49bf17f43d00a\" title=\"OneBalance Framework\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/b/9/b9c28cc78642455ccebc698c9de49bf17f43d00a_2_690x388.png\" alt=\"OneBalance Framework\" data-base62-sha1=\"qvj9vkQ3GwzxC80TI5jH9HJb14S\" width=\"690\" height=\"388\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/b/9/b9c28cc78642455ccebc698c9de49bf17f43d00a_2_690x388.png, https://ethresear.ch/uploads/default/optimized/3X/b/9/b9c28cc78642455ccebc698c9de49bf17f43d00a_2_1035x582.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/b/9/b9c28cc78642455ccebc698c9de49bf17f43d00a_2_1380x776.png 2x\" data-dominant-color=\"EED7BA\"></a></div><p></p>\n<h2><a name=\"resource-locks-10\" class=\"anchor\" href=\"https://ethresear.ch#resource-locks-10\"></a><strong>Resource Locks</strong></h2>\n<p>A resource lock is a credible commitment made by a user to escrow some state conditional on particular conditions fulfilled, or an expiry time.</p>\n<p>An example could be a cross-chain request to purchase an NFT on Solana using USDC deposited in the OneBalance account from Ethereum.</p>\n<pre><code class=\"lang-json\">resource_lock: {\n\tlock: 1500 USDC,\n\tfulfill: DeGods #12345,\n\texpiry: Solana block 245547084\n}\n</code></pre>\n<p>Resource locks are necessary to prevent solvers from being griefed by a user through double spending or equivocating their request during execution.</p>\n<p>Since the user makes a commitment not to overwrite their request within a time window, it removes the uncertainty solvers typically incur between a transaction being signed and the finalized chain state.</p>\n<p>A lock is analogous to depositing funds in a smart contract, or issuing an ERC20 approval, but without spending gas or waiting for on-chain finality since it is done within the account itself.</p>\n<p>The lock expiry needs to be of long enough duration to provide solvers the chance to execute the requested state transition on the destination chain and submit a proof of fulfillment to the fulfillment engine.</p>\n<p>Crucially, this introduces a separation between fulfillment time and settlement time. Since the account provides local assurance of the lock, solvers can bring a requested state transition on a destination chain without waiting for finality on the origin chain.</p>\n<p>This allows users to buy SOL with ETH at the speed of Solana without being constrained by the speed of Ethereum. This fulfillment speed can be extended to execution of any state transition such as sniping an NFT, sending money to your grandmother, or anything else users do on blockchains.</p>\n<p>Resource locks can implement constraints which sit anywhere along the spectrum of permissions.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/c/3/c3a8e48441d80f71c6492fdfd765b4c80ba01467.png\" data-download-href=\"https://ethresear.ch/uploads/default/c3a8e48441d80f71c6492fdfd765b4c80ba01467\" title=\"Permission Spectrum\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/c/3/c3a8e48441d80f71c6492fdfd765b4c80ba01467_2_690x228.png\" alt=\"Permission Spectrum\" data-base62-sha1=\"rUSXmQx7rt0DTvtzaBYrEzsP0l9\" width=\"690\" height=\"228\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/c/3/c3a8e48441d80f71c6492fdfd765b4c80ba01467_2_690x228.png, https://ethresear.ch/uploads/default/optimized/3X/c/3/c3a8e48441d80f71c6492fdfd765b4c80ba01467_2_1035x342.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/c/3/c3a8e48441d80f71c6492fdfd765b4c80ba01467_2_1380x456.png 2x\" data-dominant-color=\"EED7B9\"></a></div><p></p>\n<p>Permissions could be stateful or stateless. For example:</p>\n<ul>\n<li><strong>Scoped session keys</strong>: a stateless permission for an app like a Telegram bot to take arbitrary actions on subsets of a user’s token balances</li>\n<li><strong>Circuit breaker</strong>: a stateful permission to sell all open positions if there is no account activity or market volatility above a predefined threshold</li>\n<li><strong>Limit order:</strong> a stateful permission to post an order if a pair reaches a certain price on a DEX</li>\n<li><strong>MFA</strong>: a stateless permission to post a transaction if two valid authentication methods are provided</li>\n</ul>\n<h2><a name=\"credible-commitment-machine-11\" class=\"anchor\" href=\"https://ethresear.ch#credible-commitment-machine-11\"></a><strong>Credible Commitment Machine</strong></h2>\n<p>A credible commitment machine is a secure computer on which the account lives and is trusted to provide assurances over the valid issuance of resource locks and the validation of their fulfillment.</p>\n<p>We present here four possible architectures of credible commitment machines which provide for secure issuance and enforcement of locks: Trusted Execution Environments (TEEs), Multi-Party Computation / chain signatures (MPC), Smart Contract Accounts (SCAs), and in protocol virtual machine changes.</p>\n<p>These mechanisms are being developed and refined as we speak, it is likely that the ideal architecture today will look vastly different than the one five years from now.</p>\n<p>This is why a OneBalance account allows users to migrate between CCMs over time as they look for better properties.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/8/a/8abeab85e3de0dc9203c0882c3d468e7c31ddcc9.png\" data-download-href=\"https://ethresear.ch/uploads/default/8abeab85e3de0dc9203c0882c3d468e7c31ddcc9\" title=\"Credible Commitment Machine\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/8/a/8abeab85e3de0dc9203c0882c3d468e7c31ddcc9_2_690x467.png\" alt=\"Credible Commitment Machine\" data-base62-sha1=\"jNooLP7z6yF1ovVqqlFnBC7nMud\" width=\"690\" height=\"467\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/8/a/8abeab85e3de0dc9203c0882c3d468e7c31ddcc9_2_690x467.png, https://ethresear.ch/uploads/default/optimized/3X/8/a/8abeab85e3de0dc9203c0882c3d468e7c31ddcc9_2_1035x700.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/8/a/8abeab85e3de0dc9203c0882c3d468e7c31ddcc9_2_1380x934.png 2x\" data-dominant-color=\"EFD7BA\"></a></div><p></p>\n<h1><a name=\"roadmap-12\" class=\"anchor\" href=\"https://ethresear.ch#roadmap-12\"></a>Roadmap</h1>\n<p>OneBalance v1:</p>\n<ul>\n<li>add support for transactions and swaps of any token on any chain</li>\n<li>add support for session keys for trusted applications</li>\n<li>add support for user rage quit through exit hatch</li>\n</ul>\n<p>OneBalance v2:</p>\n<ul>\n<li>add support for stateless policies</li>\n<li>add support for arbitrary transactions</li>\n<li>add support for authentication modules</li>\n</ul>\n<p>OneBalance v3:</p>\n<ul>\n<li>add support for stateful policies</li>\n</ul>\n<p>OneBalance v4:</p>\n<ul>\n<li>add liveness guarantees through account replication</li>\n</ul>\n<div class=\"md-table\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th style=\"text-align:center\">EOA</th>\n<th style=\"text-align:center\">OneBalance v1</th>\n<th style=\"text-align:center\">OneBalance v2</th>\n<th style=\"text-align:center\">OneBalance v3</th>\n<th style=\"text-align:center\">OneBalance v4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>self-custody</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td>transfers</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td>swaps</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td>session keys</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/x.png?v=12\" title=\":x:\" class=\"emoji only-emoji\" alt=\":x:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td>transactions</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/x.png?v=12\" title=\":x:\" class=\"emoji only-emoji\" alt=\":x:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td>stateless policies</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/x.png?v=12\" title=\":x:\" class=\"emoji only-emoji\" alt=\":x:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/x.png?v=12\" title=\":x:\" class=\"emoji only-emoji\" alt=\":x:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td>auth modules</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/x.png?v=12\" title=\":x:\" class=\"emoji only-emoji\" alt=\":x:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/x.png?v=12\" title=\":x:\" class=\"emoji only-emoji\" alt=\":x:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td>stateful policies</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/x.png?v=12\" title=\":x:\" class=\"emoji only-emoji\" alt=\":x:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/x.png?v=12\" title=\":x:\" class=\"emoji only-emoji\" alt=\":x:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/x.png?v=12\" title=\":x:\" class=\"emoji only-emoji\" alt=\":x:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n<tr>\n<td>liveness guarantees</td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/x.png?v=12\" title=\":x:\" class=\"emoji only-emoji\" alt=\":x:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/x.png?v=12\" title=\":x:\" class=\"emoji only-emoji\" alt=\":x:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/x.png?v=12\" title=\":x:\" class=\"emoji only-emoji\" alt=\":x:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n<td style=\"text-align:center\"><img src=\"https://ethresear.ch/images/emoji/facebook_messenger/white_check_mark.png?v=12\" title=\":white_check_mark:\" class=\"emoji only-emoji\" alt=\":white_check_mark:\" loading=\"lazy\" width=\"20\" height=\"20\"></td>\n</tr>\n</tbody>\n</table>\n</div><hr>\n<h2><a name=\"acknowledgements-13\" class=\"anchor\" href=\"https://ethresear.ch#acknowledgements-13\"></a>Acknowledgements</h2>\n<p>Thank you to the collective consciousness of the crypto ecosystem for fostering a fertile ground for innovation.</p>\n<p>In no particular order, thank you to the following collaborators for the many stimulating discussions which lead to the creation of this proposal:</p>\n<p>Murat Akdeniz, Ahmed Al-Balaghi, Viktor Bunin, Jonah Burian, Vitalik Buterin, Philippe Castonguay, Vaibhav Chellani, Valery Cherepanov, Jasper De Gooijer, Nicolas Della Penna, Justin Drake, Brendan Farmer, Ben Fisch, Mattia Gagliardi, Johnny Gannon, Matt Garnett, Ivo Georgiev, Christopher Goes, Pedro Gomes, Mason Hall, Sam Hart, Connor Howe, Sreeram Kannan, Hart Lambur, Zaki Manian, Robert Miller, Alex Obadia, Puja Ohlhaver, Anatolii Padenko, Nick Pai, Illia Polosukhin, Karthik Senthil, Tomasz Stanczak, Henri Stern, Alex Stokes, Caleb Tebbe, Dror Tirosh, Dean Tribble, Drew Van der Werff, Alex Watts, Yoav Weiss, Nathan Worsley, Evgeny Yurtae, Philipp Zentner, Noah Zinsmeister, apriori, jxom, awkweb.</p>\n<h2><a name=\"discussion-14\" class=\"anchor\" href=\"https://ethresear.ch#discussion-14\"></a>Discussion</h2>\n<h3><a name=\"why-are-you-doing-this-15\" class=\"anchor\" href=\"https://ethresear.ch#why-are-you-doing-this-15\"></a>Why are you doing this?</h3>\n<p>Our mission is to help the web3 ecosystem to transition to an account centric worldview in order to bring web3 to the first 1 billion people.</p>\n<p>We believe non-coercive credible commitment machines are essential for human coordination in the digital age.</p>\n<p>We believe the chain centric worldview is an outdated framework originating from the historical scarcity in blockspace. (<a href=\"https://www.usv.com/writing/2016/08/fat-protocols/\" rel=\"noopener nofollow ugc\">sorry Joel</a>)</p>\n<p>Much like the shift from the Geocentric worldview to the Heliocentric worldview unlocked a wealth of discoveries, we believe the shift from a chain centric worldview to an account centric worldview will unlock the full potential of web3.</p>\n<h3><a name=\"what-does-this-mean-from-a-user-perspective-16\" class=\"anchor\" href=\"https://ethresear.ch#what-does-this-mean-from-a-user-perspective-16\"></a>What does this mean from a user perspective?</h3>\n<p>Users don’t need to care about which chains they are interacting with + can get close to instant fulfillment.</p>\n<p>Lets take a complex, yet common example:</p>\n<blockquote>\n<p>User wants to buy an NFT traded on Solana with a price of 10 SOL, but only has USDC on Ethereum.</p>\n</blockquote>\n<p>This state transition request requires the following sequential operations to take place:</p>\n<ol>\n<li>Generate: Create a new Ed25519 keypair in a solana wallet</li>\n<li>Swap: USDC for ETH to pay for gas on Ethereum</li>\n<li>Bridge: Send USDC to bridge contract on Ethereum and get USDC minted on Solana</li>\n<li>Swap: USDC for SOL to pay for gas on Solana</li>\n<li>Swap: USDC for SOL to purchase NFT</li>\n<li>Execute: Execute calldata on marketplace to purchase the NFT</li>\n</ol>\n<p>Today, users are required to manually perform each of these actions and wait for the previous one to be settled or finalized before performing the following one. Some of these operations are even technically impossible in a non-custodial way using EOAs without chain level gas abstraction.</p>\n<p>The critical path of execution here requires waiting for the settlement of two Ethereum transactions and two Solana transactions + waiting for the finality of Ethereum. With Ethereum’s current block finality time, we are looking at a minimum of 15min to complete execution.</p>\n<p>Lets look at the equivalent using a OneBalance account:</p>\n<blockquote>\n<p>User wants to buy an NFT traded on Solana with a price of 10 SOL, but only has USDC on OneBalance.</p>\n</blockquote>\n<p>This state transition request requires the following sequential operations to take place:</p>\n<ol>\n<li>\n<p>Create a resource lock on OneBalance as follows:</p>\n<pre><code class=\"lang-json\">resource_lock: {\n\tlock: 1500 USDC,\n\tfulfill: DeGods #12345,\n\texpiry: Solana block 245547084\n}\n</code></pre>\n</li>\n</ol>\n<p>There are no additional steps for the user to take.</p>\n<p>Behind the scenes, a solver purchases the NFT and credits it to the OneBalance proxy account of the user on Solana, and claims the resources in the lock.</p>\n<p>Since a OneBalance account separates fulfillment from settlement, the user gets execution at the speed of transaction execution on their destination network, in this case Solana. The user can perform any operation on any chain using any token they hold in their OneBalance account.</p>\n<h3><a name=\"show-me-some-sequence-diagrams-17\" class=\"anchor\" href=\"https://ethresear.ch#show-me-some-sequence-diagrams-17\"></a>Show me some sequence diagrams.</h3>\n<p>Ok.</p>\n<p>Lets walkthrough a few examples on how interoperability is achieved under different conditions:</p>\n<ol>\n<li><strong>The user has EOA account and wants to do a cross-chain contract call while not having gas on target chain</strong>\n<ol>\n<li>The user signs two transactions using their EOA, the first transfers gas amount from the origin chain to the solver escrow address and the second calls the contract on the target chain.</li>\n<li>As soon as the solver simulates these two transactions, they have a guarantee that the user will pay them the correct gas amount (user’s commitment is enforced).</li>\n<li>The solver instantly funds user’s EOA account on the target chain, and executes the contract call transaction without waiting for settlement or finality of first transaction.</li>\n<li>The solver can include the first transaction (gas payment) within the expiry window of commitment.</li>\n</ol>\n</li>\n</ol>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/1/3/13a5cb8d20d6ab799b12095e82e6bbed0147e295.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/13a5cb8d20d6ab799b12095e82e6bbed0147e295\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/1/3/13a5cb8d20d6ab799b12095e82e6bbed0147e295_2_517x265.jpeg\" alt=\"image\" data-base62-sha1=\"2NOhKJ80jYf4AtN7lKjlvF8woLP\" width=\"517\" height=\"265\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/1/3/13a5cb8d20d6ab799b12095e82e6bbed0147e295_2_517x265.jpeg, https://ethresear.ch/uploads/default/optimized/3X/1/3/13a5cb8d20d6ab799b12095e82e6bbed0147e295_2_775x397.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/1/3/13a5cb8d20d6ab799b12095e82e6bbed0147e295_2_1034x530.jpeg 2x\" data-dominant-color=\"F1F1F1\"></a></div><p></p>\n<ol start=\"2\">\n<li><strong>The user has Smart Contract account and wants to do a cross-chain swap while not having gas on target chain.</strong>\n<ol>\n<li>The user signs a UserOp authenticating the transfer of required tokens to the solvers escrow address.</li>\n<li>As soon as the solver simulates the transaction, they have a guarantee that the user will pay them the required tokens (user’s commitment is enforced).</li>\n<li>The solver procures the required tokens on the target chain and deposits them into the users account on the target chain without waiting for settlement or finality.</li>\n<li>The solver can include the UserOp (token deposit in escrow) eventually.</li>\n</ol>\n</li>\n</ol>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/6/4620414fdd10e1da61a13fb84436b2daa33a49c2.png\" data-download-href=\"https://ethresear.ch/uploads/default/4620414fdd10e1da61a13fb84436b2daa33a49c2\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/6/4620414fdd10e1da61a13fb84436b2daa33a49c2_2_517x260.png\" alt=\"image\" data-base62-sha1=\"a0mwOjpmsOM8mxaJLvvjDW2qDR0\" width=\"517\" height=\"260\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/6/4620414fdd10e1da61a13fb84436b2daa33a49c2_2_517x260.png, https://ethresear.ch/uploads/default/optimized/3X/4/6/4620414fdd10e1da61a13fb84436b2daa33a49c2_2_775x390.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/6/4620414fdd10e1da61a13fb84436b2daa33a49c2_2_1034x520.png 2x\" data-dominant-color=\"F1F1F1\"></a></div><p></p>\n<p>As we can see in the above examples a user commitment via nonce lock is same as delegating eventual state update to solvers. This reduces latency introduced by finality especially in a cross-chain setting.</p>\n<h3><a name=\"how-does-this-relate-to-account-abstraction-and-4337-18\" class=\"anchor\" href=\"https://ethresear.ch#how-does-this-relate-to-account-abstraction-and-4337-18\"></a>How does this relate to account abstraction and 4337?</h3>\n<p>Account abstraction and 4337 are often associated with Smart Contract Accounts and refer to both the set of UX improvements offered by an SCA (account abstraction) and a specific standard for implementation of these UX improvements (EIP-4337).</p>\n<p>The OneBalance account model provides the same UX improvements as SCAs and is backwards compatible with using 4337 for settlement of locks on chain as user ops.</p>\n<p>However, since OneBalance is a general framework for the creation of credible accounts, it is not limited to chains where account abstraction and 4337 are actively being used.</p>\n<p>OneBalance is supportive of chains and proxy accounts which opt for using dos resistant user ops like 4337.</p>\n<h3><a name=\"how-do-you-guarantee-atomic-asynchronous-execution-across-chains-19\" class=\"anchor\" href=\"https://ethresear.ch#how-do-you-guarantee-atomic-asynchronous-execution-across-chains-19\"></a><strong>How do you guarantee atomic asynchronous execution across chains?</strong></h3>\n<p>We can’t. But we can incentivize it.</p>\n<p>Accounts can enforce two types of constraints:</p>\n<ul>\n<li>Constraints over what states of the world it requires in order to issue a lock</li>\n<li>Constraints over what states of the world it requires in order to fulfill a lock</li>\n</ul>\n<p>OneBalance can <em>incentivize</em> atomicity, but it cannot guarantee it.</p>\n<ul>\n<li>For example: Take a lock that requests sequencing of state transitions across chain A and chain B, with a desired atomicity such that B is executed if and only if A is executed. If the lock is public and the only condition on inclusion of B is the existence of a valid signature from the requesting account, then B could be included regardless of A if it exposes sufficient MEV to compensate its inclusion.</li>\n</ul>\n<p>However! Since executing B without A invalidates the fulfillment conditions of the lock, then the solver cannot extract any value from the lock. This means that from the user perspective, atomicity is maintained. Some people refer to this as “economic atomicity”. For locks with complex multi chain atomicity requirements, Solvers take on the risk of non-execution.</p>\n<p>This “lock leaking” due to MEV problem can be resolved at the routing layer by routing the state transition request through a secure OFA that prevents information leakage.</p>\n<p>Novel mechanisms are being developed at the settlement layer to help solvers manage their settlement risk using things like pre-confirmations or proof aggregation. Importantly, these help manage solver execution risk and therefore help minimize non-execution risk for users of a OneBalance account, but the OneBalance account already has economic atomicity guarantees.</p>\n<h3><a name=\"is-onebalance-just-htlcs-for-ethereum-20\" class=\"anchor\" href=\"https://ethresear.ch#is-onebalance-just-htlcs-for-ethereum-20\"></a><strong>Is OneBalance just HTLCs for Ethereum?</strong></h3>\n<p>I prefer to call it turbo HTLCs <img src=\"https://ethresear.ch/images/emoji/facebook_messenger/smile.png?v=12\" title=\":smile:\" class=\"emoji\" alt=\":smile:\" loading=\"lazy\" width=\"20\" height=\"20\"></p>\n<p>The design of intent bridges work similarly to HTLCs in that they lock user funds on the originating chain until a proof is provided of the completion of a state transition on the destination chain.</p>\n<p>Instead of being constrained by the speed of the originating chains, OneBalance accounts are constrained by the speed of the credible commitment engine in generating these locks. This means that on a TEE architecture, locks can be issued at clock speed of a single server, hence turbo HTLCs!</p>\n<h3><a name=\"how-does-this-thing-scale-to-one-billion-concurrent-users-21\" class=\"anchor\" href=\"https://ethresear.ch#how-does-this-thing-scale-to-one-billion-concurrent-users-21\"></a>How does this thing scale to one billion concurrent users?</h3>\n<p>OneBalance accounts create “local” locks, whereas regular accounts can only create “global” locks. Global locks require locking the state of all accounts in the execution environment during sequencing, whereas local locks only require locking the state of accounts which are party to the lock.</p>\n<p>Unlike global locks, local locks provide the opportunity for lock sequencing to be parallelized on distinct machines.</p>\n<h3><a name=\"where-does-the-account-live-22\" class=\"anchor\" href=\"https://ethresear.ch#where-does-the-account-live-22\"></a><strong>Where does the account live?</strong></h3>\n<p>The account lives in a secure computer of the users choice that can make credible commitments about what messages it will and won’t sign.</p>\n<p>The four architectures for credible commitment enforcement presented above provide such environments, but each have their tradeoffs. OneBalance accounts are not opinionated to the type of credible commitment enforcement mechanism used.</p>\n<p>Crucially, as the sophistication of these architectures evolve over time, the tradeoff space will change and so will user preferences. As such, OneBalance accounts must remain flexible to supporting different architectures.</p>\n<h3><a name=\"is-onebalance-a-standard-23\" class=\"anchor\" href=\"https://ethresear.ch#is-onebalance-a-standard-23\"></a>Is OneBalance a standard?</h3>\n<p>No.</p>\n<p>OneBalance is a framework for building accounts on top of credible commitment machines. OneBalance will use the standards developed by the <a href=\"https://frontier.tech/cake-working-group\" rel=\"noopener nofollow ugc\">CAKE Working Group</a> plug and play with all components of the CAKE stack.</p>\n<h3><a name=\"are-you-providing-pre-confirmations-24\" class=\"anchor\" href=\"https://ethresear.ch#are-you-providing-pre-confirmations-24\"></a>Are you providing pre-confirmations?</h3>\n<p>No. OneBalance provides resource locks.</p>\n<p>Lets explore the difference between the two.</p>\n<p>Pre-confirmations is a mechanism being actively developed by several teams in the ecosystem to offer better inclusion guarantees for entities sending transactions to the blockchain.</p>\n<p>Resource locks is a mechanism for offering guarantees to solvers that a user cannot double spend or equivocate on their state transition request.</p>\n<p>Both mechanisms are aimed at reducing the execution risk of solvers, pre-confirmations are guarantees provided by proposers, resource locks are guarantees provided by users.</p>\n<p>Both pre-confirmations and resource locks can be enforced by the same credible commitment mechanism.</p>\n<p>For example: If Ethereum validators were to deposit their staked ETH in a OneBalance account, they could create resource locks which specify slashing rules if certain transaction inclusion commitments are invalidated. This could be implemented with a restaking contract like eigenlayer.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/c/4c3e7151fe217186184497d8a2de952f5383661d.png\" data-download-href=\"https://ethresear.ch/uploads/default/4c3e7151fe217186184497d8a2de952f5383661d\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/c/4c3e7151fe217186184497d8a2de952f5383661d_2_345x107.png\" alt=\"image\" data-base62-sha1=\"aSu4n7oFHtoFPTUPDc9fI5jzJmt\" width=\"345\" height=\"107\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/c/4c3e7151fe217186184497d8a2de952f5383661d_2_345x107.png, https://ethresear.ch/uploads/default/optimized/3X/4/c/4c3e7151fe217186184497d8a2de952f5383661d_2_517x160.png 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/c/4c3e7151fe217186184497d8a2de952f5383661d_2_690x214.png 2x\" data-dominant-color=\"EEEEEE\"></a></div><p></p>\n<h3><a name=\"how-does-a-lock-turn-into-a-state-transition-on-chain-25\" class=\"anchor\" href=\"https://ethresear.ch#how-does-a-lock-turn-into-a-state-transition-on-chain-25\"></a>How does a lock turn into a state transition on chain?</h3>\n<p>OneBalance accounts are responsible for issuing and enforcing resource locks over state transition requests.</p>\n<p>Routing of the request in order to provide fulfillment is a downstream module which the upstream app / user must define. For certain kinds of requests, it may be beneficial to route directly to a chain’s transaction pool, other requests may benefit from using a solver network or orderflow auction, and others from specifying an exclusive solver.</p>\n<p>OneBalance is unopinionated about the routing mechanism.</p>\n<h3><a name=\"is-onebalance-a-competitor-to-insert-my-bags-here-26\" class=\"anchor\" href=\"https://ethresear.ch#is-onebalance-a-competitor-to-insert-my-bags-here-26\"></a>Is OneBalance a competitor to (insert my bags here)?</h3>\n<p>Probably not.</p>\n<p>OneBalance is providing a framework for orchestration of stateful accounts. Our goal is to displace the industry wide reliance on imperative state transition requests issued by user managed EOAs. OneBalance is not opinionated on the architecture of the stateful accounts or the credible commitment mechanisms used to secure them.</p>\n<p>OneBalance uses a modular architecture that allows for the following components to be integrated:</p>\n<ol>\n<li>Orderflow sources: wallets / apps / tg bots / waas</li>\n<li>Fulfillment engines: orderflow auctions / solvers / solver networks / market makers / intent networks / bridges</li>\n<li>Settlement engines: any L1 or L2 (yes, even BTC)</li>\n</ol>\n<p>The design for OneBalance emerged from our work with members of the <a href=\"https://frontier.tech/cake-working-group\" rel=\"noopener nofollow ugc\">CAKE working group</a>.</p>\n<p>Looking at the CAKE framework, OneBalance sits between the permissioning layer and the solver layer and is compatible with all the other necessary components of the cake.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/4/44ee9a1604244965ad249dee7879f0b982740679.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/44ee9a1604244965ad249dee7879f0b982740679\" title=\"image\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/4/44ee9a1604244965ad249dee7879f0b982740679_2_291x375.jpeg\" alt=\"image\" data-base62-sha1=\"9PNFyfuSXvJIce2xK4UFNt85MWR\" width=\"291\" height=\"375\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/4/44ee9a1604244965ad249dee7879f0b982740679_2_291x375.jpeg, https://ethresear.ch/uploads/default/optimized/3X/4/4/44ee9a1604244965ad249dee7879f0b982740679_2_436x562.jpeg 1.5x, https://ethresear.ch/uploads/default/optimized/3X/4/4/44ee9a1604244965ad249dee7879f0b982740679_2_582x750.jpeg 2x\" data-dominant-color=\"E6E4DC\"></a></div><p></p>\n<h3><a name=\"are-onebalance-accounts-custodial-27\" class=\"anchor\" href=\"https://ethresear.ch#are-onebalance-accounts-custodial-27\"></a>Are OneBalance accounts custodial?</h3>\n<p>No.</p>\n<p>All OneBalance accounts are issued withdrawal receipts which allow them to permissionlessly exit their assets back to the settlement chain where the assets originate.</p>\n<p>This means at any point, a user is able to “rage quit” and recover their assets on the source chain.</p>\n<p>This mechanism is implemented differently depending on the accounting engine used, but essentially boils down to the same outcome: users can withdraw their funds by submitting withdrawal receipts to their proxy accounts on origination chains.</p>\n<p>I firmly believe freedom of exit is an essential characteristic of non-oppressive human coordination system design. I have never and will never design a system without freedom of exit.</p>\n<h3><a name=\"are-onebalance-accounts-really-compatible-with-any-chain-28\" class=\"anchor\" href=\"https://ethresear.ch#are-onebalance-accounts-really-compatible-with-any-chain-28\"></a>Are OneBalance accounts really compatible with any chain?</h3>\n<p>Kinda.</p>\n<p>All chains are supported, but the capabilities differ based on the VM used and the fulfillment speed differs based on the consensus. More details on this in the future.</p>\n<h3><a name=\"are-onebalance-accounts-vulnerable-to-vampire-attacks-29\" class=\"anchor\" href=\"https://ethresear.ch#are-onebalance-accounts-vulnerable-to-vampire-attacks-29\"></a>Are OneBalance accounts vulnerable to vampire attacks?</h3>\n<p>Yes. This is a good thing.</p>\n<p>If someone can build a system which delivers higher combined utility (functionality + economic incentive) to users than OneBalance accounts, users should be able to exit. This is necessary to avoid anti-competitive monopolies that censor innovation.</p>\n<p>To whoever wants to try, I say bring it on.</p>\n<h3><a name=\"is-this-a-keystore-rolluphttpshackmdioilikesymmetryintro-keystore-rollup-30\" class=\"anchor\" href=\"https://ethresear.ch#is-this-a-keystore-rolluphttpshackmdioilikesymmetryintro-keystore-rollup-30\"></a>Is this a <a href=\"https://hackmd.io/@ilikesymmetry/intro-keystore-rollup\" rel=\"noopener nofollow ugc\">Keystore Rollup</a>?</h3>\n<p>No.</p>\n<p>As they are defined today, a keystore rollup solves the problem of having a central source of truth for account permissions, across all chains. It doesn’t offer cross-chain guarantees to solvers. A OneBalance account does not need a keystore rollup since on chain keys don’t change.</p>\n<p>If a Keystore Rollup was to attempt to issue locks, they could only be communicated at L1 finality speed.</p>\n<h3><a name=\"what-is-the-trust-model-31\" class=\"anchor\" href=\"https://ethresear.ch#what-is-the-trust-model-31\"></a><strong>What is the trust model?</strong></h3>\n<p>Instead of requiring mutual trust between users and solvers, the OneBalance model requires each party to trust the credible commitment mechanism used to issue and enforce resource locks.</p>\n<h3><a name=\"does-onebalance-remove-the-need-for-bridges-32\" class=\"anchor\" href=\"https://ethresear.ch#does-onebalance-remove-the-need-for-bridges-32\"></a>Does OneBalance remove the need for bridges?</h3>\n<p>No.</p>\n<p>Bridges are necessary mechanisms to provide fulfillment of locks and settlement of inventory outside of the critical path of user request execution.</p>\n<h3><a name=\"what-is-the-relationship-between-frontier-research-onebalance-and-the-cake-working-group-33\" class=\"anchor\" href=\"https://ethresear.ch#what-is-the-relationship-between-frontier-research-onebalance-and-the-cake-working-group-33\"></a>What is the relationship between Frontier Research, OneBalance, and the CAKE Working Group?</h3>\n<p><a href=\"https://frontier.tech\" rel=\"noopener nofollow ugc\">Frontier Research</a> is and remains an independent research and advisory group formed to bridge the gap between fundamental research and commercial products.</p>\n<p>Frontier founded the <a href=\"https://frontier.tech/cake-working-group\" rel=\"noopener nofollow ugc\">CAKE Working Group</a> along with other collaborators such as Anoma, Across, and Ethereum Foundation members to foster conversation around common interfaces and language to accelerate the development of chain abstraction technology.</p>\n<p>Frontier is spinning out OneBalance as an independent project to accelerate the transition of an account centric worldview for web3.</p>\n<p>All three groups of humans will continue to follow their individual missions moving forward.</p>\n<h3><a name=\"what-are-the-latency-and-consistency-guarantees-of-this-account-model-34\" class=\"anchor\" href=\"https://ethresear.ch#what-are-the-latency-and-consistency-guarantees-of-this-account-model-34\"></a>What are the latency and consistency guarantees of this account model?</h3>\n<p>wip</p>\n<h3><a name=\"how-do-you-prevent-sequencer-dos-35\" class=\"anchor\" href=\"https://ethresear.ch#how-do-you-prevent-sequencer-dos-35\"></a>How do you prevent sequencer DOS?</h3>\n<p>wip</p>\n<h3><a name=\"how-does-a-onebalance-account-recover-from-a-fault-in-an-underlying-chain-36\" class=\"anchor\" href=\"https://ethresear.ch#how-does-a-onebalance-account-recover-from-a-fault-in-an-underlying-chain-36\"></a>How does a OneBalance account recover from a fault in an underlying chain?</h3>\n<p>wip</p>\n<h3><a name=\"how-quickly-can-lock-resolution-take-place-37\" class=\"anchor\" href=\"https://ethresear.ch#how-quickly-can-lock-resolution-take-place-37\"></a>How quickly can lock resolution take place?</h3>\n<p>wip</p>\n<h3><a name=\"is-this-a-new-kind-of-blockchain-38\" class=\"anchor\" href=\"https://ethresear.ch#is-this-a-new-kind-of-blockchain-38\"></a>Is this a new kind of blockchain?</h3>\n<p>wip</p>\n<h3><a name=\"what-are-the-benefits-and-drawbacks-of-using-a-onebalance-account-vs-a-smart-contract-account-39\" class=\"anchor\" href=\"https://ethresear.ch#what-are-the-benefits-and-drawbacks-of-using-a-onebalance-account-vs-a-smart-contract-account-39\"></a>What are the benefits and drawbacks of using a OneBalance account vs a Smart Contract Account?</h3>\n<p>wip</p>\n<h3><a name=\"can-you-build-complex-applications-like-a-dex-on-top-of-resource-locks-40\" class=\"anchor\" href=\"https://ethresear.ch#can-you-build-complex-applications-like-a-dex-on-top-of-resource-locks-40\"></a>Can you build complex applications like a dex on top of resource locks?</h3>\n<p>wip</p>\n            <p><small>20 posts - 13 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/introducing-onebalance/19557\">Read full topic</a></p>","link":"https://ethresear.ch/t/introducing-onebalance/19557","pubDate":"Wed, 15 May 2024 01:33:45 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19557"},"source":{"@url":"https://ethresear.ch/t/introducing-onebalance/19557.rss","#text":"Introducing OneBalance"}},{"title":"Optimizing ZK-Rollup Scalability, Security, and Censorship Resistance with Epidemic MPC, Efficient Data Structures, and Advanced Cryptographic Techniques","dc:creator":"cryptskii","category":"ZK Rollup","description":"<p>We propose an optimized ZK-rollup architecture that integrates epidemic multi-party computation (MPC), sparse Merkle tries, triadic ternary tries, erasure coding, and fully homomorphic encryption (FHE) to achieve high scalability, security, privacy, and censorship resistance. The system leverages the scalability benefits of epidemic MPC, where the per-node computation complexity decreases as <span class=\"math\">O(1/N)</span> with the number of nodes <span class=\"math\">N</span>. Erasure coding enhances fault tolerance and data availability, while FHE ensures privacy during computation. Sparse Merkle tries provide compact data representation and proof efficiency, and triadic ternary tries enable fast data retrieval. Preliminary evaluations demonstrate significant improvements in throughput, latency, and proof size compared to state-of-the-art ZK-rollup implementations.</p>\n<ol>\n<li>\n<p>Introduction<br>\nExisting ZK-rollup implementations face challenges in terms of scalability, privacy, and censorship resistance due to centralized computation, monolithic state representations, and reliance on a single sequencer or small validator set. This paper proposes an optimized ZK-rollup architecture that integrates advanced cryptographic techniques and efficient data structures to address these challenges and achieve high scalability, security, privacy, and censorship resistance.</p>\n</li>\n<li>\n<p>Background<br>\nZK-rollups are a layer-2 scaling solution for public blockchains that enables off-chain transaction processing while maintaining the security and decentralization of the underlying blockchain. However, current ZK-rollup implementations suffer from scalability bottlenecks, privacy risks, and censorship vulnerabilities. Efficient data structures and proof schemes, along with advanced cryptographic techniques, are crucial for optimizing ZK-rollup performance.</p>\n</li>\n<li>\n<p>Proposed Architecture<br>\nOur proposed ZK-rollup architecture combines the following key components:</p>\n</li>\n</ol>\n<ul>\n<li>Epidemic MPC for scalable computation across subgroups</li>\n<li>Sparse Merkle tries for compact state commitments and proofs</li>\n<li>Triadic ternary tries for efficient transaction and account data retrieval</li>\n<li>Erasure coding for fault tolerance and data availability</li>\n<li>Fully homomorphic encryption for privacy-preserving computation</li>\n</ul>\n<p>3.1 Epidemic MPC<br>\nThe epidemic MPC paradigm partitions nodes into subgroups that independently process disjoint transaction batches, reducing per-node complexity while maintaining fault tolerance. The average per-node computation complexity is <span class=\"math\">O(C/N * (k/N)^2)</span>, where <span class=\"math\">C</span> is the total MPC task complexity and <span class=\"math\">k</span> is the number of subgroups. While this complexity has a quadratic dependence on <span class=\"math\">k</span> and <span class=\"math\">N</span>, careful optimization of subgroup sizing and load balancing can help mitigate scalability limitations.</p>\n<p>3.2 Efficient Data Structures<br>\nSparse Merkle tries provide compact state representations and efficient proof generation, with a space complexity of <span class=\"math\">O(n * k)</span> for storing <span class=\"math\">n</span> key-value pairs with maximum key length <span class=\"math\">k</span>. Triadic ternary tries enable fast transaction and account data retrieval within each subgroup, accelerating proof generation and overall system performance.</p>\n<p>3.3 Advanced Cryptographic Techniques<br>\nErasure coding enhances fault tolerance and data availability by allowing the system to recover from node failures and distribute the workload. Fully homomorphic encryption enables computations on encrypted data, preserving privacy during the MPC process. The proposed hybrid approach combines erasure coding and FHE to achieve a balanced solution for scalability, fault tolerance, and privacy, with strong guarantees provided by the hybrid MPC-zkRollup protocol.</p>\n<ol start=\"4\">\n<li>Formalization and Analysis<br>\nWe formalize the key concepts and provide detailed algorithms and proofs for the proposed architecture:</li>\n</ol>\n<p>4.1 Epidemic MPC Network<br>\nAn epidemic MPC network is defined as a tuple <span class=\"math\">(N, S, T)</span>, where <span class=\"math\">N</span> is the set of nodes, <span class=\"math\">S</span> is a partition of <span class=\"math\">N</span> into <span class=\"math\">k</span> subgroups, and <span class=\"math\">T</span> is the set of MPC tasks. The average per-node computation complexity is <span class=\"math\">O(C/N * (k/N)^2)</span>, demonstrating the potential for significant scalability improvements as the number of nodes and subgroups increases.</p>\n<p>4.2 Sparse Merkle Trie/Verkle<br>\nA sparse Merkle trie storing a set of <span class=\"math\">n</span> key-value pairs with maximum key length <span class=\"math\">k</span> occupies <span class=\"math\">O(n * k)</span> space, highlighting the potential for storage efficiency.</p>\n<p>4.3 Triadic Ternary Trie<br>\nA triadic ternary trie storing a set of <span class=\"math\">n</span> key-value pairs with maximum key length <span class=\"math\">k</span> trits occupies <span class=\"math\">O(n * k)</span> space, indicating the potential for efficient data storage and retrieval.</p>\n<p>4.4 Fault Tolerance and Privacy Analysis<br>\nThe hybrid MPC-zkRollup protocol with an <span class=\"math\">(n, k)</span>-erasure code and a secure FHE scheme achieves fault tolerance against up to <span class=\"math\">n - k</span> node failures and preserves the privacy of the input data against semi-honest adversaries controlling up to <span class=\"math\">N - 1</span> MPC nodes.</p>\n<ol start=\"5\">\n<li>\n<p>Advantages and Trade-offs<br>\nThe proposed architecture offers high scalability, enhanced privacy, and censorship resistance due to the distributed nature of epidemic MPC and the infeasibility of controlling a majority in each subgroup. Compact proofs enable succinct on-chain verification, reducing the burden on the underlying blockchain. However, there may be trade-offs in terms of increased complexity and potential latency due to the coordination and communication overhead among subgroups.</p>\n</li>\n<li>\n<p>Future Directions and Open Questions<br>\nRealizing the full potential of this approach requires further research on formal security proofs, optimized smart contract implementations, parameter tuning, and the integration of advanced cryptographic primitives like KZG-based polynomial commitments for greater expressiveness and cross-rollup interoperability.</p>\n</li>\n<li>\n<p>Conclusion<br>\nThe proposed ZK-rollup architecture, which integrates epidemic MPC, sparse Merkle tries, triadic ternary tries, erasure coding, and fully homomorphic encryption, presents a promising avenue for building highly performant, secure, and censorship-resistant ZK-rollup systems. By carefully balancing the trade-offs between scalability, privacy, and efficiency, this approach paves the way for large-scale adoption of layer-2 solutions on public blockchains. Further optimizations and research can help address the scalability limitations imposed by the quadratic complexity term and unlock the full potential of this approach for large-scale, secure, and privacy-preserving blockchain applications.</p>\n</li>\n</ol>\n            <p><small>2 posts - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/optimizing-zk-rollup-scalability-security-and-censorship-resistance-with-epidemic-mpc-efficient-data-structures-and-advanced-cryptographic-techniques/19556\">Read full topic</a></p>","link":"https://ethresear.ch/t/optimizing-zk-rollup-scalability-security-and-censorship-resistance-with-epidemic-mpc-efficient-data-structures-and-advanced-cryptographic-techniques/19556","pubDate":"Tue, 14 May 2024 17:25:37 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19556"},"source":{"@url":"https://ethresear.ch/t/optimizing-zk-rollup-scalability-security-and-censorship-resistance-with-epidemic-mpc-efficient-data-structures-and-advanced-cryptographic-techniques/19556.rss","#text":"Optimizing ZK-Rollup Scalability, Security, and Censorship Resistance with Epidemic MPC, Efficient Data Structures, and Advanced Cryptographic Techniques"}},{"title":"User-Defined Penalties: Ensuring Honest Preconf Behavior","dc:creator":"jonahb27","category":"Economics","description":"<p><em>Thank you <a href=\"https://twitter.com/drakefjustin\">Justin Drake</a> and <a href=\"https://twitter.com/sproule_\">Ryan Sproule</a> for the help.</em></p>\n<p><strong>tl;dr:</strong> <em>Allow users to specify their preferred penalty when requesting a preconf, enabling the market to naturally establish preconf cryptoeconomic security parameters, rather than setting parameters upfront.</em></p>\n<p>As the community settles on a design for preconfs, a critical choice arises: how can we ensure crypto-economic security for preconfs? Specifically, what incentives exist to prevent safety or liveness faults? I’ll present a high-level overview of the current solutions before proposing an alternative.</p>\n<p>Here are the current mechanisms (they can be used in combination):</p>\n<ol>\n<li><strong>Basic Slashing:</strong> If a proposer is responsible for a safety or liveness fault, they are slashed.\n<ul>\n<li><strong>Open Question:</strong> How much should be slashed, and what amount of stake should the proposer put up?</li>\n</ul>\n</li>\n<li><strong>Freezing:</strong> The proposer’s stake is frozen, causing them to lose the time value of their money.\n<ul>\n<li><em><a href=\"https://twitter.com/drakefjustin\">Justin Drake</a> suggested during the <a href=\"https://github.com/ethereum/pm/issues/1035\">Ethereum sequencing call #7</a> that this approach could help ease the adoption of the preconf protocol since preconfs introduce new behaviors the market needs to adjust to.</em></li>\n<li><strong>Open Question:</strong> How much stake should be frozen, and for how long?</li>\n</ul>\n</li>\n<li><strong>Dynamic Reputation Slashing:</strong> Each fault by a validator results in a progressively stricter penalty; for instance, they might be slashed more or locked up longer.\n<ul>\n<li><strong>Open Question:</strong> What should the penalty curve look like? Should it be time-based and reset after a period of honest behavior?</li>\n</ul>\n</li>\n<li><strong>Insurance:</strong> Proposers must compensate users whose preconfs fail due to faults. Effectively, users’ preconfs are insured.\n<ul>\n<li><strong>Open Question:</strong> How much insurance should be offered?</li>\n</ul>\n</li>\n</ol>\n<p>All these mechanisms require us to know ex ante what preconf users want. Inevitably, this will be opinionated and lead to deadweight loss, as some users who might want a preconf could feel uncomfortable with the setup. Moreover, some proposers might feel uncomfortable with the parameterization and choose not to offer preconfs. The best solution is to allow users to work with proposers to agree on the appropriate level of crypto-economic security.</p>\n<p>My Solution: <strong>User-Defined Penalties</strong></p>\n<p>Users should be able to specify their desired level of crypto-economic security by attaching a penalty structure to their preconf. This structure will detail the consequences of a fault.</p>\n<p>For instance:</p>\n<pre><code class=\"lang-rust\">// Here, users can define a penalty associated with any specific fault,\n// and the system is generic enough to allow for arbitrarily complex rules.\nstruct PreconfAgreement&lt;C: Condition, P: Penalize&gt; {\n    faults: Vec&lt;Fault&lt;C, P&gt;&gt;,\n}\n\nstruct Fault&lt;C: Condition, P: Penalize&gt; {\n    condition: C,\n    penalties: Vec&lt;P&gt;,\n}\n\ntrait Condition {\n    fn should_penalize(...) -&gt; bool;\n}\n\ntrait Penalize {\n    fn penalize(...);\n}\n</code></pre>\n<p><em>Note: There is a DoS vector associated with unbounded compute when evaluating conditions. Some gas metering should be used, or conditions should be constructed as succinct statements (e.g., a SNARK).</em></p>\n<p>This solution is unbiased and allows the market to determine the appropriate parameters naturally. Users can decide the level of security they want rather than leaving it up to the protocol to estimate, while proposers can choose their risk-reward profile. Heavier penalties will likely result in higher costs for users.</p>\n<p><strong>Complexity Concerns:</strong></p>\n<ul>\n<li><strong>Proposers’ Perspective:</strong> With preconfs, we already assume that proposers (or their gateways) are sophisticated, and giving them the ability to manage their own risk profiles should benefit them. Inexperienced proposers can set a simple threshold for the maximum penalty they are willing to incur and, as they gain experience, adjust it more systematically.</li>\n<li><strong>Users’ Perspective:</strong> This approach shouldn’t add complexity, as wallets can easily abstract the penalty decision, much like they abstract gas fee choices. Fine-grained choices can be offered as an opt-in feature for more advanced users.</li>\n</ul>\n            <p><small>7 posts - 4 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/user-defined-penalties-ensuring-honest-preconf-behavior/19545\">Read full topic</a></p>","link":"https://ethresear.ch/t/user-defined-penalties-ensuring-honest-preconf-behavior/19545","pubDate":"Mon, 13 May 2024 16:14:42 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19545"},"source":{"@url":"https://ethresear.ch/t/user-defined-penalties-ensuring-honest-preconf-behavior/19545.rss","#text":"User-Defined Penalties: Ensuring Honest Preconf Behavior"}},{"title":"Embedded fee markets and ERC-4337 (part 1)","dc:creator":"DavideRezzoli","category":"Economics","description":"<p>by: Davide Rezzoli (<a class=\"mention\" href=\"https://ethresear.ch/u/daviderezzoli\">@DavideRezzoli</a>) and Barnabé Monnot (<a class=\"mention\" href=\"https://ethresear.ch/u/barnabe\">@barnabe</a>)</p>\n<p>Many thanks to Yoav Weiss (<a class=\"mention\" href=\"https://ethresear.ch/u/yoavw\">@yoavw</a>) for introducing us to the problem, Dror Tirosh (<a class=\"mention\" href=\"https://ethresear.ch/u/drortirosh\">@drortirosh</a>) for helpful comments on the draft, and the 4337 team for support. Reviews ≠ endorsements, all errors are the authors’ own.</p>\n<p>This work was done for <a href=\"https://efdn.notion.site/ROP-7-Economic-models-of-signature-aggregation-in-account-abstraction-ec5390efab864ed49a8535e8bdfff182\" rel=\"noopener nofollow ugc\">ROP-7</a></p>\n<hr>\n<p>Transaction fee mechanisms have become the workhorse models to understand the intermediation of block producers between users wishing to transact and “the chain” (or “the protocol”) which users transact on. Given the ability to use some of the supply provided by the chain, the block producers must arbitrate which users will have ability to use the scarce resource of on-chain execution, and at what cost. On Ethereum, for the question of cost, block producers are constrained by the EIP-1559 fee mechanism, which dynamically sets a reserve price block-to-block, called “base fee”. The base fee is a price, expressed per units of gas, which a user transaction must pay to be included and executed. The user may provide so-called “priority fees” beyond the base fee, to further incentivise the block producers in times of congestion.</p>\n<p>In this note, we investigate the question of <em>embedded fee markets</em>, i.e., fee markets which “live” within other fee markets. This question was discussed in a different context in a recent paper by Maryam Bahrani, Pranav Garimidi and Tim Roughgarden, “<a href=\"https://eprint.iacr.org/2024/331\" rel=\"noopener nofollow ugc\">Transaction Fee Mechanism Design in a Post-MEV World</a>”. In this paper, the authors model the use of searchers, further intermediating access to the chain between users and block producers. Block producers receive “hints” from searchers, embodied by atomic bundles of transactions to be included by the chain. The fee market of searchers is driven by the maximisation objective of a quantity known as MEV, or maximal extractable value.</p>\n<p>In our setting, users wish to access the chain but do not express their demand using protocol-legible transactions. Instead, users produce “operations”, to be bundled by entities known as “bundlers”, who then originate a protocol-legible transaction packing the operations together towards execution. Thus, to the EIP-1559 fee mechanism, bundlers are the users of the chain, yet the actual users must first obtain inclusion in the bundle of a bundler before they may gain inclusion to the chain. In other words, we may see this setting as part of the larger question of <a href=\"https://ethresear.ch/t/uncrowdable-inclusion-lists-the-tension-between-chain-neutrality-preconfirmations-and-proposer-commitments/19372#comparison-between-inclusion-lists-pepc-and-multiple-concurrent-block-producers-3\">block co-creation</a>, which arises with (partial) builders/searchers as well as inclusion lists.</p>\n<p>Our hope is for these dynamics to be as transparent as possible, such that there is not either more cognitive overhead or opportunities for the user to be unduly exploited by the bundler, compared to going on-chain directly. We hope for even stronger results, cases where indeed the users benefit from the bundler intermediation, when amortised costs allow users to enjoy greater welfare.</p>\n<p>To investigate the distinction between direct fee markets and their embedded (sub-)mechanisms, we must precise the economic constraints which a bundler abides by. In the following section, we offer a simple model of the bundler cost function motivated by the practice, in particular bundlers participating in the ERC-4337 protocol, which we briefly recapitulate.</p>\n<h2><a name=\"model-1\" class=\"anchor\" href=\"https://ethresear.ch#model-1\"></a>Model</h2>\n<h3><a name=\"bundling-in-erc-4337-2\" class=\"anchor\" href=\"https://ethresear.ch#bundling-in-erc-4337-2\"></a>Bundling in ERC-4337</h3>\n<p>A user wishing to perform some activity on-chain via bundlers issues a User Operation (UserOp, or operation). This UserOp is emitted from the user’s wallet, e.g., after interacting with a DApp. Once the UserOp is broadcast, some bundler receiving the operation may decide to include it in a bundle. A bundle is an “externally-owned account” (EOA) meta-transaction, which writes the data of the included UserOps in its <code>bundle.calldata</code> field. The bundler issues the bundle towards inclusion in a block by a block producer (we discuss the relation between bundler and block producer in a future note).</p>\n<p>Once the bundle is included in the block, and the block makes its way to the chain, the bundle is executed along with other transactions in the block. Essentially, the bundle execution steps are as follows:</p>\n<ul>\n<li><strong>Pre-verification:</strong> A bundler’s EOA transaction will consume 21,000 gas, and the call to the EntryPoint contract will set up key variables to keep track of the execution of the operations in the operation loop.</li>\n<li><strong><a href=\"https://eips.ethereum.org/EIPS/eip-4337#required-entry-point-contract-functionality\" rel=\"noopener nofollow ugc\">Operation loop</a>:</strong> For each operation included in the bundle, the following two steps take place:\n<ul>\n<li><strong>Verification step:</strong> UserOps perform operations containing a verification step, which is encoded in a “smart contract wallet” deployed initially by the user (during an initial UserOp). The verification step may simply check a signature, or perform more complex operations to “grant” the right for the UserOp to proceed with its execution. The verification step is metered by <code>op.verificationGasLimit</code>.</li>\n<li><strong>Execution step:</strong> The core of the UserOp, the execution step performs the operation described in <code>op.callData</code>. This step is also metered, using <code>op.callGasLimit</code>.</li>\n</ul>\n</li>\n</ul>\n<p>As is made clear by the previous decomposition, the pre-verification step is executed once, offering the possibility to amortise the pre-verification costs across all included users. When the bundle is executed, all costs (e.g., <code>block.basefee</code> + priority fees paid by the bundler to the block producer including them) are charged to the bundler, who must ensure that user operations compensate her enough for the costs incurred. We make these statements precise in the following section.</p>\n<h3><a name=\"fee-market-model-for-bundles-3\" class=\"anchor\" href=\"https://ethresear.ch#fee-market-model-for-bundles-3\"></a>Fee market model for bundles</h3>\n<p>We attempt to remain consistent with classic fee markets models. A user <span class=\"math\">t</span> who wishes to emit an operation has some value <span class=\"math\">v_t</span> for the execution of the operation. We assume all operations to have the same size <span class=\"math\">S</span> (i.e., same gas used for the verification and execution steps), and we thus express all quantities as prices per unit of gas.</p>\n<p>Users express their wish to be included by emitting a bid <span class=\"math\">b_t</span> along with their operation. For now, we do not assume a specific grammar for the user to express their bid for inclusion, e.g., the ability to express a max fee and priority fee along with their operation, as they would with EIP-1559. User operations are collected in a mempool <span class=\"math\">\\mathbf{M}</span>, representing the pending status of these operations until inclusion.</p>\n<p>The EIP-1559 fee market exposes a reserve price <span class=\"math\">r</span> known as “base fee”, which bundlers must incur when their bundle is executed. If the bundle contains <span class=\"math\">n</span> operations, the bundler must then expense at least <span class=\"math\">n \\times S \\times r</span>. Additionally, since the bundle consumes “pre-verification gas”, say, some quantity <span class=\"math\">F</span>, the bundler will additionally pay <span class=\"math\">F \\times r</span>. The operations included in the bundle are given by the set <span class=\"math\">\\mathbf{B}</span>.</p>\n<h3><a name=\"bundler-cost-functions-4\" class=\"anchor\" href=\"https://ethresear.ch#bundler-cost-functions-4\"></a>Bundler cost functions</h3>\n<p>We now consider the costs incurred by bundlers for the inclusion of their bundles in the block.</p>\n<p><strong>On-chain cost function:</strong> A bundler issuing bundle <span class=\"math\">\\mathbf{B}</span> when the base fee is <span class=\"math\">r</span> expends a cost:</p>\n<div class=\"math\">\nC_\\text{on-chain}(\\mathbf{B}, r) = F \\times r + n \\times S \\times r\n</div>\n<p>The bundler problem mirrors the block producer problem expressed in <a href=\"https://arxiv.org/abs/2106.01340\" rel=\"noopener nofollow ugc\">[Roughgarden 2021]</a>. There, the block producer had to ensure the provision of some value <span class=\"math\">\\mu</span> compensating her for the cost of including an additional transaction to their block (e.g., <span class=\"math\">\\mu</span> may compensate for the extra load of the block, which delays its propagation and thus increases re-org risk). The block-level fee market must then ensure that the block producer is at least compensated for the total cost <span class=\"math\">n \\times S \\times \\mu</span>, should the block producer include <span class=\"math\">n</span> transactions in their block. The bundler-level fee market will require to at least compensate the bundler for exogenous costs <span class=\"math\">C_\\text{on-chain}(\\mathbf{B}, r)</span>  they incur from the larger fee market they are embedded in.</p>\n<p>ERC-4337 offers the possibility amortise costs beyond sharing the pre-verification gas costs. Should all operations employ the same signature scheme for their verification step, the signatures of these operations may be <em><a href=\"https://youtu.be/CgXzDuN5Xqc?si=lnpEZLKPCp6sjKAp&amp;t=2004\" rel=\"noopener nofollow ugc\">aggregated</a></em> by the bundler, such that instead of verifying on-chain <span class=\"math\">n</span> signatures, a single signature may be verified. In this case, the bundler cost function will need to account for the off-chain costs which the bundler incurs when performing the aggregation. In the following, we make the assumption that such costs are linear in the number of operations, a similar assumption to <a href=\"https://arxiv.org/abs/2404.06495\" rel=\"noopener nofollow ugc\">[Wang et al., 2024]</a>, at a marginal cost <span class=\"math\">\\omega</span>.</p>\n<p>We also account for the reduced gas consumption of each operation, due to savings from the aggregation. When aggregated, operations are not required to publish their signature, but they do require an additional pairing operation. On chains where calldata cost is expensive, but pairing operations/computation are cheap, aggregation thus provides per-operation savings. In this case, we denote by <span class=\"math\">S' &lt; S</span> the reduced size of a transaction. We also need to account for the increased pre-verification gas use <span class=\"math\">F' &gt; F</span>, which now contains the publication and verification of the single on-chain aggregated signature.</p>\n<p><strong>Aggregated cost function:</strong> A bundler issuing bundle <span class=\"math\">\\mathbf{B}</span> with aggregated signatures when the base fee is <span class=\"math\">r</span> expends a cost:</p>\n<div class=\"math\">\nC_\\text{agg}(\\mathbf{B}, r) = F' \\times r + n \\times S' \\times r + n \\times \\omega\n</div>\n<p>In this note, we will not go further, but one may also consider the data publication costs which a bundler may need to expend when their bundle settles on a rollup. We suggest two ways of modelling this and leave this question for future work:</p>\n<ul>\n<li>Either the bundler herself is responsible for data publication (e.g., as a sequencer), and thus requires to obtain from users the necessary amount of funds to pay eventual data publication costs.</li>\n<li>Or the bundle-level fee market is embedded in a larger batch-level fee market, via which the rollup exposes to rollup users (including the bundler) the amount they are required to pay due to congestion (e.g., a base fee) and eventual data publication costs. In this case, the rollup is responsible for balancing their own future costs with their present revenues.</li>\n</ul>\n<h3><a name=\"revisiting-fee-market-quantities-5\" class=\"anchor\" href=\"https://ethresear.ch#revisiting-fee-market-quantities-5\"></a>Revisiting fee market quantities</h3>\n<p>We may now formally express the relevant concepts for the bundle-level fee market, deriving them straightforwardly from previous literature, while taking the embedding into account.</p>\n<p><strong>Bundle-level allocation rule:</strong> A (bundle-level) allocation <span class=\"math\">x</span> decides the set of user operations which the bundler includes in their bundle, given the current mempool <span class=\"math\">\\mathbf{M}</span> and the base fee <span class=\"math\">r</span>.</p>\n<div class=\"math\">\nx_t(\\textbf{M}, r) \\in \\{0, 1\\}, \\forall t\n</div>\n<p><strong>Bundle-level payment rule:</strong> Given the set of selected operations <span class=\"math\">\\mathbf{B}</span>, a payment rule assigns to each included user a fee:</p>\n<div class=\"math\">\np_t(\\textbf{B})\n</div>\n<p><strong>User utility function:</strong> <span class=\"math\">u_t(b_t) = v_t - p_t(\\mathbf{B})</span></p>\n<p>In principle, we could allow for the existence of a burning rule <span class=\"math\">q_t(\\mathbf{B})</span> expressing the fact that the bundler may not receive the totality of all included user payments. We do not consider it in this note however.</p>\n<p><strong>(Myopic) bundler utility function:</strong> <span class=\"math\">u(\\mathbf{B}, r) = \\sum_{t \\in \\mathbf{B}} p_t(\\mathbf{B}) - C(\\mathbf{B}, r)</span></p>\n<p>A bundle-level TFM <span class=\"math\">(x, p)</span> is incentive-compatible for myopic bundlers (MBIC) if, for every mempool <span class=\"math\">\\textbf{M}</span> and base fee <span class=\"math\">r</span>, a myopic bundler maximises its utility by following the suggestion of the allocation rule <span class=\"math\">x</span> (i.e., setting <span class=\"math\">\\textbf{B} = x(\\textbf{M}, r)</span>).</p>\n<h3><a name=\"forming-multiple-bundles-6\" class=\"anchor\" href=\"https://ethresear.ch#forming-multiple-bundles-6\"></a>Forming multiple bundles</h3>\n<p>In the preceding section, we’ve only considered the possibility for the bundler to issue a single bundle. However, we may be interested in the possibility for the bundler to make more than one bundle out of the operations available in the mempool. Given the mempool <span class=\"math\">\\mathbf{M}</span>, let <span class=\"math\">P(\\mathbf{M})</span> represent the set of partitions of the mempool, assigning each operation to a single bundle (we may assume that for each partition, there is a set indexed 0 which contains all the operations not assigned to a bundle for inclusion). The allocation rule then returns the index of the set in the partition to which the operation is assigned.</p>\n<div class=\"math\">\nx(\\textbf{M}, r) \\in P(\\textbf{M})\n</div>\n<p>We can write the set of bundles output by the partition <span class=\"math\">x(\\textbf{M}, \\beta)</span> as <span class=\"math\">\\mathcal{B}(x(\\textbf{M}, r))</span>. Intuitively, these bundles are made up from the operations which do not belong to the set indexed 0. Given a set of bundles <span class=\"math\">\\mathcal{B}</span>, the payment rule is then:</p>\n<div class=\"math\">\np_t(\\mathcal{B})\n</div>\n<p>The user utility function becomes:</p>\n<div class=\"math\">\nu_t(b_t) = v_t - p_t(\\mathcal{B})\n</div>\n<p>and the bundler utility function becomes:</p>\n<div class=\"math\">\nu(\\mathcal{B}, r) = \\sum_{B \\in \\mathcal{B}} \\sum_{t \\in {B}} p_t(\\mathcal{B}) - C(\\mathcal{B}, r)\n</div>\n<h2><a name=\"the-bundler-game-7\" class=\"anchor\" href=\"https://ethresear.ch#the-bundler-game-7\"></a>The bundler game</h2>\n<p>Inclusion of transactions in blocks must remunerate some quantity <span class=\"math\">\\mu</span> to the block producers, which is assumed to be linear in the transaction size in e.g., <a href=\"https://arxiv.org/abs/2106.01340\" rel=\"noopener nofollow ugc\">[Roughgarden, 2021]</a>. This quantity denotes the opportunity cost for the block producer to add an extra transaction to their block, e.g., increasing their gossiping delay and thereby increasing their chances of the block getting re-orged. In Proof-of-Stake, even though the protocol’s schedule allows for enough time to propagate a full block, <a href=\"https://ethresear.ch/t/timing-games-implications-and-possible-mitigations/17612#impact-on-blob-inclusion-ht-dankrad-for-mentioning-this-10\">timing games</a> have induced “last-second” propagation dynamics which have once again made this <span class=\"math\">\\mu</span> parameter relevant.</p>\n<p>In any case, we may observe that the cost-sharing problem at block-level and at bundle-level are very different. At block-level, a transaction need not know what else is going on inside the block to devise its inclusion bid according to EIP-1559 (it may want to know what is going on with respect to MEV <a href=\"https://eprint.iacr.org/2024/331\" rel=\"noopener nofollow ugc\">[Bahrani et al., 2024]</a>, but we’ll consider this a separate issue for now). At bundle-level, bundle overhead costs are no longer linear in the number of transactions, but a fixed overhead may be amortised by many transactions. Further, should the aggregation cost of the user operations be non-linear in the number of transactions (e.g., some proofs are effectively sub-linear in the size being proven), offering the possibility to amortise the total cost over many users.</p>\n<p>This leads to the following game: The bundler wishes for users to place their bids as if they were bidding for the <em>worst case</em>, where the user is alone in the bundle and must compensate by themselves the full overhead gas <span class=\"math\">F</span>. Practically, the user would be faced with the problem of setting three relevant parameters on their operation:</p>\n<ul>\n<li><code>op.maxPriorityFeePerGas</code> and <code>op.maxFeePerGas</code> may be set according to the heuristics a user would use under EIP-1559, i.e., given some estimate amount of gas their operation plans to consume, the user would set these attributes to calibrate how much they are willing to pay in the worst case (<code>maxFee</code>) and how much they are willing to top up in order to pay the eventual block producer (<code>maxPriority</code>). But how should the user estimate the gas?</li>\n<li><code>op.preVerificationGas</code> is an attribute of the UserOperation which must be set to indicate the amount of “extra gas” the user’s operation plans to consume. In our model, we let <span class=\"math\">F</span> denote this “fixed gas overhead”. If <span class=\"math\">n</span> users were included in the bundle, each user ought to set <code>preVerificationGas = F / n</code>. However, should the user prepare their operation with a worst-case scenario in mind, they would set <code>preVerificationGas = F</code>.</li>\n</ul>\n<p><code>preVerificationGas</code> is then the principal vector via which users mediate their bid and attempt to account for the amortisation of costs by the bundler. Assume <span class=\"math\">n</span> users do come to the market with their operations, and all are convinced by the bundler to bid in the worst-case of being alone in the bundle. We’ll also assume that the users are setting their <code>maxPriorityFeePerGas</code> to zero for the sake of this example. Then these <span class=\"math\">n</span> users are all setting <code>preVerificationGas = F</code>, and the bundler is able to output a bundle remunerating them with:</p>\n<div class=\"math\">\nn \\times F \\times r\n</div>\n<p>while they must incur a cost:</p>\n<div class=\"math\">\nF \\times r\n</div>\n<p>once they publish the bundle bundling all <span class=\"math\">n</span> operations together in a block. This yields the bundler a profit <span class=\"math\">\\pi = (n-1) \\times F \\times r</span>.</p>\n<p>This situation may be represented by a two-stage game, where the users first produce their user operations, and the bundler subsequently decides to bundle them. We assume that users do not possess information about the current amount of pending users, and so are unable to estimate the bundler’s true ability to amortise their fixed costs.</p>\n<p>In the first stage, users send their operations, which commit to their attributes such as <code>preVerificationGas</code>. In the second stage, the bundler having received all user transactions decides to output a bundle or set of bundles. Interestingly, even if the users know how many other users will play in the first stage, i.e., even if <span class=\"math\">n</span> is common knowledge across all users, the bundler may be able to force the users into setting the worst-case <code>preVerificationGas = F</code> by threatening to play <span class=\"math\">\\mathcal{B}_\\text{pessimistic} = \\{ \\{ 1 \\}, \\{ 2 \\}, \\{ 3 \\}, \\dots, \\{ n \\} \\}</span>, i.e., threatening to keep every user in their own separate bundle and charging them the maximum amount gas <span class=\"math\">F</span>.</p>\n<p>Note that this threat may not be credible, as users would expect the bundler to prefer playing <span class=\"math\">\\mathcal{B}_\\text{ideal} = \\{ \\{1, 2, 3, \\dots, n \\} \\}</span>, i.e., output a single bundle with all operations included there, realising <span class=\"math\">\\pi</span>. However, users may not have access to the true value of <span class=\"math\">n</span>, and thus they are unable to set their <code>preVerificationGas</code> in a way that forces the bundler to ideally bundle all of them.</p>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/2/a/2a1e3be0f917af5d2d8d3fa4c487a848543c76b2.png\" data-download-href=\"https://ethresear.ch/uploads/default/2a1e3be0f917af5d2d8d3fa4c487a848543c76b2\" title=\"Ideal case: costs are split between the users in the bundle. Pessimistic case: users overpay, and costs are not split.\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/2/a/2a1e3be0f917af5d2d8d3fa4c487a848543c76b2_2_484x500.png\" alt=\"Ideal case: costs are split between the users in the bundle. Pessimistic case: users overpay, and costs are not split.\" data-base62-sha1=\"60APqXwY3iqF7PWcsFuLI0CLetc\" width=\"484\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/2/a/2a1e3be0f917af5d2d8d3fa4c487a848543c76b2_2_484x500.png, https://ethresear.ch/uploads/default/optimized/3X/2/a/2a1e3be0f917af5d2d8d3fa4c487a848543c76b2_2_726x750.png 1.5x, https://ethresear.ch/uploads/default/original/3X/2/a/2a1e3be0f917af5d2d8d3fa4c487a848543c76b2.png 2x\" data-dominant-color=\"F3EEF1\"></a></div><p></p>\n<p>An extension of this model may consider the Bayesian case, where the users have access to a distribution over <span class=\"math\">n</span>, i.e., they may anticipate some random variable <span class=\"math\">n</span> users to show up at any given time step, according to some distribution (e.g., Poisson arrivals), even if they do not know in advance the outcome of the random variable. This may lead to inefficient outcomes, as the following example shows:</p>\n<blockquote>\n<p>Alice expects 9 other users to show up besides herself, and so she sets her <code>preVerificationGas</code> to 1 as she knows <span class=\"math\">F = 10</span>. Alice’s value and the value of all other users is compatible with them setting <code>preVerificationGas = 3</code>, but she attempts to pay the least amount possible for her inclusion. As it turns out, only 5 users appear on the market, who have all set their <code>preVerificationGas</code> to 1 too. The bundler will not be compensated for <code>F = 10</code> units of gas, thus the bundler does not output a bundle and users receive 0 utility. This is obviously suboptimal, as the users could have all set <code>preVerificationGas = 2</code> for instance and receive 1 utility (the maximum <code>preVerificationGas</code> they were willing to set minus the actual <code>preVerificationGas</code> they paid to be included).</p>\n</blockquote>\n<h2><a name=\"future-work-8\" class=\"anchor\" href=\"https://ethresear.ch#future-work-8\"></a>Future work</h2>\n<p>As the bundler game shows, an allocation problem faces the user wishing to be included by the bundler. In the next note, we will address different approaches to recovering “good UX” for the user to prevent them from overpaying a bundler who is better informed about the demand for its bundle capacity. The next exploration will require an understanding of the market structure tying users, bundlers and builders/block producers together.</p>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/embedded-fee-markets-and-erc-4337-part-1/19542\">Read full topic</a></p>","link":"https://ethresear.ch/t/embedded-fee-markets-and-erc-4337-part-1/19542","pubDate":"Mon, 13 May 2024 09:55:52 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19542"},"source":{"@url":"https://ethresear.ch/t/embedded-fee-markets-and-erc-4337-part-1/19542.rss","#text":"Embedded fee markets and ERC-4337 (part 1)"}},{"title":"Sandwitch attacks on ePBS","dc:creator":"potuz","category":"Consensus","description":"<p>In this quick note we analyze the special case of ex-anti and sandwitch attacks on ePBS vs the current implementation. We show that with the proposed values for proposer and builder’s boosts as in <a href=\"https://ethresear.ch/t/payload-boosts-in-epbs/18769\" class=\"inline-onebox\">Payload boosts in ePBS</a> the situation is actually an improvement over the status quo.</p>\n<p>This short note contains the raw numbers and it’s meant to be a quick update, no fancy diagrams, for such I recommend looking at the design notes in <a href=\"https://hackmd.io/@potuz/rJ9GCnT1C\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">ePBS specification notes - HackMD</a> or even the forkchoice implementation notes in <a href=\"https://hackmd.io/@potuz/SJdXM43x0\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">ePBS Forkchoice annotated spec - HackMD</a></p>\n<h2><a name=\"ex-anti-reorgs-the-need-for-proposer-boost-1\" class=\"anchor\" href=\"https://ethresear.ch#ex-anti-reorgs-the-need-for-proposer-boost-1\"></a>Ex-anti reorgs, the need for proposer boost</h2>\n<p>The classical 1-slot ex-anti reorg goes like this. The proposer of slot <code>N</code> plans to reorg the block of <code>N+1</code>. For this they withhold their block during their time. After the proposer of <code>N+1</code> reveals his block (based on <code>N-1</code>) the attacker reveals their block <code>N</code> together with <span class=\"math\">\\beta</span> attestations for it. The attack is succesful if</p>\n<p><span class=\"math\"> \\beta &gt; PB </span>.</p>\n<p>Which in the current situation makes us resilient to these attacks up to a 40% adversary.</p>\n<h2><a name=\"ex-anti-on-epbs-2\" class=\"anchor\" href=\"https://ethresear.ch#ex-anti-on-epbs-2\"></a>Ex anti on ePBS</h2>\n<p>On ePBS the situation for an ex-anti attack changes due to the (block, slot) voting nature of fork choice. The attack goes as follows.</p>\n<ul>\n<li>Since the proposer of <code>N</code> wants to get their payload included, they can’t simply reveal their block after <code>N+1</code> does. They have to have a timely payload so that the PTC votes for it.</li>\n<li>They therefore reveal their consensus block targeting a split view of the attesters at 1/4 of a slot. <span class=\"math\">1-x</span> of the committee votes for <code>N-1</code>, as they didn’t see the block on time, and <span class=\"math\">x - \\beta</span> vote for <code>N</code> (the adversary withholds their attestations).</li>\n<li>The builder of <code>N</code> reveals on time and the PTC attests to the builder’s presence.</li>\n<li>The proposer of <code>N+1</code> will reveal a block based on <code>N-1</code> only if<br>\n<span class=\"math\"> 1 - 2x &gt; RB - \\beta</span><br>\nwhere RB is the reveal boost that the builder of <code>N</code> received.</li>\n<li>The attacker now reveals their attestations for <code>N</code>.</li>\n</ul>\n<p>The attack is successful if <span class=\"math\"> RB &gt; PB + 1 - 2x</span> But given the above inequality this implies <span class=\"math\">RB &gt; PB + RB - \\beta</span>. Therefore we obtain as in the current status quo <span class=\"math\">\\beta &gt; PB</span>.</p>\n<p>Since in ePBS the proposer boost PB is set to <span class=\"math\">20%</span>. One is inclined to think that we have ex-anti reorg protections only up to 20%, a considerable downgrade from the current implementation. But notice that <strong>the payload of N+1 is not reorged</strong>. In fact, the builder of N+1 will not reveal their block since the head is N when the attack is successful, and because of the <em>builder withholding safety</em>, their bid payment will not be necessary. In fact, in order to reorg the payload as well in ePBS, we would require a sandwich attack.</p>\n<h2><a name=\"sandwich-attacks-the-classical-case-3\" class=\"anchor\" href=\"https://ethresear.ch#sandwich-attacks-the-classical-case-3\"></a>Sandwich attacks the classical case</h2>\n<p>A sandwich attack is very similar to an ex-anti one, but now the adversary is proposing slots N and N+2 and plans to reorg the block N. Their setup is just as in the ex-anti attack: they reveal the block N late, together with <span class=\"math\">\\beta</span> attestations for it. Block <code>N+1</code> is early and receives <span class=\"math\">1 - \\beta</span> attestations (the attacker votes for <code>N</code> during N+1. The attacker then reveals N+2 based on N, obtaining proposer boost and attempting to reorg N+1. The attack is successful if<br>\n<span class=\"math\">2 \\beta + PB &gt; 1 - \\beta \\Leftrightarrow 3\\beta &gt; 1 - PB</span><br>\nFrom where with the current values we obtain protection against this attack against validators up to <span class=\"math\">\\beta = 20\\%</span>.</p>\n<h2><a name=\"sandwich-attack-in-epbs-4\" class=\"anchor\" href=\"https://ethresear.ch#sandwich-attack-in-epbs-4\"></a>Sandwich attack in ePBS</h2>\n<p>In ePBS the sandwich attack starts also as an ex-anti setup. In particular, to get the proposer of N+1 to base their block on N-1, the setup requires<br>\n<span class=\"math\"> 1 - 2x &gt; RB - \\beta</span><br>\nas above. The consensus block of N+1 receives <span class=\"math\">1 - \\beta</span> votes just as in the current implementation, and the builder of N+1 reveals timely obtaining a builder’s boost: this is the main difference, <strong>the builder’s boost makes this sandwich attack much more difficult</strong>.<br>\nThe attacker then reveals their N+2 block based on N. Obtaining proposer boost. The attacker’s branch then has weight <span class=\"math\">PB + \\beta + x</span>. While the canonical branch has weight <span class=\"math\">RB + 1 - \\beta + 1 - x</span>. The attack is successful then if<br>\n<span class=\"math\"> PB + 2\\beta &gt; RB + 1 + (1 - 2x) </span><br>\nWhich according to the inequality above implies <span class=\"math\">PB + 2 \\beta &gt; 2RB + 1 - \\beta</span>, from where<br>\n<span class=\"math\">\\beta &gt; \\frac{2RB +  1 - PB}{3}</span><br>\nWhich with the proposed values of RB = 40% and PB = 20% gives protection against this attack by an attacker up to 50%, a significant improvement over the current situation.</p>\n<p>Multiple slot post-anti reorgs become worse in ePB. To give some numbers, in the current implementation we are resistant to 60% attackers for 1 slot post-anti reorgs and 53% for 2 slots post-anti-reorgs. On ePBS these numbers become 40% and 37%.</p>\n            <p><small>3 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/sandwitch-attacks-on-epbs/19538\">Read full topic</a></p>","link":"https://ethresear.ch/t/sandwitch-attacks-on-epbs/19538","pubDate":"Mon, 13 May 2024 07:18:54 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19538"},"source":{"@url":"https://ethresear.ch/t/sandwitch-attacks-on-epbs/19538.rss","#text":"Sandwitch attacks on ePBS"}},{"title":"FullDAS: towards massive scalability with 32MB blocks and beyond","dc:creator":"cskiraly","category":"Sharding","description":"<p>Author: Csaba Kiraly, in collaboration with Leonardo Bautista-Gomez and Dmitriy Ryajov, from the <a href=\"https://codex.storage\" rel=\"noopener nofollow ugc\">Codex.storage</a> research team.</p>\n<p><em>Note: this document describes the current state of our thinking, result of a collaborative effort and numerous discussions with other teams. It would not had been possible without the contribution and ideas of <a class=\"mention\" href=\"https://ethresear.ch/u/dankrad\">@dankrad</a> , <a class=\"mention\" href=\"https://ethresear.ch/u/djrtwo\">@djrtwo</a> , <a class=\"mention\" href=\"https://ethresear.ch/u/fradamt\">@fradamt</a> , <a class=\"mention\" href=\"https://ethresear.ch/u/agemanning\">@AgeManning</a> , <a class=\"mention\" href=\"https://ethresear.ch/u/nashatyrev\">@Nashatyrev</a> , <a class=\"mention\" href=\"https://ethresear.ch/u/matt\">@matt</a> , <a class=\"mention\" href=\"https://ethresear.ch/u/pop\">@pop</a> , and <a class=\"mention\" href=\"https://ethresear.ch/u/echo\">@Echo</a> .</em></p>\n<h2><a name=\"tldr-1\" class=\"anchor\" href=\"https://ethresear.ch#tldr-1\"></a>TL;DR</h2>\n<ul>\n<li>Danksharding was planned for 32MB blocks, but our current <strong>networking stack</strong> can’t handle that, <strong>becoming the bottleneck</strong>. With HW accelerated KZG on the horizon for the block encoding, our networking stack will have to scale even more.</li>\n<li>DAS encompasses two different concepts: <strong>Data Availability</strong> achieved by dispersal to custody, and <strong>Sampling</strong> from custody. We can use this distinction to our advantage, designing an efficient dispersal, and an efficient sampling protocol.</li>\n<li><strong>liteDAS</strong> is our sampling protocol, designed to provide low-latency, bandwidth efficient, and robust sampling.</li>\n<li><strong>Dispersal</strong> can be done with protocols similar to GossipSub, but changes are required.</li>\n<li>With the combination of deterministic custody assignments and <strong>Topic Routing</strong>, we can find peers fast enough for dispersal and for sampling.</li>\n<li>To enable sampling, we should also enable <strong>Ephemeral Connect</strong>, not supported by the current stack.</li>\n<li><strong>2D encoding</strong> (or some other locally repairable code) is required for in-network-repair, the key to <strong>availability amplification</strong>.</li>\n</ul>\n<h2><a name=\"introduction-2\" class=\"anchor\" href=\"https://ethresear.ch#introduction-2\"></a>Introduction</h2>\n<p>The <a href=\"https://notes.ethereum.org/@dankrad/new_sharding\" rel=\"noopener nofollow ugc\">original Danksharding proposal</a> targeted 32 MB blocks, and this size was mainly chosen due to compute constraints for the KZG commitments used in the <a href=\"https://ethresear.ch/t/lossydas-lossy-incremental-and-diagonal-sampling-for-data-availability/18963#sampling-over-the-das-encoding-3\">DAS data structure</a>. Since then, there have been various iterations on the network design, aiming to efficiently make the block data available in a P2P structure, and to let nodes sample from this structure. However, none of these constructs convincingly support blocks of 32MB, making the performance of the networking solution the real bottleneck. In this post we look at these networking issues and propose solutions, with the aim of making 32 MB (and possibly beyond) achievable.</p>\n<h3><a name=\"das-data-availability-vs-sampling-3\" class=\"anchor\" href=\"https://ethresear.ch#das-data-availability-vs-sampling-3\"></a>DAS: Data Availability vs. Sampling</h3>\n<p>The goal of DAS (Data Availability Sampling) is to ascertain, with high probability, that a given block of data was made available to anyone interested, and to do this without requiring any single node in the system to hold - or even to temporarily receive - the whole block of data.</p>\n<p>That is, we want to keep the bandwidth requirements of individual nodes at the levels of the current (after EIP-4844) Ethereum network, while handling orders of magnitude larger blocks. From the networking perspective, this is an important constraint on the Ethereum DAS design.</p>\n<p>For our discussion on networking aspects, it is important to emphasize that there are two distinct parts to DAS: the “making data available” part, and the “sampling” part.</p>\n<h4><a name=\"making-data-available-4\" class=\"anchor\" href=\"https://ethresear.ch#making-data-available-4\"></a>Making Data Available</h4>\n<p>First, the data has to be made available. Availability means that nodes in the system get “enough” data to be able together to reconstruct the original block. Thus, availability is a <strong>system level property</strong>: data is either available to the whole system, or not available. At least, this is what we want to achieve.</p>\n<p>As in P2P systems in general, the amount of data should better not be “just enough”, but it should be <strong>overwhelmingly enough</strong>, meaning the data can be reconstructed even if there is churn, network partitioning, or a large portion of malicious nodes. Only at this point we can say that the data was made available.</p>\n<p>In other words, we should design a protocol that makes sure that there are no borderline situations: the data is either not available (wasn’t released by the source), or it is overwhelmingly available. As we will see later, it is the interplay between erasure coding and a robust and largely redundant P2P networking structure that makes this possible.</p>\n<h4><a name=\"sampling-5\" class=\"anchor\" href=\"https://ethresear.ch#sampling-5\"></a>Sampling</h4>\n<p>Second, there is sampling. Sampling is an individual node’s view of what was made available to the system. It is a single node convincing itself that the data was made available, and the technique it uses for this is to retrieve a few pieces of the block. The <strong>sample</strong> is the (typically random) selection of the pieces to retrieve, while <strong>sampling</strong> is the retrieval of these pieces. If this sampling is successful, and with a few <strong>independence assumptions</strong>, the node can convince itself that the data was indeed made available.</p>\n<p>Importantly, in the background, behind the <a href=\"https://ethresear.ch/t/lossydas-lossy-incremental-and-diagonal-sampling-for-data-availability/18963#setting-the-sample-size-7\">probabilistic calculations</a>, there are those nasty independence assumptions. Essentially it is assumed that data is (was, or will be) released independent of what sample was selected. This unfortunately can be gamed, and the more the block producer and its “accomplices” knows about the sample selection of a node, the easier it is to introduce correlation and thus fool someone. Thus, <strong>sample selection</strong> and <strong>limited disclosure of the selection</strong> is an important part of the security guarantees.</p>\n<p><em>Note that in this writeup we call the pieces of the block <strong>segments</strong>, but they also go by the name “column” when 1D encoding is used, “cell” when 2D encoding is used, or sometimes the confusing term “sample” is used both the segment as well as for the list of selected segments.</em></p>\n<p><em>Also note that sampling is not the only technique we could use to “convince ourselves” that the data was available. Without trying to list all possibilities, we could use succinct proofs, trusted friends, etc. Sampling, however, is trustless and spreads segments of data to all nodes in the system, eventually enabling an extra layer of redundancy and thus recovery.</em></p>\n<h3><a name=\"interest-custody-vs-sample-6\" class=\"anchor\" href=\"https://ethresear.ch#interest-custody-vs-sample-6\"></a>Interest: Custody vs. Sample</h3>\n<p>Both when data is made available, and when nodes are sampling, segments of the block get delivered to nodes. Which segments get to which node, however, is driven by different objectives in these two phases.</p>\n<p>We call the segments that should be delivered to a node it’s <strong>interest</strong>. We have two types of interest in the system. They are similar, but serve different purposes and have some fundamental differences:</p>\n<ul>\n<li><strong>custody</strong>: segments getting to nodes as part of making the data available are taken into custody and used to serve sampling. That is, custody has a double goal: providing availability and at the same time serving as a sampling infrastructure.</li>\n<li><strong>sample</strong>: sampling is for the individual node to convince itself about availability with very high probability by checking that enough segments are in custody.</li>\n</ul>\n<p>Interest can <strong>change over time</strong>, for example from epoch to epoch for the sample selection, or with some other time granularity for custody. Changing it or keeping it fixed has both security and network efficiency implications.</p>\n<h3><a name=\"das-phases-dispersal-vs-sampling-7\" class=\"anchor\" href=\"https://ethresear.ch#das-phases-dispersal-vs-sampling-7\"></a>DAS Phases: Dispersal vs. Sampling</h3>\n<p>The fundamental differences between the requirements of data availability and sampling, and between the properties of custody and sample, are also reflected in the network design. We can differentiate between two phases of segment distribution:</p>\n<ul>\n<li><strong>dispersal</strong>: in which segments of the block are distributed in the P2P network to provide overwhelming availability and custody.</li>\n<li><strong>sampling</strong>: in which nodes collect a random sample of segments from custody.</li>\n</ul>\n<p>The two phases can use different P2P network constructs. In what follows we focus on these network constructs, deriving fast, robust, and bandwidth efficient protocols both for dispersal and for sampling.</p>\n<h2><a name=\"fulldas-networking-8\" class=\"anchor\" href=\"https://ethresear.ch#fulldas-networking-8\"></a>FullDAS networking</h2>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/9/3/93a404791201f9e15e8d268a971c5fd54d120d7c.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/93a404791201f9e15e8d268a971c5fd54d120d7c\" title=\"FullDAS - LossyDAS - liteDAS - Data Availability Sampling Components\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/9/3/93a404791201f9e15e8d268a971c5fd54d120d7c_2_666x500.jpeg\" alt=\"FullDAS - LossyDAS - liteDAS - Data Availability Sampling Components\" data-base62-sha1=\"l45APdFj7UJvsf2ot9sCYQImCKM\" width=\"666\" height=\"500\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/9/3/93a404791201f9e15e8d268a971c5fd54d120d7c_2_666x500.jpeg, https://ethresear.ch/uploads/default/original/3X/9/3/93a404791201f9e15e8d268a971c5fd54d120d7c.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/9/3/93a404791201f9e15e8d268a971c5fd54d120d7c.jpeg 2x\" data-dominant-color=\"E4E2E4\"></a></div><p></p>\n<p>In the original design, GossipSub was planned to be used for dispersal, with many (512 for columns and 512 for rows) topics, distributing columns and rows into custody at all the staked nodes (beacon nodes with validators). For sampling, instead, a separate DHT was planned to be set up from all full nodes (staked and non-staked), serving all the sampling queries. This presented several challenges, as we have <a href=\"https://ethresear.ch/t/scalability-limitations-of-kademlia-dhts-when-enabling-data-availability-sampling-in-ethereum/18732\">highlighted in our related post and paper</a>.</p>\n<p>As a consequence, in <strong>PeerDAS</strong> and in <strong>SubnetDAS</strong> we have tweaked the design to provide intermediate solutions, with compromises both in functionality and in scalability.</p>\n<p>In <a href=\"https://ethresear.ch/t/peerdas-a-simpler-das-approach-using-battle-tested-p2p-components/16541\">PeerDAS</a>, we have modified custody assignment and dispersal to be based on the NodeID, making all full nodes (both staked and non-staked) be part of the custody system. Sampling is then made from this P2P structure using a Request/Response (Req/Resp) protocol from existing peers of a node, adding more pressure on peer discovery (Discv5), and the number of peers that nodes have to sustain.</p>\n<p><a href=\"https://ethresear.ch/t/subnetdas-an-intermediate-das-approach/17169\">SubnetDAS</a>, instead, modifies the design to use the GossipSub distribution mechanism all the way, both for dispersal and for sampling. This, again, limits our possibilities, also sacrificing the unlinkability of sampling queries.</p>\n<p>A fast and bandwidth-efficient implementation of these proves to be challenging even for blocks of a few MBs, and this is where we arrive to our main topic: <strong>how to make DAS work for blocks of 32 MB and beyond?</strong></p>\n<p>In what follows, we introduce the important parts of the stack:</p>\n<ol>\n<li>liteDAS: fast and efficient sampling from custody</li>\n<li>Finding custody peers fast:\n<ul>\n<li>Custody allocation and sample selection</li>\n<li>Topic Routing</li>\n<li>Ephemeral Connect</li>\n</ul>\n</li>\n<li>Making dispersal more efficient</li>\n<li>Availability amplification with 2D encoding</li>\n</ol>\n<h3><a name=\"litedas-the-sampling-protocol-9\" class=\"anchor\" href=\"https://ethresear.ch#litedas-the-sampling-protocol-9\"></a>liteDAS: The Sampling Protocol</h3>\n<p>Sampling, at an abstract level, sounds very simple:</p>\n<ul>\n<li>take a random sample of block segment IDs</li>\n<li>ask for these from nodes custodying it</li>\n<li>wait for all the responses</li>\n<li>declare success if received all, otherwise declare failure</li>\n</ul>\n<p>In reality, however, things get much more complicated. We have dealt with some of the complication related to sample selection in <a href=\"https://ethresear.ch/t/lossydas-lossy-incremental-and-diagonal-sampling-for-data-availability/18963\">our post on LossyDAS, IncrementalDAS, and DiDAS</a>, but we have left out all the networking aspects from that post.</p>\n<p>To design a sampling protocol, besides the draft outline above, we should also answer questions like:</p>\n<ul>\n<li>when should a node start sampling?</li>\n<li>when should sampling end, what should be the timeout?</li>\n<li>if we know several nodes custodying the same segment, which one to ask?</li>\n<li>what to do if we do not know a node that is supposed to custody a segment?</li>\n<li>what to do when sampling fails?</li>\n<li>etc.</li>\n</ul>\n<p>Moreover, we should design a protocol that is fast, robust, and bandwidth efficient.</p>\n<p>For sampling, we propose <strong>liteDAS</strong>, a new Req/Resp protocol that aims to provide close to minimum sampling latency with close to minimal bandwidth usage, avoiding excessive resource utilization both on the happy path and when there are issues. The key observations behind liteDAS are:</p>\n<ul>\n<li>There is no “perfect time” to ask for a segment, since we don’t know when dispersal will make these arrive to custody. It is better to ask early and wait.</li>\n<li>Sampling nodes have some time (the dispersal time) to prepare for sampling. We can use this time to make sampling efficient.</li>\n<li>We can hide our sample better if we ask for segments one-by-one, asking each from distinct nodes.</li>\n<li>Having a fast and efficient way of finding custody nodes for a given segment is essential.</li>\n</ul>\n<p>The <strong>messaging primitive</strong> we propose is a <strong>request with an explicit timeout</strong>. This simple primitive allows us to start sampling early (at slot start), and build a nice dynamic behavior with an initial period to handle the happy path, and a second period to handle potential issues, as outlined below:</p>\n<ul>\n<li>At <span class=\"math\">T_0</span> (slot start, or when public parameters are known)\n<ul>\n<li>decide sample (list of segment IDs) using local randomness\n<ul>\n<li>eventually consider using <a href=\"https://ethresear.ch/t/lossydas-lossy-incremental-and-diagonal-sampling-for-data-availability/18963#didas-steering-away-from-uniform-random-sampling-11\">DiDAS</a> and/or <a href=\"https://ethresear.ch/t/lossydas-lossy-incremental-and-diagonal-sampling-for-data-availability/18963#lossydas-accept-partial-sampling-9\">LossyDAS</a></li>\n</ul>\n</li>\n<li>For each ID:\n<ul>\n<li>select list of candidate peers who might custody given ID</li>\n<li>select <span class=\"math\">P=1</span> of these candidate nodes (eventually ranking), and send request with long timeout (e.g. 4s). <span class=\"math\">P</span> is the “parallelism” parameter.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>at <span class=\"math\">T_1=4s</span>\n<ul>\n<li>for every ID still missing\n<ul>\n<li>select next candidate node and send request with short timeout</li>\n<li>use timeouts and the number of outstanding queries to avoid traffic explosion</li>\n<li>eventually search for new candidates (this can also be done proactive, before <span class=\"math\">T_1</span>)</li>\n</ul>\n</li>\n<li>Optionally, extend sample according to <a href=\"https://ethresear.ch/t/lossydas-lossy-incremental-and-diagonal-sampling-for-data-availability/18963#incrementaldas-dynamically-increase-the-sample-size-10\">IncrementalDAS</a> with some period</li>\n</ul>\n</li>\n</ul>\n<p>Intuitively, this is fast (reducing sampling latency close to minimum), bandwidth efficient (sending only one Req/Resp per segment on the happy path), and robust (explores sampling options once custody should be there).</p>\n<h4><a name=\"fast-10\" class=\"anchor\" href=\"https://ethresear.ch#fast-10\"></a>Fast</h4>\n<p>Sending the sampling query at the start of the slot allows us to minimize the sampling delay to a single 1-hop latency on top of the dispersal delay (the delay with which the node we queried received the segment or column).</p>\n<p>In more detail, to understand why this is fast, let’s see what would be the fastest. The minimum sampling latency would be what one could achieve if the node asks, right when it knows what samples it needs, all its peers that could have the sample, i.e. all peers that plan to custody that segment. That would however mean that our node receives lots of responses, adding considerable extra load. In liteDAS we only ask <span class=\"math\">P</span> of them at a time, as a compromise between bandwidth efficiency and latency. <a href=\"https://ethresear.ch/t/big-block-diffusion-and-organic-big-blocks-on-ethereum/17346\">Our data on GossipSub latency distribution</a> and our initial simulations show that the latency compromise is very limited on the happy path.</p>\n<h4><a name=\"bandwidth-efficient-11\" class=\"anchor\" href=\"https://ethresear.ch#bandwidth-efficient-11\"></a>Bandwidth efficient</h4>\n<p>The protocol receives every sample (or column) exactly once on the happy path. On the unhappy path, we can set a compromise between following a sequential logic with short timeouts, or allowing some parallelism (and thus duplicates) by changing <span class=\"math\">P</span> in later phases. Importantly, if the data is actually not available, it will still keep resource utilization in limits.</p>\n<h4><a name=\"robust-12\" class=\"anchor\" href=\"https://ethresear.ch#robust-12\"></a>Robust</h4>\n<p>In the first phase, the robustness of the above sampling relies on the robustness of dispersal. Dispersal already employs a number of reliability techniques, thus, when on the happy path, it is very likely that for every ID, the single node we select will receive the sample.<br>\nIf instead there are issues with dispersal, our sampling also becomes less latency sensitive: sampling should anyway not succeed until availability through custody is widespread. Thus, we have time to “hunt” for segments. After the initial phase, our protocol will cycle through potential other peers taking in custody the same segment. At that point, we can also send more queries in parallel, eventually allowing some duplicates.</p>\n<h4><a name=\"possible-extensions-13\" class=\"anchor\" href=\"https://ethresear.ch#possible-extensions-13\"></a>Possible Extensions</h4>\n<p>Beyond the basic idea, there are a few other tweaks that can improve dynamic behaviour:</p>\n<ol>\n<li>Nodes can anticipate the hunt for peers that could provide a given segment. These are the peers that will eventually custody that segment.</li>\n<li>Since sample selection is done using local randomness, nodes could even prepare the sample (list of IDs) well in advance, anticipating the search for candidate peers with slots or even epochs.</li>\n<li>To avoid traffic explosion, we recommend controlling the number of outstanding queries, together with timeouts. This practically means that we can avoid traffic explosion even in cases of an unavailable block or when there are large-scale network issues.</li>\n<li>As mentioned before, asking one node at a time works, but this can be increased to e.g asking 2 or 3 in parallel. These are compromises that can even be made locally, we can’t really mandate them anyway. (Actually we could, using Rate Limiting Nullifier-like techniques, but that’s out of scope here and seems too complex for the scope).</li>\n<li>We could also include a HAVE list in the query response message. The reason behind this is that it gives extra information on the state of diffusion that we would not have otherwise. Given the 1D or 2D structure, a have list can be compressed very well to a small bitmap, so it is not much extra bytes. Eventually, to stay generic on the message primitive, we can make it a flag in the request whether we want a HAVE list in the response.</li>\n<li>Finally, it is worth mentioning that sampling nodes could use the information collected during protocol execution to feed back segments into custody. One way to make this happen is to introduce a Resp with a NACK (negative acknowledgment) style message when the timeout has passed and the segment is not in custody. This “counter-request” would mean that the sampling node should send the segment when it receives it from someone.</li>\n</ol>\n<h3><a name=\"finding-custody-peers-fast-14\" class=\"anchor\" href=\"https://ethresear.ch#finding-custody-peers-fast-14\"></a>Finding Custody Peers Fast</h3>\n<p>liteDAS still assumes we have the peers to send requests to. What if we don’t have these, and we have to search for peers taking in custody a given ID? What if we also have to go through a convoluted connection procedure before requesting the segment?</p>\n<p>As highlighted before, we can anticipate the search for custody peers. Still, there are times when we need to search for peers with a specific ID in custody, and that should be relatively fast. This is a crucial point currently being debated in discussions around DAS. As part of the sampling process, we need to find and connect to peers in a few seconds, which seems to be one of the main limiting factors. There is a similar problem for dispersal as well when building the mesh for efficient column(/row) based distribution, although in that case timing is less critical.</p>\n<p>The problem with the current protocol stack was summarized well by AgeManning as <a href=\"https://github.com/ethereum/consensus-specs/pull/3623#issuecomment-2046558155\" rel=\"noopener nofollow ugc\">part of the PeerDAS spec discussions</a>. Getting individual segments from new peers is awfully inefficient with the current stack. Clearly, the problem has two mayor underlying aspects:</p>\n<ul>\n<li><strong>Finding nodes is inefficient</strong>: currently this would be done using Discv5. Since Discv5 has no topic search, it is a random walk on the DHT, enumerating peers in hope of finding a good one. We propose to make this faster by deterministic custody assignment and by what we call “topic routing”.</li>\n<li><strong>Connecting to nodes is inefficient</strong>: we intend to solve this by introducing “ephemeral connect”.</li>\n</ul>\n<h4><a name=\"deterministic-nodeid-based-custody-assignment-15\" class=\"anchor\" href=\"https://ethresear.ch#deterministic-nodeid-based-custody-assignment-15\"></a>Deterministic NodeID-based Custody Assignment</h4>\n<p>First, lets see what we can do to find custody nodes for a given segment fast. The key to this is to assign custody wisely.</p>\n<p>Since we need system-wide availability, custody has to be assigned properly, providing good coverage. A randomized local selection would provide this, but fortunately we can do better. A nice property of custody is that we <strong>do not need to hide who takes custody of what</strong>. We can use this property to make our system more efficient by <strong>deriving custody interest from the NodeID</strong> (eventually with some rotation scheme and using public randomness) in a deterministic way. It seems that publicly exposing the interest of nodes for the purposes of custody does not influence security. It also seems that we can expose interest publicly well ahead of time (keeping custody stable in time, similar to what we do with attestations today), and it still does not create security issues.</p>\n<p><em>Note that there is a catch here: by using the NodeID, we are not binding custody to validators, as in the original proposal, but to full nodes (including non-staked nodes). Thus, we cannot really mandate custody. We currently do not want to mandate it anyway, but later we might introduce <a href=\"https://dankradfeist.de/ethereum/2021/09/30/proofs-of-custody.html\" rel=\"noopener nofollow ugc\">Proof Of Custody</a>, and then we have to revisit this point. It is also relatively easy to create a large amount of new NodeIDs, potentially exposing custody to targeted sybil attacks.</em></p>\n<p>By deriving custody from NodeID, we can speed up search in two ways. First, we can derive custody from the leftmost bits of the nodeID. This allows us to use the Discv5 Kademlia search instead of a random walk, since Kademlia is prefix-based. Second, if a custody rotation scheme is used (nodes changed what columns/rows they custody with some period), we can calculate this from the NodeID, without contacting the peers or getting updated ENR records from Discv5.</p>\n<p>We already use this NodeID-based deterministic custody assignment trick in PeerDAS: it allows us to make the dispersal more efficient, and it also allows sampling peers to find custody nodes easier, just based on the NodeID and a small amount of metadata published together with the NodeID in the ENR.</p>\n<p><em>Note that the same is not true for the sample, where we do care about making it relatively hard to figure out what will be sampled by a given node, as otherwise we would make it easy to attack individual nodes. Hence, we cannot derive the sample (list of segment IDs) from the NodeID, and we also better avoid sending the whole sample (again, the list of IDs, not the data) to a single node. We thus prefer nodes to request samples on-the-fly, preferably exposing interest selectively to a diverse set of peers, limiting the exposure of the individual node.</em></p>\n<h4><a name=\"topic-routing-efficiently-finding-nodes-for-a-given-column-or-row-16\" class=\"anchor\" href=\"https://ethresear.ch#topic-routing-efficiently-finding-nodes-for-a-given-column-or-row-16\"></a>Topic Routing: efficiently finding nodes for a given column or row</h4>\n<p>Another option we have at hand is to introduce custody node search into our protocol directly, circumventing the difficulties with Discv5.</p>\n<p>In current proposals, columns are distributed using GossipSub, with different column IDs mapping to different GossipSub topics. The column ID space is seen as a flat list, without considering any relation between topics.</p>\n<p>However, <strong>we do not have to handle the row and column ID space as a flat ID space</strong>. We can use almost any distance metric, and require nodes to keep a few neighbors with column/row ID close to them, enabling faster search. Some examples to explain how this might work:</p>\n<ul>\n<li>Circlular: if a node participates in column C, it has to keep at least N neighbors from the range <code>[C-D, C+D] mod NUM_COLS</code>, for some selected <code>D</code> and <code>N</code></li>\n<li>Hypercube style:  if a node participates in column C, it has to keep at least N neighbors from columns <code>C+2^j mod NUM_COLS</code>, for <code>j in [0..log2(NUM_COLS}-1]</code></li>\n<li>Kademlia style:  if a node participates in column C, it has to keep at least N neighbors from the set of columns we get by keeping the j MSB (most significant) bits fixed, and flipping bit j+1</li>\n</ul>\n<p>The first one (circular) is not really scalable, the last two have good scalability. However, if we keep the number of columns(and rows) sufficiently low, any of these will work good enough to find potential neighbors for any C. If we want to scale higher, we might want to pick the best one for our use.</p>\n<p>Note that the topic ID space is dense, with each ID representing a topic, and the number of nodes we have is expected to be higher than the number of topics. In a typical DHT, instead, keys and node IDs are sparse in the ID space. Having a dense ID space allows us to simplify search.</p>\n<p>It is relatively easy to extend any of the above techniques to handle both rows and columns, either by handling the column and row ID spaces as two separate ID spaces, or by defining a joint distance function.</p>\n<p>Also note that when sampling in 2D, we look for either a node in column C, or a node in row R. Any of these will suffice, making our search faster.</p>\n<h4><a name=\"ephemeral-connect-fast-connect-for-sample-retrieval-17\" class=\"anchor\" href=\"https://ethresear.ch#ephemeral-connect-fast-connect-for-sample-retrieval-17\"></a>Ephemeral Connect: fast connect for sample retrieval</h4>\n<p>Connection issues are mainly due to a protocol limitation, since we are operating over libP2P, which was not originally designed for fast connectivity. We make our life even harder by keeping a hard limit on connected peers, and by keeping that full in many nodes (it is known that some peers do not accept connections, and as a consequence others are overloaded, having their peer count full, and thus also not accepting new connections).</p>\n<p>We list a few possible solutions to this problem below:</p>\n<ul>\n<li>libP2P-ephemeralConnect: we could add a new flag to the connect request indicating a connection that is timing out fast. This can be allowed-in on the receiving side above peer count limits.</li>\n<li>Use a new primitive outside of the libp2p framework: If we want a secure encrypted protocol, but something more efficient than a libP2P modification, we can e.g. easily reuse our Discv5 DHT primitives here, making a Discv5 request in a handshake. That employs only 2 roundtrips, and a few bytes of data. Of course, this is just an example of what could be achieved. Other custom protocols with similar latency/bandwidth characteristics can be derived as well.</li>\n<li>Query forwarding: If we really do not want to add another primitive, we can introduce query forwarding. A node can take one of it’s peers according to Topic Routing, and send to it a forwardable query. We’ll get the sample in 2 hops.</li>\n</ul>\n<p>In our opinion these can solve the connectivity issues, getting us to FullDAS. However, more testing is needed.</p>\n<h3><a name=\"the-dispersal-protocol-18\" class=\"anchor\" href=\"https://ethresear.ch#the-dispersal-protocol-18\"></a>The Dispersal Protocol</h3>\n<p>Initially, we intend to use GossipSub for dispersal for several reasons. It is a publish-subscribe protocol which maps well to the erasure coding structure, creating separate topics per column (if using 1D erasure coding), or for columns and rows (if using 2D erasure coding). It is also battle-tested, already used in Ethereum for block diffusion and attestation aggregation, showing fast and reliable operation, as discussed in <a href=\"https://ethresear.ch/t/big-block-diffusion-and-organic-big-blocks-on-ethereum/17346\">our related post measuring latency distributions for block diffusion and for attestations</a>.</p>\n<p>In PeerDAS, we are in fact mapping the dispersal problem to a relatively small number of GossipSub topics. While this is a reasonable first approach, there are aspects that are specific to the dispersal problem and allow for performance optimisations.</p>\n<h4><a name=\"making-dispersal-even-more-efficient-19\" class=\"anchor\" href=\"https://ethresear.ch#making-dispersal-even-more-efficient-19\"></a>Making dispersal even more efficient</h4>\n<p>We have studied how fast blocks can be dispersed into custody using <a href=\"https://github.com/codex-storage/das-research\" rel=\"noopener nofollow ugc\">our custom DAS simulator</a>, both for the 1D and for the 2D erasure coded case. If column and row topics are correctly populated, GossipSub can disperse the block data in seconds to thousands of nodes, as shown in <a href=\"https://www.youtube.com/watch?v=M-xkP4FzYMQ\" rel=\"noopener nofollow ugc\">our presentations at EthereumZurich’23</a>, and in later presentations (<a href=\"https://www.youtube.com/watch?v=N1e_LDrKxZg\" rel=\"noopener nofollow ugc\">EDCON’23</a>, <a href=\"https://www.youtube.com/watch?v=Al7Jns8bCO4\" rel=\"noopener nofollow ugc\">EthPrague’23</a>, <a href=\"https://www.youtube.com/watch?v=pUAVEbzLHLk\" rel=\"noopener nofollow ugc\">EthCC’23</a>). However, in these talks we are speaking of GossipSub-like pub-sub protocols for a reason. GossipSub, as is, is not the best option we have. We argue that we can make a few changes to make it work well for our case. Eventually, we might also derive a custom protocol specifically targeting the dispersal use case.</p>\n<p>In what follows, we list a few of the possible differences between a generic use of GossipSub topics and dispersal, showing some of the optimizations that can be made. We will dedicate a separate post to extend these in detail.</p>\n<h5><a name=\"compared-to-generic-gossipsub-topics-das-topics-are-extremely-structured-20\" class=\"anchor\" href=\"https://ethresear.ch#compared-to-generic-gossipsub-topics-das-topics-are-extremely-structured-20\"></a>Compared to generic GossipSub topics, DAS “topics” are extremely structured</h5>\n<ul>\n<li>With the 512 row and 512 column structure, we can map any ID into 1+9 bits (1 bit for direction, 9 bits for position) or a 9+9 bits ID space.</li>\n<li>We can then use compact representations in message IDs, in HAVE lists, and in many other data structures.</li>\n<li>Given the compact representation, we can also piggyback diffusion state information easily on other messages.</li>\n</ul>\n<h5><a name=\"with-many-topics-finding-peers-can-become-hard-21\" class=\"anchor\" href=\"https://ethresear.ch#with-many-topics-finding-peers-can-become-hard-21\"></a>With many topics, finding peers can become hard</h5>\n<ul>\n<li>We address this partly by deterministic NodeID-based custody assignment,</li>\n<li>Partly by “topic routing” based on a topic ID proximity metric.</li>\n</ul>\n<h5><a name=\"das-segments-of-a-single-block-are-unordered-which-we-can-use-to-our-benefit-22\" class=\"anchor\" href=\"https://ethresear.ch#das-segments-of-a-single-block-are-unordered-which-we-can-use-to-our-benefit-22\"></a>DAS segments of a single block are unordered, which we can use to our benefit</h5>\n<ul>\n<li>We can speed up delivery by “rarest first” like techniques. Rarest-fist scheduling is used in P2P dissemination to cut the tail of the latency distribution, equalizing the diffusion of different pieces. Rarest-first requires precise “have” information, which is typically not available, but it can be approximated. For example, a technique we have already implemented in our simulators is to make sure a copy of every single segment is sent out by the block producer before sending the second copy to another neighbor. We start by sending only one copy of each segment, to one of the block producer’s column/row neighbors (randomized), seeding segments in random places in the network. Only then we send second copies to other peers. Later, one can use information collected through e.g. IHAVE bitmaps to estimate which segments are diffusing well, and which seem to be hindered, prioritizing further seeding based on this information.</li>\n<li>We might also speed up delivery by “node coloring” techniques: these techniques are about specializing nodes to prioritize the distribution of a specific subset of the ID space they custody.</li>\n</ul>\n<h5><a name=\"with-tcp-we-pay-the-cost-of-in-order-reliable-delivery-23\" class=\"anchor\" href=\"https://ethresear.ch#with-tcp-we-pay-the-cost-of-in-order-reliable-delivery-23\"></a>With TCP we pay the cost of in-order reliable delivery</h5>\n<ul>\n<li>GossipSub defaults to using in-order reliable delivery over the topic mesh, which has an inherent cost.</li>\n<li>DAS does not need ordering between segments (to the contrary, shuffling is beneficial).</li>\n<li>DAS does not need P2P link-level reliability (because of all the other reliability techniques we have: multi-path, EC, pull, cross-feeding between columns and rows).</li>\n<li>Thus, using e.g. randomized best-effort delivery can provide overall better performance.</li>\n</ul>\n<h5><a name=\"duplicate-reduction-techniques-24\" class=\"anchor\" href=\"https://ethresear.ch#duplicate-reduction-techniques-24\"></a>Duplicate reduction techniques</h5>\n<ul>\n<li>With GossipSub we pay a relatively high bandwidth cost of duplicate deliveries. Basically, every single message traverses every topic mesh link at least once. Sometimes even twice, when sent from both sides close in time (less than the one-way latency). This means that on average, every message is sent at least D/2 times, where D is the target mesh degree.</li>\n<li>These duplicates serve multiple purposes: contribute to robustness, to low latency, and to protecting sender identity. However, in DAS, we do not need to protect sender identity. Because of the traffic volume, we can’t protect it. This, and the fact that we are distributing over several topics in parallel, allow for optimizations.\n<ul>\n<li>One option is to use the IDONTWANT proposal</li>\n<li>We might also use techniques based on diffusion state, such as Push-Pull phase transition: in the first steps of the diffusion of a segment, there are almost no duplicates. Most of the duplicate load is happening in the last steps of the diffusion. One can emphasize Push at the beginning (even with an increased degree, sending to more nodes than without this technique), and change to gossip-and-pull towards the end of diffusion if the diffusion state can be estimated.</li>\n</ul>\n</li>\n</ul>\n<h3><a name=\"the-need-for-2d-encoding-availability-amplification-through-in-network-repair-25\" class=\"anchor\" href=\"https://ethresear.ch#the-need-for-2d-encoding-availability-amplification-through-in-network-repair-25\"></a>The Need for 2D Encoding: availability amplification through in-network repair</h3>\n<p>Erasure Coding is mostly presented in DAS descriptions as a tool to make sampling more robust. However, we should highlight that we can use Erasure Coding in the design for two purposes:</p>\n<ol>\n<li>to amplify sampling, and</li>\n<li>to amplify availability.</li>\n</ol>\n<p><strong>Amplifying sampling</strong> is well understood: using a code with rate R=K/N (e.g. 1/2), and assuming the data is not available, every single sampled segment reduces the chance of not finding out about the data not being available by a factor of 2. We like this exponential property, letting us reach a very low False Positive (FP) rate with only a few segments sampled. In the 2D case, the ratio is not as good as in 1D, but we still have a nice exponential property.</p>\n<p><strong>Amplifying availability</strong> is a different thing. It means that if data is available, we make it overwhelmingly available. We achieve this by using <strong>in-network repair</strong> during dispersal. This is where our erasure coding structure and dispersal network structure meet. By organising nodes according to the code, in columns and rows, and by making nodes participate in both rows and columns, we enable local repair in the EC structure during dispersal.</p>\n<p>This in-network repair is then amplifying availability, as we have shown in simulations already in our <a href=\"https://youtu.be/M-xkP4FzYMQ?t=1183\" rel=\"noopener nofollow ugc\">EthereumZuri.ch’23 talk</a>. Basically, if not enough samples are released, segment count stays below 75%, while row/coumn-based sampling (SubnetSampling), used by validators, and also by full nodes in many of our constructs, remains very low. Segment sampling also remains very low.</p>\n<p>If instead one more segment is released, the result is amplified by the dispersal structure to almost 100%.</p>\n<p>For this amplification mechanism to work, however, we need the 2D code. We cannot really do it in the 1D case, because in the 1D case, repair could only be done in nodes having K pieces, basically the whole block. In the 2D case, instead, we can repair in any single row or column, so individual nodes can repair and then send. In other words, we need a code with local repair. We can make such a code with 2D RS (there are also other code constructs with local repair capabilities, if we want).</p>\n<p>Thus, while we could map segment IDs to custody in many ways, we do it by columns and rows to enable in-network repair and availability amplification during dispersal.</p>\n<h2><a name=\"conclusions-26\" class=\"anchor\" href=\"https://ethresear.ch#conclusions-26\"></a>Conclusions</h2>\n<p>Our aim with this post was to outline the main building blocks of FullDAS, the networking stack we propose for DAS with blocks of 32MB and beyond. We have discussed new ways to disperse the block data into a P2P structure of custody, while also amplifying data availability. We have also shown the tools needed to implement fast, bandwidth-efficient, and robust sampling from this structure, using liteDAS, Topic Routing, and improved connection mechanisms.</p>\n<p>At this point it might be evident to many that we are building something similar to a DHT, a point raised a few times in the past: the difference between dispersal to custody and sampling, and the generic concept of a DHT is not that big. With FullDAS we are in fact building a special purpose distributed storage structure, with custom seeding, repair, and retrieval, each optimized for the DAS encoding and for the DAS purpose.</p>\n<p>Some of the above techniques have already been evaluated in simulation, while others are work in progress. We have written two simulators for this purpose:</p>\n<ul>\n<li><a href=\"https://github.com/codex-storage/das-research\" rel=\"noopener nofollow ugc\">one with a high-level of abstraction</a>, written in Python, for large scale experiments. Here protocol behaviour is approximated, but a larger parameter space can be explored.</li>\n<li><a href=\"https://github.com/cskiraly/das-simulator-nim\" rel=\"noopener nofollow ugc\">one with a lower level abstraction</a>, using directly the nim-libP2P stack. We already used this simulator to simulate diffusion with a modified GossipSub implementation with 128 columns and 128 rows, and to run sampling from this structure to 1000s of nodes.</li>\n</ul>\n<p>Both of these are work in progress, and we plan to release further posts as the refinement of FullDAS protocols and the evaluation goes on.</p>\n<h2><a name=\"references-27\" class=\"anchor\" href=\"https://ethresear.ch#references-27\"></a>References</h2>\n<p><a href=\"https://notes.ethereum.org/@dankrad/new_sharding\" rel=\"noopener nofollow ugc\">The original Danksharding proposal</a></p>\n<p><a href=\"https://ethresear.ch/t/lossydas-lossy-incremental-and-diagonal-sampling-for-data-availability/18963#sampling-over-the-das-encoding-3\">The DAS data structure</a></p>\n<p><a href=\"https://ethresear.ch/t/lossydas-lossy-incremental-and-diagonal-sampling-for-data-availability/18963\">Our previous post on sampling techniques: LossyDAS, IncrementalDAS, and DiDAS</a></p>\n<p><a href=\"https://ethresear.ch/t/scalability-limitations-of-kademlia-dhts-when-enabling-data-availability-sampling-in-ethereum/18732\">Scalability limitations of using Kademlia DHTs for DAS</a></p>\n<p><a href=\"https://ethresear.ch/t/peerdas-a-simpler-das-approach-using-battle-tested-p2p-components/16541\">The PeerDAS proposal</a></p>\n<p><a href=\"https://ethresear.ch/t/subnetdas-an-intermediate-das-approach/17169\">The SubnetDAS proposal</a></p>\n<p><a href=\"https://ethresear.ch/t/big-block-diffusion-and-organic-big-blocks-on-ethereum/17346\">Our post on measuring GossipSub latency distribution, both when used for blocks and when used for attestations</a></p>\n<p><a href=\"https://github.com/ethereum/consensus-specs/pull/3623#issuecomment-2046558155\" rel=\"noopener nofollow ugc\">Part of PeerDAS specification discussions about peer search and connectivity issues</a></p>\n<p><a href=\"https://dankradfeist.de/ethereum/2021/09/30/proofs-of-custody.html\" rel=\"noopener nofollow ugc\">Proof Of Custody</a></p>\n<p>Our previous presentations on DAS:</p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=M-xkP4FzYMQ\" rel=\"noopener nofollow ugc\">EthereumZurich’23</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=N1e_LDrKxZg\" rel=\"noopener nofollow ugc\">EDCON’23</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=Al7Jns8bCO4\" rel=\"noopener nofollow ugc\">EthPrague’23</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=pUAVEbzLHLk\" rel=\"noopener nofollow ugc\">EthCC’23</a>)</li>\n</ul>\n<p>Our DAS simulators:</p>\n<ul>\n<li><a href=\"https://github.com/codex-storage/das-research\" rel=\"noopener nofollow ugc\">DAS simulator with a high-level of abstraction</a>, written in Python, for large scale experiments</li>\n<li><a href=\"https://github.com/cskiraly/das-simulator-nim\" rel=\"noopener nofollow ugc\">DAS simulator with a lower level abstraction</a>, using directly the nim-libP2P stack over Shadow</li>\n</ul>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/fulldas-towards-massive-scalability-with-32mb-blocks-and-beyond/19529\">Read full topic</a></p>","link":"https://ethresear.ch/t/fulldas-towards-massive-scalability-with-32mb-blocks-and-beyond/19529","pubDate":"Sat, 11 May 2024 15:29:25 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19529"},"source":{"@url":"https://ethresear.ch/t/fulldas-towards-massive-scalability-with-32mb-blocks-and-beyond/19529.rss","#text":"FullDAS: towards massive scalability with 32MB blocks and beyond"}},{"title":"MACI with mostly-off-chain \"happy path\"","dc:creator":"vbuterin","category":"Cryptography","description":"<p><em>For background, see: <a href=\"https://ethresear.ch/t/minimal-anti-collusion-infrastructure/5413\" class=\"inline-onebox\">Minimal anti-collusion infrastructure</a></em></p>\n<p>One of the challenges of MACI is that it requires data to be submitted on-chain for each vote, which incurs significant transaction fees. This post suggests a mechanism by which votes can be off-chain by default; a vote would only need to go on-chain if the coordinator is actively attempting to censor voters.</p>\n<p>When a user makes a vote, take the following steps:</p>\n<ol>\n<li>The user locally generates their vote, as in regular MACI</li>\n<li>The user sends their vote to the coordinator</li>\n<li>The coordinator replies with a signature, specifying which position of the next batch the user’s vote will be included at</li>\n<li>When the coordinator submits their next batch, they submit only a hash to the chain. The hash must be the Merkle root of all votes that have been sent to the coordinator since the previous round. The coordinator is also required to publish the full set of votes (eg. on IPFS).</li>\n</ol>\n<p>The ZK-SNARK enforces that the final vote results are the result of processing all submitted votes, including votes that have been published via this hash mechanism.</p>\n<p>Users have access to two extra features:</p>\n<ol>\n<li>They have the ability to submit a vote directly to chain. The coordinator is forced to process both types of votes (included via hash, and included directly)</li>\n<li>If a user has a cryptographically signed promise, they can publish that promise on chain as a challenge. Any future message that the coordinator submits (a batch or the final result) must come with a SNARK proving that the correct votes have been included at the provided challenge positions.</li>\n</ol>\n<p>This ensures the following properties:</p>\n<ul>\n<li>Assuming an honest coordinator, onchain costs go down to O(1) per batch period</li>\n<li>Censorship resistance is maintained, because users can go onchain worst-case</li>\n<li>We mitigate attacks where the coordinator pretends to accept a vote, but then fails to include it, hoping that most voters will not notice or re-open any kind of software daemon, by providing signatures:\n<ul>\n<li>If a user fails to get a signature immediately, they go straight to voting onchain.</li>\n<li>If a user gets a signature, and they do come back to check after the batch, they can check on IPFS (or ask the coordinator) for the Merkle branch associated with their vote; if it does not match their signature, they can publish their signature to chain, which effectively halts the entire vote and prevents it from giving a result. Hence, trying to censor even one voter becomes extremely risky for a coordinator.</li>\n</ul>\n</li>\n</ul>\n            <p><small>9 posts - 5 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/maci-with-mostly-off-chain-happy-path/19527\">Read full topic</a></p>","link":"https://ethresear.ch/t/maci-with-mostly-off-chain-happy-path/19527","pubDate":"Sat, 11 May 2024 10:47:47 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19527"},"source":{"@url":"https://ethresear.ch/t/maci-with-mostly-off-chain-happy-path/19527.rss","#text":"MACI with mostly-off-chain \"happy path\""}},{"title":"Based proposer commitments - Ethereum’s marketplace for proposer commitments","dc:creator":"DrewVanderWerff","category":"Block proposer","description":"<p><em>As always, humbled by the Ethereum community’s willingness to review / provide feedback. Thank you <a href=\"https://twitter.com/barnabemonnot\" rel=\"noopener nofollow ugc\">Barnabe</a>, <a href=\"https://twitter.com/cshg0x\" rel=\"noopener nofollow ugc\">Chris</a>, <a href=\"https://twitter.com/ConorMcMenamin9\" rel=\"noopener nofollow ugc\">Conor</a>, <a href=\"https://twitter.com/ellierdavidson\" rel=\"noopener nofollow ugc\">Ellie</a>, <a href=\"https://twitter.com/jasnoodle\" rel=\"noopener nofollow ugc\">Jason</a>, <a href=\"https://twitter.com/mempirate\" rel=\"noopener nofollow ugc\">Jonas</a>, <a href=\"https://twitter.com/drakefjustin\" rel=\"noopener nofollow ugc\">Justin</a>, <a href=\"https://twitter.com/_julianma\" rel=\"noopener nofollow ugc\">Julian</a>, <a href=\"https://twitter.com/kubimensah\" rel=\"noopener nofollow ugc\">Kubi</a>, <a href=\"https://twitter.com/0xkydo\" rel=\"noopener nofollow ugc\">Kydo</a>, <a href=\"https://twitter.com/mikeneuder\" rel=\"noopener nofollow ugc\">Mike</a>, <a href=\"https://twitter.com/pascalstichler\" rel=\"noopener nofollow ugc\">Pascal</a>, and <a href=\"https://twitter.com/sjerniganIV\" rel=\"noopener nofollow ugc\">Sam</a> for the feedback and review.</em></p>\n<p><strong>Introduction:</strong></p>\n<p>Over the last year, proposer commitments have become more widely discussed. I personally became proposer-commitment-pilled on the back of the <a href=\"https://ethresear.ch/t/based-rollups-superpowers-from-l1-sequencing/15016\">based sequencing</a> / <a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">preconf</a> posts and <a href=\"https://docs.google.com/document/d/1FG3nKQdUNb_YHCp_IzSDkC_r7A6HOT11O2YNUjCX-6s/edit#heading=h.2whbk0my4lq5\" rel=\"noopener nofollow ugc\">weekly calls</a> being held by Justin as well as discussions and <a href=\"https://frontier.tech/ethereums-blockspace-future\" rel=\"noopener nofollow ugc\">research</a> about blockspace futures. With this interest came the dive down the rabbit hole and as always within the Ethereum community, I found many others already there or willing to join. This post I hope contributes to the ideas already out there and continues to push the discussion around proposer commitments and engagement across the community.</p>\n<p>Below we introduce a concept focused on standardizing the last mile of communication between a proposer and a third party and how proposers may register and make / receive commitments. We see proposer commitments as another promising evolution of Ethereum’s original core vision that will expand the infinite garden to not just be THE marketplace for credible blockspace, but also THE marketplace for credible proposer commitments. We outline some background and motivation, design principles, an initial high-level design, and some open questions. We plan to continue to expand on this with more detailed specs as we gather more feedback and input!</p>\n<p><strong></strong></p><div class=\"lightbox-wrapper\"><strong><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/f/9/f9246140c4556cd087cf9de5c5a0f5e363ada4b4.jpeg\" data-download-href=\"https://ethresear.ch/uploads/default/f9246140c4556cd087cf9de5c5a0f5e363ada4b4\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/f/9/f9246140c4556cd087cf9de5c5a0f5e363ada4b4_2_475x316.jpeg\" alt=\"\" data-base62-sha1=\"zy0PGLz0KLAEgJlSwhqSwUcfetK\" width=\"475\" height=\"316\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/f/9/f9246140c4556cd087cf9de5c5a0f5e363ada4b4_2_475x316.jpeg, https://ethresear.ch/uploads/default/optimized/3X/f/9/f9246140c4556cd087cf9de5c5a0f5e363ada4b4_2_712x474.jpeg 1.5x, https://ethresear.ch/uploads/default/original/3X/f/9/f9246140c4556cd087cf9de5c5a0f5e363ada4b4.jpeg 2x\" data-dominant-color=\"AF938A\"></a></strong></div><p></p>\n<p><strong>TL;DR:</strong></p>\n<ul>\n<li>Proposer commitments have been an important part of Ethereum’s history and could continue to be a powerful unlock for Ethereum</li>\n<li>The potential impact of proposer commitments are best captured in a quote from Barnabe’s <a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\" rel=\"noopener nofollow ugc\">recent post</a>; the “…proposer creates the specs, or the template, by which the resulting block must be created, and the builders engaged by the proposer are tasked with delivering the block according to its specifications”</li>\n<li>Over the last year, there have been multiple ideas around proposer commitments. For instance, even in a short period, we have seen multiple implementations of proposer commitments related to preconfs</li>\n<li>While powerful, if multiple standards arise around how proposers register and make / receive commitments, we run the risk of fragmentation that could increase risks to Ethereum</li>\n<li>We present a potential design referred to as “Commitment Boost”[1] inspired by research around PEPC, EigenLayer, and the broader Ethereum community</li>\n<li>This envisions leveraging existing pipes to allow proposers to register and make / receive commitments and remain fully backward compatible</li>\n<li>The principles we embrace for this require open source / development in the open, contemplate modularity and self-containment for safety, integrate a robust suite of testing / off-the-shelf alerts / data APIs, and be performant / efficient</li>\n<li>We end with a few items around risks / additional questions we want to engage with the community on</li>\n</ul>\n<p>Last, we want to note that this post is focused on the last mile of communication to allow proposers to register / send / receive commitments. We do not discuss how the proposer commitment protocols may work or how they may be enforced.</p>\n<p><strong>Related Work:</strong></p>\n<ul>\n<li><a href=\"https://ethresear.ch/t/unbundling-pbs-towards-protocol-enforced-proposer-commitments-pepc/13879\">Unbundling PBS</a></li>\n<li><a href=\"https://efdn.notion.site/PEPC-FAQ-0787ba2f77e14efba771ff2d903d67e4\" rel=\"noopener nofollow ugc\">PEPC FAQ</a></li>\n<li><a href=\"https://hackmd.io/@bchain/BJkarrEWp\" rel=\"noopener nofollow ugc\">PEPC-Boost</a></li>\n<li><a href=\"https://ethresear.ch/t/pepc-dvt-pepc-with-no-changes-to-the-consensus-protocol/16514\">PEPC-DVT</a></li>\n<li><a href=\"https://ethresear.ch/t/the-preconfirmation-gateway-unlocking-preconfirmations-from-user-to-preconfer/18812\">Preconfirmation Gateway</a></li>\n<li><a href=\"https://ethresear.ch/t/based-preconfirmations/17353\">Based preconfirms</a><br>\n<a href=\"https://www.youtube.com/watch?v=2IK136vz-PM\" rel=\"noopener nofollow ugc\">Presentation </a>on preconfs and <a href=\"https://docs.google.com/presentation/d/1v429N4jdikMIWWkcVwfjMlV2LlOXSawFCMKoBnZVDNU/edit#slide=id.p\" rel=\"noopener nofollow ugc\">slides</a></li>\n<li><a href=\"https://mirror.xyz/barnabe.eth/QJ6W0mmyOwjec-2zuH6lZb0iEI2aYFB9gE-LHWIMzjQ\" rel=\"noopener nofollow ugc\">More Pictures about Proposers and Builders</a></li>\n<li><a href=\"https://ethresear.ch/t/towards-an-implementation-of-based-preconfirmations-leveraging-restaking/19211\">Preconfirm protocol</a></li>\n<li><a href=\"https://ethresear.ch/t/uncrowdable-inclusion-lists-the-tension-between-chain-neutrality-preconfirmations-and-proposer-commitments/19372\">Chain Neutrality and Uncrowdable Inclusion Lists</a></li>\n<li><a href=\"https://ethresear.ch/t/grounded-relay-superpowers-from-relay-coordination/18601\">Grounded Relay</a></li>\n</ul>\n<p><strong>Background:</strong></p>\n<p>Nearly half a decade ago, <a href=\"https://arxiv.org/abs/1904.05234\" rel=\"noopener nofollow ugc\">Flashboys 2.0</a> was published highlighting how arbitrage bots were challenging the promise of blockchains. On the back of this, some of the authors and community members started a research collective to provide solutions to tackle these challenges. In the end, these efforts created a product more broadly known as <a href=\"https://github.com/flashbots/mev-boost\" rel=\"noopener nofollow ugc\">MEV-boost</a>.</p>\n<p>MEV-boost is a middleware that allows the proposer to make a wholesale commitment that outsources block building to a sophisticated actor called a block builder. In return, these block builders pack a block to earn the highest fee for the proposer. Today, <a href=\"https://mevboost.pics/\" rel=\"noopener nofollow ugc\">over 90% of blocks</a> are built with proposer commitments.</p>\n<p><strong>Proposer Commitments:</strong></p>\n<p>On the back of a few developments[2] and some research by the EF[3], the concept of proposer commitments has begun to be more commonly discussed spurring the question; could proposers make commitments that would unlock a significant design space for Ethereum? And, could this be a mechanism to allow validators “…to provide input into block production, even when they decide to delegate building.”[4] In the last year, multiple proposals have come forward that rely on or could greatly benefit from proposer commitments, some examples include:</p>\n<ul>\n<li>Inclusion lists: Proposer commitment where part of the block / a set of transactions will be included / can’t be censored or removed by a third party, including the proposer</li>\n<li>Preconf: Proposer commitment to in advance, guarantee inclusion of data / certain transaction or group of transactions in a block</li>\n<li>Partial block auctions: Proposer commitment to auction off the top-of-block and the rest-of-block</li>\n<li>Blockspace / blob futures: Proposer commitment to sell part of their block now, but deliver that part of the block in the future</li>\n</ul>\n<p>The proposals range in complexity but are underpinned by the same simple idea–a proposer’s commitment to do something with or for a third party. We also note that proposers may not need to make commitments at this level of granularity (i.e., continue to use wholesale block auctions). However, we believe this is an avenue worth exploring as it may help preserve things like chain neutrality “by allowing them to provide input into block production, even when they decide to delegate building”[4] and if they choose, give some autonomy back to the proposer.</p>\n<p><strong>Challenge:</strong></p>\n<p>On the surface, this all seems great and is an incredibly exciting development. But, in the undercurrents, we are potentially on a perilous path if we can’t agree on a standard of how proposers register and make / receive commitments. We see multiple risks including, but not limited to:</p>\n<ul>\n<li>Increased fragmentation: While diversity of standards can create unlock more innovation, multiple standards (particularly in the last mile of communication) could compromise the security integrity of the entire Ethereum network through fragmentation of how proposer commitment protocols speak to proposers (i.e., proposers may need to make client adjustments for each variation of proposer commitments)</li>\n<li>Development complexity: If there is no standard, teams may more commonly make client adjustments to opt into proposer commitments. This could exponentially inflate the burden on core developers tasked with executing / testing major network upgrades increasing risks for the network around hard forks</li>\n<li>Limited transparency: With multiple software and standards, transparency around what proposers are opting into as well as bugs and taking quick actions may be challenging when something does go wrong</li>\n</ul>\n<p>These risks are likely to only increase as more and more proposer commitments get proposed and adopted. We also note that longer-term there are potential ideas to enshrine various mechanisms helping to reduce these risks.</p>\n<p><strong>Proposal:</strong></p>\n<p>We propose an out-of-protocol, open-source public good that is backward compatible to help standardize the communication mechanism for the last mile of proposers’ commitments. The goal is to develop, adopt, and then sustain one standard software that will limit fragmentation and reduce complexity for core devs. We currently call this Commitment Boost.</p>\n<p><strong>Design Principles:</strong></p>\n<p>Below are a few design principles when initially envisioning Commitment Boost.</p>\n<ul>\n<li>Open source / open development: This should be developed in the open and under open source licensing such as MIT / Apache-2.0</li>\n<li>Safety and reducing risks: Should be backwards compatible not changing existing pipes that support current proposer commitments and be built to isolate each proposer commitment. We also note that Commitment Boost should be continuously managed for future forks / upgrades in the Ethereum ecosystem</li>\n<li>Same overhead as today: The software will not have more overhead to run than existing proposer commitments (and ideally it is even more efficient!). Note: there may be additional overhead for facilitating the actual proposer commitments, but it is not the focus of this discussion and will be up to the proposer commitment protocol itself around how to potentially outsource any complexity</li>\n<li>Transparency: There will need to be robust functionality to understand which commitments a proposer is opting into as well as performing rigorous testing to quickly identify bugs. There should also be data APIs to increase information and transparency for the community and to strengthen alerting systems when bugs happen</li>\n</ul>\n<p><strong>Initial High-Level Potential Design of Commitment Boost:</strong></p>\n<ul>\n<li>Proposer wishing to register for commitments runs Commitment Boost. This will be backward compatible with consensus clients using the same messaging mechanisms that exist today. Commitment Boost is just focused on standardizing the last mile communication between a proposer choosing to register and then send / receive messages to / from a proposer commitment protocol</li>\n<li>Once running Commitment Boost, the proposer will need to register for each commitment they wish to make</li>\n<li>Each proposer commitment across the Commitment Boost stack is likely to be modular and isolated. The rationale that if there is a bug in one module this will not impact the rest of the proposer commitments / block construction. We also note that safeguards should be put in place to protect consensus (i.e., fallback mechanisms to local block building etc.)</li>\n</ul>\n<p></p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://ethresear.ch/uploads/default/original/3X/4/3/43f7a19652088da9f139f178060df90293cebbf0.png\" data-download-href=\"https://ethresear.ch/uploads/default/43f7a19652088da9f139f178060df90293cebbf0\" title=\"\"><img src=\"https://ethresear.ch/uploads/default/optimized/3X/4/3/43f7a19652088da9f139f178060df90293cebbf0_2_531x309.png\" alt=\"\" data-base62-sha1=\"9HgxlLbVleMaHdQv1FfJFNrhzvq\" width=\"531\" height=\"309\" role=\"presentation\" srcset=\"https://ethresear.ch/uploads/default/optimized/3X/4/3/43f7a19652088da9f139f178060df90293cebbf0_2_531x309.png, https://ethresear.ch/uploads/default/optimized/3X/4/3/43f7a19652088da9f139f178060df90293cebbf0_2_796x463.png 1.5x, https://ethresear.ch/uploads/default/original/3X/4/3/43f7a19652088da9f139f178060df90293cebbf0.png 2x\" data-dominant-color=\"B3BAB2\"></a></div><br>\n<strong>Near-Term Focus:</strong><p></p>\n<p>As noted above, Commitment Boost should lean towards being modular to potentially allow any proposer commitment. However, we initially plan to focus on designing standards for Commitment Boost to be backward compatible and to support commitments such as preconf protocols and inclusion lists. If other projects require proposer commitments and are interested in thinking through designs please reach out.</p>\n<p><strong>Open Questions:</strong></p>\n<p>Below is a list of questions that we need to consider and engage around. We note that some of these are not specific to Commitment Boost, but proposer commitments more broadly.</p>\n<ul>\n<li>Added risks: While there are general risks and questions on enabling proposer commitment protocols, we are particularly interested to engage on additional risks / the initial high-level design of Commitment Boost and whether the design can reduce risks to any commitment potentially impacting consensus</li>\n<li>Standardization is not always good: While in most cases standardization helps align the market and reduces the risk of fragmentation, it can also limit innovation and create “tech debt” that can confine the design space given how early we are and what we know about proposer commitments today</li>\n<li>How modules are added: It is not clear the best path forward around a process, or lack of, for how new proposer commitment modules are added</li>\n<li>Coordination during Ethereum upgrades: Likely will need to coordinate a group to ensure there is a process to perform testing / changes related to forks</li>\n<li>Upgrades to commitment boost: Similar to the point directly above, if we identify some upgrades needed we will need to test and manage any code changes required</li>\n<li>Economics: Are there any considerations around how proposers are paid for committing and how this could impact Ethereum / could these be internalized to Ethereum in the future</li>\n<li>Centralization: What are the impacts Commitment Boost could have on centralization and does it impact at-home stakers or geographical dispersion of validators</li>\n</ul>\n<p><strong>Conclusion:</strong></p>\n<p>The garden of Ethereum is infinite and the potential for proposer commitments could set off a wave of ways to use Ethereum. Proposer commitments could enable things like preconfs that are critical for based sequencing as well as other applications not currently envisioned. To help the community and entrepreneurs build on Ethereum, Commitment Boost is an initial idea to standardize the way proposers register and send / receive commitments. We look forward to discussing, refining, developing, and working with the community on proposer commitments. We plan to keep gathering feedback on the back of this post and continue to work with the community to push this idea as well as assist in other efforts around proposer commitments.</p>\n<p><strong>References:</strong></p>\n<p>[1] Fun Fact: The initials for Commitment Boost are shared with <a href=\"https://en.wikipedia.org/wiki/Citizens_band_radio\" rel=\"noopener nofollow ugc\">CB Radios</a>, “a system allowing short-distance one-to-many bidirectional voice communication among individuals.”</p>\n<p>[2] With the excitement around <a href=\"https://ethresear.ch/t/based-rollups-superpowers-from-l1-sequencing/15016\">based sequencing</a> introduced by Justin Drake, there has been a push <a href=\"https://www.youtube.com/watch?v=XSsKFINj710\" rel=\"noopener nofollow ugc\">by a few teams</a> to build proposer commitments such as preconfs. Developments like EigenLayer and restaking generally have also expanded developers / teams imagination of what proposers can make commitments around.</p>\n<p>[3] Generally, we are referring to PEPC and inclusion lists research as noted in the “Related Work” section of this post.</p>\n<p>[4]<a href=\"https://ethresear.ch/t/uncrowdable-inclusion-lists-the-tension-between-chain-neutrality-preconfirmations-and-proposer-commitments/19372\" class=\"inline-onebox\">Uncrowdable Inclusion Lists: The Tension between Chain Neutrality, Preconfirmations and Proposer Commitments</a></p>\n            <p><small>2 posts - 2 participants</small></p>\n            <p><a href=\"https://ethresear.ch/t/based-proposer-commitments-ethereum-s-marketplace-for-proposer-commitments/19517\">Read full topic</a></p>","link":"https://ethresear.ch/t/based-proposer-commitments-ethereum-s-marketplace-for-proposer-commitments/19517","pubDate":"Thu, 09 May 2024 19:58:17 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19517"},"source":{"@url":"https://ethresear.ch/t/based-proposer-commitments-ethereum-s-marketplace-for-proposer-commitments/19517.rss","#text":"Based proposer commitments - Ethereum’s marketplace for proposer commitments"}},{"title":"[Research report] Allowing validators to share client information privately---a project by Nethermind Research","dc:creator":"jorem321","category":"Consensus","description":"<p>Dear ethresear.ch readers,</p>\n<p>As part of the Ethereum Foundation’s <a href=\"https://esp.ethereum.foundation/data-collection-grants\" rel=\"noopener nofollow ugc\">Data Collection Grants Round 2023 </a> which ran between last September and October, an interdisciplinary team involving Nethermind Research and Nethermind core developers received a grant to work on the project “Allowing validators to provide client information privately”. Below, we attach our submission in fulfillment of the objectives behind the project. In this deliverable, we have provided the necessary motivation and background for the problem of measuring client diversity, which we then use to propose and analyze three different approaches for validators to privately share their client diversity data—each with their strengths and weaknesses.</p>\n<p><a href=\"https://nethermind.notion.site/Allowing-validators-to-provide-client-information-privately-bfea6436bfe246d28afdcda125d9049c\" rel=\"noopener nofollow ugc\">Deliverable: Allowing validators to provide client information privately </a></p>\n<h2><a name=\"executive-summary-of-the-proposed-approaches-1\" class=\"anchor\" href=\"https://ethresear.ch#executive-summary-of-the-proposed-approaches-1\"></a>Executive summary of the proposed approaches.</h2>\n<p>We briefly summarize the key ideas behind the three approaches before. The reader is referred to the deliverable for a full exposition.</p>\n<h3><a name=\"h-1-client-diversity-data-on-the-graffiti-field-2\" class=\"anchor\" href=\"https://ethresear.ch#h-1-client-diversity-data-on-the-graffiti-field-2\"></a>1. Client diversity data on the graffiti field</h3>\n<p>As the first approach, we have discussed a method for measuring validator client diversity by posting data directly on the graffiti field. We note that this approach has been discussed by the community before. We have outlined necessary changes, such as creating an EngineAPI method for CL clients to retrieve EL client details and agreeing on encoding standards for the data. We have also discussed challenges with this method including dealing with parties that do not participate, multiplexed architectures, and distinguishing between proposer and attester duties.</p>\n<p>We have also discussed statistical significance, i.e., how many client data reports are needed to accurately estimate the client distribution from graffiti field data alone. We confirmed that the analyzed method can reach statistical significance quickly (in the order of days) assuming a reasonable participation rate. We discuss these assertions quantitatively in the deliverable.</p>\n<p>Finally, we have assessed the feasibility of anonymizing graffiti field reports, concluding that existing methods like encryption or zero-knowledge proofs are impractical to use due to the sequential nature of data collection and the limited space in the graffiti field.</p>\n<h3><a name=\"h-2-allowing-nodes-to-listen-to-client-diversity-data-through-the-gossip-network-using-nullifiers-to-hide-the-identity-of-validators-3\" class=\"anchor\" href=\"https://ethresear.ch#h-2-allowing-nodes-to-listen-to-client-diversity-data-through-the-gossip-network-using-nullifiers-to-hide-the-identity-of-validators-3\"></a>2. Allowing nodes to listen to client diversity data through the gossip network + using nullifiers to hide the identity of validators</h3>\n<p>As the second approach, we have examined a potential modification to Ethereum’s P2P layer to enable crawlers to obtain validator distribution for client diversity. We have explored using a dedicated channel in the GossipSub protocol to share client diversity data efficiently. We have proposed a method that periodically selects validators at random to submit their client diversity data, which is then shared through GossipSub. Each validator forms its client diversity data into a <strong>ClientData</strong> object and publishes it via a designated topic. Then, the nodes in this designated topic can receive those objects, verify their authenticity, and aggregate them for the final result. We have also discussed the challenges around this method, particularly concerning network overload.</p>\n<p>Furthermore, we have explored anonymizing P2P reports to ensure validators’ privacy. We have discussed potential approaches such as encrypting client data or anonymizing the voters’ identities using nullifiers and zero-knowledge proofs. We have proposed an approach that uses BLS signatures, nullifiers, and zero-knowledge proofs to hide validators’ identities and prevent double submissions. Validators submit encoded client data along with proofs to a P2P network. We have discussed potential deanonymization vectors such as P2P traffic analysis and proposed mitigation strategies like mixnets and approaches based on Dandelion and Dandelion++.</p>\n<p>Implementing these strategies may face challenges such as increased latency and complexity. We have stressed our interest in community input regarding the concern level over potential attack vectors and the feasibility of mitigation strategies.</p>\n<h3><a name=\"h-3-dedicated-voting-scheme-for-client-data-collection-4\" class=\"anchor\" href=\"https://ethresear.ch#h-3-dedicated-voting-scheme-for-client-data-collection-4\"></a>3. Dedicated voting scheme for client data collection</h3>\n<p>As the third and last approach, we have proposed a voting protocol aimed at collecting data from validators securely and verifiably, avoiding issues like obscurity and centralization found in existing survey methods. We have examined the use of public bulletin boards (PBBs) or blockchains for collecting votes, drawing insights from Vitalik’s analysis of blockchains’ limitations in elections and the advantages of using blockchains as bulletin boards. Due to its decentralization and cost-efficiency, we have proposed to utilize a blockchain, specifically Ethereum’s Holesky Testnet. Regarding how validators submit their votes, we have considered having validators encrypt their client data and share it through a P2P network, and using a trusted committee—called decryption authorities—to receive the encrypted data, submit the received data to a smart contract, and finally, aggregate and decrypt the encrypted client data.</p>\n<p>This third method addresses some of the traffic analysis concerns in the second method by leveraging homomorphic encryption of the votes, which requires a trusted committee.</p>\n<h1><a name=\"a-call-for-feedback-5\" class=\"anchor\" href=\"https://ethresear.ch#a-call-for-feedback-5\"></a>A call for feedback</h1>\n<p>As the next stage of this research project, we look forward to disseminating and discussing the aforementioned approaches through various channels, including this forum and community calls. Thus, we welcome discussions with the Ethereum community to gauge the impressions on the most suitable approach. For example,</p>\n<ul>\n<li>In the deliverable above, we have provided a rubric that ranks the downsides of each method according to their severity as perceived by the team. From the team’s perspective, this analysis positions the second method as the most favorable. Should this rubric be challenged in any way?</li>\n<li>Does the reader see any additional concerns with the proposed methods?</li>\n<li>Are there any variations or suggestions the reader can think of to build upon the methods herein?</li>\n</ul>\n<p>We look forward to your impressions and comments!</p>\n            <p><small>1 post - 1 participant</small></p>\n            <p><a href=\"https://ethresear.ch/t/research-report-allowing-validators-to-share-client-information-privately-a-project-by-nethermind-research/19506\">Read full topic</a></p>","link":"https://ethresear.ch/t/research-report-allowing-validators-to-share-client-information-privately-a-project-by-nethermind-research/19506","pubDate":"Thu, 09 May 2024 00:58:51 +0000","discourse:topicPinned":"No","discourse:topicClosed":"No","discourse:topicArchived":"No","guid":{"@isPermaLink":"false","#text":"ethresear.ch-topic-19506"},"source":{"@url":"https://ethresear.ch/t/research-report-allowing-validators-to-share-client-information-privately-a-project-by-nethermind-research/19506.rss","#text":"[Research report] Allowing validators to share client information privately---a project by Nethermind Research"}}]}}}